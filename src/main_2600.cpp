// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainAudioEffects
#include "GlobalNamespace/MainAudioEffects.hpp"
// Including type: UnityEngine.AudioLowPassFilter
#include "UnityEngine/AudioLowPassFilter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kDefaultCutoffFrequency
int GlobalNamespace::MainAudioEffects::_get_kDefaultCutoffFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainAudioEffects::_get_kDefaultCutoffFrequency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainAudioEffects", "kDefaultCutoffFrequency"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kDefaultCutoffFrequency
void GlobalNamespace::MainAudioEffects::_set_kDefaultCutoffFrequency(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainAudioEffects::_set_kDefaultCutoffFrequency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainAudioEffects", "kDefaultCutoffFrequency", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kLowPassCutoffFrequency
int GlobalNamespace::MainAudioEffects::_get_kLowPassCutoffFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainAudioEffects::_get_kLowPassCutoffFrequency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "MainAudioEffects", "kLowPassCutoffFrequency"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kLowPassCutoffFrequency
void GlobalNamespace::MainAudioEffects::_set_kLowPassCutoffFrequency(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainAudioEffects::_set_kLowPassCutoffFrequency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainAudioEffects", "kLowPassCutoffFrequency", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioLowPassFilter _audioLowPassFilter
UnityEngine::AudioLowPassFilter*& GlobalNamespace::MainAudioEffects::dyn__audioLowPassFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainAudioEffects::dyn__audioLowPassFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioLowPassFilter"))->offset;
  return *reinterpret_cast<UnityEngine::AudioLowPassFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _smooth
float& GlobalNamespace::MainAudioEffects::dyn__smooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainAudioEffects::dyn__smooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _targetFrequency
float& GlobalNamespace::MainAudioEffects::dyn__targetFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainAudioEffects::dyn__targetFrequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetFrequency"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MainAudioEffects.Start
void GlobalNamespace::MainAudioEffects::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainAudioEffects::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MainAudioEffects.LateUpdate
void GlobalNamespace::MainAudioEffects::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainAudioEffects::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MainAudioEffects.ResumeNormalSound
void GlobalNamespace::MainAudioEffects::ResumeNormalSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainAudioEffects::ResumeNormalSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResumeNormalSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MainAudioEffects.TriggerLowPass
void GlobalNamespace::MainAudioEffects::TriggerLowPass() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainAudioEffects::TriggerLowPass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TriggerLowPass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MockAudioTimeSource
#include "GlobalNamespace/MockAudioTimeSource.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single <songTime>k__BackingField
float& GlobalNamespace::MockAudioTimeSource::dyn_$songTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockAudioTimeSource::dyn_$songTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<songTime>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <lastFrameDeltaSongTime>k__BackingField
float& GlobalNamespace::MockAudioTimeSource::dyn_$lastFrameDeltaSongTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockAudioTimeSource::dyn_$lastFrameDeltaSongTime$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<lastFrameDeltaSongTime>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MockAudioTimeSource.get_songTime
float GlobalNamespace::MockAudioTimeSource::get_songTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockAudioTimeSource::get_songTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MockAudioTimeSource.set_songTime
void GlobalNamespace::MockAudioTimeSource::set_songTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockAudioTimeSource::set_songTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_songTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MockAudioTimeSource.get_lastFrameDeltaSongTime
float GlobalNamespace::MockAudioTimeSource::get_lastFrameDeltaSongTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockAudioTimeSource::get_lastFrameDeltaSongTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lastFrameDeltaSongTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MockAudioTimeSource.set_lastFrameDeltaSongTime
void GlobalNamespace::MockAudioTimeSource::set_lastFrameDeltaSongTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockAudioTimeSource::set_lastFrameDeltaSongTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lastFrameDeltaSongTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MockAudioTimeSource.get_songEndTime
float GlobalNamespace::MockAudioTimeSource::get_songEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockAudioTimeSource::get_songEndTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MockAudioTimeSource.get_isReady
bool GlobalNamespace::MockAudioTimeSource::get_isReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockAudioTimeSource::get_isReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MockAudioTimeSource.Update
void GlobalNamespace::MockAudioTimeSource::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MockAudioTimeSource::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: INoteCutSoundEffectDidFinishEvent
#include "GlobalNamespace/INoteCutSoundEffectDidFinishEvent.hpp"
// Including type: NoteCutSoundEffect
#include "GlobalNamespace/NoteCutSoundEffect.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: INoteCutSoundEffectDidFinishEvent.HandleNoteCutSoundEffectDidFinish
void GlobalNamespace::INoteCutSoundEffectDidFinishEvent::HandleNoteCutSoundEffectDidFinish(GlobalNamespace::NoteCutSoundEffect* noteCutSoundEffect) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::INoteCutSoundEffectDidFinishEvent::HandleNoteCutSoundEffectDidFinish");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteCutSoundEffectDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteCutSoundEffect)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteCutSoundEffect);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteCutSoundEffect
#include "GlobalNamespace/NoteCutSoundEffect.hpp"
// Including type: NoteCutSoundEffect/Pool
#include "GlobalNamespace/NoteCutSoundEffect_Pool.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: Saber
#include "GlobalNamespace/Saber.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: RandomObjectPicker`1
#include "GlobalNamespace/RandomObjectPicker_1.hpp"
// Including type: LazyCopyHashSet`1
#include "GlobalNamespace/LazyCopyHashSet_1.hpp"
// Including type: INoteCutSoundEffectDidFinishEvent
#include "GlobalNamespace/INoteCutSoundEffectDidFinishEvent.hpp"
// Including type: ILazyCopyHashSet`1
#include "GlobalNamespace/ILazyCopyHashSet_1.hpp"
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kEndOverlap
float GlobalNamespace::NoteCutSoundEffect::_get_kEndOverlap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffect::_get_kEndOverlap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "NoteCutSoundEffect", "kEndOverlap"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kEndOverlap
void GlobalNamespace::NoteCutSoundEffect::_set_kEndOverlap(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffect::_set_kEndOverlap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteCutSoundEffect", "kEndOverlap", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kEndFadeLength
float GlobalNamespace::NoteCutSoundEffect::_get_kEndFadeLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffect::_get_kEndFadeLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "NoteCutSoundEffect", "kEndFadeLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kEndFadeLength
void GlobalNamespace::NoteCutSoundEffect::_set_kEndFadeLength(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffect::_set_kEndFadeLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteCutSoundEffect", "kEndFadeLength", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _audioSource
UnityEngine::AudioSource*& GlobalNamespace::NoteCutSoundEffect::dyn__audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffect::dyn__audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSource"))->offset;
  return *reinterpret_cast<UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _speedToVolumeCurve
UnityEngine::AnimationCurve*& GlobalNamespace::NoteCutSoundEffect::dyn__speedToVolumeCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffect::dyn__speedToVolumeCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_speedToVolumeCurve"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip[] _badCutSoundEffectAudioClips
::ArrayW<UnityEngine::AudioClip*>& GlobalNamespace::NoteCutSoundEffect::dyn__badCutSoundEffectAudioClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffect::dyn__badCutSoundEffectAudioClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_badCutSoundEffectAudioClips"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _badCutVolume
float& GlobalNamespace::NoteCutSoundEffect::dyn__badCutVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffect::dyn__badCutVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_badCutVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _goodCutVolume
float& GlobalNamespace::NoteCutSoundEffect::dyn__goodCutVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffect::dyn__goodCutVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_goodCutVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Saber _saber
GlobalNamespace::Saber*& GlobalNamespace::NoteCutSoundEffect::dyn__saber() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffect::dyn__saber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saber"))->offset;
  return *reinterpret_cast<GlobalNamespace::Saber**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteController _noteController
GlobalNamespace::NoteController*& GlobalNamespace::NoteCutSoundEffect::dyn__noteController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffect::dyn__noteController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteController"))->offset;
  return *reinterpret_cast<GlobalNamespace::NoteController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isPlaying
bool& GlobalNamespace::NoteCutSoundEffect::dyn__isPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffect::dyn__isPlaying");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isPlaying"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _volumeMultiplier
float& GlobalNamespace::NoteCutSoundEffect::dyn__volumeMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffect::dyn__volumeMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_volumeMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _noteWasCut
bool& GlobalNamespace::NoteCutSoundEffect::dyn__noteWasCut() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffect::dyn__noteWasCut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteWasCut"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _aheadTime
float& GlobalNamespace::NoteCutSoundEffect::dyn__aheadTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffect::dyn__aheadTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_aheadTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _timeToNextNote
float& GlobalNamespace::NoteCutSoundEffect::dyn__timeToNextNote() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffect::dyn__timeToNextNote");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeToNextNote"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _timeToPrevNote
float& GlobalNamespace::NoteCutSoundEffect::dyn__timeToPrevNote() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffect::dyn__timeToPrevNote");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeToPrevNote"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _startDSPTime
double& GlobalNamespace::NoteCutSoundEffect::dyn__startDSPTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffect::dyn__startDSPTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startDSPTime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _endDSPtime
double& GlobalNamespace::NoteCutSoundEffect::dyn__endDSPtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffect::dyn__endDSPtime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endDSPtime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double _fadeOutStartDSPtime
double& GlobalNamespace::NoteCutSoundEffect::dyn__fadeOutStartDSPtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffect::dyn__fadeOutStartDSPtime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeOutStartDSPtime"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _noteMissedTimeOffset
float& GlobalNamespace::NoteCutSoundEffect::dyn__noteMissedTimeOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffect::dyn__noteMissedTimeOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteMissedTimeOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _beforeCutVolume
float& GlobalNamespace::NoteCutSoundEffect::dyn__beforeCutVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffect::dyn__beforeCutVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beforeCutVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _goodCut
bool& GlobalNamespace::NoteCutSoundEffect::dyn__goodCut() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffect::dyn__goodCut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_goodCut"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RandomObjectPicker`1<UnityEngine.AudioClip> _badCutRandomSoundPicker
GlobalNamespace::RandomObjectPicker_1<UnityEngine::AudioClip*>*& GlobalNamespace::NoteCutSoundEffect::dyn__badCutRandomSoundPicker() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffect::dyn__badCutRandomSoundPicker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_badCutRandomSoundPicker"))->offset;
  return *reinterpret_cast<GlobalNamespace::RandomObjectPicker_1<UnityEngine::AudioClip*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _handleWrongSaberTypeAsGood
bool& GlobalNamespace::NoteCutSoundEffect::dyn__handleWrongSaberTypeAsGood() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffect::dyn__handleWrongSaberTypeAsGood");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handleWrongSaberTypeAsGood"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _ignoreSaberSpeed
bool& GlobalNamespace::NoteCutSoundEffect::dyn__ignoreSaberSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffect::dyn__ignoreSaberSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ignoreSaberSpeed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _ignoreBadCuts
bool& GlobalNamespace::NoteCutSoundEffect::dyn__ignoreBadCuts() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffect::dyn__ignoreBadCuts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ignoreBadCuts"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LazyCopyHashSet`1<INoteCutSoundEffectDidFinishEvent> _didFinishEvent
GlobalNamespace::LazyCopyHashSet_1<GlobalNamespace::INoteCutSoundEffectDidFinishEvent*>*& GlobalNamespace::NoteCutSoundEffect::dyn__didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffect::dyn__didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_didFinishEvent"))->offset;
  return *reinterpret_cast<GlobalNamespace::LazyCopyHashSet_1<GlobalNamespace::INoteCutSoundEffectDidFinishEvent*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NoteCutSoundEffect.get_didFinishEvent
GlobalNamespace::ILazyCopyHashSet_1<GlobalNamespace::INoteCutSoundEffectDidFinishEvent*>* GlobalNamespace::NoteCutSoundEffect::get_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffect::get_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ILazyCopyHashSet_1<GlobalNamespace::INoteCutSoundEffectDidFinishEvent*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteCutSoundEffect.get_volumeMultiplier
float GlobalNamespace::NoteCutSoundEffect::get_volumeMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffect::get_volumeMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_volumeMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteCutSoundEffect.set_volumeMultiplier
void GlobalNamespace::NoteCutSoundEffect::set_volumeMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffect::set_volumeMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_volumeMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NoteCutSoundEffect.get_time
float GlobalNamespace::NoteCutSoundEffect::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffect::get_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteCutSoundEffect.Awake
void GlobalNamespace::NoteCutSoundEffect::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffect::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteCutSoundEffect.Start
void GlobalNamespace::NoteCutSoundEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffect::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteCutSoundEffect.Init
void GlobalNamespace::NoteCutSoundEffect::Init(UnityEngine::AudioClip* audioClip, GlobalNamespace::NoteController* noteController, double noteDSPTime, float aheadTime, float missedTimeOffset, float timeToPrevNote, float timeToNextNote, GlobalNamespace::Saber* saber, bool handleWrongSaberTypeAsGood, float volumeMultiplier, bool ignoreSaberSpeed, bool ignoreBadCuts) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffect::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioClip), ::il2cpp_utils::ExtractType(noteController), ::il2cpp_utils::ExtractType(noteDSPTime), ::il2cpp_utils::ExtractType(aheadTime), ::il2cpp_utils::ExtractType(missedTimeOffset), ::il2cpp_utils::ExtractType(timeToPrevNote), ::il2cpp_utils::ExtractType(timeToNextNote), ::il2cpp_utils::ExtractType(saber), ::il2cpp_utils::ExtractType(handleWrongSaberTypeAsGood), ::il2cpp_utils::ExtractType(volumeMultiplier), ::il2cpp_utils::ExtractType(ignoreSaberSpeed), ::il2cpp_utils::ExtractType(ignoreBadCuts)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, audioClip, noteController, noteDSPTime, aheadTime, missedTimeOffset, timeToPrevNote, timeToNextNote, saber, handleWrongSaberTypeAsGood, volumeMultiplier, ignoreSaberSpeed, ignoreBadCuts);
}
// Autogenerated method: NoteCutSoundEffect.ComputeDSPTimes
void GlobalNamespace::NoteCutSoundEffect::ComputeDSPTimes(double noteDSPTime, float aheadTime, float timeToPrevNote, float timeToNextNote) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffect::ComputeDSPTimes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeDSPTimes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteDSPTime), ::il2cpp_utils::ExtractType(aheadTime), ::il2cpp_utils::ExtractType(timeToPrevNote), ::il2cpp_utils::ExtractType(timeToNextNote)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteDSPTime, aheadTime, timeToPrevNote, timeToNextNote);
}
// Autogenerated method: NoteCutSoundEffect.LateUpdate
void GlobalNamespace::NoteCutSoundEffect::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffect::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteCutSoundEffect.StopPlayingAndFinish
void GlobalNamespace::NoteCutSoundEffect::StopPlayingAndFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffect::StopPlayingAndFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopPlayingAndFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteCutSoundEffect.NoteWasCut
void GlobalNamespace::NoteCutSoundEffect::NoteWasCut(GlobalNamespace::NoteController* noteController, ByRef<GlobalNamespace::NoteCutInfo> noteCutInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffect::NoteWasCut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteWasCut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController), ::il2cpp_utils::ExtractType(noteCutInfo)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteController, byref(noteCutInfo));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteCutSoundEffect/Pool
#include "GlobalNamespace/NoteCutSoundEffect_Pool.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteCutSoundEffectManager
#include "GlobalNamespace/NoteCutSoundEffectManager.hpp"
// Including type: NoteCutSoundEffectManager/InitData
#include "GlobalNamespace/NoteCutSoundEffectManager_InitData.hpp"
// Including type: AudioManagerSO
#include "GlobalNamespace/AudioManagerSO.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: BeatmapObjectManager
#include "GlobalNamespace/BeatmapObjectManager.hpp"
// Including type: SaberManager
#include "GlobalNamespace/SaberManager.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: RandomObjectPicker`1
#include "GlobalNamespace/RandomObjectPicker_1.hpp"
// Including type: MemoryPoolContainer`1
#include "GlobalNamespace/MemoryPoolContainer_1.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
// Including type: NoteCutSoundEffect/Pool
#include "GlobalNamespace/NoteCutSoundEffect_Pool.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxNumberOfEffects
int GlobalNamespace::NoteCutSoundEffectManager::_get_kMaxNumberOfEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffectManager::_get_kMaxNumberOfEffects");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "NoteCutSoundEffectManager", "kMaxNumberOfEffects"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxNumberOfEffects
void GlobalNamespace::NoteCutSoundEffectManager::_set_kMaxNumberOfEffects(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffectManager::_set_kMaxNumberOfEffects");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteCutSoundEffectManager", "kMaxNumberOfEffects", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kTwoNotesAtTheSameTimeVolumeMul
float GlobalNamespace::NoteCutSoundEffectManager::_get_kTwoNotesAtTheSameTimeVolumeMul() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffectManager::_get_kTwoNotesAtTheSameTimeVolumeMul");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "NoteCutSoundEffectManager", "kTwoNotesAtTheSameTimeVolumeMul"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kTwoNotesAtTheSameTimeVolumeMul
void GlobalNamespace::NoteCutSoundEffectManager::_set_kTwoNotesAtTheSameTimeVolumeMul(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffectManager::_set_kTwoNotesAtTheSameTimeVolumeMul");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteCutSoundEffectManager", "kTwoNotesAtTheSameTimeVolumeMul", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kDenseNotesVolumeMul
float GlobalNamespace::NoteCutSoundEffectManager::_get_kDenseNotesVolumeMul() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffectManager::_get_kDenseNotesVolumeMul");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "NoteCutSoundEffectManager", "kDenseNotesVolumeMul"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kDenseNotesVolumeMul
void GlobalNamespace::NoteCutSoundEffectManager::_set_kDenseNotesVolumeMul(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffectManager::_set_kDenseNotesVolumeMul");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteCutSoundEffectManager", "kDenseNotesVolumeMul", value));
}
// Autogenerated instance field getter
// Get instance field: private AudioManagerSO _audioManager
GlobalNamespace::AudioManagerSO*& GlobalNamespace::NoteCutSoundEffectManager::dyn__audioManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffectManager::dyn__audioManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::AudioManagerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _audioSamplesBeatAlignOffset
float& GlobalNamespace::NoteCutSoundEffectManager::dyn__audioSamplesBeatAlignOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffectManager::dyn__audioSamplesBeatAlignOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSamplesBeatAlignOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip[] _longCutEffectsAudioClips
::ArrayW<UnityEngine::AudioClip*>& GlobalNamespace::NoteCutSoundEffectManager::dyn__longCutEffectsAudioClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffectManager::dyn__longCutEffectsAudioClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_longCutEffectsAudioClips"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip[] _shortCutEffectsAudioClips
::ArrayW<UnityEngine::AudioClip*>& GlobalNamespace::NoteCutSoundEffectManager::dyn__shortCutEffectsAudioClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffectManager::dyn__shortCutEffectsAudioClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shortCutEffectsAudioClips"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip _testAudioClip
UnityEngine::AudioClip*& GlobalNamespace::NoteCutSoundEffectManager::dyn__testAudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffectManager::dyn__testAudioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_testAudioClip"))->offset;
  return *reinterpret_cast<UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly NoteCutSoundEffectManager/InitData _initData
GlobalNamespace::NoteCutSoundEffectManager::InitData*& GlobalNamespace::NoteCutSoundEffectManager::dyn__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffectManager::dyn__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<GlobalNamespace::NoteCutSoundEffectManager::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapObjectManager _beatmapObjectManager
GlobalNamespace::BeatmapObjectManager*& GlobalNamespace::NoteCutSoundEffectManager::dyn__beatmapObjectManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffectManager::dyn__beatmapObjectManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapObjectManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SaberManager _saberManager
GlobalNamespace::SaberManager*& GlobalNamespace::NoteCutSoundEffectManager::dyn__saberManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffectManager::dyn__saberManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::SaberManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly NoteCutSoundEffect/Pool _noteCutSoundEffectPool
GlobalNamespace::NoteCutSoundEffect::Pool*& GlobalNamespace::NoteCutSoundEffectManager::dyn__noteCutSoundEffectPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffectManager::dyn__noteCutSoundEffectPool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteCutSoundEffectPool"))->offset;
  return *reinterpret_cast<GlobalNamespace::NoteCutSoundEffect::Pool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AudioTimeSyncController _audioTimeSyncController
GlobalNamespace::AudioTimeSyncController*& GlobalNamespace::NoteCutSoundEffectManager::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffectManager::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <handleWrongSaberTypeAsGood>k__BackingField
bool& GlobalNamespace::NoteCutSoundEffectManager::dyn_$handleWrongSaberTypeAsGood$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffectManager::dyn_$handleWrongSaberTypeAsGood$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<handleWrongSaberTypeAsGood>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RandomObjectPicker`1<UnityEngine.AudioClip> _randomLongCutSoundPicker
GlobalNamespace::RandomObjectPicker_1<UnityEngine::AudioClip*>*& GlobalNamespace::NoteCutSoundEffectManager::dyn__randomLongCutSoundPicker() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffectManager::dyn__randomLongCutSoundPicker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomLongCutSoundPicker"))->offset;
  return *reinterpret_cast<GlobalNamespace::RandomObjectPicker_1<UnityEngine::AudioClip*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RandomObjectPicker`1<UnityEngine.AudioClip> _randomShortCutSoundPicker
GlobalNamespace::RandomObjectPicker_1<UnityEngine::AudioClip*>*& GlobalNamespace::NoteCutSoundEffectManager::dyn__randomShortCutSoundPicker() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffectManager::dyn__randomShortCutSoundPicker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomShortCutSoundPicker"))->offset;
  return *reinterpret_cast<GlobalNamespace::RandomObjectPicker_1<UnityEngine::AudioClip*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _prevNoteATime
float& GlobalNamespace::NoteCutSoundEffectManager::dyn__prevNoteATime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffectManager::dyn__prevNoteATime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevNoteATime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _prevNoteBTime
float& GlobalNamespace::NoteCutSoundEffectManager::dyn__prevNoteBTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffectManager::dyn__prevNoteBTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevNoteBTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteCutSoundEffect _prevNoteASoundEffect
GlobalNamespace::NoteCutSoundEffect*& GlobalNamespace::NoteCutSoundEffectManager::dyn__prevNoteASoundEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffectManager::dyn__prevNoteASoundEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevNoteASoundEffect"))->offset;
  return *reinterpret_cast<GlobalNamespace::NoteCutSoundEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteCutSoundEffect _prevNoteBSoundEffect
GlobalNamespace::NoteCutSoundEffect*& GlobalNamespace::NoteCutSoundEffectManager::dyn__prevNoteBSoundEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffectManager::dyn__prevNoteBSoundEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevNoteBSoundEffect"))->offset;
  return *reinterpret_cast<GlobalNamespace::NoteCutSoundEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _beatAlignOffset
float& GlobalNamespace::NoteCutSoundEffectManager::dyn__beatAlignOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffectManager::dyn__beatAlignOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatAlignOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useTestAudioClips
bool& GlobalNamespace::NoteCutSoundEffectManager::dyn__useTestAudioClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffectManager::dyn__useTestAudioClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useTestAudioClips"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MemoryPoolContainer`1<NoteCutSoundEffect> _noteCutSoundEffectPoolContainer
GlobalNamespace::MemoryPoolContainer_1<GlobalNamespace::NoteCutSoundEffect*>*& GlobalNamespace::NoteCutSoundEffectManager::dyn__noteCutSoundEffectPoolContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffectManager::dyn__noteCutSoundEffectPoolContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteCutSoundEffectPoolContainer"))->offset;
  return *reinterpret_cast<GlobalNamespace::MemoryPoolContainer_1<GlobalNamespace::NoteCutSoundEffect*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NoteCutSoundEffectManager.get_handleWrongSaberTypeAsGood
bool GlobalNamespace::NoteCutSoundEffectManager::get_handleWrongSaberTypeAsGood() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffectManager::get_handleWrongSaberTypeAsGood");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_handleWrongSaberTypeAsGood", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteCutSoundEffectManager.set_handleWrongSaberTypeAsGood
void GlobalNamespace::NoteCutSoundEffectManager::set_handleWrongSaberTypeAsGood(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffectManager::set_handleWrongSaberTypeAsGood");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_handleWrongSaberTypeAsGood", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: NoteCutSoundEffectManager.Start
void GlobalNamespace::NoteCutSoundEffectManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffectManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteCutSoundEffectManager.OnDestroy
void GlobalNamespace::NoteCutSoundEffectManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffectManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: NoteCutSoundEffectManager.HandleNoteWasSpawned
void GlobalNamespace::NoteCutSoundEffectManager::HandleNoteWasSpawned(GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffectManager::HandleNoteWasSpawned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteWasSpawned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteController);
}
// Autogenerated method: NoteCutSoundEffectManager.HandleNoteWasCut
void GlobalNamespace::NoteCutSoundEffectManager::HandleNoteWasCut(GlobalNamespace::NoteController* noteController, ByRef<GlobalNamespace::NoteCutInfo> noteCutInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffectManager::HandleNoteWasCut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteWasCut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController), ::il2cpp_utils::ExtractType(noteCutInfo)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteController, byref(noteCutInfo));
}
// Autogenerated method: NoteCutSoundEffectManager.HandleNoteCutSoundEffectDidFinish
void GlobalNamespace::NoteCutSoundEffectManager::HandleNoteCutSoundEffectDidFinish(GlobalNamespace::NoteCutSoundEffect* noteCutSoundEffect) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffectManager::HandleNoteCutSoundEffectDidFinish");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteCutSoundEffectDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteCutSoundEffect)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, noteCutSoundEffect);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteCutSoundEffectManager/InitData
#include "GlobalNamespace/NoteCutSoundEffectManager_InitData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean useTestAudioClips
bool& GlobalNamespace::NoteCutSoundEffectManager::InitData::dyn_useTestAudioClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffectManager::InitData::dyn_useTestAudioClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useTestAudioClips"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean ignoreBadCuts
bool& GlobalNamespace::NoteCutSoundEffectManager::InitData::dyn_ignoreBadCuts() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutSoundEffectManager::InitData::dyn_ignoreBadCuts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ignoreBadCuts"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ObstacleSaberSoundEffect
#include "GlobalNamespace/ObstacleSaberSoundEffect.hpp"
// Including type: ObstacleSaberSparkleEffectManager
#include "GlobalNamespace/ObstacleSaberSparkleEffectManager.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kSmooth
float GlobalNamespace::ObstacleSaberSoundEffect::_get_kSmooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSoundEffect::_get_kSmooth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "ObstacleSaberSoundEffect", "kSmooth"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kSmooth
void GlobalNamespace::ObstacleSaberSoundEffect::_set_kSmooth(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSoundEffect::_set_kSmooth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ObstacleSaberSoundEffect", "kSmooth", value));
}
// Autogenerated instance field getter
// Get instance field: private ObstacleSaberSparkleEffectManager _obstacleSaberSparkleEffectManager
GlobalNamespace::ObstacleSaberSparkleEffectManager*& GlobalNamespace::ObstacleSaberSoundEffect::dyn__obstacleSaberSparkleEffectManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSoundEffect::dyn__obstacleSaberSparkleEffectManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_obstacleSaberSparkleEffectManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::ObstacleSaberSparkleEffectManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SaberType _saberType
GlobalNamespace::SaberType& GlobalNamespace::ObstacleSaberSoundEffect::dyn__saberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSoundEffect::dyn__saberType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberType"))->offset;
  return *reinterpret_cast<GlobalNamespace::SaberType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _audioSource
UnityEngine::AudioSource*& GlobalNamespace::ObstacleSaberSoundEffect::dyn__audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSoundEffect::dyn__audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSource"))->offset;
  return *reinterpret_cast<UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _volume
float& GlobalNamespace::ObstacleSaberSoundEffect::dyn__volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSoundEffect::dyn__volume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_volume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _targetVolume
float& GlobalNamespace::ObstacleSaberSoundEffect::dyn__targetVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSoundEffect::dyn__targetVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ObstacleSaberSoundEffect.Awake
void GlobalNamespace::ObstacleSaberSoundEffect::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSoundEffect::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ObstacleSaberSoundEffect.OnDestroy
void GlobalNamespace::ObstacleSaberSoundEffect::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSoundEffect::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ObstacleSaberSoundEffect.LateUpdate
void GlobalNamespace::ObstacleSaberSoundEffect::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSoundEffect::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ObstacleSaberSoundEffect.HandleSparkleEffectDidStart
void GlobalNamespace::ObstacleSaberSoundEffect::HandleSparkleEffectDidStart(GlobalNamespace::SaberType saberType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSoundEffect::HandleSparkleEffectDidStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSparkleEffectDidStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saberType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, saberType);
}
// Autogenerated method: ObstacleSaberSoundEffect.HandleSparkleEffecDidEnd
void GlobalNamespace::ObstacleSaberSoundEffect::HandleSparkleEffecDidEnd(GlobalNamespace::SaberType saberType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObstacleSaberSoundEffect::HandleSparkleEffecDidEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSparkleEffecDidEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saberType)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, saberType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayAudioOnGameEventController
#include "GlobalNamespace/PlayAudioOnGameEventController.hpp"
// Including type: PlayAudioOnGameEventController/EventAudioBinding
#include "GlobalNamespace/PlayAudioOnGameEventController_EventAudioBinding.hpp"
// Including type: AudioClipQueue
#include "GlobalNamespace/AudioClipQueue.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private AudioClipQueue _audioClipQueue
GlobalNamespace::AudioClipQueue*& GlobalNamespace::PlayAudioOnGameEventController::dyn__audioClipQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayAudioOnGameEventController::dyn__audioClipQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioClipQueue"))->offset;
  return *reinterpret_cast<GlobalNamespace::AudioClipQueue**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlayAudioOnGameEventController/EventAudioBinding[] _eventAudioBindings
::ArrayW<GlobalNamespace::PlayAudioOnGameEventController::EventAudioBinding*>& GlobalNamespace::PlayAudioOnGameEventController::dyn__eventAudioBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayAudioOnGameEventController::dyn__eventAudioBindings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eventAudioBindings"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::PlayAudioOnGameEventController::EventAudioBinding*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayAudioOnGameEventController.Awake
void GlobalNamespace::PlayAudioOnGameEventController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayAudioOnGameEventController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PlayAudioOnGameEventController.OnDestroy
void GlobalNamespace::PlayAudioOnGameEventController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayAudioOnGameEventController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayAudioOnGameEventController/EventAudioBinding
#include "GlobalNamespace/PlayAudioOnGameEventController_EventAudioBinding.hpp"
// Including type: Signal
#include "GlobalNamespace/Signal.hpp"
// Including type: LocalizedAudioClipSO
#include "GlobalNamespace/LocalizedAudioClipSO.hpp"
// Including type: AudioClipQueue
#include "GlobalNamespace/AudioClipQueue.hpp"
// Including type: RandomObjectPicker`1
#include "GlobalNamespace/RandomObjectPicker_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Signal _signal
GlobalNamespace::Signal*& GlobalNamespace::PlayAudioOnGameEventController::EventAudioBinding::dyn__signal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayAudioOnGameEventController::EventAudioBinding::dyn__signal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_signal"))->offset;
  return *reinterpret_cast<GlobalNamespace::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _delay
float& GlobalNamespace::PlayAudioOnGameEventController::EventAudioBinding::dyn__delay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayAudioOnGameEventController::EventAudioBinding::dyn__delay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_delay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LocalizedAudioClipSO[] _localizedAudioClips
::ArrayW<GlobalNamespace::LocalizedAudioClipSO*>& GlobalNamespace::PlayAudioOnGameEventController::EventAudioBinding::dyn__localizedAudioClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayAudioOnGameEventController::EventAudioBinding::dyn__localizedAudioClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localizedAudioClips"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::LocalizedAudioClipSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AudioClipQueue _audioClipQueue
GlobalNamespace::AudioClipQueue*& GlobalNamespace::PlayAudioOnGameEventController::EventAudioBinding::dyn__audioClipQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayAudioOnGameEventController::EventAudioBinding::dyn__audioClipQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioClipQueue"))->offset;
  return *reinterpret_cast<GlobalNamespace::AudioClipQueue**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RandomObjectPicker`1<LocalizedAudioClipSO> _randomObjectPicker
GlobalNamespace::RandomObjectPicker_1<GlobalNamespace::LocalizedAudioClipSO*>*& GlobalNamespace::PlayAudioOnGameEventController::EventAudioBinding::dyn__randomObjectPicker() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayAudioOnGameEventController::EventAudioBinding::dyn__randomObjectPicker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomObjectPicker"))->offset;
  return *reinterpret_cast<GlobalNamespace::RandomObjectPicker_1<GlobalNamespace::LocalizedAudioClipSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayAudioOnGameEventController/EventAudioBinding.Init
void GlobalNamespace::PlayAudioOnGameEventController::EventAudioBinding::Init(GlobalNamespace::AudioClipQueue* audioClipQueue) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayAudioOnGameEventController::EventAudioBinding::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioClipQueue)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, audioClipQueue);
}
// Autogenerated method: PlayAudioOnGameEventController/EventAudioBinding.Deinit
void GlobalNamespace::PlayAudioOnGameEventController::EventAudioBinding::Deinit() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayAudioOnGameEventController::EventAudioBinding::Deinit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deinit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PlayAudioOnGameEventController/EventAudioBinding.HandleGameEvent
void GlobalNamespace::PlayAudioOnGameEventController::EventAudioBinding::HandleGameEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayAudioOnGameEventController::EventAudioBinding::HandleGameEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ResetPitchOnGameplayFinished
#include "GlobalNamespace/ResetPitchOnGameplayFinished.hpp"
// Including type: GameplayLevelSceneTransitionEvents
#include "GlobalNamespace/GameplayLevelSceneTransitionEvents.hpp"
// Including type: AudioManagerSO
#include "GlobalNamespace/AudioManagerSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly GameplayLevelSceneTransitionEvents _gameplayLevelSceneTransitionEvents
GlobalNamespace::GameplayLevelSceneTransitionEvents*& GlobalNamespace::ResetPitchOnGameplayFinished::dyn__gameplayLevelSceneTransitionEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResetPitchOnGameplayFinished::dyn__gameplayLevelSceneTransitionEvents");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayLevelSceneTransitionEvents"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameplayLevelSceneTransitionEvents**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AudioManagerSO _audioManager
GlobalNamespace::AudioManagerSO*& GlobalNamespace::ResetPitchOnGameplayFinished::dyn__audioManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResetPitchOnGameplayFinished::dyn__audioManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::AudioManagerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ResetPitchOnGameplayFinished.HandleAnyGameplayLevelDidFinish
void GlobalNamespace::ResetPitchOnGameplayFinished::HandleAnyGameplayLevelDidFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResetPitchOnGameplayFinished::HandleAnyGameplayLevelDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleAnyGameplayLevelDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: ResetPitchOnGameplayFinished.Finalize
void GlobalNamespace::ResetPitchOnGameplayFinished::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResetPitchOnGameplayFinished::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SimpleAudioPlayer
#include "GlobalNamespace/SimpleAudioPlayer.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip _audioClip
UnityEngine::AudioClip*& GlobalNamespace::SimpleAudioPlayer::dyn__audioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleAudioPlayer::dyn__audioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioClip"))->offset;
  return *reinterpret_cast<UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _audioSource
UnityEngine::AudioSource*& GlobalNamespace::SimpleAudioPlayer::dyn__audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleAudioPlayer::dyn__audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSource"))->offset;
  return *reinterpret_cast<UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _targetVolume
float& GlobalNamespace::SimpleAudioPlayer::dyn__targetVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleAudioPlayer::dyn__targetVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _loop
bool& GlobalNamespace::SimpleAudioPlayer::dyn__loop() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleAudioPlayer::dyn__loop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_loop"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _fadeSpeed
float& GlobalNamespace::SimpleAudioPlayer::dyn__fadeSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleAudioPlayer::dyn__fadeSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _fadingIn
bool& GlobalNamespace::SimpleAudioPlayer::dyn__fadingIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleAudioPlayer::dyn__fadingIn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadingIn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SimpleAudioPlayer.Start
void GlobalNamespace::SimpleAudioPlayer::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleAudioPlayer::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SimpleAudioPlayer.Update
void GlobalNamespace::SimpleAudioPlayer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleAudioPlayer::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SimpleAudioPlayer.FadeIn
void GlobalNamespace::SimpleAudioPlayer::FadeIn(float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleAudioPlayer::FadeIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(duration)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, duration);
}
// Autogenerated method: SimpleAudioPlayer.get_activeAudioClip
UnityEngine::AudioClip* GlobalNamespace::SimpleAudioPlayer::get_activeAudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleAudioPlayer::get_activeAudioClip");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activeAudioClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AudioClip*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SimpleAudioPlayer.FadeOut
void GlobalNamespace::SimpleAudioPlayer::FadeOut(float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleAudioPlayer::FadeOut");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(duration)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, duration);
}
// Autogenerated method: SimpleAudioPlayer.PauseCurrentChannel
void GlobalNamespace::SimpleAudioPlayer::PauseCurrentChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleAudioPlayer::PauseCurrentChannel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PauseCurrentChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SimpleAudioPlayer.UnPauseCurrentChannel
void GlobalNamespace::SimpleAudioPlayer::UnPauseCurrentChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleAudioPlayer::UnPauseCurrentChannel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnPauseCurrentChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongPreviewPlayer
#include "GlobalNamespace/SongPreviewPlayer.hpp"
// Including type: SongPreviewPlayer/InitData
#include "GlobalNamespace/SongPreviewPlayer_InitData.hpp"
// Including type: SongPreviewPlayer/AudioSourceParams
#include "GlobalNamespace/SongPreviewPlayer_AudioSourceParams.hpp"
// Including type: SongPreviewPlayer/AudioSourceVolumeController
#include "GlobalNamespace/SongPreviewPlayer_AudioSourceVolumeController.hpp"
// Including type: SongPreviewPlayer/<CrossFadeAfterDelayCoroutine>d__27
#include "GlobalNamespace/SongPreviewPlayer_-CrossFadeAfterDelayCoroutine-d__27.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: AudioManagerSO
#include "GlobalNamespace/AudioManagerSO.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _channelsCount
int& GlobalNamespace::SongPreviewPlayer::dyn__channelsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::dyn__channelsCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_channelsCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _audioSourcePrefab
UnityEngine::AudioSource*& GlobalNamespace::SongPreviewPlayer::dyn__audioSourcePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::dyn__audioSourcePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSourcePrefab"))->offset;
  return *reinterpret_cast<UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip _defaultAudioClip
UnityEngine::AudioClip*& GlobalNamespace::SongPreviewPlayer::dyn__defaultAudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::dyn__defaultAudioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultAudioClip"))->offset;
  return *reinterpret_cast<UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _volume
float& GlobalNamespace::SongPreviewPlayer::dyn__volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::dyn__volume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_volume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _crossFadeToAnotherSongSpeed
float& GlobalNamespace::SongPreviewPlayer::dyn__crossFadeToAnotherSongSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::dyn__crossFadeToAnotherSongSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_crossFadeToAnotherSongSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _crossFadeToDefaultSpeed
float& GlobalNamespace::SongPreviewPlayer::dyn__crossFadeToDefaultSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::dyn__crossFadeToDefaultSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_crossFadeToDefaultSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _fadeInSpeed
float& GlobalNamespace::SongPreviewPlayer::dyn__fadeInSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::dyn__fadeInSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeInSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SongPreviewPlayer/AudioSourceParams _defaultAudioSourceParams
GlobalNamespace::SongPreviewPlayer::AudioSourceParams*& GlobalNamespace::SongPreviewPlayer::dyn__defaultAudioSourceParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::dyn__defaultAudioSourceParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultAudioSourceParams"))->offset;
  return *reinterpret_cast<GlobalNamespace::SongPreviewPlayer::AudioSourceParams**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SongPreviewPlayer/AudioSourceParams _othersAudioSourceParams
GlobalNamespace::SongPreviewPlayer::AudioSourceParams*& GlobalNamespace::SongPreviewPlayer::dyn__othersAudioSourceParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::dyn__othersAudioSourceParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_othersAudioSourceParams"))->offset;
  return *reinterpret_cast<GlobalNamespace::SongPreviewPlayer::AudioSourceParams**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SongPreviewPlayer/InitData _initData
GlobalNamespace::SongPreviewPlayer::InitData*& GlobalNamespace::SongPreviewPlayer::dyn__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::dyn__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<GlobalNamespace::SongPreviewPlayer::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AudioManagerSO _audioManager
GlobalNamespace::AudioManagerSO*& GlobalNamespace::SongPreviewPlayer::dyn__audioManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::dyn__audioManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::AudioManagerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SongPreviewPlayer/AudioSourceVolumeController[] _audioSourceControllers
::ArrayW<GlobalNamespace::SongPreviewPlayer::AudioSourceVolumeController*>& GlobalNamespace::SongPreviewPlayer::dyn__audioSourceControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::dyn__audioSourceControllers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSourceControllers"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::SongPreviewPlayer::AudioSourceVolumeController*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _activeChannel
int& GlobalNamespace::SongPreviewPlayer::dyn__activeChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::dyn__activeChannel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeChannel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _timeToDefaultAudioTransition
float& GlobalNamespace::SongPreviewPlayer::dyn__timeToDefaultAudioTransition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::dyn__timeToDefaultAudioTransition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeToDefaultAudioTransition"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _transitionAfterDelay
bool& GlobalNamespace::SongPreviewPlayer::dyn__transitionAfterDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::dyn__transitionAfterDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transitionAfterDelay"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _volumeScale
float& GlobalNamespace::SongPreviewPlayer::dyn__volumeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::dyn__volumeScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_volumeScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _fadeSpeed
float& GlobalNamespace::SongPreviewPlayer::dyn__fadeSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::dyn__fadeSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _ambientVolumeScale
float& GlobalNamespace::SongPreviewPlayer::dyn__ambientVolumeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::dyn__ambientVolumeScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ambientVolumeScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isActiveChannelPaused
bool& GlobalNamespace::SongPreviewPlayer::dyn__isActiveChannelPaused() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::dyn__isActiveChannelPaused");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isActiveChannelPaused"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SongPreviewPlayer.Awake
void GlobalNamespace::SongPreviewPlayer::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SongPreviewPlayer.Start
void GlobalNamespace::SongPreviewPlayer::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SongPreviewPlayer.OnEnable
void GlobalNamespace::SongPreviewPlayer::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SongPreviewPlayer.CrossFadeAfterDelayCoroutine
System::Collections::IEnumerator* GlobalNamespace::SongPreviewPlayer::CrossFadeAfterDelayCoroutine(float delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::CrossFadeAfterDelayCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossFadeAfterDelayCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delay)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method, delay);
}
// Autogenerated method: SongPreviewPlayer.OnDisable
void GlobalNamespace::SongPreviewPlayer::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SongPreviewPlayer.Update
void GlobalNamespace::SongPreviewPlayer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SongPreviewPlayer.CrossfadeToDefault
void GlobalNamespace::SongPreviewPlayer::CrossfadeToDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::CrossfadeToDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossfadeToDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SongPreviewPlayer.CrossfadeToNewDefault
void GlobalNamespace::SongPreviewPlayer::CrossfadeToNewDefault(UnityEngine::AudioClip* audioClip) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::CrossfadeToNewDefault");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossfadeToNewDefault", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioClip)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, audioClip);
}
// Autogenerated method: SongPreviewPlayer.CrossfadeTo
void GlobalNamespace::SongPreviewPlayer::CrossfadeTo(UnityEngine::AudioClip* audioClip, float musicVolume, float startTime, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::CrossfadeTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossfadeTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioClip), ::il2cpp_utils::ExtractType(musicVolume), ::il2cpp_utils::ExtractType(startTime), ::il2cpp_utils::ExtractType(duration)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, audioClip, musicVolume, startTime, duration);
}
// Autogenerated method: SongPreviewPlayer.CrossfadeTo
void GlobalNamespace::SongPreviewPlayer::CrossfadeTo(UnityEngine::AudioClip* audioClip, float musicVolume, float startTime, float duration, bool isDefault) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::CrossfadeTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrossfadeTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioClip), ::il2cpp_utils::ExtractType(musicVolume), ::il2cpp_utils::ExtractType(startTime), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(isDefault)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, audioClip, musicVolume, startTime, duration, isDefault);
}
// Autogenerated method: SongPreviewPlayer.get_activeAudioClip
UnityEngine::AudioClip* GlobalNamespace::SongPreviewPlayer::get_activeAudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::get_activeAudioClip");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activeAudioClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AudioClip*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SongPreviewPlayer.PauseCurrentChannel
void GlobalNamespace::SongPreviewPlayer::PauseCurrentChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::PauseCurrentChannel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PauseCurrentChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SongPreviewPlayer.UnPauseCurrentChannel
void GlobalNamespace::SongPreviewPlayer::UnPauseCurrentChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::UnPauseCurrentChannel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnPauseCurrentChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SongPreviewPlayer.FadeOut
void GlobalNamespace::SongPreviewPlayer::FadeOut(float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::FadeOut");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FadeOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(duration)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, duration);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongPreviewPlayer/InitData
#include "GlobalNamespace/SongPreviewPlayer_InitData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Single ambientVolumeScale
float& GlobalNamespace::SongPreviewPlayer::InitData::dyn_ambientVolumeScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::InitData::dyn_ambientVolumeScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ambientVolumeScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongPreviewPlayer/AudioSourceParams
#include "GlobalNamespace/SongPreviewPlayer_AudioSourceParams.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _position
UnityEngine::Vector3& GlobalNamespace::SongPreviewPlayer::AudioSourceParams::dyn__position() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::AudioSourceParams::dyn__position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_position"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _reverbZoneMix
float& GlobalNamespace::SongPreviewPlayer::AudioSourceParams::dyn__reverbZoneMix() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::AudioSourceParams::dyn__reverbZoneMix");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reverbZoneMix"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _spatialBlend
float& GlobalNamespace::SongPreviewPlayer::AudioSourceParams::dyn__spatialBlend() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::AudioSourceParams::dyn__spatialBlend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spatialBlend"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _spread
float& GlobalNamespace::SongPreviewPlayer::AudioSourceParams::dyn__spread() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::AudioSourceParams::dyn__spread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spread"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SongPreviewPlayer/AudioSourceParams.get_position
UnityEngine::Vector3 GlobalNamespace::SongPreviewPlayer::AudioSourceParams::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::AudioSourceParams::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SongPreviewPlayer/AudioSourceParams.get_reverbZoneMix
float GlobalNamespace::SongPreviewPlayer::AudioSourceParams::get_reverbZoneMix() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::AudioSourceParams::get_reverbZoneMix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_reverbZoneMix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SongPreviewPlayer/AudioSourceParams.get_spatialBlend
float GlobalNamespace::SongPreviewPlayer::AudioSourceParams::get_spatialBlend() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::AudioSourceParams::get_spatialBlend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spatialBlend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SongPreviewPlayer/AudioSourceParams.get_spread
float GlobalNamespace::SongPreviewPlayer::AudioSourceParams::get_spread() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::AudioSourceParams::get_spread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongPreviewPlayer/AudioSourceVolumeController
#include "GlobalNamespace/SongPreviewPlayer_AudioSourceVolumeController.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.AudioSource audioSource
UnityEngine::AudioSource*& GlobalNamespace::SongPreviewPlayer::AudioSourceVolumeController::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::AudioSourceVolumeController::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <maxVolume>k__BackingField
float& GlobalNamespace::SongPreviewPlayer::AudioSourceVolumeController::dyn_$maxVolume$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::AudioSourceVolumeController::dyn_$maxVolume$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<maxVolume>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _volume
float& GlobalNamespace::SongPreviewPlayer::AudioSourceVolumeController::dyn__volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::AudioSourceVolumeController::dyn__volume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_volume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SongPreviewPlayer/AudioSourceVolumeController.get_volume
float GlobalNamespace::SongPreviewPlayer::AudioSourceVolumeController::get_volume() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::AudioSourceVolumeController::get_volume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_volume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SongPreviewPlayer/AudioSourceVolumeController.set_volume
void GlobalNamespace::SongPreviewPlayer::AudioSourceVolumeController::set_volume(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::AudioSourceVolumeController::set_volume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_volume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: SongPreviewPlayer/AudioSourceVolumeController.get_maxVolume
float GlobalNamespace::SongPreviewPlayer::AudioSourceVolumeController::get_maxVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::AudioSourceVolumeController::get_maxVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SongPreviewPlayer/AudioSourceVolumeController.set_maxVolume
void GlobalNamespace::SongPreviewPlayer::AudioSourceVolumeController::set_maxVolume(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::AudioSourceVolumeController::set_maxVolume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_maxVolume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SongPreviewPlayer/<CrossFadeAfterDelayCoroutine>d__27
#include "GlobalNamespace/SongPreviewPlayer_-CrossFadeAfterDelayCoroutine-d__27.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::SongPreviewPlayer::$CrossFadeAfterDelayCoroutine$d__27::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::$CrossFadeAfterDelayCoroutine$d__27::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::SongPreviewPlayer::$CrossFadeAfterDelayCoroutine$d__27::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::$CrossFadeAfterDelayCoroutine$d__27::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single delay
float& GlobalNamespace::SongPreviewPlayer::$CrossFadeAfterDelayCoroutine$d__27::dyn_delay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::$CrossFadeAfterDelayCoroutine$d__27::dyn_delay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SongPreviewPlayer <>4__this
GlobalNamespace::SongPreviewPlayer*& GlobalNamespace::SongPreviewPlayer::$CrossFadeAfterDelayCoroutine$d__27::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::$CrossFadeAfterDelayCoroutine$d__27::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::SongPreviewPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SongPreviewPlayer/<CrossFadeAfterDelayCoroutine>d__27.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::SongPreviewPlayer::$CrossFadeAfterDelayCoroutine$d__27::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::$CrossFadeAfterDelayCoroutine$d__27::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SongPreviewPlayer/<CrossFadeAfterDelayCoroutine>d__27.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::SongPreviewPlayer::$CrossFadeAfterDelayCoroutine$d__27::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::$CrossFadeAfterDelayCoroutine$d__27::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SongPreviewPlayer/<CrossFadeAfterDelayCoroutine>d__27.System.IDisposable.Dispose
void GlobalNamespace::SongPreviewPlayer::$CrossFadeAfterDelayCoroutine$d__27::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::$CrossFadeAfterDelayCoroutine$d__27::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SongPreviewPlayer/<CrossFadeAfterDelayCoroutine>d__27.MoveNext
bool GlobalNamespace::SongPreviewPlayer::$CrossFadeAfterDelayCoroutine$d__27::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::$CrossFadeAfterDelayCoroutine$d__27::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SongPreviewPlayer/<CrossFadeAfterDelayCoroutine>d__27.System.Collections.IEnumerator.Reset
void GlobalNamespace::SongPreviewPlayer::$CrossFadeAfterDelayCoroutine$d__27::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayer::$CrossFadeAfterDelayCoroutine$d__27::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongPreviewPlayerPauseOnInputFocusLost
#include "GlobalNamespace/SongPreviewPlayerPauseOnInputFocusLost.hpp"
// Including type: AudioPlayerBase
#include "GlobalNamespace/AudioPlayerBase.hpp"
// Including type: IVRPlatformHelper
#include "GlobalNamespace/IVRPlatformHelper.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private AudioPlayerBase _songPreviewPlayer
GlobalNamespace::AudioPlayerBase*& GlobalNamespace::SongPreviewPlayerPauseOnInputFocusLost::dyn__songPreviewPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayerPauseOnInputFocusLost::dyn__songPreviewPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songPreviewPlayer"))->offset;
  return *reinterpret_cast<GlobalNamespace::AudioPlayerBase**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IVRPlatformHelper _vrPlatformHelper
GlobalNamespace::IVRPlatformHelper*& GlobalNamespace::SongPreviewPlayerPauseOnInputFocusLost::dyn__vrPlatformHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayerPauseOnInputFocusLost::dyn__vrPlatformHelper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vrPlatformHelper"))->offset;
  return *reinterpret_cast<GlobalNamespace::IVRPlatformHelper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SongPreviewPlayerPauseOnInputFocusLost.Start
void GlobalNamespace::SongPreviewPlayerPauseOnInputFocusLost::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayerPauseOnInputFocusLost::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SongPreviewPlayerPauseOnInputFocusLost.OnDestroy
void GlobalNamespace::SongPreviewPlayerPauseOnInputFocusLost::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayerPauseOnInputFocusLost::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SongPreviewPlayerPauseOnInputFocusLost.HandleInputFocusCaptured
void GlobalNamespace::SongPreviewPlayerPauseOnInputFocusLost::HandleInputFocusCaptured() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayerPauseOnInputFocusLost::HandleInputFocusCaptured");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInputFocusCaptured", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SongPreviewPlayerPauseOnInputFocusLost.HandleInputFocusReleased
void GlobalNamespace::SongPreviewPlayerPauseOnInputFocusLost::HandleInputFocusReleased() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPreviewPlayerPauseOnInputFocusLost::HandleInputFocusReleased");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInputFocusReleased", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongTimeFixedUpdateController
#include "GlobalNamespace/SongTimeFixedUpdateController.hpp"
// Including type: IAudioTimeSource
#include "GlobalNamespace/IAudioTimeSource.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kFixedDeltaTime
float GlobalNamespace::SongTimeFixedUpdateController::_get_kFixedDeltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongTimeFixedUpdateController::_get_kFixedDeltaTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SongTimeFixedUpdateController", "kFixedDeltaTime"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kFixedDeltaTime
void GlobalNamespace::SongTimeFixedUpdateController::_set_kFixedDeltaTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongTimeFixedUpdateController::_set_kFixedDeltaTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongTimeFixedUpdateController", "kFixedDeltaTime", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly IAudioTimeSource _audioTimeSource
GlobalNamespace::IAudioTimeSource*& GlobalNamespace::SongTimeFixedUpdateController::dyn__audioTimeSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongTimeFixedUpdateController::dyn__audioTimeSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSource"))->offset;
  return *reinterpret_cast<GlobalNamespace::IAudioTimeSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Single> songControllerFixedTimeDidUpdateEvent
System::Action_1<float>*& GlobalNamespace::SongTimeFixedUpdateController::dyn_songControllerFixedTimeDidUpdateEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongTimeFixedUpdateController::dyn_songControllerFixedTimeDidUpdateEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "songControllerFixedTimeDidUpdateEvent"))->offset;
  return *reinterpret_cast<System::Action_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action songControllerTimeDidUpdateEvent
System::Action*& GlobalNamespace::SongTimeFixedUpdateController::dyn_songControllerTimeDidUpdateEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongTimeFixedUpdateController::dyn_songControllerTimeDidUpdateEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "songControllerTimeDidUpdateEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _accumulator
float& GlobalNamespace::SongTimeFixedUpdateController::dyn__accumulator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongTimeFixedUpdateController::dyn__accumulator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_accumulator"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _interpolationFactor
float& GlobalNamespace::SongTimeFixedUpdateController::dyn__interpolationFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongTimeFixedUpdateController::dyn__interpolationFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_interpolationFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SongTimeFixedUpdateController.get_fixedDeltaTime
float GlobalNamespace::SongTimeFixedUpdateController::get_fixedDeltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongTimeFixedUpdateController::get_fixedDeltaTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fixedDeltaTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SongTimeFixedUpdateController.get_interpolationFactor
float GlobalNamespace::SongTimeFixedUpdateController::get_interpolationFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongTimeFixedUpdateController::get_interpolationFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interpolationFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SongTimeFixedUpdateController.add_songControllerFixedTimeDidUpdateEvent
void GlobalNamespace::SongTimeFixedUpdateController::add_songControllerFixedTimeDidUpdateEvent(System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongTimeFixedUpdateController::add_songControllerFixedTimeDidUpdateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_songControllerFixedTimeDidUpdateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: SongTimeFixedUpdateController.remove_songControllerFixedTimeDidUpdateEvent
void GlobalNamespace::SongTimeFixedUpdateController::remove_songControllerFixedTimeDidUpdateEvent(System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongTimeFixedUpdateController::remove_songControllerFixedTimeDidUpdateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_songControllerFixedTimeDidUpdateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: SongTimeFixedUpdateController.add_songControllerTimeDidUpdateEvent
void GlobalNamespace::SongTimeFixedUpdateController::add_songControllerTimeDidUpdateEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongTimeFixedUpdateController::add_songControllerTimeDidUpdateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_songControllerTimeDidUpdateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: SongTimeFixedUpdateController.remove_songControllerTimeDidUpdateEvent
void GlobalNamespace::SongTimeFixedUpdateController::remove_songControllerTimeDidUpdateEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongTimeFixedUpdateController::remove_songControllerTimeDidUpdateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_songControllerTimeDidUpdateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: SongTimeFixedUpdateController.Update
void GlobalNamespace::SongTimeFixedUpdateController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongTimeFixedUpdateController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AnimatedAvatarPoseController
#include "GlobalNamespace/AnimatedAvatarPoseController.hpp"
// Including type: AvatarPoseController
#include "GlobalNamespace/AvatarPoseController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly AvatarPoseController _avatarPoseController
GlobalNamespace::AvatarPoseController*& GlobalNamespace::AnimatedAvatarPoseController::dyn__avatarPoseController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnimatedAvatarPoseController::dyn__avatarPoseController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarPoseController"))->offset;
  return *reinterpret_cast<GlobalNamespace::AvatarPoseController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AnimatedAvatarPoseController.LateUpdate
void GlobalNamespace::AnimatedAvatarPoseController::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnimatedAvatarPoseController::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarColorPropertyIds
#include "GlobalNamespace/AvatarColorPropertyIds.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF00368
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 colorPropertyId
int GlobalNamespace::AvatarColorPropertyIds::_get_colorPropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarColorPropertyIds::_get_colorPropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "AvatarColorPropertyIds", "colorPropertyId"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 colorPropertyId
void GlobalNamespace::AvatarColorPropertyIds::_set_colorPropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarColorPropertyIds::_set_colorPropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AvatarColorPropertyIds", "colorPropertyId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF00378
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 rimLightColorPropertyId
int GlobalNamespace::AvatarColorPropertyIds::_get_rimLightColorPropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarColorPropertyIds::_get_rimLightColorPropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "AvatarColorPropertyIds", "rimLightColorPropertyId"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 rimLightColorPropertyId
void GlobalNamespace::AvatarColorPropertyIds::_set_rimLightColorPropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarColorPropertyIds::_set_rimLightColorPropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AvatarColorPropertyIds", "rimLightColorPropertyId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF00388
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 uvColorsPropertyId
int GlobalNamespace::AvatarColorPropertyIds::_get_uvColorsPropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarColorPropertyIds::_get_uvColorsPropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "AvatarColorPropertyIds", "uvColorsPropertyId"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 uvColorsPropertyId
void GlobalNamespace::AvatarColorPropertyIds::_set_uvColorsPropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarColorPropertyIds::_set_uvColorsPropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AvatarColorPropertyIds", "uvColorsPropertyId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF00398
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 uvRimLightColorsPropertyId
int GlobalNamespace::AvatarColorPropertyIds::_get_uvRimLightColorsPropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarColorPropertyIds::_get_uvRimLightColorsPropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "AvatarColorPropertyIds", "uvRimLightColorsPropertyId"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 uvRimLightColorsPropertyId
void GlobalNamespace::AvatarColorPropertyIds::_set_uvRimLightColorsPropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarColorPropertyIds::_set_uvRimLightColorsPropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AvatarColorPropertyIds", "uvRimLightColorsPropertyId", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF003A8
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 segmentToHighlightPropertyId
int GlobalNamespace::AvatarColorPropertyIds::_get_segmentToHighlightPropertyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarColorPropertyIds::_get_segmentToHighlightPropertyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "AvatarColorPropertyIds", "segmentToHighlightPropertyId"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 segmentToHighlightPropertyId
void GlobalNamespace::AvatarColorPropertyIds::_set_segmentToHighlightPropertyId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarColorPropertyIds::_set_segmentToHighlightPropertyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AvatarColorPropertyIds", "segmentToHighlightPropertyId", value));
}
// Autogenerated method: AvatarColorPropertyIds..cctor
void GlobalNamespace::AvatarColorPropertyIds::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarColorPropertyIds::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AvatarColorPropertyIds", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarHeadOffset
#include "GlobalNamespace/AvatarHeadOffset.hpp"
// Including type: AvatarPoseController
#include "GlobalNamespace/AvatarPoseController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _positionOffset
UnityEngine::Vector3& GlobalNamespace::AvatarHeadOffset::dyn__positionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarHeadOffset::dyn__positionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positionOffset"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AvatarPoseController _avatarPoseController
GlobalNamespace::AvatarPoseController*& GlobalNamespace::AvatarHeadOffset::dyn__avatarPoseController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarHeadOffset::dyn__avatarPoseController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarPoseController"))->offset;
  return *reinterpret_cast<GlobalNamespace::AvatarPoseController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AvatarHeadOffset.Start
void GlobalNamespace::AvatarHeadOffset::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarHeadOffset::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AvatarHeadOffset.OnDestroy
void GlobalNamespace::AvatarHeadOffset::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarHeadOffset::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AvatarHeadOffset.HandleMultiplayerAvatarPoseControllerDidUpdatePose
void GlobalNamespace::AvatarHeadOffset::HandleMultiplayerAvatarPoseControllerDidUpdatePose(UnityEngine::Vector3 headLocalPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarHeadOffset::HandleMultiplayerAvatarPoseControllerDidUpdatePose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerAvatarPoseControllerDidUpdatePose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headLocalPosition)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, headLocalPosition);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarPoseController
#include "GlobalNamespace/AvatarPoseController.hpp"
// Including type: AvatarPoseController/PositionsWillBeSetDelegate
#include "GlobalNamespace/AvatarPoseController_PositionsWillBeSetDelegate.hpp"
// Including type: AvatarPoseController/LatePositionsWillBeSetDelegate
#include "GlobalNamespace/AvatarPoseController_LatePositionsWillBeSetDelegate.hpp"
// Including type: AvatarPoseController/RotationsWillBeSetDelegate
#include "GlobalNamespace/AvatarPoseController_RotationsWillBeSetDelegate.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: HeadBodyOffsetSO
#include "GlobalNamespace/HeadBodyOffsetSO.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Transform _headTransform
UnityEngine::Transform*& GlobalNamespace::AvatarPoseController::dyn__headTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseController::dyn__headTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Transform _leftHandTransform
UnityEngine::Transform*& GlobalNamespace::AvatarPoseController::dyn__leftHandTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseController::dyn__leftHandTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHandTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Transform _rightHandTransform
UnityEngine::Transform*& GlobalNamespace::AvatarPoseController::dyn__rightHandTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseController::dyn__rightHandTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHandTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Transform _bodyTransform
UnityEngine::Transform*& GlobalNamespace::AvatarPoseController::dyn__bodyTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseController::dyn__bodyTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bodyTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected HeadBodyOffsetSO _headBodyOffset
GlobalNamespace::HeadBodyOffsetSO*& GlobalNamespace::AvatarPoseController::dyn__headBodyOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseController::dyn__headBodyOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headBodyOffset"))->offset;
  return *reinterpret_cast<GlobalNamespace::HeadBodyOffsetSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarPoseController/PositionsWillBeSetDelegate <earlyPositionsWillBeSetCallback>k__BackingField
GlobalNamespace::AvatarPoseController::PositionsWillBeSetDelegate*& GlobalNamespace::AvatarPoseController::dyn_$earlyPositionsWillBeSetCallback$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseController::dyn_$earlyPositionsWillBeSetCallback$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<earlyPositionsWillBeSetCallback>k__BackingField"))->offset;
  return *reinterpret_cast<GlobalNamespace::AvatarPoseController::PositionsWillBeSetDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarPoseController/LatePositionsWillBeSetDelegate <latePositionsWillBeSetCallback>k__BackingField
GlobalNamespace::AvatarPoseController::LatePositionsWillBeSetDelegate*& GlobalNamespace::AvatarPoseController::dyn_$latePositionsWillBeSetCallback$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseController::dyn_$latePositionsWillBeSetCallback$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<latePositionsWillBeSetCallback>k__BackingField"))->offset;
  return *reinterpret_cast<GlobalNamespace::AvatarPoseController::LatePositionsWillBeSetDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarPoseController/RotationsWillBeSetDelegate <earlyRotationsWillBeSetCallback>k__BackingField
GlobalNamespace::AvatarPoseController::RotationsWillBeSetDelegate*& GlobalNamespace::AvatarPoseController::dyn_$earlyRotationsWillBeSetCallback$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseController::dyn_$earlyRotationsWillBeSetCallback$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<earlyRotationsWillBeSetCallback>k__BackingField"))->offset;
  return *reinterpret_cast<GlobalNamespace::AvatarPoseController::RotationsWillBeSetDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<UnityEngine.Vector3> didUpdatePoseEvent
System::Action_1<UnityEngine::Vector3>*& GlobalNamespace::AvatarPoseController::dyn_didUpdatePoseEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseController::dyn_didUpdatePoseEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didUpdatePoseEvent"))->offset;
  return *reinterpret_cast<System::Action_1<UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AvatarPoseController.get_earlyPositionsWillBeSetCallback
GlobalNamespace::AvatarPoseController::PositionsWillBeSetDelegate* GlobalNamespace::AvatarPoseController::get_earlyPositionsWillBeSetCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseController::get_earlyPositionsWillBeSetCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_earlyPositionsWillBeSetCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::AvatarPoseController::PositionsWillBeSetDelegate*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AvatarPoseController.set_earlyPositionsWillBeSetCallback
void GlobalNamespace::AvatarPoseController::set_earlyPositionsWillBeSetCallback(GlobalNamespace::AvatarPoseController::PositionsWillBeSetDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseController::set_earlyPositionsWillBeSetCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_earlyPositionsWillBeSetCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: AvatarPoseController.get_latePositionsWillBeSetCallback
GlobalNamespace::AvatarPoseController::LatePositionsWillBeSetDelegate* GlobalNamespace::AvatarPoseController::get_latePositionsWillBeSetCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseController::get_latePositionsWillBeSetCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_latePositionsWillBeSetCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::AvatarPoseController::LatePositionsWillBeSetDelegate*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AvatarPoseController.set_latePositionsWillBeSetCallback
void GlobalNamespace::AvatarPoseController::set_latePositionsWillBeSetCallback(GlobalNamespace::AvatarPoseController::LatePositionsWillBeSetDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseController::set_latePositionsWillBeSetCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_latePositionsWillBeSetCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: AvatarPoseController.get_earlyRotationsWillBeSetCallback
GlobalNamespace::AvatarPoseController::RotationsWillBeSetDelegate* GlobalNamespace::AvatarPoseController::get_earlyRotationsWillBeSetCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseController::get_earlyRotationsWillBeSetCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_earlyRotationsWillBeSetCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::AvatarPoseController::RotationsWillBeSetDelegate*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AvatarPoseController.set_earlyRotationsWillBeSetCallback
void GlobalNamespace::AvatarPoseController::set_earlyRotationsWillBeSetCallback(GlobalNamespace::AvatarPoseController::RotationsWillBeSetDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseController::set_earlyRotationsWillBeSetCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_earlyRotationsWillBeSetCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: AvatarPoseController.add_didUpdatePoseEvent
void GlobalNamespace::AvatarPoseController::add_didUpdatePoseEvent(System::Action_1<UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseController::add_didUpdatePoseEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didUpdatePoseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: AvatarPoseController.remove_didUpdatePoseEvent
void GlobalNamespace::AvatarPoseController::remove_didUpdatePoseEvent(System::Action_1<UnityEngine::Vector3>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseController::remove_didUpdatePoseEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didUpdatePoseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: AvatarPoseController.UpdateTransforms
void GlobalNamespace::AvatarPoseController::UpdateTransforms(UnityEngine::Vector3 headPosition, UnityEngine::Vector3 leftHandPosition, UnityEngine::Vector3 rightHandPosition, UnityEngine::Quaternion headRotation, UnityEngine::Quaternion leftHandRotation, UnityEngine::Quaternion rightHandRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseController::UpdateTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headPosition), ::il2cpp_utils::ExtractType(leftHandPosition), ::il2cpp_utils::ExtractType(rightHandPosition), ::il2cpp_utils::ExtractType(headRotation), ::il2cpp_utils::ExtractType(leftHandRotation), ::il2cpp_utils::ExtractType(rightHandRotation)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, headPosition, leftHandPosition, rightHandPosition, headRotation, leftHandRotation, rightHandRotation);
}
// Autogenerated method: AvatarPoseController.UpdateBodyPosition
void GlobalNamespace::AvatarPoseController::UpdateBodyPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseController::UpdateBodyPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBodyPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: AvatarPoseController/PositionsWillBeSetDelegate
#include "GlobalNamespace/AvatarPoseController_PositionsWillBeSetDelegate.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AvatarPoseController/PositionsWillBeSetDelegate.Invoke
void GlobalNamespace::AvatarPoseController::PositionsWillBeSetDelegate::Invoke(UnityEngine::Vector3 headPosition, UnityEngine::Vector3 leftHandPosition, UnityEngine::Vector3 rightHandPosition, ByRef<UnityEngine::Vector3> newHeadPosition, ByRef<UnityEngine::Vector3> newLeftHandPosition, ByRef<UnityEngine::Vector3> newRightHandPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseController::PositionsWillBeSetDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headPosition), ::il2cpp_utils::ExtractType(leftHandPosition), ::il2cpp_utils::ExtractType(rightHandPosition), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, headPosition, leftHandPosition, rightHandPosition, byref(newHeadPosition), byref(newLeftHandPosition), byref(newRightHandPosition));
}
// Autogenerated method: AvatarPoseController/PositionsWillBeSetDelegate.BeginInvoke
System::IAsyncResult* GlobalNamespace::AvatarPoseController::PositionsWillBeSetDelegate::BeginInvoke(UnityEngine::Vector3 headPosition, UnityEngine::Vector3 leftHandPosition, UnityEngine::Vector3 rightHandPosition, ByRef<UnityEngine::Vector3> newHeadPosition, ByRef<UnityEngine::Vector3> newLeftHandPosition, ByRef<UnityEngine::Vector3> newRightHandPosition, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseController::PositionsWillBeSetDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headPosition), ::il2cpp_utils::ExtractType(leftHandPosition), ::il2cpp_utils::ExtractType(rightHandPosition), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, headPosition, leftHandPosition, rightHandPosition, byref(newHeadPosition), byref(newLeftHandPosition), byref(newRightHandPosition), callback, object);
}
// Autogenerated method: AvatarPoseController/PositionsWillBeSetDelegate.EndInvoke
void GlobalNamespace::AvatarPoseController::PositionsWillBeSetDelegate::EndInvoke(ByRef<UnityEngine::Vector3> newHeadPosition, ByRef<UnityEngine::Vector3> newLeftHandPosition, ByRef<UnityEngine::Vector3> newRightHandPosition, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseController::PositionsWillBeSetDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, byref(newHeadPosition), byref(newLeftHandPosition), byref(newRightHandPosition), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: AvatarPoseController/LatePositionsWillBeSetDelegate
#include "GlobalNamespace/AvatarPoseController_LatePositionsWillBeSetDelegate.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AvatarPoseController/LatePositionsWillBeSetDelegate.Invoke
void GlobalNamespace::AvatarPoseController::LatePositionsWillBeSetDelegate::Invoke(UnityEngine::Quaternion headRotation, UnityEngine::Vector3 headPosition, UnityEngine::Vector3 leftHandPosition, UnityEngine::Vector3 rightHandPosition, ByRef<UnityEngine::Vector3> newHeadPosition, ByRef<UnityEngine::Vector3> newLeftHandPosition, ByRef<UnityEngine::Vector3> newRightHandPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseController::LatePositionsWillBeSetDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headRotation), ::il2cpp_utils::ExtractType(headPosition), ::il2cpp_utils::ExtractType(leftHandPosition), ::il2cpp_utils::ExtractType(rightHandPosition), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, headRotation, headPosition, leftHandPosition, rightHandPosition, byref(newHeadPosition), byref(newLeftHandPosition), byref(newRightHandPosition));
}
// Autogenerated method: AvatarPoseController/LatePositionsWillBeSetDelegate.BeginInvoke
System::IAsyncResult* GlobalNamespace::AvatarPoseController::LatePositionsWillBeSetDelegate::BeginInvoke(UnityEngine::Quaternion headRotation, UnityEngine::Vector3 headPosition, UnityEngine::Vector3 leftHandPosition, UnityEngine::Vector3 rightHandPosition, ByRef<UnityEngine::Vector3> newHeadPosition, ByRef<UnityEngine::Vector3> newLeftHandPosition, ByRef<UnityEngine::Vector3> newRightHandPosition, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseController::LatePositionsWillBeSetDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headRotation), ::il2cpp_utils::ExtractType(headPosition), ::il2cpp_utils::ExtractType(leftHandPosition), ::il2cpp_utils::ExtractType(rightHandPosition), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, headRotation, headPosition, leftHandPosition, rightHandPosition, byref(newHeadPosition), byref(newLeftHandPosition), byref(newRightHandPosition), callback, object);
}
// Autogenerated method: AvatarPoseController/LatePositionsWillBeSetDelegate.EndInvoke
void GlobalNamespace::AvatarPoseController::LatePositionsWillBeSetDelegate::EndInvoke(ByRef<UnityEngine::Vector3> newHeadPosition, ByRef<UnityEngine::Vector3> newLeftHandPosition, ByRef<UnityEngine::Vector3> newRightHandPosition, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseController::LatePositionsWillBeSetDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, byref(newHeadPosition), byref(newLeftHandPosition), byref(newRightHandPosition), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: AvatarPoseController/RotationsWillBeSetDelegate
#include "GlobalNamespace/AvatarPoseController_RotationsWillBeSetDelegate.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AvatarPoseController/RotationsWillBeSetDelegate.Invoke
void GlobalNamespace::AvatarPoseController::RotationsWillBeSetDelegate::Invoke(UnityEngine::Quaternion headRotation, UnityEngine::Quaternion leftHandRotation, UnityEngine::Quaternion rightHandRotation, ByRef<UnityEngine::Quaternion> newHeadRotation, ByRef<UnityEngine::Quaternion> newLeftHandRotation, ByRef<UnityEngine::Quaternion> newRightHandRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseController::RotationsWillBeSetDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headRotation), ::il2cpp_utils::ExtractType(leftHandRotation), ::il2cpp_utils::ExtractType(rightHandRotation), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Quaternion&>()})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, headRotation, leftHandRotation, rightHandRotation, byref(newHeadRotation), byref(newLeftHandRotation), byref(newRightHandRotation));
}
// Autogenerated method: AvatarPoseController/RotationsWillBeSetDelegate.BeginInvoke
System::IAsyncResult* GlobalNamespace::AvatarPoseController::RotationsWillBeSetDelegate::BeginInvoke(UnityEngine::Quaternion headRotation, UnityEngine::Quaternion leftHandRotation, UnityEngine::Quaternion rightHandRotation, ByRef<UnityEngine::Quaternion> newHeadRotation, ByRef<UnityEngine::Quaternion> newLeftHandRotation, ByRef<UnityEngine::Quaternion> newRightHandRotation, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseController::RotationsWillBeSetDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headRotation), ::il2cpp_utils::ExtractType(leftHandRotation), ::il2cpp_utils::ExtractType(rightHandRotation), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, headRotation, leftHandRotation, rightHandRotation, byref(newHeadRotation), byref(newLeftHandRotation), byref(newRightHandRotation), callback, object);
}
// Autogenerated method: AvatarPoseController/RotationsWillBeSetDelegate.EndInvoke
void GlobalNamespace::AvatarPoseController::RotationsWillBeSetDelegate::EndInvoke(ByRef<UnityEngine::Quaternion> newHeadRotation, ByRef<UnityEngine::Quaternion> newLeftHandRotation, ByRef<UnityEngine::Quaternion> newRightHandRotation, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseController::RotationsWillBeSetDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, byref(newHeadRotation), byref(newLeftHandRotation), byref(newRightHandRotation), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarPoseMirror
#include "GlobalNamespace/AvatarPoseMirror.hpp"
// Including type: AvatarPoseController
#include "GlobalNamespace/AvatarPoseController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly AvatarPoseController _avatarPoseController
GlobalNamespace::AvatarPoseController*& GlobalNamespace::AvatarPoseMirror::dyn__avatarPoseController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseMirror::dyn__avatarPoseController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarPoseController"))->offset;
  return *reinterpret_cast<GlobalNamespace::AvatarPoseController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AvatarPoseMirror.Start
void GlobalNamespace::AvatarPoseMirror::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseMirror::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AvatarPoseMirror.HandleAvatarPoseControllerPositionsWillBeSet
void GlobalNamespace::AvatarPoseMirror::HandleAvatarPoseControllerPositionsWillBeSet(UnityEngine::Vector3 headPosition, UnityEngine::Vector3 leftHandPosition, UnityEngine::Vector3 rightHandPosition, ByRef<UnityEngine::Vector3> newHeadPosition, ByRef<UnityEngine::Vector3> newLeftHandPosition, ByRef<UnityEngine::Vector3> newRightHandPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseMirror::HandleAvatarPoseControllerPositionsWillBeSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AvatarPoseMirror", "HandleAvatarPoseControllerPositionsWillBeSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headPosition), ::il2cpp_utils::ExtractType(leftHandPosition), ::il2cpp_utils::ExtractType(rightHandPosition), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, headPosition, leftHandPosition, rightHandPosition, byref(newHeadPosition), byref(newLeftHandPosition), byref(newRightHandPosition));
}
// Autogenerated method: AvatarPoseMirror.HandleAvatarPoseControllerRotationsWillBeSet
void GlobalNamespace::AvatarPoseMirror::HandleAvatarPoseControllerRotationsWillBeSet(UnityEngine::Quaternion headRotation, UnityEngine::Quaternion leftHandRotation, UnityEngine::Quaternion rightHandRotation, ByRef<UnityEngine::Quaternion> newHeadRotation, ByRef<UnityEngine::Quaternion> newLeftHandRotation, ByRef<UnityEngine::Quaternion> newRightHandRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseMirror::HandleAvatarPoseControllerRotationsWillBeSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AvatarPoseMirror", "HandleAvatarPoseControllerRotationsWillBeSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headRotation), ::il2cpp_utils::ExtractType(leftHandRotation), ::il2cpp_utils::ExtractType(rightHandRotation), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, headRotation, leftHandRotation, rightHandRotation, byref(newHeadRotation), byref(newLeftHandRotation), byref(newRightHandRotation));
}
// Autogenerated method: AvatarPoseMirror.MirrorRotation
UnityEngine::Quaternion GlobalNamespace::AvatarPoseMirror::MirrorRotation(UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseMirror::MirrorRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AvatarPoseMirror", "MirrorRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotation)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rotation);
}
// Autogenerated method: AvatarPoseMirror.MirrorPosition
UnityEngine::Vector3 GlobalNamespace::AvatarPoseMirror::MirrorPosition(UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseMirror::MirrorPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AvatarPoseMirror", "MirrorPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, position);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarPoseRestrictions
#include "GlobalNamespace/AvatarPoseRestrictions.hpp"
// Including type: AvatarPoseController
#include "GlobalNamespace/AvatarPoseController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _maxHeadSquareDistanceFromCenter
float& GlobalNamespace::AvatarPoseRestrictions::dyn__maxHeadSquareDistanceFromCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseRestrictions::dyn__maxHeadSquareDistanceFromCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxHeadSquareDistanceFromCenter"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minHeadYPos
float& GlobalNamespace::AvatarPoseRestrictions::dyn__minHeadYPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseRestrictions::dyn__minHeadYPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minHeadYPos"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxHeadYPos
float& GlobalNamespace::AvatarPoseRestrictions::dyn__maxHeadYPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseRestrictions::dyn__maxHeadYPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxHeadYPos"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minHandXZSquareDistanceFromHeadCenter
float& GlobalNamespace::AvatarPoseRestrictions::dyn__minHandXZSquareDistanceFromHeadCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseRestrictions::dyn__minHandXZSquareDistanceFromHeadCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minHandXZSquareDistanceFromHeadCenter"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxHandXZSquareDistanceFromHeadCenter
float& GlobalNamespace::AvatarPoseRestrictions::dyn__maxHandXZSquareDistanceFromHeadCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseRestrictions::dyn__maxHandXZSquareDistanceFromHeadCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxHandXZSquareDistanceFromHeadCenter"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minHandYDistanceFromHeadCenter
float& GlobalNamespace::AvatarPoseRestrictions::dyn__minHandYDistanceFromHeadCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseRestrictions::dyn__minHandYDistanceFromHeadCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minHandYDistanceFromHeadCenter"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxHandYDistanceFromHeadCenter
float& GlobalNamespace::AvatarPoseRestrictions::dyn__maxHandYDistanceFromHeadCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseRestrictions::dyn__maxHandYDistanceFromHeadCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxHandYDistanceFromHeadCenter"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _forceHeadPosition
bool& GlobalNamespace::AvatarPoseRestrictions::dyn__forceHeadPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseRestrictions::dyn__forceHeadPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_forceHeadPosition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _centerHeadOffset
UnityEngine::Vector3& GlobalNamespace::AvatarPoseRestrictions::dyn__centerHeadOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseRestrictions::dyn__centerHeadOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_centerHeadOffset"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AvatarPoseController _avatarPoseController
GlobalNamespace::AvatarPoseController*& GlobalNamespace::AvatarPoseRestrictions::dyn__avatarPoseController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseRestrictions::dyn__avatarPoseController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarPoseController"))->offset;
  return *reinterpret_cast<GlobalNamespace::AvatarPoseController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AvatarPoseRestrictions.Start
void GlobalNamespace::AvatarPoseRestrictions::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseRestrictions::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AvatarPoseRestrictions.HandleAvatarPoseControllerPositionsWillBeSet
void GlobalNamespace::AvatarPoseRestrictions::HandleAvatarPoseControllerPositionsWillBeSet(UnityEngine::Quaternion headRotation, UnityEngine::Vector3 headPosition, UnityEngine::Vector3 leftHandPosition, UnityEngine::Vector3 rightHandPosition, ByRef<UnityEngine::Vector3> newHeadPosition, ByRef<UnityEngine::Vector3> newLeftHandPosition, ByRef<UnityEngine::Vector3> newRightHandPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseRestrictions::HandleAvatarPoseControllerPositionsWillBeSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleAvatarPoseControllerPositionsWillBeSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headRotation), ::il2cpp_utils::ExtractType(headPosition), ::il2cpp_utils::ExtractType(leftHandPosition), ::il2cpp_utils::ExtractType(rightHandPosition), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, headRotation, headPosition, leftHandPosition, rightHandPosition, byref(newHeadPosition), byref(newLeftHandPosition), byref(newRightHandPosition));
}
// Autogenerated method: AvatarPoseRestrictions.LimitHandPositionRelativeToHead
UnityEngine::Vector3 GlobalNamespace::AvatarPoseRestrictions::LimitHandPositionRelativeToHead(UnityEngine::Vector3 handPosition, UnityEngine::Vector3 headCenter) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPoseRestrictions::LimitHandPositionRelativeToHead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LimitHandPositionRelativeToHead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handPosition), ::il2cpp_utils::ExtractType(headCenter)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method, handPosition, headCenter);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarPropertyBlockColorSetter
#include "GlobalNamespace/AvatarPropertyBlockColorSetter.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.MaterialPropertyBlock
#include "UnityEngine/MaterialPropertyBlock.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF005E0
// Autogenerated static field getter
// Get static field: static private UnityEngine.MaterialPropertyBlock _materialPropertyBlock
UnityEngine::MaterialPropertyBlock* GlobalNamespace::AvatarPropertyBlockColorSetter::_get__materialPropertyBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPropertyBlockColorSetter::_get__materialPropertyBlock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::MaterialPropertyBlock*>("", "AvatarPropertyBlockColorSetter", "_materialPropertyBlock"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.MaterialPropertyBlock _materialPropertyBlock
void GlobalNamespace::AvatarPropertyBlockColorSetter::_set__materialPropertyBlock(UnityEngine::MaterialPropertyBlock* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPropertyBlockColorSetter::_set__materialPropertyBlock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AvatarPropertyBlockColorSetter", "_materialPropertyBlock", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _defaultColor
UnityEngine::Color& GlobalNamespace::AvatarPropertyBlockColorSetter::dyn__defaultColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPropertyBlockColorSetter::dyn__defaultColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _darkerColorMultiplier
float& GlobalNamespace::AvatarPropertyBlockColorSetter::dyn__darkerColorMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPropertyBlockColorSetter::dyn__darkerColorMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_darkerColorMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _whiteBoost
float& GlobalNamespace::AvatarPropertyBlockColorSetter::dyn__whiteBoost() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPropertyBlockColorSetter::dyn__whiteBoost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whiteBoost"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _editInPlayMode
bool& GlobalNamespace::AvatarPropertyBlockColorSetter::dyn__editInPlayMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPropertyBlockColorSetter::dyn__editInPlayMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editInPlayMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer _renderer
UnityEngine::Renderer*& GlobalNamespace::AvatarPropertyBlockColorSetter::dyn__renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPropertyBlockColorSetter::dyn__renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderer"))->offset;
  return *reinterpret_cast<UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _rimLightColor
UnityEngine::Color& GlobalNamespace::AvatarPropertyBlockColorSetter::dyn__rimLightColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPropertyBlockColorSetter::dyn__rimLightColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rimLightColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _mainColor
UnityEngine::Color& GlobalNamespace::AvatarPropertyBlockColorSetter::dyn__mainColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPropertyBlockColorSetter::dyn__mainColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _boostColor
UnityEngine::Color& GlobalNamespace::AvatarPropertyBlockColorSetter::dyn__boostColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPropertyBlockColorSetter::dyn__boostColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_boostColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _highlighted
bool& GlobalNamespace::AvatarPropertyBlockColorSetter::dyn__highlighted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPropertyBlockColorSetter::dyn__highlighted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlighted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AvatarPropertyBlockColorSetter.Awake
void GlobalNamespace::AvatarPropertyBlockColorSetter::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPropertyBlockColorSetter::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AvatarPropertyBlockColorSetter.OnValidate
void GlobalNamespace::AvatarPropertyBlockColorSetter::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPropertyBlockColorSetter::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AvatarPropertyBlockColorSetter.SetColor
void GlobalNamespace::AvatarPropertyBlockColorSetter::SetColor(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPropertyBlockColorSetter::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, color);
}
// Autogenerated method: AvatarPropertyBlockColorSetter.SetColors
void GlobalNamespace::AvatarPropertyBlockColorSetter::SetColors(UnityEngine::Color mainColor, UnityEngine::Color rimLightColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPropertyBlockColorSetter::SetColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mainColor), ::il2cpp_utils::ExtractType(rimLightColor)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, mainColor, rimLightColor);
}
// Autogenerated method: AvatarPropertyBlockColorSetter.SetHighlight
void GlobalNamespace::AvatarPropertyBlockColorSetter::SetHighlight(bool highlighted, int uvSegment) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPropertyBlockColorSetter::SetHighlight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHighlight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(highlighted), ::il2cpp_utils::ExtractType(uvSegment)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, highlighted, uvSegment);
}
// Autogenerated method: AvatarPropertyBlockColorSetter.UpdateRenderer
void GlobalNamespace::AvatarPropertyBlockColorSetter::UpdateRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarPropertyBlockColorSetter::UpdateRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarTweenController
#include "GlobalNamespace/AvatarTweenController.hpp"
// Including type: AvatarTweenController/<>c__DisplayClass52_0
#include "GlobalNamespace/AvatarTweenController_--c__DisplayClass52_0.hpp"
// Including type: AvatarTweenController/<AppearAnimation>d__53
#include "GlobalNamespace/AvatarTweenController_-AppearAnimation-d__53.hpp"
// Including type: AvatarTweenController/<DisappearAnimation>d__58
#include "GlobalNamespace/AvatarTweenController_-DisappearAnimation-d__58.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Tweening.TimeTweeningManager
#include "Tweening/TimeTweeningManager.hpp"
// Including type: Tweening.Tween`1
#include "Tweening/Tween_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _avatarTransform
UnityEngine::Transform*& GlobalNamespace::AvatarTweenController::dyn__avatarTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::dyn__avatarTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _headParent
UnityEngine::Transform*& GlobalNamespace::AvatarTweenController::dyn__headParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::dyn__headParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headParent"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _leftHandTransform
UnityEngine::Transform*& GlobalNamespace::AvatarTweenController::dyn__leftHandTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::dyn__leftHandTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHandTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _rightHandTransform
UnityEngine::Transform*& GlobalNamespace::AvatarTweenController::dyn__rightHandTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::dyn__rightHandTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHandTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _bodyTransform
UnityEngine::Transform*& GlobalNamespace::AvatarTweenController::dyn__bodyTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::dyn__bodyTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bodyTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _headInnerTransform
UnityEngine::Transform*& GlobalNamespace::AvatarTweenController::dyn__headInnerTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::dyn__headInnerTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headInnerTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _leftHandInnerTransform
UnityEngine::Transform*& GlobalNamespace::AvatarTweenController::dyn__leftHandInnerTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::dyn__leftHandInnerTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHandInnerTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _rightHandInnerTransform
UnityEngine::Transform*& GlobalNamespace::AvatarTweenController::dyn__rightHandInnerTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::dyn__rightHandInnerTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHandInnerTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _bodyInnerTransform
UnityEngine::Transform*& GlobalNamespace::AvatarTweenController::dyn__bodyInnerTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::dyn__bodyInnerTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bodyInnerTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _popDuration
float& GlobalNamespace::AvatarTweenController::dyn__popDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::dyn__popDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_popDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.EaseType _popEaseType
Tweening::EaseType& GlobalNamespace::AvatarTweenController::dyn__popEaseType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::dyn__popEaseType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_popEaseType"))->offset;
  return *reinterpret_cast<Tweening::EaseType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _headPopAmount
float& GlobalNamespace::AvatarTweenController::dyn__headPopAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::dyn__headPopAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headPopAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _handsPopAmount
float& GlobalNamespace::AvatarTweenController::dyn__handsPopAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::dyn__handsPopAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handsPopAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _clothesPopAmount
float& GlobalNamespace::AvatarTweenController::dyn__clothesPopAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::dyn__clothesPopAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clothesPopAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _allPopAmount
float& GlobalNamespace::AvatarTweenController::dyn__allPopAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::dyn__allPopAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allPopAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _appearDuration
float& GlobalNamespace::AvatarTweenController::dyn__appearDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::dyn__appearDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_appearDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _appearSpacing
float& GlobalNamespace::AvatarTweenController::dyn__appearSpacing() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::dyn__appearSpacing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_appearSpacing"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _appearHeight
float& GlobalNamespace::AvatarTweenController::dyn__appearHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::dyn__appearHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_appearHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _squashFactor
UnityEngine::Vector3& GlobalNamespace::AvatarTweenController::dyn__squashFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::dyn__squashFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_squashFactor"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _disappearDuration
float& GlobalNamespace::AvatarTweenController::dyn__disappearDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::dyn__disappearDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disappearDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _disappearHeight
float& GlobalNamespace::AvatarTweenController::dyn__disappearHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::dyn__disappearHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disappearHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _disappearSquash
UnityEngine::Vector3& GlobalNamespace::AvatarTweenController::dyn__disappearSquash() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::dyn__disappearSquash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disappearSquash"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.EaseType _disappearScaleEase
Tweening::EaseType& GlobalNamespace::AvatarTweenController::dyn__disappearScaleEase() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::dyn__disappearScaleEase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disappearScaleEase"))->offset;
  return *reinterpret_cast<Tweening::EaseType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.EaseType _disappearPositionEase
Tweening::EaseType& GlobalNamespace::AvatarTweenController::dyn__disappearPositionEase() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::dyn__disappearPositionEase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disappearPositionEase"))->offset;
  return *reinterpret_cast<Tweening::EaseType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Tweening.TimeTweeningManager _tweeningManager
Tweening::TimeTweeningManager*& GlobalNamespace::AvatarTweenController::dyn__tweeningManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::dyn__tweeningManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tweeningManager"))->offset;
  return *reinterpret_cast<Tweening::TimeTweeningManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.Tween`1<System.Single> _popHeadTween
Tweening::Tween_1<float>*& GlobalNamespace::AvatarTweenController::dyn__popHeadTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::dyn__popHeadTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_popHeadTween"))->offset;
  return *reinterpret_cast<Tweening::Tween_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.Tween`1<System.Single> _popLeftHandTween
Tweening::Tween_1<float>*& GlobalNamespace::AvatarTweenController::dyn__popLeftHandTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::dyn__popLeftHandTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_popLeftHandTween"))->offset;
  return *reinterpret_cast<Tweening::Tween_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.Tween`1<System.Single> _popRightHandTween
Tweening::Tween_1<float>*& GlobalNamespace::AvatarTweenController::dyn__popRightHandTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::dyn__popRightHandTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_popRightHandTween"))->offset;
  return *reinterpret_cast<Tweening::Tween_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.Tween`1<System.Single> _popClothesTween
Tweening::Tween_1<float>*& GlobalNamespace::AvatarTweenController::dyn__popClothesTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::dyn__popClothesTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_popClothesTween"))->offset;
  return *reinterpret_cast<Tweening::Tween_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.Tween`1<UnityEngine.Vector3> _appearHeadPositionTween
Tweening::Tween_1<UnityEngine::Vector3>*& GlobalNamespace::AvatarTweenController::dyn__appearHeadPositionTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::dyn__appearHeadPositionTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_appearHeadPositionTween"))->offset;
  return *reinterpret_cast<Tweening::Tween_1<UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.Tween`1<UnityEngine.Vector3> _appearHeadScaleTween
Tweening::Tween_1<UnityEngine::Vector3>*& GlobalNamespace::AvatarTweenController::dyn__appearHeadScaleTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::dyn__appearHeadScaleTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_appearHeadScaleTween"))->offset;
  return *reinterpret_cast<Tweening::Tween_1<UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.Tween`1<UnityEngine.Vector3> _appearBodyPositionTween
Tweening::Tween_1<UnityEngine::Vector3>*& GlobalNamespace::AvatarTweenController::dyn__appearBodyPositionTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::dyn__appearBodyPositionTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_appearBodyPositionTween"))->offset;
  return *reinterpret_cast<Tweening::Tween_1<UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.Tween`1<UnityEngine.Vector3> _appearBodyScaleTween
Tweening::Tween_1<UnityEngine::Vector3>*& GlobalNamespace::AvatarTweenController::dyn__appearBodyScaleTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::dyn__appearBodyScaleTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_appearBodyScaleTween"))->offset;
  return *reinterpret_cast<Tweening::Tween_1<UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.Tween`1<UnityEngine.Vector3> _appearRightHandPositionTween
Tweening::Tween_1<UnityEngine::Vector3>*& GlobalNamespace::AvatarTweenController::dyn__appearRightHandPositionTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::dyn__appearRightHandPositionTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_appearRightHandPositionTween"))->offset;
  return *reinterpret_cast<Tweening::Tween_1<UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.Tween`1<UnityEngine.Vector3> _appearRightHandScaleTween
Tweening::Tween_1<UnityEngine::Vector3>*& GlobalNamespace::AvatarTweenController::dyn__appearRightHandScaleTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::dyn__appearRightHandScaleTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_appearRightHandScaleTween"))->offset;
  return *reinterpret_cast<Tweening::Tween_1<UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.Tween`1<UnityEngine.Vector3> _appearLeftHandPositionTween
Tweening::Tween_1<UnityEngine::Vector3>*& GlobalNamespace::AvatarTweenController::dyn__appearLeftHandPositionTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::dyn__appearLeftHandPositionTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_appearLeftHandPositionTween"))->offset;
  return *reinterpret_cast<Tweening::Tween_1<UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.Tween`1<UnityEngine.Vector3> _appearLeftHandScaleTween
Tweening::Tween_1<UnityEngine::Vector3>*& GlobalNamespace::AvatarTweenController::dyn__appearLeftHandScaleTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::dyn__appearLeftHandScaleTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_appearLeftHandScaleTween"))->offset;
  return *reinterpret_cast<Tweening::Tween_1<UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.Tween`1<UnityEngine.Vector3> _disappearScaleTween
Tweening::Tween_1<UnityEngine::Vector3>*& GlobalNamespace::AvatarTweenController::dyn__disappearScaleTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::dyn__disappearScaleTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disappearScaleTween"))->offset;
  return *reinterpret_cast<Tweening::Tween_1<UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.Tween`1<UnityEngine.Vector3> _disappearPositionTween
Tweening::Tween_1<UnityEngine::Vector3>*& GlobalNamespace::AvatarTweenController::dyn__disappearPositionTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::dyn__disappearPositionTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_disappearPositionTween"))->offset;
  return *reinterpret_cast<Tweening::Tween_1<UnityEngine::Vector3>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _avatarLocalPosition
UnityEngine::Vector3& GlobalNamespace::AvatarTweenController::dyn__avatarLocalPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::dyn__avatarLocalPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarLocalPosition"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _avatarLocalScale
UnityEngine::Vector3& GlobalNamespace::AvatarTweenController::dyn__avatarLocalScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::dyn__avatarLocalScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarLocalScale"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AvatarTweenController.Awake
void GlobalNamespace::AvatarTweenController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AvatarTweenController.OnDisable
void GlobalNamespace::AvatarTweenController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AvatarTweenController.PresentAvatar
void GlobalNamespace::AvatarTweenController::PresentAvatar() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::PresentAvatar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PresentAvatar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AvatarTweenController.HideAvatar
void GlobalNamespace::AvatarTweenController::HideAvatar() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::HideAvatar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HideAvatar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AvatarTweenController.PopAll
void GlobalNamespace::AvatarTweenController::PopAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::PopAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AvatarTweenController.PopHead
void GlobalNamespace::AvatarTweenController::PopHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::PopHead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopHead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AvatarTweenController.PopHands
void GlobalNamespace::AvatarTweenController::PopHands() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::PopHands");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopHands", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AvatarTweenController.PopClothes
void GlobalNamespace::AvatarTweenController::PopClothes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::PopClothes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopClothes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AvatarTweenController.PopHead
void GlobalNamespace::AvatarTweenController::PopHead(float popAmount) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::PopHead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopHead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(popAmount)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, popAmount);
}
// Autogenerated method: AvatarTweenController.PopHands
void GlobalNamespace::AvatarTweenController::PopHands(float popAmount) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::PopHands");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopHands", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(popAmount)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, popAmount);
}
// Autogenerated method: AvatarTweenController.PopClothes
void GlobalNamespace::AvatarTweenController::PopClothes(float popAmount) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::PopClothes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopClothes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(popAmount)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, popAmount);
}
// Autogenerated method: AvatarTweenController.CreatePopTween
Tweening::Tween_1<float>* GlobalNamespace::AvatarTweenController::CreatePopTween(UnityEngine::Transform* partTransform, float popAmount) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::CreatePopTween");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePopTween", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(partTransform), ::il2cpp_utils::ExtractType(popAmount)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Tweening::Tween_1<float>*, false>(___instance_arg, ___internal__method, partTransform, popAmount);
}
// Autogenerated method: AvatarTweenController.AppearAnimation
System::Collections::IEnumerator* GlobalNamespace::AvatarTweenController::AppearAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::AppearAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppearAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AvatarTweenController.AppearBody
void GlobalNamespace::AvatarTweenController::AppearBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::AppearBody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppearBody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AvatarTweenController.AppearHead
void GlobalNamespace::AvatarTweenController::AppearHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::AppearHead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppearHead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AvatarTweenController.AppearLeftHand
void GlobalNamespace::AvatarTweenController::AppearLeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::AppearLeftHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppearLeftHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AvatarTweenController.AppearRightHand
void GlobalNamespace::AvatarTweenController::AppearRightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::AppearRightHand");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppearRightHand", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AvatarTweenController.DisappearAnimation
System::Collections::IEnumerator* GlobalNamespace::AvatarTweenController::DisappearAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::DisappearAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisappearAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AvatarTweenController.StopAll
void GlobalNamespace::AvatarTweenController::StopAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::StopAll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AvatarTweenController.<AppearBody>b__54_0
void GlobalNamespace::AvatarTweenController::$AppearBody$b__54_0(UnityEngine::Vector3 val) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::<AppearBody>b__54_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AppearBody>b__54_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, val);
}
// Autogenerated method: AvatarTweenController.<AppearBody>b__54_1
void GlobalNamespace::AvatarTweenController::$AppearBody$b__54_1(UnityEngine::Vector3 val) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::<AppearBody>b__54_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AppearBody>b__54_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, val);
}
// Autogenerated method: AvatarTweenController.<AppearHead>b__55_0
void GlobalNamespace::AvatarTweenController::$AppearHead$b__55_0(UnityEngine::Vector3 val) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::<AppearHead>b__55_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AppearHead>b__55_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, val);
}
// Autogenerated method: AvatarTweenController.<AppearHead>b__55_1
void GlobalNamespace::AvatarTweenController::$AppearHead$b__55_1(UnityEngine::Vector3 val) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::<AppearHead>b__55_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AppearHead>b__55_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, val);
}
// Autogenerated method: AvatarTweenController.<AppearLeftHand>b__56_0
void GlobalNamespace::AvatarTweenController::$AppearLeftHand$b__56_0(UnityEngine::Vector3 val) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::<AppearLeftHand>b__56_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AppearLeftHand>b__56_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, val);
}
// Autogenerated method: AvatarTweenController.<AppearLeftHand>b__56_1
void GlobalNamespace::AvatarTweenController::$AppearLeftHand$b__56_1(UnityEngine::Vector3 val) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::<AppearLeftHand>b__56_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AppearLeftHand>b__56_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, val);
}
// Autogenerated method: AvatarTweenController.<AppearRightHand>b__57_0
void GlobalNamespace::AvatarTweenController::$AppearRightHand$b__57_0(UnityEngine::Vector3 val) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::<AppearRightHand>b__57_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AppearRightHand>b__57_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, val);
}
// Autogenerated method: AvatarTweenController.<AppearRightHand>b__57_1
void GlobalNamespace::AvatarTweenController::$AppearRightHand$b__57_1(UnityEngine::Vector3 val) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::<AppearRightHand>b__57_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AppearRightHand>b__57_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, val);
}
// Autogenerated method: AvatarTweenController.<DisappearAnimation>b__58_0
void GlobalNamespace::AvatarTweenController::$DisappearAnimation$b__58_0(UnityEngine::Vector3 val) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::<DisappearAnimation>b__58_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DisappearAnimation>b__58_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, val);
}
// Autogenerated method: AvatarTweenController.<DisappearAnimation>b__58_1
void GlobalNamespace::AvatarTweenController::$DisappearAnimation$b__58_1(UnityEngine::Vector3 val) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::<DisappearAnimation>b__58_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DisappearAnimation>b__58_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, val);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarTweenController/<>c__DisplayClass52_0
#include "GlobalNamespace/AvatarTweenController_--c__DisplayClass52_0.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform partTransform
UnityEngine::Transform*& GlobalNamespace::AvatarTweenController::$$c__DisplayClass52_0::dyn_partTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::$$c__DisplayClass52_0::dyn_partTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "partTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 originalScale
UnityEngine::Vector3& GlobalNamespace::AvatarTweenController::$$c__DisplayClass52_0::dyn_originalScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::$$c__DisplayClass52_0::dyn_originalScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "originalScale"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AvatarTweenController/<>c__DisplayClass52_0.<CreatePopTween>b__0
void GlobalNamespace::AvatarTweenController::$$c__DisplayClass52_0::$CreatePopTween$b__0(float val) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::$$c__DisplayClass52_0::<CreatePopTween>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreatePopTween>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, val);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: AvatarTweenController/<AppearAnimation>d__53
#include "GlobalNamespace/AvatarTweenController_-AppearAnimation-d__53.hpp"
// Including type: UnityEngine.WaitForSeconds
#include "UnityEngine/WaitForSeconds.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::AvatarTweenController::$AppearAnimation$d__53::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::$AppearAnimation$d__53::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::AvatarTweenController::$AppearAnimation$d__53::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::$AppearAnimation$d__53::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AvatarTweenController <>4__this
GlobalNamespace::AvatarTweenController*& GlobalNamespace::AvatarTweenController::$AppearAnimation$d__53::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::$AppearAnimation$d__53::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::AvatarTweenController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.WaitForSeconds <waitYieldInstruction>5__2
UnityEngine::WaitForSeconds*& GlobalNamespace::AvatarTweenController::$AppearAnimation$d__53::dyn_$waitYieldInstruction$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::$AppearAnimation$d__53::dyn_$waitYieldInstruction$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<waitYieldInstruction>5__2"))->offset;
  return *reinterpret_cast<UnityEngine::WaitForSeconds**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AvatarTweenController/<AppearAnimation>d__53.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::AvatarTweenController::$AppearAnimation$d__53::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::$AppearAnimation$d__53::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AvatarTweenController/<AppearAnimation>d__53.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::AvatarTweenController::$AppearAnimation$d__53::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::$AppearAnimation$d__53::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AvatarTweenController/<AppearAnimation>d__53.System.IDisposable.Dispose
void GlobalNamespace::AvatarTweenController::$AppearAnimation$d__53::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::$AppearAnimation$d__53::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AvatarTweenController/<AppearAnimation>d__53.MoveNext
bool GlobalNamespace::AvatarTweenController::$AppearAnimation$d__53::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::$AppearAnimation$d__53::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AvatarTweenController/<AppearAnimation>d__53.System.Collections.IEnumerator.Reset
void GlobalNamespace::AvatarTweenController::$AppearAnimation$d__53::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::$AppearAnimation$d__53::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: AvatarTweenController/<DisappearAnimation>d__58
#include "GlobalNamespace/AvatarTweenController_-DisappearAnimation-d__58.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AvatarTweenController <>4__this
GlobalNamespace::AvatarTweenController*& GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::AvatarTweenController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AvatarTweenController/<DisappearAnimation>d__58.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AvatarTweenController/<DisappearAnimation>d__58.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AvatarTweenController/<DisappearAnimation>d__58.System.IDisposable.Dispose
void GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AvatarTweenController/<DisappearAnimation>d__58.MoveNext
bool GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AvatarTweenController/<DisappearAnimation>d__58.System.Collections.IEnumerator.Reset
void GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarTweenController::$DisappearAnimation$d__58::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AvatarVisualController
#include "GlobalNamespace/AvatarVisualController.hpp"
// Including type: AvatarVisualController/HighlighterDelegate
#include "GlobalNamespace/AvatarVisualController_HighlighterDelegate.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: UnityEngine.SpriteRenderer
#include "UnityEngine/SpriteRenderer.hpp"
// Including type: MulticolorAvatarPartPropertyBlockSetter
#include "GlobalNamespace/MulticolorAvatarPartPropertyBlockSetter.hpp"
// Including type: AvatarPropertyBlockColorSetter
#include "GlobalNamespace/AvatarPropertyBlockColorSetter.hpp"
// Including type: AvatarPartsModel
#include "GlobalNamespace/AvatarPartsModel.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: AvatarData
#include "GlobalNamespace/AvatarData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshFilter _headTopMeshFilter
UnityEngine::MeshFilter*& GlobalNamespace::AvatarVisualController::dyn__headTopMeshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarVisualController::dyn__headTopMeshFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headTopMeshFilter"))->offset;
  return *reinterpret_cast<UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshFilter _glassesMeshFilter
UnityEngine::MeshFilter*& GlobalNamespace::AvatarVisualController::dyn__glassesMeshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarVisualController::dyn__glassesMeshFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glassesMeshFilter"))->offset;
  return *reinterpret_cast<UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshFilter _facialHairMeshFilter
UnityEngine::MeshFilter*& GlobalNamespace::AvatarVisualController::dyn__facialHairMeshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarVisualController::dyn__facialHairMeshFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_facialHairMeshFilter"))->offset;
  return *reinterpret_cast<UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshFilter _leftHandsHairMeshFilter
UnityEngine::MeshFilter*& GlobalNamespace::AvatarVisualController::dyn__leftHandsHairMeshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarVisualController::dyn__leftHandsHairMeshFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHandsHairMeshFilter"))->offset;
  return *reinterpret_cast<UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshFilter _rightHandsHairMeshFilter
UnityEngine::MeshFilter*& GlobalNamespace::AvatarVisualController::dyn__rightHandsHairMeshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarVisualController::dyn__rightHandsHairMeshFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHandsHairMeshFilter"))->offset;
  return *reinterpret_cast<UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SpriteRenderer _eyesSprite
UnityEngine::SpriteRenderer*& GlobalNamespace::AvatarVisualController::dyn__eyesSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarVisualController::dyn__eyesSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eyesSprite"))->offset;
  return *reinterpret_cast<UnityEngine::SpriteRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SpriteRenderer _mouthSprite
UnityEngine::SpriteRenderer*& GlobalNamespace::AvatarVisualController::dyn__mouthSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarVisualController::dyn__mouthSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mouthSprite"))->offset;
  return *reinterpret_cast<UnityEngine::SpriteRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshFilter _bodyMeshFilter
UnityEngine::MeshFilter*& GlobalNamespace::AvatarVisualController::dyn__bodyMeshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarVisualController::dyn__bodyMeshFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bodyMeshFilter"))->offset;
  return *reinterpret_cast<UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MulticolorAvatarPartPropertyBlockSetter _headTopPropertyBlockColorSetter
GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter*& GlobalNamespace::AvatarVisualController::dyn__headTopPropertyBlockColorSetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarVisualController::dyn__headTopPropertyBlockColorSetter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headTopPropertyBlockColorSetter"))->offset;
  return *reinterpret_cast<GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarPropertyBlockColorSetter _glassesPropertyBlockColorSetter
GlobalNamespace::AvatarPropertyBlockColorSetter*& GlobalNamespace::AvatarVisualController::dyn__glassesPropertyBlockColorSetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarVisualController::dyn__glassesPropertyBlockColorSetter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glassesPropertyBlockColorSetter"))->offset;
  return *reinterpret_cast<GlobalNamespace::AvatarPropertyBlockColorSetter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarPropertyBlockColorSetter _facialHairPropertyBlockColorSetter
GlobalNamespace::AvatarPropertyBlockColorSetter*& GlobalNamespace::AvatarVisualController::dyn__facialHairPropertyBlockColorSetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarVisualController::dyn__facialHairPropertyBlockColorSetter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_facialHairPropertyBlockColorSetter"))->offset;
  return *reinterpret_cast<GlobalNamespace::AvatarPropertyBlockColorSetter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarPropertyBlockColorSetter _skinPropertyBlockColorSetter
GlobalNamespace::AvatarPropertyBlockColorSetter*& GlobalNamespace::AvatarVisualController::dyn__skinPropertyBlockColorSetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarVisualController::dyn__skinPropertyBlockColorSetter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_skinPropertyBlockColorSetter"))->offset;
  return *reinterpret_cast<GlobalNamespace::AvatarPropertyBlockColorSetter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MulticolorAvatarPartPropertyBlockSetter _clothesPropertyBlockSetter
GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter*& GlobalNamespace::AvatarVisualController::dyn__clothesPropertyBlockSetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarVisualController::dyn__clothesPropertyBlockSetter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clothesPropertyBlockSetter"))->offset;
  return *reinterpret_cast<GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MulticolorAvatarPartPropertyBlockSetter _leftHandPropertyBlockSetter
GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter*& GlobalNamespace::AvatarVisualController::dyn__leftHandPropertyBlockSetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarVisualController::dyn__leftHandPropertyBlockSetter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHandPropertyBlockSetter"))->offset;
  return *reinterpret_cast<GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MulticolorAvatarPartPropertyBlockSetter _rightHandPropertyBlockSetter
GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter*& GlobalNamespace::AvatarVisualController::dyn__rightHandPropertyBlockSetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarVisualController::dyn__rightHandPropertyBlockSetter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHandPropertyBlockSetter"))->offset;
  return *reinterpret_cast<GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AvatarPartsModel _avatarPartsModel
GlobalNamespace::AvatarPartsModel*& GlobalNamespace::AvatarVisualController::dyn__avatarPartsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarVisualController::dyn__avatarPartsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarPartsModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::AvatarPartsModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<EditAvatarViewController/AvatarEditPart,AvatarVisualController/HighlighterDelegate> _avatarPartHighlightSetters
System::Collections::Generic::Dictionary_2<GlobalNamespace::EditAvatarViewController::AvatarEditPart, GlobalNamespace::AvatarVisualController::HighlighterDelegate*>*& GlobalNamespace::AvatarVisualController::dyn__avatarPartHighlightSetters() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarVisualController::dyn__avatarPartHighlightSetters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarPartHighlightSetters"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<GlobalNamespace::EditAvatarViewController::AvatarEditPart, GlobalNamespace::AvatarVisualController::HighlighterDelegate*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _lightColor
UnityEngine::Color& GlobalNamespace::AvatarVisualController::dyn__lightColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarVisualController::dyn__lightColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarData _avatarData
GlobalNamespace::AvatarData*& GlobalNamespace::AvatarVisualController::dyn__avatarData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarVisualController::dyn__avatarData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarData"))->offset;
  return *reinterpret_cast<GlobalNamespace::AvatarData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AvatarVisualController/HighlighterDelegate _currentHighlighter
GlobalNamespace::AvatarVisualController::HighlighterDelegate*& GlobalNamespace::AvatarVisualController::dyn__currentHighlighter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarVisualController::dyn__currentHighlighter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentHighlighter"))->offset;
  return *reinterpret_cast<GlobalNamespace::AvatarVisualController::HighlighterDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AvatarVisualController.get_lightColor
UnityEngine::Color GlobalNamespace::AvatarVisualController::get_lightColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarVisualController::get_lightColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lightColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AvatarVisualController.Awake
void GlobalNamespace::AvatarVisualController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarVisualController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AvatarVisualController.UpdateAvatarVisual
void GlobalNamespace::AvatarVisualController::UpdateAvatarVisual(GlobalNamespace::AvatarData* avatarData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarVisualController::UpdateAvatarVisual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAvatarVisual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(avatarData)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, avatarData);
}
// Autogenerated method: AvatarVisualController.SetLightColor
void GlobalNamespace::AvatarVisualController::SetLightColor(UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarVisualController::SetLightColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLightColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, color);
}
// Autogenerated method: AvatarVisualController.UpdateAvatarColors
void GlobalNamespace::AvatarVisualController::UpdateAvatarColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarVisualController::UpdateAvatarColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAvatarColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AvatarVisualController.HighlightEditedPart
void GlobalNamespace::AvatarVisualController::HighlightEditedPart(GlobalNamespace::EditAvatarViewController::AvatarEditPart editPart, int uvSegment) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarVisualController::HighlightEditedPart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HighlightEditedPart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(editPart), ::il2cpp_utils::ExtractType(uvSegment)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, editPart, uvSegment);
}
// Autogenerated method: AvatarVisualController.DisableEditedPartHighlight
void GlobalNamespace::AvatarVisualController::DisableEditedPartHighlight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarVisualController::DisableEditedPartHighlight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableEditedPartHighlight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AvatarVisualController.SetHandsHighlight
void GlobalNamespace::AvatarVisualController::SetHandsHighlight(bool highlighted, int uvSegment) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarVisualController::SetHandsHighlight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHandsHighlight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(highlighted), ::il2cpp_utils::ExtractType(uvSegment)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, highlighted, uvSegment);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: AvatarVisualController/HighlighterDelegate
#include "GlobalNamespace/AvatarVisualController_HighlighterDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AvatarVisualController/HighlighterDelegate.Invoke
void GlobalNamespace::AvatarVisualController::HighlighterDelegate::Invoke(bool highlighted, int uvSegmentNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarVisualController::HighlighterDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(highlighted), ::il2cpp_utils::ExtractType(uvSegmentNumber)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, highlighted, uvSegmentNumber);
}
// Autogenerated method: AvatarVisualController/HighlighterDelegate.BeginInvoke
System::IAsyncResult* GlobalNamespace::AvatarVisualController::HighlighterDelegate::BeginInvoke(bool highlighted, int uvSegmentNumber, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarVisualController::HighlighterDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(highlighted), ::il2cpp_utils::ExtractType(uvSegmentNumber), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, highlighted, uvSegmentNumber, callback, object);
}
// Autogenerated method: AvatarVisualController/HighlighterDelegate.EndInvoke
void GlobalNamespace::AvatarVisualController::HighlighterDelegate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AvatarVisualController::HighlighterDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ConnectedPlayerName
#include "GlobalNamespace/ConnectedPlayerName.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _nameText
TMPro::TextMeshProUGUI*& GlobalNamespace::ConnectedPlayerName::dyn__nameText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectedPlayerName::dyn__nameText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nameText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IConnectedPlayer _connectedPlayer
GlobalNamespace::IConnectedPlayer*& GlobalNamespace::ConnectedPlayerName::dyn__connectedPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectedPlayerName::dyn__connectedPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayer"))->offset;
  return *reinterpret_cast<GlobalNamespace::IConnectedPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ConnectedPlayerName.Start
void GlobalNamespace::ConnectedPlayerName::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectedPlayerName::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HeadBodyOffsetSO
#include "GlobalNamespace/HeadBodyOffsetSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _headNeckOffset
UnityEngine::Vector3& GlobalNamespace::HeadBodyOffsetSO::dyn__headNeckOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HeadBodyOffsetSO::dyn__headNeckOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headNeckOffset"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _verticalOffset
float& GlobalNamespace::HeadBodyOffsetSO::dyn__verticalOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HeadBodyOffsetSO::dyn__verticalOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_verticalOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HeadBodyOffsetSO.get_headNeckOffset
UnityEngine::Vector3 GlobalNamespace::HeadBodyOffsetSO::get_headNeckOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HeadBodyOffsetSO::get_headNeckOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headNeckOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: HeadBodyOffsetSO.get_verticalOffset
float GlobalNamespace::HeadBodyOffsetSO::get_verticalOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HeadBodyOffsetSO::get_verticalOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_verticalOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LobbyAvatarInstaller
#include "GlobalNamespace/LobbyAvatarInstaller.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IConnectedPlayer _connectedPlayer
GlobalNamespace::IConnectedPlayer*& GlobalNamespace::LobbyAvatarInstaller::dyn__connectedPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyAvatarInstaller::dyn__connectedPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayer"))->offset;
  return *reinterpret_cast<GlobalNamespace::IConnectedPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LobbyAvatarInstaller.InstallBindings
void GlobalNamespace::LobbyAvatarInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyAvatarInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MulticolorAvatarPartPropertyBlockSetter
#include "GlobalNamespace/MulticolorAvatarPartPropertyBlockSetter.hpp"
// Including type: MulticolorAvatarPartPropertyBlockSetter/ColorData
#include "GlobalNamespace/MulticolorAvatarPartPropertyBlockSetter_ColorData.hpp"
// Including type: MulticolorAvatarPartPropertyBlockSetter/<>c
#include "GlobalNamespace/MulticolorAvatarPartPropertyBlockSetter_--c.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.MaterialPropertyBlock
#include "UnityEngine/MaterialPropertyBlock.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF00B4C
// Autogenerated static field getter
// Get static field: static private UnityEngine.MaterialPropertyBlock _materialPropertyBlock
UnityEngine::MaterialPropertyBlock* GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::_get__materialPropertyBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::_get__materialPropertyBlock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<UnityEngine::MaterialPropertyBlock*>("", "MulticolorAvatarPartPropertyBlockSetter", "_materialPropertyBlock"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.MaterialPropertyBlock _materialPropertyBlock
void GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::_set__materialPropertyBlock(UnityEngine::MaterialPropertyBlock* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::_set__materialPropertyBlock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MulticolorAvatarPartPropertyBlockSetter", "_materialPropertyBlock", value));
}
// Autogenerated instance field getter
// Get instance field: private MulticolorAvatarPartPropertyBlockSetter/ColorData[] _colorDataList
::ArrayW<GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData*>& GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__colorDataList() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__colorDataList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorDataList"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer _renderer
UnityEngine::Renderer*& GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderer"))->offset;
  return *reinterpret_cast<UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _editInPlayMode
bool& GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__editInPlayMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__editInPlayMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_editInPlayMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector4[] _colors
::ArrayW<UnityEngine::Vector4>& GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__colors() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__colors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colors"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::Vector4>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Vector4[] _rimLightColors
::ArrayW<UnityEngine::Vector4>& GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__rimLightColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__rimLightColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rimLightColors"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::Vector4>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color[] _boostColors
::ArrayW<UnityEngine::Color>& GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__boostColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__boostColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_boostColors"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _highlighted
bool& GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__highlighted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__highlighted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlighted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _uvSegment
int& GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__uvSegment() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::dyn__uvSegment");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uvSegment"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MulticolorAvatarPartPropertyBlockSetter.OnValidate
void GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MulticolorAvatarPartPropertyBlockSetter.SetColors
void GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::SetColors(::ArrayW<UnityEngine::Color> colors) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::SetColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colors)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, colors);
}
// Autogenerated method: MulticolorAvatarPartPropertyBlockSetter.SetHighlight
void GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::SetHighlight(bool highlighted, int uvSegment) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::SetHighlight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHighlight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(highlighted), ::il2cpp_utils::ExtractType(uvSegment)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, highlighted, uvSegment);
}
// Autogenerated method: MulticolorAvatarPartPropertyBlockSetter.UpdateRenderer
void GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::UpdateRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::UpdateRenderer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateRenderer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MulticolorAvatarPartPropertyBlockSetter/ColorData
#include "GlobalNamespace/MulticolorAvatarPartPropertyBlockSetter_ColorData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _defaultColor
UnityEngine::Color& GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData::dyn__defaultColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData::dyn__defaultColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _darkerColorMultiplier
float& GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData::dyn__darkerColorMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData::dyn__darkerColorMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_darkerColorMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _whiteBoost
float& GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData::dyn__whiteBoost() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData::dyn__whiteBoost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whiteBoost"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MulticolorAvatarPartPropertyBlockSetter/ColorData.get_defaultColor
UnityEngine::Color GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData::get_defaultColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData::get_defaultColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_defaultColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MulticolorAvatarPartPropertyBlockSetter/ColorData.get_darkerColorMultiplier
float GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData::get_darkerColorMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData::get_darkerColorMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_darkerColorMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MulticolorAvatarPartPropertyBlockSetter/ColorData.get_whiteBoost
float GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData::get_whiteBoost() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData::get_whiteBoost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_whiteBoost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MulticolorAvatarPartPropertyBlockSetter/<>c
#include "GlobalNamespace/MulticolorAvatarPartPropertyBlockSetter_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: MulticolorAvatarPartPropertyBlockSetter/ColorData
#include "GlobalNamespace/MulticolorAvatarPartPropertyBlockSetter_ColorData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly MulticolorAvatarPartPropertyBlockSetter/<>c <>9
GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c* GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c*>("", "MulticolorAvatarPartPropertyBlockSetter/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly MulticolorAvatarPartPropertyBlockSetter/<>c <>9
void GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c::_set_$$9(GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "MulticolorAvatarPartPropertyBlockSetter/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<MulticolorAvatarPartPropertyBlockSetter/ColorData,UnityEngine.Color> <>9__10_0
System::Func_2<GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData*, UnityEngine::Color>* GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c::_get_$$9__10_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c::_get_$$9__10_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData*, UnityEngine::Color>*>("", "MulticolorAvatarPartPropertyBlockSetter/<>c", "<>9__10_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<MulticolorAvatarPartPropertyBlockSetter/ColorData,UnityEngine.Color> <>9__10_0
void GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c::_set_$$9__10_0(System::Func_2<GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData*, UnityEngine::Color>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c::_set_$$9__10_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "MulticolorAvatarPartPropertyBlockSetter/<>c", "<>9__10_0", value)));
}
// Autogenerated method: MulticolorAvatarPartPropertyBlockSetter/<>c..cctor
void GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MulticolorAvatarPartPropertyBlockSetter/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MulticolorAvatarPartPropertyBlockSetter/<>c.<OnValidate>b__10_0
UnityEngine::Color GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c::$OnValidate$b__10_0(GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::ColorData* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MulticolorAvatarPartPropertyBlockSetter::$$c::<OnValidate>b__10_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnValidate>b__10_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(___instance_arg, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerAvatarPoseController
#include "GlobalNamespace/MultiplayerAvatarPoseController.hpp"
// Including type: AvatarPoseController
#include "GlobalNamespace/AvatarPoseController.hpp"
// Including type: INodePoseSyncStateManager
#include "GlobalNamespace/INodePoseSyncStateManager.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private AvatarPoseController _avatarPoseController
GlobalNamespace::AvatarPoseController*& GlobalNamespace::MultiplayerAvatarPoseController::dyn__avatarPoseController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerAvatarPoseController::dyn__avatarPoseController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarPoseController"))->offset;
  return *reinterpret_cast<GlobalNamespace::AvatarPoseController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly INodePoseSyncStateManager _nodePoseSyncStateManager
GlobalNamespace::INodePoseSyncStateManager*& GlobalNamespace::MultiplayerAvatarPoseController::dyn__nodePoseSyncStateManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerAvatarPoseController::dyn__nodePoseSyncStateManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nodePoseSyncStateManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::INodePoseSyncStateManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IConnectedPlayer _connectedPlayer
GlobalNamespace::IConnectedPlayer*& GlobalNamespace::MultiplayerAvatarPoseController::dyn__connectedPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerAvatarPoseController::dyn__connectedPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayer"))->offset;
  return *reinterpret_cast<GlobalNamespace::IConnectedPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerAvatarPoseController.set_connectedPlayer
void GlobalNamespace::MultiplayerAvatarPoseController::set_connectedPlayer(GlobalNamespace::IConnectedPlayer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerAvatarPoseController::set_connectedPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_connectedPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: MultiplayerAvatarPoseController.Start
void GlobalNamespace::MultiplayerAvatarPoseController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerAvatarPoseController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerAvatarPoseController.Update
void GlobalNamespace::MultiplayerAvatarPoseController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerAvatarPoseController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerAvatarVisualProvider
#include "GlobalNamespace/MultiplayerAvatarVisualProvider.hpp"
// Including type: AvatarVisualController
#include "GlobalNamespace/AvatarVisualController.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private AvatarVisualController _avatarVisualController
GlobalNamespace::AvatarVisualController*& GlobalNamespace::MultiplayerAvatarVisualProvider::dyn__avatarVisualController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerAvatarVisualProvider::dyn__avatarVisualController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarVisualController"))->offset;
  return *reinterpret_cast<GlobalNamespace::AvatarVisualController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IConnectedPlayer _connectedPlayer
GlobalNamespace::IConnectedPlayer*& GlobalNamespace::MultiplayerAvatarVisualProvider::dyn__connectedPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerAvatarVisualProvider::dyn__connectedPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayer"))->offset;
  return *reinterpret_cast<GlobalNamespace::IConnectedPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerAvatarVisualProvider.Start
void GlobalNamespace::MultiplayerAvatarVisualProvider::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerAvatarVisualProvider::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyAvatarController
#include "GlobalNamespace/MultiplayerLobbyAvatarController.hpp"
// Including type: MultiplayerLobbyAvatarController/Factory
#include "GlobalNamespace/MultiplayerLobbyAvatarController_Factory.hpp"
// Including type: MultiplayerLobbyAvatarController/<SpawnAnimationCoroutine>d__8
#include "GlobalNamespace/MultiplayerLobbyAvatarController_-SpawnAnimationCoroutine-d__8.hpp"
// Including type: MultiplayerLobbyAvatarController/<ShowDespawnAnimationAndDestroy>d__10
#include "GlobalNamespace/MultiplayerLobbyAvatarController_-ShowDespawnAnimationAndDestroy-d__10.hpp"
// Including type: MultiplayerLobbyAvatarController/<DespawnAnimationCoroutine>d__12
#include "GlobalNamespace/MultiplayerLobbyAvatarController_-DespawnAnimationCoroutine-d__12.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: VFXController
#include "GlobalNamespace/VFXController.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableDirector _spawnEffect
UnityEngine::Playables::PlayableDirector*& GlobalNamespace::MultiplayerLobbyAvatarController::dyn__spawnEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarController::dyn__spawnEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spawnEffect"))->offset;
  return *reinterpret_cast<UnityEngine::Playables::PlayableDirector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VFXController _despawnVFXController
GlobalNamespace::VFXController*& GlobalNamespace::MultiplayerLobbyAvatarController::dyn__despawnVFXController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarController::dyn__despawnVFXController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_despawnVFXController"))->offset;
  return *reinterpret_cast<GlobalNamespace::VFXController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _spawnAvatarDelay
float& GlobalNamespace::MultiplayerLobbyAvatarController::dyn__spawnAvatarDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarController::dyn__spawnAvatarDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spawnAvatarDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _despawnAvatarDelay
float& GlobalNamespace::MultiplayerLobbyAvatarController::dyn__despawnAvatarDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarController::dyn__despawnAvatarDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_despawnAvatarDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _destroyAvatarDelay
float& GlobalNamespace::MultiplayerLobbyAvatarController::dyn__destroyAvatarDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarController::dyn__destroyAvatarDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_destroyAvatarDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _visualObjects
::ArrayW<UnityEngine::GameObject*>& GlobalNamespace::MultiplayerLobbyAvatarController::dyn__visualObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarController::dyn__visualObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_visualObjects"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerLobbyAvatarController.ShowSpawnAnimation
void GlobalNamespace::MultiplayerLobbyAvatarController::ShowSpawnAnimation(UnityEngine::Vector3 position, UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarController::ShowSpawnAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowSpawnAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, position, rotation);
}
// Autogenerated method: MultiplayerLobbyAvatarController.SpawnAnimationCoroutine
System::Collections::IEnumerator* GlobalNamespace::MultiplayerLobbyAvatarController::SpawnAnimationCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarController::SpawnAnimationCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpawnAnimationCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController.ActivateVisualObjects
void GlobalNamespace::MultiplayerLobbyAvatarController::ActivateVisualObjects(bool on) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarController::ActivateVisualObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateVisualObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(on)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, on);
}
// Autogenerated method: MultiplayerLobbyAvatarController.ShowDespawnAnimationAndDestroy
System::Collections::IEnumerator* GlobalNamespace::MultiplayerLobbyAvatarController::ShowDespawnAnimationAndDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarController::ShowDespawnAnimationAndDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowDespawnAnimationAndDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController.DestroySelf
void GlobalNamespace::MultiplayerLobbyAvatarController::DestroySelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarController::DestroySelf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroySelf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController.DespawnAnimationCoroutine
System::Collections::IEnumerator* GlobalNamespace::MultiplayerLobbyAvatarController::DespawnAnimationCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarController::DespawnAnimationCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DespawnAnimationCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyAvatarController/Factory
#include "GlobalNamespace/MultiplayerLobbyAvatarController_Factory.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerLobbyAvatarController/<SpawnAnimationCoroutine>d__8
#include "GlobalNamespace/MultiplayerLobbyAvatarController_-SpawnAnimationCoroutine-d__8.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MultiplayerLobbyAvatarController <>4__this
GlobalNamespace::MultiplayerLobbyAvatarController*& GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerLobbyAvatarController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<SpawnAnimationCoroutine>d__8.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<SpawnAnimationCoroutine>d__8.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<SpawnAnimationCoroutine>d__8.System.IDisposable.Dispose
void GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<SpawnAnimationCoroutine>d__8.MoveNext
bool GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<SpawnAnimationCoroutine>d__8.System.Collections.IEnumerator.Reset
void GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarController::$SpawnAnimationCoroutine$d__8::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerLobbyAvatarController/<ShowDespawnAnimationAndDestroy>d__10
#include "GlobalNamespace/MultiplayerLobbyAvatarController_-ShowDespawnAnimationAndDestroy-d__10.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MultiplayerLobbyAvatarController <>4__this
GlobalNamespace::MultiplayerLobbyAvatarController*& GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerLobbyAvatarController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<ShowDespawnAnimationAndDestroy>d__10.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<ShowDespawnAnimationAndDestroy>d__10.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<ShowDespawnAnimationAndDestroy>d__10.System.IDisposable.Dispose
void GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<ShowDespawnAnimationAndDestroy>d__10.MoveNext
bool GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<ShowDespawnAnimationAndDestroy>d__10.System.Collections.IEnumerator.Reset
void GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarController::$ShowDespawnAnimationAndDestroy$d__10::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerLobbyAvatarController/<DespawnAnimationCoroutine>d__12
#include "GlobalNamespace/MultiplayerLobbyAvatarController_-DespawnAnimationCoroutine-d__12.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MultiplayerLobbyAvatarController <>4__this
GlobalNamespace::MultiplayerLobbyAvatarController*& GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerLobbyAvatarController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<DespawnAnimationCoroutine>d__12.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<DespawnAnimationCoroutine>d__12.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<DespawnAnimationCoroutine>d__12.System.IDisposable.Dispose
void GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<DespawnAnimationCoroutine>d__12.MoveNext
bool GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarController/<DespawnAnimationCoroutine>d__12.System.Collections.IEnumerator.Reset
void GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarController::$DespawnAnimationCoroutine$d__12::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerLobbyAvatarManager
#include "GlobalNamespace/MultiplayerLobbyAvatarManager.hpp"
// Including type: MultiplayerLobbyAvatarManager/<RemovePlayerAndDestroy>d__13
#include "GlobalNamespace/MultiplayerLobbyAvatarManager_-RemovePlayerAndDestroy-d__13.hpp"
// Including type: ILobbyStateDataModel
#include "GlobalNamespace/ILobbyStateDataModel.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: MultiplayerLobbyAvatarController/Factory
#include "GlobalNamespace/MultiplayerLobbyAvatarController_Factory.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly ILobbyStateDataModel _lobbyStateDataModel
GlobalNamespace::ILobbyStateDataModel*& GlobalNamespace::MultiplayerLobbyAvatarManager::dyn__lobbyStateDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarManager::dyn__lobbyStateDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyStateDataModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::ILobbyStateDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerLobbyAvatarController/Factory _avatarControllerFactory
GlobalNamespace::MultiplayerLobbyAvatarController::Factory*& GlobalNamespace::MultiplayerLobbyAvatarManager::dyn__avatarControllerFactory() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarManager::dyn__avatarControllerFactory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarControllerFactory"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerLobbyAvatarController::Factory**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _innerCircleRadius
float& GlobalNamespace::MultiplayerLobbyAvatarManager::dyn__innerCircleRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarManager::dyn__innerCircleRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_innerCircleRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minOuterCircleRadius
float& GlobalNamespace::MultiplayerLobbyAvatarManager::dyn__minOuterCircleRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarManager::dyn__minOuterCircleRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minOuterCircleRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,MultiplayerLobbyAvatarController> _playerIdToAvatarMap
System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::MultiplayerLobbyAvatarController*>*& GlobalNamespace::MultiplayerLobbyAvatarManager::dyn__playerIdToAvatarMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarManager::dyn__playerIdToAvatarMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerIdToAvatarMap"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::MultiplayerLobbyAvatarController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<MultiplayerLobbyAvatarController> _inProgressDespawnAnimations
System::Collections::Generic::HashSet_1<GlobalNamespace::MultiplayerLobbyAvatarController*>*& GlobalNamespace::MultiplayerLobbyAvatarManager::dyn__inProgressDespawnAnimations() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarManager::dyn__inProgressDespawnAnimations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inProgressDespawnAnimations"))->offset;
  return *reinterpret_cast<System::Collections::Generic::HashSet_1<GlobalNamespace::MultiplayerLobbyAvatarController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerLobbyAvatarManager.Init
void GlobalNamespace::MultiplayerLobbyAvatarManager::Init(float innerCircleRadius, float minOuterCircleRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarManager::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(innerCircleRadius), ::il2cpp_utils::ExtractType(minOuterCircleRadius)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, innerCircleRadius, minOuterCircleRadius);
}
// Autogenerated method: MultiplayerLobbyAvatarManager.ActivateMultiplayerLobbyAvatarManager
void GlobalNamespace::MultiplayerLobbyAvatarManager::ActivateMultiplayerLobbyAvatarManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarManager::ActivateMultiplayerLobbyAvatarManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateMultiplayerLobbyAvatarManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarManager.DeactivateMultiplayerLobbyAvatarManager
void GlobalNamespace::MultiplayerLobbyAvatarManager::DeactivateMultiplayerLobbyAvatarManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarManager::DeactivateMultiplayerLobbyAvatarManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeactivateMultiplayerLobbyAvatarManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarManager.HandleLobbyStateDataModelPlayerConnected
void GlobalNamespace::MultiplayerLobbyAvatarManager::HandleLobbyStateDataModelPlayerConnected(GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarManager::HandleLobbyStateDataModelPlayerConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyStateDataModelPlayerConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, connectedPlayer);
}
// Autogenerated method: MultiplayerLobbyAvatarManager.HandleLobbyStateDataModelPlayerDisconnected
void GlobalNamespace::MultiplayerLobbyAvatarManager::HandleLobbyStateDataModelPlayerDisconnected(GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarManager::HandleLobbyStateDataModelPlayerDisconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyStateDataModelPlayerDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, connectedPlayer);
}
// Autogenerated method: MultiplayerLobbyAvatarManager.AddPlayer
void GlobalNamespace::MultiplayerLobbyAvatarManager::AddPlayer(GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarManager::AddPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, connectedPlayer);
}
// Autogenerated method: MultiplayerLobbyAvatarManager.RemovePlayer
void GlobalNamespace::MultiplayerLobbyAvatarManager::RemovePlayer(GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarManager::RemovePlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemovePlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, connectedPlayer);
}
// Autogenerated method: MultiplayerLobbyAvatarManager.RemovePlayerAndDestroy
System::Collections::IEnumerator* GlobalNamespace::MultiplayerLobbyAvatarManager::RemovePlayerAndDestroy(::Il2CppString* userId, GlobalNamespace::MultiplayerLobbyAvatarController* multiplayerAvatar) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarManager::RemovePlayerAndDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemovePlayerAndDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(multiplayerAvatar)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(___instance_arg, ___internal__method, userId, multiplayerAvatar);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerLobbyAvatarManager/<RemovePlayerAndDestroy>d__13
#include "GlobalNamespace/MultiplayerLobbyAvatarManager_-RemovePlayerAndDestroy-d__13.hpp"
// Including type: MultiplayerLobbyAvatarController
#include "GlobalNamespace/MultiplayerLobbyAvatarController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::MultiplayerLobbyAvatarManager::$RemovePlayerAndDestroy$d__13::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarManager::$RemovePlayerAndDestroy$d__13::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::MultiplayerLobbyAvatarManager::$RemovePlayerAndDestroy$d__13::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarManager::$RemovePlayerAndDestroy$d__13::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MultiplayerLobbyAvatarManager <>4__this
GlobalNamespace::MultiplayerLobbyAvatarManager*& GlobalNamespace::MultiplayerLobbyAvatarManager::$RemovePlayerAndDestroy$d__13::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarManager::$RemovePlayerAndDestroy$d__13::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerLobbyAvatarManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String userId
::Il2CppString*& GlobalNamespace::MultiplayerLobbyAvatarManager::$RemovePlayerAndDestroy$d__13::dyn_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarManager::$RemovePlayerAndDestroy$d__13::dyn_userId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MultiplayerLobbyAvatarController multiplayerAvatar
GlobalNamespace::MultiplayerLobbyAvatarController*& GlobalNamespace::MultiplayerLobbyAvatarManager::$RemovePlayerAndDestroy$d__13::dyn_multiplayerAvatar() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarManager::$RemovePlayerAndDestroy$d__13::dyn_multiplayerAvatar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "multiplayerAvatar"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerLobbyAvatarController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerLobbyAvatarManager/<RemovePlayerAndDestroy>d__13.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerLobbyAvatarManager::$RemovePlayerAndDestroy$d__13::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarManager::$RemovePlayerAndDestroy$d__13::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarManager/<RemovePlayerAndDestroy>d__13.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerLobbyAvatarManager::$RemovePlayerAndDestroy$d__13::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarManager::$RemovePlayerAndDestroy$d__13::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarManager/<RemovePlayerAndDestroy>d__13.System.IDisposable.Dispose
void GlobalNamespace::MultiplayerLobbyAvatarManager::$RemovePlayerAndDestroy$d__13::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarManager::$RemovePlayerAndDestroy$d__13::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarManager/<RemovePlayerAndDestroy>d__13.MoveNext
bool GlobalNamespace::MultiplayerLobbyAvatarManager::$RemovePlayerAndDestroy$d__13::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarManager::$RemovePlayerAndDestroy$d__13::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarManager/<RemovePlayerAndDestroy>d__13.System.Collections.IEnumerator.Reset
void GlobalNamespace::MultiplayerLobbyAvatarManager::$RemovePlayerAndDestroy$d__13::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarManager::$RemovePlayerAndDestroy$d__13::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyAvatarPlace
#include "GlobalNamespace/MultiplayerLobbyAvatarPlace.hpp"
// Including type: MultiplayerLobbyAvatarPlace/Pool
#include "GlobalNamespace/MultiplayerLobbyAvatarPlace_Pool.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerLobbyAvatarPlace.SetPositionAndRotation
void GlobalNamespace::MultiplayerLobbyAvatarPlace::SetPositionAndRotation(UnityEngine::Vector3 worldPos, UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarPlace::SetPositionAndRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPositionAndRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldPos), ::il2cpp_utils::ExtractType(rotation)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, worldPos, rotation);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyAvatarPlace/Pool
#include "GlobalNamespace/MultiplayerLobbyAvatarPlace_Pool.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyAvatarPlaceManager
#include "GlobalNamespace/MultiplayerLobbyAvatarPlaceManager.hpp"
// Including type: ILobbyStateDataModel
#include "GlobalNamespace/ILobbyStateDataModel.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: MultiplayerLobbyAvatarPlace/Pool
#include "GlobalNamespace/MultiplayerLobbyAvatarPlace_Pool.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly ILobbyStateDataModel _lobbyStateDataModel
GlobalNamespace::ILobbyStateDataModel*& GlobalNamespace::MultiplayerLobbyAvatarPlaceManager::dyn__lobbyStateDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarPlaceManager::dyn__lobbyStateDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lobbyStateDataModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::ILobbyStateDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerLobbyAvatarPlace/Pool _avatarPlacesPool
GlobalNamespace::MultiplayerLobbyAvatarPlace::Pool*& GlobalNamespace::MultiplayerLobbyAvatarPlaceManager::dyn__avatarPlacesPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarPlaceManager::dyn__avatarPlacesPool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_avatarPlacesPool"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerLobbyAvatarPlace::Pool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<MultiplayerLobbyAvatarPlace> _allPlaces
System::Collections::Generic::List_1<GlobalNamespace::MultiplayerLobbyAvatarPlace*>*& GlobalNamespace::MultiplayerLobbyAvatarPlaceManager::dyn__allPlaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarPlaceManager::dyn__allPlaces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allPlaces"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::MultiplayerLobbyAvatarPlace*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _innerCircleRadius
float& GlobalNamespace::MultiplayerLobbyAvatarPlaceManager::dyn__innerCircleRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarPlaceManager::dyn__innerCircleRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_innerCircleRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minOuterCircleRadius
float& GlobalNamespace::MultiplayerLobbyAvatarPlaceManager::dyn__minOuterCircleRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarPlaceManager::dyn__minOuterCircleRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minOuterCircleRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerLobbyAvatarPlaceManager.Activate
void GlobalNamespace::MultiplayerLobbyAvatarPlaceManager::Activate(float innerCircleRadius, float minOuterCircleRadius) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarPlaceManager::Activate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(innerCircleRadius), ::il2cpp_utils::ExtractType(minOuterCircleRadius)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, innerCircleRadius, minOuterCircleRadius);
}
// Autogenerated method: MultiplayerLobbyAvatarPlaceManager.Deactivate
void GlobalNamespace::MultiplayerLobbyAvatarPlaceManager::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarPlaceManager::Deactivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarPlaceManager.OnDestroy
void GlobalNamespace::MultiplayerLobbyAvatarPlaceManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarPlaceManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarPlaceManager.SpawnAllPlaces
void GlobalNamespace::MultiplayerLobbyAvatarPlaceManager::SpawnAllPlaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarPlaceManager::SpawnAllPlaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpawnAllPlaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyAvatarPlaceManager.DespawnAllPlaces
void GlobalNamespace::MultiplayerLobbyAvatarPlaceManager::DespawnAllPlaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyAvatarPlaceManager::DespawnAllPlaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DespawnAllPlaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ShadowFollowController
#include "GlobalNamespace/ShadowFollowController.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.SpriteRenderer
#include "UnityEngine/SpriteRenderer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _shadowTransform
UnityEngine::Transform*& GlobalNamespace::ShadowFollowController::dyn__shadowTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShadowFollowController::dyn__shadowTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shadowTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _targetTransform
UnityEngine::Transform*& GlobalNamespace::ShadowFollowController::dyn__targetTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShadowFollowController::dyn__targetTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SpriteRenderer _shadowSpriteRenderer
UnityEngine::SpriteRenderer*& GlobalNamespace::ShadowFollowController::dyn__shadowSpriteRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShadowFollowController::dyn__shadowSpriteRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shadowSpriteRenderer"))->offset;
  return *reinterpret_cast<UnityEngine::SpriteRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 _shadowHeightRange
UnityEngine::Vector2& GlobalNamespace::ShadowFollowController::dyn__shadowHeightRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShadowFollowController::dyn__shadowHeightRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shadowHeightRange"))->offset;
  return *reinterpret_cast<UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 _shadowSizeRange
UnityEngine::Vector2& GlobalNamespace::ShadowFollowController::dyn__shadowSizeRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShadowFollowController::dyn__shadowSizeRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shadowSizeRange"))->offset;
  return *reinterpret_cast<UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 _shadowAlphaRange
UnityEngine::Vector2& GlobalNamespace::ShadowFollowController::dyn__shadowAlphaRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShadowFollowController::dyn__shadowAlphaRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shadowAlphaRange"))->offset;
  return *reinterpret_cast<UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ShadowFollowController.SetTargetTransform
void GlobalNamespace::ShadowFollowController::SetTargetTransform(UnityEngine::Transform* target) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShadowFollowController::SetTargetTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTargetTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(target)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, target);
}
// Autogenerated method: ShadowFollowController.Update
void GlobalNamespace::ShadowFollowController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShadowFollowController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AchievementIdsModelSO
#include "GlobalNamespace/AchievementIdsModelSO.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: AchievementSO
#include "GlobalNamespace/AchievementSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<AchievementSO> _achievementsIds
System::Collections::Generic::List_1<GlobalNamespace::AchievementSO*>*& GlobalNamespace::AchievementIdsModelSO::dyn__achievementsIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementIdsModelSO::dyn__achievementsIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_achievementsIds"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::AchievementSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AchievementIdsModelSO.get_achievementsIds
System::Collections::Generic::List_1<GlobalNamespace::AchievementSO*>* GlobalNamespace::AchievementIdsModelSO::get_achievementsIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementIdsModelSO::get_achievementsIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_achievementsIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<GlobalNamespace::AchievementSO*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: AchievementSO
#include "GlobalNamespace/AchievementSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _achievementId
::Il2CppString*& GlobalNamespace::AchievementSO::dyn__achievementId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementSO::dyn__achievementId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_achievementId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AchievementSO.get_achievementId
::Il2CppString* GlobalNamespace::AchievementSO::get_achievementId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementSO::get_achievementId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_achievementId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AchievementsEvaluationHandler
#include "GlobalNamespace/AchievementsEvaluationHandler.hpp"
// Including type: AchievementsModelSO
#include "GlobalNamespace/AchievementsModelSO.hpp"
// Including type: AchievementSO
#include "GlobalNamespace/AchievementSO.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: MissionNodesManager
#include "GlobalNamespace/MissionNodesManager.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: MissionCompletionResults
#include "GlobalNamespace/MissionCompletionResults.hpp"
// Including type: MissionNode
#include "GlobalNamespace/MissionNode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private AchievementsModelSO _achievementsModel
GlobalNamespace::AchievementsModelSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__achievementsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsEvaluationHandler::dyn__achievementsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_achievementsModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::AchievementsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _clearedLevel100Achievement
GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__clearedLevel100Achievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsEvaluationHandler::dyn__clearedLevel100Achievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clearedLevel100Achievement"))->offset;
  return *reinterpret_cast<GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _totalScore100MillionAchievement
GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__totalScore100MillionAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsEvaluationHandler::dyn__totalScore100MillionAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_totalScore100MillionAchievement"))->offset;
  return *reinterpret_cast<GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _24HoursPlayedAchievement
GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__24HoursPlayedAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsEvaluationHandler::dyn__24HoursPlayedAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_24HoursPlayedAchievement"))->offset;
  return *reinterpret_cast<GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _kilometersTravelled100Achievement
GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__kilometersTravelled100Achievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsEvaluationHandler::dyn__kilometersTravelled100Achievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_kilometersTravelled100Achievement"))->offset;
  return *reinterpret_cast<GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _15ExpertLevelsRankSAchievement
GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__15ExpertLevelsRankSAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsEvaluationHandler::dyn__15ExpertLevelsRankSAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_15ExpertLevelsRankSAchievement"))->offset;
  return *reinterpret_cast<GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _15ExpertLevelsFullComboAchievement
GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__15ExpertLevelsFullComboAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsEvaluationHandler::dyn__15ExpertLevelsFullComboAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_15ExpertLevelsFullComboAchievement"))->offset;
  return *reinterpret_cast<GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _15HardLevelsRankSAchievement
GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__15HardLevelsRankSAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsEvaluationHandler::dyn__15HardLevelsRankSAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_15HardLevelsRankSAchievement"))->offset;
  return *reinterpret_cast<GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _15HardLevelsFullComboAchievement
GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__15HardLevelsFullComboAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsEvaluationHandler::dyn__15HardLevelsFullComboAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_15HardLevelsFullComboAchievement"))->offset;
  return *reinterpret_cast<GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _expertLevelClearedWithoutModifiersAchievement
GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__expertLevelClearedWithoutModifiersAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsEvaluationHandler::dyn__expertLevelClearedWithoutModifiersAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_expertLevelClearedWithoutModifiersAchievement"))->offset;
  return *reinterpret_cast<GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _fullComboExpertWithoutModifiersAchievement
GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__fullComboExpertWithoutModifiersAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsEvaluationHandler::dyn__fullComboExpertWithoutModifiersAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fullComboExpertWithoutModifiersAchievement"))->offset;
  return *reinterpret_cast<GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _goodCuts10000Achievement
GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__goodCuts10000Achievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsEvaluationHandler::dyn__goodCuts10000Achievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_goodCuts10000Achievement"))->offset;
  return *reinterpret_cast<GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _resultMinRankANormalWithoutModifiersAchievement
GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__resultMinRankANormalWithoutModifiersAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsEvaluationHandler::dyn__resultMinRankANormalWithoutModifiersAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultMinRankANormalWithoutModifiersAchievement"))->offset;
  return *reinterpret_cast<GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _resultMinRankSHardWithoutModifiersAchievement
GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__resultMinRankSHardWithoutModifiersAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsEvaluationHandler::dyn__resultMinRankSHardWithoutModifiersAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultMinRankSHardWithoutModifiersAchievement"))->offset;
  return *reinterpret_cast<GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _resultMinRankSSExpertWithoutModifiersAchievement
GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__resultMinRankSSExpertWithoutModifiersAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsEvaluationHandler::dyn__resultMinRankSSExpertWithoutModifiersAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_resultMinRankSSExpertWithoutModifiersAchievement"))->offset;
  return *reinterpret_cast<GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _combo50NormalWithoutModifiersAchievement
GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__combo50NormalWithoutModifiersAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsEvaluationHandler::dyn__combo50NormalWithoutModifiersAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_combo50NormalWithoutModifiersAchievement"))->offset;
  return *reinterpret_cast<GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _combo100HardWithoutModifiersAchievement
GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__combo100HardWithoutModifiersAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsEvaluationHandler::dyn__combo100HardWithoutModifiersAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_combo100HardWithoutModifiersAchievement"))->offset;
  return *reinterpret_cast<GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _combo500ExpertWithoutModifiersAchievement
GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__combo500ExpertWithoutModifiersAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsEvaluationHandler::dyn__combo500ExpertWithoutModifiersAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_combo500ExpertWithoutModifiersAchievement"))->offset;
  return *reinterpret_cast<GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _clearedLevelWithoutModifiersAchievement
GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__clearedLevelWithoutModifiersAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsEvaluationHandler::dyn__clearedLevelWithoutModifiersAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clearedLevelWithoutModifiersAchievement"))->offset;
  return *reinterpret_cast<GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _clearedLevelWithSongSpeedFasterModifierAchievement
GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__clearedLevelWithSongSpeedFasterModifierAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsEvaluationHandler::dyn__clearedLevelWithSongSpeedFasterModifierAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clearedLevelWithSongSpeedFasterModifierAchievement"))->offset;
  return *reinterpret_cast<GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _clearedLevelWithInstaFailModifierAchievement
GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__clearedLevelWithInstaFailModifierAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsEvaluationHandler::dyn__clearedLevelWithInstaFailModifierAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clearedLevelWithInstaFailModifierAchievement"))->offset;
  return *reinterpret_cast<GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _clearedLevelWithDisappearingArrowsModifierAchievement
GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__clearedLevelWithDisappearingArrowsModifierAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsEvaluationHandler::dyn__clearedLevelWithDisappearingArrowsModifierAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clearedLevelWithDisappearingArrowsModifierAchievement"))->offset;
  return *reinterpret_cast<GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _clearedLevelWithBatteryEnergyModifierAchievement
GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__clearedLevelWithBatteryEnergyModifierAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsEvaluationHandler::dyn__clearedLevelWithBatteryEnergyModifierAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clearedLevelWithBatteryEnergyModifierAchievement"))->offset;
  return *reinterpret_cast<GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _cleared30MissionsAchievement
GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__cleared30MissionsAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsEvaluationHandler::dyn__cleared30MissionsAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cleared30MissionsAchievement"))->offset;
  return *reinterpret_cast<GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _finalMissionClearedAchievement
GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__finalMissionClearedAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsEvaluationHandler::dyn__finalMissionClearedAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finalMissionClearedAchievement"))->offset;
  return *reinterpret_cast<GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _allMissionClearedAchievement
GlobalNamespace::AchievementSO*& GlobalNamespace::AchievementsEvaluationHandler::dyn__allMissionClearedAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsEvaluationHandler::dyn__allMissionClearedAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_allMissionClearedAchievement"))->offset;
  return *reinterpret_cast<GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlayerDataModel _playerDataModel
GlobalNamespace::PlayerDataModel*& GlobalNamespace::AchievementsEvaluationHandler::dyn__playerDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsEvaluationHandler::dyn__playerDataModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerDataModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::PlayerDataModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MissionNodesManager _missionNodesManager
GlobalNamespace::MissionNodesManager*& GlobalNamespace::AchievementsEvaluationHandler::dyn__missionNodesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsEvaluationHandler::dyn__missionNodesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionNodesManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::MissionNodesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AchievementsEvaluationHandler.Start
void GlobalNamespace::AchievementsEvaluationHandler::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsEvaluationHandler::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AchievementsEvaluationHandler.OnDestroy
void GlobalNamespace::AchievementsEvaluationHandler::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsEvaluationHandler::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AchievementsEvaluationHandler.HandleSoloFreePlayOverallStatsDataDidUpdate
void GlobalNamespace::AchievementsEvaluationHandler::HandleSoloFreePlayOverallStatsDataDidUpdate(GlobalNamespace::LevelCompletionResults* levelCompletionResults, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsEvaluationHandler::HandleSoloFreePlayOverallStatsDataDidUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSoloFreePlayOverallStatsDataDidUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelCompletionResults), ::il2cpp_utils::ExtractType(difficultyBeatmap)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, levelCompletionResults, difficultyBeatmap);
}
// Autogenerated method: AchievementsEvaluationHandler.HandlePartyFreePlayOverallStatsDataDidUpdate
void GlobalNamespace::AchievementsEvaluationHandler::HandlePartyFreePlayOverallStatsDataDidUpdate(GlobalNamespace::LevelCompletionResults* levelCompletionResults, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsEvaluationHandler::HandlePartyFreePlayOverallStatsDataDidUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePartyFreePlayOverallStatsDataDidUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelCompletionResults), ::il2cpp_utils::ExtractType(difficultyBeatmap)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, levelCompletionResults, difficultyBeatmap);
}
// Autogenerated method: AchievementsEvaluationHandler.HandleCampaignOverallStatsDataDidUpdate
void GlobalNamespace::AchievementsEvaluationHandler::HandleCampaignOverallStatsDataDidUpdate(GlobalNamespace::MissionCompletionResults* missionCompletionResults, GlobalNamespace::MissionNode* missionNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsEvaluationHandler::HandleCampaignOverallStatsDataDidUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCampaignOverallStatsDataDidUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionCompletionResults), ::il2cpp_utils::ExtractType(missionNode)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, missionCompletionResults, missionNode);
}
// Autogenerated method: AchievementsEvaluationHandler.ProcessMissionFinishData
void GlobalNamespace::AchievementsEvaluationHandler::ProcessMissionFinishData(GlobalNamespace::MissionNode* missionNode, GlobalNamespace::MissionCompletionResults* missionCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsEvaluationHandler::ProcessMissionFinishData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessMissionFinishData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionNode), ::il2cpp_utils::ExtractType(missionCompletionResults)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, missionNode, missionCompletionResults);
}
// Autogenerated method: AchievementsEvaluationHandler.ProcessSoloFreePlayLevelFinishData
void GlobalNamespace::AchievementsEvaluationHandler::ProcessSoloFreePlayLevelFinishData(GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, GlobalNamespace::LevelCompletionResults* levelCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsEvaluationHandler::ProcessSoloFreePlayLevelFinishData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessSoloFreePlayLevelFinishData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(levelCompletionResults)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, difficultyBeatmap, levelCompletionResults);
}
// Autogenerated method: AchievementsEvaluationHandler.ProcessLevelFinishData
void GlobalNamespace::AchievementsEvaluationHandler::ProcessLevelFinishData(GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, GlobalNamespace::LevelCompletionResults* levelCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsEvaluationHandler::ProcessLevelFinishData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessLevelFinishData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(levelCompletionResults)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, difficultyBeatmap, levelCompletionResults);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: AchievementsModelSO
#include "GlobalNamespace/AchievementsModelSO.hpp"
// Including type: AchievementsModelSO/<>c__DisplayClass4_0
#include "GlobalNamespace/AchievementsModelSO_--c__DisplayClass4_0.hpp"
// Including type: PlatformAchievementsModelSO/GetUnlockedAchievementsResult
#include "GlobalNamespace/PlatformAchievementsModelSO_GetUnlockedAchievementsResult.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: AchievementSO
#include "GlobalNamespace/AchievementSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private PlatformAchievementsModelSO _platformAchievementsModel
GlobalNamespace::PlatformAchievementsModelSO*& GlobalNamespace::AchievementsModelSO::dyn__platformAchievementsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsModelSO::dyn__platformAchievementsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_platformAchievementsModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::PlatformAchievementsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.String> _unlockedAchievementIds
System::Collections::Generic::HashSet_1<::Il2CppString*>*& GlobalNamespace::AchievementsModelSO::dyn__unlockedAchievementIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsModelSO::dyn__unlockedAchievementIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_unlockedAchievementIds"))->offset;
  return *reinterpret_cast<System::Collections::Generic::HashSet_1<::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
bool& GlobalNamespace::AchievementsModelSO::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsModelSO::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AchievementsModelSO.Initialize
void GlobalNamespace::AchievementsModelSO::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsModelSO::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AchievementsModelSO.UnlockAchievement
void GlobalNamespace::AchievementsModelSO::UnlockAchievement(GlobalNamespace::AchievementSO* achievement) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsModelSO::UnlockAchievement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnlockAchievement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(achievement)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, achievement);
}
// Autogenerated method: AchievementsModelSO.<Initialize>b__3_0
void GlobalNamespace::AchievementsModelSO::$Initialize$b__3_0(GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsResult result, ::ArrayW<::Il2CppString*> achievementIds) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsModelSO::<Initialize>b__3_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Initialize>b__3_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(achievementIds)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, result, achievementIds);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: AchievementsModelSO/<>c__DisplayClass4_0
#include "GlobalNamespace/AchievementsModelSO_--c__DisplayClass4_0.hpp"
// Including type: PlatformAchievementsModelSO/UnlockAchievementResult
#include "GlobalNamespace/PlatformAchievementsModelSO_UnlockAchievementResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public AchievementsModelSO <>4__this
GlobalNamespace::AchievementsModelSO*& GlobalNamespace::AchievementsModelSO::$$c__DisplayClass4_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsModelSO::$$c__DisplayClass4_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::AchievementsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String achievementId
::Il2CppString*& GlobalNamespace::AchievementsModelSO::$$c__DisplayClass4_0::dyn_achievementId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsModelSO::$$c__DisplayClass4_0::dyn_achievementId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "achievementId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AchievementsModelSO/<>c__DisplayClass4_0.<UnlockAchievement>b__0
void GlobalNamespace::AchievementsModelSO::$$c__DisplayClass4_0::$UnlockAchievement$b__0(GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementResult result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AchievementsModelSO::$$c__DisplayClass4_0::<UnlockAchievement>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UnlockAchievement>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FinishTutorialAchievementHandler
#include "GlobalNamespace/FinishTutorialAchievementHandler.hpp"
// Including type: AchievementsModelSO
#include "GlobalNamespace/AchievementsModelSO.hpp"
// Including type: Signal
#include "GlobalNamespace/Signal.hpp"
// Including type: AchievementSO
#include "GlobalNamespace/AchievementSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private AchievementsModelSO _achievementsModel
GlobalNamespace::AchievementsModelSO*& GlobalNamespace::FinishTutorialAchievementHandler::dyn__achievementsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FinishTutorialAchievementHandler::dyn__achievementsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_achievementsModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::AchievementsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Signal _tutorialFinishedSignal
GlobalNamespace::Signal*& GlobalNamespace::FinishTutorialAchievementHandler::dyn__tutorialFinishedSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FinishTutorialAchievementHandler::dyn__tutorialFinishedSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tutorialFinishedSignal"))->offset;
  return *reinterpret_cast<GlobalNamespace::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementSO _finishTutorialAchievement
GlobalNamespace::AchievementSO*& GlobalNamespace::FinishTutorialAchievementHandler::dyn__finishTutorialAchievement() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FinishTutorialAchievementHandler::dyn__finishTutorialAchievement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finishTutorialAchievement"))->offset;
  return *reinterpret_cast<GlobalNamespace::AchievementSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FinishTutorialAchievementHandler.Start
void GlobalNamespace::FinishTutorialAchievementHandler::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FinishTutorialAchievementHandler::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FinishTutorialAchievementHandler.OnDestroy
void GlobalNamespace::FinishTutorialAchievementHandler::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FinishTutorialAchievementHandler::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: FinishTutorialAchievementHandler.HandleTutorialFinished
void GlobalNamespace::FinishTutorialAchievementHandler::HandleTutorialFinished() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FinishTutorialAchievementHandler::HandleTutorialFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleTutorialFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlatformAchievementsHandler
#include "GlobalNamespace/PlatformAchievementsHandler.hpp"
// Including type: HMAsyncRequest
#include "GlobalNamespace/HMAsyncRequest.hpp"
// Including type: PlatformAchievementsModelSO/UnlockAchievementCompletionHandler
#include "GlobalNamespace/PlatformAchievementsModelSO_UnlockAchievementCompletionHandler.hpp"
// Including type: PlatformAchievementsModelSO/GetUnlockedAchievementsCompletionHandler
#include "GlobalNamespace/PlatformAchievementsModelSO_GetUnlockedAchievementsCompletionHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlatformAchievementsHandler.UnlockAchievement
GlobalNamespace::HMAsyncRequest* GlobalNamespace::PlatformAchievementsHandler::UnlockAchievement(::Il2CppString* achievementId, GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAchievementsHandler::UnlockAchievement");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnlockAchievement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(achievementId), ::il2cpp_utils::ExtractType(completionHandler)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::HMAsyncRequest*, false>(___instance_arg, ___internal__method, achievementId, completionHandler);
}
// Autogenerated method: PlatformAchievementsHandler.GetUnlockedAchievements
GlobalNamespace::HMAsyncRequest* GlobalNamespace::PlatformAchievementsHandler::GetUnlockedAchievements(GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAchievementsHandler::GetUnlockedAchievements");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUnlockedAchievements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(completionHandler)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::HMAsyncRequest*, false>(___instance_arg, ___internal__method, completionHandler);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlatformAchievementsModelSO
#include "GlobalNamespace/PlatformAchievementsModelSO.hpp"
// Including type: PlatformAchievementsModelSO/UnlockAchievementResult
#include "GlobalNamespace/PlatformAchievementsModelSO_UnlockAchievementResult.hpp"
// Including type: PlatformAchievementsModelSO/GetUnlockedAchievementsResult
#include "GlobalNamespace/PlatformAchievementsModelSO_GetUnlockedAchievementsResult.hpp"
// Including type: PlatformAchievementsModelSO/UnlockAchievementCompletionHandler
#include "GlobalNamespace/PlatformAchievementsModelSO_UnlockAchievementCompletionHandler.hpp"
// Including type: PlatformAchievementsModelSO/GetUnlockedAchievementsCompletionHandler
#include "GlobalNamespace/PlatformAchievementsModelSO_GetUnlockedAchievementsCompletionHandler.hpp"
// Including type: PS4AchievementIdsModelSO
#include "GlobalNamespace/PS4AchievementIdsModelSO.hpp"
// Including type: AchievementIdsModelSO
#include "GlobalNamespace/AchievementIdsModelSO.hpp"
// Including type: PlatformAchievementsHandler
#include "GlobalNamespace/PlatformAchievementsHandler.hpp"
// Including type: HMAsyncRequest
#include "GlobalNamespace/HMAsyncRequest.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private PS4AchievementIdsModelSO _ps4AchievementIdsModel
GlobalNamespace::PS4AchievementIdsModelSO*& GlobalNamespace::PlatformAchievementsModelSO::dyn__ps4AchievementIdsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAchievementsModelSO::dyn__ps4AchievementIdsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ps4AchievementIdsModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::PS4AchievementIdsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AchievementIdsModelSO _achievementIdsModel
GlobalNamespace::AchievementIdsModelSO*& GlobalNamespace::PlatformAchievementsModelSO::dyn__achievementIdsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAchievementsModelSO::dyn__achievementIdsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_achievementIdsModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::AchievementIdsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PlatformAchievementsHandler _platformAchievementsHandler
GlobalNamespace::PlatformAchievementsHandler*& GlobalNamespace::PlatformAchievementsModelSO::dyn__platformAchievementsHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAchievementsModelSO::dyn__platformAchievementsHandler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_platformAchievementsHandler"))->offset;
  return *reinterpret_cast<GlobalNamespace::PlatformAchievementsHandler**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlatformAchievementsModelSO.get_platformAchievementsHandler
GlobalNamespace::PlatformAchievementsHandler* GlobalNamespace::PlatformAchievementsModelSO::get_platformAchievementsHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAchievementsModelSO::get_platformAchievementsHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_platformAchievementsHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlatformAchievementsHandler*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PlatformAchievementsModelSO.Initialize
void GlobalNamespace::PlatformAchievementsModelSO::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAchievementsModelSO::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PlatformAchievementsModelSO.CreatePlatformAchievementsHandler
void GlobalNamespace::PlatformAchievementsModelSO::CreatePlatformAchievementsHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAchievementsModelSO::CreatePlatformAchievementsHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePlatformAchievementsHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: PlatformAchievementsModelSO.UnlockAchievement
GlobalNamespace::HMAsyncRequest* GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievement(::Il2CppString* achievementId, GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnlockAchievement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(achievementId), ::il2cpp_utils::ExtractType(completionHandler)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::HMAsyncRequest*, false>(___instance_arg, ___internal__method, achievementId, completionHandler);
}
// Autogenerated method: PlatformAchievementsModelSO.GetUnlockedAchievements
GlobalNamespace::HMAsyncRequest* GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievements(GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsCompletionHandler* completionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievements");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUnlockedAchievements", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(completionHandler)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::HMAsyncRequest*, false>(___instance_arg, ___internal__method, completionHandler);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlatformAchievementsModelSO/UnlockAchievementResult
#include "GlobalNamespace/PlatformAchievementsModelSO_UnlockAchievementResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlatformAchievementsModelSO/UnlockAchievementResult OK
GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementResult GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementResult::_get_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementResult::_get_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementResult>("", "PlatformAchievementsModelSO/UnlockAchievementResult", "OK"));
}
// Autogenerated static field setter
// Set static field: static public PlatformAchievementsModelSO/UnlockAchievementResult OK
void GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementResult::_set_OK(GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementResult::_set_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlatformAchievementsModelSO/UnlockAchievementResult", "OK", value));
}
// Autogenerated static field getter
// Get static field: static public PlatformAchievementsModelSO/UnlockAchievementResult Failed
GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementResult GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementResult::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementResult::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementResult>("", "PlatformAchievementsModelSO/UnlockAchievementResult", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public PlatformAchievementsModelSO/UnlockAchievementResult Failed
void GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementResult::_set_Failed(GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementResult::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlatformAchievementsModelSO/UnlockAchievementResult", "Failed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementResult::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementResult::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlatformAchievementsModelSO/GetUnlockedAchievementsResult
#include "GlobalNamespace/PlatformAchievementsModelSO_GetUnlockedAchievementsResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PlatformAchievementsModelSO/GetUnlockedAchievementsResult OK
GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsResult GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsResult::_get_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsResult::_get_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsResult>("", "PlatformAchievementsModelSO/GetUnlockedAchievementsResult", "OK"));
}
// Autogenerated static field setter
// Set static field: static public PlatformAchievementsModelSO/GetUnlockedAchievementsResult OK
void GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsResult::_set_OK(GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsResult::_set_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlatformAchievementsModelSO/GetUnlockedAchievementsResult", "OK", value));
}
// Autogenerated static field getter
// Get static field: static public PlatformAchievementsModelSO/GetUnlockedAchievementsResult Failed
GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsResult GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsResult::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsResult::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsResult>("", "PlatformAchievementsModelSO/GetUnlockedAchievementsResult", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public PlatformAchievementsModelSO/GetUnlockedAchievementsResult Failed
void GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsResult::_set_Failed(GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsResult::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlatformAchievementsModelSO/GetUnlockedAchievementsResult", "Failed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsResult::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsResult::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlatformAchievementsModelSO/UnlockAchievementCompletionHandler
#include "GlobalNamespace/PlatformAchievementsModelSO_UnlockAchievementCompletionHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: PlatformAchievementsModelSO/UnlockAchievementResult
#include "GlobalNamespace/PlatformAchievementsModelSO_UnlockAchievementResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlatformAchievementsModelSO/UnlockAchievementCompletionHandler.Invoke
void GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementCompletionHandler::Invoke(GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementResult result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementCompletionHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, result);
}
// Autogenerated method: PlatformAchievementsModelSO/UnlockAchievementCompletionHandler.BeginInvoke
System::IAsyncResult* GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementCompletionHandler::BeginInvoke(GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementResult result, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementCompletionHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, result, callback, object);
}
// Autogenerated method: PlatformAchievementsModelSO/UnlockAchievementCompletionHandler.EndInvoke
void GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementCompletionHandler::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAchievementsModelSO::UnlockAchievementCompletionHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlatformAchievementsModelSO/GetUnlockedAchievementsCompletionHandler
#include "GlobalNamespace/PlatformAchievementsModelSO_GetUnlockedAchievementsCompletionHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: PlatformAchievementsModelSO/GetUnlockedAchievementsResult
#include "GlobalNamespace/PlatformAchievementsModelSO_GetUnlockedAchievementsResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlatformAchievementsModelSO/GetUnlockedAchievementsCompletionHandler.Invoke
void GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsCompletionHandler::Invoke(GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsResult result, ::ArrayW<::Il2CppString*> unlockedAchievementsIds) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsCompletionHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(unlockedAchievementsIds)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, result, unlockedAchievementsIds);
}
// Autogenerated method: PlatformAchievementsModelSO/GetUnlockedAchievementsCompletionHandler.BeginInvoke
System::IAsyncResult* GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsCompletionHandler::BeginInvoke(GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsResult result, ::ArrayW<::Il2CppString*> unlockedAchievementsIds, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsCompletionHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(unlockedAchievementsIds), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, result, unlockedAchievementsIds, callback, object);
}
// Autogenerated method: PlatformAchievementsModelSO/GetUnlockedAchievementsCompletionHandler.EndInvoke
void GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsCompletionHandler::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAchievementsModelSO::GetUnlockedAchievementsCompletionHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: AdditionalContentModel
#include "GlobalNamespace/AdditionalContentModel.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: AdditionalContentModel/UpdateEntitlementsResult
#include "GlobalNamespace/AdditionalContentModel_UpdateEntitlementsResult.hpp"
// Including type: AdditionalContentModel/<GetLevelEntitlementStatusAsync>d__10
#include "GlobalNamespace/AdditionalContentModel_-GetLevelEntitlementStatusAsync-d__10.hpp"
// Including type: AdditionalContentModel/<GetPackEntitlementStatusAsync>d__11
#include "GlobalNamespace/AdditionalContentModel_-GetPackEntitlementStatusAsync-d__11.hpp"
// Including type: AlwaysOwnedContentContainerSO
#include "GlobalNamespace/AlwaysOwnedContentContainerSO.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private AlwaysOwnedContentContainerSO _alwaysOwnedContentContainer
GlobalNamespace::AlwaysOwnedContentContainerSO*& GlobalNamespace::AdditionalContentModel::dyn__alwaysOwnedContentContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::dyn__alwaysOwnedContentContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alwaysOwnedContentContainer"))->offset;
  return *reinterpret_cast<GlobalNamespace::AlwaysOwnedContentContainerSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action didInvalidateDataEvent
System::Action*& GlobalNamespace::AdditionalContentModel::dyn_didInvalidateDataEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::dyn_didInvalidateDataEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didInvalidateDataEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AdditionalContentModel.add_didInvalidateDataEvent
void GlobalNamespace::AdditionalContentModel::add_didInvalidateDataEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::add_didInvalidateDataEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didInvalidateDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: AdditionalContentModel.remove_didInvalidateDataEvent
void GlobalNamespace::AdditionalContentModel::remove_didInvalidateDataEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::remove_didInvalidateDataEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didInvalidateDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: AdditionalContentModel.OnApplicationFocus
void GlobalNamespace::AdditionalContentModel::OnApplicationFocus(bool hasFocus) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::OnApplicationFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hasFocus)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, hasFocus);
}
// Autogenerated method: AdditionalContentModel.InvalidateData
void GlobalNamespace::AdditionalContentModel::InvalidateData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::InvalidateData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvalidateData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AdditionalContentModel.GetLevelEntitlementStatusAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>* GlobalNamespace::AdditionalContentModel::GetLevelEntitlementStatusAsync(::Il2CppString* levelId, System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::GetLevelEntitlementStatusAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLevelEntitlementStatusAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(token)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>*, false>(___instance_arg, ___internal__method, levelId, token);
}
// Autogenerated method: AdditionalContentModel.GetPackEntitlementStatusAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>* GlobalNamespace::AdditionalContentModel::GetPackEntitlementStatusAsync(::Il2CppString* levelPackId, System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::GetPackEntitlementStatusAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPackEntitlementStatusAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId), ::il2cpp_utils::ExtractType(token)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>*, false>(___instance_arg, ___internal__method, levelPackId, token);
}
// Autogenerated method: AdditionalContentModel.InvalidateDataInternal
void GlobalNamespace::AdditionalContentModel::InvalidateDataInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::InvalidateDataInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvalidateDataInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AdditionalContentModel.GetLevelEntitlementStatusInternalAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>* GlobalNamespace::AdditionalContentModel::GetLevelEntitlementStatusInternalAsync(::Il2CppString* levelId, System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::GetLevelEntitlementStatusInternalAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLevelEntitlementStatusInternalAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(token)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>*, false>(___instance_arg, ___internal__method, levelId, token);
}
// Autogenerated method: AdditionalContentModel.GetPackEntitlementStatusInternalAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>* GlobalNamespace::AdditionalContentModel::GetPackEntitlementStatusInternalAsync(::Il2CppString* levelPackId, System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::GetPackEntitlementStatusInternalAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPackEntitlementStatusInternalAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId), ::il2cpp_utils::ExtractType(token)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>*, false>(___instance_arg, ___internal__method, levelPackId, token);
}
// Autogenerated method: AdditionalContentModel.IsPackBetterBuyThanLevelAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>* GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelAsync(::Il2CppString* levelPackId, System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPackBetterBuyThanLevelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId), ::il2cpp_utils::ExtractType(token)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>*, false>(___instance_arg, ___internal__method, levelPackId, token);
}
// Autogenerated method: AdditionalContentModel.OpenLevelProductStoreAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>* GlobalNamespace::AdditionalContentModel::OpenLevelProductStoreAsync(::Il2CppString* levelId, System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::OpenLevelProductStoreAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenLevelProductStoreAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(token)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*, false>(___instance_arg, ___internal__method, levelId, token);
}
// Autogenerated method: AdditionalContentModel.OpenLevelPackProductStoreAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>* GlobalNamespace::AdditionalContentModel::OpenLevelPackProductStoreAsync(::Il2CppString* levelPackId, System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::OpenLevelPackProductStoreAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenLevelPackProductStoreAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId), ::il2cpp_utils::ExtractType(token)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*, false>(___instance_arg, ___internal__method, levelPackId, token);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AdditionalContentModel/EntitlementStatus
#include "GlobalNamespace/AdditionalContentModel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public AdditionalContentModel/EntitlementStatus Failed
GlobalNamespace::AdditionalContentModel::EntitlementStatus GlobalNamespace::AdditionalContentModel::EntitlementStatus::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::EntitlementStatus::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::AdditionalContentModel::EntitlementStatus>("", "AdditionalContentModel/EntitlementStatus", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public AdditionalContentModel/EntitlementStatus Failed
void GlobalNamespace::AdditionalContentModel::EntitlementStatus::_set_Failed(GlobalNamespace::AdditionalContentModel::EntitlementStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::EntitlementStatus::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AdditionalContentModel/EntitlementStatus", "Failed", value));
}
// Autogenerated static field getter
// Get static field: static public AdditionalContentModel/EntitlementStatus Owned
GlobalNamespace::AdditionalContentModel::EntitlementStatus GlobalNamespace::AdditionalContentModel::EntitlementStatus::_get_Owned() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::EntitlementStatus::_get_Owned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::AdditionalContentModel::EntitlementStatus>("", "AdditionalContentModel/EntitlementStatus", "Owned"));
}
// Autogenerated static field setter
// Set static field: static public AdditionalContentModel/EntitlementStatus Owned
void GlobalNamespace::AdditionalContentModel::EntitlementStatus::_set_Owned(GlobalNamespace::AdditionalContentModel::EntitlementStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::EntitlementStatus::_set_Owned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AdditionalContentModel/EntitlementStatus", "Owned", value));
}
// Autogenerated static field getter
// Get static field: static public AdditionalContentModel/EntitlementStatus NotOwned
GlobalNamespace::AdditionalContentModel::EntitlementStatus GlobalNamespace::AdditionalContentModel::EntitlementStatus::_get_NotOwned() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::EntitlementStatus::_get_NotOwned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::AdditionalContentModel::EntitlementStatus>("", "AdditionalContentModel/EntitlementStatus", "NotOwned"));
}
// Autogenerated static field setter
// Set static field: static public AdditionalContentModel/EntitlementStatus NotOwned
void GlobalNamespace::AdditionalContentModel::EntitlementStatus::_set_NotOwned(GlobalNamespace::AdditionalContentModel::EntitlementStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::EntitlementStatus::_set_NotOwned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AdditionalContentModel/EntitlementStatus", "NotOwned", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::AdditionalContentModel::EntitlementStatus::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::EntitlementStatus::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AdditionalContentModel/OpenProductStoreResult
#include "GlobalNamespace/AdditionalContentModel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public AdditionalContentModel/OpenProductStoreResult OK
GlobalNamespace::AdditionalContentModel::OpenProductStoreResult GlobalNamespace::AdditionalContentModel::OpenProductStoreResult::_get_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::OpenProductStoreResult::_get_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>("", "AdditionalContentModel/OpenProductStoreResult", "OK"));
}
// Autogenerated static field setter
// Set static field: static public AdditionalContentModel/OpenProductStoreResult OK
void GlobalNamespace::AdditionalContentModel::OpenProductStoreResult::_set_OK(GlobalNamespace::AdditionalContentModel::OpenProductStoreResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::OpenProductStoreResult::_set_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AdditionalContentModel/OpenProductStoreResult", "OK", value));
}
// Autogenerated static field getter
// Get static field: static public AdditionalContentModel/OpenProductStoreResult Failed
GlobalNamespace::AdditionalContentModel::OpenProductStoreResult GlobalNamespace::AdditionalContentModel::OpenProductStoreResult::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::OpenProductStoreResult::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>("", "AdditionalContentModel/OpenProductStoreResult", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public AdditionalContentModel/OpenProductStoreResult Failed
void GlobalNamespace::AdditionalContentModel::OpenProductStoreResult::_set_Failed(GlobalNamespace::AdditionalContentModel::OpenProductStoreResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::OpenProductStoreResult::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AdditionalContentModel/OpenProductStoreResult", "Failed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::AdditionalContentModel::OpenProductStoreResult::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::OpenProductStoreResult::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AdditionalContentModel/UpdateEntitlementsResult
#include "GlobalNamespace/AdditionalContentModel_UpdateEntitlementsResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public AdditionalContentModel/UpdateEntitlementsResult OK
GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult::_get_OK() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult::_get_OK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>("", "AdditionalContentModel/UpdateEntitlementsResult", "OK"));
}
// Autogenerated static field setter
// Set static field: static public AdditionalContentModel/UpdateEntitlementsResult OK
void GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult::_set_OK(GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult::_set_OK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AdditionalContentModel/UpdateEntitlementsResult", "OK", value));
}
// Autogenerated static field getter
// Get static field: static public AdditionalContentModel/UpdateEntitlementsResult Failed
GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>("", "AdditionalContentModel/UpdateEntitlementsResult", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public AdditionalContentModel/UpdateEntitlementsResult Failed
void GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult::_set_Failed(GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AdditionalContentModel/UpdateEntitlementsResult", "Failed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AdditionalContentModel/IsPackBetterBuyThanLevelResult
#include "GlobalNamespace/AdditionalContentModel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public AdditionalContentModel/IsPackBetterBuyThanLevelResult PackIsBetter
GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::_get_PackIsBetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::_get_PackIsBetter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>("", "AdditionalContentModel/IsPackBetterBuyThanLevelResult", "PackIsBetter"));
}
// Autogenerated static field setter
// Set static field: static public AdditionalContentModel/IsPackBetterBuyThanLevelResult PackIsBetter
void GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::_set_PackIsBetter(GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::_set_PackIsBetter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AdditionalContentModel/IsPackBetterBuyThanLevelResult", "PackIsBetter", value));
}
// Autogenerated static field getter
// Get static field: static public AdditionalContentModel/IsPackBetterBuyThanLevelResult LevelIsBetter
GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::_get_LevelIsBetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::_get_LevelIsBetter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>("", "AdditionalContentModel/IsPackBetterBuyThanLevelResult", "LevelIsBetter"));
}
// Autogenerated static field setter
// Set static field: static public AdditionalContentModel/IsPackBetterBuyThanLevelResult LevelIsBetter
void GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::_set_LevelIsBetter(GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::_set_LevelIsBetter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AdditionalContentModel/IsPackBetterBuyThanLevelResult", "LevelIsBetter", value));
}
// Autogenerated static field getter
// Get static field: static public AdditionalContentModel/IsPackBetterBuyThanLevelResult Failed
GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::_get_Failed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::_get_Failed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>("", "AdditionalContentModel/IsPackBetterBuyThanLevelResult", "Failed"));
}
// Autogenerated static field setter
// Set static field: static public AdditionalContentModel/IsPackBetterBuyThanLevelResult Failed
void GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::_set_Failed(GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::_set_Failed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AdditionalContentModel/IsPackBetterBuyThanLevelResult", "Failed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: AdditionalContentModel/<GetLevelEntitlementStatusAsync>d__10
#include "GlobalNamespace/AdditionalContentModel_-GetLevelEntitlementStatusAsync-d__10.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/EntitlementStatus> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AdditionalContentModel <>4__this
GlobalNamespace::AdditionalContentModel*& GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::AdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelId
::Il2CppString*& GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::dyn_levelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::dyn_levelId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken token
System::Threading::CancellationToken& GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::dyn_token() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::dyn_token");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "token"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/EntitlementStatus> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AdditionalContentModel/<GetLevelEntitlementStatusAsync>d__10.MoveNext
void GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: AdditionalContentModel/<GetLevelEntitlementStatusAsync>d__10.SetStateMachine
void GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::$GetLevelEntitlementStatusAsync$d__10::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: AdditionalContentModel/<GetPackEntitlementStatusAsync>d__11
#include "GlobalNamespace/AdditionalContentModel_-GetPackEntitlementStatusAsync-d__11.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/EntitlementStatus> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AdditionalContentModel <>4__this
GlobalNamespace::AdditionalContentModel*& GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::AdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelPackId
::Il2CppString*& GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::dyn_levelPackId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::dyn_levelPackId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelPackId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken token
System::Threading::CancellationToken& GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::dyn_token() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::dyn_token");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "token"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/EntitlementStatus> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AdditionalContentModel/<GetPackEntitlementStatusAsync>d__11.MoveNext
void GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: AdditionalContentModel/<GetPackEntitlementStatusAsync>d__11.SetStateMachine
void GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AdditionalContentModel::$GetPackEntitlementStatusAsync$d__11::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: AlwaysOwnedContentContainerSO
#include "GlobalNamespace/AlwaysOwnedContentContainerSO.hpp"
// Including type: AlwaysOwnedContentSO
#include "GlobalNamespace/AlwaysOwnedContentSO.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private AlwaysOwnedContentSO _alwaysOwnedContent
GlobalNamespace::AlwaysOwnedContentSO*& GlobalNamespace::AlwaysOwnedContentContainerSO::dyn__alwaysOwnedContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlwaysOwnedContentContainerSO::dyn__alwaysOwnedContent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alwaysOwnedContent"))->offset;
  return *reinterpret_cast<GlobalNamespace::AlwaysOwnedContentSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.String> _alwaysOwnedBeatmapLevelIds
System::Collections::Generic::HashSet_1<::Il2CppString*>*& GlobalNamespace::AlwaysOwnedContentContainerSO::dyn__alwaysOwnedBeatmapLevelIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlwaysOwnedContentContainerSO::dyn__alwaysOwnedBeatmapLevelIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alwaysOwnedBeatmapLevelIds"))->offset;
  return *reinterpret_cast<System::Collections::Generic::HashSet_1<::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.String> _alwaysOwnedPacksIds
System::Collections::Generic::HashSet_1<::Il2CppString*>*& GlobalNamespace::AlwaysOwnedContentContainerSO::dyn__alwaysOwnedPacksIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlwaysOwnedContentContainerSO::dyn__alwaysOwnedPacksIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alwaysOwnedPacksIds"))->offset;
  return *reinterpret_cast<System::Collections::Generic::HashSet_1<::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AlwaysOwnedContentContainerSO.get_alwaysOwnedBeatmapLevelIds
System::Collections::Generic::HashSet_1<::Il2CppString*>* GlobalNamespace::AlwaysOwnedContentContainerSO::get_alwaysOwnedBeatmapLevelIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlwaysOwnedContentContainerSO::get_alwaysOwnedBeatmapLevelIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alwaysOwnedBeatmapLevelIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::HashSet_1<::Il2CppString*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AlwaysOwnedContentContainerSO.get_alwaysOwnedPacksIds
System::Collections::Generic::HashSet_1<::Il2CppString*>* GlobalNamespace::AlwaysOwnedContentContainerSO::get_alwaysOwnedPacksIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlwaysOwnedContentContainerSO::get_alwaysOwnedPacksIds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alwaysOwnedPacksIds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::HashSet_1<::Il2CppString*>*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AlwaysOwnedContentContainerSO.InitAlwaysOwnedItems
void GlobalNamespace::AlwaysOwnedContentContainerSO::InitAlwaysOwnedItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlwaysOwnedContentContainerSO::InitAlwaysOwnedItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitAlwaysOwnedItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AlwaysOwnedContentContainerSO.OnEnable
void GlobalNamespace::AlwaysOwnedContentContainerSO::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlwaysOwnedContentContainerSO::OnEnable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AlwaysOwnedContentSO
#include "GlobalNamespace/AlwaysOwnedContentSO.hpp"
// Including type: BeatmapLevelPackSO
#include "GlobalNamespace/BeatmapLevelPackSO.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelPackSO[] _alwaysOwnedPacks
::ArrayW<GlobalNamespace::BeatmapLevelPackSO*>& GlobalNamespace::AlwaysOwnedContentSO::dyn__alwaysOwnedPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlwaysOwnedContentSO::dyn__alwaysOwnedPacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alwaysOwnedPacks"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::BeatmapLevelPackSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelSO[] _alwaysOwnedBeatmapLevels
::ArrayW<GlobalNamespace::BeatmapLevelSO*>& GlobalNamespace::AlwaysOwnedContentSO::dyn__alwaysOwnedBeatmapLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlwaysOwnedContentSO::dyn__alwaysOwnedBeatmapLevels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alwaysOwnedBeatmapLevels"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::BeatmapLevelSO*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AlwaysOwnedContentSO.get_alwaysOwnedPacks
::ArrayW<GlobalNamespace::BeatmapLevelPackSO*> GlobalNamespace::AlwaysOwnedContentSO::get_alwaysOwnedPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlwaysOwnedContentSO::get_alwaysOwnedPacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alwaysOwnedPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<GlobalNamespace::BeatmapLevelPackSO*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: AlwaysOwnedContentSO.get_alwaysOwnedBeatmapLevels
::ArrayW<GlobalNamespace::BeatmapLevelSO*> GlobalNamespace::AlwaysOwnedContentSO::get_alwaysOwnedBeatmapLevels() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AlwaysOwnedContentSO::get_alwaysOwnedBeatmapLevels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alwaysOwnedBeatmapLevels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<GlobalNamespace::BeatmapLevelSO*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusPlatformAdditionalContentModel
#include "GlobalNamespace/OculusPlatformAdditionalContentModel.hpp"
// Including type: OculusPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__5
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-GetLevelEntitlementStatusInternalAsync-d__5.hpp"
// Including type: OculusPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__6
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-GetPackEntitlementStatusInternalAsync-d__6.hpp"
// Including type: OculusPlatformAdditionalContentModel/<DataIsValidAsync>d__7
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-DataIsValidAsync-d__7.hpp"
// Including type: OculusPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__8
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-OpenLevelProductStoreAsync-d__8.hpp"
// Including type: OculusPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__9
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-OpenLevelPackProductStoreAsync-d__9.hpp"
// Including type: OculusPlatformAdditionalContentModel/<>c__DisplayClass10_0
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_--c__DisplayClass10_0.hpp"
// Including type: OculusPlatformAdditionalContentModel/<LaunchCheckoutFlow>d__10
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-LaunchCheckoutFlow-d__10.hpp"
// Including type: OculusPlatformAdditionalContentModel/<IsPackBetterBuyThanLevelAsync>d__11
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-IsPackBetterBuyThanLevelAsync-d__11.hpp"
// Including type: OculusPlatformAdditionalContentModel/<>c__DisplayClass12_0
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_--c__DisplayClass12_0.hpp"
// Including type: OculusPlatformAdditionalContentModel/<CheckForNewEntitlementsAsync>d__12
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-CheckForNewEntitlementsAsync-d__12.hpp"
// Including type: OculusLevelProductsModelSO
#include "GlobalNamespace/OculusLevelProductsModelSO.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Threading.SemaphoreSlim
#include "System/Threading/SemaphoreSlim.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private OculusLevelProductsModelSO _oculusLevelProductsModel
GlobalNamespace::OculusLevelProductsModelSO*& GlobalNamespace::OculusPlatformAdditionalContentModel::dyn__oculusLevelProductsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::dyn__oculusLevelProductsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_oculusLevelProductsModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::OculusLevelProductsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.String> _entitlementsSKU
System::Collections::Generic::HashSet_1<::Il2CppString*>*& GlobalNamespace::OculusPlatformAdditionalContentModel::dyn__entitlementsSKU() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::dyn__entitlementsSKU");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_entitlementsSKU"))->offset;
  return *reinterpret_cast<System::Collections::Generic::HashSet_1<::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.SemaphoreSlim _semaphoreSlim
System::Threading::SemaphoreSlim*& GlobalNamespace::OculusPlatformAdditionalContentModel::dyn__semaphoreSlim() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::dyn__semaphoreSlim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_semaphoreSlim"))->offset;
  return *reinterpret_cast<System::Threading::SemaphoreSlim**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isDataValid
bool& GlobalNamespace::OculusPlatformAdditionalContentModel::dyn__isDataValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::dyn__isDataValid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isDataValid"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusPlatformAdditionalContentModel.DataIsValidAsync
System::Threading::Tasks::Task_1<bool>* GlobalNamespace::OculusPlatformAdditionalContentModel::DataIsValidAsync(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::DataIsValidAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DataIsValidAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<bool>*, false>(___instance_arg, ___internal__method, cancellationToken);
}
// Autogenerated method: OculusPlatformAdditionalContentModel.LaunchCheckoutFlow
System::Threading::Tasks::Task_1<Oculus::Platform::Message_1<Oculus::Platform::Models::Purchase*>*>* GlobalNamespace::OculusPlatformAdditionalContentModel::LaunchCheckoutFlow(::Il2CppString* sku) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::LaunchCheckoutFlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchCheckoutFlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sku)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<Oculus::Platform::Message_1<Oculus::Platform::Models::Purchase*>*>*, false>(___instance_arg, ___internal__method, sku);
}
// Autogenerated method: OculusPlatformAdditionalContentModel.CheckForNewEntitlementsAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>* GlobalNamespace::OculusPlatformAdditionalContentModel::CheckForNewEntitlementsAsync(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::CheckForNewEntitlementsAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForNewEntitlementsAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>*, false>(___instance_arg, ___internal__method, cancellationToken);
}
// Autogenerated method: OculusPlatformAdditionalContentModel.HasLevelEntitlement
bool GlobalNamespace::OculusPlatformAdditionalContentModel::HasLevelEntitlement(::Il2CppString* levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::HasLevelEntitlement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasLevelEntitlement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, levelId);
}
// Autogenerated method: OculusPlatformAdditionalContentModel.HasLevelPackEntitlement
bool GlobalNamespace::OculusPlatformAdditionalContentModel::HasLevelPackEntitlement(::Il2CppString* levelPackId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::HasLevelPackEntitlement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasLevelPackEntitlement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, levelPackId);
}
// Autogenerated method: OculusPlatformAdditionalContentModel.InvalidateDataInternal
void GlobalNamespace::OculusPlatformAdditionalContentModel::InvalidateDataInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::InvalidateDataInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvalidateDataInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: OculusPlatformAdditionalContentModel.GetLevelEntitlementStatusInternalAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>* GlobalNamespace::OculusPlatformAdditionalContentModel::GetLevelEntitlementStatusInternalAsync(::Il2CppString* levelId, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::GetLevelEntitlementStatusInternalAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLevelEntitlementStatusInternalAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>*, false>(___instance_arg, ___internal__method, levelId, cancellationToken);
}
// Autogenerated method: OculusPlatformAdditionalContentModel.GetPackEntitlementStatusInternalAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>* GlobalNamespace::OculusPlatformAdditionalContentModel::GetPackEntitlementStatusInternalAsync(::Il2CppString* packId, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::GetPackEntitlementStatusInternalAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPackEntitlementStatusInternalAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packId), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>*, false>(___instance_arg, ___internal__method, packId, cancellationToken);
}
// Autogenerated method: OculusPlatformAdditionalContentModel.OpenLevelProductStoreAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>* GlobalNamespace::OculusPlatformAdditionalContentModel::OpenLevelProductStoreAsync(::Il2CppString* levelId, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::OpenLevelProductStoreAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenLevelProductStoreAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*, false>(___instance_arg, ___internal__method, levelId, cancellationToken);
}
// Autogenerated method: OculusPlatformAdditionalContentModel.OpenLevelPackProductStoreAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>* GlobalNamespace::OculusPlatformAdditionalContentModel::OpenLevelPackProductStoreAsync(::Il2CppString* levelPackId, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::OpenLevelPackProductStoreAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenLevelPackProductStoreAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*, false>(___instance_arg, ___internal__method, levelPackId, cancellationToken);
}
// Autogenerated method: OculusPlatformAdditionalContentModel.IsPackBetterBuyThanLevelAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>* GlobalNamespace::OculusPlatformAdditionalContentModel::IsPackBetterBuyThanLevelAsync(::Il2CppString* levelPackId, System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::IsPackBetterBuyThanLevelAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPackBetterBuyThanLevelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId), ::il2cpp_utils::ExtractType(token)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>*, false>(___instance_arg, ___internal__method, levelPackId, token);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__5
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-GetLevelEntitlementStatusInternalAsync-d__5.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/EntitlementStatus> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusPlatformAdditionalContentModel <>4__this
GlobalNamespace::OculusPlatformAdditionalContentModel*& GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::OculusPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken& GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelId
::Il2CppString*& GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_levelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_levelId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Boolean> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<bool>& GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__5.MoveNext
void GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__5.SetStateMachine
void GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__6
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-GetPackEntitlementStatusInternalAsync-d__6.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/EntitlementStatus> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusPlatformAdditionalContentModel <>4__this
GlobalNamespace::OculusPlatformAdditionalContentModel*& GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::OculusPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken& GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String packId
::Il2CppString*& GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_packId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_packId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Boolean> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<bool>& GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__6.MoveNext
void GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__6.SetStateMachine
void GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformAdditionalContentModel/<DataIsValidAsync>d__7
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-DataIsValidAsync-d__7.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Boolean> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<bool>& GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusPlatformAdditionalContentModel <>4__this
GlobalNamespace::OculusPlatformAdditionalContentModel*& GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::OculusPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken& GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/UpdateEntitlementsResult> <>u__2
System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>& GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<DataIsValidAsync>d__7.MoveNext
void GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<DataIsValidAsync>d__7.SetStateMachine
void GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$DataIsValidAsync$d__7::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__8
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-OpenLevelProductStoreAsync-d__8.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/OpenProductStoreResult> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusPlatformAdditionalContentModel <>4__this
GlobalNamespace::OculusPlatformAdditionalContentModel*& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::OculusPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelId
::Il2CppString*& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_levelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_levelId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<Oculus.Platform.Message`1<Oculus.Platform.Models.Purchase>> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<Oculus::Platform::Message_1<Oculus::Platform::Models::Purchase*>*>& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<Oculus::Platform::Message_1<Oculus::Platform::Models::Purchase*>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__2
System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__8.MoveNext
void GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__8.SetStateMachine
void GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__9
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-OpenLevelPackProductStoreAsync-d__9.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/OpenProductStoreResult> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusPlatformAdditionalContentModel <>4__this
GlobalNamespace::OculusPlatformAdditionalContentModel*& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::OculusPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelPackId
::Il2CppString*& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_levelPackId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_levelPackId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelPackId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<Oculus.Platform.Message`1<Oculus.Platform.Models.Purchase>> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<Oculus::Platform::Message_1<Oculus::Platform::Models::Purchase*>*>& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<Oculus::Platform::Message_1<Oculus::Platform::Models::Purchase*>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__2
System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__9.MoveNext
void GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__9.SetStateMachine
void GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__9::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformAdditionalContentModel/<>c__DisplayClass10_0
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_--c__DisplayClass10_0.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Threading.Tasks.TaskCompletionSource`1<Oculus.Platform.Message`1<Oculus.Platform.Models.Purchase>> launchCheckoutFlowTaskSource
System::Threading::Tasks::TaskCompletionSource_1<Oculus::Platform::Message_1<Oculus::Platform::Models::Purchase*>*>*& GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass10_0::dyn_launchCheckoutFlowTaskSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass10_0::dyn_launchCheckoutFlowTaskSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "launchCheckoutFlowTaskSource"))->offset;
  return *reinterpret_cast<System::Threading::Tasks::TaskCompletionSource_1<Oculus::Platform::Message_1<Oculus::Platform::Models::Purchase*>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<>c__DisplayClass10_0.<LaunchCheckoutFlow>b__0
void GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass10_0::$LaunchCheckoutFlow$b__0(Oculus::Platform::Message_1<Oculus::Platform::Models::Purchase*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass10_0::<LaunchCheckoutFlow>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LaunchCheckoutFlow>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, msg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusPlatformAdditionalContentModel/<LaunchCheckoutFlow>d__10
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-LaunchCheckoutFlow-d__10.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::OculusPlatformAdditionalContentModel::$LaunchCheckoutFlow$d__10::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$LaunchCheckoutFlow$d__10::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<Oculus.Platform.Message`1<Oculus.Platform.Models.Purchase>> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<Oculus::Platform::Message_1<Oculus::Platform::Models::Purchase*>*>& GlobalNamespace::OculusPlatformAdditionalContentModel::$LaunchCheckoutFlow$d__10::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$LaunchCheckoutFlow$d__10::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<Oculus::Platform::Message_1<Oculus::Platform::Models::Purchase*>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String sku
::Il2CppString*& GlobalNamespace::OculusPlatformAdditionalContentModel::$LaunchCheckoutFlow$d__10::dyn_sku() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$LaunchCheckoutFlow$d__10::dyn_sku");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sku"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<Oculus.Platform.Message`1<Oculus.Platform.Models.Purchase>> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<Oculus::Platform::Message_1<Oculus::Platform::Models::Purchase*>*>& GlobalNamespace::OculusPlatformAdditionalContentModel::$LaunchCheckoutFlow$d__10::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$LaunchCheckoutFlow$d__10::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<Oculus::Platform::Message_1<Oculus::Platform::Models::Purchase*>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<LaunchCheckoutFlow>d__10.MoveNext
void GlobalNamespace::OculusPlatformAdditionalContentModel::$LaunchCheckoutFlow$d__10::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$LaunchCheckoutFlow$d__10::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<LaunchCheckoutFlow>d__10.SetStateMachine
void GlobalNamespace::OculusPlatformAdditionalContentModel::$LaunchCheckoutFlow$d__10::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$LaunchCheckoutFlow$d__10::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformAdditionalContentModel/<IsPackBetterBuyThanLevelAsync>d__11
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-IsPackBetterBuyThanLevelAsync-d__11.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::OculusPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__11::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__11::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/IsPackBetterBuyThanLevelResult> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>& GlobalNamespace::OculusPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__11::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__11::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/IsPackBetterBuyThanLevelResult> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>& GlobalNamespace::OculusPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__11::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__11::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<IsPackBetterBuyThanLevelAsync>d__11.MoveNext
void GlobalNamespace::OculusPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__11::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__11::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<IsPackBetterBuyThanLevelAsync>d__11.SetStateMachine
void GlobalNamespace::OculusPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__11::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__11::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformAdditionalContentModel/<>c__DisplayClass12_0
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_--c__DisplayClass12_0.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: Oculus.Platform.Models.PurchaseList
#include "Oculus/Platform/Models/PurchaseList.hpp"
// Including type: Oculus.Platform.Models.AssetDetailsList
#include "Oculus/Platform/Models/AssetDetailsList.hpp"
// Including type: Oculus.Platform.Message`1/Oculus.Platform.Callback
#include "Oculus/Platform/Message_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken& GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass12_0::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass12_0::dyn_cancellationToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.Tasks.TaskCompletionSource`1<AdditionalContentModel/UpdateEntitlementsResult> getViewerPurchasesTaskSource
System::Threading::Tasks::TaskCompletionSource_1<GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>*& GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass12_0::dyn_getViewerPurchasesTaskSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass12_0::dyn_getViewerPurchasesTaskSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "getViewerPurchasesTaskSource"))->offset;
  return *reinterpret_cast<System::Threading::Tasks::TaskCompletionSource_1<GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusPlatformAdditionalContentModel <>4__this
GlobalNamespace::OculusPlatformAdditionalContentModel*& GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass12_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass12_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::OculusPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Platform.Message`1/Oculus.Platform.Callback<Oculus.Platform.Models.PurchaseList> <>9__1
typename Oculus::Platform::Message_1<Oculus::Platform::Models::PurchaseList*>::Callback*& GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass12_0::dyn_$$9__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass12_0::dyn_$$9__1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>9__1"))->offset;
  return *reinterpret_cast<typename Oculus::Platform::Message_1<Oculus::Platform::Models::PurchaseList*>::Callback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<>c__DisplayClass12_0.<CheckForNewEntitlementsAsync>b__0
void GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass12_0::$CheckForNewEntitlementsAsync$b__0(Oculus::Platform::Message_1<Oculus::Platform::Models::AssetDetailsList*>* getListMsg) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass12_0::<CheckForNewEntitlementsAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CheckForNewEntitlementsAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(getListMsg)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, getListMsg);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<>c__DisplayClass12_0.<CheckForNewEntitlementsAsync>b__1
void GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass12_0::$CheckForNewEntitlementsAsync$b__1(Oculus::Platform::Message_1<Oculus::Platform::Models::PurchaseList*>* getPurchasesMsg) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$$c__DisplayClass12_0::<CheckForNewEntitlementsAsync>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CheckForNewEntitlementsAsync>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(getPurchasesMsg)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, getPurchasesMsg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusPlatformAdditionalContentModel/<CheckForNewEntitlementsAsync>d__12
#include "GlobalNamespace/OculusPlatformAdditionalContentModel_-CheckForNewEntitlementsAsync-d__12.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/UpdateEntitlementsResult> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>& GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken& GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public OculusPlatformAdditionalContentModel <>4__this
GlobalNamespace::OculusPlatformAdditionalContentModel*& GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::OculusPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/UpdateEntitlementsResult> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>& GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<CheckForNewEntitlementsAsync>d__12.MoveNext
void GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OculusPlatformAdditionalContentModel/<CheckForNewEntitlementsAsync>d__12.SetStateMachine
void GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__12::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SteamPlatformAdditionalContentModel
#include "GlobalNamespace/SteamPlatformAdditionalContentModel.hpp"
// Including type: SteamPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__6
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-GetLevelEntitlementStatusInternalAsync-d__6.hpp"
// Including type: SteamPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__7
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-GetPackEntitlementStatusInternalAsync-d__7.hpp"
// Including type: SteamPlatformAdditionalContentModel/<DataIsValidAsync>d__8
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-DataIsValidAsync-d__8.hpp"
// Including type: SteamPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__9
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-OpenLevelProductStoreAsync-d__9.hpp"
// Including type: SteamPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__10
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-OpenLevelPackProductStoreAsync-d__10.hpp"
// Including type: SteamPlatformAdditionalContentModel/<CheckForNewEntitlementsAsync>d__14
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-CheckForNewEntitlementsAsync-d__14.hpp"
// Including type: SteamLevelProductsModelSO
#include "GlobalNamespace/SteamLevelProductsModelSO.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: System.Threading.SemaphoreSlim
#include "System/Threading/SemaphoreSlim.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private SteamLevelProductsModelSO _steamLevelProductsModel
GlobalNamespace::SteamLevelProductsModelSO*& GlobalNamespace::SteamPlatformAdditionalContentModel::dyn__steamLevelProductsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::dyn__steamLevelProductsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_steamLevelProductsModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::SteamLevelProductsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.UInt32> _entitlementsAppIds
System::Collections::Generic::HashSet_1<uint>*& GlobalNamespace::SteamPlatformAdditionalContentModel::dyn__entitlementsAppIds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::dyn__entitlementsAppIds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_entitlementsAppIds"))->offset;
  return *reinterpret_cast<System::Collections::Generic::HashSet_1<uint>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.TaskCompletionSource`1<System.Boolean> _dataIsValidTaskCompletionSource
System::Threading::Tasks::TaskCompletionSource_1<bool>*& GlobalNamespace::SteamPlatformAdditionalContentModel::dyn__dataIsValidTaskCompletionSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::dyn__dataIsValidTaskCompletionSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataIsValidTaskCompletionSource"))->offset;
  return *reinterpret_cast<System::Threading::Tasks::TaskCompletionSource_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.SemaphoreSlim _semaphoreSlim
System::Threading::SemaphoreSlim*& GlobalNamespace::SteamPlatformAdditionalContentModel::dyn__semaphoreSlim() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::dyn__semaphoreSlim");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_semaphoreSlim"))->offset;
  return *reinterpret_cast<System::Threading::SemaphoreSlim**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isDataValid
bool& GlobalNamespace::SteamPlatformAdditionalContentModel::dyn__isDataValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::dyn__isDataValid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isDataValid"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.DataIsValidAsync
System::Threading::Tasks::Task_1<bool>* GlobalNamespace::SteamPlatformAdditionalContentModel::DataIsValidAsync(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::DataIsValidAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DataIsValidAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<bool>*, false>(___instance_arg, ___internal__method, cancellationToken);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.OpenProductStore
void GlobalNamespace::SteamPlatformAdditionalContentModel::OpenProductStore(uint appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::OpenProductStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenProductStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, appId);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.OpenBundleUrl
void GlobalNamespace::SteamPlatformAdditionalContentModel::OpenBundleUrl(uint bundleId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::OpenBundleUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenBundleUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bundleId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, bundleId);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.CheckForNewEntitlementsAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>* GlobalNamespace::SteamPlatformAdditionalContentModel::CheckForNewEntitlementsAsync(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::CheckForNewEntitlementsAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForNewEntitlementsAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>*, false>(___instance_arg, ___internal__method, cancellationToken);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.HasLevelEntitlement
bool GlobalNamespace::SteamPlatformAdditionalContentModel::HasLevelEntitlement(::Il2CppString* levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::HasLevelEntitlement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasLevelEntitlement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, levelId);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.HasLevelPackEntitlement
bool GlobalNamespace::SteamPlatformAdditionalContentModel::HasLevelPackEntitlement(::Il2CppString* levelPackId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::HasLevelPackEntitlement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasLevelPackEntitlement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, levelPackId);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.InvalidateDataInternal
void GlobalNamespace::SteamPlatformAdditionalContentModel::InvalidateDataInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::InvalidateDataInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvalidateDataInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.GetLevelEntitlementStatusInternalAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>* GlobalNamespace::SteamPlatformAdditionalContentModel::GetLevelEntitlementStatusInternalAsync(::Il2CppString* levelId, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::GetLevelEntitlementStatusInternalAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLevelEntitlementStatusInternalAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>*, false>(___instance_arg, ___internal__method, levelId, cancellationToken);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.GetPackEntitlementStatusInternalAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>* GlobalNamespace::SteamPlatformAdditionalContentModel::GetPackEntitlementStatusInternalAsync(::Il2CppString* packId, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::GetPackEntitlementStatusInternalAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPackEntitlementStatusInternalAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packId), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>*, false>(___instance_arg, ___internal__method, packId, cancellationToken);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.OpenLevelProductStoreAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>* GlobalNamespace::SteamPlatformAdditionalContentModel::OpenLevelProductStoreAsync(::Il2CppString* levelId, System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::OpenLevelProductStoreAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenLevelProductStoreAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(token)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*, false>(___instance_arg, ___internal__method, levelId, token);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.OpenLevelPackProductStoreAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>* GlobalNamespace::SteamPlatformAdditionalContentModel::OpenLevelPackProductStoreAsync(::Il2CppString* levelPackId, System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::OpenLevelPackProductStoreAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenLevelPackProductStoreAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId), ::il2cpp_utils::ExtractType(token)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*, false>(___instance_arg, ___internal__method, levelPackId, token);
}
// Autogenerated method: SteamPlatformAdditionalContentModel.IsPackBetterBuyThanLevelAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>* GlobalNamespace::SteamPlatformAdditionalContentModel::IsPackBetterBuyThanLevelAsync(::Il2CppString* levelPackId, System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::IsPackBetterBuyThanLevelAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPackBetterBuyThanLevelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId), ::il2cpp_utils::ExtractType(token)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>*, false>(___instance_arg, ___internal__method, levelPackId, token);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SteamPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__6
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-GetLevelEntitlementStatusInternalAsync-d__6.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/EntitlementStatus> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SteamPlatformAdditionalContentModel <>4__this
GlobalNamespace::SteamPlatformAdditionalContentModel*& GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::SteamPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken& GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelId
::Il2CppString*& GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::dyn_levelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::dyn_levelId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Boolean> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<bool>& GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__6.MoveNext
void GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__6.SetStateMachine
void GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__6::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SteamPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__7
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-GetPackEntitlementStatusInternalAsync-d__7.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/EntitlementStatus> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SteamPlatformAdditionalContentModel <>4__this
GlobalNamespace::SteamPlatformAdditionalContentModel*& GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::SteamPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken& GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String packId
::Il2CppString*& GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::dyn_packId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::dyn_packId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "packId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Boolean> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<bool>& GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__7.MoveNext
void GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__7.SetStateMachine
void GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__7::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamPlatformAdditionalContentModel/<DataIsValidAsync>d__8
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-DataIsValidAsync-d__8.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<System.Boolean> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<bool>& GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SteamPlatformAdditionalContentModel <>4__this
GlobalNamespace::SteamPlatformAdditionalContentModel*& GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::SteamPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken& GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter <>u__1
System::Runtime::CompilerServices::TaskAwaiter& GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/UpdateEntitlementsResult> <>u__2
System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>& GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<DataIsValidAsync>d__8.MoveNext
void GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<DataIsValidAsync>d__8.SetStateMachine
void GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$DataIsValidAsync$d__8::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SteamPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__9
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-OpenLevelProductStoreAsync-d__9.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/OpenProductStoreResult> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>& GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SteamPlatformAdditionalContentModel <>4__this
GlobalNamespace::SteamPlatformAdditionalContentModel*& GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::SteamPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelId
::Il2CppString*& GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::dyn_levelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::dyn_levelId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/OpenProductStoreResult> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>& GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__9.MoveNext
void GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__9.SetStateMachine
void GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__9::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SteamPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__10
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-OpenLevelPackProductStoreAsync-d__10.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/OpenProductStoreResult> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>& GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SteamPlatformAdditionalContentModel <>4__this
GlobalNamespace::SteamPlatformAdditionalContentModel*& GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::SteamPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelPackId
::Il2CppString*& GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_levelPackId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_levelPackId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelPackId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/OpenProductStoreResult> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>& GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__10.MoveNext
void GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__10.SetStateMachine
void GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamPlatformAdditionalContentModel/<CheckForNewEntitlementsAsync>d__14
#include "GlobalNamespace/SteamPlatformAdditionalContentModel_-CheckForNewEntitlementsAsync-d__14.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::SteamPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__14::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__14::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/UpdateEntitlementsResult> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>& GlobalNamespace::SteamPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__14::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__14::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/UpdateEntitlementsResult> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>& GlobalNamespace::SteamPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__14::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__14::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AdditionalContentModel::UpdateEntitlementsResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<CheckForNewEntitlementsAsync>d__14.MoveNext
void GlobalNamespace::SteamPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__14::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__14::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: SteamPlatformAdditionalContentModel/<CheckForNewEntitlementsAsync>d__14.SetStateMachine
void GlobalNamespace::SteamPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__14::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SteamPlatformAdditionalContentModel::$CheckForNewEntitlementsAsync$d__14::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TestPlatformAdditionalContentModel
#include "GlobalNamespace/TestPlatformAdditionalContentModel.hpp"
// Including type: TestPlatformAdditionalContentModel/Entitlement
#include "GlobalNamespace/TestPlatformAdditionalContentModel_Entitlement.hpp"
// Including type: TestPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__5
#include "GlobalNamespace/TestPlatformAdditionalContentModel_-GetLevelEntitlementStatusInternalAsync-d__5.hpp"
// Including type: TestPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__6
#include "GlobalNamespace/TestPlatformAdditionalContentModel_-GetPackEntitlementStatusInternalAsync-d__6.hpp"
// Including type: TestPlatformAdditionalContentModel/<IsPackBetterBuyThanLevelAsync>d__7
#include "GlobalNamespace/TestPlatformAdditionalContentModel_-IsPackBetterBuyThanLevelAsync-d__7.hpp"
// Including type: TestPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__8
#include "GlobalNamespace/TestPlatformAdditionalContentModel_-OpenLevelProductStoreAsync-d__8.hpp"
// Including type: TestPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__10
#include "GlobalNamespace/TestPlatformAdditionalContentModel_-OpenLevelPackProductStoreAsync-d__10.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TestPlatformAdditionalContentModel/Entitlement[] _levelsEntitlements
::ArrayW<GlobalNamespace::TestPlatformAdditionalContentModel::Entitlement*>& GlobalNamespace::TestPlatformAdditionalContentModel::dyn__levelsEntitlements() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::dyn__levelsEntitlements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelsEntitlements"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::TestPlatformAdditionalContentModel::Entitlement*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TestPlatformAdditionalContentModel/Entitlement[] _levelPacksEntitlements
::ArrayW<GlobalNamespace::TestPlatformAdditionalContentModel::Entitlement*>& GlobalNamespace::TestPlatformAdditionalContentModel::dyn__levelPacksEntitlements() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::dyn__levelPacksEntitlements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_levelPacksEntitlements"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::TestPlatformAdditionalContentModel::Entitlement*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _packBetterBuyThanLevel
bool& GlobalNamespace::TestPlatformAdditionalContentModel::dyn__packBetterBuyThanLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::dyn__packBetterBuyThanLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_packBetterBuyThanLevel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TestPlatformAdditionalContentModel.BuyLevel
void GlobalNamespace::TestPlatformAdditionalContentModel::BuyLevel(::Il2CppString* levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::BuyLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuyLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, levelId);
}
// Autogenerated method: TestPlatformAdditionalContentModel.InvalidateDataInternal
void GlobalNamespace::TestPlatformAdditionalContentModel::InvalidateDataInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::InvalidateDataInternal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvalidateDataInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: TestPlatformAdditionalContentModel.GetLevelEntitlementStatusInternalAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>* GlobalNamespace::TestPlatformAdditionalContentModel::GetLevelEntitlementStatusInternalAsync(::Il2CppString* levelId, System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::GetLevelEntitlementStatusInternalAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLevelEntitlementStatusInternalAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(token)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>*, false>(___instance_arg, ___internal__method, levelId, token);
}
// Autogenerated method: TestPlatformAdditionalContentModel.GetPackEntitlementStatusInternalAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>* GlobalNamespace::TestPlatformAdditionalContentModel::GetPackEntitlementStatusInternalAsync(::Il2CppString* levelPackId, System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::GetPackEntitlementStatusInternalAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPackEntitlementStatusInternalAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId), ::il2cpp_utils::ExtractType(token)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>*, false>(___instance_arg, ___internal__method, levelPackId, token);
}
// Autogenerated method: TestPlatformAdditionalContentModel.IsPackBetterBuyThanLevelAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>* GlobalNamespace::TestPlatformAdditionalContentModel::IsPackBetterBuyThanLevelAsync(::Il2CppString* levelPackId, System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::IsPackBetterBuyThanLevelAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPackBetterBuyThanLevelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId), ::il2cpp_utils::ExtractType(token)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>*, false>(___instance_arg, ___internal__method, levelPackId, token);
}
// Autogenerated method: TestPlatformAdditionalContentModel.OpenLevelProductStoreAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>* GlobalNamespace::TestPlatformAdditionalContentModel::OpenLevelProductStoreAsync(::Il2CppString* levelId, System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::OpenLevelProductStoreAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenLevelProductStoreAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(token)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*, false>(___instance_arg, ___internal__method, levelId, token);
}
// Autogenerated method: TestPlatformAdditionalContentModel.OpenLevelPackProductStoreAsync
System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>* GlobalNamespace::TestPlatformAdditionalContentModel::OpenLevelPackProductStoreAsync(::Il2CppString* levelPackId, System::Threading::CancellationToken token) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::OpenLevelPackProductStoreAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenLevelPackProductStoreAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelPackId), ::il2cpp_utils::ExtractType(token)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*, false>(___instance_arg, ___internal__method, levelPackId, token);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TestPlatformAdditionalContentModel/Entitlement
#include "GlobalNamespace/TestPlatformAdditionalContentModel_Entitlement.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String id
::Il2CppString*& GlobalNamespace::TestPlatformAdditionalContentModel::Entitlement::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::Entitlement::dyn_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public AdditionalContentModel/EntitlementStatus status
GlobalNamespace::AdditionalContentModel::EntitlementStatus& GlobalNamespace::TestPlatformAdditionalContentModel::Entitlement::dyn_status() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::Entitlement::dyn_status");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "status"))->offset;
  return *reinterpret_cast<GlobalNamespace::AdditionalContentModel::EntitlementStatus*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TestPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__5
#include "GlobalNamespace/TestPlatformAdditionalContentModel_-GetLevelEntitlementStatusInternalAsync-d__5.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/EntitlementStatus> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken token
System::Threading::CancellationToken& GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_token() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_token");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "token"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TestPlatformAdditionalContentModel <>4__this
GlobalNamespace::TestPlatformAdditionalContentModel*& GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::TestPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelId
::Il2CppString*& GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_levelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_levelId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.YieldAwaitable/System.Runtime.CompilerServices.YieldAwaiter <>u__1
System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter& GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TestPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__5.MoveNext
void GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: TestPlatformAdditionalContentModel/<GetLevelEntitlementStatusInternalAsync>d__5.SetStateMachine
void GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$GetLevelEntitlementStatusInternalAsync$d__5::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TestPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__6
#include "GlobalNamespace/TestPlatformAdditionalContentModel_-GetPackEntitlementStatusInternalAsync-d__6.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/EntitlementStatus> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>& GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken token
System::Threading::CancellationToken& GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_token() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_token");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "token"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TestPlatformAdditionalContentModel <>4__this
GlobalNamespace::TestPlatformAdditionalContentModel*& GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::TestPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelPackId
::Il2CppString*& GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_levelPackId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_levelPackId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelPackId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.YieldAwaitable/System.Runtime.CompilerServices.YieldAwaiter <>u__1
System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter& GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TestPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__6.MoveNext
void GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: TestPlatformAdditionalContentModel/<GetPackEntitlementStatusInternalAsync>d__6.SetStateMachine
void GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$GetPackEntitlementStatusInternalAsync$d__6::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TestPlatformAdditionalContentModel/<IsPackBetterBuyThanLevelAsync>d__7
#include "GlobalNamespace/TestPlatformAdditionalContentModel_-IsPackBetterBuyThanLevelAsync-d__7.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/IsPackBetterBuyThanLevelResult> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>& GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::AdditionalContentModel::IsPackBetterBuyThanLevelResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken token
System::Threading::CancellationToken& GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::dyn_token() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::dyn_token");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "token"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TestPlatformAdditionalContentModel <>4__this
GlobalNamespace::TestPlatformAdditionalContentModel*& GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::TestPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.YieldAwaitable/System.Runtime.CompilerServices.YieldAwaiter <>u__1
System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter& GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TestPlatformAdditionalContentModel/<IsPackBetterBuyThanLevelAsync>d__7.MoveNext
void GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: TestPlatformAdditionalContentModel/<IsPackBetterBuyThanLevelAsync>d__7.SetStateMachine
void GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$IsPackBetterBuyThanLevelAsync$d__7::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TestPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__8
#include "GlobalNamespace/TestPlatformAdditionalContentModel_-OpenLevelProductStoreAsync-d__8.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/OpenProductStoreResult> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>& GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken token
System::Threading::CancellationToken& GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_token() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_token");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "token"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelId
::Il2CppString*& GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_levelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_levelId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TestPlatformAdditionalContentModel <>4__this
GlobalNamespace::TestPlatformAdditionalContentModel*& GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::TestPlatformAdditionalContentModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.YieldAwaitable/System.Runtime.CompilerServices.YieldAwaiter <>u__1
System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter& GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TestPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__8.MoveNext
void GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: TestPlatformAdditionalContentModel/<OpenLevelProductStoreAsync>d__8.SetStateMachine
void GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelProductStoreAsync$d__8::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TestPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__10
#include "GlobalNamespace/TestPlatformAdditionalContentModel_-OpenLevelPackProductStoreAsync-d__10.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AdditionalContentModel/OpenProductStoreResult> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>& GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::AdditionalContentModel::OpenProductStoreResult>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken token
System::Threading::CancellationToken& GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_token() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_token");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "token"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String levelPackId
::Il2CppString*& GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_levelPackId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_levelPackId");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "levelPackId"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.YieldAwaitable/System.Runtime.CompilerServices.YieldAwaiter <>u__1
System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter& GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::YieldAwaitable::YieldAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TestPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__10.MoveNext
void GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: TestPlatformAdditionalContentModel/<OpenLevelPackProductStoreAsync>d__10.SetStateMachine
void GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TestPlatformAdditionalContentModel::$OpenLevelPackProductStoreAsync$d__10::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
