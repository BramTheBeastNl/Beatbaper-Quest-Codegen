// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CannotStartGameReasonMethods
#include "GlobalNamespace/CannotStartGameReasonMethods.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: CannotStartGameReason
#include "GlobalNamespace/CannotStartGameReason.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [LocalizationKeyAttribute] Offset: 0xE01B0C
// Autogenerated static field getter
// Get static field: static private System.String kAllPlayersSpectating
::Il2CppString* GlobalNamespace::CannotStartGameReasonMethods::_get_kAllPlayersSpectating() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CannotStartGameReasonMethods::_get_kAllPlayersSpectating");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "CannotStartGameReasonMethods", "kAllPlayersSpectating"));
}
// Autogenerated static field setter
// Set static field: static private System.String kAllPlayersSpectating
void GlobalNamespace::CannotStartGameReasonMethods::_set_kAllPlayersSpectating(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CannotStartGameReasonMethods::_set_kAllPlayersSpectating");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CannotStartGameReasonMethods", "kAllPlayersSpectating", value));
}
// [LocalizationKeyAttribute] Offset: 0xE01B1C
// Autogenerated static field getter
// Get static field: static private System.String kNoSongSelected
::Il2CppString* GlobalNamespace::CannotStartGameReasonMethods::_get_kNoSongSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CannotStartGameReasonMethods::_get_kNoSongSelected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "CannotStartGameReasonMethods", "kNoSongSelected"));
}
// Autogenerated static field setter
// Set static field: static private System.String kNoSongSelected
void GlobalNamespace::CannotStartGameReasonMethods::_set_kNoSongSelected(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CannotStartGameReasonMethods::_set_kNoSongSelected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CannotStartGameReasonMethods", "kNoSongSelected", value));
}
// [LocalizationKeyAttribute] Offset: 0xE01B2C
// Autogenerated static field getter
// Get static field: static private System.String kAllPlayersNotInLobby
::Il2CppString* GlobalNamespace::CannotStartGameReasonMethods::_get_kAllPlayersNotInLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CannotStartGameReasonMethods::_get_kAllPlayersNotInLobby");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "CannotStartGameReasonMethods", "kAllPlayersNotInLobby"));
}
// Autogenerated static field setter
// Set static field: static private System.String kAllPlayersNotInLobby
void GlobalNamespace::CannotStartGameReasonMethods::_set_kAllPlayersNotInLobby(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CannotStartGameReasonMethods::_set_kAllPlayersNotInLobby");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CannotStartGameReasonMethods", "kAllPlayersNotInLobby", value));
}
// [LocalizationKeyAttribute] Offset: 0xE01B3C
// Autogenerated static field getter
// Get static field: static private System.String kDoNotOwnSong
::Il2CppString* GlobalNamespace::CannotStartGameReasonMethods::_get_kDoNotOwnSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CannotStartGameReasonMethods::_get_kDoNotOwnSong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "CannotStartGameReasonMethods", "kDoNotOwnSong"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDoNotOwnSong
void GlobalNamespace::CannotStartGameReasonMethods::_set_kDoNotOwnSong(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CannotStartGameReasonMethods::_set_kDoNotOwnSong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CannotStartGameReasonMethods", "kDoNotOwnSong", value));
}
// Autogenerated method: CannotStartGameReasonMethods.LocalizedKey
::Il2CppString* GlobalNamespace::CannotStartGameReasonMethods::LocalizedKey(GlobalNamespace::CannotStartGameReason cannotStartGameReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CannotStartGameReasonMethods::LocalizedKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CannotStartGameReasonMethods", "LocalizedKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cannotStartGameReason)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cannotStartGameReason);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ConnectionFailedReasonMethods
#include "GlobalNamespace/ConnectionFailedReasonMethods.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: ConnectionFailedReason
#include "GlobalNamespace/ConnectionFailedReason.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [LocalizationKeyAttribute] Offset: 0xE01B4C
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedUnknown
::Il2CppString* GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedUnknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedUnknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "ConnectionFailedReasonMethods", "kConnectionFailedUnknown"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedUnknown
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedUnknown(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedUnknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedUnknown", value));
}
// [LocalizationKeyAttribute] Offset: 0xE01B5C
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedConnectionCanceled
::Il2CppString* GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedConnectionCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedConnectionCanceled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "ConnectionFailedReasonMethods", "kConnectionFailedConnectionCanceled"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedConnectionCanceled
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedConnectionCanceled(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedConnectionCanceled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedConnectionCanceled", value));
}
// [LocalizationKeyAttribute] Offset: 0xE01B6C
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedServerUnreachable
::Il2CppString* GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedServerUnreachable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedServerUnreachable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "ConnectionFailedReasonMethods", "kConnectionFailedServerUnreachable"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedServerUnreachable
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedServerUnreachable(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedServerUnreachable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedServerUnreachable", value));
}
// [LocalizationKeyAttribute] Offset: 0xE01B7C
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedServerDoesNotExist
::Il2CppString* GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedServerDoesNotExist() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedServerDoesNotExist");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "ConnectionFailedReasonMethods", "kConnectionFailedServerDoesNotExist"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedServerDoesNotExist
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedServerDoesNotExist(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedServerDoesNotExist");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedServerDoesNotExist", value));
}
// [LocalizationKeyAttribute] Offset: 0xE01B8C
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedServerAtCapacity
::Il2CppString* GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedServerAtCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedServerAtCapacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "ConnectionFailedReasonMethods", "kConnectionFailedServerAtCapacity"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedServerAtCapacity
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedServerAtCapacity(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedServerAtCapacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedServerAtCapacity", value));
}
// [LocalizationKeyAttribute] Offset: 0xE01B9C
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedVersionMismatch
::Il2CppString* GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedVersionMismatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedVersionMismatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "ConnectionFailedReasonMethods", "kConnectionFailedVersionMismatch"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedVersionMismatch
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedVersionMismatch(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedVersionMismatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedVersionMismatch", value));
}
// [LocalizationKeyAttribute] Offset: 0xE01BAC
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedInvalidPassword
::Il2CppString* GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedInvalidPassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedInvalidPassword");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "ConnectionFailedReasonMethods", "kConnectionFailedInvalidPassword"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedInvalidPassword
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedInvalidPassword(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedInvalidPassword");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedInvalidPassword", value));
}
// [LocalizationKeyAttribute] Offset: 0xE01BBC
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedMasterServerUnreachable
::Il2CppString* GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedMasterServerUnreachable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedMasterServerUnreachable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "ConnectionFailedReasonMethods", "kConnectionFailedMasterServerUnreachable"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedMasterServerUnreachable
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedMasterServerUnreachable(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedMasterServerUnreachable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedMasterServerUnreachable", value));
}
// [LocalizationKeyAttribute] Offset: 0xE01BCC
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedMasterServerNotAuthenticated
::Il2CppString* GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedMasterServerNotAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedMasterServerNotAuthenticated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "ConnectionFailedReasonMethods", "kConnectionFailedMasterServerNotAuthenticated"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedMasterServerNotAuthenticated
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedMasterServerNotAuthenticated(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedMasterServerNotAuthenticated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedMasterServerNotAuthenticated", value));
}
// [LocalizationKeyAttribute] Offset: 0xE01BDC
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedNetworkNotConnected
::Il2CppString* GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedNetworkNotConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedNetworkNotConnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "ConnectionFailedReasonMethods", "kConnectionFailedNetworkNotConnected"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedNetworkNotConnected
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedNetworkNotConnected(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedNetworkNotConnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedNetworkNotConnected", value));
}
// [LocalizationKeyAttribute] Offset: 0xE01BEC
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedMasterServerCertificateValidationFailed
::Il2CppString* GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedMasterServerCertificateValidationFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedMasterServerCertificateValidationFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "ConnectionFailedReasonMethods", "kConnectionFailedMasterServerCertificateValidationFailed"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedMasterServerCertificateValidationFailed
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedMasterServerCertificateValidationFailed(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedMasterServerCertificateValidationFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedMasterServerCertificateValidationFailed", value));
}
// [LocalizationKeyAttribute] Offset: 0xE01BFC
// Autogenerated static field getter
// Get static field: static private System.String kConnectionFailedServerIsTerminating
::Il2CppString* GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedServerIsTerminating() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_get_kConnectionFailedServerIsTerminating");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "ConnectionFailedReasonMethods", "kConnectionFailedServerIsTerminating"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionFailedServerIsTerminating
void GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedServerIsTerminating(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::_set_kConnectionFailedServerIsTerminating");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ConnectionFailedReasonMethods", "kConnectionFailedServerIsTerminating", value));
}
// Autogenerated method: ConnectionFailedReasonMethods.LocalizedKey
::Il2CppString* GlobalNamespace::ConnectionFailedReasonMethods::LocalizedKey(GlobalNamespace::ConnectionFailedReason connectionFailedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::LocalizedKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ConnectionFailedReasonMethods", "LocalizedKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectionFailedReason)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, connectionFailedReason);
}
// Autogenerated method: ConnectionFailedReasonMethods.ErrorCode
::Il2CppString* GlobalNamespace::ConnectionFailedReasonMethods::ErrorCode(GlobalNamespace::ConnectionFailedReason connectionFailedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConnectionFailedReasonMethods::ErrorCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ConnectionFailedReasonMethods", "ErrorCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectionFailedReason)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, connectionFailedReason);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: DisconnectedReasonMethods
#include "GlobalNamespace/DisconnectedReasonMethods.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: DisconnectedReason
#include "GlobalNamespace/DisconnectedReason.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [LocalizationKeyAttribute] Offset: 0xE01C0C
// Autogenerated static field getter
// Get static field: static private System.String kDisconnectedUnknown
::Il2CppString* GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedUnknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedUnknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "DisconnectedReasonMethods", "kDisconnectedUnknown"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDisconnectedUnknown
void GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedUnknown(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedUnknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DisconnectedReasonMethods", "kDisconnectedUnknown", value));
}
// [LocalizationKeyAttribute] Offset: 0xE01C1C
// Autogenerated static field getter
// Get static field: static private System.String kDisconnectedUserInitiated
::Il2CppString* GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedUserInitiated() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedUserInitiated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "DisconnectedReasonMethods", "kDisconnectedUserInitiated"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDisconnectedUserInitiated
void GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedUserInitiated(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedUserInitiated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DisconnectedReasonMethods", "kDisconnectedUserInitiated", value));
}
// [LocalizationKeyAttribute] Offset: 0xE01C2C
// Autogenerated static field getter
// Get static field: static private System.String kDisconnectedTimeout
::Il2CppString* GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "DisconnectedReasonMethods", "kDisconnectedTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDisconnectedTimeout
void GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedTimeout(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DisconnectedReasonMethods", "kDisconnectedTimeout", value));
}
// [LocalizationKeyAttribute] Offset: 0xE01C3C
// Autogenerated static field getter
// Get static field: static private System.String kDisconnectedKicked
::Il2CppString* GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedKicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedKicked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "DisconnectedReasonMethods", "kDisconnectedKicked"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDisconnectedKicked
void GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedKicked(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedKicked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DisconnectedReasonMethods", "kDisconnectedKicked", value));
}
// [LocalizationKeyAttribute] Offset: 0xE01C4C
// Autogenerated static field getter
// Get static field: static private System.String kDisconnectedServerAtCapacity
::Il2CppString* GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedServerAtCapacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedServerAtCapacity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "DisconnectedReasonMethods", "kDisconnectedServerAtCapacity"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDisconnectedServerAtCapacity
void GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedServerAtCapacity(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedServerAtCapacity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DisconnectedReasonMethods", "kDisconnectedServerAtCapacity", value));
}
// [LocalizationKeyAttribute] Offset: 0xE01C5C
// Autogenerated static field getter
// Get static field: static private System.String kDisconnectedServerConnectionClosed
::Il2CppString* GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedServerConnectionClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedServerConnectionClosed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "DisconnectedReasonMethods", "kDisconnectedServerConnectionClosed"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDisconnectedServerConnectionClosed
void GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedServerConnectionClosed(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedServerConnectionClosed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DisconnectedReasonMethods", "kDisconnectedServerConnectionClosed", value));
}
// [LocalizationKeyAttribute] Offset: 0xE01C6C
// Autogenerated static field getter
// Get static field: static private System.String kDisconnectedMasterServerUnreachable
::Il2CppString* GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedMasterServerUnreachable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedMasterServerUnreachable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "DisconnectedReasonMethods", "kDisconnectedMasterServerUnreachable"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDisconnectedMasterServerUnreachable
void GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedMasterServerUnreachable(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedMasterServerUnreachable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DisconnectedReasonMethods", "kDisconnectedMasterServerUnreachable", value));
}
// [LocalizationKeyAttribute] Offset: 0xE01C7C
// Autogenerated static field getter
// Get static field: static private System.String kDisconnectedServerTerminated
::Il2CppString* GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedServerTerminated() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectedReasonMethods::_get_kDisconnectedServerTerminated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "DisconnectedReasonMethods", "kDisconnectedServerTerminated"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDisconnectedServerTerminated
void GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedServerTerminated(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectedReasonMethods::_set_kDisconnectedServerTerminated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DisconnectedReasonMethods", "kDisconnectedServerTerminated", value));
}
// Autogenerated method: DisconnectedReasonMethods.LocalizedKey
::Il2CppString* GlobalNamespace::DisconnectedReasonMethods::LocalizedKey(GlobalNamespace::DisconnectedReason connectionFailedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectedReasonMethods::LocalizedKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DisconnectedReasonMethods", "LocalizedKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectionFailedReason)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, connectionFailedReason);
}
// Autogenerated method: DisconnectedReasonMethods.ErrorCode
::Il2CppString* GlobalNamespace::DisconnectedReasonMethods::ErrorCode(GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectedReasonMethods::ErrorCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "DisconnectedReasonMethods", "ErrorCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, disconnectedReason);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: GameServerListItem
#include "GlobalNamespace/GameServerListItem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String serverName
::Il2CppString* GlobalNamespace::GameServerListItem::_get_serverName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerListItem::_get_serverName");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "serverName"));
}
// Autogenerated instance field setter
// Set instance field: public readonly System.String serverName
void GlobalNamespace::GameServerListItem::_set_serverName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerListItem::_set_serverName");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "serverName", value));
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 capacity
int GlobalNamespace::GameServerListItem::_get_capacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerListItem::_get_capacity");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "capacity"));
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Int32 capacity
void GlobalNamespace::GameServerListItem::_set_capacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerListItem::_set_capacity");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "capacity", value));
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 occupied
int GlobalNamespace::GameServerListItem::_get_occupied() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerListItem::_get_occupied");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "occupied"));
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Int32 occupied
void GlobalNamespace::GameServerListItem::_set_occupied(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerListItem::_set_occupied");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "occupied", value));
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean password
bool GlobalNamespace::GameServerListItem::_get_password() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerListItem::_get_password");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "password"));
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Boolean password
void GlobalNamespace::GameServerListItem::_set_password(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerListItem::_set_password");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "password", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: GameServerPlayerTableItem
#include "GlobalNamespace/GameServerPlayerTableItem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String playerName
::Il2CppString* GlobalNamespace::GameServerPlayerTableItem::_get_playerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableItem::_get_playerName");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "playerName"));
}
// Autogenerated instance field setter
// Set instance field: public readonly System.String playerName
void GlobalNamespace::GameServerPlayerTableItem::_set_playerName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableItem::_set_playerName");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "playerName", value));
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String suggestedLevel
::Il2CppString* GlobalNamespace::GameServerPlayerTableItem::_get_suggestedLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableItem::_get_suggestedLevel");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "suggestedLevel"));
}
// Autogenerated instance field setter
// Set instance field: public readonly System.String suggestedLevel
void GlobalNamespace::GameServerPlayerTableItem::_set_suggestedLevel(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableItem::_set_suggestedLevel");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "suggestedLevel", value));
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String suggestedModifiers
::Il2CppString* GlobalNamespace::GameServerPlayerTableItem::_get_suggestedModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableItem::_get_suggestedModifiers");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "suggestedModifiers"));
}
// Autogenerated instance field setter
// Set instance field: public readonly System.String suggestedModifiers
void GlobalNamespace::GameServerPlayerTableItem::_set_suggestedModifiers(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableItem::_set_suggestedModifiers");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "suggestedModifiers", value));
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean isReady
bool GlobalNamespace::GameServerPlayerTableItem::_get_isReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableItem::_get_isReady");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "isReady"));
}
// Autogenerated instance field setter
// Set instance field: public readonly System.Boolean isReady
void GlobalNamespace::GameServerPlayerTableItem::_set_isReady(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayerTableItem::_set_isReady");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "isReady", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ILevelGameplaySetupData
#include "GlobalNamespace/ILevelGameplaySetupData.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ILevelGameplaySetupData.get_beatmapLevel
GlobalNamespace::IPreviewBeatmapLevel* GlobalNamespace::ILevelGameplaySetupData::get_beatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILevelGameplaySetupData::get_beatmapLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IPreviewBeatmapLevel*, false>(this, ___internal__method);
}
// Autogenerated method: ILevelGameplaySetupData.set_beatmapLevel
void GlobalNamespace::ILevelGameplaySetupData::set_beatmapLevel(GlobalNamespace::IPreviewBeatmapLevel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILevelGameplaySetupData::set_beatmapLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_beatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILevelGameplaySetupData.get_beatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::ILevelGameplaySetupData::get_beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILevelGameplaySetupData::get_beatmapCharacteristic");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: ILevelGameplaySetupData.set_beatmapCharacteristic
void GlobalNamespace::ILevelGameplaySetupData::set_beatmapCharacteristic(GlobalNamespace::BeatmapCharacteristicSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILevelGameplaySetupData::set_beatmapCharacteristic");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_beatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILevelGameplaySetupData.get_beatmapDifficulty
GlobalNamespace::BeatmapDifficulty GlobalNamespace::ILevelGameplaySetupData::get_beatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILevelGameplaySetupData::get_beatmapDifficulty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapDifficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapDifficulty, false>(this, ___internal__method);
}
// Autogenerated method: ILevelGameplaySetupData.set_beatmapDifficulty
void GlobalNamespace::ILevelGameplaySetupData::set_beatmapDifficulty(GlobalNamespace::BeatmapDifficulty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILevelGameplaySetupData::set_beatmapDifficulty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_beatmapDifficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILevelGameplaySetupData.get_gameplayModifiers
GlobalNamespace::GameplayModifiers* GlobalNamespace::ILevelGameplaySetupData::get_gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILevelGameplaySetupData::get_gameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayModifiers*, false>(this, ___internal__method);
}
// Autogenerated method: ILevelGameplaySetupData.set_gameplayModifiers
void GlobalNamespace::ILevelGameplaySetupData::set_gameplayModifiers(GlobalNamespace::GameplayModifiers* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILevelGameplaySetupData::set_gameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ILobbyGameStateController
#include "GlobalNamespace/ILobbyGameStateController.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: PlayersMissingEntitlementsNetSerializable
#include "GlobalNamespace/PlayersMissingEntitlementsNetSerializable.hpp"
// Including type: BeatmapIdentifierNetSerializable
#include "GlobalNamespace/BeatmapIdentifierNetSerializable.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: MultiplayerLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MultiplayerLevelScenesTransitionSetupDataSO.hpp"
// Including type: MultiplayerResultsData
#include "GlobalNamespace/MultiplayerResultsData.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ILobbyGameStateController.get_state
GlobalNamespace::MultiplayerLobbyState GlobalNamespace::ILobbyGameStateController::get_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::get_state");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_state", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MultiplayerLobbyState, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.set_state
void GlobalNamespace::ILobbyGameStateController::set_state(GlobalNamespace::MultiplayerLobbyState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::set_state");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_state", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.get_cannotStartGameReason
GlobalNamespace::CannotStartGameReason GlobalNamespace::ILobbyGameStateController::get_cannotStartGameReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::get_cannotStartGameReason");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cannotStartGameReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::CannotStartGameReason, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.get_startedBeatmapId
GlobalNamespace::BeatmapIdentifierNetSerializable* GlobalNamespace::ILobbyGameStateController::get_startedBeatmapId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::get_startedBeatmapId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startedBeatmapId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapIdentifierNetSerializable*, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.get_countdownStarted
bool GlobalNamespace::ILobbyGameStateController::get_countdownStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::get_countdownStarted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_countdownStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.get_countdownEndTime
float GlobalNamespace::ILobbyGameStateController::get_countdownEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::get_countdownEndTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_countdownEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.get_levelStartInitiated
bool GlobalNamespace::ILobbyGameStateController::get_levelStartInitiated() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::get_levelStartInitiated");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelStartInitiated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.get_startTime
float GlobalNamespace::ILobbyGameStateController::get_startTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::get_startTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.get_predictedCountdownEndTime
float GlobalNamespace::ILobbyGameStateController::get_predictedCountdownEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::get_predictedCountdownEndTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_predictedCountdownEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.get_isDisconnected
bool GlobalNamespace::ILobbyGameStateController::get_isDisconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::get_isDisconnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.get_disconnectedReason
GlobalNamespace::DisconnectedReason GlobalNamespace::ILobbyGameStateController::get_disconnectedReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::get_disconnectedReason");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disconnectedReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::DisconnectedReason, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.add_gameStartedEvent
void GlobalNamespace::ILobbyGameStateController::add_gameStartedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::add_gameStartedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_gameStartedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_gameStartedEvent
void GlobalNamespace::ILobbyGameStateController::remove_gameStartedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::remove_gameStartedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_gameStartedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_gameStartCancelledEvent
void GlobalNamespace::ILobbyGameStateController::add_gameStartCancelledEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::add_gameStartCancelledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_gameStartCancelledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_gameStartCancelledEvent
void GlobalNamespace::ILobbyGameStateController::remove_gameStartCancelledEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::remove_gameStartCancelledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_gameStartCancelledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_countdownStartedEvent
void GlobalNamespace::ILobbyGameStateController::add_countdownStartedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::add_countdownStartedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_countdownStartedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_countdownStartedEvent
void GlobalNamespace::ILobbyGameStateController::remove_countdownStartedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::remove_countdownStartedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_countdownStartedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_countdownCancelledEvent
void GlobalNamespace::ILobbyGameStateController::add_countdownCancelledEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::add_countdownCancelledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_countdownCancelledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_countdownCancelledEvent
void GlobalNamespace::ILobbyGameStateController::remove_countdownCancelledEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::remove_countdownCancelledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_countdownCancelledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_songStillDownloadingEvent
void GlobalNamespace::ILobbyGameStateController::add_songStillDownloadingEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::add_songStillDownloadingEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_songStillDownloadingEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_songStillDownloadingEvent
void GlobalNamespace::ILobbyGameStateController::remove_songStillDownloadingEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::remove_songStillDownloadingEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_songStillDownloadingEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_startTimeChangedEvent
void GlobalNamespace::ILobbyGameStateController::add_startTimeChangedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::add_startTimeChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_startTimeChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_startTimeChangedEvent
void GlobalNamespace::ILobbyGameStateController::remove_startTimeChangedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::remove_startTimeChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_startTimeChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_levelFinishedEvent
void GlobalNamespace::ILobbyGameStateController::add_levelFinishedEvent(System::Action_2<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::MultiplayerResultsData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::add_levelFinishedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_levelFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_levelFinishedEvent
void GlobalNamespace::ILobbyGameStateController::remove_levelFinishedEvent(System::Action_2<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::MultiplayerResultsData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::remove_levelFinishedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_levelFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_levelDidGetDisconnectedEvent
void GlobalNamespace::ILobbyGameStateController::add_levelDidGetDisconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::add_levelDidGetDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_levelDidGetDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_levelDidGetDisconnectedEvent
void GlobalNamespace::ILobbyGameStateController::remove_levelDidGetDisconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::remove_levelDidGetDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_levelDidGetDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_lobbyDisconnectedEvent
void GlobalNamespace::ILobbyGameStateController::add_lobbyDisconnectedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::add_lobbyDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_lobbyDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_lobbyDisconnectedEvent
void GlobalNamespace::ILobbyGameStateController::remove_lobbyDisconnectedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::remove_lobbyDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_lobbyDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_beforeSceneSwitchCallbackEvent
void GlobalNamespace::ILobbyGameStateController::add_beforeSceneSwitchCallbackEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::add_beforeSceneSwitchCallbackEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_beforeSceneSwitchCallbackEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_beforeSceneSwitchCallbackEvent
void GlobalNamespace::ILobbyGameStateController::remove_beforeSceneSwitchCallbackEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::remove_beforeSceneSwitchCallbackEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_beforeSceneSwitchCallbackEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_lobbyStateChangedEvent
void GlobalNamespace::ILobbyGameStateController::add_lobbyStateChangedEvent(System::Action_1<GlobalNamespace::MultiplayerLobbyState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::add_lobbyStateChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_lobbyStateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_lobbyStateChangedEvent
void GlobalNamespace::ILobbyGameStateController::remove_lobbyStateChangedEvent(System::Action_1<GlobalNamespace::MultiplayerLobbyState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::remove_lobbyStateChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_lobbyStateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_startButtonEnabledEvent
void GlobalNamespace::ILobbyGameStateController::add_startButtonEnabledEvent(System::Action_1<GlobalNamespace::CannotStartGameReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::add_startButtonEnabledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_startButtonEnabledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_startButtonEnabledEvent
void GlobalNamespace::ILobbyGameStateController::remove_startButtonEnabledEvent(System::Action_1<GlobalNamespace::CannotStartGameReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::remove_startButtonEnabledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_startButtonEnabledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.add_playerMissingEntitlementsChangedEvent
void GlobalNamespace::ILobbyGameStateController::add_playerMissingEntitlementsChangedEvent(System::Action_1<GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::add_playerMissingEntitlementsChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerMissingEntitlementsChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.remove_playerMissingEntitlementsChangedEvent
void GlobalNamespace::ILobbyGameStateController::remove_playerMissingEntitlementsChangedEvent(System::Action_1<GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::remove_playerMissingEntitlementsChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerMissingEntitlementsChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyGameStateController.Activate
void GlobalNamespace::ILobbyGameStateController::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::Activate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.Deactivate
void GlobalNamespace::ILobbyGameStateController::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::Deactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.StartListeningToGameStart
void GlobalNamespace::ILobbyGameStateController::StartListeningToGameStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::StartListeningToGameStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartListeningToGameStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.GetCurrentLevelIfGameStarted
void GlobalNamespace::ILobbyGameStateController::GetCurrentLevelIfGameStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::GetCurrentLevelIfGameStarted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentLevelIfGameStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.ClearDisconnectedState
void GlobalNamespace::ILobbyGameStateController::ClearDisconnectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::ClearDisconnectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearDisconnectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.GetGameStateAndConfigurationAsync
System::Threading::Tasks::Task* GlobalNamespace::ILobbyGameStateController::GetGameStateAndConfigurationAsync(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::GetGameStateAndConfigurationAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGameStateAndConfigurationAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: ILobbyGameStateController.PredictCountdownEndTime
void GlobalNamespace::ILobbyGameStateController::PredictCountdownEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::PredictCountdownEndTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PredictCountdownEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyGameStateController.IsCloseToStartGame
bool GlobalNamespace::ILobbyGameStateController::IsCloseToStartGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyGameStateController::IsCloseToStartGame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsCloseToStartGame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ILobbyPlayerData
#include "GlobalNamespace/ILobbyPlayerData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ILobbyPlayerData.get_isPartyOwner
bool GlobalNamespace::ILobbyPlayerData::get_isPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayerData::get_isPartyOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayerData.set_isPartyOwner
void GlobalNamespace::ILobbyPlayerData::set_isPartyOwner(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayerData::set_isPartyOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyPlayerData.get_isActive
bool GlobalNamespace::ILobbyPlayerData::get_isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayerData::get_isActive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayerData.set_isActive
void GlobalNamespace::ILobbyPlayerData::set_isActive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayerData::set_isActive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyPlayerData.get_isReady
bool GlobalNamespace::ILobbyPlayerData::get_isReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayerData::get_isReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayerData.set_isReady
void GlobalNamespace::ILobbyPlayerData::set_isReady(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayerData::set_isReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyPlayerData.get_isInLobby
bool GlobalNamespace::ILobbyPlayerData::get_isInLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayerData::get_isInLobby");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayerData.set_isInLobby
void GlobalNamespace::ILobbyPlayerData::set_isInLobby(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayerData::set_isInLobby");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ILobbyPlayersDataModel
#include "GlobalNamespace/ILobbyPlayersDataModel.hpp"
// Including type: System.Collections.Generic.IReadOnlyDictionary`2
#include "System/Collections/Generic/IReadOnlyDictionary_2.hpp"
// Including type: ILobbyPlayerData
#include "GlobalNamespace/ILobbyPlayerData.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ILobbyPlayersDataModel.get_localUserId
::Il2CppString* GlobalNamespace::ILobbyPlayersDataModel::get_localUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::get_localUserId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayersDataModel.get_partyOwnerId
::Il2CppString* GlobalNamespace::ILobbyPlayersDataModel::get_partyOwnerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::get_partyOwnerId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_partyOwnerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayersDataModel.get_playersData
System::Collections::Generic::IReadOnlyDictionary_2<::Il2CppString*, GlobalNamespace::ILobbyPlayerData*>* GlobalNamespace::ILobbyPlayersDataModel::get_playersData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::get_playersData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playersData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IReadOnlyDictionary_2<::Il2CppString*, GlobalNamespace::ILobbyPlayerData*>*, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayersDataModel.add_didChangeEvent
void GlobalNamespace::ILobbyPlayersDataModel::add_didChangeEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::add_didChangeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyPlayersDataModel.remove_didChangeEvent
void GlobalNamespace::ILobbyPlayersDataModel::remove_didChangeEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::remove_didChangeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyPlayersDataModel.GetLobbyPlayerDataModel
GlobalNamespace::ILobbyPlayerData* GlobalNamespace::ILobbyPlayersDataModel::GetLobbyPlayerDataModel(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::GetLobbyPlayerDataModel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLobbyPlayerDataModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ILobbyPlayerData*, false>(this, ___internal__method, userId);
}
// Autogenerated method: ILobbyPlayersDataModel.GetPlayerBeatmapLevel
GlobalNamespace::IPreviewBeatmapLevel* GlobalNamespace::ILobbyPlayersDataModel::GetPlayerBeatmapLevel(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::GetPlayerBeatmapLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerBeatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IPreviewBeatmapLevel*, false>(this, ___internal__method, userId);
}
// Autogenerated method: ILobbyPlayersDataModel.GetPlayerBeatmapDifficulty
GlobalNamespace::BeatmapDifficulty GlobalNamespace::ILobbyPlayersDataModel::GetPlayerBeatmapDifficulty(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::GetPlayerBeatmapDifficulty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerBeatmapDifficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapDifficulty, false>(this, ___internal__method, userId);
}
// Autogenerated method: ILobbyPlayersDataModel.GetPlayerBeatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::ILobbyPlayersDataModel::GetPlayerBeatmapCharacteristic(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::GetPlayerBeatmapCharacteristic");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerBeatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method, userId);
}
// Autogenerated method: ILobbyPlayersDataModel.GetPlayerGameplayModifiers
GlobalNamespace::GameplayModifiers* GlobalNamespace::ILobbyPlayersDataModel::GetPlayerGameplayModifiers(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::GetPlayerGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayModifiers*, false>(this, ___internal__method, userId);
}
// Autogenerated method: ILobbyPlayersDataModel.GetPlayerIsActive
bool GlobalNamespace::ILobbyPlayersDataModel::GetPlayerIsActive(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::GetPlayerIsActive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerIsActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, userId);
}
// Autogenerated method: ILobbyPlayersDataModel.GetPlayerIsReady
bool GlobalNamespace::ILobbyPlayersDataModel::GetPlayerIsReady(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::GetPlayerIsReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerIsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, userId);
}
// Autogenerated method: ILobbyPlayersDataModel.GetPlayerIsInLobby
bool GlobalNamespace::ILobbyPlayersDataModel::GetPlayerIsInLobby(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::GetPlayerIsInLobby");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerIsInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, userId);
}
// Autogenerated method: ILobbyPlayersDataModel.GetPlayerIsPartyOwner
bool GlobalNamespace::ILobbyPlayersDataModel::GetPlayerIsPartyOwner(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::GetPlayerIsPartyOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerIsPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, userId);
}
// Autogenerated method: ILobbyPlayersDataModel.SetLocalPlayerBeatmapLevel
void GlobalNamespace::ILobbyPlayersDataModel::SetLocalPlayerBeatmapLevel(::Il2CppString* levelId, GlobalNamespace::BeatmapDifficulty beatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO* characteristic) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::SetLocalPlayerBeatmapLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerBeatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(beatmapDifficulty), ::il2cpp_utils::ExtractType(characteristic)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelId, beatmapDifficulty, characteristic);
}
// Autogenerated method: ILobbyPlayersDataModel.ClearLocalPlayerBeatmapLevel
void GlobalNamespace::ILobbyPlayersDataModel::ClearLocalPlayerBeatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::ClearLocalPlayerBeatmapLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearLocalPlayerBeatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayersDataModel.SetLocalPlayerGameplayModifiers
void GlobalNamespace::ILobbyPlayersDataModel::SetLocalPlayerGameplayModifiers(GlobalNamespace::GameplayModifiers* modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::SetLocalPlayerGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(modifiers)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, modifiers);
}
// Autogenerated method: ILobbyPlayersDataModel.ClearLocalPlayerGameplayModifiers
void GlobalNamespace::ILobbyPlayersDataModel::ClearLocalPlayerGameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::ClearLocalPlayerGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearLocalPlayerGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayersDataModel.SetLocalPlayerIsActive
void GlobalNamespace::ILobbyPlayersDataModel::SetLocalPlayerIsActive(bool isActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::SetLocalPlayerIsActive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerIsActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isActive)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isActive);
}
// Autogenerated method: ILobbyPlayersDataModel.SetLocalPlayerIsReady
void GlobalNamespace::ILobbyPlayersDataModel::SetLocalPlayerIsReady(bool isReady) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::SetLocalPlayerIsReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerIsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isReady)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isReady);
}
// Autogenerated method: ILobbyPlayersDataModel.SetLocalPlayerIsInLobby
void GlobalNamespace::ILobbyPlayersDataModel::SetLocalPlayerIsInLobby(bool isInLobby) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::SetLocalPlayerIsInLobby");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerIsInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isInLobby)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isInLobby);
}
// Autogenerated method: ILobbyPlayersDataModel.RequestKickPlayer
void GlobalNamespace::ILobbyPlayersDataModel::RequestKickPlayer(::Il2CppString* kickedUserId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::RequestKickPlayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestKickPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(kickedUserId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, kickedUserId);
}
// Autogenerated method: ILobbyPlayersDataModel.ClearData
void GlobalNamespace::ILobbyPlayersDataModel::ClearData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::ClearData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayersDataModel.ClearRecommendations
void GlobalNamespace::ILobbyPlayersDataModel::ClearRecommendations() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::ClearRecommendations");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearRecommendations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayersDataModel.Activate
void GlobalNamespace::ILobbyPlayersDataModel::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::Activate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyPlayersDataModel.Deactivate
void GlobalNamespace::ILobbyPlayersDataModel::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyPlayersDataModel::Deactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ILobbyStateDataModel
#include "GlobalNamespace/ILobbyStateDataModel.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: GameplayServerMode
#include "GlobalNamespace/GameplayServerMode.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ILobbyStateDataModel.get_isConnected
bool GlobalNamespace::ILobbyStateDataModel::get_isConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyStateDataModel::get_isConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyStateDataModel.get_localPlayer
GlobalNamespace::IConnectedPlayer* GlobalNamespace::ILobbyStateDataModel::get_localPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyStateDataModel::get_localPlayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyStateDataModel.get_connectedPlayers
System::Collections::Generic::List_1<GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::ILobbyStateDataModel::get_connectedPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyStateDataModel::get_connectedPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<GlobalNamespace::IConnectedPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyStateDataModel.get_rawConnectedPlayers
System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::ILobbyStateDataModel::get_rawConnectedPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyStateDataModel::get_rawConnectedPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rawConnectedPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::IConnectedPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyStateDataModel.get_gameServerMode
GlobalNamespace::GameplayServerMode GlobalNamespace::ILobbyStateDataModel::get_gameServerMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyStateDataModel::get_gameServerMode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameServerMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayServerMode, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyStateDataModel.get_maxPartySize
int GlobalNamespace::ILobbyStateDataModel::get_maxPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyStateDataModel::get_maxPartySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyStateDataModel.add_playerConnectedEvent
void GlobalNamespace::ILobbyStateDataModel::add_playerConnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyStateDataModel::add_playerConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyStateDataModel.remove_playerConnectedEvent
void GlobalNamespace::ILobbyStateDataModel::remove_playerConnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyStateDataModel::remove_playerConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyStateDataModel.add_playerDisconnectedEvent
void GlobalNamespace::ILobbyStateDataModel::add_playerDisconnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyStateDataModel::add_playerDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyStateDataModel.remove_playerDisconnectedEvent
void GlobalNamespace::ILobbyStateDataModel::remove_playerDisconnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyStateDataModel::remove_playerDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ILobbyStateDataModel.Activate
void GlobalNamespace::ILobbyStateDataModel::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyStateDataModel::Activate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyStateDataModel.Deactivate
void GlobalNamespace::ILobbyStateDataModel::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyStateDataModel::Deactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ILobbyStateDataModel.GetPlayerById
GlobalNamespace::IConnectedPlayer* GlobalNamespace::ILobbyStateDataModel::GetPlayerById(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ILobbyStateDataModel::GetPlayerById");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method, userId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelGameplaySetupData
#include "GlobalNamespace/LevelGameplaySetupData.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private GameplayModifiers _gameplayModifiers
GlobalNamespace::GameplayModifiers* GlobalNamespace::LevelGameplaySetupData::_get__gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelGameplaySetupData::_get__gameplayModifiers");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayModifiers*>(___internal__instance, "_gameplayModifiers"));
}
// Autogenerated instance field setter
// Set instance field: private GameplayModifiers _gameplayModifiers
void GlobalNamespace::LevelGameplaySetupData::_set__gameplayModifiers(GlobalNamespace::GameplayModifiers* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelGameplaySetupData::_set__gameplayModifiers");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_gameplayModifiers", value));
}
// Autogenerated instance field getter
// Get instance field: private IPreviewBeatmapLevel <beatmapLevel>k__BackingField
GlobalNamespace::IPreviewBeatmapLevel* GlobalNamespace::LevelGameplaySetupData::_get_$beatmapLevel$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelGameplaySetupData::_get_$beatmapLevel$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::IPreviewBeatmapLevel*>(___internal__instance, "<beatmapLevel>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private IPreviewBeatmapLevel <beatmapLevel>k__BackingField
void GlobalNamespace::LevelGameplaySetupData::_set_$beatmapLevel$k__BackingField(GlobalNamespace::IPreviewBeatmapLevel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelGameplaySetupData::_set_$beatmapLevel$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<beatmapLevel>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCharacteristicSO <beatmapCharacteristic>k__BackingField
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::LevelGameplaySetupData::_get_$beatmapCharacteristic$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelGameplaySetupData::_get_$beatmapCharacteristic$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapCharacteristicSO*>(___internal__instance, "<beatmapCharacteristic>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private BeatmapCharacteristicSO <beatmapCharacteristic>k__BackingField
void GlobalNamespace::LevelGameplaySetupData::_set_$beatmapCharacteristic$k__BackingField(GlobalNamespace::BeatmapCharacteristicSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelGameplaySetupData::_set_$beatmapCharacteristic$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<beatmapCharacteristic>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDifficulty <beatmapDifficulty>k__BackingField
GlobalNamespace::BeatmapDifficulty GlobalNamespace::LevelGameplaySetupData::_get_$beatmapDifficulty$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelGameplaySetupData::_get_$beatmapDifficulty$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapDifficulty>(___internal__instance, "<beatmapDifficulty>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private BeatmapDifficulty <beatmapDifficulty>k__BackingField
void GlobalNamespace::LevelGameplaySetupData::_set_$beatmapDifficulty$k__BackingField(GlobalNamespace::BeatmapDifficulty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelGameplaySetupData::_set_$beatmapDifficulty$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<beatmapDifficulty>k__BackingField", value));
}
// Autogenerated method: LevelGameplaySetupData.get_beatmapLevel
GlobalNamespace::IPreviewBeatmapLevel* GlobalNamespace::LevelGameplaySetupData::get_beatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelGameplaySetupData::get_beatmapLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IPreviewBeatmapLevel*, false>(this, ___internal__method);
}
// Autogenerated method: LevelGameplaySetupData.set_beatmapLevel
void GlobalNamespace::LevelGameplaySetupData::set_beatmapLevel(GlobalNamespace::IPreviewBeatmapLevel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelGameplaySetupData::set_beatmapLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_beatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelGameplaySetupData.get_beatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::LevelGameplaySetupData::get_beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelGameplaySetupData::get_beatmapCharacteristic");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: LevelGameplaySetupData.set_beatmapCharacteristic
void GlobalNamespace::LevelGameplaySetupData::set_beatmapCharacteristic(GlobalNamespace::BeatmapCharacteristicSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelGameplaySetupData::set_beatmapCharacteristic");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_beatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelGameplaySetupData.get_beatmapDifficulty
GlobalNamespace::BeatmapDifficulty GlobalNamespace::LevelGameplaySetupData::get_beatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelGameplaySetupData::get_beatmapDifficulty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapDifficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapDifficulty, false>(this, ___internal__method);
}
// Autogenerated method: LevelGameplaySetupData.set_beatmapDifficulty
void GlobalNamespace::LevelGameplaySetupData::set_beatmapDifficulty(GlobalNamespace::BeatmapDifficulty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelGameplaySetupData::set_beatmapDifficulty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_beatmapDifficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelGameplaySetupData.get_gameplayModifiers
GlobalNamespace::GameplayModifiers* GlobalNamespace::LevelGameplaySetupData::get_gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelGameplaySetupData::get_gameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayModifiers*, false>(this, ___internal__method);
}
// Autogenerated method: LevelGameplaySetupData.set_gameplayModifiers
void GlobalNamespace::LevelGameplaySetupData::set_gameplayModifiers(GlobalNamespace::GameplayModifiers* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelGameplaySetupData::set_gameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LobbyDataModelsManager
#include "GlobalNamespace/LobbyDataModelsManager.hpp"
// Including type: ILobbyStateDataModel
#include "GlobalNamespace/ILobbyStateDataModel.hpp"
// Including type: ILobbyPlayersDataModel
#include "GlobalNamespace/ILobbyPlayersDataModel.hpp"
// Including type: ILobbyGameStateController
#include "GlobalNamespace/ILobbyGameStateController.hpp"
// Including type: INodePoseSyncStateManager
#include "GlobalNamespace/INodePoseSyncStateManager.hpp"
// Including type: LobbyPlayerPermissionsModel
#include "GlobalNamespace/LobbyPlayerPermissionsModel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly ILobbyStateDataModel _lobbyStateDataModel
GlobalNamespace::ILobbyStateDataModel* GlobalNamespace::LobbyDataModelsManager::_get__lobbyStateDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyDataModelsManager::_get__lobbyStateDataModel");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::ILobbyStateDataModel*>(___internal__instance, "_lobbyStateDataModel"));
}
// Autogenerated instance field setter
// Set instance field: private readonly ILobbyStateDataModel _lobbyStateDataModel
void GlobalNamespace::LobbyDataModelsManager::_set__lobbyStateDataModel(GlobalNamespace::ILobbyStateDataModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyDataModelsManager::_set__lobbyStateDataModel");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_lobbyStateDataModel", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly ILobbyPlayersDataModel _lobbyPlayersDataModel
GlobalNamespace::ILobbyPlayersDataModel* GlobalNamespace::LobbyDataModelsManager::_get__lobbyPlayersDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyDataModelsManager::_get__lobbyPlayersDataModel");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::ILobbyPlayersDataModel*>(___internal__instance, "_lobbyPlayersDataModel"));
}
// Autogenerated instance field setter
// Set instance field: private readonly ILobbyPlayersDataModel _lobbyPlayersDataModel
void GlobalNamespace::LobbyDataModelsManager::_set__lobbyPlayersDataModel(GlobalNamespace::ILobbyPlayersDataModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyDataModelsManager::_set__lobbyPlayersDataModel");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_lobbyPlayersDataModel", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly ILobbyGameStateController _lobbyGameStateController
GlobalNamespace::ILobbyGameStateController* GlobalNamespace::LobbyDataModelsManager::_get__lobbyGameStateController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyDataModelsManager::_get__lobbyGameStateController");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::ILobbyGameStateController*>(___internal__instance, "_lobbyGameStateController"));
}
// Autogenerated instance field setter
// Set instance field: private readonly ILobbyGameStateController _lobbyGameStateController
void GlobalNamespace::LobbyDataModelsManager::_set__lobbyGameStateController(GlobalNamespace::ILobbyGameStateController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyDataModelsManager::_set__lobbyGameStateController");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_lobbyGameStateController", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly INodePoseSyncStateManager _nodePoseSyncStateManager
GlobalNamespace::INodePoseSyncStateManager* GlobalNamespace::LobbyDataModelsManager::_get__nodePoseSyncStateManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyDataModelsManager::_get__nodePoseSyncStateManager");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::INodePoseSyncStateManager*>(___internal__instance, "_nodePoseSyncStateManager"));
}
// Autogenerated instance field setter
// Set instance field: private readonly INodePoseSyncStateManager _nodePoseSyncStateManager
void GlobalNamespace::LobbyDataModelsManager::_set__nodePoseSyncStateManager(GlobalNamespace::INodePoseSyncStateManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyDataModelsManager::_set__nodePoseSyncStateManager");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_nodePoseSyncStateManager", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly LobbyPlayerPermissionsModel _lobbyPlayerPermissionsModel
GlobalNamespace::LobbyPlayerPermissionsModel* GlobalNamespace::LobbyDataModelsManager::_get__lobbyPlayerPermissionsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyDataModelsManager::_get__lobbyPlayerPermissionsModel");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LobbyPlayerPermissionsModel*>(___internal__instance, "_lobbyPlayerPermissionsModel"));
}
// Autogenerated instance field setter
// Set instance field: private readonly LobbyPlayerPermissionsModel _lobbyPlayerPermissionsModel
void GlobalNamespace::LobbyDataModelsManager::_set__lobbyPlayerPermissionsModel(GlobalNamespace::LobbyPlayerPermissionsModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyDataModelsManager::_set__lobbyPlayerPermissionsModel");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_lobbyPlayerPermissionsModel", value));
}
// Autogenerated method: LobbyDataModelsManager.Activate
void GlobalNamespace::LobbyDataModelsManager::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyDataModelsManager::Activate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyDataModelsManager.Deactivate
void GlobalNamespace::LobbyDataModelsManager::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyDataModelsManager::Deactivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LobbyGameStateController
#include "GlobalNamespace/LobbyGameStateController.hpp"
// Including type: LobbyGameStateController/<>c__DisplayClass94_0
#include "GlobalNamespace/LobbyGameStateController_--c__DisplayClass94_0.hpp"
// Including type: LobbyGameStateController/<>c
#include "GlobalNamespace/LobbyGameStateController_--c.hpp"
// Including type: ILobbyPlayersDataModel
#include "GlobalNamespace/ILobbyPlayersDataModel.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: IMenuRpcManager
#include "GlobalNamespace/IMenuRpcManager.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: MultiplayerLevelLoader
#include "GlobalNamespace/MultiplayerLevelLoader.hpp"
// Including type: MenuTransitionsHelper
#include "GlobalNamespace/MenuTransitionsHelper.hpp"
// Including type: LobbyGameStateModel
#include "GlobalNamespace/LobbyGameStateModel.hpp"
// Including type: LobbyPlayerPermissionsModel
#include "GlobalNamespace/LobbyPlayerPermissionsModel.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: MultiplayerLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MultiplayerLevelScenesTransitionSetupDataSO.hpp"
// Including type: MultiplayerResultsData
#include "GlobalNamespace/MultiplayerResultsData.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PlayersMissingEntitlementsNetSerializable
#include "GlobalNamespace/PlayersMissingEntitlementsNetSerializable.hpp"
// Including type: BeatmapIdentifierNetSerializable
#include "GlobalNamespace/BeatmapIdentifierNetSerializable.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Single kShortTimerSeconds
float GlobalNamespace::LobbyGameStateController::_get_kShortTimerSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_get_kShortTimerSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "LobbyGameStateController", "kShortTimerSeconds"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kShortTimerSeconds
void GlobalNamespace::LobbyGameStateController::_set_kShortTimerSeconds(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_set_kShortTimerSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LobbyGameStateController", "kShortTimerSeconds", value));
}
// Autogenerated static field getter
// Get static field: static public System.Single kLongTimerSeconds
float GlobalNamespace::LobbyGameStateController::_get_kLongTimerSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_get_kLongTimerSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "LobbyGameStateController", "kLongTimerSeconds"));
}
// Autogenerated static field setter
// Set static field: static public System.Single kLongTimerSeconds
void GlobalNamespace::LobbyGameStateController::_set_kLongTimerSeconds(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_set_kLongTimerSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LobbyGameStateController", "kLongTimerSeconds", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly ILobbyPlayersDataModel _lobbyPlayersDataModel
GlobalNamespace::ILobbyPlayersDataModel* GlobalNamespace::LobbyGameStateController::_get__lobbyPlayersDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_get__lobbyPlayersDataModel");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::ILobbyPlayersDataModel*>(___internal__instance, "_lobbyPlayersDataModel"));
}
// Autogenerated instance field setter
// Set instance field: private readonly ILobbyPlayersDataModel _lobbyPlayersDataModel
void GlobalNamespace::LobbyGameStateController::_set__lobbyPlayersDataModel(GlobalNamespace::ILobbyPlayersDataModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_set__lobbyPlayersDataModel");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_lobbyPlayersDataModel", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerDataModel _playerDataModel
GlobalNamespace::PlayerDataModel* GlobalNamespace::LobbyGameStateController::_get__playerDataModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_get__playerDataModel");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PlayerDataModel*>(___internal__instance, "_playerDataModel"));
}
// Autogenerated instance field setter
// Set instance field: private readonly PlayerDataModel _playerDataModel
void GlobalNamespace::LobbyGameStateController::_set__playerDataModel(GlobalNamespace::PlayerDataModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_set__playerDataModel");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_playerDataModel", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly IMenuRpcManager _menuRpcManager
GlobalNamespace::IMenuRpcManager* GlobalNamespace::LobbyGameStateController::_get__menuRpcManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_get__menuRpcManager");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::IMenuRpcManager*>(___internal__instance, "_menuRpcManager"));
}
// Autogenerated instance field setter
// Set instance field: private readonly IMenuRpcManager _menuRpcManager
void GlobalNamespace::LobbyGameStateController::_set__menuRpcManager(GlobalNamespace::IMenuRpcManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_set__menuRpcManager");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_menuRpcManager", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
GlobalNamespace::IMultiplayerSessionManager* GlobalNamespace::LobbyGameStateController::_get__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_get__multiplayerSessionManager");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::IMultiplayerSessionManager*>(___internal__instance, "_multiplayerSessionManager"));
}
// Autogenerated instance field setter
// Set instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
void GlobalNamespace::LobbyGameStateController::_set__multiplayerSessionManager(GlobalNamespace::IMultiplayerSessionManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_set__multiplayerSessionManager");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_multiplayerSessionManager", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerLevelLoader _multiplayerLevelLoader
GlobalNamespace::MultiplayerLevelLoader* GlobalNamespace::LobbyGameStateController::_get__multiplayerLevelLoader() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_get__multiplayerLevelLoader");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLevelLoader*>(___internal__instance, "_multiplayerLevelLoader"));
}
// Autogenerated instance field setter
// Set instance field: private readonly MultiplayerLevelLoader _multiplayerLevelLoader
void GlobalNamespace::LobbyGameStateController::_set__multiplayerLevelLoader(GlobalNamespace::MultiplayerLevelLoader* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_set__multiplayerLevelLoader");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_multiplayerLevelLoader", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly MenuTransitionsHelper _menuTransitionsHelper
GlobalNamespace::MenuTransitionsHelper* GlobalNamespace::LobbyGameStateController::_get__menuTransitionsHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_get__menuTransitionsHelper");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MenuTransitionsHelper*>(___internal__instance, "_menuTransitionsHelper"));
}
// Autogenerated instance field setter
// Set instance field: private readonly MenuTransitionsHelper _menuTransitionsHelper
void GlobalNamespace::LobbyGameStateController::_set__menuTransitionsHelper(GlobalNamespace::MenuTransitionsHelper* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_set__menuTransitionsHelper");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_menuTransitionsHelper", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly LobbyGameStateModel _lobbyGameStateModel
GlobalNamespace::LobbyGameStateModel* GlobalNamespace::LobbyGameStateController::_get__lobbyGameStateModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_get__lobbyGameStateModel");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LobbyGameStateModel*>(___internal__instance, "_lobbyGameStateModel"));
}
// Autogenerated instance field setter
// Set instance field: private readonly LobbyGameStateModel _lobbyGameStateModel
void GlobalNamespace::LobbyGameStateController::_set__lobbyGameStateModel(GlobalNamespace::LobbyGameStateModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_set__lobbyGameStateModel");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_lobbyGameStateModel", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly LobbyPlayerPermissionsModel _lobbyPlayerPermissionsModel
GlobalNamespace::LobbyPlayerPermissionsModel* GlobalNamespace::LobbyGameStateController::_get__lobbyPlayerPermissionsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_get__lobbyPlayerPermissionsModel");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LobbyPlayerPermissionsModel*>(___internal__instance, "_lobbyPlayerPermissionsModel"));
}
// Autogenerated instance field setter
// Set instance field: private readonly LobbyPlayerPermissionsModel _lobbyPlayerPermissionsModel
void GlobalNamespace::LobbyGameStateController::_set__lobbyPlayerPermissionsModel(GlobalNamespace::LobbyPlayerPermissionsModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_set__lobbyPlayerPermissionsModel");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_lobbyPlayerPermissionsModel", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action gameStartedEvent
System::Action* GlobalNamespace::LobbyGameStateController::_get_gameStartedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_get_gameStartedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>(___internal__instance, "gameStartedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action gameStartedEvent
void GlobalNamespace::LobbyGameStateController::_set_gameStartedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_set_gameStartedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "gameStartedEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action gameStartCancelledEvent
System::Action* GlobalNamespace::LobbyGameStateController::_get_gameStartCancelledEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_get_gameStartCancelledEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>(___internal__instance, "gameStartCancelledEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action gameStartCancelledEvent
void GlobalNamespace::LobbyGameStateController::_set_gameStartCancelledEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_set_gameStartCancelledEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "gameStartCancelledEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action countdownStartedEvent
System::Action* GlobalNamespace::LobbyGameStateController::_get_countdownStartedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_get_countdownStartedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>(___internal__instance, "countdownStartedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action countdownStartedEvent
void GlobalNamespace::LobbyGameStateController::_set_countdownStartedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_set_countdownStartedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "countdownStartedEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action countdownCancelledEvent
System::Action* GlobalNamespace::LobbyGameStateController::_get_countdownCancelledEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_get_countdownCancelledEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>(___internal__instance, "countdownCancelledEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action countdownCancelledEvent
void GlobalNamespace::LobbyGameStateController::_set_countdownCancelledEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_set_countdownCancelledEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "countdownCancelledEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action songStillDownloadingEvent
System::Action* GlobalNamespace::LobbyGameStateController::_get_songStillDownloadingEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_get_songStillDownloadingEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>(___internal__instance, "songStillDownloadingEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action songStillDownloadingEvent
void GlobalNamespace::LobbyGameStateController::_set_songStillDownloadingEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_set_songStillDownloadingEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "songStillDownloadingEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action startTimeChangedEvent
System::Action* GlobalNamespace::LobbyGameStateController::_get_startTimeChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_get_startTimeChangedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>(___internal__instance, "startTimeChangedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action startTimeChangedEvent
void GlobalNamespace::LobbyGameStateController::_set_startTimeChangedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_set_startTimeChangedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "startTimeChangedEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<MultiplayerLevelScenesTransitionSetupDataSO,MultiplayerResultsData> levelFinishedEvent
System::Action_2<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::MultiplayerResultsData*>* GlobalNamespace::LobbyGameStateController::_get_levelFinishedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_get_levelFinishedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Action_2<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::MultiplayerResultsData*>*>(___internal__instance, "levelFinishedEvent")));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`2<MultiplayerLevelScenesTransitionSetupDataSO,MultiplayerResultsData> levelFinishedEvent
void GlobalNamespace::LobbyGameStateController::_set_levelFinishedEvent(System::Action_2<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::MultiplayerResultsData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_set_levelFinishedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "levelFinishedEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<DisconnectedReason> levelDidGetDisconnectedEvent
System::Action_1<GlobalNamespace::DisconnectedReason>* GlobalNamespace::LobbyGameStateController::_get_levelDidGetDisconnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_get_levelDidGetDisconnectedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<GlobalNamespace::DisconnectedReason>*>(___internal__instance, "levelDidGetDisconnectedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<DisconnectedReason> levelDidGetDisconnectedEvent
void GlobalNamespace::LobbyGameStateController::_set_levelDidGetDisconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_set_levelDidGetDisconnectedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "levelDidGetDisconnectedEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action lobbyDisconnectedEvent
System::Action* GlobalNamespace::LobbyGameStateController::_get_lobbyDisconnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_get_lobbyDisconnectedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>(___internal__instance, "lobbyDisconnectedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action lobbyDisconnectedEvent
void GlobalNamespace::LobbyGameStateController::_set_lobbyDisconnectedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_set_lobbyDisconnectedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "lobbyDisconnectedEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action beforeSceneSwitchCallbackEvent
System::Action* GlobalNamespace::LobbyGameStateController::_get_beforeSceneSwitchCallbackEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_get_beforeSceneSwitchCallbackEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>(___internal__instance, "beforeSceneSwitchCallbackEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action beforeSceneSwitchCallbackEvent
void GlobalNamespace::LobbyGameStateController::_set_beforeSceneSwitchCallbackEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_set_beforeSceneSwitchCallbackEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "beforeSceneSwitchCallbackEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<MultiplayerLobbyState> lobbyStateChangedEvent
System::Action_1<GlobalNamespace::MultiplayerLobbyState>* GlobalNamespace::LobbyGameStateController::_get_lobbyStateChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_get_lobbyStateChangedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<GlobalNamespace::MultiplayerLobbyState>*>(___internal__instance, "lobbyStateChangedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<MultiplayerLobbyState> lobbyStateChangedEvent
void GlobalNamespace::LobbyGameStateController::_set_lobbyStateChangedEvent(System::Action_1<GlobalNamespace::MultiplayerLobbyState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_set_lobbyStateChangedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "lobbyStateChangedEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<CannotStartGameReason> startButtonEnabledEvent
System::Action_1<GlobalNamespace::CannotStartGameReason>* GlobalNamespace::LobbyGameStateController::_get_startButtonEnabledEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_get_startButtonEnabledEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<GlobalNamespace::CannotStartGameReason>*>(___internal__instance, "startButtonEnabledEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<CannotStartGameReason> startButtonEnabledEvent
void GlobalNamespace::LobbyGameStateController::_set_startButtonEnabledEvent(System::Action_1<GlobalNamespace::CannotStartGameReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_set_startButtonEnabledEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "startButtonEnabledEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<PlayersMissingEntitlementsNetSerializable> playerMissingEntitlementsChangedEvent
System::Action_1<GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>* GlobalNamespace::LobbyGameStateController::_get_playerMissingEntitlementsChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_get_playerMissingEntitlementsChangedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>*>(___internal__instance, "playerMissingEntitlementsChangedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<PlayersMissingEntitlementsNetSerializable> playerMissingEntitlementsChangedEvent
void GlobalNamespace::LobbyGameStateController::_set_playerMissingEntitlementsChangedEvent(System::Action_1<GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_set_playerMissingEntitlementsChangedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "playerMissingEntitlementsChangedEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <levelStartInitiated>k__BackingField
bool GlobalNamespace::LobbyGameStateController::_get_$levelStartInitiated$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_get_$levelStartInitiated$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(___internal__instance, "<levelStartInitiated>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <levelStartInitiated>k__BackingField
void GlobalNamespace::LobbyGameStateController::_set_$levelStartInitiated$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_set_$levelStartInitiated$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<levelStartInitiated>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private BeatmapIdentifierNetSerializable <startedBeatmapId>k__BackingField
GlobalNamespace::BeatmapIdentifierNetSerializable* GlobalNamespace::LobbyGameStateController::_get_$startedBeatmapId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_get_$startedBeatmapId$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapIdentifierNetSerializable*>(___internal__instance, "<startedBeatmapId>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private BeatmapIdentifierNetSerializable <startedBeatmapId>k__BackingField
void GlobalNamespace::LobbyGameStateController::_set_$startedBeatmapId$k__BackingField(GlobalNamespace::BeatmapIdentifierNetSerializable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_set_$startedBeatmapId$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<startedBeatmapId>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <countdownStarted>k__BackingField
bool GlobalNamespace::LobbyGameStateController::_get_$countdownStarted$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_get_$countdownStarted$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(___internal__instance, "<countdownStarted>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <countdownStarted>k__BackingField
void GlobalNamespace::LobbyGameStateController::_set_$countdownStarted$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_set_$countdownStarted$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<countdownStarted>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single <countdownEndTime>k__BackingField
float GlobalNamespace::LobbyGameStateController::_get_$countdownEndTime$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_get_$countdownEndTime$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<float>(___internal__instance, "<countdownEndTime>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Single <countdownEndTime>k__BackingField
void GlobalNamespace::LobbyGameStateController::_set_$countdownEndTime$k__BackingField(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_set_$countdownEndTime$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<countdownEndTime>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isDisconnected>k__BackingField
bool GlobalNamespace::LobbyGameStateController::_get_$isDisconnected$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_get_$isDisconnected$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(___internal__instance, "<isDisconnected>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <isDisconnected>k__BackingField
void GlobalNamespace::LobbyGameStateController::_set_$isDisconnected$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_set_$isDisconnected$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<isDisconnected>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private DisconnectedReason <disconnectedReason>k__BackingField
GlobalNamespace::DisconnectedReason GlobalNamespace::LobbyGameStateController::_get_$disconnectedReason$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_get_$disconnectedReason$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::DisconnectedReason>(___internal__instance, "<disconnectedReason>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private DisconnectedReason <disconnectedReason>k__BackingField
void GlobalNamespace::LobbyGameStateController::_set_$disconnectedReason$k__BackingField(GlobalNamespace::DisconnectedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_set_$disconnectedReason$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<disconnectedReason>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single _predictedStartTime
float GlobalNamespace::LobbyGameStateController::_get__predictedStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_get__predictedStartTime");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "_predictedStartTime"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single _predictedStartTime
void GlobalNamespace::LobbyGameStateController::_set__predictedStartTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_set__predictedStartTime");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_predictedStartTime", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startTime
float GlobalNamespace::LobbyGameStateController::_get__startTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_get__startTime");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "_startTime"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single _startTime
void GlobalNamespace::LobbyGameStateController::_set__startTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_set__startTime");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_startTime", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _levelStartedOnTime
bool GlobalNamespace::LobbyGameStateController::_get__levelStartedOnTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_get__levelStartedOnTime");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_levelStartedOnTime"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _levelStartedOnTime
void GlobalNamespace::LobbyGameStateController::_set__levelStartedOnTime(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_set__levelStartedOnTime");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_levelStartedOnTime", value));
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerLobbyState _state
GlobalNamespace::MultiplayerLobbyState GlobalNamespace::LobbyGameStateController::_get__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_get__state");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLobbyState>(___internal__instance, "_state"));
}
// Autogenerated instance field setter
// Set instance field: private MultiplayerLobbyState _state
void GlobalNamespace::LobbyGameStateController::_set__state(GlobalNamespace::MultiplayerLobbyState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_set__state");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_state", value));
}
// Autogenerated instance field getter
// Get instance field: private CannotStartGameReason _cannotStartGameReason
GlobalNamespace::CannotStartGameReason GlobalNamespace::LobbyGameStateController::_get__cannotStartGameReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_get__cannotStartGameReason");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::CannotStartGameReason>(___internal__instance, "_cannotStartGameReason"));
}
// Autogenerated instance field setter
// Set instance field: private CannotStartGameReason _cannotStartGameReason
void GlobalNamespace::LobbyGameStateController::_set__cannotStartGameReason(GlobalNamespace::CannotStartGameReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::_set__cannotStartGameReason");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_cannotStartGameReason", value));
}
// Autogenerated method: LobbyGameStateController.get_predictedCountdownEndTime
float GlobalNamespace::LobbyGameStateController::get_predictedCountdownEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::get_predictedCountdownEndTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_predictedCountdownEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.get_startTime
float GlobalNamespace::LobbyGameStateController::get_startTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::get_startTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.set_startTime
void GlobalNamespace::LobbyGameStateController::set_startTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::set_startTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_startTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.get_levelStartInitiated
bool GlobalNamespace::LobbyGameStateController::get_levelStartInitiated() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::get_levelStartInitiated");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelStartInitiated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.set_levelStartInitiated
void GlobalNamespace::LobbyGameStateController::set_levelStartInitiated(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::set_levelStartInitiated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_levelStartInitiated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.get_startedBeatmapId
GlobalNamespace::BeatmapIdentifierNetSerializable* GlobalNamespace::LobbyGameStateController::get_startedBeatmapId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::get_startedBeatmapId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_startedBeatmapId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapIdentifierNetSerializable*, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.set_startedBeatmapId
void GlobalNamespace::LobbyGameStateController::set_startedBeatmapId(GlobalNamespace::BeatmapIdentifierNetSerializable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::set_startedBeatmapId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_startedBeatmapId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.get_countdownStarted
bool GlobalNamespace::LobbyGameStateController::get_countdownStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::get_countdownStarted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_countdownStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.set_countdownStarted
void GlobalNamespace::LobbyGameStateController::set_countdownStarted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::set_countdownStarted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_countdownStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.get_countdownEndTime
float GlobalNamespace::LobbyGameStateController::get_countdownEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::get_countdownEndTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_countdownEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.set_countdownEndTime
void GlobalNamespace::LobbyGameStateController::set_countdownEndTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::set_countdownEndTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_countdownEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.get_state
GlobalNamespace::MultiplayerLobbyState GlobalNamespace::LobbyGameStateController::get_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::get_state");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_state", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MultiplayerLobbyState, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.set_state
void GlobalNamespace::LobbyGameStateController::set_state(GlobalNamespace::MultiplayerLobbyState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::set_state");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_state", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.get_cannotStartGameReason
GlobalNamespace::CannotStartGameReason GlobalNamespace::LobbyGameStateController::get_cannotStartGameReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::get_cannotStartGameReason");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cannotStartGameReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::CannotStartGameReason, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.get_isDisconnected
bool GlobalNamespace::LobbyGameStateController::get_isDisconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::get_isDisconnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.set_isDisconnected
void GlobalNamespace::LobbyGameStateController::set_isDisconnected(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::set_isDisconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.get_disconnectedReason
GlobalNamespace::DisconnectedReason GlobalNamespace::LobbyGameStateController::get_disconnectedReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::get_disconnectedReason");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disconnectedReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::DisconnectedReason, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.set_disconnectedReason
void GlobalNamespace::LobbyGameStateController::set_disconnectedReason(GlobalNamespace::DisconnectedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::set_disconnectedReason");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_disconnectedReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_gameStartedEvent
void GlobalNamespace::LobbyGameStateController::add_gameStartedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::add_gameStartedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_gameStartedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_gameStartedEvent
void GlobalNamespace::LobbyGameStateController::remove_gameStartedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::remove_gameStartedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_gameStartedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_gameStartCancelledEvent
void GlobalNamespace::LobbyGameStateController::add_gameStartCancelledEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::add_gameStartCancelledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_gameStartCancelledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_gameStartCancelledEvent
void GlobalNamespace::LobbyGameStateController::remove_gameStartCancelledEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::remove_gameStartCancelledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_gameStartCancelledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_countdownStartedEvent
void GlobalNamespace::LobbyGameStateController::add_countdownStartedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::add_countdownStartedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_countdownStartedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_countdownStartedEvent
void GlobalNamespace::LobbyGameStateController::remove_countdownStartedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::remove_countdownStartedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_countdownStartedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_countdownCancelledEvent
void GlobalNamespace::LobbyGameStateController::add_countdownCancelledEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::add_countdownCancelledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_countdownCancelledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_countdownCancelledEvent
void GlobalNamespace::LobbyGameStateController::remove_countdownCancelledEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::remove_countdownCancelledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_countdownCancelledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_songStillDownloadingEvent
void GlobalNamespace::LobbyGameStateController::add_songStillDownloadingEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::add_songStillDownloadingEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_songStillDownloadingEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_songStillDownloadingEvent
void GlobalNamespace::LobbyGameStateController::remove_songStillDownloadingEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::remove_songStillDownloadingEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_songStillDownloadingEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_startTimeChangedEvent
void GlobalNamespace::LobbyGameStateController::add_startTimeChangedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::add_startTimeChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_startTimeChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_startTimeChangedEvent
void GlobalNamespace::LobbyGameStateController::remove_startTimeChangedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::remove_startTimeChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_startTimeChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_levelFinishedEvent
void GlobalNamespace::LobbyGameStateController::add_levelFinishedEvent(System::Action_2<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::MultiplayerResultsData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::add_levelFinishedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_levelFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_levelFinishedEvent
void GlobalNamespace::LobbyGameStateController::remove_levelFinishedEvent(System::Action_2<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::MultiplayerResultsData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::remove_levelFinishedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_levelFinishedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_levelDidGetDisconnectedEvent
void GlobalNamespace::LobbyGameStateController::add_levelDidGetDisconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::add_levelDidGetDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_levelDidGetDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_levelDidGetDisconnectedEvent
void GlobalNamespace::LobbyGameStateController::remove_levelDidGetDisconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::remove_levelDidGetDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_levelDidGetDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_lobbyDisconnectedEvent
void GlobalNamespace::LobbyGameStateController::add_lobbyDisconnectedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::add_lobbyDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_lobbyDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_lobbyDisconnectedEvent
void GlobalNamespace::LobbyGameStateController::remove_lobbyDisconnectedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::remove_lobbyDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_lobbyDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_beforeSceneSwitchCallbackEvent
void GlobalNamespace::LobbyGameStateController::add_beforeSceneSwitchCallbackEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::add_beforeSceneSwitchCallbackEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_beforeSceneSwitchCallbackEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_beforeSceneSwitchCallbackEvent
void GlobalNamespace::LobbyGameStateController::remove_beforeSceneSwitchCallbackEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::remove_beforeSceneSwitchCallbackEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_beforeSceneSwitchCallbackEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_lobbyStateChangedEvent
void GlobalNamespace::LobbyGameStateController::add_lobbyStateChangedEvent(System::Action_1<GlobalNamespace::MultiplayerLobbyState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::add_lobbyStateChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_lobbyStateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_lobbyStateChangedEvent
void GlobalNamespace::LobbyGameStateController::remove_lobbyStateChangedEvent(System::Action_1<GlobalNamespace::MultiplayerLobbyState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::remove_lobbyStateChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_lobbyStateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_startButtonEnabledEvent
void GlobalNamespace::LobbyGameStateController::add_startButtonEnabledEvent(System::Action_1<GlobalNamespace::CannotStartGameReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::add_startButtonEnabledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_startButtonEnabledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_startButtonEnabledEvent
void GlobalNamespace::LobbyGameStateController::remove_startButtonEnabledEvent(System::Action_1<GlobalNamespace::CannotStartGameReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::remove_startButtonEnabledEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_startButtonEnabledEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.add_playerMissingEntitlementsChangedEvent
void GlobalNamespace::LobbyGameStateController::add_playerMissingEntitlementsChangedEvent(System::Action_1<GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::add_playerMissingEntitlementsChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerMissingEntitlementsChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.remove_playerMissingEntitlementsChangedEvent
void GlobalNamespace::LobbyGameStateController::remove_playerMissingEntitlementsChangedEvent(System::Action_1<GlobalNamespace::PlayersMissingEntitlementsNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::remove_playerMissingEntitlementsChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerMissingEntitlementsChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateController.Activate
void GlobalNamespace::LobbyGameStateController::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::Activate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.Deactivate
void GlobalNamespace::LobbyGameStateController::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::Deactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.Dispose
void GlobalNamespace::LobbyGameStateController::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.StartListeningToGameStart
void GlobalNamespace::LobbyGameStateController::StartListeningToGameStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::StartListeningToGameStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartListeningToGameStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.GetCurrentLevelIfGameStarted
void GlobalNamespace::LobbyGameStateController::GetCurrentLevelIfGameStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::GetCurrentLevelIfGameStarted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrentLevelIfGameStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.ClearDisconnectedState
void GlobalNamespace::LobbyGameStateController::ClearDisconnectedState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::ClearDisconnectedState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearDisconnectedState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.GetGameStateAndConfigurationAsync
System::Threading::Tasks::Task* GlobalNamespace::LobbyGameStateController::GetGameStateAndConfigurationAsync(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::GetGameStateAndConfigurationAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGameStateAndConfigurationAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: LobbyGameStateController.PredictCountdownEndTime
void GlobalNamespace::LobbyGameStateController::PredictCountdownEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::PredictCountdownEndTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PredictCountdownEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.IsCloseToStartGame
bool GlobalNamespace::LobbyGameStateController::IsCloseToStartGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::IsCloseToStartGame");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsCloseToStartGame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.HandleMultiplayerSessionManagerDisconnected
void GlobalNamespace::LobbyGameStateController::HandleMultiplayerSessionManagerDisconnected(GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::HandleMultiplayerSessionManagerDisconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerSessionManagerDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disconnectedReason);
}
// Autogenerated method: LobbyGameStateController.HandleMultiplayerSessionManagerConnectionOwnerStateChanged
void GlobalNamespace::LobbyGameStateController::HandleMultiplayerSessionManagerConnectionOwnerStateChanged(GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::HandleMultiplayerSessionManagerConnectionOwnerStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerSessionManagerConnectionOwnerStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, connectedPlayer);
}
// Autogenerated method: LobbyGameStateController.StopListeningToGameStart
void GlobalNamespace::LobbyGameStateController::StopListeningToGameStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::StopListeningToGameStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopListeningToGameStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerStartedLevel
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerStartedLevel(::Il2CppString* userId, GlobalNamespace::BeatmapIdentifierNetSerializable* beatmapId, GlobalNamespace::GameplayModifiers* gameplayModifiers, float startTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerStartedLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerStartedLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(beatmapId), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(startTime)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, beatmapId, gameplayModifiers, startTime);
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerCancelledLevelStart
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerCancelledLevelStart(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerCancelledLevelStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerCancelledLevelStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerSetCountdownEndTime
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerSetCountdownEndTime(::Il2CppString* userId, float countdownTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerSetCountdownEndTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerSetCountdownEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(countdownTime)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, countdownTime);
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerCancelCountdown
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerCancelCountdown(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerCancelCountdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerCancelCountdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerSetStartGameTime
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerSetStartGameTime(::Il2CppString* userId, float startTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerSetStartGameTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerSetStartGameTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(startTime)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, startTime);
}
// Autogenerated method: LobbyGameStateController.HandleSetIsStartButtonEnabled
void GlobalNamespace::LobbyGameStateController::HandleSetIsStartButtonEnabled(::Il2CppString* userId, GlobalNamespace::CannotStartGameReason cannotStartGameReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::HandleSetIsStartButtonEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSetIsStartButtonEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(cannotStartGameReason)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, cannotStartGameReason);
}
// Autogenerated method: LobbyGameStateController.HandleMenuRpcManagerSetPlayersMissingEntitlementsToLevel
void GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerSetPlayersMissingEntitlementsToLevel(::Il2CppString* userId, GlobalNamespace::PlayersMissingEntitlementsNetSerializable* playersMissingEntitlements) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::HandleMenuRpcManagerSetPlayersMissingEntitlementsToLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerSetPlayersMissingEntitlementsToLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(playersMissingEntitlements)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, playersMissingEntitlements);
}
// Autogenerated method: LobbyGameStateController.HandleStartTimeChanged
void GlobalNamespace::LobbyGameStateController::HandleStartTimeChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::HandleStartTimeChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleStartTimeChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.HandleMultiplayerLevelLoaderStillDownloadingSong
void GlobalNamespace::LobbyGameStateController::HandleMultiplayerLevelLoaderStillDownloadingSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::HandleMultiplayerLevelLoaderStillDownloadingSong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerLevelLoaderStillDownloadingSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateController.HandleMultiplayerLevelLoaderCountdownFinished
void GlobalNamespace::LobbyGameStateController::HandleMultiplayerLevelLoaderCountdownFinished(GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, GlobalNamespace::BeatmapDifficulty beatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::HandleMultiplayerLevelLoaderCountdownFinished");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerLevelLoaderCountdownFinished", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previewBeatmapLevel), ::il2cpp_utils::ExtractType(beatmapDifficulty), ::il2cpp_utils::ExtractType(beatmapCharacteristic), ::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(gameplayModifiers)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, previewBeatmapLevel, beatmapDifficulty, beatmapCharacteristic, difficultyBeatmap, gameplayModifiers);
}
// Autogenerated method: LobbyGameStateController.StartMultiplayerLevel
void GlobalNamespace::LobbyGameStateController::StartMultiplayerLevel(GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, GlobalNamespace::BeatmapDifficulty beatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, GlobalNamespace::GameplayModifiers* gameplayModifiers, System::Action* beforeSceneSwitchCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::StartMultiplayerLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartMultiplayerLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previewBeatmapLevel), ::il2cpp_utils::ExtractType(beatmapDifficulty), ::il2cpp_utils::ExtractType(beatmapCharacteristic), ::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(gameplayModifiers), ::il2cpp_utils::ExtractType(beforeSceneSwitchCallback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, previewBeatmapLevel, beatmapDifficulty, beatmapCharacteristic, difficultyBeatmap, gameplayModifiers, beforeSceneSwitchCallback);
}
// Autogenerated method: LobbyGameStateController.HandleMultiplayerLevelDidFinish
void GlobalNamespace::LobbyGameStateController::HandleMultiplayerLevelDidFinish(GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO* multiplayerLevelScenesTransitionSetupData, GlobalNamespace::MultiplayerResultsData* multiplayerResultsData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::HandleMultiplayerLevelDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerLevelDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiplayerLevelScenesTransitionSetupData), ::il2cpp_utils::ExtractType(multiplayerResultsData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, multiplayerLevelScenesTransitionSetupData, multiplayerResultsData);
}
// Autogenerated method: LobbyGameStateController.HandleMultiplayerLevelDidDisconnect
void GlobalNamespace::LobbyGameStateController::HandleMultiplayerLevelDidDisconnect(GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::HandleMultiplayerLevelDidDisconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerLevelDidDisconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disconnectedReason);
}
// Autogenerated method: LobbyGameStateController.StopLoading
void GlobalNamespace::LobbyGameStateController::StopLoading() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::StopLoading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopLoading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LobbyGameStateController/<>c__DisplayClass94_0
#include "GlobalNamespace/LobbyGameStateController_--c__DisplayClass94_0.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: PlayersLobbyPermissionConfigurationNetSerializable
#include "GlobalNamespace/PlayersLobbyPermissionConfigurationNetSerializable.hpp"
// Including type: PlayerLobbyPermissionConfigurationNetSerializable
#include "GlobalNamespace/PlayerLobbyPermissionConfigurationNetSerializable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public LobbyGameStateController <>4__this
GlobalNamespace::LobbyGameStateController* GlobalNamespace::LobbyGameStateController::$$c__DisplayClass94_0::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::$$c__DisplayClass94_0::_get_$$4__this");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::LobbyGameStateController*>(___internal__instance, "<>4__this")));
}
// Autogenerated instance field setter
// Set instance field: public LobbyGameStateController <>4__this
void GlobalNamespace::LobbyGameStateController::$$c__DisplayClass94_0::_set_$$4__this(GlobalNamespace::LobbyGameStateController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::$$c__DisplayClass94_0::_set_$$4__this");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>4__this", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.Tasks.TaskCompletionSource`1<MultiplayerGameState> getGameStateAsyncTcs
System::Threading::Tasks::TaskCompletionSource_1<GlobalNamespace::MultiplayerGameState>* GlobalNamespace::LobbyGameStateController::$$c__DisplayClass94_0::_get_getGameStateAsyncTcs() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::$$c__DisplayClass94_0::_get_getGameStateAsyncTcs");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskCompletionSource_1<GlobalNamespace::MultiplayerGameState>*>(___internal__instance, "getGameStateAsyncTcs"));
}
// Autogenerated instance field setter
// Set instance field: public System.Threading.Tasks.TaskCompletionSource`1<MultiplayerGameState> getGameStateAsyncTcs
void GlobalNamespace::LobbyGameStateController::$$c__DisplayClass94_0::_set_getGameStateAsyncTcs(System::Threading::Tasks::TaskCompletionSource_1<GlobalNamespace::MultiplayerGameState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::$$c__DisplayClass94_0::_set_getGameStateAsyncTcs");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "getGameStateAsyncTcs", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.Tasks.TaskCompletionSource`1<PlayersLobbyPermissionConfigurationNetSerializable> getPlayerPermissionAsyncTcs
System::Threading::Tasks::TaskCompletionSource_1<GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable*>* GlobalNamespace::LobbyGameStateController::$$c__DisplayClass94_0::_get_getPlayerPermissionAsyncTcs() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::$$c__DisplayClass94_0::_get_getPlayerPermissionAsyncTcs");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskCompletionSource_1<GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable*>*>(___internal__instance, "getPlayerPermissionAsyncTcs"));
}
// Autogenerated instance field setter
// Set instance field: public System.Threading.Tasks.TaskCompletionSource`1<PlayersLobbyPermissionConfigurationNetSerializable> getPlayerPermissionAsyncTcs
void GlobalNamespace::LobbyGameStateController::$$c__DisplayClass94_0::_set_getPlayerPermissionAsyncTcs(System::Threading::Tasks::TaskCompletionSource_1<GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::$$c__DisplayClass94_0::_set_getPlayerPermissionAsyncTcs");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "getPlayerPermissionAsyncTcs", value));
}
// Autogenerated method: LobbyGameStateController/<>c__DisplayClass94_0.<GetGameStateAndConfigurationAsync>g__HandleSetMultiplayerGameState|0
void GlobalNamespace::LobbyGameStateController::$$c__DisplayClass94_0::$GetGameStateAndConfigurationAsync$g__HandleSetMultiplayerGameState_0(::Il2CppString* userId, GlobalNamespace::MultiplayerGameState newMultiplayerGameState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::$$c__DisplayClass94_0::<GetGameStateAndConfigurationAsync>g__HandleSetMultiplayerGameState|0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetGameStateAndConfigurationAsync>g__HandleSetMultiplayerGameState|0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(newMultiplayerGameState)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, newMultiplayerGameState);
}
// Autogenerated method: LobbyGameStateController/<>c__DisplayClass94_0.<GetGameStateAndConfigurationAsync>g__HandleSetPlayerPermissionConfiguration|1
void GlobalNamespace::LobbyGameStateController::$$c__DisplayClass94_0::$GetGameStateAndConfigurationAsync$g__HandleSetPlayerPermissionConfiguration_1(::Il2CppString* userId, GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable* playersLobbyPermissionConfiguration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::$$c__DisplayClass94_0::<GetGameStateAndConfigurationAsync>g__HandleSetPlayerPermissionConfiguration|1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetGameStateAndConfigurationAsync>g__HandleSetPlayerPermissionConfiguration|1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(playersLobbyPermissionConfiguration)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, playersLobbyPermissionConfiguration);
}
// Autogenerated method: LobbyGameStateController/<>c__DisplayClass94_0.<GetGameStateAndConfigurationAsync>b__2
bool GlobalNamespace::LobbyGameStateController::$$c__DisplayClass94_0::$GetGameStateAndConfigurationAsync$b__2(GlobalNamespace::PlayerLobbyPermissionConfigurationNetSerializable* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::$$c__DisplayClass94_0::<GetGameStateAndConfigurationAsync>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetGameStateAndConfigurationAsync>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LobbyGameStateController/<>c
#include "GlobalNamespace/LobbyGameStateController_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: ILobbyPlayerData
#include "GlobalNamespace/ILobbyPlayerData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly LobbyGameStateController/<>c <>9
GlobalNamespace::LobbyGameStateController::$$c* GlobalNamespace::LobbyGameStateController::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::LobbyGameStateController::$$c*>("", "LobbyGameStateController/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly LobbyGameStateController/<>c <>9
void GlobalNamespace::LobbyGameStateController::$$c::_set_$$9(GlobalNamespace::LobbyGameStateController::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "LobbyGameStateController/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Collections.Generic.KeyValuePair`2<System.String,ILobbyPlayerData>,System.Boolean> <>9__95_0
System::Func_2<System::Collections::Generic::KeyValuePair_2<::Il2CppString*, GlobalNamespace::ILobbyPlayerData*>, bool>* GlobalNamespace::LobbyGameStateController::$$c::_get_$$9__95_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::$$c::_get_$$9__95_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<System::Collections::Generic::KeyValuePair_2<::Il2CppString*, GlobalNamespace::ILobbyPlayerData*>, bool>*>("", "LobbyGameStateController/<>c", "<>9__95_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Collections.Generic.KeyValuePair`2<System.String,ILobbyPlayerData>,System.Boolean> <>9__95_0
void GlobalNamespace::LobbyGameStateController::$$c::_set_$$9__95_0(System::Func_2<System::Collections::Generic::KeyValuePair_2<::Il2CppString*, GlobalNamespace::ILobbyPlayerData*>, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::$$c::_set_$$9__95_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "LobbyGameStateController/<>c", "<>9__95_0", value)));
}
// Autogenerated method: LobbyGameStateController/<>c..cctor
void GlobalNamespace::LobbyGameStateController::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LobbyGameStateController/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: LobbyGameStateController/<>c.<PredictCountdownEndTime>b__95_0
bool GlobalNamespace::LobbyGameStateController::$$c::$PredictCountdownEndTime$b__95_0(System::Collections::Generic::KeyValuePair_2<::Il2CppString*, GlobalNamespace::ILobbyPlayerData*> pair) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateController::$$c::<PredictCountdownEndTime>b__95_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PredictCountdownEndTime>b__95_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pair)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, pair);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LobbyGameStateModel
#include "GlobalNamespace/LobbyGameStateModel.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action`1<MultiplayerGameState> gameStateDidChangeEvent
System::Action_1<GlobalNamespace::MultiplayerGameState>* GlobalNamespace::LobbyGameStateModel::_get_gameStateDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateModel::_get_gameStateDidChangeEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<GlobalNamespace::MultiplayerGameState>*>(___internal__instance, "gameStateDidChangeEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<MultiplayerGameState> gameStateDidChangeEvent
void GlobalNamespace::LobbyGameStateModel::_set_gameStateDidChangeEvent(System::Action_1<GlobalNamespace::MultiplayerGameState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateModel::_set_gameStateDidChangeEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "gameStateDidChangeEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<MultiplayerGameState> gameStateDidChangeAlwaysSentEvent
System::Action_1<GlobalNamespace::MultiplayerGameState>* GlobalNamespace::LobbyGameStateModel::_get_gameStateDidChangeAlwaysSentEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateModel::_get_gameStateDidChangeAlwaysSentEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<GlobalNamespace::MultiplayerGameState>*>(___internal__instance, "gameStateDidChangeAlwaysSentEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<MultiplayerGameState> gameStateDidChangeAlwaysSentEvent
void GlobalNamespace::LobbyGameStateModel::_set_gameStateDidChangeAlwaysSentEvent(System::Action_1<GlobalNamespace::MultiplayerGameState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateModel::_set_gameStateDidChangeAlwaysSentEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "gameStateDidChangeAlwaysSentEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerGameState _gameState
GlobalNamespace::MultiplayerGameState GlobalNamespace::LobbyGameStateModel::_get__gameState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateModel::_get__gameState");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerGameState>(___internal__instance, "_gameState"));
}
// Autogenerated instance field setter
// Set instance field: private MultiplayerGameState _gameState
void GlobalNamespace::LobbyGameStateModel::_set__gameState(GlobalNamespace::MultiplayerGameState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateModel::_set__gameState");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_gameState", value));
}
// Autogenerated method: LobbyGameStateModel.get_gameState
GlobalNamespace::MultiplayerGameState GlobalNamespace::LobbyGameStateModel::get_gameState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateModel::get_gameState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MultiplayerGameState, false>(this, ___internal__method);
}
// Autogenerated method: LobbyGameStateModel.add_gameStateDidChangeEvent
void GlobalNamespace::LobbyGameStateModel::add_gameStateDidChangeEvent(System::Action_1<GlobalNamespace::MultiplayerGameState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateModel::add_gameStateDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_gameStateDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateModel.remove_gameStateDidChangeEvent
void GlobalNamespace::LobbyGameStateModel::remove_gameStateDidChangeEvent(System::Action_1<GlobalNamespace::MultiplayerGameState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateModel::remove_gameStateDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_gameStateDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateModel.add_gameStateDidChangeAlwaysSentEvent
void GlobalNamespace::LobbyGameStateModel::add_gameStateDidChangeAlwaysSentEvent(System::Action_1<GlobalNamespace::MultiplayerGameState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateModel::add_gameStateDidChangeAlwaysSentEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_gameStateDidChangeAlwaysSentEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateModel.remove_gameStateDidChangeAlwaysSentEvent
void GlobalNamespace::LobbyGameStateModel::remove_gameStateDidChangeAlwaysSentEvent(System::Action_1<GlobalNamespace::MultiplayerGameState>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateModel::remove_gameStateDidChangeAlwaysSentEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_gameStateDidChangeAlwaysSentEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyGameStateModel.SetGameState
void GlobalNamespace::LobbyGameStateModel::SetGameState(GlobalNamespace::MultiplayerGameState newGameState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateModel::SetGameState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGameState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newGameState)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newGameState);
}
// Autogenerated method: LobbyGameStateModel.SetGameStateWithoutNotification
void GlobalNamespace::LobbyGameStateModel::SetGameStateWithoutNotification(GlobalNamespace::MultiplayerGameState newGameState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateModel::SetGameStateWithoutNotification");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGameStateWithoutNotification", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newGameState)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newGameState);
}
// Autogenerated method: LobbyGameStateModel.SetGameState
void GlobalNamespace::LobbyGameStateModel::SetGameState(GlobalNamespace::MultiplayerGameState newGameState, bool sendNotification) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyGameStateModel::SetGameState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGameState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newGameState), ::il2cpp_utils::ExtractType(sendNotification)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newGameState, sendNotification);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LobbyPlayerData
#include "GlobalNamespace/LobbyPlayerData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isPartyOwner>k__BackingField
bool GlobalNamespace::LobbyPlayerData::_get_$isPartyOwner$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerData::_get_$isPartyOwner$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(___internal__instance, "<isPartyOwner>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <isPartyOwner>k__BackingField
void GlobalNamespace::LobbyPlayerData::_set_$isPartyOwner$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerData::_set_$isPartyOwner$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<isPartyOwner>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isActive>k__BackingField
bool GlobalNamespace::LobbyPlayerData::_get_$isActive$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerData::_get_$isActive$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(___internal__instance, "<isActive>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <isActive>k__BackingField
void GlobalNamespace::LobbyPlayerData::_set_$isActive$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerData::_set_$isActive$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<isActive>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isReady>k__BackingField
bool GlobalNamespace::LobbyPlayerData::_get_$isReady$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerData::_get_$isReady$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(___internal__instance, "<isReady>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <isReady>k__BackingField
void GlobalNamespace::LobbyPlayerData::_set_$isReady$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerData::_set_$isReady$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<isReady>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isInLobby>k__BackingField
bool GlobalNamespace::LobbyPlayerData::_get_$isInLobby$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerData::_get_$isInLobby$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(___internal__instance, "<isInLobby>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <isInLobby>k__BackingField
void GlobalNamespace::LobbyPlayerData::_set_$isInLobby$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerData::_set_$isInLobby$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<isInLobby>k__BackingField", value));
}
// Autogenerated method: LobbyPlayerData.get_isPartyOwner
bool GlobalNamespace::LobbyPlayerData::get_isPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerData::get_isPartyOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayerData.set_isPartyOwner
void GlobalNamespace::LobbyPlayerData::set_isPartyOwner(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerData::set_isPartyOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayerData.get_isActive
bool GlobalNamespace::LobbyPlayerData::get_isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerData::get_isActive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayerData.set_isActive
void GlobalNamespace::LobbyPlayerData::set_isActive(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerData::set_isActive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayerData.get_isReady
bool GlobalNamespace::LobbyPlayerData::get_isReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerData::get_isReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayerData.set_isReady
void GlobalNamespace::LobbyPlayerData::set_isReady(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerData::set_isReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayerData.get_isInLobby
bool GlobalNamespace::LobbyPlayerData::get_isInLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerData::get_isInLobby");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayerData.set_isInLobby
void GlobalNamespace::LobbyPlayerData::set_isInLobby(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerData::set_isInLobby");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LobbyPlayerPermissionsModel
#include "GlobalNamespace/LobbyPlayerPermissionsModel.hpp"
// Including type: IMenuRpcManager
#include "GlobalNamespace/IMenuRpcManager.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: PlayersLobbyPermissionConfigurationNetSerializable
#include "GlobalNamespace/PlayersLobbyPermissionConfigurationNetSerializable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IMenuRpcManager _menuRpcManager
GlobalNamespace::IMenuRpcManager* GlobalNamespace::LobbyPlayerPermissionsModel::_get__menuRpcManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerPermissionsModel::_get__menuRpcManager");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::IMenuRpcManager*>(___internal__instance, "_menuRpcManager"));
}
// Autogenerated instance field setter
// Set instance field: private readonly IMenuRpcManager _menuRpcManager
void GlobalNamespace::LobbyPlayerPermissionsModel::_set__menuRpcManager(GlobalNamespace::IMenuRpcManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerPermissionsModel::_set__menuRpcManager");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_menuRpcManager", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
GlobalNamespace::IMultiplayerSessionManager* GlobalNamespace::LobbyPlayerPermissionsModel::_get__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerPermissionsModel::_get__multiplayerSessionManager");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::IMultiplayerSessionManager*>(___internal__instance, "_multiplayerSessionManager"));
}
// Autogenerated instance field setter
// Set instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
void GlobalNamespace::LobbyPlayerPermissionsModel::_set__multiplayerSessionManager(GlobalNamespace::IMultiplayerSessionManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerPermissionsModel::_set__multiplayerSessionManager");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_multiplayerSessionManager", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isPartyOwner>k__BackingField
bool GlobalNamespace::LobbyPlayerPermissionsModel::_get_$isPartyOwner$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerPermissionsModel::_get_$isPartyOwner$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(___internal__instance, "<isPartyOwner>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <isPartyOwner>k__BackingField
void GlobalNamespace::LobbyPlayerPermissionsModel::_set_$isPartyOwner$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerPermissionsModel::_set_$isPartyOwner$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<isPartyOwner>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <hasRecommendBeatmapPermission>k__BackingField
bool GlobalNamespace::LobbyPlayerPermissionsModel::_get_$hasRecommendBeatmapPermission$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerPermissionsModel::_get_$hasRecommendBeatmapPermission$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(___internal__instance, "<hasRecommendBeatmapPermission>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <hasRecommendBeatmapPermission>k__BackingField
void GlobalNamespace::LobbyPlayerPermissionsModel::_set_$hasRecommendBeatmapPermission$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerPermissionsModel::_set_$hasRecommendBeatmapPermission$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<hasRecommendBeatmapPermission>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <hasRecommendModifiersPermission>k__BackingField
bool GlobalNamespace::LobbyPlayerPermissionsModel::_get_$hasRecommendModifiersPermission$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerPermissionsModel::_get_$hasRecommendModifiersPermission$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(___internal__instance, "<hasRecommendModifiersPermission>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <hasRecommendModifiersPermission>k__BackingField
void GlobalNamespace::LobbyPlayerPermissionsModel::_set_$hasRecommendModifiersPermission$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerPermissionsModel::_set_$hasRecommendModifiersPermission$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<hasRecommendModifiersPermission>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <hasKickVotePermission>k__BackingField
bool GlobalNamespace::LobbyPlayerPermissionsModel::_get_$hasKickVotePermission$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerPermissionsModel::_get_$hasKickVotePermission$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(___internal__instance, "<hasKickVotePermission>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <hasKickVotePermission>k__BackingField
void GlobalNamespace::LobbyPlayerPermissionsModel::_set_$hasKickVotePermission$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerPermissionsModel::_set_$hasKickVotePermission$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<hasKickVotePermission>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action permissionsChangedEvent
System::Action* GlobalNamespace::LobbyPlayerPermissionsModel::_get_permissionsChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerPermissionsModel::_get_permissionsChangedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>(___internal__instance, "permissionsChangedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action permissionsChangedEvent
void GlobalNamespace::LobbyPlayerPermissionsModel::_set_permissionsChangedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerPermissionsModel::_set_permissionsChangedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "permissionsChangedEvent", value));
}
// Autogenerated method: LobbyPlayerPermissionsModel.get_isPartyOwner
bool GlobalNamespace::LobbyPlayerPermissionsModel::get_isPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerPermissionsModel::get_isPartyOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayerPermissionsModel.set_isPartyOwner
void GlobalNamespace::LobbyPlayerPermissionsModel::set_isPartyOwner(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerPermissionsModel::set_isPartyOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayerPermissionsModel.get_hasRecommendBeatmapPermission
bool GlobalNamespace::LobbyPlayerPermissionsModel::get_hasRecommendBeatmapPermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerPermissionsModel::get_hasRecommendBeatmapPermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasRecommendBeatmapPermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayerPermissionsModel.set_hasRecommendBeatmapPermission
void GlobalNamespace::LobbyPlayerPermissionsModel::set_hasRecommendBeatmapPermission(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerPermissionsModel::set_hasRecommendBeatmapPermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hasRecommendBeatmapPermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayerPermissionsModel.get_hasRecommendModifiersPermission
bool GlobalNamespace::LobbyPlayerPermissionsModel::get_hasRecommendModifiersPermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerPermissionsModel::get_hasRecommendModifiersPermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasRecommendModifiersPermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayerPermissionsModel.set_hasRecommendModifiersPermission
void GlobalNamespace::LobbyPlayerPermissionsModel::set_hasRecommendModifiersPermission(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerPermissionsModel::set_hasRecommendModifiersPermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hasRecommendModifiersPermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayerPermissionsModel.get_hasKickVotePermission
bool GlobalNamespace::LobbyPlayerPermissionsModel::get_hasKickVotePermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerPermissionsModel::get_hasKickVotePermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasKickVotePermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayerPermissionsModel.set_hasKickVotePermission
void GlobalNamespace::LobbyPlayerPermissionsModel::set_hasKickVotePermission(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerPermissionsModel::set_hasKickVotePermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hasKickVotePermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayerPermissionsModel.add_permissionsChangedEvent
void GlobalNamespace::LobbyPlayerPermissionsModel::add_permissionsChangedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerPermissionsModel::add_permissionsChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_permissionsChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayerPermissionsModel.remove_permissionsChangedEvent
void GlobalNamespace::LobbyPlayerPermissionsModel::remove_permissionsChangedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerPermissionsModel::remove_permissionsChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_permissionsChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayerPermissionsModel.Activate
void GlobalNamespace::LobbyPlayerPermissionsModel::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerPermissionsModel::Activate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayerPermissionsModel.Deactivate
void GlobalNamespace::LobbyPlayerPermissionsModel::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerPermissionsModel::Deactivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayerPermissionsModel.SetPlayerPermissions
void GlobalNamespace::LobbyPlayerPermissionsModel::SetPlayerPermissions(bool isPartyOwner, bool hasRecommendBeatmapPermission, bool hasRecommendModifiersPermission, bool hasKickVotePermission) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerPermissionsModel::SetPlayerPermissions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayerPermissions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(hasRecommendBeatmapPermission), ::il2cpp_utils::ExtractType(hasRecommendModifiersPermission), ::il2cpp_utils::ExtractType(hasKickVotePermission)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isPartyOwner, hasRecommendBeatmapPermission, hasRecommendModifiersPermission, hasKickVotePermission);
}
// Autogenerated method: LobbyPlayerPermissionsModel.HandleMenuRpcManagerSetPlayersPermissionConfiguration
void GlobalNamespace::LobbyPlayerPermissionsModel::HandleMenuRpcManagerSetPlayersPermissionConfiguration(::Il2CppString* userId, GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable* playersLobbyPermissionConfiguration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayerPermissionsModel::HandleMenuRpcManagerSetPlayersPermissionConfiguration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerSetPlayersPermissionConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(playersLobbyPermissionConfiguration)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, playersLobbyPermissionConfiguration);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LobbyPlayersDataModel
#include "GlobalNamespace/LobbyPlayersDataModel.hpp"
// Including type: LobbyPlayersDataModel/<>c
#include "GlobalNamespace/LobbyPlayersDataModel_--c.hpp"
// Including type: LobbyPlayersDataModel/<SetOwnedSongPacks>d__51
#include "GlobalNamespace/LobbyPlayersDataModel_-SetOwnedSongPacks-d__51.hpp"
// Including type: IMenuRpcManager
#include "GlobalNamespace/IMenuRpcManager.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: BeatmapLevelsModel
#include "GlobalNamespace/BeatmapLevelsModel.hpp"
// Including type: BeatmapCharacteristicCollectionSO
#include "GlobalNamespace/BeatmapCharacteristicCollectionSO.hpp"
// Including type: AdditionalContentModel
#include "GlobalNamespace/AdditionalContentModel.hpp"
// Including type: LobbyPlayerPermissionsModel
#include "GlobalNamespace/LobbyPlayerPermissionsModel.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: ILobbyPlayerData
#include "GlobalNamespace/ILobbyPlayerData.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyDictionary`2
#include "System/Collections/Generic/IReadOnlyDictionary_2.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: BeatmapIdentifierNetSerializable
#include "GlobalNamespace/BeatmapIdentifierNetSerializable.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: PlayersLobbyPermissionConfigurationNetSerializable
#include "GlobalNamespace/PlayersLobbyPermissionConfigurationNetSerializable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IMenuRpcManager _menuRpcManager
GlobalNamespace::IMenuRpcManager* GlobalNamespace::LobbyPlayersDataModel::_get__menuRpcManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::_get__menuRpcManager");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::IMenuRpcManager*>(___internal__instance, "_menuRpcManager"));
}
// Autogenerated instance field setter
// Set instance field: private readonly IMenuRpcManager _menuRpcManager
void GlobalNamespace::LobbyPlayersDataModel::_set__menuRpcManager(GlobalNamespace::IMenuRpcManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::_set__menuRpcManager");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_menuRpcManager", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
GlobalNamespace::IMultiplayerSessionManager* GlobalNamespace::LobbyPlayersDataModel::_get__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::_get__multiplayerSessionManager");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::IMultiplayerSessionManager*>(___internal__instance, "_multiplayerSessionManager"));
}
// Autogenerated instance field setter
// Set instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
void GlobalNamespace::LobbyPlayersDataModel::_set__multiplayerSessionManager(GlobalNamespace::IMultiplayerSessionManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::_set__multiplayerSessionManager");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_multiplayerSessionManager", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapLevelsModel _beatmapLevelsModel
GlobalNamespace::BeatmapLevelsModel* GlobalNamespace::LobbyPlayersDataModel::_get__beatmapLevelsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::_get__beatmapLevelsModel");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapLevelsModel*>(___internal__instance, "_beatmapLevelsModel"));
}
// Autogenerated instance field setter
// Set instance field: private readonly BeatmapLevelsModel _beatmapLevelsModel
void GlobalNamespace::LobbyPlayersDataModel::_set__beatmapLevelsModel(GlobalNamespace::BeatmapLevelsModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::_set__beatmapLevelsModel");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_beatmapLevelsModel", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapCharacteristicCollectionSO _beatmapCharacteristicCollection
GlobalNamespace::BeatmapCharacteristicCollectionSO* GlobalNamespace::LobbyPlayersDataModel::_get__beatmapCharacteristicCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::_get__beatmapCharacteristicCollection");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapCharacteristicCollectionSO*>(___internal__instance, "_beatmapCharacteristicCollection"));
}
// Autogenerated instance field setter
// Set instance field: private readonly BeatmapCharacteristicCollectionSO _beatmapCharacteristicCollection
void GlobalNamespace::LobbyPlayersDataModel::_set__beatmapCharacteristicCollection(GlobalNamespace::BeatmapCharacteristicCollectionSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::_set__beatmapCharacteristicCollection");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_beatmapCharacteristicCollection", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly AdditionalContentModel _additionalContentModel
GlobalNamespace::AdditionalContentModel* GlobalNamespace::LobbyPlayersDataModel::_get__additionalContentModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::_get__additionalContentModel");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::AdditionalContentModel*>(___internal__instance, "_additionalContentModel"));
}
// Autogenerated instance field setter
// Set instance field: private readonly AdditionalContentModel _additionalContentModel
void GlobalNamespace::LobbyPlayersDataModel::_set__additionalContentModel(GlobalNamespace::AdditionalContentModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::_set__additionalContentModel");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_additionalContentModel", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly LobbyPlayerPermissionsModel _lobbyPlayerPermissionsModel
GlobalNamespace::LobbyPlayerPermissionsModel* GlobalNamespace::LobbyPlayersDataModel::_get__lobbyPlayerPermissionsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::_get__lobbyPlayerPermissionsModel");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LobbyPlayerPermissionsModel*>(___internal__instance, "_lobbyPlayerPermissionsModel"));
}
// Autogenerated instance field setter
// Set instance field: private readonly LobbyPlayerPermissionsModel _lobbyPlayerPermissionsModel
void GlobalNamespace::LobbyPlayersDataModel::_set__lobbyPlayerPermissionsModel(GlobalNamespace::LobbyPlayerPermissionsModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::_set__lobbyPlayerPermissionsModel");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_lobbyPlayerPermissionsModel", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,ILobbyPlayerData> _playersData
System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::ILobbyPlayerData*>* GlobalNamespace::LobbyPlayersDataModel::_get__playersData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::_get__playersData");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::ILobbyPlayerData*>*>(___internal__instance, "_playersData")));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,ILobbyPlayerData> _playersData
void GlobalNamespace::LobbyPlayersDataModel::_set__playersData(System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::ILobbyPlayerData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::_set__playersData");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_playersData", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Threading.CancellationTokenSource _cancellationTokenSource
System::Threading::CancellationTokenSource* GlobalNamespace::LobbyPlayersDataModel::_get__cancellationTokenSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::_get__cancellationTokenSource");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::CancellationTokenSource*>(___internal__instance, "_cancellationTokenSource"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Threading.CancellationTokenSource _cancellationTokenSource
void GlobalNamespace::LobbyPlayersDataModel::_set__cancellationTokenSource(System::Threading::CancellationTokenSource* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::_set__cancellationTokenSource");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_cancellationTokenSource", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String <partyOwnerId>k__BackingField
::Il2CppString* GlobalNamespace::LobbyPlayersDataModel::_get_$partyOwnerId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::_get_$partyOwnerId$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "<partyOwnerId>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.String <partyOwnerId>k__BackingField
void GlobalNamespace::LobbyPlayersDataModel::_set_$partyOwnerId$k__BackingField(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::_set_$partyOwnerId$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<partyOwnerId>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> didChangeEvent
System::Action_1<::Il2CppString*>* GlobalNamespace::LobbyPlayersDataModel::_get_didChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::_get_didChangeEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<::Il2CppString*>*>(___internal__instance, "didChangeEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<System.String> didChangeEvent
void GlobalNamespace::LobbyPlayersDataModel::_set_didChangeEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::_set_didChangeEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "didChangeEvent", value));
}
// Autogenerated method: LobbyPlayersDataModel.get_localUserId
::Il2CppString* GlobalNamespace::LobbyPlayersDataModel::get_localUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::get_localUserId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.get_partyOwnerId
::Il2CppString* GlobalNamespace::LobbyPlayersDataModel::get_partyOwnerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::get_partyOwnerId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_partyOwnerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.set_partyOwnerId
void GlobalNamespace::LobbyPlayersDataModel::set_partyOwnerId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::set_partyOwnerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_partyOwnerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayersDataModel.get_playersData
System::Collections::Generic::IReadOnlyDictionary_2<::Il2CppString*, GlobalNamespace::ILobbyPlayerData*>* GlobalNamespace::LobbyPlayersDataModel::get_playersData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::get_playersData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playersData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IReadOnlyDictionary_2<::Il2CppString*, GlobalNamespace::ILobbyPlayerData*>*, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.add_didChangeEvent
void GlobalNamespace::LobbyPlayersDataModel::add_didChangeEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::add_didChangeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayersDataModel.remove_didChangeEvent
void GlobalNamespace::LobbyPlayersDataModel::remove_didChangeEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::remove_didChangeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyPlayersDataModel.GetLobbyPlayerDataModel
GlobalNamespace::ILobbyPlayerData* GlobalNamespace::LobbyPlayersDataModel::GetLobbyPlayerDataModel(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::GetLobbyPlayerDataModel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLobbyPlayerDataModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ILobbyPlayerData*, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.GetPlayerBeatmapLevel
GlobalNamespace::IPreviewBeatmapLevel* GlobalNamespace::LobbyPlayersDataModel::GetPlayerBeatmapLevel(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::GetPlayerBeatmapLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerBeatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IPreviewBeatmapLevel*, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.GetPlayerGameplayModifiers
GlobalNamespace::GameplayModifiers* GlobalNamespace::LobbyPlayersDataModel::GetPlayerGameplayModifiers(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::GetPlayerGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayModifiers*, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.GetPlayerBeatmapDifficulty
GlobalNamespace::BeatmapDifficulty GlobalNamespace::LobbyPlayersDataModel::GetPlayerBeatmapDifficulty(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::GetPlayerBeatmapDifficulty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerBeatmapDifficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapDifficulty, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.GetPlayerBeatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::LobbyPlayersDataModel::GetPlayerBeatmapCharacteristic(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::GetPlayerBeatmapCharacteristic");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerBeatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.GetPlayerIsActive
bool GlobalNamespace::LobbyPlayersDataModel::GetPlayerIsActive(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::GetPlayerIsActive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerIsActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.GetPlayerIsReady
bool GlobalNamespace::LobbyPlayersDataModel::GetPlayerIsReady(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::GetPlayerIsReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerIsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.GetPlayerIsInLobby
bool GlobalNamespace::LobbyPlayersDataModel::GetPlayerIsInLobby(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::GetPlayerIsInLobby");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerIsInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.GetPlayerIsPartyOwner
bool GlobalNamespace::LobbyPlayersDataModel::GetPlayerIsPartyOwner(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::GetPlayerIsPartyOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerIsPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.GetOrCreateLobbyPlayerDataModel
GlobalNamespace::ILobbyPlayerData* GlobalNamespace::LobbyPlayersDataModel::GetOrCreateLobbyPlayerDataModel(::Il2CppString* userId, bool& alreadyExists) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::GetOrCreateLobbyPlayerDataModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOrCreateLobbyPlayerDataModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ILobbyPlayerData*, false>(this, ___internal__method, userId, alreadyExists);
}
// Autogenerated method: LobbyPlayersDataModel.SetPlayerBeatmapLevel
void GlobalNamespace::LobbyPlayersDataModel::SetPlayerBeatmapLevel(::Il2CppString* userId, GlobalNamespace::IPreviewBeatmapLevel* beatmapLevel, GlobalNamespace::BeatmapDifficulty beatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO* characteristic) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::SetPlayerBeatmapLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayerBeatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(beatmapLevel), ::il2cpp_utils::ExtractType(beatmapDifficulty), ::il2cpp_utils::ExtractType(characteristic)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, beatmapLevel, beatmapDifficulty, characteristic);
}
// Autogenerated method: LobbyPlayersDataModel.SetPlayerGameplayModifiers
void GlobalNamespace::LobbyPlayersDataModel::SetPlayerGameplayModifiers(::Il2CppString* userId, GlobalNamespace::GameplayModifiers* modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::SetPlayerGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayerGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(modifiers)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, modifiers);
}
// Autogenerated method: LobbyPlayersDataModel.SetPlayerIsActive
void GlobalNamespace::LobbyPlayersDataModel::SetPlayerIsActive(::Il2CppString* userId, bool isActive, bool notifyChange) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::SetPlayerIsActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayerIsActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(isActive), ::il2cpp_utils::ExtractType(notifyChange)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, isActive, notifyChange);
}
// Autogenerated method: LobbyPlayersDataModel.SetPlayerIsReady
void GlobalNamespace::LobbyPlayersDataModel::SetPlayerIsReady(::Il2CppString* userId, bool isReady, bool notifyChange) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::SetPlayerIsReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayerIsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(isReady), ::il2cpp_utils::ExtractType(notifyChange)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, isReady, notifyChange);
}
// Autogenerated method: LobbyPlayersDataModel.SetPlayerIsInLobby
void GlobalNamespace::LobbyPlayersDataModel::SetPlayerIsInLobby(::Il2CppString* userId, bool isInLobby, bool notifyChange) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::SetPlayerIsInLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayerIsInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(isInLobby), ::il2cpp_utils::ExtractType(notifyChange)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, isInLobby, notifyChange);
}
// Autogenerated method: LobbyPlayersDataModel.SetPlayerIsPartyOwner
void GlobalNamespace::LobbyPlayersDataModel::SetPlayerIsPartyOwner(::Il2CppString* userId, bool isPartyOwner, bool notifyChange) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::SetPlayerIsPartyOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayerIsPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(notifyChange)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, isPartyOwner, notifyChange);
}
// Autogenerated method: LobbyPlayersDataModel.SetLocalPlayerBeatmapLevel
void GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerBeatmapLevel(::Il2CppString* levelId, GlobalNamespace::BeatmapDifficulty beatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO* characteristic) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerBeatmapLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerBeatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(beatmapDifficulty), ::il2cpp_utils::ExtractType(characteristic)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelId, beatmapDifficulty, characteristic);
}
// Autogenerated method: LobbyPlayersDataModel.ClearLocalPlayerBeatmapLevel
void GlobalNamespace::LobbyPlayersDataModel::ClearLocalPlayerBeatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::ClearLocalPlayerBeatmapLevel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearLocalPlayerBeatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.SetLocalPlayerGameplayModifiers
void GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerGameplayModifiers(GlobalNamespace::GameplayModifiers* modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(modifiers)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, modifiers);
}
// Autogenerated method: LobbyPlayersDataModel.ClearLocalPlayerGameplayModifiers
void GlobalNamespace::LobbyPlayersDataModel::ClearLocalPlayerGameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::ClearLocalPlayerGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearLocalPlayerGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.SetLocalPlayerIsActive
void GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsActive(bool isActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsActive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerIsActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isActive)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isActive);
}
// Autogenerated method: LobbyPlayersDataModel.SetLocalPlayerIsActive
void GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsActive(bool isActive, bool notifyChange) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerIsActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isActive), ::il2cpp_utils::ExtractType(notifyChange)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isActive, notifyChange);
}
// Autogenerated method: LobbyPlayersDataModel.SetLocalPlayerIsReady
void GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsReady(bool isReady) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsReady");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerIsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isReady)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isReady);
}
// Autogenerated method: LobbyPlayersDataModel.SetLocalPlayerIsReady
void GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsReady(bool isReady, bool notifyChange) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerIsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isReady), ::il2cpp_utils::ExtractType(notifyChange)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isReady, notifyChange);
}
// Autogenerated method: LobbyPlayersDataModel.SetLocalPlayerIsInLobby
void GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsInLobby(bool isInLobby) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsInLobby");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerIsInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isInLobby)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isInLobby);
}
// Autogenerated method: LobbyPlayersDataModel.SetLocalPlayerIsInLobby
void GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsInLobby(bool isInLobby, bool notifyChange) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::SetLocalPlayerIsInLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerIsInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isInLobby), ::il2cpp_utils::ExtractType(notifyChange)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isInLobby, notifyChange);
}
// Autogenerated method: LobbyPlayersDataModel.RequestKickPlayer
void GlobalNamespace::LobbyPlayersDataModel::RequestKickPlayer(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::RequestKickPlayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestKickPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.ClearData
void GlobalNamespace::LobbyPlayersDataModel::ClearData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::ClearData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.ClearRecommendations
void GlobalNamespace::LobbyPlayersDataModel::ClearRecommendations() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::ClearRecommendations");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearRecommendations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.Activate
void GlobalNamespace::LobbyPlayersDataModel::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::Activate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.Deactivate
void GlobalNamespace::LobbyPlayersDataModel::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::Deactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.Dispose
void GlobalNamespace::LobbyPlayersDataModel::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.SetOwnedSongPacks
void GlobalNamespace::LobbyPlayersDataModel::SetOwnedSongPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::SetOwnedSongPacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOwnedSongPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerGetRecommendedBeatmap
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetRecommendedBeatmap(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetRecommendedBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerGetRecommendedBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerGetRecommendedGameplayModifiers
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetRecommendedGameplayModifiers(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetRecommendedGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerGetRecommendedGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerGetIsInLobby
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetIsInLobby(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetIsInLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerGetIsInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerGetIsReady
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetIsReady(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetIsReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerGetIsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerRecommendBeatmap
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerRecommendBeatmap(::Il2CppString* userId, GlobalNamespace::BeatmapIdentifierNetSerializable* beatmapId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerRecommendBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerRecommendBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(beatmapId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, beatmapId);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerRecommendGameplayModifiers
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerRecommendGameplayModifiers(::Il2CppString* userId, GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerRecommendGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerRecommendGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(gameplayModifiers)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, gameplayModifiers);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerClearRecommendedGameplayModifiers
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerClearRecommendedGameplayModifiers(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerClearRecommendedGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerClearRecommendedGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerClearBeatmap
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerClearBeatmap(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerClearBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerClearBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerSetIsReady
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerSetIsReady(::Il2CppString* userId, bool isReady) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerSetIsReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerSetIsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(isReady)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, isReady);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerSetIsInLobby
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerSetIsInLobby(::Il2CppString* userId, bool isInLobby) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerSetIsInLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerSetIsInLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(isInLobby)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, isInLobby);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMultiplayerSessionManagerPlayerStateChanged
void GlobalNamespace::LobbyPlayersDataModel::HandleMultiplayerSessionManagerPlayerStateChanged(GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::HandleMultiplayerSessionManagerPlayerStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerSessionManagerPlayerStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, connectedPlayer);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMultiplayerSessionManagerPlayerConnected
void GlobalNamespace::LobbyPlayersDataModel::HandleMultiplayerSessionManagerPlayerConnected(GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::HandleMultiplayerSessionManagerPlayerConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerSessionManagerPlayerConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, connectedPlayer);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMultiplayerSessionManagerPlayerDisconnected
void GlobalNamespace::LobbyPlayersDataModel::HandleMultiplayerSessionManagerPlayerDisconnected(GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::HandleMultiplayerSessionManagerPlayerDisconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerSessionManagerPlayerDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, connectedPlayer);
}
// Autogenerated method: LobbyPlayersDataModel.NotifyModelChange
void GlobalNamespace::LobbyPlayersDataModel::NotifyModelChange(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::NotifyModelChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NotifyModelChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerGetOwnedSongPacks
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetOwnedSongPacks(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerGetOwnedSongPacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerGetOwnedSongPacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyPlayersDataModel.HandleMenuRpcManagerSetPlayersPermissionConfiguration
void GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerSetPlayersPermissionConfiguration(::Il2CppString* userId, GlobalNamespace::PlayersLobbyPermissionConfigurationNetSerializable* playersLobbyPermissionConfiguration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::HandleMenuRpcManagerSetPlayersPermissionConfiguration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuRpcManagerSetPlayersPermissionConfiguration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(playersLobbyPermissionConfiguration)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, playersLobbyPermissionConfiguration);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LobbyPlayersDataModel/<>c
#include "GlobalNamespace/LobbyPlayersDataModel_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly LobbyPlayersDataModel/<>c <>9
GlobalNamespace::LobbyPlayersDataModel::$$c* GlobalNamespace::LobbyPlayersDataModel::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::LobbyPlayersDataModel::$$c*>("", "LobbyPlayersDataModel/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly LobbyPlayersDataModel/<>c <>9
void GlobalNamespace::LobbyPlayersDataModel::$$c::_set_$$9(GlobalNamespace::LobbyPlayersDataModel::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "LobbyPlayersDataModel/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<IBeatmapLevelPack,System.String> <>9__51_0
System::Func_2<GlobalNamespace::IBeatmapLevelPack*, ::Il2CppString*>* GlobalNamespace::LobbyPlayersDataModel::$$c::_get_$$9__51_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::$$c::_get_$$9__51_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<GlobalNamespace::IBeatmapLevelPack*, ::Il2CppString*>*>("", "LobbyPlayersDataModel/<>c", "<>9__51_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<IBeatmapLevelPack,System.String> <>9__51_0
void GlobalNamespace::LobbyPlayersDataModel::$$c::_set_$$9__51_0(System::Func_2<GlobalNamespace::IBeatmapLevelPack*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::$$c::_set_$$9__51_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "LobbyPlayersDataModel/<>c", "<>9__51_0", value)));
}
// Autogenerated method: LobbyPlayersDataModel/<>c..cctor
void GlobalNamespace::LobbyPlayersDataModel::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LobbyPlayersDataModel/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel/<>c.<SetOwnedSongPacks>b__51_0
::Il2CppString* GlobalNamespace::LobbyPlayersDataModel::$$c::$SetOwnedSongPacks$b__51_0(GlobalNamespace::IBeatmapLevelPack* pack) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::$$c::<SetOwnedSongPacks>b__51_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetOwnedSongPacks>b__51_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pack)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, pack);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LobbyPlayersDataModel/<SetOwnedSongPacks>d__51
#include "GlobalNamespace/LobbyPlayersDataModel_-SetOwnedSongPacks-d__51.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__51::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__51::_get_$$1__state");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>(___internal__instance, "<>1__state")));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 <>1__state
void GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__51::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__51::_set_$$1__state");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>1__state", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncVoidMethodBuilder GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__51::_get_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__51::_get_$$t__builder");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Runtime::CompilerServices::AsyncVoidMethodBuilder>(___internal__instance, "<>t__builder")));
}
// Autogenerated instance field setter
// Set instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
void GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__51::_set_$$t__builder(System::Runtime::CompilerServices::AsyncVoidMethodBuilder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__51::_set_$$t__builder");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>t__builder", value));
}
// Autogenerated instance field getter
// Get instance field: public LobbyPlayersDataModel <>4__this
GlobalNamespace::LobbyPlayersDataModel* GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__51::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__51::_get_$$4__this");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::LobbyPlayersDataModel*>(___internal__instance, "<>4__this")));
}
// Autogenerated instance field setter
// Set instance field: public LobbyPlayersDataModel <>4__this
void GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__51::_set_$$4__this(GlobalNamespace::LobbyPlayersDataModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__51::_set_$$4__this");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>4__this", value));
}
// Autogenerated instance field getter
// Get instance field: private SongPackMask <songPackMask>5__2
GlobalNamespace::SongPackMask GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__51::_get_$songPackMask$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__51::_get_$songPackMask$5__2");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::SongPackMask>(___internal__instance, "<songPackMask>5__2")));
}
// Autogenerated instance field setter
// Set instance field: private SongPackMask <songPackMask>5__2
void GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__51::_set_$songPackMask$5__2(GlobalNamespace::SongPackMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__51::_set_$songPackMask$5__2");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<songPackMask>5__2", value));
}
// Autogenerated instance field getter
// Get instance field: private IBeatmapLevelPack[] <>7__wrap2
::Array<GlobalNamespace::IBeatmapLevelPack*>* GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__51::_get_$$7__wrap2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__51::_get_$$7__wrap2");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Array<GlobalNamespace::IBeatmapLevelPack*>*>(___internal__instance, "<>7__wrap2")));
}
// Autogenerated instance field setter
// Set instance field: private IBeatmapLevelPack[] <>7__wrap2
void GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__51::_set_$$7__wrap2(::Array<GlobalNamespace::IBeatmapLevelPack*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__51::_set_$$7__wrap2");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>7__wrap2", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>7__wrap3
int GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__51::_get_$$7__wrap3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__51::_get_$$7__wrap3");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>(___internal__instance, "<>7__wrap3")));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>7__wrap3
void GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__51::_set_$$7__wrap3(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__51::_set_$$7__wrap3");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>7__wrap3", value));
}
// Autogenerated instance field getter
// Get instance field: private IBeatmapLevelPack <dlcSongPack>5__5
GlobalNamespace::IBeatmapLevelPack* GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__51::_get_$dlcSongPack$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__51::_get_$dlcSongPack$5__5");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::IBeatmapLevelPack*>(___internal__instance, "<dlcSongPack>5__5")));
}
// Autogenerated instance field setter
// Set instance field: private IBeatmapLevelPack <dlcSongPack>5__5
void GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__51::_set_$dlcSongPack$5__5(GlobalNamespace::IBeatmapLevelPack* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__51::_set_$dlcSongPack$5__5");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<dlcSongPack>5__5", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/EntitlementStatus> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus> GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__51::_get_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__51::_get_$$u__1");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>>(___internal__instance, "<>u__1")));
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/EntitlementStatus> <>u__1
void GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__51::_set_$$u__1(System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__51::_set_$$u__1");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>u__1", value));
}
// Autogenerated method: LobbyPlayersDataModel/<SetOwnedSongPacks>d__51.MoveNext
void GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__51::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__51::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: LobbyPlayersDataModel/<SetOwnedSongPacks>d__51.SetStateMachine
void GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__51::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyPlayersDataModel::$SetOwnedSongPacks$d__51::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LobbyStateDataModel
#include "GlobalNamespace/LobbyStateDataModel.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: IUnifiedNetworkPlayerModel
#include "GlobalNamespace/IUnifiedNetworkPlayerModel.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
GlobalNamespace::IMultiplayerSessionManager* GlobalNamespace::LobbyStateDataModel::_get__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::_get__multiplayerSessionManager");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::IMultiplayerSessionManager*>(___internal__instance, "_multiplayerSessionManager"));
}
// Autogenerated instance field setter
// Set instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
void GlobalNamespace::LobbyStateDataModel::_set__multiplayerSessionManager(GlobalNamespace::IMultiplayerSessionManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::_set__multiplayerSessionManager");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_multiplayerSessionManager", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly IUnifiedNetworkPlayerModel _unifiedNetworkPlayerModel
GlobalNamespace::IUnifiedNetworkPlayerModel* GlobalNamespace::LobbyStateDataModel::_get__unifiedNetworkPlayerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::_get__unifiedNetworkPlayerModel");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::IUnifiedNetworkPlayerModel*>(___internal__instance, "_unifiedNetworkPlayerModel"));
}
// Autogenerated instance field setter
// Set instance field: private readonly IUnifiedNetworkPlayerModel _unifiedNetworkPlayerModel
void GlobalNamespace::LobbyStateDataModel::_set__unifiedNetworkPlayerModel(GlobalNamespace::IUnifiedNetworkPlayerModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::_set__unifiedNetworkPlayerModel");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_unifiedNetworkPlayerModel", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<IConnectedPlayer> _connectedPlayers
System::Collections::Generic::List_1<GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::LobbyStateDataModel::_get__connectedPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::_get__connectedPlayers");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<GlobalNamespace::IConnectedPlayer*>*>(___internal__instance, "_connectedPlayers"));
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.List`1<IConnectedPlayer> _connectedPlayers
void GlobalNamespace::LobbyStateDataModel::_set__connectedPlayers(System::Collections::Generic::List_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::_set__connectedPlayers");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_connectedPlayers", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,IConnectedPlayer> _connectedPlayersById
System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::LobbyStateDataModel::_get__connectedPlayersById() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::_get__connectedPlayersById");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::IConnectedPlayer*>*>(___internal__instance, "_connectedPlayersById")));
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.Dictionary`2<System.String,IConnectedPlayer> _connectedPlayersById
void GlobalNamespace::LobbyStateDataModel::_set__connectedPlayersById(System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::_set__connectedPlayersById");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_connectedPlayersById", value));
}
// Autogenerated instance field getter
// Get instance field: private GameplayServerMode _gameServerMode
GlobalNamespace::GameplayServerMode GlobalNamespace::LobbyStateDataModel::_get__gameServerMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::_get__gameServerMode");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayServerMode>(___internal__instance, "_gameServerMode"));
}
// Autogenerated instance field setter
// Set instance field: private GameplayServerMode _gameServerMode
void GlobalNamespace::LobbyStateDataModel::_set__gameServerMode(GlobalNamespace::GameplayServerMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::_set__gameServerMode");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_gameServerMode", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<IConnectedPlayer> playerConnectedEvent
System::Action_1<GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::LobbyStateDataModel::_get_playerConnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::_get_playerConnectedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<GlobalNamespace::IConnectedPlayer*>*>(___internal__instance, "playerConnectedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<IConnectedPlayer> playerConnectedEvent
void GlobalNamespace::LobbyStateDataModel::_set_playerConnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::_set_playerConnectedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "playerConnectedEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<IConnectedPlayer> playerDisconnectedEvent
System::Action_1<GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::LobbyStateDataModel::_get_playerDisconnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::_get_playerDisconnectedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<GlobalNamespace::IConnectedPlayer*>*>(___internal__instance, "playerDisconnectedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<IConnectedPlayer> playerDisconnectedEvent
void GlobalNamespace::LobbyStateDataModel::_set_playerDisconnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::_set_playerDisconnectedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "playerDisconnectedEvent", value));
}
// Autogenerated method: LobbyStateDataModel.get_isConnected
bool GlobalNamespace::LobbyStateDataModel::get_isConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::get_isConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LobbyStateDataModel.get_localPlayer
GlobalNamespace::IConnectedPlayer* GlobalNamespace::LobbyStateDataModel::get_localPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::get_localPlayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: LobbyStateDataModel.get_connectedPlayers
System::Collections::Generic::List_1<GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::LobbyStateDataModel::get_connectedPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::get_connectedPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<GlobalNamespace::IConnectedPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: LobbyStateDataModel.get_rawConnectedPlayers
System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::IConnectedPlayer*>* GlobalNamespace::LobbyStateDataModel::get_rawConnectedPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::get_rawConnectedPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rawConnectedPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::IConnectedPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: LobbyStateDataModel.get_gameServerMode
GlobalNamespace::GameplayServerMode GlobalNamespace::LobbyStateDataModel::get_gameServerMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::get_gameServerMode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameServerMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayServerMode, false>(this, ___internal__method);
}
// Autogenerated method: LobbyStateDataModel.get_maxPartySize
int GlobalNamespace::LobbyStateDataModel::get_maxPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::get_maxPartySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LobbyStateDataModel.add_playerConnectedEvent
void GlobalNamespace::LobbyStateDataModel::add_playerConnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::add_playerConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyStateDataModel.remove_playerConnectedEvent
void GlobalNamespace::LobbyStateDataModel::remove_playerConnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::remove_playerConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyStateDataModel.add_playerDisconnectedEvent
void GlobalNamespace::LobbyStateDataModel::add_playerDisconnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::add_playerDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyStateDataModel.remove_playerDisconnectedEvent
void GlobalNamespace::LobbyStateDataModel::remove_playerDisconnectedEvent(System::Action_1<GlobalNamespace::IConnectedPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::remove_playerDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LobbyStateDataModel.Activate
void GlobalNamespace::LobbyStateDataModel::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::Activate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyStateDataModel.Deactivate
void GlobalNamespace::LobbyStateDataModel::Deactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::Deactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyStateDataModel.Dispose
void GlobalNamespace::LobbyStateDataModel::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LobbyStateDataModel.GetPlayerById
GlobalNamespace::IConnectedPlayer* GlobalNamespace::LobbyStateDataModel::GetPlayerById(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::GetPlayerById");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayerById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method, userId);
}
// Autogenerated method: LobbyStateDataModel.HandleMultiplayerSessionManagerPlayerConnected
void GlobalNamespace::LobbyStateDataModel::HandleMultiplayerSessionManagerPlayerConnected(GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::HandleMultiplayerSessionManagerPlayerConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerSessionManagerPlayerConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: LobbyStateDataModel.HandleMultiplayerSessionManagerPlayerDisconnected
void GlobalNamespace::LobbyStateDataModel::HandleMultiplayerSessionManagerPlayerDisconnected(GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LobbyStateDataModel::HandleMultiplayerSessionManagerPlayerDisconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerSessionManagerPlayerDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, player);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerLobbyConnectionController
#include "GlobalNamespace/MultiplayerLobbyConnectionController.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: CreateServerFormData
#include "GlobalNamespace/CreateServerFormData.hpp"
// Including type: SelectMultiplayerLobbyDestination
#include "GlobalNamespace/SelectMultiplayerLobbyDestination.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
// Including type: UnifiedNetworkPlayerModel/JoinMatchmakingPartyConfig
#include "GlobalNamespace/UnifiedNetworkPlayerModel_JoinMatchmakingPartyConfig.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
GlobalNamespace::IMultiplayerSessionManager* GlobalNamespace::MultiplayerLobbyConnectionController::_get__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::_get__multiplayerSessionManager");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::IMultiplayerSessionManager*>(___internal__instance, "_multiplayerSessionManager"));
}
// Autogenerated instance field setter
// Set instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
void GlobalNamespace::MultiplayerLobbyConnectionController::_set__multiplayerSessionManager(GlobalNamespace::IMultiplayerSessionManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::_set__multiplayerSessionManager");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_multiplayerSessionManager", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly IUnifiedNetworkPlayerModel _unifiedNetworkPlayerModel
GlobalNamespace::IUnifiedNetworkPlayerModel* GlobalNamespace::MultiplayerLobbyConnectionController::_get__unifiedNetworkPlayerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::_get__unifiedNetworkPlayerModel");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::IUnifiedNetworkPlayerModel*>(___internal__instance, "_unifiedNetworkPlayerModel"));
}
// Autogenerated instance field setter
// Set instance field: private readonly IUnifiedNetworkPlayerModel _unifiedNetworkPlayerModel
void GlobalNamespace::MultiplayerLobbyConnectionController::_set__unifiedNetworkPlayerModel(GlobalNamespace::IUnifiedNetworkPlayerModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::_set__unifiedNetworkPlayerModel");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_unifiedNetworkPlayerModel", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action connectionSuccessEvent
System::Action* GlobalNamespace::MultiplayerLobbyConnectionController::_get_connectionSuccessEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::_get_connectionSuccessEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>(___internal__instance, "connectionSuccessEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action connectionSuccessEvent
void GlobalNamespace::MultiplayerLobbyConnectionController::_set_connectionSuccessEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::_set_connectionSuccessEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "connectionSuccessEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<MultiplayerLobbyConnectionController/LobbyConnectionType,ConnectionFailedReason> connectionFailedEvent
System::Action_2<GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType, GlobalNamespace::ConnectionFailedReason>* GlobalNamespace::MultiplayerLobbyConnectionController::_get_connectionFailedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::_get_connectionFailedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Action_2<GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType, GlobalNamespace::ConnectionFailedReason>*>(___internal__instance, "connectionFailedEvent")));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`2<MultiplayerLobbyConnectionController/LobbyConnectionType,ConnectionFailedReason> connectionFailedEvent
void GlobalNamespace::MultiplayerLobbyConnectionController::_set_connectionFailedEvent(System::Action_2<GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType, GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::_set_connectionFailedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "connectionFailedEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerLobbyConnectionController/LobbyConnectionState <connectionState>k__BackingField
GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState GlobalNamespace::MultiplayerLobbyConnectionController::_get_$connectionState$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::_get_$connectionState$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState>(___internal__instance, "<connectionState>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private MultiplayerLobbyConnectionController/LobbyConnectionState <connectionState>k__BackingField
void GlobalNamespace::MultiplayerLobbyConnectionController::_set_$connectionState$k__BackingField(GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::_set_$connectionState$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<connectionState>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private MultiplayerLobbyConnectionController/LobbyConnectionType <connectionType>k__BackingField
GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType GlobalNamespace::MultiplayerLobbyConnectionController::_get_$connectionType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::_get_$connectionType$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType>(___internal__instance, "<connectionType>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private MultiplayerLobbyConnectionController/LobbyConnectionType <connectionType>k__BackingField
void GlobalNamespace::MultiplayerLobbyConnectionController::_set_$connectionType$k__BackingField(GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::_set_$connectionType$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<connectionType>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private ConnectionFailedReason <connectionFailedReason>k__BackingField
GlobalNamespace::ConnectionFailedReason GlobalNamespace::MultiplayerLobbyConnectionController::_get_$connectionFailedReason$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::_get_$connectionFailedReason$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::ConnectionFailedReason>(___internal__instance, "<connectionFailedReason>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private ConnectionFailedReason <connectionFailedReason>k__BackingField
void GlobalNamespace::MultiplayerLobbyConnectionController::_set_$connectionFailedReason$k__BackingField(GlobalNamespace::ConnectionFailedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::_set_$connectionFailedReason$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<connectionFailedReason>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private UnifiedNetworkPlayerModel/JoinMatchmakingPartyConfig _partyConfig
GlobalNamespace::UnifiedNetworkPlayerModel::JoinMatchmakingPartyConfig* GlobalNamespace::MultiplayerLobbyConnectionController::_get__partyConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::_get__partyConfig");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::UnifiedNetworkPlayerModel::JoinMatchmakingPartyConfig*>(___internal__instance, "_partyConfig"));
}
// Autogenerated instance field setter
// Set instance field: private UnifiedNetworkPlayerModel/JoinMatchmakingPartyConfig _partyConfig
void GlobalNamespace::MultiplayerLobbyConnectionController::_set__partyConfig(GlobalNamespace::UnifiedNetworkPlayerModel::JoinMatchmakingPartyConfig* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::_set__partyConfig");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_partyConfig", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _retryAttemptsLeft
int GlobalNamespace::MultiplayerLobbyConnectionController::_get__retryAttemptsLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::_get__retryAttemptsLeft");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "_retryAttemptsLeft"));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _retryAttemptsLeft
void GlobalNamespace::MultiplayerLobbyConnectionController::_set__retryAttemptsLeft(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::_set__retryAttemptsLeft");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_retryAttemptsLeft", value));
}
// Autogenerated method: MultiplayerLobbyConnectionController.get_connectionState
GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState GlobalNamespace::MultiplayerLobbyConnectionController::get_connectionState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::get_connectionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyConnectionController.set_connectionState
void GlobalNamespace::MultiplayerLobbyConnectionController::set_connectionState(GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::set_connectionState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_connectionState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLobbyConnectionController.get_connectionType
GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType GlobalNamespace::MultiplayerLobbyConnectionController::get_connectionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::get_connectionType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyConnectionController.set_connectionType
void GlobalNamespace::MultiplayerLobbyConnectionController::set_connectionType(GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::set_connectionType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_connectionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLobbyConnectionController.get_connectionFailedReason
GlobalNamespace::ConnectionFailedReason GlobalNamespace::MultiplayerLobbyConnectionController::get_connectionFailedReason() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::get_connectionFailedReason");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectionFailedReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ConnectionFailedReason, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyConnectionController.set_connectionFailedReason
void GlobalNamespace::MultiplayerLobbyConnectionController::set_connectionFailedReason(GlobalNamespace::ConnectionFailedReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::set_connectionFailedReason");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_connectionFailedReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLobbyConnectionController.add_connectionSuccessEvent
void GlobalNamespace::MultiplayerLobbyConnectionController::add_connectionSuccessEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::add_connectionSuccessEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectionSuccessEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLobbyConnectionController.remove_connectionSuccessEvent
void GlobalNamespace::MultiplayerLobbyConnectionController::remove_connectionSuccessEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::remove_connectionSuccessEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectionSuccessEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLobbyConnectionController.add_connectionFailedEvent
void GlobalNamespace::MultiplayerLobbyConnectionController::add_connectionFailedEvent(System::Action_2<GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType, GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::add_connectionFailedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectionFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLobbyConnectionController.remove_connectionFailedEvent
void GlobalNamespace::MultiplayerLobbyConnectionController::remove_connectionFailedEvent(System::Action_2<GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType, GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::remove_connectionFailedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectionFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLobbyConnectionController.CreateParty
void GlobalNamespace::MultiplayerLobbyConnectionController::CreateParty(GlobalNamespace::CreateServerFormData data) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::CreateParty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateParty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: MultiplayerLobbyConnectionController.ConnectToParty
void GlobalNamespace::MultiplayerLobbyConnectionController::ConnectToParty(::Il2CppString* serverCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::ConnectToParty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToParty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverCode)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serverCode);
}
// Autogenerated method: MultiplayerLobbyConnectionController.CreateOrConnectToDestinationParty
void GlobalNamespace::MultiplayerLobbyConnectionController::CreateOrConnectToDestinationParty(GlobalNamespace::SelectMultiplayerLobbyDestination* lobbyDestination) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::CreateOrConnectToDestinationParty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateOrConnectToDestinationParty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lobbyDestination)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lobbyDestination);
}
// Autogenerated method: MultiplayerLobbyConnectionController.ConnectToServer
void GlobalNamespace::MultiplayerLobbyConnectionController::ConnectToServer(GlobalNamespace::INetworkPlayer* server, ::Il2CppString* password) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::ConnectToServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(server), ::il2cpp_utils::ExtractType(password)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, server, password);
}
// Autogenerated method: MultiplayerLobbyConnectionController.ConnectToMatchmaking
void GlobalNamespace::MultiplayerLobbyConnectionController::ConnectToMatchmaking(GlobalNamespace::BeatmapDifficultyMask beatmapDifficultyMask, GlobalNamespace::SongPackMask songPackMask, bool allowSongSelection) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::ConnectToMatchmaking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToMatchmaking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapDifficultyMask), ::il2cpp_utils::ExtractType(songPackMask), ::il2cpp_utils::ExtractType(allowSongSelection)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapDifficultyMask, songPackMask, allowSongSelection);
}
// Autogenerated method: MultiplayerLobbyConnectionController.LeaveLobby
void GlobalNamespace::MultiplayerLobbyConnectionController::LeaveLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::LeaveLobby");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LeaveLobby", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyConnectionController.ClearCurrentConnection
void GlobalNamespace::MultiplayerLobbyConnectionController::ClearCurrentConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::ClearCurrentConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearCurrentConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyConnectionController.HandleMultiplayerSessionManagerConnected
void GlobalNamespace::MultiplayerLobbyConnectionController::HandleMultiplayerSessionManagerConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::HandleMultiplayerSessionManagerConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerSessionManagerConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLobbyConnectionController.HandleMultiplayerSessionManagerConnectionFailed
void GlobalNamespace::MultiplayerLobbyConnectionController::HandleMultiplayerSessionManagerConnectionFailed(GlobalNamespace::ConnectionFailedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::HandleMultiplayerSessionManagerConnectionFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerSessionManagerConnectionFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reason)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reason);
}
// Autogenerated method: MultiplayerLobbyConnectionController.HandleMultiplayerSessionManagerConnectionFailedWithRetry
void GlobalNamespace::MultiplayerLobbyConnectionController::HandleMultiplayerSessionManagerConnectionFailedWithRetry(GlobalNamespace::ConnectionFailedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::HandleMultiplayerSessionManagerConnectionFailedWithRetry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMultiplayerSessionManagerConnectionFailedWithRetry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reason)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reason);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyConnectionController/LobbyConnectionState
#include "GlobalNamespace/MultiplayerLobbyConnectionController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyConnectionController/LobbyConnectionState None
GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState>("", "MultiplayerLobbyConnectionController/LobbyConnectionState", "None"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyConnectionController/LobbyConnectionState None
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_None(GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyConnectionController/LobbyConnectionState", "None", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyConnectionController/LobbyConnectionState Connecting
GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_Connecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_Connecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState>("", "MultiplayerLobbyConnectionController/LobbyConnectionState", "Connecting"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyConnectionController/LobbyConnectionState Connecting
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_Connecting(GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_Connecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyConnectionController/LobbyConnectionState", "Connecting", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyConnectionController/LobbyConnectionState Connected
GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_Connected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState>("", "MultiplayerLobbyConnectionController/LobbyConnectionState", "Connected"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyConnectionController/LobbyConnectionState Connected
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_Connected(GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_Connected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyConnectionController/LobbyConnectionState", "Connected", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyConnectionController/LobbyConnectionState ConnectionFailed
GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_ConnectionFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_ConnectionFailed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState>("", "MultiplayerLobbyConnectionController/LobbyConnectionState", "ConnectionFailed"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyConnectionController/LobbyConnectionState ConnectionFailed
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_ConnectionFailed(GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_ConnectionFailed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyConnectionController/LobbyConnectionState", "ConnectionFailed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_get_value__");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "value__"));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionState::_set_value__");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "value__", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLobbyConnectionController/LobbyConnectionType
#include "GlobalNamespace/MultiplayerLobbyConnectionController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyConnectionController/LobbyConnectionType None
GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType>("", "MultiplayerLobbyConnectionController/LobbyConnectionType", "None"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyConnectionController/LobbyConnectionType None
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_None(GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyConnectionController/LobbyConnectionType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyConnectionController/LobbyConnectionType PartyHost
GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_PartyHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_PartyHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType>("", "MultiplayerLobbyConnectionController/LobbyConnectionType", "PartyHost"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyConnectionController/LobbyConnectionType PartyHost
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_PartyHost(GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_PartyHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyConnectionController/LobbyConnectionType", "PartyHost", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyConnectionController/LobbyConnectionType PartyClient
GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_PartyClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_PartyClient");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType>("", "MultiplayerLobbyConnectionController/LobbyConnectionType", "PartyClient"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyConnectionController/LobbyConnectionType PartyClient
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_PartyClient(GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_PartyClient");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyConnectionController/LobbyConnectionType", "PartyClient", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerLobbyConnectionController/LobbyConnectionType QuickPlay
GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_QuickPlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_QuickPlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType>("", "MultiplayerLobbyConnectionController/LobbyConnectionType", "QuickPlay"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerLobbyConnectionController/LobbyConnectionType QuickPlay
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_QuickPlay(GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_QuickPlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerLobbyConnectionController/LobbyConnectionType", "QuickPlay", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_get_value__");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "value__"));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLobbyConnectionController::LobbyConnectionType::_set_value__");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "value__", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerModeSettings
#include "GlobalNamespace/MultiplayerModeSettings.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 createServerPlayersCount
int GlobalNamespace::MultiplayerModeSettings::_get_createServerPlayersCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSettings::_get_createServerPlayersCount");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "createServerPlayersCount"));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 createServerPlayersCount
void GlobalNamespace::MultiplayerModeSettings::_set_createServerPlayersCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSettings::_set_createServerPlayersCount");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "createServerPlayersCount", value));
}
// Autogenerated instance field getter
// Get instance field: public BeatmapDifficultyMask quickPlayBeatmapDifficulty
GlobalNamespace::BeatmapDifficultyMask GlobalNamespace::MultiplayerModeSettings::_get_quickPlayBeatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSettings::_get_quickPlayBeatmapDifficulty");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapDifficultyMask>(___internal__instance, "quickPlayBeatmapDifficulty"));
}
// Autogenerated instance field setter
// Set instance field: public BeatmapDifficultyMask quickPlayBeatmapDifficulty
void GlobalNamespace::MultiplayerModeSettings::_set_quickPlayBeatmapDifficulty(GlobalNamespace::BeatmapDifficultyMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSettings::_set_quickPlayBeatmapDifficulty");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "quickPlayBeatmapDifficulty", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String quickPlaySongPackMaskSerializedName
::Il2CppString* GlobalNamespace::MultiplayerModeSettings::_get_quickPlaySongPackMaskSerializedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSettings::_get_quickPlaySongPackMaskSerializedName");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "quickPlaySongPackMaskSerializedName"));
}
// Autogenerated instance field setter
// Set instance field: public System.String quickPlaySongPackMaskSerializedName
void GlobalNamespace::MultiplayerModeSettings::_set_quickPlaySongPackMaskSerializedName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSettings::_set_quickPlaySongPackMaskSerializedName");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "quickPlaySongPackMaskSerializedName", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean quickPlayEnableLevelSelection
bool GlobalNamespace::MultiplayerModeSettings::_get_quickPlayEnableLevelSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSettings::_get_quickPlayEnableLevelSelection");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "quickPlayEnableLevelSelection"));
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean quickPlayEnableLevelSelection
void GlobalNamespace::MultiplayerModeSettings::_set_quickPlayEnableLevelSelection(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSettings::_set_quickPlayEnableLevelSelection");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "quickPlayEnableLevelSelection", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerUnavailableReason
#include "GlobalNamespace/MultiplayerUnavailableReason.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerUnavailableReason NetworkUnreachable
GlobalNamespace::MultiplayerUnavailableReason GlobalNamespace::MultiplayerUnavailableReason::_get_NetworkUnreachable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReason::_get_NetworkUnreachable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerUnavailableReason>("", "MultiplayerUnavailableReason", "NetworkUnreachable"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerUnavailableReason NetworkUnreachable
void GlobalNamespace::MultiplayerUnavailableReason::_set_NetworkUnreachable(GlobalNamespace::MultiplayerUnavailableReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReason::_set_NetworkUnreachable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReason", "NetworkUnreachable", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerUnavailableReason UpdateRequired
GlobalNamespace::MultiplayerUnavailableReason GlobalNamespace::MultiplayerUnavailableReason::_get_UpdateRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReason::_get_UpdateRequired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerUnavailableReason>("", "MultiplayerUnavailableReason", "UpdateRequired"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerUnavailableReason UpdateRequired
void GlobalNamespace::MultiplayerUnavailableReason::_set_UpdateRequired(GlobalNamespace::MultiplayerUnavailableReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReason::_set_UpdateRequired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReason", "UpdateRequired", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerUnavailableReason ServerOffline
GlobalNamespace::MultiplayerUnavailableReason GlobalNamespace::MultiplayerUnavailableReason::_get_ServerOffline() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReason::_get_ServerOffline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerUnavailableReason>("", "MultiplayerUnavailableReason", "ServerOffline"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerUnavailableReason ServerOffline
void GlobalNamespace::MultiplayerUnavailableReason::_set_ServerOffline(GlobalNamespace::MultiplayerUnavailableReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReason::_set_ServerOffline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReason", "ServerOffline", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerUnavailableReason MaintenanceMode
GlobalNamespace::MultiplayerUnavailableReason GlobalNamespace::MultiplayerUnavailableReason::_get_MaintenanceMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReason::_get_MaintenanceMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerUnavailableReason>("", "MultiplayerUnavailableReason", "MaintenanceMode"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerUnavailableReason MaintenanceMode
void GlobalNamespace::MultiplayerUnavailableReason::_set_MaintenanceMode(GlobalNamespace::MultiplayerUnavailableReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReason::_set_MaintenanceMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReason", "MaintenanceMode", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::MultiplayerUnavailableReason::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReason::_get_value__");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "value__"));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::MultiplayerUnavailableReason::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReason::_set_value__");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "value__", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerUnavailableReasonMethods
#include "GlobalNamespace/MultiplayerUnavailableReasonMethods.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: MultiplayerUnavailableReason
#include "GlobalNamespace/MultiplayerUnavailableReason.hpp"
// Including type: MasterServerAvailabilityData
#include "GlobalNamespace/MasterServerAvailabilityData.hpp"
// Including type: Polyglot.Language
#include "Polyglot/Language.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [LocalizationKeyAttribute] Offset: 0xE020BC
// Autogenerated static field getter
// Get static field: static private System.String kMultiplayerUnavailableServerOffline
::Il2CppString* GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableServerOffline() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableServerOffline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableServerOffline"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMultiplayerUnavailableServerOffline
void GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableServerOffline(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableServerOffline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableServerOffline", value));
}
// [LocalizationKeyAttribute] Offset: 0xE020CC
// Autogenerated static field getter
// Get static field: static private System.String kMultiplayerUnavailableUpdateRequired
::Il2CppString* GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableUpdateRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableUpdateRequired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableUpdateRequired"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMultiplayerUnavailableUpdateRequired
void GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableUpdateRequired(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableUpdateRequired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableUpdateRequired", value));
}
// [LocalizationKeyAttribute] Offset: 0xE020DC
// Autogenerated static field getter
// Get static field: static private System.String kMultiplayerUnavailableMaintenanceMode
::Il2CppString* GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableMaintenanceMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableMaintenanceMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableMaintenanceMode"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMultiplayerUnavailableMaintenanceMode
void GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableMaintenanceMode(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableMaintenanceMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableMaintenanceMode", value));
}
// [LocalizationKeyAttribute] Offset: 0xE020EC
// Autogenerated static field getter
// Get static field: static private System.String kMultiplayerUnavailableTryAgain
::Il2CppString* GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableTryAgain() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReasonMethods::_get_kMultiplayerUnavailableTryAgain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableTryAgain"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMultiplayerUnavailableTryAgain
void GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableTryAgain(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReasonMethods::_set_kMultiplayerUnavailableTryAgain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerUnavailableReasonMethods", "kMultiplayerUnavailableTryAgain", value));
}
// Autogenerated method: MultiplayerUnavailableReasonMethods.LocalizedKey
::Il2CppString* GlobalNamespace::MultiplayerUnavailableReasonMethods::LocalizedKey(GlobalNamespace::MultiplayerUnavailableReason multiplayerUnavailableReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReasonMethods::LocalizedKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MultiplayerUnavailableReasonMethods", "LocalizedKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiplayerUnavailableReason)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, multiplayerUnavailableReason);
}
// Autogenerated method: MultiplayerUnavailableReasonMethods.ErrorCode
::Il2CppString* GlobalNamespace::MultiplayerUnavailableReasonMethods::ErrorCode(GlobalNamespace::MultiplayerUnavailableReason multiplayerUnavailableReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReasonMethods::ErrorCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MultiplayerUnavailableReasonMethods", "ErrorCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiplayerUnavailableReason)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, multiplayerUnavailableReason);
}
// Autogenerated method: MultiplayerUnavailableReasonMethods.TryGetMultiplayerUnavailableReason
bool GlobalNamespace::MultiplayerUnavailableReasonMethods::TryGetMultiplayerUnavailableReason(GlobalNamespace::MasterServerAvailabilityData* data, GlobalNamespace::MultiplayerUnavailableReason& reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReasonMethods::TryGetMultiplayerUnavailableReason");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MultiplayerUnavailableReasonMethods", "TryGetMultiplayerUnavailableReason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MultiplayerUnavailableReason&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, data, reason);
}
// Autogenerated method: MultiplayerUnavailableReasonMethods.GetLocalizedMessage
::Il2CppString* GlobalNamespace::MultiplayerUnavailableReasonMethods::GetLocalizedMessage(GlobalNamespace::MasterServerAvailabilityData* data, Polyglot::Language language) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReasonMethods::GetLocalizedMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MultiplayerUnavailableReasonMethods", "GetLocalizedMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(language)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, data, language);
}
// Autogenerated method: MultiplayerUnavailableReasonMethods.VersionLessThan
bool GlobalNamespace::MultiplayerUnavailableReasonMethods::VersionLessThan(::Il2CppString* currentVersion, ::Il2CppString* minVersion) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerUnavailableReasonMethods::VersionLessThan");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MultiplayerUnavailableReasonMethods", "VersionLessThan", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentVersion), ::il2cpp_utils::ExtractType(minVersion)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, currentVersion, minVersion);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SongPackMaskModelSO
#include "GlobalNamespace/SongPackMaskModelSO.hpp"
// Including type: SongPackMaskModelSO/SongPackDataType
#include "GlobalNamespace/SongPackMaskModelSO_SongPackDataType.hpp"
// Including type: SongPackMaskModelSO/SongPackMaskItem
#include "GlobalNamespace/SongPackMaskModelSO_SongPackMaskItem.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: BeatmapLevelPackCollectionSO
#include "GlobalNamespace/BeatmapLevelPackCollectionSO.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> _defaultSongPackMaskItems
System::Collections::Generic::List_1<::Il2CppString*>* GlobalNamespace::SongPackMaskModelSO::_get__defaultSongPackMaskItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::_get__defaultSongPackMaskItems");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<::Il2CppString*>*>(___internal__instance, "_defaultSongPackMaskItems"));
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.List`1<System.String> _defaultSongPackMaskItems
void GlobalNamespace::SongPackMaskModelSO::_set__defaultSongPackMaskItems(System::Collections::Generic::List_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::_set__defaultSongPackMaskItems");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_defaultSongPackMaskItems", value));
}
// Autogenerated instance field getter
// Get instance field: private SongPackMaskModelSO/SongPackMaskItem[] _customSongPackMaskItems
::Array<GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem*>* GlobalNamespace::SongPackMaskModelSO::_get__customSongPackMaskItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::_get__customSongPackMaskItems");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem*>*>(___internal__instance, "_customSongPackMaskItems"));
}
// Autogenerated instance field setter
// Set instance field: private SongPackMaskModelSO/SongPackMaskItem[] _customSongPackMaskItems
void GlobalNamespace::SongPackMaskModelSO::_set__customSongPackMaskItems(::Array<GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::_set__customSongPackMaskItems");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_customSongPackMaskItems", value));
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelPackCollectionSO _ostAndExtrasCollection
GlobalNamespace::BeatmapLevelPackCollectionSO* GlobalNamespace::SongPackMaskModelSO::_get__ostAndExtrasCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::_get__ostAndExtrasCollection");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapLevelPackCollectionSO*>(___internal__instance, "_ostAndExtrasCollection"));
}
// Autogenerated instance field setter
// Set instance field: private BeatmapLevelPackCollectionSO _ostAndExtrasCollection
void GlobalNamespace::SongPackMaskModelSO::_set__ostAndExtrasCollection(GlobalNamespace::BeatmapLevelPackCollectionSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::_set__ostAndExtrasCollection");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_ostAndExtrasCollection", value));
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelPackCollectionSO _dlcCollection
GlobalNamespace::BeatmapLevelPackCollectionSO* GlobalNamespace::SongPackMaskModelSO::_get__dlcCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::_get__dlcCollection");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapLevelPackCollectionSO*>(___internal__instance, "_dlcCollection"));
}
// Autogenerated instance field setter
// Set instance field: private BeatmapLevelPackCollectionSO _dlcCollection
void GlobalNamespace::SongPackMaskModelSO::_set__dlcCollection(GlobalNamespace::BeatmapLevelPackCollectionSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::_set__dlcCollection");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_dlcCollection", value));
}
// Autogenerated instance field getter
// Get instance field: private Polyglot.Language _currentLocalizedLanguage
Polyglot::Language GlobalNamespace::SongPackMaskModelSO::_get__currentLocalizedLanguage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::_get__currentLocalizedLanguage");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Polyglot::Language>(___internal__instance, "_currentLocalizedLanguage"));
}
// Autogenerated instance field setter
// Set instance field: private Polyglot.Language _currentLocalizedLanguage
void GlobalNamespace::SongPackMaskModelSO::_set__currentLocalizedLanguage(Polyglot::Language value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::_set__currentLocalizedLanguage");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_currentLocalizedLanguage", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,System.ValueTuple`2<System.String,System.Boolean>> _songPackSerializedNameToLocalizedNameDict
System::Collections::Generic::Dictionary_2<::Il2CppString*, System::ValueTuple_2<::Il2CppString*, bool>>* GlobalNamespace::SongPackMaskModelSO::_get__songPackSerializedNameToLocalizedNameDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::_get__songPackSerializedNameToLocalizedNameDict");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<::Il2CppString*, System::ValueTuple_2<::Il2CppString*, bool>>*>(___internal__instance, "_songPackSerializedNameToLocalizedNameDict")));
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.Dictionary`2<System.String,System.ValueTuple`2<System.String,System.Boolean>> _songPackSerializedNameToLocalizedNameDict
void GlobalNamespace::SongPackMaskModelSO::_set__songPackSerializedNameToLocalizedNameDict(System::Collections::Generic::Dictionary_2<::Il2CppString*, System::ValueTuple_2<::Il2CppString*, bool>>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::_set__songPackSerializedNameToLocalizedNameDict");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_songPackSerializedNameToLocalizedNameDict", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,SongPackMask> _songPackSerializedNameToMaskDict
System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::SongPackMask>* GlobalNamespace::SongPackMaskModelSO::_get__songPackSerializedNameToMaskDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::_get__songPackSerializedNameToMaskDict");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::SongPackMask>*>(___internal__instance, "_songPackSerializedNameToMaskDict")));
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.Dictionary`2<System.String,SongPackMask> _songPackSerializedNameToMaskDict
void GlobalNamespace::SongPackMaskModelSO::_set__songPackSerializedNameToMaskDict(System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::SongPackMask>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::_set__songPackSerializedNameToMaskDict");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_songPackSerializedNameToMaskDict", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<SongPackMask,System.String> _songPackMaskToSerializedNameDict
System::Collections::Generic::Dictionary_2<GlobalNamespace::SongPackMask, ::Il2CppString*>* GlobalNamespace::SongPackMaskModelSO::_get__songPackMaskToSerializedNameDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::_get__songPackMaskToSerializedNameDict");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<GlobalNamespace::SongPackMask, ::Il2CppString*>*>(___internal__instance, "_songPackMaskToSerializedNameDict")));
}
// Autogenerated instance field setter
// Set instance field: private System.Collections.Generic.Dictionary`2<SongPackMask,System.String> _songPackMaskToSerializedNameDict
void GlobalNamespace::SongPackMaskModelSO::_set__songPackMaskToSerializedNameDict(System::Collections::Generic::Dictionary_2<GlobalNamespace::SongPackMask, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::_set__songPackMaskToSerializedNameDict");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_songPackMaskToSerializedNameDict", value));
}
// Autogenerated method: SongPackMaskModelSO.get_defaultSongPackMaskItems
System::Collections::Generic::List_1<::Il2CppString*>* GlobalNamespace::SongPackMaskModelSO::get_defaultSongPackMaskItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::get_defaultSongPackMaskItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_defaultSongPackMaskItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: SongPackMaskModelSO.get_customSongPackMaskItems
::Array<GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem*>* GlobalNamespace::SongPackMaskModelSO::get_customSongPackMaskItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::get_customSongPackMaskItems");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_customSongPackMaskItems", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem*>*, false>(this, ___internal__method);
}
// Autogenerated method: SongPackMaskModelSO.get_ostAndExtrasCollection
GlobalNamespace::BeatmapLevelPackCollectionSO* GlobalNamespace::SongPackMaskModelSO::get_ostAndExtrasCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::get_ostAndExtrasCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ostAndExtrasCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapLevelPackCollectionSO*, false>(this, ___internal__method);
}
// Autogenerated method: SongPackMaskModelSO.get_dlcCollection
GlobalNamespace::BeatmapLevelPackCollectionSO* GlobalNamespace::SongPackMaskModelSO::get_dlcCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::get_dlcCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_dlcCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapLevelPackCollectionSO*, false>(this, ___internal__method);
}
// Autogenerated method: SongPackMaskModelSO.ToLocalizedName
::Il2CppString* GlobalNamespace::SongPackMaskModelSO::ToLocalizedName(::Il2CppString* serializedName) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::ToLocalizedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToLocalizedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializedName)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, serializedName);
}
// Autogenerated method: SongPackMaskModelSO.ToLocalizedName
::Il2CppString* GlobalNamespace::SongPackMaskModelSO::ToLocalizedName(::Il2CppString* serializedName, bool& plural) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::ToLocalizedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToLocalizedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializedName), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, serializedName, plural);
}
// Autogenerated method: SongPackMaskModelSO.ToSongPackMask
bool GlobalNamespace::SongPackMaskModelSO::ToSongPackMask(::Il2CppString* serializedName, GlobalNamespace::SongPackMask& songPackMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::ToSongPackMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToSongPackMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializedName), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::SongPackMask&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, serializedName, songPackMask);
}
// Autogenerated method: SongPackMaskModelSO.ToSongPackMask
GlobalNamespace::SongPackMask GlobalNamespace::SongPackMaskModelSO::ToSongPackMask(::Il2CppString* serializedName) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::ToSongPackMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToSongPackMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializedName)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SongPackMask, false>(this, ___internal__method, serializedName);
}
// Autogenerated method: SongPackMaskModelSO.ToSerializedName
bool GlobalNamespace::SongPackMaskModelSO::ToSerializedName(GlobalNamespace::SongPackMask songPackMask, ::Il2CppString*& serializedName) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::ToSerializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToSerializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songPackMask), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, songPackMask, serializedName);
}
// Autogenerated method: SongPackMaskModelSO.ToSerializedName
::Il2CppString* GlobalNamespace::SongPackMaskModelSO::ToSerializedName(GlobalNamespace::SongPackMask songPackMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::ToSerializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToSerializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songPackMask)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, songPackMask);
}
// Autogenerated method: SongPackMaskModelSO.LazyInit
void GlobalNamespace::SongPackMaskModelSO::LazyInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::LazyInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LazyInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongPackMaskModelSO/SongPackDataType
#include "GlobalNamespace/SongPackMaskModelSO_SongPackDataType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SongPackMaskModelSO/SongPackDataType SingleBeatmapLevelPack
GlobalNamespace::SongPackMaskModelSO::SongPackDataType GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_SingleBeatmapLevelPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_SingleBeatmapLevelPack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SongPackMaskModelSO::SongPackDataType>("", "SongPackMaskModelSO/SongPackDataType", "SingleBeatmapLevelPack"));
}
// Autogenerated static field setter
// Set static field: static public SongPackMaskModelSO/SongPackDataType SingleBeatmapLevelPack
void GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_SingleBeatmapLevelPack(GlobalNamespace::SongPackMaskModelSO::SongPackDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_SingleBeatmapLevelPack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackDataType", "SingleBeatmapLevelPack", value));
}
// Autogenerated static field getter
// Get static field: static public SongPackMaskModelSO/SongPackDataType MultipleBeatmapLevelPacks
GlobalNamespace::SongPackMaskModelSO::SongPackDataType GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_MultipleBeatmapLevelPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_MultipleBeatmapLevelPacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SongPackMaskModelSO::SongPackDataType>("", "SongPackMaskModelSO/SongPackDataType", "MultipleBeatmapLevelPacks"));
}
// Autogenerated static field setter
// Set static field: static public SongPackMaskModelSO/SongPackDataType MultipleBeatmapLevelPacks
void GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_MultipleBeatmapLevelPacks(GlobalNamespace::SongPackMaskModelSO::SongPackDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_MultipleBeatmapLevelPacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackDataType", "MultipleBeatmapLevelPacks", value));
}
// Autogenerated static field getter
// Get static field: static public SongPackMaskModelSO/SongPackDataType SinglePreviewBeatmapLevelPack
GlobalNamespace::SongPackMaskModelSO::SongPackDataType GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_SinglePreviewBeatmapLevelPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_SinglePreviewBeatmapLevelPack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SongPackMaskModelSO::SongPackDataType>("", "SongPackMaskModelSO/SongPackDataType", "SinglePreviewBeatmapLevelPack"));
}
// Autogenerated static field setter
// Set static field: static public SongPackMaskModelSO/SongPackDataType SinglePreviewBeatmapLevelPack
void GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_SinglePreviewBeatmapLevelPack(GlobalNamespace::SongPackMaskModelSO::SongPackDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_SinglePreviewBeatmapLevelPack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackDataType", "SinglePreviewBeatmapLevelPack", value));
}
// Autogenerated static field getter
// Get static field: static public SongPackMaskModelSO/SongPackDataType MultiplePreviewBeatmapLevelPacks
GlobalNamespace::SongPackMaskModelSO::SongPackDataType GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_MultiplePreviewBeatmapLevelPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_MultiplePreviewBeatmapLevelPacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SongPackMaskModelSO::SongPackDataType>("", "SongPackMaskModelSO/SongPackDataType", "MultiplePreviewBeatmapLevelPacks"));
}
// Autogenerated static field setter
// Set static field: static public SongPackMaskModelSO/SongPackDataType MultiplePreviewBeatmapLevelPacks
void GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_MultiplePreviewBeatmapLevelPacks(GlobalNamespace::SongPackMaskModelSO::SongPackDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_MultiplePreviewBeatmapLevelPacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackDataType", "MultiplePreviewBeatmapLevelPacks", value));
}
// Autogenerated static field getter
// Get static field: static public SongPackMaskModelSO/SongPackDataType SingleBeatmapLevelPackCollection
GlobalNamespace::SongPackMaskModelSO::SongPackDataType GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_SingleBeatmapLevelPackCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_SingleBeatmapLevelPackCollection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SongPackMaskModelSO::SongPackDataType>("", "SongPackMaskModelSO/SongPackDataType", "SingleBeatmapLevelPackCollection"));
}
// Autogenerated static field setter
// Set static field: static public SongPackMaskModelSO/SongPackDataType SingleBeatmapLevelPackCollection
void GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_SingleBeatmapLevelPackCollection(GlobalNamespace::SongPackMaskModelSO::SongPackDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_SingleBeatmapLevelPackCollection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackDataType", "SingleBeatmapLevelPackCollection", value));
}
// Autogenerated static field getter
// Get static field: static public SongPackMaskModelSO/SongPackDataType MultipleBeatmapLevelPackCollections
GlobalNamespace::SongPackMaskModelSO::SongPackDataType GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_MultipleBeatmapLevelPackCollections() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_MultipleBeatmapLevelPackCollections");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SongPackMaskModelSO::SongPackDataType>("", "SongPackMaskModelSO/SongPackDataType", "MultipleBeatmapLevelPackCollections"));
}
// Autogenerated static field setter
// Set static field: static public SongPackMaskModelSO/SongPackDataType MultipleBeatmapLevelPackCollections
void GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_MultipleBeatmapLevelPackCollections(GlobalNamespace::SongPackMaskModelSO::SongPackDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_MultipleBeatmapLevelPackCollections");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackDataType", "MultipleBeatmapLevelPackCollections", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_get_value__");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "value__"));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackDataType::_set_value__");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "value__", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SongPackMaskModelSO/SongPackMaskItem
#include "GlobalNamespace/SongPackMaskModelSO_SongPackMaskItem.hpp"
// Including type: SongPackMaskModelSO/SongPackMaskItem/<>c
#include "GlobalNamespace/SongPackMaskModelSO_SongPackMaskItem_--c.hpp"
// Including type: BeatmapLevelPackSO
#include "GlobalNamespace/BeatmapLevelPackSO.hpp"
// Including type: PreviewBeatmapLevelPackSO
#include "GlobalNamespace/PreviewBeatmapLevelPackSO.hpp"
// Including type: BeatmapLevelPackCollectionSO
#include "GlobalNamespace/BeatmapLevelPackCollectionSO.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: SongPackMask
#include "GlobalNamespace/SongPackMask.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public SongPackMaskModelSO/SongPackDataType _type
GlobalNamespace::SongPackMaskModelSO::SongPackDataType GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::_get__type() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::_get__type");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SongPackMaskModelSO::SongPackDataType>(___internal__instance, "_type"));
}
// Autogenerated instance field setter
// Set instance field: public SongPackMaskModelSO/SongPackDataType _type
void GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::_set__type(GlobalNamespace::SongPackMaskModelSO::SongPackDataType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::_set__type");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_type", value));
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelPackSO _beatmapLevelPack
GlobalNamespace::BeatmapLevelPackSO* GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::_get__beatmapLevelPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::_get__beatmapLevelPack");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapLevelPackSO*>(___internal__instance, "_beatmapLevelPack"));
}
// Autogenerated instance field setter
// Set instance field: public BeatmapLevelPackSO _beatmapLevelPack
void GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::_set__beatmapLevelPack(GlobalNamespace::BeatmapLevelPackSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::_set__beatmapLevelPack");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_beatmapLevelPack", value));
}
// Autogenerated instance field getter
// Get instance field: public PreviewBeatmapLevelPackSO _previewBeatmapLevelPack
GlobalNamespace::PreviewBeatmapLevelPackSO* GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::_get__previewBeatmapLevelPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::_get__previewBeatmapLevelPack");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PreviewBeatmapLevelPackSO*>(___internal__instance, "_previewBeatmapLevelPack"));
}
// Autogenerated instance field setter
// Set instance field: public PreviewBeatmapLevelPackSO _previewBeatmapLevelPack
void GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::_set__previewBeatmapLevelPack(GlobalNamespace::PreviewBeatmapLevelPackSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::_set__previewBeatmapLevelPack");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_previewBeatmapLevelPack", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String _serializedName
::Il2CppString* GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::_get__serializedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::_get__serializedName");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "_serializedName"));
}
// Autogenerated instance field setter
// Set instance field: public System.String _serializedName
void GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::_set__serializedName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::_set__serializedName");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_serializedName", value));
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelPackCollectionSO _levelPackCollection
GlobalNamespace::BeatmapLevelPackCollectionSO* GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::_get__levelPackCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::_get__levelPackCollection");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapLevelPackCollectionSO*>(___internal__instance, "_levelPackCollection"));
}
// Autogenerated instance field setter
// Set instance field: public BeatmapLevelPackCollectionSO _levelPackCollection
void GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::_set__levelPackCollection(GlobalNamespace::BeatmapLevelPackCollectionSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::_set__levelPackCollection");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_levelPackCollection", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<BeatmapLevelPackSO> _beatmapLevelPacks
System::Collections::Generic::List_1<GlobalNamespace::BeatmapLevelPackSO*>* GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::_get__beatmapLevelPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::_get__beatmapLevelPacks");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<GlobalNamespace::BeatmapLevelPackSO*>*>(___internal__instance, "_beatmapLevelPacks"));
}
// Autogenerated instance field setter
// Set instance field: public System.Collections.Generic.List`1<BeatmapLevelPackSO> _beatmapLevelPacks
void GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::_set__beatmapLevelPacks(System::Collections::Generic::List_1<GlobalNamespace::BeatmapLevelPackSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::_set__beatmapLevelPacks");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_beatmapLevelPacks", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PreviewBeatmapLevelPackSO> _previewBeatmapLevelPacks
System::Collections::Generic::List_1<GlobalNamespace::PreviewBeatmapLevelPackSO*>* GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::_get__previewBeatmapLevelPacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::_get__previewBeatmapLevelPacks");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<GlobalNamespace::PreviewBeatmapLevelPackSO*>*>(___internal__instance, "_previewBeatmapLevelPacks"));
}
// Autogenerated instance field setter
// Set instance field: public System.Collections.Generic.List`1<PreviewBeatmapLevelPackSO> _previewBeatmapLevelPacks
void GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::_set__previewBeatmapLevelPacks(System::Collections::Generic::List_1<GlobalNamespace::PreviewBeatmapLevelPackSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::_set__previewBeatmapLevelPacks");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_previewBeatmapLevelPacks", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<BeatmapLevelPackCollectionSO> _levelPackCollections
System::Collections::Generic::List_1<GlobalNamespace::BeatmapLevelPackCollectionSO*>* GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::_get__levelPackCollections() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::_get__levelPackCollections");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<GlobalNamespace::BeatmapLevelPackCollectionSO*>*>(___internal__instance, "_levelPackCollections"));
}
// Autogenerated instance field setter
// Set instance field: public System.Collections.Generic.List`1<BeatmapLevelPackCollectionSO> _levelPackCollections
void GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::_set__levelPackCollections(System::Collections::Generic::List_1<GlobalNamespace::BeatmapLevelPackCollectionSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::_set__levelPackCollections");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_levelPackCollections", value));
}
// Autogenerated method: SongPackMaskModelSO/SongPackMaskItem.get_serializedName
::Il2CppString* GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::get_serializedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::get_serializedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_serializedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: SongPackMaskModelSO/SongPackMaskItem.get_songPackMask
GlobalNamespace::SongPackMask GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::get_songPackMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::get_songPackMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songPackMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SongPackMask, false>(this, ___internal__method);
}
// Autogenerated method: SongPackMaskModelSO/SongPackMaskItem.get_containsMultiplePacks
bool GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::get_containsMultiplePacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::get_containsMultiplePacks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_containsMultiplePacks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SongPackMaskModelSO/SongPackMaskItem/<>c
#include "GlobalNamespace/SongPackMaskModelSO_SongPackMaskItem_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
// Including type: BeatmapLevelPackSO
#include "GlobalNamespace/BeatmapLevelPackSO.hpp"
// Including type: PreviewBeatmapLevelPackSO
#include "GlobalNamespace/PreviewBeatmapLevelPackSO.hpp"
// Including type: BeatmapLevelPackCollectionSO
#include "GlobalNamespace/BeatmapLevelPackCollectionSO.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly SongPackMaskModelSO/SongPackMaskItem/<>c <>9
GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c* GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c*>("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly SongPackMaskModelSO/SongPackMaskItem/<>c <>9
void GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9(GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<IBeatmapLevelPack,System.String> <>9__11_0
System::Func_2<GlobalNamespace::IBeatmapLevelPack*, ::Il2CppString*>* GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9__11_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9__11_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<GlobalNamespace::IBeatmapLevelPack*, ::Il2CppString*>*>("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9__11_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<IBeatmapLevelPack,System.String> <>9__11_0
void GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9__11_0(System::Func_2<GlobalNamespace::IBeatmapLevelPack*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9__11_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9__11_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<BeatmapLevelPackSO,System.String> <>9__11_1
System::Func_2<GlobalNamespace::BeatmapLevelPackSO*, ::Il2CppString*>* GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9__11_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9__11_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<GlobalNamespace::BeatmapLevelPackSO*, ::Il2CppString*>*>("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9__11_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<BeatmapLevelPackSO,System.String> <>9__11_1
void GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9__11_1(System::Func_2<GlobalNamespace::BeatmapLevelPackSO*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9__11_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9__11_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<PreviewBeatmapLevelPackSO,System.String> <>9__11_2
System::Func_2<GlobalNamespace::PreviewBeatmapLevelPackSO*, ::Il2CppString*>* GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9__11_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9__11_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<GlobalNamespace::PreviewBeatmapLevelPackSO*, ::Il2CppString*>*>("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9__11_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<PreviewBeatmapLevelPackSO,System.String> <>9__11_2
void GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9__11_2(System::Func_2<GlobalNamespace::PreviewBeatmapLevelPackSO*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9__11_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9__11_2", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<IBeatmapLevelPack,System.String> <>9__11_4
System::Func_2<GlobalNamespace::IBeatmapLevelPack*, ::Il2CppString*>* GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9__11_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9__11_4");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<GlobalNamespace::IBeatmapLevelPack*, ::Il2CppString*>*>("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9__11_4")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<IBeatmapLevelPack,System.String> <>9__11_4
void GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9__11_4(System::Func_2<GlobalNamespace::IBeatmapLevelPack*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9__11_4");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9__11_4", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<BeatmapLevelPackCollectionSO,System.Collections.Generic.IEnumerable`1<System.String>> <>9__11_3
System::Func_2<GlobalNamespace::BeatmapLevelPackCollectionSO*, System::Collections::Generic::IEnumerable_1<::Il2CppString*>*>* GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9__11_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_get_$$9__11_3");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<GlobalNamespace::BeatmapLevelPackCollectionSO*, System::Collections::Generic::IEnumerable_1<::Il2CppString*>*>*>("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9__11_3")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<BeatmapLevelPackCollectionSO,System.Collections.Generic.IEnumerable`1<System.String>> <>9__11_3
void GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9__11_3(System::Func_2<GlobalNamespace::BeatmapLevelPackCollectionSO*, System::Collections::Generic::IEnumerable_1<::Il2CppString*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_set_$$9__11_3");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "SongPackMaskModelSO/SongPackMaskItem/<>c", "<>9__11_3", value)));
}
// Autogenerated method: SongPackMaskModelSO/SongPackMaskItem/<>c..cctor
void GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SongPackMaskModelSO/SongPackMaskItem/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: SongPackMaskModelSO/SongPackMaskItem/<>c.<get_songPackMask>b__11_0
::Il2CppString* GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::$get_songPackMask$b__11_0(GlobalNamespace::IBeatmapLevelPack* pack) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::<get_songPackMask>b__11_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_songPackMask>b__11_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pack)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, pack);
}
// Autogenerated method: SongPackMaskModelSO/SongPackMaskItem/<>c.<get_songPackMask>b__11_1
::Il2CppString* GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::$get_songPackMask$b__11_1(GlobalNamespace::BeatmapLevelPackSO* pack) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::<get_songPackMask>b__11_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_songPackMask>b__11_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pack)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, pack);
}
// Autogenerated method: SongPackMaskModelSO/SongPackMaskItem/<>c.<get_songPackMask>b__11_2
::Il2CppString* GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::$get_songPackMask$b__11_2(GlobalNamespace::PreviewBeatmapLevelPackSO* pack) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::<get_songPackMask>b__11_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_songPackMask>b__11_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pack)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, pack);
}
// Autogenerated method: SongPackMaskModelSO/SongPackMaskItem/<>c.<get_songPackMask>b__11_3
System::Collections::Generic::IEnumerable_1<::Il2CppString*>* GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::$get_songPackMask$b__11_3(GlobalNamespace::BeatmapLevelPackCollectionSO* collection) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::<get_songPackMask>b__11_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_songPackMask>b__11_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collection)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<::Il2CppString*>*, false>(this, ___internal__method, collection);
}
// Autogenerated method: SongPackMaskModelSO/SongPackMaskItem/<>c.<get_songPackMask>b__11_4
::Il2CppString* GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::$get_songPackMask$b__11_4(GlobalNamespace::IBeatmapLevelPack* pack) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMaskModelSO::SongPackMaskItem::$$c::<get_songPackMask>b__11_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_songPackMask>b__11_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pack)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, pack);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SongPackMasksModel
#include "GlobalNamespace/SongPackMasksModel.hpp"
// Including type: SongPackMaskModelSO
#include "GlobalNamespace/SongPackMaskModelSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly SongPackMaskModelSO _songPackMaskModel
GlobalNamespace::SongPackMaskModelSO* GlobalNamespace::SongPackMasksModel::_get__songPackMaskModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMasksModel::_get__songPackMaskModel");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SongPackMaskModelSO*>(___internal__instance, "_songPackMaskModel"));
}
// Autogenerated instance field setter
// Set instance field: private readonly SongPackMaskModelSO _songPackMaskModel
void GlobalNamespace::SongPackMasksModel::_set__songPackMaskModel(GlobalNamespace::SongPackMaskModelSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMasksModel::_set__songPackMaskModel");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_songPackMaskModel", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly SongPackMask _allSongPackMask
GlobalNamespace::SongPackMask GlobalNamespace::SongPackMasksModel::_get__allSongPackMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMasksModel::_get__allSongPackMask");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SongPackMask>(___internal__instance, "_allSongPackMask"));
}
// Autogenerated instance field setter
// Set instance field: private readonly SongPackMask _allSongPackMask
void GlobalNamespace::SongPackMasksModel::_set__allSongPackMask(GlobalNamespace::SongPackMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMasksModel::_set__allSongPackMask");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_allSongPackMask", value));
}
// Autogenerated method: SongPackMasksModel.GetAllSongsMask
GlobalNamespace::SongPackMask GlobalNamespace::SongPackMasksModel::GetAllSongsMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMasksModel::GetAllSongsMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllSongsMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SongPackMask, false>(this, ___internal__method);
}
// Autogenerated method: SongPackMasksModel.GetSongPackMaskText
::Il2CppString* GlobalNamespace::SongPackMasksModel::GetSongPackMaskText(GlobalNamespace::SongPackMask& songPackMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMasksModel::GetSongPackMaskText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSongPackMaskText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songPackMask)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, songPackMask);
}
// Autogenerated method: SongPackMasksModel.GetSongPackMaskText
::Il2CppString* GlobalNamespace::SongPackMasksModel::GetSongPackMaskText(GlobalNamespace::SongPackMask& songPackMask, bool& plural) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongPackMasksModel::GetSongPackMaskText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSongPackMaskText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songPackMask), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, songPackMask, plural);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AuthenticationTokenPlatformExtensions
#include "GlobalNamespace/AuthenticationTokenPlatformExtensions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AuthenticationTokenPlatformExtensions.ToAuthenticationTokenPlatform
GlobalNamespace::AuthenticationToken::Platform GlobalNamespace::AuthenticationTokenPlatformExtensions::ToAuthenticationTokenPlatform(GlobalNamespace::UserInfo::Platform platform) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AuthenticationTokenPlatformExtensions::ToAuthenticationTokenPlatform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AuthenticationTokenPlatformExtensions", "ToAuthenticationTokenPlatform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(platform)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::AuthenticationToken::Platform, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, platform);
}
// Autogenerated method: AuthenticationTokenPlatformExtensions.ToUserInfoPlatform
GlobalNamespace::UserInfo::Platform GlobalNamespace::AuthenticationTokenPlatformExtensions::ToUserInfoPlatform(GlobalNamespace::AuthenticationToken::Platform platform) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AuthenticationTokenPlatformExtensions::ToUserInfoPlatform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "AuthenticationTokenPlatformExtensions", "ToUserInfoPlatform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(platform)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::UserInfo::Platform, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, platform);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BaseNetworkPlayerModel
#include "GlobalNamespace/BaseNetworkPlayerModel.hpp"
// Including type: BaseNetworkPlayerModel/PartyConfig
#include "GlobalNamespace/BaseNetworkPlayerModel_PartyConfig.hpp"
// Including type: BaseNetworkPlayerModel/<GetPartyPlayers>d__53
#include "GlobalNamespace/BaseNetworkPlayerModel_-GetPartyPlayers-d__53.hpp"
// Including type: BaseNetworkPlayerModel/<GetOtherPlayers>d__54
#include "GlobalNamespace/BaseNetworkPlayerModel_-GetOtherPlayers-d__54.hpp"
// Including type: ConnectedPlayerManager
#include "GlobalNamespace/ConnectedPlayerManager.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
// Including type: ConnectionFailedReason
#include "GlobalNamespace/ConnectionFailedReason.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: DisconnectedReason
#include "GlobalNamespace/DisconnectedReason.hpp"
// Including type: INetworkPlayerModelPartyConfig`1
#include "GlobalNamespace/INetworkPlayerModelPartyConfig_1.hpp"
// Including type: IConnectionManager
#include "GlobalNamespace/IConnectionManager.hpp"
// Including type: IConnectionInitParams`1
#include "GlobalNamespace/IConnectionInitParams_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ConnectedPlayerManager _connectedPlayerManager
GlobalNamespace::ConnectedPlayerManager* GlobalNamespace::BaseNetworkPlayerModel::_get__connectedPlayerManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::_get__connectedPlayerManager");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::ConnectedPlayerManager*>(___internal__instance, "_connectedPlayerManager"));
}
// Autogenerated instance field setter
// Set instance field: private ConnectedPlayerManager _connectedPlayerManager
void GlobalNamespace::BaseNetworkPlayerModel::_set__connectedPlayerManager(GlobalNamespace::ConnectedPlayerManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::_set__connectedPlayerManager");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_connectedPlayerManager", value));
}
// Autogenerated instance field getter
// Get instance field: private INetworkPlayerModel _partyManager
GlobalNamespace::INetworkPlayerModel* GlobalNamespace::BaseNetworkPlayerModel::_get__partyManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::_get__partyManager");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::INetworkPlayerModel*>(___internal__instance, "_partyManager"));
}
// Autogenerated instance field setter
// Set instance field: private INetworkPlayerModel _partyManager
void GlobalNamespace::BaseNetworkPlayerModel::_set__partyManager(GlobalNamespace::INetworkPlayerModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::_set__partyManager");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_partyManager", value));
}
// Autogenerated instance field getter
// Get instance field: private GameplayServerConfiguration _configuration
GlobalNamespace::GameplayServerConfiguration GlobalNamespace::BaseNetworkPlayerModel::_get__configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::_get__configuration");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayServerConfiguration>(___internal__instance, "_configuration"));
}
// Autogenerated instance field setter
// Set instance field: private GameplayServerConfiguration _configuration
void GlobalNamespace::BaseNetworkPlayerModel::_set__configuration(GlobalNamespace::GameplayServerConfiguration value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::_set__configuration");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_configuration", value));
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelSelectionMask _selectionMask
GlobalNamespace::BeatmapLevelSelectionMask GlobalNamespace::BaseNetworkPlayerModel::_get__selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::_get__selectionMask");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapLevelSelectionMask>(___internal__instance, "_selectionMask"));
}
// Autogenerated instance field setter
// Set instance field: private BeatmapLevelSelectionMask _selectionMask
void GlobalNamespace::BaseNetworkPlayerModel::_set__selectionMask(GlobalNamespace::BeatmapLevelSelectionMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::_set__selectionMask");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_selectionMask", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <discoveryEnabled>k__BackingField
bool GlobalNamespace::BaseNetworkPlayerModel::_get_$discoveryEnabled$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::_get_$discoveryEnabled$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(___internal__instance, "<discoveryEnabled>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <discoveryEnabled>k__BackingField
void GlobalNamespace::BaseNetworkPlayerModel::_set_$discoveryEnabled$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::_set_$discoveryEnabled$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<discoveryEnabled>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<INetworkPlayerModel> connectedPlayerManagerCreatedEvent
System::Action_1<GlobalNamespace::INetworkPlayerModel*>* GlobalNamespace::BaseNetworkPlayerModel::_get_connectedPlayerManagerCreatedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::_get_connectedPlayerManagerCreatedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<GlobalNamespace::INetworkPlayerModel*>*>(___internal__instance, "connectedPlayerManagerCreatedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<INetworkPlayerModel> connectedPlayerManagerCreatedEvent
void GlobalNamespace::BaseNetworkPlayerModel::_set_connectedPlayerManagerCreatedEvent(System::Action_1<GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::_set_connectedPlayerManagerCreatedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "connectedPlayerManagerCreatedEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<INetworkPlayerModel> connectedPlayerManagerDestroyedEvent
System::Action_1<GlobalNamespace::INetworkPlayerModel*>* GlobalNamespace::BaseNetworkPlayerModel::_get_connectedPlayerManagerDestroyedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::_get_connectedPlayerManagerDestroyedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<GlobalNamespace::INetworkPlayerModel*>*>(___internal__instance, "connectedPlayerManagerDestroyedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<INetworkPlayerModel> connectedPlayerManagerDestroyedEvent
void GlobalNamespace::BaseNetworkPlayerModel::_set_connectedPlayerManagerDestroyedEvent(System::Action_1<GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::_set_connectedPlayerManagerDestroyedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "connectedPlayerManagerDestroyedEvent", value));
}
// Autogenerated method: BaseNetworkPlayerModel.get_connectedPlayerManager
GlobalNamespace::ConnectedPlayerManager* GlobalNamespace::BaseNetworkPlayerModel::get_connectedPlayerManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::get_connectedPlayerManager");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayerManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ConnectedPlayerManager*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_partyManager
GlobalNamespace::INetworkPlayerModel* GlobalNamespace::BaseNetworkPlayerModel::get_partyManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::get_partyManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_partyManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::INetworkPlayerModel*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_isConnectedOrConnecting
bool GlobalNamespace::BaseNetworkPlayerModel::get_isConnectedOrConnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::get_isConnectedOrConnecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectedOrConnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_isConnectionOwner
bool GlobalNamespace::BaseNetworkPlayerModel::get_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::get_isConnectionOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectionOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_discoveryEnabled
bool GlobalNamespace::BaseNetworkPlayerModel::get_discoveryEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::get_discoveryEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_discoveryEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.set_discoveryEnabled
void GlobalNamespace::BaseNetworkPlayerModel::set_discoveryEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::set_discoveryEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_discoveryEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.get_currentPartySize
int GlobalNamespace::BaseNetworkPlayerModel::get_currentPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::get_currentPartySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_configuration
GlobalNamespace::GameplayServerConfiguration GlobalNamespace::BaseNetworkPlayerModel::get_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::get_configuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayServerConfiguration, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_selectionMask
GlobalNamespace::BeatmapLevelSelectionMask GlobalNamespace::BaseNetworkPlayerModel::get_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::get_selectionMask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapLevelSelectionMask, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_partyPlayers
System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>* GlobalNamespace::BaseNetworkPlayerModel::get_partyPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::get_partyPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_partyPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.INetworkPlayerModel.get_otherPlayers
System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>* GlobalNamespace::BaseNetworkPlayerModel::INetworkPlayerModel_get_otherPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::INetworkPlayerModel.get_otherPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "INetworkPlayerModel.get_otherPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_localPlayerIsPartyOwner
bool GlobalNamespace::BaseNetworkPlayerModel::get_localPlayerIsPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::get_localPlayerIsPartyOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayerIsPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_isServer
bool GlobalNamespace::BaseNetworkPlayerModel::get_isServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::get_isServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.get_isClient
bool GlobalNamespace::BaseNetworkPlayerModel::get_isClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::get_isClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.add_connectedPlayerManagerCreatedEvent
void GlobalNamespace::BaseNetworkPlayerModel::add_connectedPlayerManagerCreatedEvent(System::Action_1<GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::add_connectedPlayerManagerCreatedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectedPlayerManagerCreatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.remove_connectedPlayerManagerCreatedEvent
void GlobalNamespace::BaseNetworkPlayerModel::remove_connectedPlayerManagerCreatedEvent(System::Action_1<GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::remove_connectedPlayerManagerCreatedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectedPlayerManagerCreatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.add_connectedPlayerManagerDestroyedEvent
void GlobalNamespace::BaseNetworkPlayerModel::add_connectedPlayerManagerDestroyedEvent(System::Action_1<GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::add_connectedPlayerManagerDestroyedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_connectedPlayerManagerDestroyedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.remove_connectedPlayerManagerDestroyedEvent
void GlobalNamespace::BaseNetworkPlayerModel::remove_connectedPlayerManagerDestroyedEvent(System::Action_1<GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::remove_connectedPlayerManagerDestroyedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_connectedPlayerManagerDestroyedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.add_partyChangedEvent
void GlobalNamespace::BaseNetworkPlayerModel::add_partyChangedEvent(System::Action_1<GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::add_partyChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_partyChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.remove_partyChangedEvent
void GlobalNamespace::BaseNetworkPlayerModel::remove_partyChangedEvent(System::Action_1<GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::remove_partyChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_partyChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.add_partySizeChangedEvent
void GlobalNamespace::BaseNetworkPlayerModel::add_partySizeChangedEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::add_partySizeChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_partySizeChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.remove_partySizeChangedEvent
void GlobalNamespace::BaseNetworkPlayerModel::remove_partySizeChangedEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::remove_partySizeChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_partySizeChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.add_joinRequestedEvent
void GlobalNamespace::BaseNetworkPlayerModel::add_joinRequestedEvent(System::Action_1<GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::add_joinRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_joinRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.remove_joinRequestedEvent
void GlobalNamespace::BaseNetworkPlayerModel::remove_joinRequestedEvent(System::Action_1<GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::remove_joinRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_joinRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.add_inviteRequestedEvent
void GlobalNamespace::BaseNetworkPlayerModel::add_inviteRequestedEvent(System::Action_1<GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::add_inviteRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_inviteRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.remove_inviteRequestedEvent
void GlobalNamespace::BaseNetworkPlayerModel::remove_inviteRequestedEvent(System::Action_1<GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::remove_inviteRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_inviteRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseNetworkPlayerModel.GetPartyPlayers
System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>* GlobalNamespace::BaseNetworkPlayerModel::GetPartyPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::GetPartyPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPartyPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.GetOtherPlayers
System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>* GlobalNamespace::BaseNetworkPlayerModel::GetOtherPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::GetOtherPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOtherPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.ConnectionFailed
void GlobalNamespace::BaseNetworkPlayerModel::ConnectionFailed(GlobalNamespace::ConnectionFailedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::ConnectionFailed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectionFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reason)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reason);
}
// Autogenerated method: BaseNetworkPlayerModel.PlayerConnected
void GlobalNamespace::BaseNetworkPlayerModel::PlayerConnected(GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::PlayerConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: BaseNetworkPlayerModel.PlayerDisconnected
void GlobalNamespace::BaseNetworkPlayerModel::PlayerDisconnected(GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::PlayerDisconnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: BaseNetworkPlayerModel.PlayerStateChanged
void GlobalNamespace::BaseNetworkPlayerModel::PlayerStateChanged(GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::PlayerStateChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: BaseNetworkPlayerModel.ConnectedPlayerManagerChanged
void GlobalNamespace::BaseNetworkPlayerModel::ConnectedPlayerManagerChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::ConnectedPlayerManagerChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectedPlayerManagerChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.PlayerOrderChanged
void GlobalNamespace::BaseNetworkPlayerModel::PlayerOrderChanged(GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::PlayerOrderChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerOrderChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: BaseNetworkPlayerModel.PartySizeChanged
void GlobalNamespace::BaseNetworkPlayerModel::PartySizeChanged(int currentPartySize) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::PartySizeChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PartySizeChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentPartySize)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, currentPartySize);
}
// Autogenerated method: BaseNetworkPlayerModel.Disconnected
void GlobalNamespace::BaseNetworkPlayerModel::Disconnected(GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::Disconnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disconnectedReason);
}
// Autogenerated method: BaseNetworkPlayerModel.DestroyPartyConnection
void GlobalNamespace::BaseNetworkPlayerModel::DestroyPartyConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::DestroyPartyConnection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyPartyConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.DestroyConnectedPlayerManager
void GlobalNamespace::BaseNetworkPlayerModel::DestroyConnectedPlayerManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::DestroyConnectedPlayerManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyConnectedPlayerManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.Log
void GlobalNamespace::BaseNetworkPlayerModel::Log(::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: BaseNetworkPlayerModel.OnDestroy
void GlobalNamespace::BaseNetworkPlayerModel::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel.Update
void GlobalNamespace::BaseNetworkPlayerModel::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BaseNetworkPlayerModel/PartyConfig
#include "GlobalNamespace/BaseNetworkPlayerModel_PartyConfig.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelSelectionMask selectionMask
GlobalNamespace::BeatmapLevelSelectionMask GlobalNamespace::BaseNetworkPlayerModel::PartyConfig::_get_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::PartyConfig::_get_selectionMask");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapLevelSelectionMask>(___internal__instance, "selectionMask"));
}
// Autogenerated instance field setter
// Set instance field: public BeatmapLevelSelectionMask selectionMask
void GlobalNamespace::BaseNetworkPlayerModel::PartyConfig::_set_selectionMask(GlobalNamespace::BeatmapLevelSelectionMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::PartyConfig::_set_selectionMask");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "selectionMask", value));
}
// Autogenerated instance field getter
// Get instance field: public GameplayServerConfiguration configuration
GlobalNamespace::GameplayServerConfiguration GlobalNamespace::BaseNetworkPlayerModel::PartyConfig::_get_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::PartyConfig::_get_configuration");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayServerConfiguration>(___internal__instance, "configuration"));
}
// Autogenerated instance field setter
// Set instance field: public GameplayServerConfiguration configuration
void GlobalNamespace::BaseNetworkPlayerModel::PartyConfig::_set_configuration(GlobalNamespace::GameplayServerConfiguration value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::PartyConfig::_set_configuration");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "configuration", value));
}
// Autogenerated instance field getter
// Get instance field: public INetworkPlayerModel partyManager
GlobalNamespace::INetworkPlayerModel* GlobalNamespace::BaseNetworkPlayerModel::PartyConfig::_get_partyManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::PartyConfig::_get_partyManager");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::INetworkPlayerModel*>(___internal__instance, "partyManager"));
}
// Autogenerated instance field setter
// Set instance field: public INetworkPlayerModel partyManager
void GlobalNamespace::BaseNetworkPlayerModel::PartyConfig::_set_partyManager(GlobalNamespace::INetworkPlayerModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::PartyConfig::_set_partyManager");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "partyManager", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BaseNetworkPlayerModel/<GetPartyPlayers>d__53
#include "GlobalNamespace/BaseNetworkPlayerModel_-GetPartyPlayers-d__53.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__53::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__53::_get_$$1__state");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>(___internal__instance, "<>1__state")));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>1__state
void GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__53::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__53::_set_$$1__state");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>1__state", value));
}
// Autogenerated instance field getter
// Get instance field: private INetworkPlayer <>2__current
GlobalNamespace::INetworkPlayer* GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__53::_get_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__53::_get_$$2__current");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::INetworkPlayer*>(___internal__instance, "<>2__current")));
}
// Autogenerated instance field setter
// Set instance field: private INetworkPlayer <>2__current
void GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__53::_set_$$2__current(GlobalNamespace::INetworkPlayer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__53::_set_$$2__current");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>2__current", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
int GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__53::_get_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__53::_get_$$l__initialThreadId");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>(___internal__instance, "<>l__initialThreadId")));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>l__initialThreadId
void GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__53::_set_$$l__initialThreadId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__53::_set_$$l__initialThreadId");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>l__initialThreadId", value));
}
// Autogenerated method: BaseNetworkPlayerModel/<GetPartyPlayers>d__53.System.Collections.Generic.IEnumerator<INetworkPlayer>.get_Current
GlobalNamespace::INetworkPlayer* GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__53::System_Collections_Generic_IEnumerator$INetworkPlayer$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__53::System.Collections.Generic.IEnumerator<INetworkPlayer>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<INetworkPlayer>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::INetworkPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetPartyPlayers>d__53.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__53::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__53::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetPartyPlayers>d__53.System.IDisposable.Dispose
void GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__53::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__53::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetPartyPlayers>d__53.MoveNext
bool GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__53::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__53::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetPartyPlayers>d__53.System.Collections.IEnumerator.Reset
void GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__53::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__53::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetPartyPlayers>d__53.System.Collections.Generic.IEnumerable<INetworkPlayer>.GetEnumerator
System::Collections::Generic::IEnumerator_1<GlobalNamespace::INetworkPlayer*>* GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__53::System_Collections_Generic_IEnumerable$INetworkPlayer$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__53::System.Collections.Generic.IEnumerable<INetworkPlayer>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<INetworkPlayer>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetPartyPlayers>d__53.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__53::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::$GetPartyPlayers$d__53::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BaseNetworkPlayerModel/<GetOtherPlayers>d__54
#include "GlobalNamespace/BaseNetworkPlayerModel_-GetOtherPlayers-d__54.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__54::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__54::_get_$$1__state");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>(___internal__instance, "<>1__state")));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>1__state
void GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__54::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__54::_set_$$1__state");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>1__state", value));
}
// Autogenerated instance field getter
// Get instance field: private INetworkPlayer <>2__current
GlobalNamespace::INetworkPlayer* GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__54::_get_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__54::_get_$$2__current");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::INetworkPlayer*>(___internal__instance, "<>2__current")));
}
// Autogenerated instance field setter
// Set instance field: private INetworkPlayer <>2__current
void GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__54::_set_$$2__current(GlobalNamespace::INetworkPlayer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__54::_set_$$2__current");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>2__current", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>l__initialThreadId
int GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__54::_get_$$l__initialThreadId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__54::_get_$$l__initialThreadId");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>(___internal__instance, "<>l__initialThreadId")));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 <>l__initialThreadId
void GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__54::_set_$$l__initialThreadId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__54::_set_$$l__initialThreadId");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>l__initialThreadId", value));
}
// Autogenerated method: BaseNetworkPlayerModel/<GetOtherPlayers>d__54.System.Collections.Generic.IEnumerator<INetworkPlayer>.get_Current
GlobalNamespace::INetworkPlayer* GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__54::System_Collections_Generic_IEnumerator$INetworkPlayer$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__54::System.Collections.Generic.IEnumerator<INetworkPlayer>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<INetworkPlayer>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::INetworkPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetOtherPlayers>d__54.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__54::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__54::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetOtherPlayers>d__54.System.IDisposable.Dispose
void GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__54::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__54::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetOtherPlayers>d__54.MoveNext
bool GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__54::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__54::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetOtherPlayers>d__54.System.Collections.IEnumerator.Reset
void GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__54::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__54::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetOtherPlayers>d__54.System.Collections.Generic.IEnumerable<INetworkPlayer>.GetEnumerator
System::Collections::Generic::IEnumerator_1<GlobalNamespace::INetworkPlayer*>* GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__54::System_Collections_Generic_IEnumerable$INetworkPlayer$_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__54::System.Collections.Generic.IEnumerable<INetworkPlayer>.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerable<INetworkPlayer>.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: BaseNetworkPlayerModel/<GetOtherPlayers>d__54.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__54::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseNetworkPlayerModel::$GetOtherPlayers$d__54::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: IUnifiedNetworkPlayerModel
#include "GlobalNamespace/IUnifiedNetworkPlayerModel.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
// Including type: UserServerFilter
#include "GlobalNamespace/UserServerFilter.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IUnifiedNetworkPlayerModel.get_enableLocalNetwork
bool GlobalNamespace::IUnifiedNetworkPlayerModel::get_enableLocalNetwork() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IUnifiedNetworkPlayerModel::get_enableLocalNetwork");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableLocalNetwork", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.set_enableLocalNetwork
void GlobalNamespace::IUnifiedNetworkPlayerModel::set_enableLocalNetwork(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IUnifiedNetworkPlayerModel::set_enableLocalNetwork");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableLocalNetwork", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.get_publicServers
System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>* GlobalNamespace::IUnifiedNetworkPlayerModel::get_publicServers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IUnifiedNetworkPlayerModel::get_publicServers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_publicServers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.get_localNetworkPlayers
System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>* GlobalNamespace::IUnifiedNetworkPlayerModel::get_localNetworkPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IUnifiedNetworkPlayerModel::get_localNetworkPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localNetworkPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.get_serverFilter
GlobalNamespace::UserServerFilter GlobalNamespace::IUnifiedNetworkPlayerModel::get_serverFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IUnifiedNetworkPlayerModel::get_serverFilter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_serverFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::UserServerFilter, false>(this, ___internal__method);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.get_userId
::Il2CppString* GlobalNamespace::IUnifiedNetworkPlayerModel::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IUnifiedNetworkPlayerModel::get_userId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.get_userName
::Il2CppString* GlobalNamespace::IUnifiedNetworkPlayerModel::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IUnifiedNetworkPlayerModel::get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.get_secret
::Il2CppString* GlobalNamespace::IUnifiedNetworkPlayerModel::get_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IUnifiedNetworkPlayerModel::get_secret");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_secret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.get_code
::Il2CppString* GlobalNamespace::IUnifiedNetworkPlayerModel::get_code() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IUnifiedNetworkPlayerModel::get_code");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_code", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.add_partyRefreshingEvent
void GlobalNamespace::IUnifiedNetworkPlayerModel::add_partyRefreshingEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IUnifiedNetworkPlayerModel::add_partyRefreshingEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_partyRefreshingEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.remove_partyRefreshingEvent
void GlobalNamespace::IUnifiedNetworkPlayerModel::remove_partyRefreshingEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IUnifiedNetworkPlayerModel::remove_partyRefreshingEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_partyRefreshingEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.SetServerFilter
void GlobalNamespace::IUnifiedNetworkPlayerModel::SetServerFilter(GlobalNamespace::UserServerFilter filter) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IUnifiedNetworkPlayerModel::SetServerFilter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetServerFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filter)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, filter);
}
// Autogenerated method: IUnifiedNetworkPlayerModel.ResetMasterServerReachability
void GlobalNamespace::IUnifiedNetworkPlayerModel::ResetMasterServerReachability() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IUnifiedNetworkPlayerModel::ResetMasterServerReachability");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetMasterServerReachability", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocalNetworkDiscoveryManager
#include "GlobalNamespace/LocalNetworkDiscoveryManager.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: LocalNetworkDiscoveryManager/BroadcastPacket
#include "GlobalNamespace/LocalNetworkDiscoveryManager_BroadcastPacket.hpp"
// Including type: LocalNetworkDiscoveryManager/JoinRequestPacket
#include "GlobalNamespace/LocalNetworkDiscoveryManager_JoinRequestPacket.hpp"
// Including type: LocalNetworkDiscoveryManager/JoinResponsePacket
#include "GlobalNamespace/LocalNetworkDiscoveryManager_JoinResponsePacket.hpp"
// Including type: LocalNetworkDiscoveryManager/InviteRequestPacket
#include "GlobalNamespace/LocalNetworkDiscoveryManager_InviteRequestPacket.hpp"
// Including type: LocalNetworkDiscoveryManager/InviteResponsePacket
#include "GlobalNamespace/LocalNetworkDiscoveryManager_InviteResponsePacket.hpp"
// Including type: LocalNetworkDiscoveryManager/PeerUpdatedDelegate
#include "GlobalNamespace/LocalNetworkDiscoveryManager_PeerUpdatedDelegate.hpp"
// Including type: LocalNetworkDiscoveryManager/JoinRequestedDelegate
#include "GlobalNamespace/LocalNetworkDiscoveryManager_JoinRequestedDelegate.hpp"
// Including type: LocalNetworkDiscoveryManager/JoinRespondedDelegate
#include "GlobalNamespace/LocalNetworkDiscoveryManager_JoinRespondedDelegate.hpp"
// Including type: LocalNetworkDiscoveryManager/InviteRequestedDelegate
#include "GlobalNamespace/LocalNetworkDiscoveryManager_InviteRequestedDelegate.hpp"
// Including type: LocalNetworkDiscoveryManager/InviteRespondedDelegate
#include "GlobalNamespace/LocalNetworkDiscoveryManager_InviteRespondedDelegate.hpp"
// Including type: LiteNetLib.NetManager
#include "LiteNetLib/NetManager.hpp"
// Including type: NetworkPacketSerializer`2
#include "GlobalNamespace/NetworkPacketSerializer_2.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: LiteNetLib.Utils.INetSerializable
#include "LiteNetLib/Utils/INetSerializable.hpp"
// Including type: LiteNetLib.NetPacketReader
#include "LiteNetLib/NetPacketReader.hpp"
// Including type: LiteNetLib.UnconnectedMessageType
#include "LiteNetLib/UnconnectedMessageType.hpp"
// Including type: LiteNetLib.ConnectionRequest
#include "LiteNetLib/ConnectionRequest.hpp"
// Including type: System.Net.Sockets.SocketError
#include "System/Net/Sockets/SocketError.hpp"
// Including type: LiteNetLib.NetPeer
#include "LiteNetLib/NetPeer.hpp"
// Including type: LiteNetLib.DisconnectInfo
#include "LiteNetLib/DisconnectInfo.hpp"
// Including type: LiteNetLib.DeliveryMethod
#include "LiteNetLib/DeliveryMethod.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kBroadcastInterval
float GlobalNamespace::LocalNetworkDiscoveryManager::_get_kBroadcastInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::_get_kBroadcastInterval");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "LocalNetworkDiscoveryManager", "kBroadcastInterval"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kBroadcastInterval
void GlobalNamespace::LocalNetworkDiscoveryManager::_set_kBroadcastInterval(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::_set_kBroadcastInterval");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalNetworkDiscoveryManager", "kBroadcastInterval", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 kSignature
uint GlobalNamespace::LocalNetworkDiscoveryManager::_get_kSignature() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::_get_kSignature");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("", "LocalNetworkDiscoveryManager", "kSignature"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 kSignature
void GlobalNamespace::LocalNetworkDiscoveryManager::_set_kSignature(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::_set_kSignature");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalNetworkDiscoveryManager", "kSignature", value));
}
// Autogenerated instance field getter
// Get instance field: private LocalNetworkDiscoveryManager/PeerUpdatedDelegate peerUpdatedEvent
GlobalNamespace::LocalNetworkDiscoveryManager::PeerUpdatedDelegate* GlobalNamespace::LocalNetworkDiscoveryManager::_get_peerUpdatedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::_get_peerUpdatedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LocalNetworkDiscoveryManager::PeerUpdatedDelegate*>(___internal__instance, "peerUpdatedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private LocalNetworkDiscoveryManager/PeerUpdatedDelegate peerUpdatedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::_set_peerUpdatedEvent(GlobalNamespace::LocalNetworkDiscoveryManager::PeerUpdatedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::_set_peerUpdatedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "peerUpdatedEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private LocalNetworkDiscoveryManager/JoinRequestedDelegate joinRequestedEvent
GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestedDelegate* GlobalNamespace::LocalNetworkDiscoveryManager::_get_joinRequestedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::_get_joinRequestedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestedDelegate*>(___internal__instance, "joinRequestedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private LocalNetworkDiscoveryManager/JoinRequestedDelegate joinRequestedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::_set_joinRequestedEvent(GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::_set_joinRequestedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "joinRequestedEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private LocalNetworkDiscoveryManager/JoinRespondedDelegate joinRespondedEvent
GlobalNamespace::LocalNetworkDiscoveryManager::JoinRespondedDelegate* GlobalNamespace::LocalNetworkDiscoveryManager::_get_joinRespondedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::_get_joinRespondedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LocalNetworkDiscoveryManager::JoinRespondedDelegate*>(___internal__instance, "joinRespondedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private LocalNetworkDiscoveryManager/JoinRespondedDelegate joinRespondedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::_set_joinRespondedEvent(GlobalNamespace::LocalNetworkDiscoveryManager::JoinRespondedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::_set_joinRespondedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "joinRespondedEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private LocalNetworkDiscoveryManager/InviteRequestedDelegate inviteRequestedEvent
GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestedDelegate* GlobalNamespace::LocalNetworkDiscoveryManager::_get_inviteRequestedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::_get_inviteRequestedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestedDelegate*>(___internal__instance, "inviteRequestedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private LocalNetworkDiscoveryManager/InviteRequestedDelegate inviteRequestedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::_set_inviteRequestedEvent(GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::_set_inviteRequestedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "inviteRequestedEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private LocalNetworkDiscoveryManager/InviteRespondedDelegate inviteRespondedEvent
GlobalNamespace::LocalNetworkDiscoveryManager::InviteRespondedDelegate* GlobalNamespace::LocalNetworkDiscoveryManager::_get_inviteRespondedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::_get_inviteRespondedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LocalNetworkDiscoveryManager::InviteRespondedDelegate*>(___internal__instance, "inviteRespondedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private LocalNetworkDiscoveryManager/InviteRespondedDelegate inviteRespondedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::_set_inviteRespondedEvent(GlobalNamespace::LocalNetworkDiscoveryManager::InviteRespondedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::_set_inviteRespondedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "inviteRespondedEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private LiteNetLib.NetManager _netManager
LiteNetLib::NetManager* GlobalNamespace::LocalNetworkDiscoveryManager::_get__netManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::_get__netManager");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LiteNetLib::NetManager*>(___internal__instance, "_netManager"));
}
// Autogenerated instance field setter
// Set instance field: private LiteNetLib.NetManager _netManager
void GlobalNamespace::LocalNetworkDiscoveryManager::_set__netManager(LiteNetLib::NetManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::_set__netManager");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_netManager", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly NetworkPacketSerializer`2<LocalNetworkDiscoveryManager/PacketType,System.Net.IPEndPoint> _packetSerializer
GlobalNamespace::NetworkPacketSerializer_2<GlobalNamespace::LocalNetworkDiscoveryManager::PacketType, System::Net::IPEndPoint*>* GlobalNamespace::LocalNetworkDiscoveryManager::_get__packetSerializer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::_get__packetSerializer");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::NetworkPacketSerializer_2<GlobalNamespace::LocalNetworkDiscoveryManager::PacketType, System::Net::IPEndPoint*>*>(___internal__instance, "_packetSerializer")));
}
// Autogenerated instance field setter
// Set instance field: private readonly NetworkPacketSerializer`2<LocalNetworkDiscoveryManager/PacketType,System.Net.IPEndPoint> _packetSerializer
void GlobalNamespace::LocalNetworkDiscoveryManager::_set__packetSerializer(GlobalNamespace::NetworkPacketSerializer_2<GlobalNamespace::LocalNetworkDiscoveryManager::PacketType, System::Net::IPEndPoint*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::_set__packetSerializer");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_packetSerializer", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly LiteNetLib.Utils.NetDataWriter _netDataWriter
LiteNetLib::Utils::NetDataWriter* GlobalNamespace::LocalNetworkDiscoveryManager::_get__netDataWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::_get__netDataWriter");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LiteNetLib::Utils::NetDataWriter*>(___internal__instance, "_netDataWriter"));
}
// Autogenerated instance field setter
// Set instance field: private readonly LiteNetLib.Utils.NetDataWriter _netDataWriter
void GlobalNamespace::LocalNetworkDiscoveryManager::_set__netDataWriter(LiteNetLib::Utils::NetDataWriter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::_set__netDataWriter");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_netDataWriter", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly LocalNetworkDiscoveryManager/BroadcastPacket _broadcastPacket
GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket* GlobalNamespace::LocalNetworkDiscoveryManager::_get__broadcastPacket() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::_get__broadcastPacket");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket*>(___internal__instance, "_broadcastPacket"));
}
// Autogenerated instance field setter
// Set instance field: private readonly LocalNetworkDiscoveryManager/BroadcastPacket _broadcastPacket
void GlobalNamespace::LocalNetworkDiscoveryManager::_set__broadcastPacket(GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::_set__broadcastPacket");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_broadcastPacket", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _discoveryPort
int GlobalNamespace::LocalNetworkDiscoveryManager::_get__discoveryPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::_get__discoveryPort");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "_discoveryPort"));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _discoveryPort
void GlobalNamespace::LocalNetworkDiscoveryManager::_set__discoveryPort(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::_set__discoveryPort");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_discoveryPort", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
bool GlobalNamespace::LocalNetworkDiscoveryManager::_get__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::_get__initialized");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_initialized"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _initialized
void GlobalNamespace::LocalNetworkDiscoveryManager::_set__initialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::_set__initialized");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_initialized", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _enableBroadcasting
bool GlobalNamespace::LocalNetworkDiscoveryManager::_get__enableBroadcasting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::_get__enableBroadcasting");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_enableBroadcasting"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _enableBroadcasting
void GlobalNamespace::LocalNetworkDiscoveryManager::_set__enableBroadcasting(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::_set__enableBroadcasting");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_enableBroadcasting", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastBroadcastTime
float GlobalNamespace::LocalNetworkDiscoveryManager::_get__lastBroadcastTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::_get__lastBroadcastTime");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "_lastBroadcastTime"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single _lastBroadcastTime
void GlobalNamespace::LocalNetworkDiscoveryManager::_set__lastBroadcastTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::_set__lastBroadcastTime");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_lastBroadcastTime", value));
}
// Autogenerated method: LocalNetworkDiscoveryManager.get_userId
::Il2CppString* GlobalNamespace::LocalNetworkDiscoveryManager::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::get_userId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkDiscoveryManager.get_userName
::Il2CppString* GlobalNamespace::LocalNetworkDiscoveryManager::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::get_userName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkDiscoveryManager.get_isPartyOwner
bool GlobalNamespace::LocalNetworkDiscoveryManager::get_isPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::get_isPartyOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkDiscoveryManager.set_isPartyOwner
void GlobalNamespace::LocalNetworkDiscoveryManager::set_isPartyOwner(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::set_isPartyOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.get_currentPartySize
int GlobalNamespace::LocalNetworkDiscoveryManager::get_currentPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::get_currentPartySize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkDiscoveryManager.set_currentPartySize
void GlobalNamespace::LocalNetworkDiscoveryManager::set_currentPartySize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::set_currentPartySize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_currentPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.get_configuration
GlobalNamespace::GameplayServerConfiguration GlobalNamespace::LocalNetworkDiscoveryManager::get_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::get_configuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayServerConfiguration, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkDiscoveryManager.set_configuration
void GlobalNamespace::LocalNetworkDiscoveryManager::set_configuration(GlobalNamespace::GameplayServerConfiguration value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::set_configuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.get_selectionMask
GlobalNamespace::BeatmapLevelSelectionMask GlobalNamespace::LocalNetworkDiscoveryManager::get_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::get_selectionMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapLevelSelectionMask, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkDiscoveryManager.set_selectionMask
void GlobalNamespace::LocalNetworkDiscoveryManager::set_selectionMask(GlobalNamespace::BeatmapLevelSelectionMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::set_selectionMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_selectionMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.get_enableBroadcasting
bool GlobalNamespace::LocalNetworkDiscoveryManager::get_enableBroadcasting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::get_enableBroadcasting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableBroadcasting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkDiscoveryManager.set_enableBroadcasting
void GlobalNamespace::LocalNetworkDiscoveryManager::set_enableBroadcasting(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::set_enableBroadcasting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableBroadcasting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.add_peerUpdatedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::add_peerUpdatedEvent(GlobalNamespace::LocalNetworkDiscoveryManager::PeerUpdatedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::add_peerUpdatedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_peerUpdatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.remove_peerUpdatedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::remove_peerUpdatedEvent(GlobalNamespace::LocalNetworkDiscoveryManager::PeerUpdatedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::remove_peerUpdatedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_peerUpdatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.add_joinRequestedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::add_joinRequestedEvent(GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::add_joinRequestedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_joinRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.remove_joinRequestedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::remove_joinRequestedEvent(GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::remove_joinRequestedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_joinRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.add_joinRespondedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::add_joinRespondedEvent(GlobalNamespace::LocalNetworkDiscoveryManager::JoinRespondedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::add_joinRespondedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_joinRespondedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.remove_joinRespondedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::remove_joinRespondedEvent(GlobalNamespace::LocalNetworkDiscoveryManager::JoinRespondedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::remove_joinRespondedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_joinRespondedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.add_inviteRequestedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::add_inviteRequestedEvent(GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::add_inviteRequestedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_inviteRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.remove_inviteRequestedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::remove_inviteRequestedEvent(GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::remove_inviteRequestedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_inviteRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.add_inviteRespondedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::add_inviteRespondedEvent(GlobalNamespace::LocalNetworkDiscoveryManager::InviteRespondedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::add_inviteRespondedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_inviteRespondedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.remove_inviteRespondedEvent
void GlobalNamespace::LocalNetworkDiscoveryManager::remove_inviteRespondedEvent(GlobalNamespace::LocalNetworkDiscoveryManager::InviteRespondedDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::remove_inviteRespondedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_inviteRespondedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkDiscoveryManager.Init
void GlobalNamespace::LocalNetworkDiscoveryManager::Init(int discoveryPort, ::Il2CppString* initUserId, ::Il2CppString* initUserName) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(discoveryPort), ::il2cpp_utils::ExtractType(initUserId), ::il2cpp_utils::ExtractType(initUserName)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, discoveryPort, initUserId, initUserName);
}
// Autogenerated method: LocalNetworkDiscoveryManager.OnEnable
void GlobalNamespace::LocalNetworkDiscoveryManager::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkDiscoveryManager.OnDisable
void GlobalNamespace::LocalNetworkDiscoveryManager::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkDiscoveryManager.Update
void GlobalNamespace::LocalNetworkDiscoveryManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkDiscoveryManager.SendJoinRequest
void GlobalNamespace::LocalNetworkDiscoveryManager::SendJoinRequest(System::Net::IPAddress* ip) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::SendJoinRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendJoinRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ip)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ip);
}
// Autogenerated method: LocalNetworkDiscoveryManager.SendJoinResponse
void GlobalNamespace::LocalNetworkDiscoveryManager::SendJoinResponse(System::Net::IPAddress* ip, ::Il2CppString* secret, int multiplayerPort, bool blocked, bool isPartyOwner, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::SendJoinResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendJoinResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ip), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(multiplayerPort), ::il2cpp_utils::ExtractType(blocked), ::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ip, secret, multiplayerPort, blocked, isPartyOwner, selectionMask, configuration);
}
// Autogenerated method: LocalNetworkDiscoveryManager.SendInviteRequest
void GlobalNamespace::LocalNetworkDiscoveryManager::SendInviteRequest(System::Net::IPAddress* ip, ::Il2CppString* secret, int multiplayerPort, bool isPartyOwner, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::SendInviteRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendInviteRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ip), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(multiplayerPort), ::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ip, secret, multiplayerPort, isPartyOwner, selectionMask, configuration);
}
// Autogenerated method: LocalNetworkDiscoveryManager.SendInviteResponse
void GlobalNamespace::LocalNetworkDiscoveryManager::SendInviteResponse(System::Net::IPAddress* ip, bool accepted, bool blocked) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::SendInviteResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendInviteResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ip), ::il2cpp_utils::ExtractType(accepted), ::il2cpp_utils::ExtractType(blocked)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ip, accepted, blocked);
}
// Autogenerated method: LocalNetworkDiscoveryManager.LiteNetLib.INetEventListener.OnNetworkReceiveUnconnected
void GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib_INetEventListener_OnNetworkReceiveUnconnected(System::Net::IPEndPoint* remoteEndPoint, LiteNetLib::NetPacketReader* reader, LiteNetLib::UnconnectedMessageType messageType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib.INetEventListener.OnNetworkReceiveUnconnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnNetworkReceiveUnconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(messageType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, remoteEndPoint, reader, messageType);
}
// Autogenerated method: LocalNetworkDiscoveryManager.LiteNetLib.INetEventListener.OnConnectionRequest
void GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib_INetEventListener_OnConnectionRequest(LiteNetLib::ConnectionRequest* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib.INetEventListener.OnConnectionRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnConnectionRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, request);
}
// Autogenerated method: LocalNetworkDiscoveryManager.LiteNetLib.INetEventListener.OnNetworkError
void GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib_INetEventListener_OnNetworkError(System::Net::IPEndPoint* endPoint, System::Net::Sockets::SocketError socketErrorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib.INetEventListener.OnNetworkError");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnNetworkError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(socketErrorCode)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, endPoint, socketErrorCode);
}
// Autogenerated method: LocalNetworkDiscoveryManager.LiteNetLib.INetEventListener.OnNetworkLatencyUpdate
void GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib_INetEventListener_OnNetworkLatencyUpdate(LiteNetLib::NetPeer* peer, int latency) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib.INetEventListener.OnNetworkLatencyUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnNetworkLatencyUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(latency)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, peer, latency);
}
// Autogenerated method: LocalNetworkDiscoveryManager.LiteNetLib.INetEventListener.OnPeerConnected
void GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib_INetEventListener_OnPeerConnected(LiteNetLib::NetPeer* peer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib.INetEventListener.OnPeerConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnPeerConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, peer);
}
// Autogenerated method: LocalNetworkDiscoveryManager.LiteNetLib.INetEventListener.OnPeerDisconnected
void GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib_INetEventListener_OnPeerDisconnected(LiteNetLib::NetPeer* peer, LiteNetLib::DisconnectInfo disconnectInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib.INetEventListener.OnPeerDisconnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnPeerDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(disconnectInfo)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, peer, disconnectInfo);
}
// Autogenerated method: LocalNetworkDiscoveryManager.LiteNetLib.INetEventListener.OnNetworkReceive
void GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib_INetEventListener_OnNetworkReceive(LiteNetLib::NetPeer* peer, LiteNetLib::NetPacketReader* reader, LiteNetLib::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::LiteNetLib.INetEventListener.OnNetworkReceive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LiteNetLib.INetEventListener.OnNetworkReceive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(peer), ::il2cpp_utils::ExtractType(reader), ::il2cpp_utils::ExtractType(deliveryMethod)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, peer, reader, deliveryMethod);
}
// Autogenerated method: LocalNetworkDiscoveryManager.<Init>b__55_0
void GlobalNamespace::LocalNetworkDiscoveryManager::$Init$b__55_0(GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket* packet, System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::<Init>b__55_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Init>b__55_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(endPoint)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, endPoint);
}
// Autogenerated method: LocalNetworkDiscoveryManager.<Init>b__55_1
void GlobalNamespace::LocalNetworkDiscoveryManager::$Init$b__55_1(GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestPacket* packet, System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::<Init>b__55_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Init>b__55_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(endPoint)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, endPoint);
}
// Autogenerated method: LocalNetworkDiscoveryManager.<Init>b__55_2
void GlobalNamespace::LocalNetworkDiscoveryManager::$Init$b__55_2(GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket* packet, System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::<Init>b__55_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Init>b__55_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(endPoint)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, endPoint);
}
// Autogenerated method: LocalNetworkDiscoveryManager.<Init>b__55_3
void GlobalNamespace::LocalNetworkDiscoveryManager::$Init$b__55_3(GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket* packet, System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::<Init>b__55_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Init>b__55_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(endPoint)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, endPoint);
}
// Autogenerated method: LocalNetworkDiscoveryManager.<Init>b__55_4
void GlobalNamespace::LocalNetworkDiscoveryManager::$Init$b__55_4(GlobalNamespace::LocalNetworkDiscoveryManager::InviteResponsePacket* packet, System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::<Init>b__55_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Init>b__55_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(packet), ::il2cpp_utils::ExtractType(endPoint)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, endPoint);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalNetworkDiscoveryManager/PacketType
#include "GlobalNamespace/LocalNetworkDiscoveryManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LocalNetworkDiscoveryManager/PacketType Broadcast
GlobalNamespace::LocalNetworkDiscoveryManager::PacketType GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_Broadcast() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_Broadcast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LocalNetworkDiscoveryManager::PacketType>("", "LocalNetworkDiscoveryManager/PacketType", "Broadcast"));
}
// Autogenerated static field setter
// Set static field: static public LocalNetworkDiscoveryManager/PacketType Broadcast
void GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_Broadcast(GlobalNamespace::LocalNetworkDiscoveryManager::PacketType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_Broadcast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalNetworkDiscoveryManager/PacketType", "Broadcast", value));
}
// Autogenerated static field getter
// Get static field: static public LocalNetworkDiscoveryManager/PacketType JoinRequest
GlobalNamespace::LocalNetworkDiscoveryManager::PacketType GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_JoinRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_JoinRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LocalNetworkDiscoveryManager::PacketType>("", "LocalNetworkDiscoveryManager/PacketType", "JoinRequest"));
}
// Autogenerated static field setter
// Set static field: static public LocalNetworkDiscoveryManager/PacketType JoinRequest
void GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_JoinRequest(GlobalNamespace::LocalNetworkDiscoveryManager::PacketType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_JoinRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalNetworkDiscoveryManager/PacketType", "JoinRequest", value));
}
// Autogenerated static field getter
// Get static field: static public LocalNetworkDiscoveryManager/PacketType JoinResponse
GlobalNamespace::LocalNetworkDiscoveryManager::PacketType GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_JoinResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_JoinResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LocalNetworkDiscoveryManager::PacketType>("", "LocalNetworkDiscoveryManager/PacketType", "JoinResponse"));
}
// Autogenerated static field setter
// Set static field: static public LocalNetworkDiscoveryManager/PacketType JoinResponse
void GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_JoinResponse(GlobalNamespace::LocalNetworkDiscoveryManager::PacketType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_JoinResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalNetworkDiscoveryManager/PacketType", "JoinResponse", value));
}
// Autogenerated static field getter
// Get static field: static public LocalNetworkDiscoveryManager/PacketType InviteRequest
GlobalNamespace::LocalNetworkDiscoveryManager::PacketType GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_InviteRequest() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_InviteRequest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LocalNetworkDiscoveryManager::PacketType>("", "LocalNetworkDiscoveryManager/PacketType", "InviteRequest"));
}
// Autogenerated static field setter
// Set static field: static public LocalNetworkDiscoveryManager/PacketType InviteRequest
void GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_InviteRequest(GlobalNamespace::LocalNetworkDiscoveryManager::PacketType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_InviteRequest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalNetworkDiscoveryManager/PacketType", "InviteRequest", value));
}
// Autogenerated static field getter
// Get static field: static public LocalNetworkDiscoveryManager/PacketType InviteResponse
GlobalNamespace::LocalNetworkDiscoveryManager::PacketType GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_InviteResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_InviteResponse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LocalNetworkDiscoveryManager::PacketType>("", "LocalNetworkDiscoveryManager/PacketType", "InviteResponse"));
}
// Autogenerated static field setter
// Set static field: static public LocalNetworkDiscoveryManager/PacketType InviteResponse
void GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_InviteResponse(GlobalNamespace::LocalNetworkDiscoveryManager::PacketType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_InviteResponse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalNetworkDiscoveryManager/PacketType", "InviteResponse", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
uint8_t GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_get_value__");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>(___internal__instance, "value__"));
}
// Autogenerated instance field setter
// Set instance field: public System.Byte value__
void GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_value__(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::PacketType::_set_value__");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "value__", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocalNetworkDiscoveryManager/BroadcastPacket
#include "GlobalNamespace/LocalNetworkDiscoveryManager_BroadcastPacket.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt32 version
uint GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::_get_version() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::_get_version");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>(___internal__instance, "version"));
}
// Autogenerated instance field setter
// Set instance field: public System.UInt32 version
void GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::_set_version(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::_set_version");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "version", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String userId
::Il2CppString* GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::_get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::_get_userId");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "userId"));
}
// Autogenerated instance field setter
// Set instance field: public System.String userId
void GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::_set_userId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::_set_userId");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "userId", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String userName
::Il2CppString* GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::_get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::_get_userName");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "userName"));
}
// Autogenerated instance field setter
// Set instance field: public System.String userName
void GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::_set_userName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::_set_userName");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "userName", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 currentPartySize
int GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::_get_currentPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::_get_currentPartySize");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "currentPartySize"));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 currentPartySize
void GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::_set_currentPartySize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::_set_currentPartySize");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "currentPartySize", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isPartyOwner
bool GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::_get_isPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::_get_isPartyOwner");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "isPartyOwner"));
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean isPartyOwner
void GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::_set_isPartyOwner(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::_set_isPartyOwner");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "isPartyOwner", value));
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelSelectionMask selectionMask
GlobalNamespace::BeatmapLevelSelectionMask GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::_get_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::_get_selectionMask");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapLevelSelectionMask>(___internal__instance, "selectionMask"));
}
// Autogenerated instance field setter
// Set instance field: public BeatmapLevelSelectionMask selectionMask
void GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::_set_selectionMask(GlobalNamespace::BeatmapLevelSelectionMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::_set_selectionMask");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "selectionMask", value));
}
// Autogenerated instance field getter
// Get instance field: public GameplayServerConfiguration configuration
GlobalNamespace::GameplayServerConfiguration GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::_get_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::_get_configuration");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayServerConfiguration>(___internal__instance, "configuration"));
}
// Autogenerated instance field setter
// Set instance field: public GameplayServerConfiguration configuration
void GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::_set_configuration(GlobalNamespace::GameplayServerConfiguration value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::_set_configuration");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "configuration", value));
}
// Autogenerated method: LocalNetworkDiscoveryManager/BroadcastPacket.Serialize
void GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: LocalNetworkDiscoveryManager/BroadcastPacket.Deserialize
void GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::BroadcastPacket::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocalNetworkDiscoveryManager/JoinRequestPacket
#include "GlobalNamespace/LocalNetworkDiscoveryManager_JoinRequestPacket.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String userId
::Il2CppString* GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestPacket::_get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestPacket::_get_userId");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "userId"));
}
// Autogenerated instance field setter
// Set instance field: public System.String userId
void GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestPacket::_set_userId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestPacket::_set_userId");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "userId", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String userName
::Il2CppString* GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestPacket::_get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestPacket::_get_userName");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "userName"));
}
// Autogenerated instance field setter
// Set instance field: public System.String userName
void GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestPacket::_set_userName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestPacket::_set_userName");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "userName", value));
}
// Autogenerated method: LocalNetworkDiscoveryManager/JoinRequestPacket.Serialize
void GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestPacket::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestPacket::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: LocalNetworkDiscoveryManager/JoinRequestPacket.Deserialize
void GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestPacket::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestPacket::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocalNetworkDiscoveryManager/JoinResponsePacket
#include "GlobalNamespace/LocalNetworkDiscoveryManager_JoinResponsePacket.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String userId
::Il2CppString* GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::_get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::_get_userId");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "userId"));
}
// Autogenerated instance field setter
// Set instance field: public System.String userId
void GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::_set_userId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::_set_userId");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "userId", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String secret
::Il2CppString* GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::_get_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::_get_secret");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "secret"));
}
// Autogenerated instance field setter
// Set instance field: public System.String secret
void GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::_set_secret(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::_set_secret");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "secret", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 multiplayerPort
int GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::_get_multiplayerPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::_get_multiplayerPort");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "multiplayerPort"));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 multiplayerPort
void GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::_set_multiplayerPort(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::_set_multiplayerPort");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "multiplayerPort", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean blocked
bool GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::_get_blocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::_get_blocked");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "blocked"));
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean blocked
void GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::_set_blocked(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::_set_blocked");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "blocked", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isPartyOwner
bool GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::_get_isPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::_get_isPartyOwner");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "isPartyOwner"));
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean isPartyOwner
void GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::_set_isPartyOwner(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::_set_isPartyOwner");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "isPartyOwner", value));
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelSelectionMask selectionMask
GlobalNamespace::BeatmapLevelSelectionMask GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::_get_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::_get_selectionMask");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapLevelSelectionMask>(___internal__instance, "selectionMask"));
}
// Autogenerated instance field setter
// Set instance field: public BeatmapLevelSelectionMask selectionMask
void GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::_set_selectionMask(GlobalNamespace::BeatmapLevelSelectionMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::_set_selectionMask");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "selectionMask", value));
}
// Autogenerated instance field getter
// Get instance field: public GameplayServerConfiguration configuration
GlobalNamespace::GameplayServerConfiguration GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::_get_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::_get_configuration");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayServerConfiguration>(___internal__instance, "configuration"));
}
// Autogenerated instance field setter
// Set instance field: public GameplayServerConfiguration configuration
void GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::_set_configuration(GlobalNamespace::GameplayServerConfiguration value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::_set_configuration");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "configuration", value));
}
// Autogenerated method: LocalNetworkDiscoveryManager/JoinResponsePacket.Serialize
void GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: LocalNetworkDiscoveryManager/JoinResponsePacket.Deserialize
void GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::JoinResponsePacket::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocalNetworkDiscoveryManager/InviteRequestPacket
#include "GlobalNamespace/LocalNetworkDiscoveryManager_InviteRequestPacket.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String userId
::Il2CppString* GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::_get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::_get_userId");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "userId"));
}
// Autogenerated instance field setter
// Set instance field: public System.String userId
void GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::_set_userId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::_set_userId");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "userId", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String userName
::Il2CppString* GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::_get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::_get_userName");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "userName"));
}
// Autogenerated instance field setter
// Set instance field: public System.String userName
void GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::_set_userName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::_set_userName");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "userName", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String secret
::Il2CppString* GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::_get_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::_get_secret");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "secret"));
}
// Autogenerated instance field setter
// Set instance field: public System.String secret
void GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::_set_secret(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::_set_secret");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "secret", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 multiplayerPort
int GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::_get_multiplayerPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::_get_multiplayerPort");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "multiplayerPort"));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 multiplayerPort
void GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::_set_multiplayerPort(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::_set_multiplayerPort");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "multiplayerPort", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isPartyOwner
bool GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::_get_isPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::_get_isPartyOwner");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "isPartyOwner"));
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean isPartyOwner
void GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::_set_isPartyOwner(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::_set_isPartyOwner");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "isPartyOwner", value));
}
// Autogenerated instance field getter
// Get instance field: public BeatmapLevelSelectionMask selectionMask
GlobalNamespace::BeatmapLevelSelectionMask GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::_get_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::_get_selectionMask");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapLevelSelectionMask>(___internal__instance, "selectionMask"));
}
// Autogenerated instance field setter
// Set instance field: public BeatmapLevelSelectionMask selectionMask
void GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::_set_selectionMask(GlobalNamespace::BeatmapLevelSelectionMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::_set_selectionMask");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "selectionMask", value));
}
// Autogenerated instance field getter
// Get instance field: public GameplayServerConfiguration configuration
GlobalNamespace::GameplayServerConfiguration GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::_get_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::_get_configuration");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayServerConfiguration>(___internal__instance, "configuration"));
}
// Autogenerated instance field setter
// Set instance field: public GameplayServerConfiguration configuration
void GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::_set_configuration(GlobalNamespace::GameplayServerConfiguration value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::_set_configuration");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "configuration", value));
}
// Autogenerated method: LocalNetworkDiscoveryManager/InviteRequestPacket.Serialize
void GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: LocalNetworkDiscoveryManager/InviteRequestPacket.Deserialize
void GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestPacket::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocalNetworkDiscoveryManager/InviteResponsePacket
#include "GlobalNamespace/LocalNetworkDiscoveryManager_InviteResponsePacket.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String userId
::Il2CppString* GlobalNamespace::LocalNetworkDiscoveryManager::InviteResponsePacket::_get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::InviteResponsePacket::_get_userId");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "userId"));
}
// Autogenerated instance field setter
// Set instance field: public System.String userId
void GlobalNamespace::LocalNetworkDiscoveryManager::InviteResponsePacket::_set_userId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::InviteResponsePacket::_set_userId");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "userId", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean accepted
bool GlobalNamespace::LocalNetworkDiscoveryManager::InviteResponsePacket::_get_accepted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::InviteResponsePacket::_get_accepted");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "accepted"));
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean accepted
void GlobalNamespace::LocalNetworkDiscoveryManager::InviteResponsePacket::_set_accepted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::InviteResponsePacket::_set_accepted");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "accepted", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean blocked
bool GlobalNamespace::LocalNetworkDiscoveryManager::InviteResponsePacket::_get_blocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::InviteResponsePacket::_get_blocked");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "blocked"));
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean blocked
void GlobalNamespace::LocalNetworkDiscoveryManager::InviteResponsePacket::_set_blocked(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::InviteResponsePacket::_set_blocked");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "blocked", value));
}
// Autogenerated method: LocalNetworkDiscoveryManager/InviteResponsePacket.Serialize
void GlobalNamespace::LocalNetworkDiscoveryManager::InviteResponsePacket::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::InviteResponsePacket::Serialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: LocalNetworkDiscoveryManager/InviteResponsePacket.Deserialize
void GlobalNamespace::LocalNetworkDiscoveryManager::InviteResponsePacket::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::InviteResponsePacket::Deserialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocalNetworkDiscoveryManager/PeerUpdatedDelegate
#include "GlobalNamespace/LocalNetworkDiscoveryManager_PeerUpdatedDelegate.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LocalNetworkDiscoveryManager/PeerUpdatedDelegate.Invoke
void GlobalNamespace::LocalNetworkDiscoveryManager::PeerUpdatedDelegate::Invoke(::Il2CppString* userId, System::Net::IPAddress* remoteEndPoint, ::Il2CppString* userName, int currentPartySize, bool isPartyOwner, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::PeerUpdatedDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(currentPartySize), ::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, remoteEndPoint, userName, currentPartySize, isPartyOwner, selectionMask, configuration);
}
// Autogenerated method: LocalNetworkDiscoveryManager/PeerUpdatedDelegate.BeginInvoke
System::IAsyncResult* GlobalNamespace::LocalNetworkDiscoveryManager::PeerUpdatedDelegate::BeginInvoke(::Il2CppString* userId, System::Net::IPAddress* remoteEndPoint, ::Il2CppString* userName, int currentPartySize, bool isPartyOwner, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::PeerUpdatedDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(currentPartySize), ::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, userId, remoteEndPoint, userName, currentPartySize, isPartyOwner, selectionMask, configuration, callback, object);
}
// Autogenerated method: LocalNetworkDiscoveryManager/PeerUpdatedDelegate.EndInvoke
void GlobalNamespace::LocalNetworkDiscoveryManager::PeerUpdatedDelegate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::PeerUpdatedDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocalNetworkDiscoveryManager/JoinRequestedDelegate
#include "GlobalNamespace/LocalNetworkDiscoveryManager_JoinRequestedDelegate.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LocalNetworkDiscoveryManager/JoinRequestedDelegate.Invoke
void GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestedDelegate::Invoke(::Il2CppString* userId, System::Net::IPAddress* remoteEndPoint, ::Il2CppString* userName) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestedDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(userName)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, remoteEndPoint, userName);
}
// Autogenerated method: LocalNetworkDiscoveryManager/JoinRequestedDelegate.BeginInvoke
System::IAsyncResult* GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestedDelegate::BeginInvoke(::Il2CppString* userId, System::Net::IPAddress* remoteEndPoint, ::Il2CppString* userName, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestedDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, userId, remoteEndPoint, userName, callback, object);
}
// Autogenerated method: LocalNetworkDiscoveryManager/JoinRequestedDelegate.EndInvoke
void GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestedDelegate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::JoinRequestedDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocalNetworkDiscoveryManager/JoinRespondedDelegate
#include "GlobalNamespace/LocalNetworkDiscoveryManager_JoinRespondedDelegate.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LocalNetworkDiscoveryManager/JoinRespondedDelegate.Invoke
void GlobalNamespace::LocalNetworkDiscoveryManager::JoinRespondedDelegate::Invoke(::Il2CppString* userId, ::Il2CppString* secret, int multiplayerPort, bool blocked, bool isPartyOwner, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::JoinRespondedDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(multiplayerPort), ::il2cpp_utils::ExtractType(blocked), ::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, secret, multiplayerPort, blocked, isPartyOwner, selectionMask, configuration);
}
// Autogenerated method: LocalNetworkDiscoveryManager/JoinRespondedDelegate.BeginInvoke
System::IAsyncResult* GlobalNamespace::LocalNetworkDiscoveryManager::JoinRespondedDelegate::BeginInvoke(::Il2CppString* userId, ::Il2CppString* secret, int multiplayerPort, bool blocked, bool isPartyOwner, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::JoinRespondedDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(multiplayerPort), ::il2cpp_utils::ExtractType(blocked), ::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, userId, secret, multiplayerPort, blocked, isPartyOwner, selectionMask, configuration, callback, object);
}
// Autogenerated method: LocalNetworkDiscoveryManager/JoinRespondedDelegate.EndInvoke
void GlobalNamespace::LocalNetworkDiscoveryManager::JoinRespondedDelegate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::JoinRespondedDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocalNetworkDiscoveryManager/InviteRequestedDelegate
#include "GlobalNamespace/LocalNetworkDiscoveryManager_InviteRequestedDelegate.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LocalNetworkDiscoveryManager/InviteRequestedDelegate.Invoke
void GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestedDelegate::Invoke(::Il2CppString* userId, System::Net::IPAddress* remoteEndPoint, ::Il2CppString* userName, ::Il2CppString* secret, int multiplayerPort, bool isPartyOwner, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestedDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(multiplayerPort), ::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, remoteEndPoint, userName, secret, multiplayerPort, isPartyOwner, selectionMask, configuration);
}
// Autogenerated method: LocalNetworkDiscoveryManager/InviteRequestedDelegate.BeginInvoke
System::IAsyncResult* GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestedDelegate::BeginInvoke(::Il2CppString* userId, System::Net::IPAddress* remoteEndPoint, ::Il2CppString* userName, ::Il2CppString* secret, int multiplayerPort, bool isPartyOwner, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestedDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(remoteEndPoint), ::il2cpp_utils::ExtractType(userName), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(multiplayerPort), ::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, userId, remoteEndPoint, userName, secret, multiplayerPort, isPartyOwner, selectionMask, configuration, callback, object);
}
// Autogenerated method: LocalNetworkDiscoveryManager/InviteRequestedDelegate.EndInvoke
void GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestedDelegate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::InviteRequestedDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocalNetworkDiscoveryManager/InviteRespondedDelegate
#include "GlobalNamespace/LocalNetworkDiscoveryManager_InviteRespondedDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LocalNetworkDiscoveryManager/InviteRespondedDelegate.Invoke
void GlobalNamespace::LocalNetworkDiscoveryManager::InviteRespondedDelegate::Invoke(::Il2CppString* userId, bool accepted, bool blocked) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::InviteRespondedDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(accepted), ::il2cpp_utils::ExtractType(blocked)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, accepted, blocked);
}
// Autogenerated method: LocalNetworkDiscoveryManager/InviteRespondedDelegate.BeginInvoke
System::IAsyncResult* GlobalNamespace::LocalNetworkDiscoveryManager::InviteRespondedDelegate::BeginInvoke(::Il2CppString* userId, bool accepted, bool blocked, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::InviteRespondedDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(accepted), ::il2cpp_utils::ExtractType(blocked), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, userId, accepted, blocked, callback, object);
}
// Autogenerated method: LocalNetworkDiscoveryManager/InviteRespondedDelegate.EndInvoke
void GlobalNamespace::LocalNetworkDiscoveryManager::InviteRespondedDelegate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkDiscoveryManager::InviteRespondedDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocalNetworkPlayerModel
#include "GlobalNamespace/LocalNetworkPlayerModel.hpp"
// Including type: LocalNetworkPlayerModel/LocalNetworkPlayer
#include "GlobalNamespace/LocalNetworkPlayerModel_LocalNetworkPlayer.hpp"
// Including type: LocalNetworkPlayerModel/CreatePartyConfig
#include "GlobalNamespace/LocalNetworkPlayerModel_CreatePartyConfig.hpp"
// Including type: LocalNetworkPlayerModel/<Start>d__40
#include "GlobalNamespace/LocalNetworkPlayerModel_-Start-d__40.hpp"
// Including type: LocalNetworkDiscoveryManager
#include "GlobalNamespace/LocalNetworkDiscoveryManager.hpp"
// Including type: IPlatformUserModel
#include "GlobalNamespace/IPlatformUserModel.hpp"
// Including type: INetworkConfig
#include "GlobalNamespace/INetworkConfig.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: INetworkPlayerModel
#include "GlobalNamespace/INetworkPlayerModel.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: LiteNetLibConnectionManager
#include "GlobalNamespace/LiteNetLibConnectionManager.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: ConnectionFailedReason
#include "GlobalNamespace/ConnectionFailedReason.hpp"
// Including type: INetworkPlayerModelPartyConfig`1
#include "GlobalNamespace/INetworkPlayerModelPartyConfig_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private LocalNetworkDiscoveryManager _discoveryManager
GlobalNamespace::LocalNetworkDiscoveryManager* GlobalNamespace::LocalNetworkPlayerModel::_get__discoveryManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::_get__discoveryManager");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LocalNetworkDiscoveryManager*>(___internal__instance, "_discoveryManager"));
}
// Autogenerated instance field setter
// Set instance field: private LocalNetworkDiscoveryManager _discoveryManager
void GlobalNamespace::LocalNetworkPlayerModel::_set__discoveryManager(GlobalNamespace::LocalNetworkDiscoveryManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::_set__discoveryManager");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_discoveryManager", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly IPlatformUserModel _platformUserModel
GlobalNamespace::IPlatformUserModel* GlobalNamespace::LocalNetworkPlayerModel::_get__platformUserModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::_get__platformUserModel");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::IPlatformUserModel*>(___internal__instance, "_platformUserModel"));
}
// Autogenerated instance field setter
// Set instance field: private readonly IPlatformUserModel _platformUserModel
void GlobalNamespace::LocalNetworkPlayerModel::_set__platformUserModel(GlobalNamespace::IPlatformUserModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::_set__platformUserModel");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_platformUserModel", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly INetworkConfig _networkConfig
GlobalNamespace::INetworkConfig* GlobalNamespace::LocalNetworkPlayerModel::_get__networkConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::_get__networkConfig");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::INetworkConfig*>(___internal__instance, "_networkConfig"));
}
// Autogenerated instance field setter
// Set instance field: private readonly INetworkConfig _networkConfig
void GlobalNamespace::LocalNetworkPlayerModel::_set__networkConfig(GlobalNamespace::INetworkConfig* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::_set__networkConfig");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_networkConfig", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<LocalNetworkPlayerModel/LocalNetworkPlayer> _partyPlayers
System::Collections::Generic::List_1<GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer*>* GlobalNamespace::LocalNetworkPlayerModel::_get__partyPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::_get__partyPlayers");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer*>*>(___internal__instance, "_partyPlayers"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Collections.Generic.List`1<LocalNetworkPlayerModel/LocalNetworkPlayer> _partyPlayers
void GlobalNamespace::LocalNetworkPlayerModel::_set__partyPlayers(System::Collections::Generic::List_1<GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::_set__partyPlayers");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_partyPlayers", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<LocalNetworkPlayerModel/LocalNetworkPlayer> _otherPlayers
System::Collections::Generic::List_1<GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer*>* GlobalNamespace::LocalNetworkPlayerModel::_get__otherPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::_get__otherPlayers");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer*>*>(___internal__instance, "_otherPlayers"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Collections.Generic.List`1<LocalNetworkPlayerModel/LocalNetworkPlayer> _otherPlayers
void GlobalNamespace::LocalNetworkPlayerModel::_set__otherPlayers(System::Collections::Generic::List_1<GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::_set__otherPlayers");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_otherPlayers", value));
}
// Autogenerated instance field getter
// Get instance field: private LocalNetworkPlayerModel/LocalNetworkPlayer _localPlayer
GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer* GlobalNamespace::LocalNetworkPlayerModel::_get__localPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::_get__localPlayer");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer*>(___internal__instance, "_localPlayer"));
}
// Autogenerated instance field setter
// Set instance field: private LocalNetworkPlayerModel/LocalNetworkPlayer _localPlayer
void GlobalNamespace::LocalNetworkPlayerModel::_set__localPlayer(GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::_set__localPlayer");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_localPlayer", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _networkingFailed
bool GlobalNamespace::LocalNetworkPlayerModel::_get__networkingFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::_get__networkingFailed");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_networkingFailed"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _networkingFailed
void GlobalNamespace::LocalNetworkPlayerModel::_set__networkingFailed(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::_set__networkingFailed");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_networkingFailed", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _partyEnabled
bool GlobalNamespace::LocalNetworkPlayerModel::_get__partyEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::_get__partyEnabled");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_partyEnabled"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _partyEnabled
void GlobalNamespace::LocalNetworkPlayerModel::_set__partyEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::_set__partyEnabled");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_partyEnabled", value));
}
// Autogenerated instance field getter
// Get instance field: private INetworkPlayerModel _partyManager
GlobalNamespace::INetworkPlayerModel* GlobalNamespace::LocalNetworkPlayerModel::_get__partyManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::_get__partyManager");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::INetworkPlayerModel*>(___internal__instance, "_partyManager"));
}
// Autogenerated instance field setter
// Set instance field: private INetworkPlayerModel _partyManager
void GlobalNamespace::LocalNetworkPlayerModel::_set__partyManager(GlobalNamespace::INetworkPlayerModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::_set__partyManager");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_partyManager", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Int32> partySizeChangedEvent
System::Action_1<int>* GlobalNamespace::LocalNetworkPlayerModel::_get_partySizeChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::_get_partySizeChangedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<int>*>(___internal__instance, "partySizeChangedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<System.Int32> partySizeChangedEvent
void GlobalNamespace::LocalNetworkPlayerModel::_set_partySizeChangedEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::_set_partySizeChangedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "partySizeChangedEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<INetworkPlayerModel> partyChangedEvent
System::Action_1<GlobalNamespace::INetworkPlayerModel*>* GlobalNamespace::LocalNetworkPlayerModel::_get_partyChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::_get_partyChangedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<GlobalNamespace::INetworkPlayerModel*>*>(___internal__instance, "partyChangedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<INetworkPlayerModel> partyChangedEvent
void GlobalNamespace::LocalNetworkPlayerModel::_set_partyChangedEvent(System::Action_1<GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::_set_partyChangedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "partyChangedEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<INetworkPlayer> joinRequestedEvent
System::Action_1<GlobalNamespace::INetworkPlayer*>* GlobalNamespace::LocalNetworkPlayerModel::_get_joinRequestedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::_get_joinRequestedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<GlobalNamespace::INetworkPlayer*>*>(___internal__instance, "joinRequestedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<INetworkPlayer> joinRequestedEvent
void GlobalNamespace::LocalNetworkPlayerModel::_set_joinRequestedEvent(System::Action_1<GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::_set_joinRequestedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "joinRequestedEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<INetworkPlayer> inviteRequestedEvent
System::Action_1<GlobalNamespace::INetworkPlayer*>* GlobalNamespace::LocalNetworkPlayerModel::_get_inviteRequestedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::_get_inviteRequestedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<GlobalNamespace::INetworkPlayer*>*>(___internal__instance, "inviteRequestedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<INetworkPlayer> inviteRequestedEvent
void GlobalNamespace::LocalNetworkPlayerModel::_set_inviteRequestedEvent(System::Action_1<GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::_set_inviteRequestedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "inviteRequestedEvent", value));
}
// Autogenerated method: LocalNetworkPlayerModel.get_canInvitePlayers
bool GlobalNamespace::LocalNetworkPlayerModel::get_canInvitePlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::get_canInvitePlayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canInvitePlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.get_hasConnectedPeers
bool GlobalNamespace::LocalNetworkPlayerModel::get_hasConnectedPeers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::get_hasConnectedPeers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasConnectedPeers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.get_otherPlayers
System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>* GlobalNamespace::LocalNetworkPlayerModel::get_otherPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::get_otherPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_otherPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.get_hasNetworkingFailed
bool GlobalNamespace::LocalNetworkPlayerModel::get_hasNetworkingFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::get_hasNetworkingFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasNetworkingFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.get_liteNetLibConnectionManager
GlobalNamespace::LiteNetLibConnectionManager* GlobalNamespace::LocalNetworkPlayerModel::get_liteNetLibConnectionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::get_liteNetLibConnectionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_liteNetLibConnectionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::LiteNetLibConnectionManager*, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.TryGetPlayer
bool GlobalNamespace::LocalNetworkPlayerModel::TryGetPlayer(::Il2CppString* userId, GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer*& player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::TryGetPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, userId, player);
}
// Autogenerated method: LocalNetworkPlayerModel.GetPlayer
GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer* GlobalNamespace::LocalNetworkPlayerModel::GetPlayer(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::GetPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer*, false>(this, ___internal__method, userId);
}
// Autogenerated method: LocalNetworkPlayerModel.RefreshLocalPlayer
void GlobalNamespace::LocalNetworkPlayerModel::RefreshLocalPlayer(bool forcePlayersChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::RefreshLocalPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshLocalPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forcePlayersChanged)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, forcePlayersChanged);
}
// Autogenerated method: LocalNetworkPlayerModel.HandlePeerUpdate
void GlobalNamespace::LocalNetworkPlayerModel::HandlePeerUpdate(::Il2CppString* userId, System::Net::IPAddress* ipAddress, ::Il2CppString* encryptedUserName, int currentPartySize, bool isPartyOwner, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::HandlePeerUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePeerUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(ipAddress), ::il2cpp_utils::ExtractType(encryptedUserName), ::il2cpp_utils::ExtractType(currentPartySize), ::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, ipAddress, encryptedUserName, currentPartySize, isPartyOwner, selectionMask, configuration);
}
// Autogenerated method: LocalNetworkPlayerModel.SendJoinRequest
void GlobalNamespace::LocalNetworkPlayerModel::SendJoinRequest(GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::SendJoinRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendJoinRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: LocalNetworkPlayerModel.HandleJoinRequest
void GlobalNamespace::LocalNetworkPlayerModel::HandleJoinRequest(::Il2CppString* userId, System::Net::IPAddress* ipAddress, ::Il2CppString* encryptedUserName) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::HandleJoinRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleJoinRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(ipAddress), ::il2cpp_utils::ExtractType(encryptedUserName)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, ipAddress, encryptedUserName);
}
// Autogenerated method: LocalNetworkPlayerModel.SendJoinResponse
void GlobalNamespace::LocalNetworkPlayerModel::SendJoinResponse(GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer* player, bool allowJoin) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::SendJoinResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendJoinResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(allowJoin)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, player, allowJoin);
}
// Autogenerated method: LocalNetworkPlayerModel.HandleJoinResponse
void GlobalNamespace::LocalNetworkPlayerModel::HandleJoinResponse(::Il2CppString* id, ::Il2CppString* secret, int multiplayerPort, bool blocked, bool isPartyOwner, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::HandleJoinResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleJoinResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(multiplayerPort), ::il2cpp_utils::ExtractType(blocked), ::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, id, secret, multiplayerPort, blocked, isPartyOwner, selectionMask, configuration);
}
// Autogenerated method: LocalNetworkPlayerModel.SendInviteRequest
void GlobalNamespace::LocalNetworkPlayerModel::SendInviteRequest(GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::SendInviteRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendInviteRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: LocalNetworkPlayerModel.HandleInviteRequest
void GlobalNamespace::LocalNetworkPlayerModel::HandleInviteRequest(::Il2CppString* userId, System::Net::IPAddress* ipAddress, ::Il2CppString* encryptedUserName, ::Il2CppString* secret, int multiplayerPort, bool isPartyOwner, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::HandleInviteRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInviteRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(ipAddress), ::il2cpp_utils::ExtractType(encryptedUserName), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(multiplayerPort), ::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, ipAddress, encryptedUserName, secret, multiplayerPort, isPartyOwner, selectionMask, configuration);
}
// Autogenerated method: LocalNetworkPlayerModel.SendInviteResponse
void GlobalNamespace::LocalNetworkPlayerModel::SendInviteResponse(GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer* player, bool acceptInvite) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::SendInviteResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendInviteResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player), ::il2cpp_utils::ExtractType(acceptInvite)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, player, acceptInvite);
}
// Autogenerated method: LocalNetworkPlayerModel.HandleInviteResponse
void GlobalNamespace::LocalNetworkPlayerModel::HandleInviteResponse(::Il2CppString* userId, bool accepted, bool blocked) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::HandleInviteResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInviteResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(accepted), ::il2cpp_utils::ExtractType(blocked)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, accepted, blocked);
}
// Autogenerated method: LocalNetworkPlayerModel.ConnectToPeer
void GlobalNamespace::LocalNetworkPlayerModel::ConnectToPeer(GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::ConnectToPeer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectToPeer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: LocalNetworkPlayerModel.DisconnectPeer
void GlobalNamespace::LocalNetworkPlayerModel::DisconnectPeer(GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::DisconnectPeer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisconnectPeer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: LocalNetworkPlayerModel.HandlePlayersChanged
void GlobalNamespace::LocalNetworkPlayerModel::HandlePlayersChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::HandlePlayersChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlayersChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.TryStartServer
void GlobalNamespace::LocalNetworkPlayerModel::TryStartServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::TryStartServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryStartServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.get_currentPartySize
int GlobalNamespace::LocalNetworkPlayerModel::get_currentPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::get_currentPartySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.get_discoveryEnabled
bool GlobalNamespace::LocalNetworkPlayerModel::get_discoveryEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::get_discoveryEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_discoveryEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.set_discoveryEnabled
void GlobalNamespace::LocalNetworkPlayerModel::set_discoveryEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::set_discoveryEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_discoveryEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkPlayerModel.get_localPlayerIsPartyOwner
bool GlobalNamespace::LocalNetworkPlayerModel::get_localPlayerIsPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::get_localPlayerIsPartyOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayerIsPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.add_partySizeChangedEvent
void GlobalNamespace::LocalNetworkPlayerModel::add_partySizeChangedEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::add_partySizeChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_partySizeChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkPlayerModel.remove_partySizeChangedEvent
void GlobalNamespace::LocalNetworkPlayerModel::remove_partySizeChangedEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::remove_partySizeChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_partySizeChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkPlayerModel.add_partyChangedEvent
void GlobalNamespace::LocalNetworkPlayerModel::add_partyChangedEvent(System::Action_1<GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::add_partyChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_partyChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkPlayerModel.remove_partyChangedEvent
void GlobalNamespace::LocalNetworkPlayerModel::remove_partyChangedEvent(System::Action_1<GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::remove_partyChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_partyChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkPlayerModel.add_joinRequestedEvent
void GlobalNamespace::LocalNetworkPlayerModel::add_joinRequestedEvent(System::Action_1<GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::add_joinRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_joinRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkPlayerModel.remove_joinRequestedEvent
void GlobalNamespace::LocalNetworkPlayerModel::remove_joinRequestedEvent(System::Action_1<GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::remove_joinRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_joinRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkPlayerModel.add_inviteRequestedEvent
void GlobalNamespace::LocalNetworkPlayerModel::add_inviteRequestedEvent(System::Action_1<GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::add_inviteRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_inviteRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkPlayerModel.remove_inviteRequestedEvent
void GlobalNamespace::LocalNetworkPlayerModel::remove_inviteRequestedEvent(System::Action_1<GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::remove_inviteRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_inviteRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LocalNetworkPlayerModel.Start
void GlobalNamespace::LocalNetworkPlayerModel::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.Update
void GlobalNamespace::LocalNetworkPlayerModel::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.OnDestroy
void GlobalNamespace::LocalNetworkPlayerModel::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.GetPartyPlayers
System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>* GlobalNamespace::LocalNetworkPlayerModel::GetPartyPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::GetPartyPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPartyPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.GetOtherPlayers
System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>* GlobalNamespace::LocalNetworkPlayerModel::GetOtherPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::GetOtherPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOtherPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.PlayerConnected
void GlobalNamespace::LocalNetworkPlayerModel::PlayerConnected(GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::PlayerConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, connectedPlayer);
}
// Autogenerated method: LocalNetworkPlayerModel.ConnectionFailed
void GlobalNamespace::LocalNetworkPlayerModel::ConnectionFailed(GlobalNamespace::ConnectionFailedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::ConnectionFailed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectionFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reason)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reason);
}
// Autogenerated method: LocalNetworkPlayerModel.PlayerDisconnected
void GlobalNamespace::LocalNetworkPlayerModel::PlayerDisconnected(GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::PlayerDisconnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, connectedPlayer);
}
// Autogenerated method: LocalNetworkPlayerModel.PartySizeChanged
void GlobalNamespace::LocalNetworkPlayerModel::PartySizeChanged(int currentPartySize) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::PartySizeChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PartySizeChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentPartySize)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, currentPartySize);
}
// Autogenerated method: LocalNetworkPlayerModel.DestroyPartyConnection
void GlobalNamespace::LocalNetworkPlayerModel::DestroyPartyConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::DestroyPartyConnection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyPartyConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel.ConnectedPlayerManagerChanged
void GlobalNamespace::LocalNetworkPlayerModel::ConnectedPlayerManagerChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::ConnectedPlayerManagerChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectedPlayerManagerChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocalNetworkPlayerModel/LocalNetworkPlayer
#include "GlobalNamespace/LocalNetworkPlayerModel_LocalNetworkPlayer.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kPeerBroadcastTimeout
float GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get_kPeerBroadcastTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get_kPeerBroadcastTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "LocalNetworkPlayerModel/LocalNetworkPlayer", "kPeerBroadcastTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kPeerBroadcastTimeout
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set_kPeerBroadcastTimeout(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set_kPeerBroadcastTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalNetworkPlayerModel/LocalNetworkPlayer", "kPeerBroadcastTimeout", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kConnectionTimeout
float GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get_kConnectionTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get_kConnectionTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "LocalNetworkPlayerModel/LocalNetworkPlayer", "kConnectionTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kConnectionTimeout
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set_kConnectionTimeout(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set_kConnectionTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalNetworkPlayerModel/LocalNetworkPlayer", "kConnectionTimeout", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kRequestTimeout
float GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get_kRequestTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get_kRequestTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "LocalNetworkPlayerModel/LocalNetworkPlayer", "kRequestTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kRequestTimeout
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set_kRequestTimeout(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set_kRequestTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalNetworkPlayerModel/LocalNetworkPlayer", "kRequestTimeout", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly LocalNetworkPlayerModel _playerModel
GlobalNamespace::LocalNetworkPlayerModel* GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__playerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__playerModel");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LocalNetworkPlayerModel*>(___internal__instance, "_playerModel"));
}
// Autogenerated instance field setter
// Set instance field: private readonly LocalNetworkPlayerModel _playerModel
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__playerModel(GlobalNamespace::LocalNetworkPlayerModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__playerModel");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_playerModel", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _userId
::Il2CppString* GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__userId");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "_userId"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.String _userId
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__userId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__userId");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_userId", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _userName
::Il2CppString* GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__userName");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "_userName"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.String _userName
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__userName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__userName");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_userName", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Net.IPAddress _ipAddress
System::Net::IPAddress* GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__ipAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__ipAddress");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::IPAddress*>(___internal__instance, "_ipAddress"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Net.IPAddress _ipAddress
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__ipAddress(System::Net::IPAddress* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__ipAddress");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_ipAddress", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _isMe
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__isMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__isMe");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_isMe"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Boolean _isMe
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__isMe(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__isMe");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_isMe", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isPartyOwner
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__isPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__isPartyOwner");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_isPartyOwner"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _isPartyOwner
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__isPartyOwner(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__isPartyOwner");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_isPartyOwner", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single _joinRequestTime
float GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__joinRequestTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__joinRequestTime");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "_joinRequestTime"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single _joinRequestTime
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__joinRequestTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__joinRequestTime");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_joinRequestTime", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single _inviteSentTime
float GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__inviteSentTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__inviteSentTime");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "_inviteSentTime"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single _inviteSentTime
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__inviteSentTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__inviteSentTime");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_inviteSentTime", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isBlocked
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__isBlocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__isBlocked");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_isBlocked"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _isBlocked
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__isBlocked(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__isBlocked");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_isBlocked", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasBlockedMe
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__hasBlockedMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__hasBlockedMe");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_hasBlockedMe"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _hasBlockedMe
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__hasBlockedMe(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__hasBlockedMe");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_hasBlockedMe", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String _secret
::Il2CppString* GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__secret");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "_secret"));
}
// Autogenerated instance field setter
// Set instance field: private System.String _secret
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__secret(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__secret");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_secret", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _multiplayerPort
int GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__multiplayerPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__multiplayerPort");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "_multiplayerPort"));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _multiplayerPort
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__multiplayerPort(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__multiplayerPort");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_multiplayerPort", value));
}
// Autogenerated instance field getter
// Get instance field: private IConnectedPlayer _connectedPlayer
GlobalNamespace::IConnectedPlayer* GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__connectedPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__connectedPlayer");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::IConnectedPlayer*>(___internal__instance, "_connectedPlayer"));
}
// Autogenerated instance field setter
// Set instance field: private IConnectedPlayer _connectedPlayer
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__connectedPlayer(GlobalNamespace::IConnectedPlayer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__connectedPlayer");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_connectedPlayer", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single _connectingStartTime
float GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__connectingStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__connectingStartTime");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "_connectingStartTime"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single _connectingStartTime
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__connectingStartTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__connectingStartTime");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_connectingStartTime", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _currentPartySize
int GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__currentPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__currentPartySize");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "_currentPartySize"));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _currentPartySize
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__currentPartySize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__currentPartySize");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_currentPartySize", value));
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelSelectionMask _selectionMask
GlobalNamespace::BeatmapLevelSelectionMask GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__selectionMask");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapLevelSelectionMask>(___internal__instance, "_selectionMask"));
}
// Autogenerated instance field setter
// Set instance field: private BeatmapLevelSelectionMask _selectionMask
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__selectionMask(GlobalNamespace::BeatmapLevelSelectionMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__selectionMask");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_selectionMask", value));
}
// Autogenerated instance field getter
// Get instance field: private GameplayServerConfiguration _configuration
GlobalNamespace::GameplayServerConfiguration GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__configuration");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayServerConfiguration>(___internal__instance, "_configuration"));
}
// Autogenerated instance field setter
// Set instance field: private GameplayServerConfiguration _configuration
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__configuration(GlobalNamespace::GameplayServerConfiguration value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__configuration");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_configuration", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastUpdateTime
float GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__lastUpdateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__lastUpdateTime");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "_lastUpdateTime"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single _lastUpdateTime
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__lastUpdateTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__lastUpdateTime");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_lastUpdateTime", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _allowedJoinToMyParty
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__allowedJoinToMyParty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__allowedJoinToMyParty");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_allowedJoinToMyParty"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _allowedJoinToMyParty
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__allowedJoinToMyParty(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__allowedJoinToMyParty");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_allowedJoinToMyParty", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _requestedToJoinMyParty
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__requestedToJoinMyParty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__requestedToJoinMyParty");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_requestedToJoinMyParty"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _requestedToJoinMyParty
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__requestedToJoinMyParty(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__requestedToJoinMyParty");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_requestedToJoinMyParty", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _invitedMeToJoinTheirParty
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__invitedMeToJoinTheirParty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_get__invitedMeToJoinTheirParty");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_invitedMeToJoinTheirParty"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _invitedMeToJoinTheirParty
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__invitedMeToJoinTheirParty(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::_set__invitedMeToJoinTheirParty");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_invitedMeToJoinTheirParty", value));
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_userId
::Il2CppString* GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_userId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_userName
::Il2CppString* GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_ipAddress
System::Net::IPAddress* GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_ipAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_ipAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ipAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::IPAddress*, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_isMe
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isMe");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isMe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_isPartyOwner
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isPartyOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_currentPartySize
int GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_currentPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_currentPartySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_selectionMask
GlobalNamespace::BeatmapLevelSelectionMask GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_selectionMask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapLevelSelectionMask, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_configuration
GlobalNamespace::GameplayServerConfiguration GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_configuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayServerConfiguration, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_connectedPlayer
GlobalNamespace::IConnectedPlayer* GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_connectedPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_connectedPlayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_isBlocked
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isBlocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isBlocked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isBlocked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_hasBlockedMe
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_hasBlockedMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_hasBlockedMe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasBlockedMe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_secret
::Il2CppString* GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_secret");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_secret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_multiplayerPort
int GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_multiplayerPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_multiplayerPort");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplayerPort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_isMyPartyOwner
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isMyPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isMyPartyOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isMyPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_isConnected
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_allowedJoinToMyParty
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_allowedJoinToMyParty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_allowedJoinToMyParty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_allowedJoinToMyParty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_isConnecting
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isConnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isConnecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_wasConnecting
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_wasConnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_wasConnecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_wasConnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_isTimedOut
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isTimedOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isTimedOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isTimedOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_isWaitingOnJoin
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isWaitingOnJoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isWaitingOnJoin");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isWaitingOnJoin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_canJoin
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_canJoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_canJoin");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canJoin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_requiresPassword
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_requiresPassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_requiresPassword");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_requiresPassword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_isWaitingOnInvite
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isWaitingOnInvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isWaitingOnInvite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isWaitingOnInvite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_canInvite
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_canInvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_canInvite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canInvite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_canKick
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_canKick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_canKick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canKick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_canLeave
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_canLeave() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_canLeave");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canLeave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_canBlock
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_canBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_canBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_canUnblock
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_canUnblock() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_canUnblock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canUnblock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.get_isConnectable
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isConnectable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::get_isConnectable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.Join
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Join() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Join");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.Join
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Join(::Il2CppString* password) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Join");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(password)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, password);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.Invite
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Invite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Invite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.Kick
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Kick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Kick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Kick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.Leave
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Leave() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Leave");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Leave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.Block
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Block() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Block");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.Unblock
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Unblock() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Unblock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unblock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.SendJoinResponse
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SendJoinResponse(bool accept) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SendJoinResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendJoinResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(accept)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, accept);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.SendInviteResponse
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SendInviteResponse(bool accept) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SendInviteResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendInviteResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(accept)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, accept);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.Update
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Update(bool isPartyOwner, int currentPartySize, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(currentPartySize), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, isPartyOwner, currentPartySize, selectionMask, configuration);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.HasFailedToConnect
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::HasFailedToConnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::HasFailedToConnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasFailedToConnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.SetInvited
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SetInvited(bool isPartyOwner, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration, ::Il2CppString* secret, int multiplayerPort) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SetInvited");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInvited", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(multiplayerPort)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isPartyOwner, selectionMask, configuration, secret, multiplayerPort);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.SetJoinResponse
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SetJoinResponse(bool isPartyOwner, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration, ::Il2CppString* secret, int multiplayerPort, bool blocked) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SetJoinResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetJoinResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isPartyOwner), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(multiplayerPort), ::il2cpp_utils::ExtractType(blocked)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isPartyOwner, selectionMask, configuration, secret, multiplayerPort, blocked);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.SetInviteResponse
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SetInviteResponse(bool accepted, bool blocked) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SetInviteResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInviteResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(accepted), ::il2cpp_utils::ExtractType(blocked)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, accepted, blocked);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.SetJoinRequested
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SetJoinRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SetJoinRequested");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetJoinRequested", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.SetConnected
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SetConnected(GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SetConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, connectedPlayer);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.SetDisconnected
bool GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SetDisconnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::SetDisconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/LocalNetworkPlayer.Connect
void GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Connect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::LocalNetworkPlayer::Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalNetworkPlayerModel/CreatePartyConfig
#include "GlobalNamespace/LocalNetworkPlayerModel_CreatePartyConfig.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalNetworkPlayerModel/<Start>d__40
#include "GlobalNamespace/LocalNetworkPlayerModel_-Start-d__40.hpp"
// Including type: UserInfo
#include "GlobalNamespace/UserInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int GlobalNamespace::LocalNetworkPlayerModel::$Start$d__40::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::$Start$d__40::_get_$$1__state");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>(___internal__instance, "<>1__state")));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 <>1__state
void GlobalNamespace::LocalNetworkPlayerModel::$Start$d__40::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::$Start$d__40::_set_$$1__state");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>1__state", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncVoidMethodBuilder GlobalNamespace::LocalNetworkPlayerModel::$Start$d__40::_get_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::$Start$d__40::_get_$$t__builder");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Runtime::CompilerServices::AsyncVoidMethodBuilder>(___internal__instance, "<>t__builder")));
}
// Autogenerated instance field setter
// Set instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
void GlobalNamespace::LocalNetworkPlayerModel::$Start$d__40::_set_$$t__builder(System::Runtime::CompilerServices::AsyncVoidMethodBuilder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::$Start$d__40::_set_$$t__builder");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>t__builder", value));
}
// Autogenerated instance field getter
// Get instance field: public LocalNetworkPlayerModel <>4__this
GlobalNamespace::LocalNetworkPlayerModel* GlobalNamespace::LocalNetworkPlayerModel::$Start$d__40::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::$Start$d__40::_get_$$4__this");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::LocalNetworkPlayerModel*>(___internal__instance, "<>4__this")));
}
// Autogenerated instance field setter
// Set instance field: public LocalNetworkPlayerModel <>4__this
void GlobalNamespace::LocalNetworkPlayerModel::$Start$d__40::_set_$$4__this(GlobalNamespace::LocalNetworkPlayerModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::$Start$d__40::_set_$$4__this");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>4__this", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<UserInfo> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::UserInfo*> GlobalNamespace::LocalNetworkPlayerModel::$Start$d__40::_get_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::$Start$d__40::_get_$$u__1");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::UserInfo*>>(___internal__instance, "<>u__1")));
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<UserInfo> <>u__1
void GlobalNamespace::LocalNetworkPlayerModel::$Start$d__40::_set_$$u__1(System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::UserInfo*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::$Start$d__40::_set_$$u__1");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>u__1", value));
}
// Autogenerated method: LocalNetworkPlayerModel/<Start>d__40.MoveNext
void GlobalNamespace::LocalNetworkPlayerModel::$Start$d__40::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::$Start$d__40::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayerModel/<Start>d__40.SetStateMachine
void GlobalNamespace::LocalNetworkPlayerModel::$Start$d__40::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayerModel::$Start$d__40::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NetworkConfigSO
#include "GlobalNamespace/NetworkConfigSO.hpp"
// Including type: MasterServerEndPoint
#include "GlobalNamespace/MasterServerEndPoint.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxPartySize
int GlobalNamespace::NetworkConfigSO::_get__maxPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConfigSO::_get__maxPartySize");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "_maxPartySize"));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _maxPartySize
void GlobalNamespace::NetworkConfigSO::_set__maxPartySize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConfigSO::_set__maxPartySize");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_maxPartySize", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _discoveryPort
int GlobalNamespace::NetworkConfigSO::_get__discoveryPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConfigSO::_get__discoveryPort");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "_discoveryPort"));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _discoveryPort
void GlobalNamespace::NetworkConfigSO::_set__discoveryPort(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConfigSO::_set__discoveryPort");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_discoveryPort", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _partyPort
int GlobalNamespace::NetworkConfigSO::_get__partyPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConfigSO::_get__partyPort");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "_partyPort"));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _partyPort
void GlobalNamespace::NetworkConfigSO::_set__partyPort(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConfigSO::_set__partyPort");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_partyPort", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _multiplayerPort
int GlobalNamespace::NetworkConfigSO::_get__multiplayerPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConfigSO::_get__multiplayerPort");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "_multiplayerPort"));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _multiplayerPort
void GlobalNamespace::NetworkConfigSO::_set__multiplayerPort(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConfigSO::_set__multiplayerPort");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_multiplayerPort", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _masterServerPort
int GlobalNamespace::NetworkConfigSO::_get__masterServerPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConfigSO::_get__masterServerPort");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "_masterServerPort"));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _masterServerPort
void GlobalNamespace::NetworkConfigSO::_set__masterServerPort(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConfigSO::_set__masterServerPort");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_masterServerPort", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String _masterServerHostName
::Il2CppString* GlobalNamespace::NetworkConfigSO::_get__masterServerHostName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConfigSO::_get__masterServerHostName");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "_masterServerHostName"));
}
// Autogenerated instance field setter
// Set instance field: private System.String _masterServerHostName
void GlobalNamespace::NetworkConfigSO::_set__masterServerHostName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConfigSO::_set__masterServerHostName");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_masterServerHostName", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String _masterServerStatusUrl
::Il2CppString* GlobalNamespace::NetworkConfigSO::_get__masterServerStatusUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConfigSO::_get__masterServerStatusUrl");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "_masterServerStatusUrl"));
}
// Autogenerated instance field setter
// Set instance field: private System.String _masterServerStatusUrl
void GlobalNamespace::NetworkConfigSO::_set__masterServerStatusUrl(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConfigSO::_set__masterServerStatusUrl");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_masterServerStatusUrl", value));
}
// Autogenerated method: NetworkConfigSO.get_maxPartySize
int GlobalNamespace::NetworkConfigSO::get_maxPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConfigSO::get_maxPartySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NetworkConfigSO.get_discoveryPort
int GlobalNamespace::NetworkConfigSO::get_discoveryPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConfigSO::get_discoveryPort");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_discoveryPort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NetworkConfigSO.get_partyPort
int GlobalNamespace::NetworkConfigSO::get_partyPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConfigSO::get_partyPort");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_partyPort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NetworkConfigSO.get_multiplayerPort
int GlobalNamespace::NetworkConfigSO::get_multiplayerPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConfigSO::get_multiplayerPort");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplayerPort", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NetworkConfigSO.get_masterServerEndPoint
GlobalNamespace::MasterServerEndPoint* GlobalNamespace::NetworkConfigSO::get_masterServerEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConfigSO::get_masterServerEndPoint");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_masterServerEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MasterServerEndPoint*, false>(this, ___internal__method);
}
// Autogenerated method: NetworkConfigSO.get_masterServerStatusUrl
::Il2CppString* GlobalNamespace::NetworkConfigSO::get_masterServerStatusUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkConfigSO::get_masterServerStatusUrl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_masterServerStatusUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NetworkPlayerEntitlementChecker
#include "GlobalNamespace/NetworkPlayerEntitlementChecker.hpp"
// Including type: NetworkPlayerEntitlementChecker/<HandleGetIsEntitledToLevel>d__5
#include "GlobalNamespace/NetworkPlayerEntitlementChecker_-HandleGetIsEntitledToLevel-d__5.hpp"
// Including type: NetworkPlayerEntitlementChecker/<GetEntitlementStatus>d__6
#include "GlobalNamespace/NetworkPlayerEntitlementChecker_-GetEntitlementStatus-d__6.hpp"
// Including type: IMenuRpcManager
#include "GlobalNamespace/IMenuRpcManager.hpp"
// Including type: AdditionalContentModel
#include "GlobalNamespace/AdditionalContentModel.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IMenuRpcManager _rpcManager
GlobalNamespace::IMenuRpcManager* GlobalNamespace::NetworkPlayerEntitlementChecker::_get__rpcManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerEntitlementChecker::_get__rpcManager");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::IMenuRpcManager*>(___internal__instance, "_rpcManager"));
}
// Autogenerated instance field setter
// Set instance field: private readonly IMenuRpcManager _rpcManager
void GlobalNamespace::NetworkPlayerEntitlementChecker::_set__rpcManager(GlobalNamespace::IMenuRpcManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerEntitlementChecker::_set__rpcManager");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_rpcManager", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly AdditionalContentModel _additionalContentModel
GlobalNamespace::AdditionalContentModel* GlobalNamespace::NetworkPlayerEntitlementChecker::_get__additionalContentModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerEntitlementChecker::_get__additionalContentModel");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::AdditionalContentModel*>(___internal__instance, "_additionalContentModel"));
}
// Autogenerated instance field setter
// Set instance field: private readonly AdditionalContentModel _additionalContentModel
void GlobalNamespace::NetworkPlayerEntitlementChecker::_set__additionalContentModel(GlobalNamespace::AdditionalContentModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerEntitlementChecker::_set__additionalContentModel");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_additionalContentModel", value));
}
// Autogenerated method: NetworkPlayerEntitlementChecker.Start
void GlobalNamespace::NetworkPlayerEntitlementChecker::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerEntitlementChecker::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerEntitlementChecker.OnDestroy
void GlobalNamespace::NetworkPlayerEntitlementChecker::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerEntitlementChecker::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerEntitlementChecker.HandleDataInvalidated
void GlobalNamespace::NetworkPlayerEntitlementChecker::HandleDataInvalidated() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerEntitlementChecker::HandleDataInvalidated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDataInvalidated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayerEntitlementChecker.HandleGetIsEntitledToLevel
void GlobalNamespace::NetworkPlayerEntitlementChecker::HandleGetIsEntitledToLevel(::Il2CppString* userId, ::Il2CppString* levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerEntitlementChecker::HandleGetIsEntitledToLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGetIsEntitledToLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId), ::il2cpp_utils::ExtractType(levelId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, levelId);
}
// Autogenerated method: NetworkPlayerEntitlementChecker.GetEntitlementStatus
System::Threading::Tasks::Task_1<GlobalNamespace::EntitlementsStatus>* GlobalNamespace::NetworkPlayerEntitlementChecker::GetEntitlementStatus(::Il2CppString* levelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerEntitlementChecker::GetEntitlementStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEntitlementStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::EntitlementsStatus>*, false>(this, ___internal__method, levelId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NetworkPlayerEntitlementChecker/<HandleGetIsEntitledToLevel>d__5
#include "GlobalNamespace/NetworkPlayerEntitlementChecker_-HandleGetIsEntitledToLevel-d__5.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::_get_$$1__state");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>(___internal__instance, "<>1__state")));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 <>1__state
void GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::_set_$$1__state");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>1__state", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncVoidMethodBuilder GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::_get_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::_get_$$t__builder");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Runtime::CompilerServices::AsyncVoidMethodBuilder>(___internal__instance, "<>t__builder")));
}
// Autogenerated instance field setter
// Set instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
void GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::_set_$$t__builder(System::Runtime::CompilerServices::AsyncVoidMethodBuilder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::_set_$$t__builder");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>t__builder", value));
}
// Autogenerated instance field getter
// Get instance field: public NetworkPlayerEntitlementChecker <>4__this
GlobalNamespace::NetworkPlayerEntitlementChecker* GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::_get_$$4__this");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::NetworkPlayerEntitlementChecker*>(___internal__instance, "<>4__this")));
}
// Autogenerated instance field setter
// Set instance field: public NetworkPlayerEntitlementChecker <>4__this
void GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::_set_$$4__this(GlobalNamespace::NetworkPlayerEntitlementChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::_set_$$4__this");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>4__this", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String levelId
::Il2CppString* GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::_get_levelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::_get_levelId");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "levelId"));
}
// Autogenerated instance field setter
// Set instance field: public System.String levelId
void GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::_set_levelId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::_set_levelId");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "levelId", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<EntitlementsStatus> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::EntitlementsStatus> GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::_get_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::_get_$$u__1");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::EntitlementsStatus>>(___internal__instance, "<>u__1")));
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<EntitlementsStatus> <>u__1
void GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::_set_$$u__1(System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::EntitlementsStatus> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::_set_$$u__1");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>u__1", value));
}
// Autogenerated method: NetworkPlayerEntitlementChecker/<HandleGetIsEntitledToLevel>d__5.MoveNext
void GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: NetworkPlayerEntitlementChecker/<HandleGetIsEntitledToLevel>d__5.SetStateMachine
void GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerEntitlementChecker::$HandleGetIsEntitledToLevel$d__5::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NetworkPlayerEntitlementChecker/<GetEntitlementStatus>d__6
#include "GlobalNamespace/NetworkPlayerEntitlementChecker_-GetEntitlementStatus-d__6.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::_get_$$1__state");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>(___internal__instance, "<>1__state")));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 <>1__state
void GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::_set_$$1__state");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>1__state", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<EntitlementsStatus> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::EntitlementsStatus> GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::_get_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::_get_$$t__builder");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::EntitlementsStatus>>(___internal__instance, "<>t__builder")));
}
// Autogenerated instance field setter
// Set instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<EntitlementsStatus> <>t__builder
void GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::_set_$$t__builder(System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::EntitlementsStatus> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::_set_$$t__builder");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>t__builder", value));
}
// Autogenerated instance field getter
// Get instance field: public NetworkPlayerEntitlementChecker <>4__this
GlobalNamespace::NetworkPlayerEntitlementChecker* GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::_get_$$4__this");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::NetworkPlayerEntitlementChecker*>(___internal__instance, "<>4__this")));
}
// Autogenerated instance field setter
// Set instance field: public NetworkPlayerEntitlementChecker <>4__this
void GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::_set_$$4__this(GlobalNamespace::NetworkPlayerEntitlementChecker* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::_set_$$4__this");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>4__this", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String levelId
::Il2CppString* GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::_get_levelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::_get_levelId");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "levelId"));
}
// Autogenerated instance field setter
// Set instance field: public System.String levelId
void GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::_set_levelId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::_set_levelId");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "levelId", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/EntitlementStatus> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus> GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::_get_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::_get_$$u__1");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus>>(___internal__instance, "<>u__1")));
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<AdditionalContentModel/EntitlementStatus> <>u__1
void GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::_set_$$u__1(System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::AdditionalContentModel::EntitlementStatus> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::_set_$$u__1");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>u__1", value));
}
// Autogenerated method: NetworkPlayerEntitlementChecker/<GetEntitlementStatus>d__6.MoveNext
void GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: NetworkPlayerEntitlementChecker/<GetEntitlementStatus>d__6.SetStateMachine
void GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayerEntitlementChecker::$GetEntitlementStatus$d__6::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NodePoseSyncStateManager
#include "GlobalNamespace/NodePoseSyncStateManager.hpp"
// Including type: NodePoseSyncStateNetSerializable
#include "GlobalNamespace/NodePoseSyncStateNetSerializable.hpp"
// Including type: NodePoseSyncStateDeltaNetSerializable
#include "GlobalNamespace/NodePoseSyncStateDeltaNetSerializable.hpp"
// Including type: IPacketPool`1
#include "GlobalNamespace/IPacketPool_1.hpp"
// Including type: MultiplayerSessionManager/MessageType
#include "GlobalNamespace/MultiplayerSessionManager_MessageType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NodePoseSyncStateManager.get_serializablePool
GlobalNamespace::IPacketPool_1<GlobalNamespace::NodePoseSyncStateNetSerializable*>* GlobalNamespace::NodePoseSyncStateManager::get_serializablePool() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateManager::get_serializablePool");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_serializablePool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IPacketPool_1<GlobalNamespace::NodePoseSyncStateNetSerializable*>*, false>(this, ___internal__method);
}
// Autogenerated method: NodePoseSyncStateManager.get_deltaSerializablePool
GlobalNamespace::IPacketPool_1<GlobalNamespace::NodePoseSyncStateDeltaNetSerializable*>* GlobalNamespace::NodePoseSyncStateManager::get_deltaSerializablePool() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateManager::get_deltaSerializablePool");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deltaSerializablePool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IPacketPool_1<GlobalNamespace::NodePoseSyncStateDeltaNetSerializable*>*, false>(this, ___internal__method);
}
// Autogenerated method: NodePoseSyncStateManager.Interpolate
GlobalNamespace::PoseSerializable GlobalNamespace::NodePoseSyncStateManager::Interpolate(GlobalNamespace::PoseSerializable prev, float prevTime, GlobalNamespace::PoseSerializable curr, float currTime, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateManager::Interpolate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Interpolate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prev), ::il2cpp_utils::ExtractType(prevTime), ::il2cpp_utils::ExtractType(curr), ::il2cpp_utils::ExtractType(currTime), ::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PoseSerializable, false>(this, ___internal__method, prev, prevTime, curr, currTime, time);
}
// Autogenerated method: NodePoseSyncStateManager.Smooth
GlobalNamespace::PoseSerializable GlobalNamespace::NodePoseSyncStateManager::Smooth(GlobalNamespace::PoseSerializable a, GlobalNamespace::PoseSerializable b, float smooth) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateManager::Smooth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Smooth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(smooth)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PoseSerializable, false>(this, ___internal__method, a, b, smooth);
}
// Autogenerated method: NodePoseSyncStateManager.get_deltaUpdateFrequency
float GlobalNamespace::NodePoseSyncStateManager::get_deltaUpdateFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateManager::get_deltaUpdateFrequency");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deltaUpdateFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: NodePoseSyncStateManager.get_fullStateUpdateFrequency
float GlobalNamespace::NodePoseSyncStateManager::get_fullStateUpdateFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateManager::get_fullStateUpdateFrequency");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fullStateUpdateFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: NodePoseSyncStateManager.get_localBufferSize
int GlobalNamespace::NodePoseSyncStateManager::get_localBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateManager::get_localBufferSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localBufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NodePoseSyncStateManager.get_remoteBufferSize
int GlobalNamespace::NodePoseSyncStateManager::get_remoteBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateManager::get_remoteBufferSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_remoteBufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: NodePoseSyncStateManager.get_messageType
GlobalNamespace::MultiplayerSessionManager_MessageType GlobalNamespace::NodePoseSyncStateManager::get_messageType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateManager::get_messageType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_messageType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MultiplayerSessionManager_MessageType, false>(this, ___internal__method);
}
// Autogenerated method: NodePoseSyncStateManager.get_deltaMessageType
GlobalNamespace::MultiplayerSessionManager_MessageType GlobalNamespace::NodePoseSyncStateManager::get_deltaMessageType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NodePoseSyncStateManager::get_deltaMessageType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deltaMessageType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MultiplayerSessionManager_MessageType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusConnectionManager
#include "GlobalNamespace/OculusConnectionManager.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: OculusConnectionManager/OculusConnection
#include "GlobalNamespace/OculusConnectionManager_OculusConnection.hpp"
// Including type: OculusConnectionManager/StartServerParams
#include "GlobalNamespace/OculusConnectionManager_StartServerParams.hpp"
// Including type: OculusConnectionManager/ConnectToServerParams
#include "GlobalNamespace/OculusConnectionManager_ConnectToServerParams.hpp"
// Including type: OculusConnectionManager/<HandlePeerConnectionRequest>d__62
#include "GlobalNamespace/OculusConnectionManager_-HandlePeerConnectionRequest-d__62.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: OculusNetworkPlayerModel
#include "GlobalNamespace/OculusNetworkPlayerModel.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: IConnection
#include "GlobalNamespace/IConnection.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: IConnectionInitParams`1
#include "GlobalNamespace/IConnectionInitParams_1.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.NetworkingPeer
#include "Oculus/Platform/Models/NetworkingPeer.hpp"
// Including type: Oculus.Platform.SendPolicy
#include "Oculus/Platform/SendPolicy.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kPingFrequency
float GlobalNamespace::OculusConnectionManager::_get_kPingFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::_get_kPingFrequency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OculusConnectionManager", "kPingFrequency"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kPingFrequency
void GlobalNamespace::OculusConnectionManager::_set_kPingFrequency(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::_set_kPingFrequency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusConnectionManager", "kPingFrequency", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<OculusConnectionManager/OculusConnection> _connections
System::Collections::Generic::List_1<GlobalNamespace::OculusConnectionManager::OculusConnection*>* GlobalNamespace::OculusConnectionManager::_get__connections() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::_get__connections");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<GlobalNamespace::OculusConnectionManager::OculusConnection*>*>(___internal__instance, "_connections"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Collections.Generic.List`1<OculusConnectionManager/OculusConnection> _connections
void GlobalNamespace::OculusConnectionManager::_set__connections(System::Collections::Generic::List_1<GlobalNamespace::OculusConnectionManager::OculusConnection*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::_set__connections");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_connections", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly LiteNetLib.Utils.NetDataReader _dataReader
LiteNetLib::Utils::NetDataReader* GlobalNamespace::OculusConnectionManager::_get__dataReader() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::_get__dataReader");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LiteNetLib::Utils::NetDataReader*>(___internal__instance, "_dataReader"));
}
// Autogenerated instance field setter
// Set instance field: private readonly LiteNetLib.Utils.NetDataReader _dataReader
void GlobalNamespace::OculusConnectionManager::_set__dataReader(LiteNetLib::Utils::NetDataReader* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::_set__dataReader");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_dataReader", value));
}
// Autogenerated instance field getter
// Get instance field: private OculusNetworkPlayerModel _oculusNetworkPlayerModel
GlobalNamespace::OculusNetworkPlayerModel* GlobalNamespace::OculusConnectionManager::_get__oculusNetworkPlayerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::_get__oculusNetworkPlayerModel");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OculusNetworkPlayerModel*>(___internal__instance, "_oculusNetworkPlayerModel"));
}
// Autogenerated instance field setter
// Set instance field: private OculusNetworkPlayerModel _oculusNetworkPlayerModel
void GlobalNamespace::OculusConnectionManager::_set__oculusNetworkPlayerModel(GlobalNamespace::OculusNetworkPlayerModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::_set__oculusNetworkPlayerModel");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_oculusNetworkPlayerModel", value));
}
// Autogenerated instance field getter
// Get instance field: private OculusConnectionManager/NetworkMode _mode
GlobalNamespace::OculusConnectionManager::NetworkMode GlobalNamespace::OculusConnectionManager::_get__mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::_get__mode");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OculusConnectionManager::NetworkMode>(___internal__instance, "_mode"));
}
// Autogenerated instance field setter
// Set instance field: private OculusConnectionManager/NetworkMode _mode
void GlobalNamespace::OculusConnectionManager::_set__mode(GlobalNamespace::OculusConnectionManager::NetworkMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::_set__mode");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_mode", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastPingTime
float GlobalNamespace::OculusConnectionManager::_get__lastPingTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::_get__lastPingTime");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "_lastPingTime"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single _lastPingTime
void GlobalNamespace::OculusConnectionManager::_set__lastPingTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::_set__lastPingTime");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_lastPingTime", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _connectionEstablished
bool GlobalNamespace::OculusConnectionManager::_get__connectionEstablished() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::_get__connectionEstablished");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_connectionEstablished"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _connectionEstablished
void GlobalNamespace::OculusConnectionManager::_set__connectionEstablished(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::_set__connectionEstablished");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_connectionEstablished", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action onConnectedEvent
System::Action* GlobalNamespace::OculusConnectionManager::_get_onConnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::_get_onConnectedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>(___internal__instance, "onConnectedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action onConnectedEvent
void GlobalNamespace::OculusConnectionManager::_set_onConnectedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::_set_onConnectedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "onConnectedEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<DisconnectedReason> onDisconnectedEvent
System::Action_1<GlobalNamespace::DisconnectedReason>* GlobalNamespace::OculusConnectionManager::_get_onDisconnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::_get_onDisconnectedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<GlobalNamespace::DisconnectedReason>*>(___internal__instance, "onDisconnectedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<DisconnectedReason> onDisconnectedEvent
void GlobalNamespace::OculusConnectionManager::_set_onDisconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::_set_onDisconnectedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "onDisconnectedEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<ConnectionFailedReason> onConnectionFailedEvent
System::Action_1<GlobalNamespace::ConnectionFailedReason>* GlobalNamespace::OculusConnectionManager::_get_onConnectionFailedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::_get_onConnectionFailedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<GlobalNamespace::ConnectionFailedReason>*>(___internal__instance, "onConnectionFailedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<ConnectionFailedReason> onConnectionFailedEvent
void GlobalNamespace::OculusConnectionManager::_set_onConnectionFailedEvent(System::Action_1<GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::_set_onConnectionFailedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "onConnectionFailedEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<IConnection> onConnectionConnectedEvent
System::Action_1<GlobalNamespace::IConnection*>* GlobalNamespace::OculusConnectionManager::_get_onConnectionConnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::_get_onConnectionConnectedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<GlobalNamespace::IConnection*>*>(___internal__instance, "onConnectionConnectedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<IConnection> onConnectionConnectedEvent
void GlobalNamespace::OculusConnectionManager::_set_onConnectionConnectedEvent(System::Action_1<GlobalNamespace::IConnection*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::_set_onConnectionConnectedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "onConnectionConnectedEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<IConnection,DisconnectedReason> onConnectionDisconnectedEvent
System::Action_2<GlobalNamespace::IConnection*, GlobalNamespace::DisconnectedReason>* GlobalNamespace::OculusConnectionManager::_get_onConnectionDisconnectedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::_get_onConnectionDisconnectedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Action_2<GlobalNamespace::IConnection*, GlobalNamespace::DisconnectedReason>*>(___internal__instance, "onConnectionDisconnectedEvent")));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`2<IConnection,DisconnectedReason> onConnectionDisconnectedEvent
void GlobalNamespace::OculusConnectionManager::_set_onConnectionDisconnectedEvent(System::Action_2<GlobalNamespace::IConnection*, GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::_set_onConnectionDisconnectedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "onConnectionDisconnectedEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<IConnection,System.Single> onLatencyUpdatedEvent
System::Action_2<GlobalNamespace::IConnection*, float>* GlobalNamespace::OculusConnectionManager::_get_onLatencyUpdatedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::_get_onLatencyUpdatedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Action_2<GlobalNamespace::IConnection*, float>*>(___internal__instance, "onLatencyUpdatedEvent")));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`2<IConnection,System.Single> onLatencyUpdatedEvent
void GlobalNamespace::OculusConnectionManager::_set_onLatencyUpdatedEvent(System::Action_2<GlobalNamespace::IConnection*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::_set_onLatencyUpdatedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "onLatencyUpdatedEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`3<IConnection,LiteNetLib.Utils.NetDataReader,LiteNetLib.DeliveryMethod> onReceivedDataEvent
System::Action_3<GlobalNamespace::IConnection*, LiteNetLib::Utils::NetDataReader*, LiteNetLib::DeliveryMethod>* GlobalNamespace::OculusConnectionManager::_get_onReceivedDataEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::_get_onReceivedDataEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Action_3<GlobalNamespace::IConnection*, LiteNetLib::Utils::NetDataReader*, LiteNetLib::DeliveryMethod>*>(___internal__instance, "onReceivedDataEvent")));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`3<IConnection,LiteNetLib.Utils.NetDataReader,LiteNetLib.DeliveryMethod> onReceivedDataEvent
void GlobalNamespace::OculusConnectionManager::_set_onReceivedDataEvent(System::Action_3<GlobalNamespace::IConnection*, LiteNetLib::Utils::NetDataReader*, LiteNetLib::DeliveryMethod>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::_set_onReceivedDataEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "onReceivedDataEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isDisconnecting>k__BackingField
bool GlobalNamespace::OculusConnectionManager::_get_$isDisconnecting$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::_get_$isDisconnecting$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(___internal__instance, "<isDisconnecting>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <isDisconnecting>k__BackingField
void GlobalNamespace::OculusConnectionManager::_set_$isDisconnecting$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::_set_$isDisconnecting$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<isDisconnecting>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _buffer
::Array<uint8_t>* GlobalNamespace::OculusConnectionManager::_get__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::_get__buffer");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>(___internal__instance, "_buffer"));
}
// Autogenerated instance field setter
// Set instance field: private System.Byte[] _buffer
void GlobalNamespace::OculusConnectionManager::_set__buffer(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::_set__buffer");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_buffer", value));
}
// Autogenerated method: OculusConnectionManager.get_userId
::Il2CppString* GlobalNamespace::OculusConnectionManager::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::get_userId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager.get_userName
::Il2CppString* GlobalNamespace::OculusConnectionManager::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager.get_isConnected
bool GlobalNamespace::OculusConnectionManager::get_isConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::get_isConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager.get_isConnecting
bool GlobalNamespace::OculusConnectionManager::get_isConnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::get_isConnecting");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager.get_isDisconnecting
bool GlobalNamespace::OculusConnectionManager::get_isDisconnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::get_isDisconnecting");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDisconnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager.set_isDisconnecting
void GlobalNamespace::OculusConnectionManager::set_isDisconnecting(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::set_isDisconnecting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isDisconnecting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.get_isDisposed
bool GlobalNamespace::OculusConnectionManager::get_isDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::get_isDisposed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager.get_isConnectionOwner
bool GlobalNamespace::OculusConnectionManager::get_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::get_isConnectionOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectionOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager.get_isServer
bool GlobalNamespace::OculusConnectionManager::get_isServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::get_isServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager.get_isClient
bool GlobalNamespace::OculusConnectionManager::get_isClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::get_isClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager.get_connectionCount
int GlobalNamespace::OculusConnectionManager::get_connectionCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::get_connectionCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectionCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager.add_onConnectedEvent
void GlobalNamespace::OculusConnectionManager::add_onConnectedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::add_onConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.remove_onConnectedEvent
void GlobalNamespace::OculusConnectionManager::remove_onConnectedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::remove_onConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.add_onDisconnectedEvent
void GlobalNamespace::OculusConnectionManager::add_onDisconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::add_onDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.remove_onDisconnectedEvent
void GlobalNamespace::OculusConnectionManager::remove_onDisconnectedEvent(System::Action_1<GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::remove_onDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.add_onConnectionFailedEvent
void GlobalNamespace::OculusConnectionManager::add_onConnectionFailedEvent(System::Action_1<GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::add_onConnectionFailedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onConnectionFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.remove_onConnectionFailedEvent
void GlobalNamespace::OculusConnectionManager::remove_onConnectionFailedEvent(System::Action_1<GlobalNamespace::ConnectionFailedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::remove_onConnectionFailedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onConnectionFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.add_onConnectionConnectedEvent
void GlobalNamespace::OculusConnectionManager::add_onConnectionConnectedEvent(System::Action_1<GlobalNamespace::IConnection*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::add_onConnectionConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onConnectionConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.remove_onConnectionConnectedEvent
void GlobalNamespace::OculusConnectionManager::remove_onConnectionConnectedEvent(System::Action_1<GlobalNamespace::IConnection*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::remove_onConnectionConnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onConnectionConnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.add_onConnectionDisconnectedEvent
void GlobalNamespace::OculusConnectionManager::add_onConnectionDisconnectedEvent(System::Action_2<GlobalNamespace::IConnection*, GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::add_onConnectionDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onConnectionDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.remove_onConnectionDisconnectedEvent
void GlobalNamespace::OculusConnectionManager::remove_onConnectionDisconnectedEvent(System::Action_2<GlobalNamespace::IConnection*, GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::remove_onConnectionDisconnectedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onConnectionDisconnectedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.add_onLatencyUpdatedEvent
void GlobalNamespace::OculusConnectionManager::add_onLatencyUpdatedEvent(System::Action_2<GlobalNamespace::IConnection*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::add_onLatencyUpdatedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onLatencyUpdatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.remove_onLatencyUpdatedEvent
void GlobalNamespace::OculusConnectionManager::remove_onLatencyUpdatedEvent(System::Action_2<GlobalNamespace::IConnection*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::remove_onLatencyUpdatedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onLatencyUpdatedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.add_onReceivedDataEvent
void GlobalNamespace::OculusConnectionManager::add_onReceivedDataEvent(System::Action_3<GlobalNamespace::IConnection*, LiteNetLib::Utils::NetDataReader*, LiteNetLib::DeliveryMethod>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::add_onReceivedDataEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onReceivedDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.remove_onReceivedDataEvent
void GlobalNamespace::OculusConnectionManager::remove_onReceivedDataEvent(System::Action_3<GlobalNamespace::IConnection*, LiteNetLib::Utils::NetDataReader*, LiteNetLib::DeliveryMethod>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::remove_onReceivedDataEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onReceivedDataEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusConnectionManager.SendToAll
void GlobalNamespace::OculusConnectionManager::SendToAll(LiteNetLib::Utils::NetDataWriter* writer, LiteNetLib::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::SendToAll");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendToAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(deliveryMethod)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer, deliveryMethod);
}
// Autogenerated method: OculusConnectionManager.SendToAll
void GlobalNamespace::OculusConnectionManager::SendToAll(LiteNetLib::Utils::NetDataWriter* writer, LiteNetLib::DeliveryMethod deliveryMethod, GlobalNamespace::IConnection* excludingConnection) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::SendToAll");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendToAll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(deliveryMethod), ::il2cpp_utils::ExtractType(excludingConnection)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer, deliveryMethod, excludingConnection);
}
// Autogenerated method: OculusConnectionManager.PollUpdate
void GlobalNamespace::OculusConnectionManager::PollUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::PollUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PollUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager.Disconnect
void GlobalNamespace::OculusConnectionManager::Disconnect(GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::Disconnect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disconnectedReason);
}
// Autogenerated method: OculusConnectionManager.DisconnectInternal
void GlobalNamespace::OculusConnectionManager::DisconnectInternal(GlobalNamespace::DisconnectedReason disconnectedReason, GlobalNamespace::ConnectionFailedReason connectionFailedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::DisconnectInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisconnectInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason), ::il2cpp_utils::ExtractType(connectionFailedReason)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disconnectedReason, connectionFailedReason);
}
// Autogenerated method: OculusConnectionManager.Dispose
void GlobalNamespace::OculusConnectionManager::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager.GetConnection
GlobalNamespace::IConnection* GlobalNamespace::OculusConnectionManager::GetConnection(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::GetConnection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IConnection*, false>(this, ___internal__method, index);
}
// Autogenerated method: OculusConnectionManager.HandlePeerConnectionRequest
void GlobalNamespace::OculusConnectionManager::HandlePeerConnectionRequest(Oculus::Platform::Message_1<Oculus::Platform::Models::NetworkingPeer*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::HandlePeerConnectionRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePeerConnectionRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: OculusConnectionManager.HandleConnectionStateChanged
void GlobalNamespace::OculusConnectionManager::HandleConnectionStateChanged(Oculus::Platform::Message_1<Oculus::Platform::Models::NetworkingPeer*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::HandleConnectionStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleConnectionStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: OculusConnectionManager.GetConnection
GlobalNamespace::OculusConnectionManager::OculusConnection* GlobalNamespace::OculusConnectionManager::GetConnection(uint64_t user) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::GetConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(user)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OculusConnectionManager::OculusConnection*, false>(this, ___internal__method, user);
}
// Autogenerated method: OculusConnectionManager.RemoveConnection
void GlobalNamespace::OculusConnectionManager::RemoveConnection(uint64_t id, GlobalNamespace::DisconnectedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::RemoveConnection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id), ::il2cpp_utils::ExtractType(reason)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, id, reason);
}
// Autogenerated method: OculusConnectionManager.AcquireBuffer
::Array<uint8_t>* GlobalNamespace::OculusConnectionManager::AcquireBuffer(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::AcquireBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AcquireBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, size);
}
// Autogenerated method: OculusConnectionManager.ReleaseBuffer
void GlobalNamespace::OculusConnectionManager::ReleaseBuffer(::Array<uint8_t>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::ReleaseBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated method: OculusConnectionManager.DeliveryMethodToSendPolicy
Oculus::Platform::SendPolicy GlobalNamespace::OculusConnectionManager::DeliveryMethodToSendPolicy(LiteNetLib::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::DeliveryMethodToSendPolicy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusConnectionManager", "DeliveryMethodToSendPolicy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deliveryMethod)})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::SendPolicy, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, deliveryMethod);
}
// Autogenerated method: OculusConnectionManager.SendPolicyToDeliveryMethod
LiteNetLib::DeliveryMethod GlobalNamespace::OculusConnectionManager::SendPolicyToDeliveryMethod(Oculus::Platform::SendPolicy sendPolicy) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::SendPolicyToDeliveryMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusConnectionManager", "SendPolicyToDeliveryMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sendPolicy)})));
  return ::il2cpp_utils::RunMethodThrow<LiteNetLib::DeliveryMethod, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sendPolicy);
}
// Autogenerated method: OculusConnectionManager.VoidHandler
void GlobalNamespace::OculusConnectionManager::VoidHandler(Oculus::Platform::Message_1<Oculus::Platform::Models::NetworkingPeer*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::VoidHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusConnectionManager", "VoidHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, message);
}
// Autogenerated method: OculusConnectionManager.<PollUpdate>b__56_0
void GlobalNamespace::OculusConnectionManager::$PollUpdate$b__56_0(GlobalNamespace::OculusConnectionManager::OculusConnection* connection, float latency) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::<PollUpdate>b__56_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PollUpdate>b__56_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connection), ::il2cpp_utils::ExtractType(latency)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, connection, latency);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusConnectionManager/NetworkMode
#include "GlobalNamespace/OculusConnectionManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OculusConnectionManager/NetworkMode None
GlobalNamespace::OculusConnectionManager::NetworkMode GlobalNamespace::OculusConnectionManager::NetworkMode::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::NetworkMode::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OculusConnectionManager::NetworkMode>("", "OculusConnectionManager/NetworkMode", "None"));
}
// Autogenerated static field setter
// Set static field: static public OculusConnectionManager/NetworkMode None
void GlobalNamespace::OculusConnectionManager::NetworkMode::_set_None(GlobalNamespace::OculusConnectionManager::NetworkMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::NetworkMode::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusConnectionManager/NetworkMode", "None", value));
}
// Autogenerated static field getter
// Get static field: static public OculusConnectionManager/NetworkMode Client
GlobalNamespace::OculusConnectionManager::NetworkMode GlobalNamespace::OculusConnectionManager::NetworkMode::_get_Client() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::NetworkMode::_get_Client");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OculusConnectionManager::NetworkMode>("", "OculusConnectionManager/NetworkMode", "Client"));
}
// Autogenerated static field setter
// Set static field: static public OculusConnectionManager/NetworkMode Client
void GlobalNamespace::OculusConnectionManager::NetworkMode::_set_Client(GlobalNamespace::OculusConnectionManager::NetworkMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::NetworkMode::_set_Client");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusConnectionManager/NetworkMode", "Client", value));
}
// Autogenerated static field getter
// Get static field: static public OculusConnectionManager/NetworkMode Server
GlobalNamespace::OculusConnectionManager::NetworkMode GlobalNamespace::OculusConnectionManager::NetworkMode::_get_Server() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::NetworkMode::_get_Server");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OculusConnectionManager::NetworkMode>("", "OculusConnectionManager/NetworkMode", "Server"));
}
// Autogenerated static field setter
// Set static field: static public OculusConnectionManager/NetworkMode Server
void GlobalNamespace::OculusConnectionManager::NetworkMode::_set_Server(GlobalNamespace::OculusConnectionManager::NetworkMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::NetworkMode::_set_Server");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusConnectionManager/NetworkMode", "Server", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int GlobalNamespace::OculusConnectionManager::NetworkMode::_get_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::NetworkMode::_get_value__");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "value__"));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 value__
void GlobalNamespace::OculusConnectionManager::NetworkMode::_set_value__(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::NetworkMode::_set_value__");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "value__", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusConnectionManager/OculusConnection
#include "GlobalNamespace/OculusConnectionManager_OculusConnection.hpp"
// Including type: OculusConnectionManager/OculusConnection/<>c__DisplayClass15_0
#include "GlobalNamespace/OculusConnectionManager_OculusConnection_--c__DisplayClass15_0.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.DeliveryMethod
#include "LiteNetLib/DeliveryMethod.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.UInt64 _id
uint64_t GlobalNamespace::OculusConnectionManager::OculusConnection::_get__id() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::OculusConnection::_get__id");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>(___internal__instance, "_id"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.UInt64 _id
void GlobalNamespace::OculusConnectionManager::OculusConnection::_set__id(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::OculusConnection::_set__id");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_id", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _userId
::Il2CppString* GlobalNamespace::OculusConnectionManager::OculusConnection::_get__userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::OculusConnection::_get__userId");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "_userId"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.String _userId
void GlobalNamespace::OculusConnectionManager::OculusConnection::_set__userId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::OculusConnection::_set__userId");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_userId", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _userName
::Il2CppString* GlobalNamespace::OculusConnectionManager::OculusConnection::_get__userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::OculusConnection::_get__userName");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "_userName"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.String _userName
void GlobalNamespace::OculusConnectionManager::OculusConnection::_set__userName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::OculusConnection::_set__userName");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_userName", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _isConnectionOwner
bool GlobalNamespace::OculusConnectionManager::OculusConnection::_get__isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::OculusConnection::_get__isConnectionOwner");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_isConnectionOwner"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Boolean _isConnectionOwner
void GlobalNamespace::OculusConnectionManager::OculusConnection::_set__isConnectionOwner(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::OculusConnection::_set__isConnectionOwner");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_isConnectionOwner", value));
}
// Autogenerated method: OculusConnectionManager/OculusConnection.get_id
uint64_t GlobalNamespace::OculusConnectionManager::OculusConnection::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::OculusConnection::get_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager/OculusConnection.get_userId
::Il2CppString* GlobalNamespace::OculusConnectionManager::OculusConnection::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::OculusConnection::get_userId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager/OculusConnection.get_userName
::Il2CppString* GlobalNamespace::OculusConnectionManager::OculusConnection::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::OculusConnection::get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager/OculusConnection.get_isConnectionOwner
bool GlobalNamespace::OculusConnectionManager::OculusConnection::get_isConnectionOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::OculusConnection::get_isConnectionOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isConnectionOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager/OculusConnection.Send
void GlobalNamespace::OculusConnectionManager::OculusConnection::Send(LiteNetLib::Utils::NetDataWriter* writer, LiteNetLib::DeliveryMethod deliveryMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::OculusConnection::Send");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Send", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(deliveryMethod)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer, deliveryMethod);
}
// Autogenerated method: OculusConnectionManager/OculusConnection.Disconnect
void GlobalNamespace::OculusConnectionManager::OculusConnection::Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::OculusConnection::Disconnect");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager/OculusConnection.Ping
void GlobalNamespace::OculusConnectionManager::OculusConnection::Ping(System::Action_2<GlobalNamespace::OculusConnectionManager::OculusConnection*, float>* onPingResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::OculusConnection::Ping");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Ping", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(onPingResult)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, onPingResult);
}
// Autogenerated method: OculusConnectionManager/OculusConnection.Equals
bool GlobalNamespace::OculusConnectionManager::OculusConnection::Equals(GlobalNamespace::OculusConnectionManager::OculusConnection* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::OculusConnection::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: OculusConnectionManager/OculusConnection.Equals
bool GlobalNamespace::OculusConnectionManager::OculusConnection::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::OculusConnection::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: OculusConnectionManager/OculusConnection.GetHashCode
int GlobalNamespace::OculusConnectionManager::OculusConnection::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::OculusConnection::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager/OculusConnection.ToString
::Il2CppString* GlobalNamespace::OculusConnectionManager::OculusConnection::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::OculusConnection::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusConnectionManager/OculusConnection/<>c__DisplayClass15_0
#include "GlobalNamespace/OculusConnectionManager_OculusConnection_--c__DisplayClass15_0.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.PingResult
#include "Oculus/Platform/Models/PingResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Action`2<OculusConnectionManager/OculusConnection,System.Single> onPingResult
System::Action_2<GlobalNamespace::OculusConnectionManager::OculusConnection*, float>* GlobalNamespace::OculusConnectionManager::OculusConnection::$$c__DisplayClass15_0::_get_onPingResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::OculusConnection::$$c__DisplayClass15_0::_get_onPingResult");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Action_2<GlobalNamespace::OculusConnectionManager::OculusConnection*, float>*>(___internal__instance, "onPingResult")));
}
// Autogenerated instance field setter
// Set instance field: public System.Action`2<OculusConnectionManager/OculusConnection,System.Single> onPingResult
void GlobalNamespace::OculusConnectionManager::OculusConnection::$$c__DisplayClass15_0::_set_onPingResult(System::Action_2<GlobalNamespace::OculusConnectionManager::OculusConnection*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::OculusConnection::$$c__DisplayClass15_0::_set_onPingResult");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "onPingResult", value));
}
// Autogenerated instance field getter
// Get instance field: public OculusConnectionManager/OculusConnection <>4__this
GlobalNamespace::OculusConnectionManager::OculusConnection* GlobalNamespace::OculusConnectionManager::OculusConnection::$$c__DisplayClass15_0::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::OculusConnection::$$c__DisplayClass15_0::_get_$$4__this");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OculusConnectionManager::OculusConnection*>(___internal__instance, "<>4__this")));
}
// Autogenerated instance field setter
// Set instance field: public OculusConnectionManager/OculusConnection <>4__this
void GlobalNamespace::OculusConnectionManager::OculusConnection::$$c__DisplayClass15_0::_set_$$4__this(GlobalNamespace::OculusConnectionManager::OculusConnection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::OculusConnection::$$c__DisplayClass15_0::_set_$$4__this");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>4__this", value));
}
// Autogenerated method: OculusConnectionManager/OculusConnection/<>c__DisplayClass15_0.<Ping>b__0
void GlobalNamespace::OculusConnectionManager::OculusConnection::$$c__DisplayClass15_0::$Ping$b__0(Oculus::Platform::Message_1<Oculus::Platform::Models::PingResult*>* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::OculusConnection::$$c__DisplayClass15_0::<Ping>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Ping>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusConnectionManager/StartServerParams
#include "GlobalNamespace/OculusConnectionManager_StartServerParams.hpp"
// Including type: OculusNetworkPlayerModel
#include "GlobalNamespace/OculusNetworkPlayerModel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OculusNetworkPlayerModel oculusNetworkPlayerModel
GlobalNamespace::OculusNetworkPlayerModel* GlobalNamespace::OculusConnectionManager::StartServerParams::_get_oculusNetworkPlayerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::StartServerParams::_get_oculusNetworkPlayerModel");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OculusNetworkPlayerModel*>(___internal__instance, "oculusNetworkPlayerModel"));
}
// Autogenerated instance field setter
// Set instance field: public OculusNetworkPlayerModel oculusNetworkPlayerModel
void GlobalNamespace::OculusConnectionManager::StartServerParams::_set_oculusNetworkPlayerModel(GlobalNamespace::OculusNetworkPlayerModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::StartServerParams::_set_oculusNetworkPlayerModel");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "oculusNetworkPlayerModel", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusConnectionManager/ConnectToServerParams
#include "GlobalNamespace/OculusConnectionManager_ConnectToServerParams.hpp"
// Including type: OculusNetworkPlayerModel
#include "GlobalNamespace/OculusNetworkPlayerModel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OculusNetworkPlayerModel oculusNetworkPlayerModel
GlobalNamespace::OculusNetworkPlayerModel* GlobalNamespace::OculusConnectionManager::ConnectToServerParams::_get_oculusNetworkPlayerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::ConnectToServerParams::_get_oculusNetworkPlayerModel");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OculusNetworkPlayerModel*>(___internal__instance, "oculusNetworkPlayerModel"));
}
// Autogenerated instance field setter
// Set instance field: public OculusNetworkPlayerModel oculusNetworkPlayerModel
void GlobalNamespace::OculusConnectionManager::ConnectToServerParams::_set_oculusNetworkPlayerModel(GlobalNamespace::OculusNetworkPlayerModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::ConnectToServerParams::_set_oculusNetworkPlayerModel");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "oculusNetworkPlayerModel", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 serverId
uint64_t GlobalNamespace::OculusConnectionManager::ConnectToServerParams::_get_serverId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::ConnectToServerParams::_get_serverId");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>(___internal__instance, "serverId"));
}
// Autogenerated instance field setter
// Set instance field: public System.UInt64 serverId
void GlobalNamespace::OculusConnectionManager::ConnectToServerParams::_set_serverId(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::ConnectToServerParams::_set_serverId");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "serverId", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusConnectionManager/<HandlePeerConnectionRequest>d__62
#include "GlobalNamespace/OculusConnectionManager_-HandlePeerConnectionRequest-d__62.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.NetworkingPeer
#include "Oculus/Platform/Models/NetworkingPeer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int GlobalNamespace::OculusConnectionManager::$HandlePeerConnectionRequest$d__62::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::$HandlePeerConnectionRequest$d__62::_get_$$1__state");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>(___internal__instance, "<>1__state")));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 <>1__state
void GlobalNamespace::OculusConnectionManager::$HandlePeerConnectionRequest$d__62::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::$HandlePeerConnectionRequest$d__62::_set_$$1__state");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>1__state", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncVoidMethodBuilder GlobalNamespace::OculusConnectionManager::$HandlePeerConnectionRequest$d__62::_get_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::$HandlePeerConnectionRequest$d__62::_get_$$t__builder");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Runtime::CompilerServices::AsyncVoidMethodBuilder>(___internal__instance, "<>t__builder")));
}
// Autogenerated instance field setter
// Set instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
void GlobalNamespace::OculusConnectionManager::$HandlePeerConnectionRequest$d__62::_set_$$t__builder(System::Runtime::CompilerServices::AsyncVoidMethodBuilder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::$HandlePeerConnectionRequest$d__62::_set_$$t__builder");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>t__builder", value));
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Platform.Message`1<Oculus.Platform.Models.NetworkingPeer> message
Oculus::Platform::Message_1<Oculus::Platform::Models::NetworkingPeer*>* GlobalNamespace::OculusConnectionManager::$HandlePeerConnectionRequest$d__62::_get_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::$HandlePeerConnectionRequest$d__62::_get_message");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message_1<Oculus::Platform::Models::NetworkingPeer*>*>(___internal__instance, "message"));
}
// Autogenerated instance field setter
// Set instance field: public Oculus.Platform.Message`1<Oculus.Platform.Models.NetworkingPeer> message
void GlobalNamespace::OculusConnectionManager::$HandlePeerConnectionRequest$d__62::_set_message(Oculus::Platform::Message_1<Oculus::Platform::Models::NetworkingPeer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::$HandlePeerConnectionRequest$d__62::_set_message");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "message", value));
}
// Autogenerated instance field getter
// Get instance field: public OculusConnectionManager <>4__this
GlobalNamespace::OculusConnectionManager* GlobalNamespace::OculusConnectionManager::$HandlePeerConnectionRequest$d__62::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::$HandlePeerConnectionRequest$d__62::_get_$$4__this");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OculusConnectionManager*>(___internal__instance, "<>4__this")));
}
// Autogenerated instance field setter
// Set instance field: public OculusConnectionManager <>4__this
void GlobalNamespace::OculusConnectionManager::$HandlePeerConnectionRequest$d__62::_set_$$4__this(GlobalNamespace::OculusConnectionManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::$HandlePeerConnectionRequest$d__62::_set_$$4__this");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>4__this", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Boolean> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<bool> GlobalNamespace::OculusConnectionManager::$HandlePeerConnectionRequest$d__62::_get_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::$HandlePeerConnectionRequest$d__62::_get_$$u__1");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Runtime::CompilerServices::TaskAwaiter_1<bool>>(___internal__instance, "<>u__1")));
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.Boolean> <>u__1
void GlobalNamespace::OculusConnectionManager::$HandlePeerConnectionRequest$d__62::_set_$$u__1(System::Runtime::CompilerServices::TaskAwaiter_1<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::$HandlePeerConnectionRequest$d__62::_set_$$u__1");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>u__1", value));
}
// Autogenerated method: OculusConnectionManager/<HandlePeerConnectionRequest>d__62.MoveNext
void GlobalNamespace::OculusConnectionManager::$HandlePeerConnectionRequest$d__62::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::$HandlePeerConnectionRequest$d__62::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OculusConnectionManager/<HandlePeerConnectionRequest>d__62.SetStateMachine
void GlobalNamespace::OculusConnectionManager::$HandlePeerConnectionRequest$d__62::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusConnectionManager::$HandlePeerConnectionRequest$d__62::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusNetworkPlayerModel
#include "GlobalNamespace/OculusNetworkPlayerModel.hpp"
// Including type: OculusNetworkPlayerModel/OculusNetworkPlayer
#include "GlobalNamespace/OculusNetworkPlayerModel_OculusNetworkPlayer.hpp"
// Including type: OculusNetworkPlayerModel/<Start>d__42
#include "GlobalNamespace/OculusNetworkPlayerModel_-Start-d__42.hpp"
// Including type: OculusNetworkPlayerModel/<>c__DisplayClass50_0
#include "GlobalNamespace/OculusNetworkPlayerModel_--c__DisplayClass50_0.hpp"
// Including type: OculusNetworkPlayerModel/<>c__DisplayClass51_0
#include "GlobalNamespace/OculusNetworkPlayerModel_--c__DisplayClass51_0.hpp"
// Including type: OculusNetworkPlayerModel/<HandleRoomInviteReceived>d__51
#include "GlobalNamespace/OculusNetworkPlayerModel_-HandleRoomInviteReceived-d__51.hpp"
// Including type: OculusNetworkPlayerModel/<>c__DisplayClass55_0
#include "GlobalNamespace/OculusNetworkPlayerModel_--c__DisplayClass55_0.hpp"
// Including type: OculusNetworkPlayerModel/<>c__DisplayClass64_0
#include "GlobalNamespace/OculusNetworkPlayerModel_--c__DisplayClass64_0.hpp"
// Including type: IPlatformUserModel
#include "GlobalNamespace/IPlatformUserModel.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: INetworkPlayerModel
#include "GlobalNamespace/INetworkPlayerModel.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: OculusConnectionManager
#include "GlobalNamespace/OculusConnectionManager.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.RoomInviteNotification
#include "Oculus/Platform/Models/RoomInviteNotification.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: INetworkPlayerModelPartyConfig`1
#include "GlobalNamespace/INetworkPlayerModelPartyConfig_1.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kConnectionTypeKey
::Il2CppString* GlobalNamespace::OculusNetworkPlayerModel::_get_kConnectionTypeKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_get_kConnectionTypeKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OculusNetworkPlayerModel", "kConnectionTypeKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionTypeKey
void GlobalNamespace::OculusNetworkPlayerModel::_set_kConnectionTypeKey(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_set_kConnectionTypeKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusNetworkPlayerModel", "kConnectionTypeKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kConnectionTypeOculus
::Il2CppString* GlobalNamespace::OculusNetworkPlayerModel::_get_kConnectionTypeOculus() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_get_kConnectionTypeOculus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OculusNetworkPlayerModel", "kConnectionTypeOculus"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionTypeOculus
void GlobalNamespace::OculusNetworkPlayerModel::_set_kConnectionTypeOculus(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_set_kConnectionTypeOculus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusNetworkPlayerModel", "kConnectionTypeOculus", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kConnectionTypeLiteNetLib
::Il2CppString* GlobalNamespace::OculusNetworkPlayerModel::_get_kConnectionTypeLiteNetLib() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_get_kConnectionTypeLiteNetLib");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OculusNetworkPlayerModel", "kConnectionTypeLiteNetLib"));
}
// Autogenerated static field setter
// Set static field: static private System.String kConnectionTypeLiteNetLib
void GlobalNamespace::OculusNetworkPlayerModel::_set_kConnectionTypeLiteNetLib(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_set_kConnectionTypeLiteNetLib");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusNetworkPlayerModel", "kConnectionTypeLiteNetLib", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kCurrentPartySizeKey
::Il2CppString* GlobalNamespace::OculusNetworkPlayerModel::_get_kCurrentPartySizeKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_get_kCurrentPartySizeKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OculusNetworkPlayerModel", "kCurrentPartySizeKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCurrentPartySizeKey
void GlobalNamespace::OculusNetworkPlayerModel::_set_kCurrentPartySizeKey(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_set_kCurrentPartySizeKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusNetworkPlayerModel", "kCurrentPartySizeKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kDifficultiesKey
::Il2CppString* GlobalNamespace::OculusNetworkPlayerModel::_get_kDifficultiesKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_get_kDifficultiesKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OculusNetworkPlayerModel", "kDifficultiesKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDifficultiesKey
void GlobalNamespace::OculusNetworkPlayerModel::_set_kDifficultiesKey(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_set_kDifficultiesKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusNetworkPlayerModel", "kDifficultiesKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kModifiersKey
::Il2CppString* GlobalNamespace::OculusNetworkPlayerModel::_get_kModifiersKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_get_kModifiersKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OculusNetworkPlayerModel", "kModifiersKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kModifiersKey
void GlobalNamespace::OculusNetworkPlayerModel::_set_kModifiersKey(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_set_kModifiersKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusNetworkPlayerModel", "kModifiersKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kSongPacksKey
::Il2CppString* GlobalNamespace::OculusNetworkPlayerModel::_get_kSongPacksKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_get_kSongPacksKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OculusNetworkPlayerModel", "kSongPacksKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kSongPacksKey
void GlobalNamespace::OculusNetworkPlayerModel::_set_kSongPacksKey(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_set_kSongPacksKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusNetworkPlayerModel", "kSongPacksKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kMaxPlayerCountKey
::Il2CppString* GlobalNamespace::OculusNetworkPlayerModel::_get_kMaxPlayerCountKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_get_kMaxPlayerCountKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OculusNetworkPlayerModel", "kMaxPlayerCountKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kMaxPlayerCountKey
void GlobalNamespace::OculusNetworkPlayerModel::_set_kMaxPlayerCountKey(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_set_kMaxPlayerCountKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusNetworkPlayerModel", "kMaxPlayerCountKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kDiscoveryPolicyKey
::Il2CppString* GlobalNamespace::OculusNetworkPlayerModel::_get_kDiscoveryPolicyKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_get_kDiscoveryPolicyKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OculusNetworkPlayerModel", "kDiscoveryPolicyKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDiscoveryPolicyKey
void GlobalNamespace::OculusNetworkPlayerModel::_set_kDiscoveryPolicyKey(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_set_kDiscoveryPolicyKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusNetworkPlayerModel", "kDiscoveryPolicyKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kInvitePolicyKey
::Il2CppString* GlobalNamespace::OculusNetworkPlayerModel::_get_kInvitePolicyKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_get_kInvitePolicyKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OculusNetworkPlayerModel", "kInvitePolicyKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kInvitePolicyKey
void GlobalNamespace::OculusNetworkPlayerModel::_set_kInvitePolicyKey(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_set_kInvitePolicyKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusNetworkPlayerModel", "kInvitePolicyKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kGameplayServerModeKey
::Il2CppString* GlobalNamespace::OculusNetworkPlayerModel::_get_kGameplayServerModeKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_get_kGameplayServerModeKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OculusNetworkPlayerModel", "kGameplayServerModeKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kGameplayServerModeKey
void GlobalNamespace::OculusNetworkPlayerModel::_set_kGameplayServerModeKey(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_set_kGameplayServerModeKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusNetworkPlayerModel", "kGameplayServerModeKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kSongSelectionModeKey
::Il2CppString* GlobalNamespace::OculusNetworkPlayerModel::_get_kSongSelectionModeKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_get_kSongSelectionModeKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OculusNetworkPlayerModel", "kSongSelectionModeKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kSongSelectionModeKey
void GlobalNamespace::OculusNetworkPlayerModel::_set_kSongSelectionModeKey(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_set_kSongSelectionModeKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusNetworkPlayerModel", "kSongSelectionModeKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kGameplayServerControlSettingsKey
::Il2CppString* GlobalNamespace::OculusNetworkPlayerModel::_get_kGameplayServerControlSettingsKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_get_kGameplayServerControlSettingsKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "OculusNetworkPlayerModel", "kGameplayServerControlSettingsKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kGameplayServerControlSettingsKey
void GlobalNamespace::OculusNetworkPlayerModel::_set_kGameplayServerControlSettingsKey(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_set_kGameplayServerControlSettingsKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusNetworkPlayerModel", "kGameplayServerControlSettingsKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kAutoRefreshRate
float GlobalNamespace::OculusNetworkPlayerModel::_get_kAutoRefreshRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_get_kAutoRefreshRate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "OculusNetworkPlayerModel", "kAutoRefreshRate"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kAutoRefreshRate
void GlobalNamespace::OculusNetworkPlayerModel::_set_kAutoRefreshRate(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_set_kAutoRefreshRate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusNetworkPlayerModel", "kAutoRefreshRate", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly IPlatformUserModel _platformUserModel
GlobalNamespace::IPlatformUserModel* GlobalNamespace::OculusNetworkPlayerModel::_get__platformUserModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_get__platformUserModel");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::IPlatformUserModel*>(___internal__instance, "_platformUserModel"));
}
// Autogenerated instance field setter
// Set instance field: private readonly IPlatformUserModel _platformUserModel
void GlobalNamespace::OculusNetworkPlayerModel::_set__platformUserModel(GlobalNamespace::IPlatformUserModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_set__platformUserModel");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_platformUserModel", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastRefreshTime
float GlobalNamespace::OculusNetworkPlayerModel::_get__lastRefreshTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_get__lastRefreshTime");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "_lastRefreshTime"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single _lastRefreshTime
void GlobalNamespace::OculusNetworkPlayerModel::_set__lastRefreshTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_set__lastRefreshTime");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_lastRefreshTime", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isRefreshing
bool GlobalNamespace::OculusNetworkPlayerModel::_get__isRefreshing() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_get__isRefreshing");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_isRefreshing"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _isRefreshing
void GlobalNamespace::OculusNetworkPlayerModel::_set__isRefreshing(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_set__isRefreshing");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_isRefreshing", value));
}
// Autogenerated instance field getter
// Get instance field: private OculusNetworkPlayerModel/OculusNetworkPlayer _localPlayer
GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer* GlobalNamespace::OculusNetworkPlayerModel::_get__localPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_get__localPlayer");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer*>(___internal__instance, "_localPlayer"));
}
// Autogenerated instance field setter
// Set instance field: private OculusNetworkPlayerModel/OculusNetworkPlayer _localPlayer
void GlobalNamespace::OculusNetworkPlayerModel::_set__localPlayer(GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_set__localPlayer");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_localPlayer", value));
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.RoomJoinPolicy _joinPolicy
Oculus::Platform::RoomJoinPolicy GlobalNamespace::OculusNetworkPlayerModel::_get__joinPolicy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_get__joinPolicy");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::RoomJoinPolicy>(___internal__instance, "_joinPolicy"));
}
// Autogenerated instance field setter
// Set instance field: private Oculus.Platform.RoomJoinPolicy _joinPolicy
void GlobalNamespace::OculusNetworkPlayerModel::_set__joinPolicy(Oculus::Platform::RoomJoinPolicy value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_set__joinPolicy");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_joinPolicy", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _partyEnabled
bool GlobalNamespace::OculusNetworkPlayerModel::_get__partyEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_get__partyEnabled");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_partyEnabled"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _partyEnabled
void GlobalNamespace::OculusNetworkPlayerModel::_set__partyEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_set__partyEnabled");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_partyEnabled", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _waitingOnRoomCreate
bool GlobalNamespace::OculusNetworkPlayerModel::_get__waitingOnRoomCreate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_get__waitingOnRoomCreate");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_waitingOnRoomCreate"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _waitingOnRoomCreate
void GlobalNamespace::OculusNetworkPlayerModel::_set__waitingOnRoomCreate(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_set__waitingOnRoomCreate");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_waitingOnRoomCreate", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,System.String> _roomDataStore
System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* GlobalNamespace::OculusNetworkPlayerModel::_get__roomDataStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_get__roomDataStore");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>*>(___internal__instance, "_roomDataStore")));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Collections.Generic.Dictionary`2<System.String,System.String> _roomDataStore
void GlobalNamespace::OculusNetworkPlayerModel::_set__roomDataStore(System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_set__roomDataStore");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_roomDataStore", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<OculusNetworkPlayerModel/OculusNetworkPlayer> _partyPlayers
System::Collections::Generic::List_1<GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer*>* GlobalNamespace::OculusNetworkPlayerModel::_get__partyPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_get__partyPlayers");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer*>*>(___internal__instance, "_partyPlayers"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Collections.Generic.List`1<OculusNetworkPlayerModel/OculusNetworkPlayer> _partyPlayers
void GlobalNamespace::OculusNetworkPlayerModel::_set__partyPlayers(System::Collections::Generic::List_1<GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_set__partyPlayers");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_partyPlayers", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<OculusNetworkPlayerModel/OculusNetworkPlayer> _otherPlayers
System::Collections::Generic::List_1<GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer*>* GlobalNamespace::OculusNetworkPlayerModel::_get__otherPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_get__otherPlayers");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer*>*>(___internal__instance, "_otherPlayers"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Collections.Generic.List`1<OculusNetworkPlayerModel/OculusNetworkPlayer> _otherPlayers
void GlobalNamespace::OculusNetworkPlayerModel::_set__otherPlayers(System::Collections::Generic::List_1<GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_set__otherPlayers");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_otherPlayers", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Int32> partySizeChangedEvent
System::Action_1<int>* GlobalNamespace::OculusNetworkPlayerModel::_get_partySizeChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_get_partySizeChangedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<int>*>(___internal__instance, "partySizeChangedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<System.Int32> partySizeChangedEvent
void GlobalNamespace::OculusNetworkPlayerModel::_set_partySizeChangedEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_set_partySizeChangedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "partySizeChangedEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<INetworkPlayerModel> partyChangedEvent
System::Action_1<GlobalNamespace::INetworkPlayerModel*>* GlobalNamespace::OculusNetworkPlayerModel::_get_partyChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_get_partyChangedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<GlobalNamespace::INetworkPlayerModel*>*>(___internal__instance, "partyChangedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<INetworkPlayerModel> partyChangedEvent
void GlobalNamespace::OculusNetworkPlayerModel::_set_partyChangedEvent(System::Action_1<GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_set_partyChangedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "partyChangedEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<INetworkPlayer> inviteRequestedEvent
System::Action_1<GlobalNamespace::INetworkPlayer*>* GlobalNamespace::OculusNetworkPlayerModel::_get_inviteRequestedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_get_inviteRequestedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<GlobalNamespace::INetworkPlayer*>*>(___internal__instance, "inviteRequestedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<INetworkPlayer> inviteRequestedEvent
void GlobalNamespace::OculusNetworkPlayerModel::_set_inviteRequestedEvent(System::Action_1<GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::_set_inviteRequestedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "inviteRequestedEvent", value));
}
// Autogenerated method: OculusNetworkPlayerModel.get_localPlayer
GlobalNamespace::INetworkPlayer* GlobalNamespace::OculusNetworkPlayerModel::get_localPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::get_localPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::INetworkPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel.get_oculusConnectionManager
GlobalNamespace::OculusConnectionManager* GlobalNamespace::OculusNetworkPlayerModel::get_oculusConnectionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::get_oculusConnectionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_oculusConnectionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OculusConnectionManager*, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel.GetPlayer
GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer* GlobalNamespace::OculusNetworkPlayerModel::GetPlayer(uint64_t id) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::GetPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer*, false>(this, ___internal__method, id);
}
// Autogenerated method: OculusNetworkPlayerModel.GetPlayer
GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer* GlobalNamespace::OculusNetworkPlayerModel::GetPlayer(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::GetPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer*, false>(this, ___internal__method, userId);
}
// Autogenerated method: OculusNetworkPlayerModel.TryCreateRoom
void GlobalNamespace::OculusNetworkPlayerModel::TryCreateRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::TryCreateRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryCreateRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel.GetUserName
::Il2CppString* GlobalNamespace::OculusNetworkPlayerModel::GetUserName(uint64_t id) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::GetUserName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, id);
}
// Autogenerated method: OculusNetworkPlayerModel.GetUserNameAsync
System::Threading::Tasks::Task_1<::Il2CppString*>* GlobalNamespace::OculusNetworkPlayerModel::GetUserNameAsync(uint64_t id) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::GetUserNameAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserNameAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<::Il2CppString*>*, false>(this, ___internal__method, id);
}
// Autogenerated method: OculusNetworkPlayerModel.HandleRoomInviteReceived
void GlobalNamespace::OculusNetworkPlayerModel::HandleRoomInviteReceived(Oculus::Platform::Message_1<Oculus::Platform::Models::RoomInviteNotification*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::HandleRoomInviteReceived");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleRoomInviteReceived", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: OculusNetworkPlayerModel.HandleRoomInviteAccepted
void GlobalNamespace::OculusNetworkPlayerModel::HandleRoomInviteAccepted(Oculus::Platform::Message_1<::Il2CppString*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::HandleRoomInviteAccepted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleRoomInviteAccepted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: OculusNetworkPlayerModel.HandleRoomUpdate
void GlobalNamespace::OculusNetworkPlayerModel::HandleRoomUpdate(Oculus::Platform::Message_1<Oculus::Platform::Models::Room*>* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::HandleRoomUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleRoomUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, message);
}
// Autogenerated method: OculusNetworkPlayerModel.HandlePlayersChanged
void GlobalNamespace::OculusNetworkPlayerModel::HandlePlayersChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::HandlePlayersChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlayersChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel.Refresh
void GlobalNamespace::OculusNetworkPlayerModel::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel.UpdateRoomDataStore
void GlobalNamespace::OculusNetworkPlayerModel::UpdateRoomDataStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::UpdateRoomDataStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateRoomDataStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel.TryLeaveRoom
void GlobalNamespace::OculusNetworkPlayerModel::TryLeaveRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::TryLeaveRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryLeaveRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel.TryConnectToServer
void GlobalNamespace::OculusNetworkPlayerModel::TryConnectToServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::TryConnectToServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryConnectToServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel.ShouldAcceptConnectionFromPlayer
System::Threading::Tasks::Task_1<bool>* GlobalNamespace::OculusNetworkPlayerModel::ShouldAcceptConnectionFromPlayer(uint64_t userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::ShouldAcceptConnectionFromPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShouldAcceptConnectionFromPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method, userId);
}
// Autogenerated method: OculusNetworkPlayerModel.<TryCreateRoom>b__48_0
void GlobalNamespace::OculusNetworkPlayerModel::$TryCreateRoom$b__48_0(Oculus::Platform::Message_1<Oculus::Platform::Models::Room*>* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::<TryCreateRoom>b__48_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<TryCreateRoom>b__48_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: OculusNetworkPlayerModel.get_localPlayerIsPartyOwner
bool GlobalNamespace::OculusNetworkPlayerModel::get_localPlayerIsPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::get_localPlayerIsPartyOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayerIsPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel.get_currentPartySize
int GlobalNamespace::OculusNetworkPlayerModel::get_currentPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::get_currentPartySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel.add_partySizeChangedEvent
void GlobalNamespace::OculusNetworkPlayerModel::add_partySizeChangedEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::add_partySizeChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_partySizeChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusNetworkPlayerModel.remove_partySizeChangedEvent
void GlobalNamespace::OculusNetworkPlayerModel::remove_partySizeChangedEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::remove_partySizeChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_partySizeChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusNetworkPlayerModel.add_partyChangedEvent
void GlobalNamespace::OculusNetworkPlayerModel::add_partyChangedEvent(System::Action_1<GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::add_partyChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_partyChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusNetworkPlayerModel.remove_partyChangedEvent
void GlobalNamespace::OculusNetworkPlayerModel::remove_partyChangedEvent(System::Action_1<GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::remove_partyChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_partyChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusNetworkPlayerModel.add_inviteRequestedEvent
void GlobalNamespace::OculusNetworkPlayerModel::add_inviteRequestedEvent(System::Action_1<GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::add_inviteRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_inviteRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusNetworkPlayerModel.remove_inviteRequestedEvent
void GlobalNamespace::OculusNetworkPlayerModel::remove_inviteRequestedEvent(System::Action_1<GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::remove_inviteRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_inviteRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusNetworkPlayerModel.Start
void GlobalNamespace::OculusNetworkPlayerModel::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel.Update
void GlobalNamespace::OculusNetworkPlayerModel::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel.GetPartyPlayers
System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>* GlobalNamespace::OculusNetworkPlayerModel::GetPartyPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::GetPartyPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPartyPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel.GetOtherPlayers
System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>* GlobalNamespace::OculusNetworkPlayerModel::GetOtherPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::GetOtherPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOtherPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel.DestroyPartyConnection
void GlobalNamespace::OculusNetworkPlayerModel::DestroyPartyConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::DestroyPartyConnection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyPartyConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel.PlayerConnected
void GlobalNamespace::OculusNetworkPlayerModel::PlayerConnected(GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::PlayerConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, connectedPlayer);
}
// Autogenerated method: OculusNetworkPlayerModel.PlayerDisconnected
void GlobalNamespace::OculusNetworkPlayerModel::PlayerDisconnected(GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::PlayerDisconnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, connectedPlayer);
}
// Autogenerated method: OculusNetworkPlayerModel.PartySizeChanged
void GlobalNamespace::OculusNetworkPlayerModel::PartySizeChanged(int currentPartySize) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::PartySizeChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PartySizeChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentPartySize)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, currentPartySize);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusNetworkPlayerModel/OculusNetworkPlayer
#include "GlobalNamespace/OculusNetworkPlayerModel_OculusNetworkPlayer.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly OculusNetworkPlayerModel _playerModel
GlobalNamespace::OculusNetworkPlayerModel* GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_get__playerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_get__playerModel");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OculusNetworkPlayerModel*>(___internal__instance, "_playerModel"));
}
// Autogenerated instance field setter
// Set instance field: private readonly OculusNetworkPlayerModel _playerModel
void GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_set__playerModel(GlobalNamespace::OculusNetworkPlayerModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_set__playerModel");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_playerModel", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.UInt64 _id
uint64_t GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_get__id() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_get__id");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>(___internal__instance, "_id"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.UInt64 _id
void GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_set__id(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_set__id");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_id", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _userId
::Il2CppString* GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_get__userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_get__userId");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "_userId"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.String _userId
void GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_set__userId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_set__userId");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_userId", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _userName
::Il2CppString* GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_get__userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_get__userName");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "_userName"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.String _userName
void GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_set__userName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_set__userName");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_userName", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _isMe
bool GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_get__isMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_get__isMe");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_isMe"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Boolean _isMe
void GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_set__isMe(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_set__isMe");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_isMe", value));
}
// Autogenerated instance field getter
// Get instance field: private Oculus.Platform.Models.Room _room
Oculus::Platform::Models::Room* GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_get__room() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_get__room");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Models::Room*>(___internal__instance, "_room"));
}
// Autogenerated instance field setter
// Set instance field: private Oculus.Platform.Models.Room _room
void GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_set__room(Oculus::Platform::Models::Room* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_set__room");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_room", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<BeatmapLevelSelectionMask> _cachedSelectionMask
System::Nullable_1<GlobalNamespace::BeatmapLevelSelectionMask> GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_get__cachedSelectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_get__cachedSelectionMask");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Nullable_1<GlobalNamespace::BeatmapLevelSelectionMask>>(___internal__instance, "_cachedSelectionMask"));
}
// Autogenerated instance field setter
// Set instance field: private System.Nullable`1<BeatmapLevelSelectionMask> _cachedSelectionMask
void GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_set__cachedSelectionMask(System::Nullable_1<GlobalNamespace::BeatmapLevelSelectionMask> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_set__cachedSelectionMask");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_cachedSelectionMask", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<GameplayServerConfiguration> _cachedConfiguration
System::Nullable_1<GlobalNamespace::GameplayServerConfiguration> GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_get__cachedConfiguration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_get__cachedConfiguration");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Nullable_1<GlobalNamespace::GameplayServerConfiguration>>(___internal__instance, "_cachedConfiguration"));
}
// Autogenerated instance field setter
// Set instance field: private System.Nullable`1<GameplayServerConfiguration> _cachedConfiguration
void GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_set__cachedConfiguration(System::Nullable_1<GlobalNamespace::GameplayServerConfiguration> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_set__cachedConfiguration");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_cachedConfiguration", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean removed
bool GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_get_removed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_get_removed");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "removed"));
}
// Autogenerated instance field setter
// Set instance field: public System.Boolean removed
void GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_set_removed(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_set_removed");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "removed", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String inviteToken
::Il2CppString* GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_get_inviteToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_get_inviteToken");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "inviteToken"));
}
// Autogenerated instance field setter
// Set instance field: public System.String inviteToken
void GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_set_inviteToken(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_set_inviteToken");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "inviteToken", value));
}
// Autogenerated instance field getter
// Get instance field: private IConnectedPlayer <connectedPlayer>k__BackingField
GlobalNamespace::IConnectedPlayer* GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_get_$connectedPlayer$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_get_$connectedPlayer$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::IConnectedPlayer*>(___internal__instance, "<connectedPlayer>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private IConnectedPlayer <connectedPlayer>k__BackingField
void GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_set_$connectedPlayer$k__BackingField(GlobalNamespace::IConnectedPlayer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_set_$connectedPlayer$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<connectedPlayer>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isWaitingOnJoin>k__BackingField
bool GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_get_$isWaitingOnJoin$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_get_$isWaitingOnJoin$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(___internal__instance, "<isWaitingOnJoin>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <isWaitingOnJoin>k__BackingField
void GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_set_$isWaitingOnJoin$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_set_$isWaitingOnJoin$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<isWaitingOnJoin>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isWaitingOnInvite>k__BackingField
bool GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_get_$isWaitingOnInvite$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_get_$isWaitingOnInvite$k__BackingField");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>(___internal__instance, "<isWaitingOnInvite>k__BackingField")));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean <isWaitingOnInvite>k__BackingField
void GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_set_$isWaitingOnInvite$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::_set_$isWaitingOnInvite$k__BackingField");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<isWaitingOnInvite>k__BackingField", value));
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_id
uint64_t GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_userId
::Il2CppString* GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_userId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_userName
::Il2CppString* GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_isMe
bool GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_isMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_isMe");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isMe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_isPartyOwner
bool GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_isPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_isPartyOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_isRoomOwner
bool GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_isRoomOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_isRoomOwner");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isRoomOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_currentPartySize
int GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_currentPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_currentPartySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_selectionMask
GlobalNamespace::BeatmapLevelSelectionMask GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_selectionMask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapLevelSelectionMask, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_configuration
GlobalNamespace::GameplayServerConfiguration GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_configuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayServerConfiguration, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_room
Oculus::Platform::Models::Room* GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_room() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_room");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_room", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Oculus::Platform::Models::Room*, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.set_room
void GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::set_room(Oculus::Platform::Models::Room* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::set_room");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_room", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_connectedPlayer
GlobalNamespace::IConnectedPlayer* GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_connectedPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_connectedPlayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.set_connectedPlayer
void GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::set_connectedPlayer(GlobalNamespace::IConnectedPlayer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::set_connectedPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_connectedPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_isMyPartyOwner
bool GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_isMyPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_isMyPartyOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isMyPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_canJoin
bool GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_canJoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_canJoin");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canJoin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_requiresPassword
bool GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_requiresPassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_requiresPassword");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_requiresPassword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_isWaitingOnJoin
bool GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_isWaitingOnJoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_isWaitingOnJoin");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isWaitingOnJoin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.set_isWaitingOnJoin
void GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::set_isWaitingOnJoin(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::set_isWaitingOnJoin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isWaitingOnJoin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_canInvite
bool GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_canInvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_canInvite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canInvite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_isWaitingOnInvite
bool GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_isWaitingOnInvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_isWaitingOnInvite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isWaitingOnInvite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.set_isWaitingOnInvite
void GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::set_isWaitingOnInvite(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::set_isWaitingOnInvite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isWaitingOnInvite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_canKick
bool GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_canKick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_canKick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canKick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_canLeave
bool GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_canLeave() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_canLeave");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canLeave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_canBlock
bool GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_canBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_canBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.get_canUnblock
bool GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_canUnblock() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::get_canUnblock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canUnblock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.Join
void GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::Join() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::Join");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.Join
void GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::Join(::Il2CppString* password) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::Join");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(password)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, password);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.Invite
void GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::Invite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::Invite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.Kick
void GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::Kick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::Kick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Kick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.Leave
void GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::Leave() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::Leave");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Leave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.Block
void GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::Block() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::Block");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.Unblock
void GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::Unblock() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::Unblock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unblock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.SendJoinResponse
void GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::SendJoinResponse(bool accept) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::SendJoinResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendJoinResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(accept)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, accept);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.SendInviteResponse
void GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::SendInviteResponse(bool accept) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::SendInviteResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendInviteResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(accept)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, accept);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.SameRoomAs
bool GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::SameRoomAs(GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::SameRoomAs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SameRoomAs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: OculusNetworkPlayerModel/OculusNetworkPlayer.<Join>b__40_0
void GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::$Join$b__40_0(Oculus::Platform::Message_1<Oculus::Platform::Models::Room*>* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer::<Join>b__40_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Join>b__40_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusNetworkPlayerModel/<Start>d__42
#include "GlobalNamespace/OculusNetworkPlayerModel_-Start-d__42.hpp"
// Including type: UserInfo
#include "GlobalNamespace/UserInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int GlobalNamespace::OculusNetworkPlayerModel::$Start$d__42::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$Start$d__42::_get_$$1__state");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>(___internal__instance, "<>1__state")));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 <>1__state
void GlobalNamespace::OculusNetworkPlayerModel::$Start$d__42::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$Start$d__42::_set_$$1__state");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>1__state", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncVoidMethodBuilder GlobalNamespace::OculusNetworkPlayerModel::$Start$d__42::_get_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$Start$d__42::_get_$$t__builder");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Runtime::CompilerServices::AsyncVoidMethodBuilder>(___internal__instance, "<>t__builder")));
}
// Autogenerated instance field setter
// Set instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
void GlobalNamespace::OculusNetworkPlayerModel::$Start$d__42::_set_$$t__builder(System::Runtime::CompilerServices::AsyncVoidMethodBuilder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$Start$d__42::_set_$$t__builder");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>t__builder", value));
}
// Autogenerated instance field getter
// Get instance field: public OculusNetworkPlayerModel <>4__this
GlobalNamespace::OculusNetworkPlayerModel* GlobalNamespace::OculusNetworkPlayerModel::$Start$d__42::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$Start$d__42::_get_$$4__this");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OculusNetworkPlayerModel*>(___internal__instance, "<>4__this")));
}
// Autogenerated instance field setter
// Set instance field: public OculusNetworkPlayerModel <>4__this
void GlobalNamespace::OculusNetworkPlayerModel::$Start$d__42::_set_$$4__this(GlobalNamespace::OculusNetworkPlayerModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$Start$d__42::_set_$$4__this");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>4__this", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<UserInfo> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::UserInfo*> GlobalNamespace::OculusNetworkPlayerModel::$Start$d__42::_get_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$Start$d__42::_get_$$u__1");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::UserInfo*>>(___internal__instance, "<>u__1")));
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<UserInfo> <>u__1
void GlobalNamespace::OculusNetworkPlayerModel::$Start$d__42::_set_$$u__1(System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::UserInfo*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$Start$d__42::_set_$$u__1");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>u__1", value));
}
// Autogenerated method: OculusNetworkPlayerModel/<Start>d__42.MoveNext
void GlobalNamespace::OculusNetworkPlayerModel::$Start$d__42::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$Start$d__42::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/<Start>d__42.SetStateMachine
void GlobalNamespace::OculusNetworkPlayerModel::$Start$d__42::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$Start$d__42::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusNetworkPlayerModel/<>c__DisplayClass50_0
#include "GlobalNamespace/OculusNetworkPlayerModel_--c__DisplayClass50_0.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.User
#include "Oculus/Platform/Models/User.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.UInt64 id
uint64_t GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass50_0::_get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass50_0::_get_id");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>(___internal__instance, "id"));
}
// Autogenerated instance field setter
// Set instance field: public System.UInt64 id
void GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass50_0::_set_id(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass50_0::_set_id");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "id", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.Tasks.TaskCompletionSource`1<System.String> tcs
System::Threading::Tasks::TaskCompletionSource_1<::Il2CppString*>* GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass50_0::_get_tcs() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass50_0::_get_tcs");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskCompletionSource_1<::Il2CppString*>*>(___internal__instance, "tcs"));
}
// Autogenerated instance field setter
// Set instance field: public System.Threading.Tasks.TaskCompletionSource`1<System.String> tcs
void GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass50_0::_set_tcs(System::Threading::Tasks::TaskCompletionSource_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass50_0::_set_tcs");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "tcs", value));
}
// Autogenerated method: OculusNetworkPlayerModel/<>c__DisplayClass50_0.<GetUserNameAsync>b__0
void GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass50_0::$GetUserNameAsync$b__0(Oculus::Platform::Message_1<Oculus::Platform::Models::User*>* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass50_0::<GetUserNameAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetUserNameAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusNetworkPlayerModel/<>c__DisplayClass51_0
#include "GlobalNamespace/OculusNetworkPlayerModel_--c__DisplayClass51_0.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
// Including type: OculusNetworkPlayerModel/OculusNetworkPlayer
#include "GlobalNamespace/OculusNetworkPlayerModel_OculusNetworkPlayer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OculusNetworkPlayerModel/OculusNetworkPlayer player
GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer* GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass51_0::_get_player() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass51_0::_get_player");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer*>(___internal__instance, "player"));
}
// Autogenerated instance field setter
// Set instance field: public OculusNetworkPlayerModel/OculusNetworkPlayer player
void GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass51_0::_set_player(GlobalNamespace::OculusNetworkPlayerModel::OculusNetworkPlayer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass51_0::_set_player");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "player", value));
}
// Autogenerated instance field getter
// Get instance field: public OculusNetworkPlayerModel <>4__this
GlobalNamespace::OculusNetworkPlayerModel* GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass51_0::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass51_0::_get_$$4__this");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OculusNetworkPlayerModel*>(___internal__instance, "<>4__this")));
}
// Autogenerated instance field setter
// Set instance field: public OculusNetworkPlayerModel <>4__this
void GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass51_0::_set_$$4__this(GlobalNamespace::OculusNetworkPlayerModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass51_0::_set_$$4__this");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>4__this", value));
}
// Autogenerated method: OculusNetworkPlayerModel/<>c__DisplayClass51_0.<HandleRoomInviteReceived>b__0
void GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass51_0::$HandleRoomInviteReceived$b__0(Oculus::Platform::Message_1<Oculus::Platform::Models::Room*>* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass51_0::<HandleRoomInviteReceived>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleRoomInviteReceived>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusNetworkPlayerModel/<HandleRoomInviteReceived>d__51
#include "GlobalNamespace/OculusNetworkPlayerModel_-HandleRoomInviteReceived-d__51.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.RoomInviteNotification
#include "Oculus/Platform/Models/RoomInviteNotification.hpp"
// Including type: OculusNetworkPlayerModel/<>c__DisplayClass51_0
#include "GlobalNamespace/OculusNetworkPlayerModel_--c__DisplayClass51_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::_get_$$1__state");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>(___internal__instance, "<>1__state")));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 <>1__state
void GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::_set_$$1__state");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>1__state", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncVoidMethodBuilder GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::_get_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::_get_$$t__builder");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Runtime::CompilerServices::AsyncVoidMethodBuilder>(___internal__instance, "<>t__builder")));
}
// Autogenerated instance field setter
// Set instance field: public System.Runtime.CompilerServices.AsyncVoidMethodBuilder <>t__builder
void GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::_set_$$t__builder(System::Runtime::CompilerServices::AsyncVoidMethodBuilder value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::_set_$$t__builder");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>t__builder", value));
}
// Autogenerated instance field getter
// Get instance field: public OculusNetworkPlayerModel <>4__this
GlobalNamespace::OculusNetworkPlayerModel* GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::_get_$$4__this");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OculusNetworkPlayerModel*>(___internal__instance, "<>4__this")));
}
// Autogenerated instance field setter
// Set instance field: public OculusNetworkPlayerModel <>4__this
void GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::_set_$$4__this(GlobalNamespace::OculusNetworkPlayerModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::_set_$$4__this");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>4__this", value));
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Platform.Message`1<Oculus.Platform.Models.RoomInviteNotification> message
Oculus::Platform::Message_1<Oculus::Platform::Models::RoomInviteNotification*>* GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::_get_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::_get_message");
  static auto ___internal__instance = *this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Oculus::Platform::Message_1<Oculus::Platform::Models::RoomInviteNotification*>*>(___internal__instance, "message"));
}
// Autogenerated instance field setter
// Set instance field: public Oculus.Platform.Message`1<Oculus.Platform.Models.RoomInviteNotification> message
void GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::_set_message(Oculus::Platform::Message_1<Oculus::Platform::Models::RoomInviteNotification*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::_set_message");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "message", value));
}
// Autogenerated instance field getter
// Get instance field: private OculusNetworkPlayerModel/<>c__DisplayClass51_0 <>8__1
GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass51_0* GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::_get_$$8__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::_get_$$8__1");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass51_0*>(___internal__instance, "<>8__1")));
}
// Autogenerated instance field setter
// Set instance field: private OculusNetworkPlayerModel/<>c__DisplayClass51_0 <>8__1
void GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::_set_$$8__1(GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass51_0* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::_set_$$8__1");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>8__1", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.String> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<::Il2CppString*> GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::_get_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::_get_$$u__1");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Runtime::CompilerServices::TaskAwaiter_1<::Il2CppString*>>(___internal__instance, "<>u__1")));
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<System.String> <>u__1
void GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::_set_$$u__1(System::Runtime::CompilerServices::TaskAwaiter_1<::Il2CppString*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::_set_$$u__1");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>u__1", value));
}
// Autogenerated method: OculusNetworkPlayerModel/<HandleRoomInviteReceived>d__51.MoveNext
void GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OculusNetworkPlayerModel/<HandleRoomInviteReceived>d__51.SetStateMachine
void GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$HandleRoomInviteReceived$d__51::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusNetworkPlayerModel/<>c__DisplayClass55_0
#include "GlobalNamespace/OculusNetworkPlayerModel_--c__DisplayClass55_0.hpp"
// Including type: Oculus.Platform.Models.UserAndRoomList
#include "Oculus/Platform/Models/UserAndRoomList.hpp"
// Including type: Oculus.Platform.Models.UserList
#include "Oculus/Platform/Models/UserList.hpp"
// Including type: Oculus.Platform.Message`1/Oculus.Platform.Callback
#include "Oculus/Platform/Message_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OculusNetworkPlayerModel <>4__this
GlobalNamespace::OculusNetworkPlayerModel* GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass55_0::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass55_0::_get_$$4__this");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OculusNetworkPlayerModel*>(___internal__instance, "<>4__this")));
}
// Autogenerated instance field setter
// Set instance field: public OculusNetworkPlayerModel <>4__this
void GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass55_0::_set_$$4__this(GlobalNamespace::OculusNetworkPlayerModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass55_0::_set_$$4__this");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>4__this", value));
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Platform.Message`1/Oculus.Platform.Callback<Oculus.Platform.Models.UserAndRoomList> onGetFriends
typename Oculus::Platform::Message_1<Oculus::Platform::Models::UserAndRoomList*>::Callback* GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass55_0::_get_onGetFriends() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass55_0::_get_onGetFriends");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<typename Oculus::Platform::Message_1<Oculus::Platform::Models::UserAndRoomList*>::Callback*>(___internal__instance, "onGetFriends"));
}
// Autogenerated instance field setter
// Set instance field: public Oculus.Platform.Message`1/Oculus.Platform.Callback<Oculus.Platform.Models.UserAndRoomList> onGetFriends
void GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass55_0::_set_onGetFriends(typename Oculus::Platform::Message_1<Oculus::Platform::Models::UserAndRoomList*>::Callback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass55_0::_set_onGetFriends");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "onGetFriends", value));
}
// Autogenerated instance field getter
// Get instance field: public Oculus.Platform.Message`1/Oculus.Platform.Callback<Oculus.Platform.Models.UserList> onGetInvitable
typename Oculus::Platform::Message_1<Oculus::Platform::Models::UserList*>::Callback* GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass55_0::_get_onGetInvitable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass55_0::_get_onGetInvitable");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<typename Oculus::Platform::Message_1<Oculus::Platform::Models::UserList*>::Callback*>(___internal__instance, "onGetInvitable"));
}
// Autogenerated instance field setter
// Set instance field: public Oculus.Platform.Message`1/Oculus.Platform.Callback<Oculus.Platform.Models.UserList> onGetInvitable
void GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass55_0::_set_onGetInvitable(typename Oculus::Platform::Message_1<Oculus::Platform::Models::UserList*>::Callback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass55_0::_set_onGetInvitable");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "onGetInvitable", value));
}
// Autogenerated method: OculusNetworkPlayerModel/<>c__DisplayClass55_0.<Refresh>b__0
void GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass55_0::$Refresh$b__0(Oculus::Platform::Message_1<Oculus::Platform::Models::UserAndRoomList*>* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass55_0::<Refresh>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Refresh>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: OculusNetworkPlayerModel/<>c__DisplayClass55_0.<Refresh>b__1
void GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass55_0::$Refresh$b__1(Oculus::Platform::Message_1<Oculus::Platform::Models::UserList*>* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass55_0::<Refresh>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Refresh>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusNetworkPlayerModel/<>c__DisplayClass64_0
#include "GlobalNamespace/OculusNetworkPlayerModel_--c__DisplayClass64_0.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.Room
#include "Oculus/Platform/Models/Room.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public OculusNetworkPlayerModel <>4__this
GlobalNamespace::OculusNetworkPlayerModel* GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass64_0::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass64_0::_get_$$4__this");
  static auto ___internal__instance = this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::OculusNetworkPlayerModel*>(___internal__instance, "<>4__this")));
}
// Autogenerated instance field setter
// Set instance field: public OculusNetworkPlayerModel <>4__this
void GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass64_0::_set_$$4__this(GlobalNamespace::OculusNetworkPlayerModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass64_0::_set_$$4__this");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>4__this", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.Tasks.TaskCompletionSource`1<System.Boolean> tcs
System::Threading::Tasks::TaskCompletionSource_1<bool>* GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass64_0::_get_tcs() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass64_0::_get_tcs");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::TaskCompletionSource_1<bool>*>(___internal__instance, "tcs"));
}
// Autogenerated instance field setter
// Set instance field: public System.Threading.Tasks.TaskCompletionSource`1<System.Boolean> tcs
void GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass64_0::_set_tcs(System::Threading::Tasks::TaskCompletionSource_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass64_0::_set_tcs");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "tcs", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt64 userId
uint64_t GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass64_0::_get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass64_0::_get_userId");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint64_t>(___internal__instance, "userId"));
}
// Autogenerated instance field setter
// Set instance field: public System.UInt64 userId
void GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass64_0::_set_userId(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass64_0::_set_userId");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "userId", value));
}
// Autogenerated method: OculusNetworkPlayerModel/<>c__DisplayClass64_0.<ShouldAcceptConnectionFromPlayer>b__0
void GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass64_0::$ShouldAcceptConnectionFromPlayer$b__0(Oculus::Platform::Message_1<Oculus::Platform::Models::Room*>* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OculusNetworkPlayerModel::$$c__DisplayClass64_0::<ShouldAcceptConnectionFromPlayer>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ShouldAcceptConnectionFromPlayer>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PS4NetworkPlayerModel
#include "GlobalNamespace/PS4NetworkPlayerModel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlatformAuthenticationTokenProvider
#include "GlobalNamespace/PlatformAuthenticationTokenProvider.hpp"
// Including type: PlatformAuthenticationTokenProvider/<>c
#include "GlobalNamespace/PlatformAuthenticationTokenProvider_--c.hpp"
// Including type: PlatformAuthenticationTokenProvider/<GetAuthenticationToken>d__10
#include "GlobalNamespace/PlatformAuthenticationTokenProvider_-GetAuthenticationToken-d__10.hpp"
// Including type: IPlatformUserModel
#include "GlobalNamespace/IPlatformUserModel.hpp"
// Including type: UserInfo
#include "GlobalNamespace/UserInfo.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IPlatformUserModel _platformUserModel
GlobalNamespace::IPlatformUserModel* GlobalNamespace::PlatformAuthenticationTokenProvider::_get__platformUserModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAuthenticationTokenProvider::_get__platformUserModel");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::IPlatformUserModel*>(___internal__instance, "_platformUserModel"));
}
// Autogenerated instance field setter
// Set instance field: private readonly IPlatformUserModel _platformUserModel
void GlobalNamespace::PlatformAuthenticationTokenProvider::_set__platformUserModel(GlobalNamespace::IPlatformUserModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAuthenticationTokenProvider::_set__platformUserModel");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_platformUserModel", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _userId
::Il2CppString* GlobalNamespace::PlatformAuthenticationTokenProvider::_get__userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAuthenticationTokenProvider::_get__userId");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "_userId"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.String _userId
void GlobalNamespace::PlatformAuthenticationTokenProvider::_set__userId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAuthenticationTokenProvider::_set__userId");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_userId", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _userName
::Il2CppString* GlobalNamespace::PlatformAuthenticationTokenProvider::_get__userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAuthenticationTokenProvider::_get__userName");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "_userName"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.String _userName
void GlobalNamespace::PlatformAuthenticationTokenProvider::_set__userName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAuthenticationTokenProvider::_set__userName");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_userName", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _hashedUserId
::Il2CppString* GlobalNamespace::PlatformAuthenticationTokenProvider::_get__hashedUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAuthenticationTokenProvider::_get__hashedUserId");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "_hashedUserId"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.String _hashedUserId
void GlobalNamespace::PlatformAuthenticationTokenProvider::_set__hashedUserId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAuthenticationTokenProvider::_set__hashedUserId");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_hashedUserId", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly AuthenticationToken/Platform _platform
GlobalNamespace::AuthenticationToken::Platform GlobalNamespace::PlatformAuthenticationTokenProvider::_get__platform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAuthenticationTokenProvider::_get__platform");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::AuthenticationToken::Platform>(___internal__instance, "_platform"));
}
// Autogenerated instance field setter
// Set instance field: private readonly AuthenticationToken/Platform _platform
void GlobalNamespace::PlatformAuthenticationTokenProvider::_set__platform(GlobalNamespace::AuthenticationToken::Platform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAuthenticationTokenProvider::_set__platform");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_platform", value));
}
// Autogenerated method: PlatformAuthenticationTokenProvider.get_hashedUserId
::Il2CppString* GlobalNamespace::PlatformAuthenticationTokenProvider::get_hashedUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAuthenticationTokenProvider::get_hashedUserId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hashedUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PlatformAuthenticationTokenProvider.get_userName
::Il2CppString* GlobalNamespace::PlatformAuthenticationTokenProvider::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAuthenticationTokenProvider::get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: PlatformAuthenticationTokenProvider.GetAuthenticationToken
System::Threading::Tasks::Task_1<GlobalNamespace::AuthenticationToken>* GlobalNamespace::PlatformAuthenticationTokenProvider::GetAuthenticationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAuthenticationTokenProvider::GetAuthenticationToken");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAuthenticationToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<GlobalNamespace::AuthenticationToken>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlatformAuthenticationTokenProvider/<>c
#include "GlobalNamespace/PlatformAuthenticationTokenProvider_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly PlatformAuthenticationTokenProvider/<>c <>9
GlobalNamespace::PlatformAuthenticationTokenProvider::$$c* GlobalNamespace::PlatformAuthenticationTokenProvider::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAuthenticationTokenProvider::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::PlatformAuthenticationTokenProvider::$$c*>("", "PlatformAuthenticationTokenProvider/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly PlatformAuthenticationTokenProvider/<>c <>9
void GlobalNamespace::PlatformAuthenticationTokenProvider::$$c::_set_$$9(GlobalNamespace::PlatformAuthenticationTokenProvider::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAuthenticationTokenProvider::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "PlatformAuthenticationTokenProvider/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.String,System.Byte> <>9__10_0
System::Func_2<::Il2CppString*, uint8_t>* GlobalNamespace::PlatformAuthenticationTokenProvider::$$c::_get_$$9__10_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAuthenticationTokenProvider::$$c::_get_$$9__10_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<::Il2CppString*, uint8_t>*>("", "PlatformAuthenticationTokenProvider/<>c", "<>9__10_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.String,System.Byte> <>9__10_0
void GlobalNamespace::PlatformAuthenticationTokenProvider::$$c::_set_$$9__10_0(System::Func_2<::Il2CppString*, uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAuthenticationTokenProvider::$$c::_set_$$9__10_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "PlatformAuthenticationTokenProvider/<>c", "<>9__10_0", value)));
}
// Autogenerated method: PlatformAuthenticationTokenProvider/<>c..cctor
void GlobalNamespace::PlatformAuthenticationTokenProvider::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAuthenticationTokenProvider::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlatformAuthenticationTokenProvider/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: PlatformAuthenticationTokenProvider/<>c.<GetAuthenticationToken>b__10_0
uint8_t GlobalNamespace::PlatformAuthenticationTokenProvider::$$c::$GetAuthenticationToken$b__10_0(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAuthenticationTokenProvider::$$c::<GetAuthenticationToken>b__10_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetAuthenticationToken>b__10_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(this, ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlatformAuthenticationTokenProvider/<GetAuthenticationToken>d__10
#include "GlobalNamespace/PlatformAuthenticationTokenProvider_-GetAuthenticationToken-d__10.hpp"
// Including type: PlatformUserAuthTokenData
#include "GlobalNamespace/PlatformUserAuthTokenData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int GlobalNamespace::PlatformAuthenticationTokenProvider::$GetAuthenticationToken$d__10::_get_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAuthenticationTokenProvider::$GetAuthenticationToken$d__10::_get_$$1__state");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<int>(___internal__instance, "<>1__state")));
}
// Autogenerated instance field setter
// Set instance field: public System.Int32 <>1__state
void GlobalNamespace::PlatformAuthenticationTokenProvider::$GetAuthenticationToken$d__10::_set_$$1__state(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAuthenticationTokenProvider::$GetAuthenticationToken$d__10::_set_$$1__state");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>1__state", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AuthenticationToken> <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::AuthenticationToken> GlobalNamespace::PlatformAuthenticationTokenProvider::$GetAuthenticationToken$d__10::_get_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAuthenticationTokenProvider::$GetAuthenticationToken$d__10::_get_$$t__builder");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::AuthenticationToken>>(___internal__instance, "<>t__builder")));
}
// Autogenerated instance field setter
// Set instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1<AuthenticationToken> <>t__builder
void GlobalNamespace::PlatformAuthenticationTokenProvider::$GetAuthenticationToken$d__10::_set_$$t__builder(System::Runtime::CompilerServices::AsyncTaskMethodBuilder_1<GlobalNamespace::AuthenticationToken> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAuthenticationTokenProvider::$GetAuthenticationToken$d__10::_set_$$t__builder");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>t__builder", value));
}
// Autogenerated instance field getter
// Get instance field: public PlatformAuthenticationTokenProvider <>4__this
GlobalNamespace::PlatformAuthenticationTokenProvider* GlobalNamespace::PlatformAuthenticationTokenProvider::$GetAuthenticationToken$d__10::_get_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAuthenticationTokenProvider::$GetAuthenticationToken$d__10::_get_$$4__this");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::PlatformAuthenticationTokenProvider*>(___internal__instance, "<>4__this")));
}
// Autogenerated instance field setter
// Set instance field: public PlatformAuthenticationTokenProvider <>4__this
void GlobalNamespace::PlatformAuthenticationTokenProvider::$GetAuthenticationToken$d__10::_set_$$4__this(GlobalNamespace::PlatformAuthenticationTokenProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAuthenticationTokenProvider::$GetAuthenticationToken$d__10::_set_$$4__this");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>4__this", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<PlatformUserAuthTokenData> <>u__1
System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::PlatformUserAuthTokenData*> GlobalNamespace::PlatformAuthenticationTokenProvider::$GetAuthenticationToken$d__10::_get_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAuthenticationTokenProvider::$GetAuthenticationToken$d__10::_get_$$u__1");
  static auto ___internal__instance = *this;
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::PlatformUserAuthTokenData*>>(___internal__instance, "<>u__1")));
}
// Autogenerated instance field setter
// Set instance field: private System.Runtime.CompilerServices.TaskAwaiter`1<PlatformUserAuthTokenData> <>u__1
void GlobalNamespace::PlatformAuthenticationTokenProvider::$GetAuthenticationToken$d__10::_set_$$u__1(System::Runtime::CompilerServices::TaskAwaiter_1<GlobalNamespace::PlatformUserAuthTokenData*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAuthenticationTokenProvider::$GetAuthenticationToken$d__10::_set_$$u__1");
  static auto ___internal__instance = *this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "<>u__1", value));
}
// Autogenerated method: PlatformAuthenticationTokenProvider/<GetAuthenticationToken>d__10.MoveNext
void GlobalNamespace::PlatformAuthenticationTokenProvider::$GetAuthenticationToken$d__10::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAuthenticationTokenProvider::$GetAuthenticationToken$d__10::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: PlatformAuthenticationTokenProvider/<GetAuthenticationToken>d__10.SetStateMachine
void GlobalNamespace::PlatformAuthenticationTokenProvider::$GetAuthenticationToken$d__10::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformAuthenticationTokenProvider::$GetAuthenticationToken$d__10::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlatformNetworkPlayerModel
#include "GlobalNamespace/PlatformNetworkPlayerModel.hpp"
// Including type: PlatformNetworkPlayerModel/CreatePartyConfig
#include "GlobalNamespace/PlatformNetworkPlayerModel_CreatePartyConfig.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlatformNetworkPlayerModel.get_friends
System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>* GlobalNamespace::PlatformNetworkPlayerModel::get_friends() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformNetworkPlayerModel::get_friends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_friends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: PlatformNetworkPlayerModel.DestroyPartyConnection
void GlobalNamespace::PlatformNetworkPlayerModel::DestroyPartyConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformNetworkPlayerModel::DestroyPartyConnection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyPartyConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlatformNetworkPlayerModel/CreatePartyConfig
#include "GlobalNamespace/PlatformNetworkPlayerModel_CreatePartyConfig.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SceneStartSyncController
#include "GlobalNamespace/SceneStartSyncController.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: IGameplayRpcManager
#include "GlobalNamespace/IGameplayRpcManager.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: SceneStartHandler
#include "GlobalNamespace/SceneStartHandler.hpp"
// Including type: PlayersSpecificSettingsAtGameStartModel
#include "GlobalNamespace/PlayersSpecificSettingsAtGameStartModel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kLoadOtherTimeout
float GlobalNamespace::SceneStartSyncController::_get_kLoadOtherTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartSyncController::_get_kLoadOtherTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SceneStartSyncController", "kLoadOtherTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kLoadOtherTimeout
void GlobalNamespace::SceneStartSyncController::_set_kLoadOtherTimeout(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartSyncController::_set_kLoadOtherTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SceneStartSyncController", "kLoadOtherTimeout", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kLoadSelfTimeout
float GlobalNamespace::SceneStartSyncController::_get_kLoadSelfTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartSyncController::_get_kLoadSelfTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SceneStartSyncController", "kLoadSelfTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kLoadSelfTimeout
void GlobalNamespace::SceneStartSyncController::_set_kLoadSelfTimeout(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartSyncController::_set_kLoadSelfTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SceneStartSyncController", "kLoadSelfTimeout", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
GlobalNamespace::IMultiplayerSessionManager* GlobalNamespace::SceneStartSyncController::_get__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartSyncController::_get__multiplayerSessionManager");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::IMultiplayerSessionManager*>(___internal__instance, "_multiplayerSessionManager"));
}
// Autogenerated instance field setter
// Set instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
void GlobalNamespace::SceneStartSyncController::_set__multiplayerSessionManager(GlobalNamespace::IMultiplayerSessionManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartSyncController::_set__multiplayerSessionManager");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_multiplayerSessionManager", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly IGameplayRpcManager _gameplayRpcManager
GlobalNamespace::IGameplayRpcManager* GlobalNamespace::SceneStartSyncController::_get__gameplayRpcManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartSyncController::_get__gameplayRpcManager");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::IGameplayRpcManager*>(___internal__instance, "_gameplayRpcManager"));
}
// Autogenerated instance field setter
// Set instance field: private readonly IGameplayRpcManager _gameplayRpcManager
void GlobalNamespace::SceneStartSyncController::_set__gameplayRpcManager(GlobalNamespace::IGameplayRpcManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartSyncController::_set__gameplayRpcManager");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_gameplayRpcManager", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> syncStartDidSuccessEvent
System::Action_1<::Il2CppString*>* GlobalNamespace::SceneStartSyncController::_get_syncStartDidSuccessEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartSyncController::_get_syncStartDidSuccessEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<::Il2CppString*>*>(___internal__instance, "syncStartDidSuccessEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<System.String> syncStartDidSuccessEvent
void GlobalNamespace::SceneStartSyncController::_set_syncStartDidSuccessEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartSyncController::_set_syncStartDidSuccessEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "syncStartDidSuccessEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.String> syncStartDidReceiveTooLateEvent
System::Action_1<::Il2CppString*>* GlobalNamespace::SceneStartSyncController::_get_syncStartDidReceiveTooLateEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartSyncController::_get_syncStartDidReceiveTooLateEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<::Il2CppString*>*>(___internal__instance, "syncStartDidReceiveTooLateEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<System.String> syncStartDidReceiveTooLateEvent
void GlobalNamespace::SceneStartSyncController::_set_syncStartDidReceiveTooLateEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartSyncController::_set_syncStartDidReceiveTooLateEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "syncStartDidReceiveTooLateEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action syncStartDidFailEvent
System::Action* GlobalNamespace::SceneStartSyncController::_get_syncStartDidFailEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartSyncController::_get_syncStartDidFailEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>(___internal__instance, "syncStartDidFailEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action syncStartDidFailEvent
void GlobalNamespace::SceneStartSyncController::_set_syncStartDidFailEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartSyncController::_set_syncStartDidFailEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "syncStartDidFailEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private SceneStartHandler _sceneStartHandler
GlobalNamespace::SceneStartHandler* GlobalNamespace::SceneStartSyncController::_get__sceneStartHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartSyncController::_get__sceneStartHandler");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SceneStartHandler*>(___internal__instance, "_sceneStartHandler"));
}
// Autogenerated instance field setter
// Set instance field: private SceneStartHandler _sceneStartHandler
void GlobalNamespace::SceneStartSyncController::_set__sceneStartHandler(GlobalNamespace::SceneStartHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartSyncController::_set__sceneStartHandler");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_sceneStartHandler", value));
}
// Autogenerated instance field getter
// Get instance field: private PlayersSpecificSettingsAtGameStartModel _playersAtGameStartModel
GlobalNamespace::PlayersSpecificSettingsAtGameStartModel* GlobalNamespace::SceneStartSyncController::_get__playersAtGameStartModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartSyncController::_get__playersAtGameStartModel");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PlayersSpecificSettingsAtGameStartModel*>(___internal__instance, "_playersAtGameStartModel"));
}
// Autogenerated instance field setter
// Set instance field: private PlayersSpecificSettingsAtGameStartModel _playersAtGameStartModel
void GlobalNamespace::SceneStartSyncController::_set__playersAtGameStartModel(GlobalNamespace::PlayersSpecificSettingsAtGameStartModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartSyncController::_set__playersAtGameStartModel");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_playersAtGameStartModel", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single _waitStartTime
float GlobalNamespace::SceneStartSyncController::_get__waitStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartSyncController::_get__waitStartTime");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "_waitStartTime"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single _waitStartTime
void GlobalNamespace::SceneStartSyncController::_set__waitStartTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartSyncController::_set__waitStartTime");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_waitStartTime", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _sceneSyncStarted
bool GlobalNamespace::SceneStartSyncController::_get__sceneSyncStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartSyncController::_get__sceneSyncStarted");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_sceneSyncStarted"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _sceneSyncStarted
void GlobalNamespace::SceneStartSyncController::_set__sceneSyncStarted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartSyncController::_set__sceneSyncStarted");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_sceneSyncStarted", value));
}
// Autogenerated method: SceneStartSyncController.add_syncStartDidSuccessEvent
void GlobalNamespace::SceneStartSyncController::add_syncStartDidSuccessEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartSyncController::add_syncStartDidSuccessEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_syncStartDidSuccessEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SceneStartSyncController.remove_syncStartDidSuccessEvent
void GlobalNamespace::SceneStartSyncController::remove_syncStartDidSuccessEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartSyncController::remove_syncStartDidSuccessEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_syncStartDidSuccessEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SceneStartSyncController.add_syncStartDidReceiveTooLateEvent
void GlobalNamespace::SceneStartSyncController::add_syncStartDidReceiveTooLateEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartSyncController::add_syncStartDidReceiveTooLateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_syncStartDidReceiveTooLateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SceneStartSyncController.remove_syncStartDidReceiveTooLateEvent
void GlobalNamespace::SceneStartSyncController::remove_syncStartDidReceiveTooLateEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartSyncController::remove_syncStartDidReceiveTooLateEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_syncStartDidReceiveTooLateEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SceneStartSyncController.add_syncStartDidFailEvent
void GlobalNamespace::SceneStartSyncController::add_syncStartDidFailEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartSyncController::add_syncStartDidFailEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_syncStartDidFailEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SceneStartSyncController.remove_syncStartDidFailEvent
void GlobalNamespace::SceneStartSyncController::remove_syncStartDidFailEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartSyncController::remove_syncStartDidFailEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_syncStartDidFailEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SceneStartSyncController.Start
void GlobalNamespace::SceneStartSyncController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartSyncController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SceneStartSyncController.Update
void GlobalNamespace::SceneStartSyncController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartSyncController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SceneStartSyncController.OnDestroy
void GlobalNamespace::SceneStartSyncController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartSyncController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SceneStartSyncController.StartSceneLoadSync
void GlobalNamespace::SceneStartSyncController::StartSceneLoadSync(GlobalNamespace::PlayersSpecificSettingsAtGameStartModel* playersAtGameStartModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartSyncController::StartSceneLoadSync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartSceneLoadSync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playersAtGameStartModel)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playersAtGameStartModel);
}
// Autogenerated method: SceneStartSyncController.HandleSceneSetupDidFinish
void GlobalNamespace::SceneStartSyncController::HandleSceneSetupDidFinish(::Il2CppString* sessionGameId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartSyncController::HandleSceneSetupDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSceneSetupDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionGameId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sessionGameId);
}
// Autogenerated method: SceneStartSyncController.HandleSceneSetupDidReceiveTooLate
void GlobalNamespace::SceneStartSyncController::HandleSceneSetupDidReceiveTooLate(::Il2CppString* sessionGameId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SceneStartSyncController::HandleSceneSetupDidReceiveTooLate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSceneSetupDidReceiveTooLate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sessionGameId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sessionGameId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ScoreSyncStateManager
#include "GlobalNamespace/ScoreSyncStateManager.hpp"
// Including type: StandardScoreSyncStateNetSerializable
#include "GlobalNamespace/StandardScoreSyncStateNetSerializable.hpp"
// Including type: StandardScoreSyncStateDeltaNetSerializable
#include "GlobalNamespace/StandardScoreSyncStateDeltaNetSerializable.hpp"
// Including type: IPacketPool`1
#include "GlobalNamespace/IPacketPool_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ScoreSyncStateManager.get_serializablePool
GlobalNamespace::IPacketPool_1<GlobalNamespace::StandardScoreSyncStateNetSerializable*>* GlobalNamespace::ScoreSyncStateManager::get_serializablePool() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreSyncStateManager::get_serializablePool");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_serializablePool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IPacketPool_1<GlobalNamespace::StandardScoreSyncStateNetSerializable*>*, false>(this, ___internal__method);
}
// Autogenerated method: ScoreSyncStateManager.get_deltaSerializablePool
GlobalNamespace::IPacketPool_1<GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable*>* GlobalNamespace::ScoreSyncStateManager::get_deltaSerializablePool() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreSyncStateManager::get_deltaSerializablePool");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deltaSerializablePool", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IPacketPool_1<GlobalNamespace::StandardScoreSyncStateDeltaNetSerializable*>*, false>(this, ___internal__method);
}
// Autogenerated method: ScoreSyncStateManager.Interpolate
int GlobalNamespace::ScoreSyncStateManager::Interpolate(int prev, float prevTime, int curr, float currTime, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreSyncStateManager::Interpolate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Interpolate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prev), ::il2cpp_utils::ExtractType(prevTime), ::il2cpp_utils::ExtractType(curr), ::il2cpp_utils::ExtractType(currTime), ::il2cpp_utils::ExtractType(time)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, prev, prevTime, curr, currTime, time);
}
// Autogenerated method: ScoreSyncStateManager.get_deltaUpdateFrequency
float GlobalNamespace::ScoreSyncStateManager::get_deltaUpdateFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreSyncStateManager::get_deltaUpdateFrequency");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deltaUpdateFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ScoreSyncStateManager.get_fullStateUpdateFrequency
float GlobalNamespace::ScoreSyncStateManager::get_fullStateUpdateFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreSyncStateManager::get_fullStateUpdateFrequency");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fullStateUpdateFrequency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ScoreSyncStateManager.get_localBufferSize
int GlobalNamespace::ScoreSyncStateManager::get_localBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreSyncStateManager::get_localBufferSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localBufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ScoreSyncStateManager.get_remoteBufferSize
int GlobalNamespace::ScoreSyncStateManager::get_remoteBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreSyncStateManager::get_remoteBufferSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_remoteBufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ScoreSyncStateManager.get_messageType
GlobalNamespace::MultiplayerSessionManager_MessageType GlobalNamespace::ScoreSyncStateManager::get_messageType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreSyncStateManager::get_messageType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_messageType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MultiplayerSessionManager_MessageType, false>(this, ___internal__method);
}
// Autogenerated method: ScoreSyncStateManager.get_deltaMessageType
GlobalNamespace::MultiplayerSessionManager_MessageType GlobalNamespace::ScoreSyncStateManager::get_deltaMessageType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreSyncStateManager::get_deltaMessageType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deltaMessageType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MultiplayerSessionManager_MessageType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SongStartSyncController
#include "GlobalNamespace/SongStartSyncController.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: IGameplayRpcManager
#include "GlobalNamespace/IGameplayRpcManager.hpp"
// Including type: SongStartHandler
#include "GlobalNamespace/SongStartHandler.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PlayersSpecificSettingsAtGameStartModel
#include "GlobalNamespace/PlayersSpecificSettingsAtGameStartModel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kAudioLoadTimeout
float GlobalNamespace::SongStartSyncController::_get_kAudioLoadTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartSyncController::_get_kAudioLoadTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SongStartSyncController", "kAudioLoadTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kAudioLoadTimeout
void GlobalNamespace::SongStartSyncController::_set_kAudioLoadTimeout(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartSyncController::_set_kAudioLoadTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SongStartSyncController", "kAudioLoadTimeout", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
GlobalNamespace::IMultiplayerSessionManager* GlobalNamespace::SongStartSyncController::_get__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartSyncController::_get__multiplayerSessionManager");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::IMultiplayerSessionManager*>(___internal__instance, "_multiplayerSessionManager"));
}
// Autogenerated instance field setter
// Set instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
void GlobalNamespace::SongStartSyncController::_set__multiplayerSessionManager(GlobalNamespace::IMultiplayerSessionManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartSyncController::_set__multiplayerSessionManager");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_multiplayerSessionManager", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly IGameplayRpcManager _gameplayRpcManager
GlobalNamespace::IGameplayRpcManager* GlobalNamespace::SongStartSyncController::_get__gameplayRpcManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartSyncController::_get__gameplayRpcManager");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::IGameplayRpcManager*>(___internal__instance, "_gameplayRpcManager"));
}
// Autogenerated instance field setter
// Set instance field: private readonly IGameplayRpcManager _gameplayRpcManager
void GlobalNamespace::SongStartSyncController::_set__gameplayRpcManager(GlobalNamespace::IGameplayRpcManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartSyncController::_set__gameplayRpcManager");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_gameplayRpcManager", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single _waitStartTime
float GlobalNamespace::SongStartSyncController::_get__waitStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartSyncController::_get__waitStartTime");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "_waitStartTime"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single _waitStartTime
void GlobalNamespace::SongStartSyncController::_set__waitStartTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartSyncController::_set__waitStartTime");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_waitStartTime", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _songStarted
bool GlobalNamespace::SongStartSyncController::_get__songStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartSyncController::_get__songStarted");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_songStarted"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _songStarted
void GlobalNamespace::SongStartSyncController::_set__songStarted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartSyncController::_set__songStarted");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_songStarted", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startTime
float GlobalNamespace::SongStartSyncController::_get__startTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartSyncController::_get__startTime");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "_startTime"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single _startTime
void GlobalNamespace::SongStartSyncController::_set__startTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartSyncController::_set__startTime");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_startTime", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String _sessionGameId
::Il2CppString* GlobalNamespace::SongStartSyncController::_get__sessionGameId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartSyncController::_get__sessionGameId");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "_sessionGameId"));
}
// Autogenerated instance field setter
// Set instance field: private System.String _sessionGameId
void GlobalNamespace::SongStartSyncController::_set__sessionGameId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartSyncController::_set__sessionGameId");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_sessionGameId", value));
}
// Autogenerated instance field getter
// Get instance field: private SongStartHandler _songStartHandler
GlobalNamespace::SongStartHandler* GlobalNamespace::SongStartSyncController::_get__songStartHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartSyncController::_get__songStartHandler");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SongStartHandler*>(___internal__instance, "_songStartHandler"));
}
// Autogenerated instance field setter
// Set instance field: private SongStartHandler _songStartHandler
void GlobalNamespace::SongStartSyncController::_set__songStartHandler(GlobalNamespace::SongStartHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartSyncController::_set__songStartHandler");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_songStartHandler", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action syncStartFailedEvent
System::Action* GlobalNamespace::SongStartSyncController::_get_syncStartFailedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartSyncController::_get_syncStartFailedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>(___internal__instance, "syncStartFailedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action syncStartFailedEvent
void GlobalNamespace::SongStartSyncController::_set_syncStartFailedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartSyncController::_set_syncStartFailedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "syncStartFailedEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Single> syncStartSuccessEvent
System::Action_1<float>* GlobalNamespace::SongStartSyncController::_get_syncStartSuccessEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartSyncController::_get_syncStartSuccessEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<float>*>(___internal__instance, "syncStartSuccessEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<System.Single> syncStartSuccessEvent
void GlobalNamespace::SongStartSyncController::_set_syncStartSuccessEvent(System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartSyncController::_set_syncStartSuccessEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "syncStartSuccessEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Single> syncResumeEvent
System::Action_1<float>* GlobalNamespace::SongStartSyncController::_get_syncResumeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartSyncController::_get_syncResumeEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<float>*>(___internal__instance, "syncResumeEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<System.Single> syncResumeEvent
void GlobalNamespace::SongStartSyncController::_set_syncResumeEvent(System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartSyncController::_set_syncResumeEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "syncResumeEvent", value));
}
// Autogenerated method: SongStartSyncController.get_isSongStarted
bool GlobalNamespace::SongStartSyncController::get_isSongStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartSyncController::get_isSongStarted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSongStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: SongStartSyncController.get_songStartSyncTime
float GlobalNamespace::SongStartSyncController::get_songStartSyncTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartSyncController::get_songStartSyncTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songStartSyncTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SongStartSyncController.add_syncStartFailedEvent
void GlobalNamespace::SongStartSyncController::add_syncStartFailedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartSyncController::add_syncStartFailedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_syncStartFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SongStartSyncController.remove_syncStartFailedEvent
void GlobalNamespace::SongStartSyncController::remove_syncStartFailedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartSyncController::remove_syncStartFailedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_syncStartFailedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SongStartSyncController.add_syncStartSuccessEvent
void GlobalNamespace::SongStartSyncController::add_syncStartSuccessEvent(System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartSyncController::add_syncStartSuccessEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_syncStartSuccessEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SongStartSyncController.remove_syncStartSuccessEvent
void GlobalNamespace::SongStartSyncController::remove_syncStartSuccessEvent(System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartSyncController::remove_syncStartSuccessEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_syncStartSuccessEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SongStartSyncController.add_syncResumeEvent
void GlobalNamespace::SongStartSyncController::add_syncResumeEvent(System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartSyncController::add_syncResumeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_syncResumeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SongStartSyncController.remove_syncResumeEvent
void GlobalNamespace::SongStartSyncController::remove_syncResumeEvent(System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartSyncController::remove_syncResumeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_syncResumeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SongStartSyncController.Start
void GlobalNamespace::SongStartSyncController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartSyncController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongStartSyncController.OnDestroy
void GlobalNamespace::SongStartSyncController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartSyncController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongStartSyncController.Update
void GlobalNamespace::SongStartSyncController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartSyncController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongStartSyncController.OnApplicationPause
void GlobalNamespace::SongStartSyncController::OnApplicationPause(bool pauseStatus) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartSyncController::OnApplicationPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pauseStatus)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pauseStatus);
}
// Autogenerated method: SongStartSyncController.StartSong
void GlobalNamespace::SongStartSyncController::StartSong(GlobalNamespace::PlayersSpecificSettingsAtGameStartModel* playersSpecificSettingsAtGameStartModel, ::Il2CppString* sessionGameId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartSyncController::StartSong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playersSpecificSettingsAtGameStartModel), ::il2cpp_utils::ExtractType(sessionGameId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playersSpecificSettingsAtGameStartModel, sessionGameId);
}
// Autogenerated method: SongStartSyncController.HandleSetSongStartSyncTime
void GlobalNamespace::SongStartSyncController::HandleSetSongStartSyncTime(float songStartSyncTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongStartSyncController::HandleSetSongStartSyncTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSetSongStartSyncTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songStartSyncTime)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, songStartSyncTime);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SteamNetworkPlayerModel
#include "GlobalNamespace/SteamNetworkPlayerModel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnifiedNetworkPlayerModel
#include "GlobalNamespace/UnifiedNetworkPlayerModel.hpp"
// Including type: UnifiedNetworkPlayerModel/UnifiedNetworkPlayer
#include "GlobalNamespace/UnifiedNetworkPlayerModel_UnifiedNetworkPlayer.hpp"
// Including type: UnifiedNetworkPlayerModel/CreateUserServerPartyConfig
#include "GlobalNamespace/UnifiedNetworkPlayerModel_CreateUserServerPartyConfig.hpp"
// Including type: UnifiedNetworkPlayerModel/JoinUserServerPartyConfig
#include "GlobalNamespace/UnifiedNetworkPlayerModel_JoinUserServerPartyConfig.hpp"
// Including type: UnifiedNetworkPlayerModel/JoinMatchmakingPartyConfig
#include "GlobalNamespace/UnifiedNetworkPlayerModel_JoinMatchmakingPartyConfig.hpp"
// Including type: UnifiedNetworkPlayerModel/UnifiedNetworkServer
#include "GlobalNamespace/UnifiedNetworkPlayerModel_UnifiedNetworkServer.hpp"
// Including type: UnifiedNetworkPlayerModel/<get_friends>d__78
#include "GlobalNamespace/UnifiedNetworkPlayerModel_-get_friends-d__78.hpp"
// Including type: UnifiedNetworkPlayerModel/<get_localNetworkPlayers>d__80
#include "GlobalNamespace/UnifiedNetworkPlayerModel_-get_localNetworkPlayers-d__80.hpp"
// Including type: UnifiedNetworkPlayerModel/<Start>d__87
#include "GlobalNamespace/UnifiedNetworkPlayerModel_-Start-d__87.hpp"
// Including type: UnifiedNetworkPlayerModel/<GetPartyPlayers>d__89
#include "GlobalNamespace/UnifiedNetworkPlayerModel_-GetPartyPlayers-d__89.hpp"
// Including type: UnifiedNetworkPlayerModel/<GetOtherPlayers>d__90
#include "GlobalNamespace/UnifiedNetworkPlayerModel_-GetOtherPlayers-d__90.hpp"
// Including type: UnifiedNetworkPlayerModel/<>c__DisplayClass92_0
#include "GlobalNamespace/UnifiedNetworkPlayerModel_--c__DisplayClass92_0.hpp"
// Including type: UnifiedNetworkPlayerModel/<>c
#include "GlobalNamespace/UnifiedNetworkPlayerModel_--c.hpp"
// Including type: PlatformNetworkPlayerModel
#include "GlobalNamespace/PlatformNetworkPlayerModel.hpp"
// Including type: LocalNetworkPlayerModel
#include "GlobalNamespace/LocalNetworkPlayerModel.hpp"
// Including type: IPlatformUserModel
#include "GlobalNamespace/IPlatformUserModel.hpp"
// Including type: INetworkConfig
#include "GlobalNamespace/INetworkConfig.hpp"
// Including type: IAuthenticationTokenProvider
#include "GlobalNamespace/IAuthenticationTokenProvider.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: INetworkPlayerModel
#include "GlobalNamespace/INetworkPlayerModel.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: PartyMessageHandler
#include "GlobalNamespace/PartyMessageHandler.hpp"
// Including type: MasterServerConnectionManager
#include "GlobalNamespace/MasterServerConnectionManager.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: DisconnectedReason
#include "GlobalNamespace/DisconnectedReason.hpp"
// Including type: ConnectionFailedReason
#include "GlobalNamespace/ConnectionFailedReason.hpp"
// Including type: INetworkPlayerModelPartyConfig`1
#include "GlobalNamespace/INetworkPlayerModelPartyConfig_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kServerRefreshFrequency
float GlobalNamespace::UnifiedNetworkPlayerModel::_get_kServerRefreshFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_get_kServerRefreshFrequency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "UnifiedNetworkPlayerModel", "kServerRefreshFrequency"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kServerRefreshFrequency
void GlobalNamespace::UnifiedNetworkPlayerModel::_set_kServerRefreshFrequency(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_set_kServerRefreshFrequency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UnifiedNetworkPlayerModel", "kServerRefreshFrequency", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kServerTimeoutPeriod
float GlobalNamespace::UnifiedNetworkPlayerModel::_get_kServerTimeoutPeriod() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_get_kServerTimeoutPeriod");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "UnifiedNetworkPlayerModel", "kServerTimeoutPeriod"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kServerTimeoutPeriod
void GlobalNamespace::UnifiedNetworkPlayerModel::_set_kServerTimeoutPeriod(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_set_kServerTimeoutPeriod");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "UnifiedNetworkPlayerModel", "kServerTimeoutPeriod", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly PlatformNetworkPlayerModel _platformNetworkPlayerModel
GlobalNamespace::PlatformNetworkPlayerModel* GlobalNamespace::UnifiedNetworkPlayerModel::_get__platformNetworkPlayerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_get__platformNetworkPlayerModel");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PlatformNetworkPlayerModel*>(___internal__instance, "_platformNetworkPlayerModel"));
}
// Autogenerated instance field setter
// Set instance field: private readonly PlatformNetworkPlayerModel _platformNetworkPlayerModel
void GlobalNamespace::UnifiedNetworkPlayerModel::_set__platformNetworkPlayerModel(GlobalNamespace::PlatformNetworkPlayerModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_set__platformNetworkPlayerModel");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_platformNetworkPlayerModel", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly LocalNetworkPlayerModel _localNetworkPlayerModel
GlobalNamespace::LocalNetworkPlayerModel* GlobalNamespace::UnifiedNetworkPlayerModel::_get__localNetworkPlayerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_get__localNetworkPlayerModel");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LocalNetworkPlayerModel*>(___internal__instance, "_localNetworkPlayerModel"));
}
// Autogenerated instance field setter
// Set instance field: private readonly LocalNetworkPlayerModel _localNetworkPlayerModel
void GlobalNamespace::UnifiedNetworkPlayerModel::_set__localNetworkPlayerModel(GlobalNamespace::LocalNetworkPlayerModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_set__localNetworkPlayerModel");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_localNetworkPlayerModel", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly IPlatformUserModel _platformUserModel
GlobalNamespace::IPlatformUserModel* GlobalNamespace::UnifiedNetworkPlayerModel::_get__platformUserModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_get__platformUserModel");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::IPlatformUserModel*>(___internal__instance, "_platformUserModel"));
}
// Autogenerated instance field setter
// Set instance field: private readonly IPlatformUserModel _platformUserModel
void GlobalNamespace::UnifiedNetworkPlayerModel::_set__platformUserModel(GlobalNamespace::IPlatformUserModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_set__platformUserModel");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_platformUserModel", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly INetworkConfig _networkConfig
GlobalNamespace::INetworkConfig* GlobalNamespace::UnifiedNetworkPlayerModel::_get__networkConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_get__networkConfig");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::INetworkConfig*>(___internal__instance, "_networkConfig"));
}
// Autogenerated instance field setter
// Set instance field: private readonly INetworkConfig _networkConfig
void GlobalNamespace::UnifiedNetworkPlayerModel::_set__networkConfig(GlobalNamespace::INetworkConfig* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_set__networkConfig");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_networkConfig", value));
}
// Autogenerated instance field getter
// Get instance field: private IAuthenticationTokenProvider _authenticationTokenProvider
GlobalNamespace::IAuthenticationTokenProvider* GlobalNamespace::UnifiedNetworkPlayerModel::_get__authenticationTokenProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_get__authenticationTokenProvider");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::IAuthenticationTokenProvider*>(___internal__instance, "_authenticationTokenProvider"));
}
// Autogenerated instance field setter
// Set instance field: private IAuthenticationTokenProvider _authenticationTokenProvider
void GlobalNamespace::UnifiedNetworkPlayerModel::_set__authenticationTokenProvider(GlobalNamespace::IAuthenticationTokenProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_set__authenticationTokenProvider");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_authenticationTokenProvider", value));
}
// Autogenerated instance field getter
// Get instance field: private UnifiedNetworkPlayerModel/UnifiedNetworkPlayer _localPlayer
GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer* GlobalNamespace::UnifiedNetworkPlayerModel::_get__localPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_get__localPlayer");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer*>(___internal__instance, "_localPlayer"));
}
// Autogenerated instance field setter
// Set instance field: private UnifiedNetworkPlayerModel/UnifiedNetworkPlayer _localPlayer
void GlobalNamespace::UnifiedNetworkPlayerModel::_set__localPlayer(GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_set__localPlayer");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_localPlayer", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _networkingFailed
bool GlobalNamespace::UnifiedNetworkPlayerModel::_get__networkingFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_get__networkingFailed");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_networkingFailed"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _networkingFailed
void GlobalNamespace::UnifiedNetworkPlayerModel::_set__networkingFailed(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_set__networkingFailed");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_networkingFailed", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _masterServerUnreachable
bool GlobalNamespace::UnifiedNetworkPlayerModel::_get__masterServerUnreachable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_get__masterServerUnreachable");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_masterServerUnreachable"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _masterServerUnreachable
void GlobalNamespace::UnifiedNetworkPlayerModel::_set__masterServerUnreachable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_set__masterServerUnreachable");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_masterServerUnreachable", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _currentPlayerCount
int GlobalNamespace::UnifiedNetworkPlayerModel::_get__currentPlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_get__currentPlayerCount");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "_currentPlayerCount"));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _currentPlayerCount
void GlobalNamespace::UnifiedNetworkPlayerModel::_set__currentPlayerCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_set__currentPlayerCount");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_currentPlayerCount", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Int32> partySizeChangedEvent
System::Action_1<int>* GlobalNamespace::UnifiedNetworkPlayerModel::_get_partySizeChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_get_partySizeChangedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<int>*>(___internal__instance, "partySizeChangedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<System.Int32> partySizeChangedEvent
void GlobalNamespace::UnifiedNetworkPlayerModel::_set_partySizeChangedEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_set_partySizeChangedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "partySizeChangedEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action partyRefreshingEvent
System::Action* GlobalNamespace::UnifiedNetworkPlayerModel::_get_partyRefreshingEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_get_partyRefreshingEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action*>(___internal__instance, "partyRefreshingEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action partyRefreshingEvent
void GlobalNamespace::UnifiedNetworkPlayerModel::_set_partyRefreshingEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_set_partyRefreshingEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "partyRefreshingEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<INetworkPlayerModel> partyChangedEvent
System::Action_1<GlobalNamespace::INetworkPlayerModel*>* GlobalNamespace::UnifiedNetworkPlayerModel::_get_partyChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_get_partyChangedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<GlobalNamespace::INetworkPlayerModel*>*>(___internal__instance, "partyChangedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<INetworkPlayerModel> partyChangedEvent
void GlobalNamespace::UnifiedNetworkPlayerModel::_set_partyChangedEvent(System::Action_1<GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_set_partyChangedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "partyChangedEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<INetworkPlayer> joinRequestedEvent
System::Action_1<GlobalNamespace::INetworkPlayer*>* GlobalNamespace::UnifiedNetworkPlayerModel::_get_joinRequestedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_get_joinRequestedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<GlobalNamespace::INetworkPlayer*>*>(___internal__instance, "joinRequestedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<INetworkPlayer> joinRequestedEvent
void GlobalNamespace::UnifiedNetworkPlayerModel::_set_joinRequestedEvent(System::Action_1<GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_set_joinRequestedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "joinRequestedEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<INetworkPlayer> inviteRequestedEvent
System::Action_1<GlobalNamespace::INetworkPlayer*>* GlobalNamespace::UnifiedNetworkPlayerModel::_get_inviteRequestedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_get_inviteRequestedEvent");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<GlobalNamespace::INetworkPlayer*>*>(___internal__instance, "inviteRequestedEvent"));
}
// Autogenerated instance field setter
// Set instance field: private System.Action`1<INetworkPlayer> inviteRequestedEvent
void GlobalNamespace::UnifiedNetworkPlayerModel::_set_inviteRequestedEvent(System::Action_1<GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_set_inviteRequestedEvent");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "inviteRequestedEvent", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnifiedNetworkPlayerModel/UnifiedNetworkPlayer> _partyPlayers
System::Collections::Generic::List_1<GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer*>* GlobalNamespace::UnifiedNetworkPlayerModel::_get__partyPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_get__partyPlayers");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer*>*>(___internal__instance, "_partyPlayers"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Collections.Generic.List`1<UnifiedNetworkPlayerModel/UnifiedNetworkPlayer> _partyPlayers
void GlobalNamespace::UnifiedNetworkPlayerModel::_set__partyPlayers(System::Collections::Generic::List_1<GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_set__partyPlayers");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_partyPlayers", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<UnifiedNetworkPlayerModel/UnifiedNetworkServer> _publicServers
System::Collections::Generic::List_1<GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer*>* GlobalNamespace::UnifiedNetworkPlayerModel::_get__publicServers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_get__publicServers");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::List_1<GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer*>*>(___internal__instance, "_publicServers"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.Collections.Generic.List`1<UnifiedNetworkPlayerModel/UnifiedNetworkServer> _publicServers
void GlobalNamespace::UnifiedNetworkPlayerModel::_set__publicServers(System::Collections::Generic::List_1<GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_set__publicServers");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_publicServers", value));
}
// Autogenerated instance field getter
// Get instance field: private PartyMessageHandler _partyMessageHandler
GlobalNamespace::PartyMessageHandler* GlobalNamespace::UnifiedNetworkPlayerModel::_get__partyMessageHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_get__partyMessageHandler");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PartyMessageHandler*>(___internal__instance, "_partyMessageHandler"));
}
// Autogenerated instance field setter
// Set instance field: private PartyMessageHandler _partyMessageHandler
void GlobalNamespace::UnifiedNetworkPlayerModel::_set__partyMessageHandler(GlobalNamespace::PartyMessageHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_set__partyMessageHandler");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_partyMessageHandler", value));
}
// Autogenerated instance field getter
// Get instance field: private PartyMessageHandler _friendPartyMessageHandler
GlobalNamespace::PartyMessageHandler* GlobalNamespace::UnifiedNetworkPlayerModel::_get__friendPartyMessageHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_get__friendPartyMessageHandler");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PartyMessageHandler*>(___internal__instance, "_friendPartyMessageHandler"));
}
// Autogenerated instance field setter
// Set instance field: private PartyMessageHandler _friendPartyMessageHandler
void GlobalNamespace::UnifiedNetworkPlayerModel::_set__friendPartyMessageHandler(GlobalNamespace::PartyMessageHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_set__friendPartyMessageHandler");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_friendPartyMessageHandler", value));
}
// Autogenerated instance field getter
// Get instance field: private PartyMessageHandler _localNetworkPartyMessageHandler
GlobalNamespace::PartyMessageHandler* GlobalNamespace::UnifiedNetworkPlayerModel::_get__localNetworkPartyMessageHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_get__localNetworkPartyMessageHandler");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PartyMessageHandler*>(___internal__instance, "_localNetworkPartyMessageHandler"));
}
// Autogenerated instance field setter
// Set instance field: private PartyMessageHandler _localNetworkPartyMessageHandler
void GlobalNamespace::UnifiedNetworkPlayerModel::_set__localNetworkPartyMessageHandler(GlobalNamespace::PartyMessageHandler* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_set__localNetworkPartyMessageHandler");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_localNetworkPartyMessageHandler", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastServerRefresh
float GlobalNamespace::UnifiedNetworkPlayerModel::_get__lastServerRefresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_get__lastServerRefresh");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "_lastServerRefresh"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single _lastServerRefresh
void GlobalNamespace::UnifiedNetworkPlayerModel::_set__lastServerRefresh(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_set__lastServerRefresh");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_lastServerRefresh", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isRefreshing
bool GlobalNamespace::UnifiedNetworkPlayerModel::_get__isRefreshing() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_get__isRefreshing");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_isRefreshing"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _isRefreshing
void GlobalNamespace::UnifiedNetworkPlayerModel::_set__isRefreshing(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_set__isRefreshing");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_isRefreshing", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _filterChanged
bool GlobalNamespace::UnifiedNetworkPlayerModel::_get__filterChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_get__filterChanged");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_filterChanged"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _filterChanged
void GlobalNamespace::UnifiedNetworkPlayerModel::_set__filterChanged(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_set__filterChanged");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_filterChanged", value));
}
// Autogenerated instance field getter
// Get instance field: private UserServerFilter _serverFilter
GlobalNamespace::UserServerFilter GlobalNamespace::UnifiedNetworkPlayerModel::_get__serverFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_get__serverFilter");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::UserServerFilter>(___internal__instance, "_serverFilter"));
}
// Autogenerated instance field setter
// Set instance field: private UserServerFilter _serverFilter
void GlobalNamespace::UnifiedNetworkPlayerModel::_set__serverFilter(GlobalNamespace::UserServerFilter value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::_set__serverFilter");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_serverFilter", value));
}
// Autogenerated method: UnifiedNetworkPlayerModel.get_hasNetworkingFailed
bool GlobalNamespace::UnifiedNetworkPlayerModel::get_hasNetworkingFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::get_hasNetworkingFailed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasNetworkingFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.get_isMasterServerReachable
bool GlobalNamespace::UnifiedNetworkPlayerModel::get_isMasterServerReachable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::get_isMasterServerReachable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isMasterServerReachable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.get_masterServerConnectionManager
GlobalNamespace::MasterServerConnectionManager* GlobalNamespace::UnifiedNetworkPlayerModel::get_masterServerConnectionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::get_masterServerConnectionManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_masterServerConnectionManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MasterServerConnectionManager*, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.get_endPoint
System::Net::IPEndPoint* GlobalNamespace::UnifiedNetworkPlayerModel::get_endPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::get_endPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_endPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::IPEndPoint*, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.get_userId
::Il2CppString* GlobalNamespace::UnifiedNetworkPlayerModel::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::get_userId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.get_userName
::Il2CppString* GlobalNamespace::UnifiedNetworkPlayerModel::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.get_secret
::Il2CppString* GlobalNamespace::UnifiedNetworkPlayerModel::get_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::get_secret");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_secret", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.get_code
::Il2CppString* GlobalNamespace::UnifiedNetworkPlayerModel::get_code() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::get_code");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_code", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.get_serverName
::Il2CppString* GlobalNamespace::UnifiedNetworkPlayerModel::get_serverName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::get_serverName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_serverName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.get_password
::Il2CppString* GlobalNamespace::UnifiedNetworkPlayerModel::get_password() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::get_password");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_password", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.get_serverUserId
::Il2CppString* GlobalNamespace::UnifiedNetworkPlayerModel::get_serverUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::get_serverUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_serverUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.get_serverUserName
::Il2CppString* GlobalNamespace::UnifiedNetworkPlayerModel::get_serverUserName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::get_serverUserName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_serverUserName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.get_managerId
::Il2CppString* GlobalNamespace::UnifiedNetworkPlayerModel::get_managerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::get_managerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_managerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.get_serverFilter
GlobalNamespace::UserServerFilter GlobalNamespace::UnifiedNetworkPlayerModel::get_serverFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::get_serverFilter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_serverFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::UserServerFilter, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.get_publicServers
System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>* GlobalNamespace::UnifiedNetworkPlayerModel::get_publicServers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::get_publicServers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_publicServers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.get_friends
System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>* GlobalNamespace::UnifiedNetworkPlayerModel::get_friends() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::get_friends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_friends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.get_localNetworkPlayers
System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>* GlobalNamespace::UnifiedNetworkPlayerModel::get_localNetworkPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::get_localNetworkPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localNetworkPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.get_enableFriends
bool GlobalNamespace::UnifiedNetworkPlayerModel::get_enableFriends() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::get_enableFriends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableFriends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.set_enableFriends
void GlobalNamespace::UnifiedNetworkPlayerModel::set_enableFriends(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::set_enableFriends");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableFriends", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnifiedNetworkPlayerModel.get_enableLocalNetwork
bool GlobalNamespace::UnifiedNetworkPlayerModel::get_enableLocalNetwork() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::get_enableLocalNetwork");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enableLocalNetwork", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.set_enableLocalNetwork
void GlobalNamespace::UnifiedNetworkPlayerModel::set_enableLocalNetwork(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::set_enableLocalNetwork");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableLocalNetwork", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnifiedNetworkPlayerModel.add_partyRefreshingEvent
void GlobalNamespace::UnifiedNetworkPlayerModel::add_partyRefreshingEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::add_partyRefreshingEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_partyRefreshingEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnifiedNetworkPlayerModel.remove_partyRefreshingEvent
void GlobalNamespace::UnifiedNetworkPlayerModel::remove_partyRefreshingEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::remove_partyRefreshingEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_partyRefreshingEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnifiedNetworkPlayerModel.SetServerFilter
void GlobalNamespace::UnifiedNetworkPlayerModel::SetServerFilter(GlobalNamespace::UserServerFilter filter) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::SetServerFilter");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetServerFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filter)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, filter);
}
// Autogenerated method: UnifiedNetworkPlayerModel.Refresh
void GlobalNamespace::UnifiedNetworkPlayerModel::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.RefreshParties
void GlobalNamespace::UnifiedNetworkPlayerModel::RefreshParties() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::RefreshParties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshParties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.HandlePlayersChanged
void GlobalNamespace::UnifiedNetworkPlayerModel::HandlePlayersChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::HandlePlayersChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlayersChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.HandleInviteRequested
void GlobalNamespace::UnifiedNetworkPlayerModel::HandleInviteRequested(GlobalNamespace::INetworkPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::HandleInviteRequested");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInviteRequested", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: UnifiedNetworkPlayerModel.HandleJoinRequested
void GlobalNamespace::UnifiedNetworkPlayerModel::HandleJoinRequested(GlobalNamespace::INetworkPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::HandleJoinRequested");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleJoinRequested", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: UnifiedNetworkPlayerModel.HandlePartyChanged
void GlobalNamespace::UnifiedNetworkPlayerModel::HandlePartyChanged(GlobalNamespace::INetworkPlayerModel* playerModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::HandlePartyChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePartyChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerModel)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playerModel);
}
// Autogenerated method: UnifiedNetworkPlayerModel.HandleLocalPlayerConnnected
void GlobalNamespace::UnifiedNetworkPlayerModel::HandleLocalPlayerConnnected(GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::HandleLocalPlayerConnnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLocalPlayerConnnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: UnifiedNetworkPlayerModel.HandleFriendConnected
void GlobalNamespace::UnifiedNetworkPlayerModel::HandleFriendConnected(GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::HandleFriendConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleFriendConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: UnifiedNetworkPlayerModel.HandleLocalPlayerConnectToMasterServer
void GlobalNamespace::UnifiedNetworkPlayerModel::HandleLocalPlayerConnectToMasterServer(System::Net::IPEndPoint* endPoint, ::Il2CppString* serverName, ::Il2CppString* password, ::Il2CppString* secret, ::Il2CppString* serverUserId, ::Il2CppString* serverUserName, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::HandleLocalPlayerConnectToMasterServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLocalPlayerConnectToMasterServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(serverName), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(serverUserId), ::il2cpp_utils::ExtractType(serverUserName), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, endPoint, serverName, password, secret, serverUserId, serverUserName, selectionMask, configuration);
}
// Autogenerated method: UnifiedNetworkPlayerModel.HandleFriendConnectToMasterServer
void GlobalNamespace::UnifiedNetworkPlayerModel::HandleFriendConnectToMasterServer(System::Net::IPEndPoint* endPoint, ::Il2CppString* serverName, ::Il2CppString* password, ::Il2CppString* secret, ::Il2CppString* serverUserId, ::Il2CppString* serverUserName, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::HandleFriendConnectToMasterServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleFriendConnectToMasterServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(endPoint), ::il2cpp_utils::ExtractType(serverName), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(secret), ::il2cpp_utils::ExtractType(serverUserId), ::il2cpp_utils::ExtractType(serverUserName), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, endPoint, serverName, password, secret, serverUserId, serverUserName, selectionMask, configuration);
}
// Autogenerated method: UnifiedNetworkPlayerModel.HandleServerStatusChanged
void GlobalNamespace::UnifiedNetworkPlayerModel::HandleServerStatusChanged(::Il2CppString* serverName, ::Il2CppString* password, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::HandleServerStatusChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleServerStatusChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverName), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serverName, password, selectionMask, configuration);
}
// Autogenerated method: UnifiedNetworkPlayerModel.HandleConnectedPlayerManagerCreated
void GlobalNamespace::UnifiedNetworkPlayerModel::HandleConnectedPlayerManagerCreated(GlobalNamespace::INetworkPlayerModel* networkPlayerModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::HandleConnectedPlayerManagerCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleConnectedPlayerManagerCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(networkPlayerModel)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, networkPlayerModel);
}
// Autogenerated method: UnifiedNetworkPlayerModel.HandleConnectedPlayerManagerDestroyed
void GlobalNamespace::UnifiedNetworkPlayerModel::HandleConnectedPlayerManagerDestroyed(GlobalNamespace::INetworkPlayerModel* networkPlayerModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::HandleConnectedPlayerManagerDestroyed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleConnectedPlayerManagerDestroyed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(networkPlayerModel)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, networkPlayerModel);
}
// Autogenerated method: UnifiedNetworkPlayerModel.ResetMasterServerReachability
void GlobalNamespace::UnifiedNetworkPlayerModel::ResetMasterServerReachability() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::ResetMasterServerReachability");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetMasterServerReachability", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.GetPlayer
GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer* GlobalNamespace::UnifiedNetworkPlayerModel::GetPlayer(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::GetPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer*, false>(this, ___internal__method, userId);
}
// Autogenerated method: UnifiedNetworkPlayerModel.GetServer
GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer* GlobalNamespace::UnifiedNetworkPlayerModel::GetServer(::Il2CppString* code) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::GetServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer*, false>(this, ___internal__method, code);
}
// Autogenerated method: UnifiedNetworkPlayerModel.get_localPlayerIsPartyOwner
bool GlobalNamespace::UnifiedNetworkPlayerModel::get_localPlayerIsPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::get_localPlayerIsPartyOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPlayerIsPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.get_configuration
GlobalNamespace::GameplayServerConfiguration GlobalNamespace::UnifiedNetworkPlayerModel::get_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::get_configuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayServerConfiguration, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.get_selectionMask
GlobalNamespace::BeatmapLevelSelectionMask GlobalNamespace::UnifiedNetworkPlayerModel::get_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::get_selectionMask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapLevelSelectionMask, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.get_currentPartySize
int GlobalNamespace::UnifiedNetworkPlayerModel::get_currentPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::get_currentPartySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.add_partySizeChangedEvent
void GlobalNamespace::UnifiedNetworkPlayerModel::add_partySizeChangedEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::add_partySizeChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_partySizeChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnifiedNetworkPlayerModel.remove_partySizeChangedEvent
void GlobalNamespace::UnifiedNetworkPlayerModel::remove_partySizeChangedEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::remove_partySizeChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_partySizeChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnifiedNetworkPlayerModel.add_partyChangedEvent
void GlobalNamespace::UnifiedNetworkPlayerModel::add_partyChangedEvent(System::Action_1<GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::add_partyChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_partyChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnifiedNetworkPlayerModel.remove_partyChangedEvent
void GlobalNamespace::UnifiedNetworkPlayerModel::remove_partyChangedEvent(System::Action_1<GlobalNamespace::INetworkPlayerModel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::remove_partyChangedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_partyChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnifiedNetworkPlayerModel.add_joinRequestedEvent
void GlobalNamespace::UnifiedNetworkPlayerModel::add_joinRequestedEvent(System::Action_1<GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::add_joinRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_joinRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnifiedNetworkPlayerModel.remove_joinRequestedEvent
void GlobalNamespace::UnifiedNetworkPlayerModel::remove_joinRequestedEvent(System::Action_1<GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::remove_joinRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_joinRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnifiedNetworkPlayerModel.add_inviteRequestedEvent
void GlobalNamespace::UnifiedNetworkPlayerModel::add_inviteRequestedEvent(System::Action_1<GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::add_inviteRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_inviteRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnifiedNetworkPlayerModel.remove_inviteRequestedEvent
void GlobalNamespace::UnifiedNetworkPlayerModel::remove_inviteRequestedEvent(System::Action_1<GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::remove_inviteRequestedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_inviteRequestedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnifiedNetworkPlayerModel.Start
void GlobalNamespace::UnifiedNetworkPlayerModel::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::Start");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.Update
void GlobalNamespace::UnifiedNetworkPlayerModel::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::Update");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.GetPartyPlayers
System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>* GlobalNamespace::UnifiedNetworkPlayerModel::GetPartyPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::GetPartyPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPartyPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.GetOtherPlayers
System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>* GlobalNamespace::UnifiedNetworkPlayerModel::GetOtherPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::GetOtherPlayers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOtherPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.Disconnected
void GlobalNamespace::UnifiedNetworkPlayerModel::Disconnected(GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::Disconnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disconnectedReason)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disconnectedReason);
}
// Autogenerated method: UnifiedNetworkPlayerModel.ConnectionFailed
void GlobalNamespace::UnifiedNetworkPlayerModel::ConnectionFailed(GlobalNamespace::ConnectionFailedReason reason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::ConnectionFailed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectionFailed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reason)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reason);
}
// Autogenerated method: UnifiedNetworkPlayerModel.ConnectedPlayerManagerChanged
void GlobalNamespace::UnifiedNetworkPlayerModel::ConnectedPlayerManagerChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::ConnectedPlayerManagerChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectedPlayerManagerChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.DestroyPartyConnection
void GlobalNamespace::UnifiedNetworkPlayerModel::DestroyPartyConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::DestroyPartyConnection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DestroyPartyConnection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel.PlayerConnected
void GlobalNamespace::UnifiedNetworkPlayerModel::PlayerConnected(GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::PlayerConnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: UnifiedNetworkPlayerModel.PlayerDisconnected
void GlobalNamespace::UnifiedNetworkPlayerModel::PlayerDisconnected(GlobalNamespace::IConnectedPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::PlayerDisconnected");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: UnifiedNetworkPlayerModel.PlayerStateChanged
void GlobalNamespace::UnifiedNetworkPlayerModel::PlayerStateChanged(GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::PlayerStateChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, connectedPlayer);
}
// Autogenerated method: UnifiedNetworkPlayerModel.PlayerOrderChanged
void GlobalNamespace::UnifiedNetworkPlayerModel::PlayerOrderChanged(GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::PlayerOrderChanged");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayerOrderChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, connectedPlayer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnifiedNetworkPlayerModel/UnifiedNetworkPlayer
#include "GlobalNamespace/UnifiedNetworkPlayerModel_UnifiedNetworkPlayer.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: BeatmapLevelSelectionMask
#include "GlobalNamespace/BeatmapLevelSelectionMask.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly UnifiedNetworkPlayerModel _playerModel
GlobalNamespace::UnifiedNetworkPlayerModel* GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::_get__playerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::_get__playerModel");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::UnifiedNetworkPlayerModel*>(___internal__instance, "_playerModel"));
}
// Autogenerated instance field setter
// Set instance field: private readonly UnifiedNetworkPlayerModel _playerModel
void GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::_set__playerModel(GlobalNamespace::UnifiedNetworkPlayerModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::_set__playerModel");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_playerModel", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly IConnectedPlayer _connectedPlayer
GlobalNamespace::IConnectedPlayer* GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::_get__connectedPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::_get__connectedPlayer");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::IConnectedPlayer*>(___internal__instance, "_connectedPlayer"));
}
// Autogenerated instance field setter
// Set instance field: private readonly IConnectedPlayer _connectedPlayer
void GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::_set__connectedPlayer(GlobalNamespace::IConnectedPlayer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::_set__connectedPlayer");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_connectedPlayer", value));
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkPlayer.get_userId
::Il2CppString* GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::get_userId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkPlayer.get_userName
::Il2CppString* GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkPlayer.get_isMe
bool GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::get_isMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::get_isMe");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isMe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkPlayer.get_sortIndex
int GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::get_sortIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::get_sortIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sortIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkPlayer.get_currentPartySize
int GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::get_currentPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::get_currentPartySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkPlayer.get_selectionMask
GlobalNamespace::BeatmapLevelSelectionMask GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::get_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::get_selectionMask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapLevelSelectionMask, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkPlayer.get_configuration
GlobalNamespace::GameplayServerConfiguration GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::get_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::get_configuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayServerConfiguration, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkPlayer.get_isMyPartyOwner
bool GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::get_isMyPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::get_isMyPartyOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isMyPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkPlayer.get_connectedPlayer
GlobalNamespace::IConnectedPlayer* GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::get_connectedPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::get_connectedPlayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkPlayer.get_canJoin
bool GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::get_canJoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::get_canJoin");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canJoin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkPlayer.get_requiresPassword
bool GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::get_requiresPassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::get_requiresPassword");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_requiresPassword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkPlayer.get_isWaitingOnJoin
bool GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::get_isWaitingOnJoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::get_isWaitingOnJoin");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isWaitingOnJoin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkPlayer.get_canInvite
bool GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::get_canInvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::get_canInvite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canInvite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkPlayer.get_isWaitingOnInvite
bool GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::get_isWaitingOnInvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::get_isWaitingOnInvite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isWaitingOnInvite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkPlayer.get_canKick
bool GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::get_canKick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::get_canKick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canKick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkPlayer.get_canLeave
bool GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::get_canLeave() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::get_canLeave");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canLeave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkPlayer.get_canBlock
bool GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::get_canBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::get_canBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkPlayer.get_canUnblock
bool GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::get_canUnblock() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::get_canUnblock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canUnblock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkPlayer.Join
void GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::Join() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::Join");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkPlayer.Join
void GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::Join(::Il2CppString* password) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::Join");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(password)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, password);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkPlayer.Invite
void GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::Invite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::Invite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkPlayer.Kick
void GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::Kick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::Kick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Kick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkPlayer.Leave
void GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::Leave() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::Leave");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Leave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkPlayer.Block
void GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::Block() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::Block");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkPlayer.Unblock
void GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::Unblock() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::Unblock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unblock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkPlayer.SendJoinResponse
void GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::SendJoinResponse(bool accept) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::SendJoinResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendJoinResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(accept)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, accept);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkPlayer.SendInviteResponse
void GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::SendInviteResponse(bool accept) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkPlayer::SendInviteResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendInviteResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(accept)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, accept);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnifiedNetworkPlayerModel/CreateUserServerPartyConfig
#include "GlobalNamespace/UnifiedNetworkPlayerModel_CreateUserServerPartyConfig.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String serverName
::Il2CppString* GlobalNamespace::UnifiedNetworkPlayerModel::CreateUserServerPartyConfig::_get_serverName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::CreateUserServerPartyConfig::_get_serverName");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "serverName"));
}
// Autogenerated instance field setter
// Set instance field: public System.String serverName
void GlobalNamespace::UnifiedNetworkPlayerModel::CreateUserServerPartyConfig::_set_serverName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::CreateUserServerPartyConfig::_set_serverName");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "serverName", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String password
::Il2CppString* GlobalNamespace::UnifiedNetworkPlayerModel::CreateUserServerPartyConfig::_get_password() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::CreateUserServerPartyConfig::_get_password");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "password"));
}
// Autogenerated instance field setter
// Set instance field: public System.String password
void GlobalNamespace::UnifiedNetworkPlayerModel::CreateUserServerPartyConfig::_set_password(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::CreateUserServerPartyConfig::_set_password");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "password", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String secret
::Il2CppString* GlobalNamespace::UnifiedNetworkPlayerModel::CreateUserServerPartyConfig::_get_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::CreateUserServerPartyConfig::_get_secret");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "secret"));
}
// Autogenerated instance field setter
// Set instance field: public System.String secret
void GlobalNamespace::UnifiedNetworkPlayerModel::CreateUserServerPartyConfig::_set_secret(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::CreateUserServerPartyConfig::_set_secret");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "secret", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnifiedNetworkPlayerModel/JoinUserServerPartyConfig
#include "GlobalNamespace/UnifiedNetworkPlayerModel_JoinUserServerPartyConfig.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String code
::Il2CppString* GlobalNamespace::UnifiedNetworkPlayerModel::JoinUserServerPartyConfig::_get_code() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::JoinUserServerPartyConfig::_get_code");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "code"));
}
// Autogenerated instance field setter
// Set instance field: public System.String code
void GlobalNamespace::UnifiedNetworkPlayerModel::JoinUserServerPartyConfig::_set_code(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::JoinUserServerPartyConfig::_set_code");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "code", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String password
::Il2CppString* GlobalNamespace::UnifiedNetworkPlayerModel::JoinUserServerPartyConfig::_get_password() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::JoinUserServerPartyConfig::_get_password");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "password"));
}
// Autogenerated instance field setter
// Set instance field: public System.String password
void GlobalNamespace::UnifiedNetworkPlayerModel::JoinUserServerPartyConfig::_set_password(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::JoinUserServerPartyConfig::_set_password");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "password", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String secret
::Il2CppString* GlobalNamespace::UnifiedNetworkPlayerModel::JoinUserServerPartyConfig::_get_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::JoinUserServerPartyConfig::_get_secret");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "secret"));
}
// Autogenerated instance field setter
// Set instance field: public System.String secret
void GlobalNamespace::UnifiedNetworkPlayerModel::JoinUserServerPartyConfig::_set_secret(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::JoinUserServerPartyConfig::_set_secret");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "secret", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnifiedNetworkPlayerModel/JoinMatchmakingPartyConfig
#include "GlobalNamespace/UnifiedNetworkPlayerModel_JoinMatchmakingPartyConfig.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String secret
::Il2CppString* GlobalNamespace::UnifiedNetworkPlayerModel::JoinMatchmakingPartyConfig::_get_secret() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::JoinMatchmakingPartyConfig::_get_secret");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "secret"));
}
// Autogenerated instance field setter
// Set instance field: public System.String secret
void GlobalNamespace::UnifiedNetworkPlayerModel::JoinMatchmakingPartyConfig::_set_secret(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::JoinMatchmakingPartyConfig::_set_secret");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "secret", value));
}
// Autogenerated instance field getter
// Get instance field: public System.String code
::Il2CppString* GlobalNamespace::UnifiedNetworkPlayerModel::JoinMatchmakingPartyConfig::_get_code() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::JoinMatchmakingPartyConfig::_get_code");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "code"));
}
// Autogenerated instance field setter
// Set instance field: public System.String code
void GlobalNamespace::UnifiedNetworkPlayerModel::JoinMatchmakingPartyConfig::_set_code(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::JoinMatchmakingPartyConfig::_set_code");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "code", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnifiedNetworkPlayerModel/UnifiedNetworkServer
#include "GlobalNamespace/UnifiedNetworkPlayerModel_UnifiedNetworkServer.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly UnifiedNetworkPlayerModel _playerModel
GlobalNamespace::UnifiedNetworkPlayerModel* GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::_get__playerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::_get__playerModel");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::UnifiedNetworkPlayerModel*>(___internal__instance, "_playerModel"));
}
// Autogenerated instance field setter
// Set instance field: private readonly UnifiedNetworkPlayerModel _playerModel
void GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::_set__playerModel(GlobalNamespace::UnifiedNetworkPlayerModel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::_set__playerModel");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_playerModel", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.String _code
::Il2CppString* GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::_get__code() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::_get__code");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "_code"));
}
// Autogenerated instance field setter
// Set instance field: private readonly System.String _code
void GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::_set__code(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::_set__code");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_code", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String _serverName
::Il2CppString* GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::_get__serverName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::_get__serverName");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>(___internal__instance, "_serverName"));
}
// Autogenerated instance field setter
// Set instance field: private System.String _serverName
void GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::_set__serverName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::_set__serverName");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_serverName", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasPassword
bool GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::_get__hasPassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::_get__hasPassword");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>(___internal__instance, "_hasPassword"));
}
// Autogenerated instance field setter
// Set instance field: private System.Boolean _hasPassword
void GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::_set__hasPassword(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::_set__hasPassword");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_hasPassword", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _currentPlayerCount
int GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::_get__currentPlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::_get__currentPlayerCount");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>(___internal__instance, "_currentPlayerCount"));
}
// Autogenerated instance field setter
// Set instance field: private System.Int32 _currentPlayerCount
void GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::_set__currentPlayerCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::_set__currentPlayerCount");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_currentPlayerCount", value));
}
// Autogenerated instance field getter
// Get instance field: private BeatmapLevelSelectionMask _selectionMask
GlobalNamespace::BeatmapLevelSelectionMask GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::_get__selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::_get__selectionMask");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::BeatmapLevelSelectionMask>(___internal__instance, "_selectionMask"));
}
// Autogenerated instance field setter
// Set instance field: private BeatmapLevelSelectionMask _selectionMask
void GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::_set__selectionMask(GlobalNamespace::BeatmapLevelSelectionMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::_set__selectionMask");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_selectionMask", value));
}
// Autogenerated instance field getter
// Get instance field: private GameplayServerConfiguration _configuration
GlobalNamespace::GameplayServerConfiguration GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::_get__configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::_get__configuration");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::GameplayServerConfiguration>(___internal__instance, "_configuration"));
}
// Autogenerated instance field setter
// Set instance field: private GameplayServerConfiguration _configuration
void GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::_set__configuration(GlobalNamespace::GameplayServerConfiguration value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::_set__configuration");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_configuration", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastUpdateTime
float GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::_get__lastUpdateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::_get__lastUpdateTime");
  static auto ___internal__instance = this;
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>(___internal__instance, "_lastUpdateTime"));
}
// Autogenerated instance field setter
// Set instance field: private System.Single _lastUpdateTime
void GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::_set__lastUpdateTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::_set__lastUpdateTime");
  static auto ___internal__instance = this;
  THROW_UNLESS(il2cpp_utils::SetFieldValue(___internal__instance, "_lastUpdateTime", value));
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkServer.INetworkPlayer.get_userId
::Il2CppString* GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::INetworkPlayer_get_userId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::INetworkPlayer.get_userId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "INetworkPlayer.get_userId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkServer.get_code
::Il2CppString* GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::get_code() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::get_code");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_code", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkServer.INetworkPlayer.get_userName
::Il2CppString* GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::INetworkPlayer_get_userName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::INetworkPlayer.get_userName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "INetworkPlayer.get_userName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkServer.get_serverName
::Il2CppString* GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::get_serverName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::get_serverName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_serverName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkServer.get_isMe
bool GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::get_isMe() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::get_isMe");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isMe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkServer.get_currentPartySize
int GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::get_currentPartySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::get_currentPartySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentPartySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkServer.get_selectionMask
GlobalNamespace::BeatmapLevelSelectionMask GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::get_selectionMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::get_selectionMask");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectionMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapLevelSelectionMask, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkServer.get_configuration
GlobalNamespace::GameplayServerConfiguration GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::get_configuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::get_configuration");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_configuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayServerConfiguration, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkServer.get_connectedPlayer
GlobalNamespace::IConnectedPlayer* GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::get_connectedPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::get_connectedPlayer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_connectedPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IConnectedPlayer*, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkServer.get_isMyPartyOwner
bool GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::get_isMyPartyOwner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::get_isMyPartyOwner");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isMyPartyOwner", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkServer.get_hasTimedOut
bool GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::get_hasTimedOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::get_hasTimedOut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_hasTimedOut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkServer.get_canJoin
bool GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::get_canJoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::get_canJoin");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canJoin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkServer.get_requiresPassword
bool GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::get_requiresPassword() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::get_requiresPassword");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_requiresPassword", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkServer.get_isWaitingOnJoin
bool GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::get_isWaitingOnJoin() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::get_isWaitingOnJoin");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isWaitingOnJoin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkServer.get_canInvite
bool GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::get_canInvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::get_canInvite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canInvite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkServer.get_isWaitingOnInvite
bool GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::get_isWaitingOnInvite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::get_isWaitingOnInvite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isWaitingOnInvite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkServer.get_canKick
bool GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::get_canKick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::get_canKick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canKick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkServer.get_canLeave
bool GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::get_canLeave() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::get_canLeave");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canLeave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkServer.get_canBlock
bool GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::get_canBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::get_canBlock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkServer.get_canUnblock
bool GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::get_canUnblock() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::get_canUnblock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canUnblock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkServer.Update
void GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::Update(::Il2CppString* serverName, bool hasPassword, int currentPlayerCount, GlobalNamespace::BeatmapLevelSelectionMask selectionMask, GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverName), ::il2cpp_utils::ExtractType(hasPassword), ::il2cpp_utils::ExtractType(currentPlayerCount), ::il2cpp_utils::ExtractType(selectionMask), ::il2cpp_utils::ExtractType(configuration)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serverName, hasPassword, currentPlayerCount, selectionMask, configuration);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkServer.Join
void GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::Join() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::Join");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkServer.Join
void GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::Join(::Il2CppString* password) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::Join");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Join", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(password)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, password);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkServer.Invite
void GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::Invite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::Invite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkServer.Kick
void GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::Kick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::Kick");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Kick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkServer.Leave
void GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::Leave() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::Leave");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Leave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkServer.Block
void GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::Block() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::Block");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Block", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkServer.Unblock
void GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::Unblock() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::Unblock");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unblock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkServer.SendJoinResponse
void GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::SendJoinResponse(bool accept) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::SendJoinResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendJoinResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(accept)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, accept);
}
// Autogenerated method: UnifiedNetworkPlayerModel/UnifiedNetworkServer.SendInviteResponse
void GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::SendInviteResponse(bool accept) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::UnifiedNetworkPlayerModel::UnifiedNetworkServer::SendInviteResponse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendInviteResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(accept)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, accept);
}
