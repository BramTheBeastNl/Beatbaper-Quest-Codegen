// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: System.Reflection.PropertyAttributes
#include "System/Reflection/PropertyAttributes.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: System.Reflection.Binder
#include "System/Reflection/Binder.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.NotImplementedException
#include "System/NotImplementedException.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: Mono.RuntimePropertyHandle
#include "Mono/RuntimePropertyHandle.hpp"
// Including type: System.RuntimeTypeHandle
#include "System/RuntimeTypeHandle.hpp"
// Including type: System.Reflection.MemberTypes
#include "System/Reflection/MemberTypes.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.PropertyInfo.get_Attributes
System::Reflection::PropertyAttributes System::Reflection::PropertyInfo::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyInfo::get_Attributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::PropertyAttributes, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.PropertyInfo.get_CanRead
bool System::Reflection::PropertyInfo::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyInfo::get_CanRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.PropertyInfo.get_CanWrite
bool System::Reflection::PropertyInfo::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyInfo::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.PropertyInfo.get_PropertyType
System::Type* System::Reflection::PropertyInfo::get_PropertyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyInfo::get_PropertyType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PropertyType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.PropertyInfo.GetAccessors
::ArrayW<System::Reflection::MethodInfo*> System::Reflection::PropertyInfo::GetAccessors(bool nonPublic) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyInfo::GetAccessors");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAccessors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nonPublic)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<System::Reflection::MethodInfo*>, false>(___instance_arg, ___internal__method, nonPublic);
}
// Autogenerated method: System.Reflection.PropertyInfo.GetGetMethod
System::Reflection::MethodInfo* System::Reflection::PropertyInfo::GetGetMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyInfo::GetGetMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGetMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodInfo*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.PropertyInfo.GetGetMethod
System::Reflection::MethodInfo* System::Reflection::PropertyInfo::GetGetMethod(bool nonPublic) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyInfo::GetGetMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGetMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nonPublic)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodInfo*, false>(___instance_arg, ___internal__method, nonPublic);
}
// Autogenerated method: System.Reflection.PropertyInfo.GetIndexParameters
::ArrayW<System::Reflection::ParameterInfo*> System::Reflection::PropertyInfo::GetIndexParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyInfo::GetIndexParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIndexParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<System::Reflection::ParameterInfo*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.PropertyInfo.GetSetMethod
System::Reflection::MethodInfo* System::Reflection::PropertyInfo::GetSetMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyInfo::GetSetMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSetMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodInfo*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.PropertyInfo.GetSetMethod
System::Reflection::MethodInfo* System::Reflection::PropertyInfo::GetSetMethod(bool nonPublic) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyInfo::GetSetMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSetMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nonPublic)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodInfo*, false>(___instance_arg, ___internal__method, nonPublic);
}
// Autogenerated method: System.Reflection.PropertyInfo.GetValue
::Il2CppObject* System::Reflection::PropertyInfo::GetValue(::Il2CppObject* obj, ::ArrayW<::Il2CppObject*> index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyInfo::GetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(index)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method, obj, index);
}
// Autogenerated method: System.Reflection.PropertyInfo.GetValue
::Il2CppObject* System::Reflection::PropertyInfo::GetValue(::Il2CppObject* obj, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder* binder, ::ArrayW<::Il2CppObject*> index, System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyInfo::GetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(invokeAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(culture)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method, obj, invokeAttr, binder, index, culture);
}
// Autogenerated method: System.Reflection.PropertyInfo.SetValue
void System::Reflection::PropertyInfo::SetValue(::Il2CppObject* obj, ::Il2CppObject* value, ::ArrayW<::Il2CppObject*> index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyInfo::SetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(index)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, obj, value, index);
}
// Autogenerated method: System.Reflection.PropertyInfo.SetValue
void System::Reflection::PropertyInfo::SetValue(::Il2CppObject* obj, ::Il2CppObject* value, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder* binder, ::ArrayW<::Il2CppObject*> index, System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyInfo::SetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(invokeAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(culture)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, obj, value, invokeAttr, binder, index, culture);
}
// Autogenerated method: System.Reflection.PropertyInfo.GetOptionalCustomModifiers
::ArrayW<System::Type*> System::Reflection::PropertyInfo::GetOptionalCustomModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyInfo::GetOptionalCustomModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOptionalCustomModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<System::Type*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.PropertyInfo.GetRequiredCustomModifiers
::ArrayW<System::Type*> System::Reflection::PropertyInfo::GetRequiredCustomModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyInfo::GetRequiredCustomModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRequiredCustomModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<System::Type*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.PropertyInfo.CreateNIE
System::NotImplementedException* System::Reflection::PropertyInfo::CreateNIE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyInfo::CreateNIE");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "PropertyInfo", "CreateNIE", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::NotImplementedException*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Reflection.PropertyInfo.GetConstantValue
::Il2CppObject* System::Reflection::PropertyInfo::GetConstantValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyInfo::GetConstantValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConstantValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.PropertyInfo.GetRawConstantValue
::Il2CppObject* System::Reflection::PropertyInfo::GetRawConstantValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyInfo::GetRawConstantValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRawConstantValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.PropertyInfo.internal_from_handle_type
System::Reflection::PropertyInfo* System::Reflection::PropertyInfo::internal_from_handle_type(System::IntPtr event_handle, System::IntPtr type_handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyInfo::internal_from_handle_type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "PropertyInfo", "internal_from_handle_type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(event_handle), ::il2cpp_utils::ExtractType(type_handle)})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::PropertyInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, event_handle, type_handle);
}
// Autogenerated method: System.Reflection.PropertyInfo.GetPropertyFromHandle
System::Reflection::PropertyInfo* System::Reflection::PropertyInfo::GetPropertyFromHandle(Mono::RuntimePropertyHandle handle, System::RuntimeTypeHandle reflectedType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyInfo::GetPropertyFromHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "PropertyInfo", "GetPropertyFromHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(reflectedType)})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::PropertyInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, reflectedType);
}
// Autogenerated method: System.Reflection.PropertyInfo.get_MemberType
System::Reflection::MemberTypes System::Reflection::PropertyInfo::get_MemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyInfo::get_MemberType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MemberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MemberTypes, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.PropertyInfo.Equals
bool System::Reflection::PropertyInfo::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyInfo::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, obj);
}
// Autogenerated method: System.Reflection.PropertyInfo.GetHashCode
int System::Reflection::PropertyInfo::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyInfo::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.PropertyInfo.op_Equality
bool System::Reflection::operator ==(System::Reflection::PropertyInfo* left, System::Reflection::PropertyInfo& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyInfo::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "PropertyInfo", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated method: System.Reflection.PropertyInfo.op_Inequality
bool System::Reflection::operator !=(System::Reflection::PropertyInfo* left, System::Reflection::PropertyInfo& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::PropertyInfo::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection", "PropertyInfo", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, left, &right);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.StrongNameKeyPair
#include "System/Reflection/StrongNameKeyPair.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _publicKey
::ArrayW<uint8_t>& System::Reflection::StrongNameKeyPair::dyn__publicKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::StrongNameKeyPair::dyn__publicKey");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_publicKey"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _keyPairContainer
::Il2CppString*& System::Reflection::StrongNameKeyPair::dyn__keyPairContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::StrongNameKeyPair::dyn__keyPairContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyPairContainer"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _keyPairExported
bool& System::Reflection::StrongNameKeyPair::dyn__keyPairExported() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::StrongNameKeyPair::dyn__keyPairExported");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyPairExported"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _keyPairArray
::ArrayW<uint8_t>& System::Reflection::StrongNameKeyPair::dyn__keyPairArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::StrongNameKeyPair::dyn__keyPairArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_keyPairArray"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Reflection.StrongNameKeyPair.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Reflection::StrongNameKeyPair::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::StrongNameKeyPair::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, info, context);
}
// Autogenerated method: System.Reflection.StrongNameKeyPair.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
void System::Reflection::StrongNameKeyPair::System_Runtime_Serialization_IDeserializationCallback_OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::StrongNameKeyPair::System.Runtime.Serialization.IDeserializationCallback.OnDeserialization");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.IDeserializationCallback.OnDeserialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, sender);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.Emit.ConstructorBuilder
#include "System/Reflection/Emit/ConstructorBuilder.hpp"
// Including type: System.Reflection.MethodAttributes
#include "System/Reflection/MethodAttributes.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.RuntimeMethodHandle
#include "System/RuntimeMethodHandle.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: System.Reflection.MethodImplAttributes
#include "System/Reflection/MethodImplAttributes.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: System.Reflection.Binder
#include "System/Reflection/Binder.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.Emit.ConstructorBuilder.get_Attributes
System::Reflection::MethodAttributes System::Reflection::Emit::ConstructorBuilder::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::ConstructorBuilder::get_Attributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodAttributes, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.ConstructorBuilder.get_DeclaringType
System::Type* System::Reflection::Emit::ConstructorBuilder::get_DeclaringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::ConstructorBuilder::get_DeclaringType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeclaringType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.ConstructorBuilder.get_Name
::Il2CppString* System::Reflection::Emit::ConstructorBuilder::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::ConstructorBuilder::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.ConstructorBuilder.get_MethodHandle
System::RuntimeMethodHandle System::Reflection::Emit::ConstructorBuilder::get_MethodHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::ConstructorBuilder::get_MethodHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MethodHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::RuntimeMethodHandle, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.ConstructorBuilder.get_ReflectedType
System::Type* System::Reflection::Emit::ConstructorBuilder::get_ReflectedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::ConstructorBuilder::get_ReflectedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReflectedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.ConstructorBuilder.GetParameters
::ArrayW<System::Reflection::ParameterInfo*> System::Reflection::Emit::ConstructorBuilder::GetParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::ConstructorBuilder::GetParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<System::Reflection::ParameterInfo*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.ConstructorBuilder.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::Emit::ConstructorBuilder::GetCustomAttributes(bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::ConstructorBuilder::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inherit)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppObject*>, false>(___instance_arg, ___internal__method, inherit);
}
// Autogenerated method: System.Reflection.Emit.ConstructorBuilder.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::Emit::ConstructorBuilder::GetCustomAttributes(System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::ConstructorBuilder::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppObject*>, false>(___instance_arg, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.Emit.ConstructorBuilder.GetMethodImplementationFlags
System::Reflection::MethodImplAttributes System::Reflection::Emit::ConstructorBuilder::GetMethodImplementationFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::ConstructorBuilder::GetMethodImplementationFlags");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodImplementationFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodImplAttributes, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.ConstructorBuilder.Invoke
::Il2CppObject* System::Reflection::Emit::ConstructorBuilder::Invoke(::Il2CppObject* obj, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder* binder, ::ArrayW<::Il2CppObject*> parameters, System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::ConstructorBuilder::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(invokeAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractType(culture)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method, obj, invokeAttr, binder, parameters, culture);
}
// Autogenerated method: System.Reflection.Emit.ConstructorBuilder.Invoke
::Il2CppObject* System::Reflection::Emit::ConstructorBuilder::Invoke(System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder* binder, ::ArrayW<::Il2CppObject*> parameters, System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::ConstructorBuilder::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(invokeAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractType(culture)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method, invokeAttr, binder, parameters, culture);
}
// Autogenerated method: System.Reflection.Emit.ConstructorBuilder.IsDefined
bool System::Reflection::Emit::ConstructorBuilder::IsDefined(System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::ConstructorBuilder::IsDefined");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, attributeType, inherit);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.Emit.EnumBuilder
#include "System/Reflection/Emit/EnumBuilder.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: System.Reflection.Module
#include "System/Reflection/Module.hpp"
// Including type: System.Reflection.TypeAttributes
#include "System/Reflection/TypeAttributes.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
// Including type: System.Reflection.Binder
#include "System/Reflection/Binder.hpp"
// Including type: System.Reflection.CallingConventions
#include "System/Reflection/CallingConventions.hpp"
// Including type: System.Reflection.EventInfo
#include "System/Reflection/EventInfo.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.Emit.EnumBuilder.get_Assembly
System::Reflection::Assembly* System::Reflection::Emit::EnumBuilder::get_Assembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::EnumBuilder::get_Assembly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Assembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::Assembly*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.get_AssemblyQualifiedName
::Il2CppString* System::Reflection::Emit::EnumBuilder::get_AssemblyQualifiedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::EnumBuilder::get_AssemblyQualifiedName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AssemblyQualifiedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.get_BaseType
System::Type* System::Reflection::Emit::EnumBuilder::get_BaseType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::EnumBuilder::get_BaseType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.get_FullName
::Il2CppString* System::Reflection::Emit::EnumBuilder::get_FullName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::EnumBuilder::get_FullName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FullName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.get_GUID
System::Guid System::Reflection::Emit::EnumBuilder::get_GUID() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::EnumBuilder::get_GUID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GUID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Guid, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.get_Module
System::Reflection::Module* System::Reflection::Emit::EnumBuilder::get_Module() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::EnumBuilder::get_Module");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Module", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::Module*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.get_Name
::Il2CppString* System::Reflection::Emit::EnumBuilder::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::EnumBuilder::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.get_Namespace
::Il2CppString* System::Reflection::Emit::EnumBuilder::get_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::EnumBuilder::get_Namespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Namespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.get_UnderlyingSystemType
System::Type* System::Reflection::Emit::EnumBuilder::get_UnderlyingSystemType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::EnumBuilder::get_UnderlyingSystemType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnderlyingSystemType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.GetElementType
System::Type* System::Reflection::Emit::EnumBuilder::GetElementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::EnumBuilder::GetElementType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetElementType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.GetAttributeFlagsImpl
System::Reflection::TypeAttributes System::Reflection::Emit::EnumBuilder::GetAttributeFlagsImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::EnumBuilder::GetAttributeFlagsImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAttributeFlagsImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::TypeAttributes, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.GetConstructorImpl
System::Reflection::ConstructorInfo* System::Reflection::Emit::EnumBuilder::GetConstructorImpl(System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder* binder, System::Reflection::CallingConventions callConvention, ::ArrayW<System::Type*> types, ::ArrayW<System::Reflection::ParameterModifier> modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::EnumBuilder::GetConstructorImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConstructorImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(callConvention), ::il2cpp_utils::ExtractType(types), ::il2cpp_utils::ExtractType(modifiers)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::ConstructorInfo*, false>(___instance_arg, ___internal__method, bindingAttr, binder, callConvention, types, modifiers);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.GetConstructors
::ArrayW<System::Reflection::ConstructorInfo*> System::Reflection::Emit::EnumBuilder::GetConstructors(System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::EnumBuilder::GetConstructors");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConstructors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<System::Reflection::ConstructorInfo*>, false>(___instance_arg, ___internal__method, bindingAttr);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::Emit::EnumBuilder::GetCustomAttributes(bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::EnumBuilder::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inherit)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppObject*>, false>(___instance_arg, ___internal__method, inherit);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::Emit::EnumBuilder::GetCustomAttributes(System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::EnumBuilder::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppObject*>, false>(___instance_arg, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.GetEvent
System::Reflection::EventInfo* System::Reflection::Emit::EnumBuilder::GetEvent(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::EnumBuilder::GetEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::EventInfo*, false>(___instance_arg, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.GetField
System::Reflection::FieldInfo* System::Reflection::Emit::EnumBuilder::GetField(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::EnumBuilder::GetField");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::FieldInfo*, false>(___instance_arg, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.GetFields
::ArrayW<System::Reflection::FieldInfo*> System::Reflection::Emit::EnumBuilder::GetFields(System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::EnumBuilder::GetFields");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<System::Reflection::FieldInfo*>, false>(___instance_arg, ___internal__method, bindingAttr);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.GetInterfaces
::ArrayW<System::Type*> System::Reflection::Emit::EnumBuilder::GetInterfaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::EnumBuilder::GetInterfaces");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInterfaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<System::Type*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.GetMethodImpl
System::Reflection::MethodInfo* System::Reflection::Emit::EnumBuilder::GetMethodImpl(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder* binder, System::Reflection::CallingConventions callConvention, ::ArrayW<System::Type*> types, ::ArrayW<System::Reflection::ParameterModifier> modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::EnumBuilder::GetMethodImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(callConvention), ::il2cpp_utils::ExtractType(types), ::il2cpp_utils::ExtractType(modifiers)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodInfo*, false>(___instance_arg, ___internal__method, name, bindingAttr, binder, callConvention, types, modifiers);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.GetMethods
::ArrayW<System::Reflection::MethodInfo*> System::Reflection::Emit::EnumBuilder::GetMethods(System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::EnumBuilder::GetMethods");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethods", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<System::Reflection::MethodInfo*>, false>(___instance_arg, ___internal__method, bindingAttr);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.GetNestedType
System::Type* System::Reflection::Emit::EnumBuilder::GetNestedType(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::EnumBuilder::GetNestedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNestedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(___instance_arg, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.GetProperties
::ArrayW<System::Reflection::PropertyInfo*> System::Reflection::Emit::EnumBuilder::GetProperties(System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::EnumBuilder::GetProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<System::Reflection::PropertyInfo*>, false>(___instance_arg, ___internal__method, bindingAttr);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.GetPropertyImpl
System::Reflection::PropertyInfo* System::Reflection::Emit::EnumBuilder::GetPropertyImpl(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder* binder, System::Type* returnType, ::ArrayW<System::Type*> types, ::ArrayW<System::Reflection::ParameterModifier> modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::EnumBuilder::GetPropertyImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertyImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(returnType), ::il2cpp_utils::ExtractType(types), ::il2cpp_utils::ExtractType(modifiers)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::PropertyInfo*, false>(___instance_arg, ___internal__method, name, bindingAttr, binder, returnType, types, modifiers);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.HasElementTypeImpl
bool System::Reflection::Emit::EnumBuilder::HasElementTypeImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::EnumBuilder::HasElementTypeImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasElementTypeImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.InvokeMember
::Il2CppObject* System::Reflection::Emit::EnumBuilder::InvokeMember(::Il2CppString* name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder* binder, ::Il2CppObject* target, ::ArrayW<::Il2CppObject*> args, ::ArrayW<System::Reflection::ParameterModifier> modifiers, System::Globalization::CultureInfo* culture, ::ArrayW<::Il2CppString*> namedParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::EnumBuilder::InvokeMember");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(invokeAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(modifiers), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(namedParameters)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method, name, invokeAttr, binder, target, args, modifiers, culture, namedParameters);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.IsArrayImpl
bool System::Reflection::Emit::EnumBuilder::IsArrayImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::EnumBuilder::IsArrayImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsArrayImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.IsByRefImpl
bool System::Reflection::Emit::EnumBuilder::IsByRefImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::EnumBuilder::IsByRefImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsByRefImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.IsCOMObjectImpl
bool System::Reflection::Emit::EnumBuilder::IsCOMObjectImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::EnumBuilder::IsCOMObjectImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsCOMObjectImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.IsDefined
bool System::Reflection::Emit::EnumBuilder::IsDefined(System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::EnumBuilder::IsDefined");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.IsPointerImpl
bool System::Reflection::Emit::EnumBuilder::IsPointerImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::EnumBuilder::IsPointerImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPointerImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.EnumBuilder.IsPrimitiveImpl
bool System::Reflection::Emit::EnumBuilder::IsPrimitiveImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::EnumBuilder::IsPrimitiveImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPrimitiveImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.Emit.FieldBuilder
#include "System/Reflection/Emit/FieldBuilder.hpp"
// Including type: System.Reflection.FieldAttributes
#include "System/Reflection/FieldAttributes.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.RuntimeFieldHandle
#include "System/RuntimeFieldHandle.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: System.Reflection.Binder
#include "System/Reflection/Binder.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.Emit.FieldBuilder.get_Attributes
System::Reflection::FieldAttributes System::Reflection::Emit::FieldBuilder::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::FieldBuilder::get_Attributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::FieldAttributes, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.FieldBuilder.get_DeclaringType
System::Type* System::Reflection::Emit::FieldBuilder::get_DeclaringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::FieldBuilder::get_DeclaringType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeclaringType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.FieldBuilder.get_FieldType
System::Type* System::Reflection::Emit::FieldBuilder::get_FieldType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::FieldBuilder::get_FieldType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FieldType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.FieldBuilder.get_Name
::Il2CppString* System::Reflection::Emit::FieldBuilder::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::FieldBuilder::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.FieldBuilder.get_FieldHandle
System::RuntimeFieldHandle System::Reflection::Emit::FieldBuilder::get_FieldHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::FieldBuilder::get_FieldHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FieldHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::RuntimeFieldHandle, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.FieldBuilder.get_ReflectedType
System::Type* System::Reflection::Emit::FieldBuilder::get_ReflectedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::FieldBuilder::get_ReflectedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReflectedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.FieldBuilder.GetValue
::Il2CppObject* System::Reflection::Emit::FieldBuilder::GetValue(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::FieldBuilder::GetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method, obj);
}
// Autogenerated method: System.Reflection.Emit.FieldBuilder.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::Emit::FieldBuilder::GetCustomAttributes(bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::FieldBuilder::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inherit)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppObject*>, false>(___instance_arg, ___internal__method, inherit);
}
// Autogenerated method: System.Reflection.Emit.FieldBuilder.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::Emit::FieldBuilder::GetCustomAttributes(System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::FieldBuilder::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppObject*>, false>(___instance_arg, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.Emit.FieldBuilder.IsDefined
bool System::Reflection::Emit::FieldBuilder::IsDefined(System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::FieldBuilder::IsDefined");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.Emit.FieldBuilder.SetValue
void System::Reflection::Emit::FieldBuilder::SetValue(::Il2CppObject* obj, ::Il2CppObject* val, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder* binder, System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::FieldBuilder::SetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(val), ::il2cpp_utils::ExtractType(invokeAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(culture)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, obj, val, invokeAttr, binder, culture);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.Emit.GenericTypeParameterBuilder
#include "System/Reflection/Emit/GenericTypeParameterBuilder.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: System.Reflection.Module
#include "System/Reflection/Module.hpp"
// Including type: System.Reflection.TypeAttributes
#include "System/Reflection/TypeAttributes.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
// Including type: System.Reflection.Binder
#include "System/Reflection/Binder.hpp"
// Including type: System.Reflection.CallingConventions
#include "System/Reflection/CallingConventions.hpp"
// Including type: System.Reflection.EventInfo
#include "System/Reflection/EventInfo.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.get_Assembly
System::Reflection::Assembly* System::Reflection::Emit::GenericTypeParameterBuilder::get_Assembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::GenericTypeParameterBuilder::get_Assembly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Assembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::Assembly*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.get_AssemblyQualifiedName
::Il2CppString* System::Reflection::Emit::GenericTypeParameterBuilder::get_AssemblyQualifiedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::GenericTypeParameterBuilder::get_AssemblyQualifiedName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AssemblyQualifiedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.get_BaseType
System::Type* System::Reflection::Emit::GenericTypeParameterBuilder::get_BaseType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::GenericTypeParameterBuilder::get_BaseType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.get_FullName
::Il2CppString* System::Reflection::Emit::GenericTypeParameterBuilder::get_FullName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::GenericTypeParameterBuilder::get_FullName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FullName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.get_GUID
System::Guid System::Reflection::Emit::GenericTypeParameterBuilder::get_GUID() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::GenericTypeParameterBuilder::get_GUID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GUID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Guid, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.get_Module
System::Reflection::Module* System::Reflection::Emit::GenericTypeParameterBuilder::get_Module() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::GenericTypeParameterBuilder::get_Module");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Module", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::Module*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.get_Name
::Il2CppString* System::Reflection::Emit::GenericTypeParameterBuilder::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::GenericTypeParameterBuilder::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.get_Namespace
::Il2CppString* System::Reflection::Emit::GenericTypeParameterBuilder::get_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::GenericTypeParameterBuilder::get_Namespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Namespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.get_UnderlyingSystemType
System::Type* System::Reflection::Emit::GenericTypeParameterBuilder::get_UnderlyingSystemType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::GenericTypeParameterBuilder::get_UnderlyingSystemType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnderlyingSystemType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.GetElementType
System::Type* System::Reflection::Emit::GenericTypeParameterBuilder::GetElementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::GenericTypeParameterBuilder::GetElementType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetElementType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.GetAttributeFlagsImpl
System::Reflection::TypeAttributes System::Reflection::Emit::GenericTypeParameterBuilder::GetAttributeFlagsImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::GenericTypeParameterBuilder::GetAttributeFlagsImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAttributeFlagsImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::TypeAttributes, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.GetConstructorImpl
System::Reflection::ConstructorInfo* System::Reflection::Emit::GenericTypeParameterBuilder::GetConstructorImpl(System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder* binder, System::Reflection::CallingConventions callConvention, ::ArrayW<System::Type*> types, ::ArrayW<System::Reflection::ParameterModifier> modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::GenericTypeParameterBuilder::GetConstructorImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConstructorImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(callConvention), ::il2cpp_utils::ExtractType(types), ::il2cpp_utils::ExtractType(modifiers)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::ConstructorInfo*, false>(___instance_arg, ___internal__method, bindingAttr, binder, callConvention, types, modifiers);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.GetConstructors
::ArrayW<System::Reflection::ConstructorInfo*> System::Reflection::Emit::GenericTypeParameterBuilder::GetConstructors(System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::GenericTypeParameterBuilder::GetConstructors");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConstructors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<System::Reflection::ConstructorInfo*>, false>(___instance_arg, ___internal__method, bindingAttr);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::Emit::GenericTypeParameterBuilder::GetCustomAttributes(bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::GenericTypeParameterBuilder::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inherit)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppObject*>, false>(___instance_arg, ___internal__method, inherit);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::Emit::GenericTypeParameterBuilder::GetCustomAttributes(System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::GenericTypeParameterBuilder::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppObject*>, false>(___instance_arg, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.GetEvent
System::Reflection::EventInfo* System::Reflection::Emit::GenericTypeParameterBuilder::GetEvent(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::GenericTypeParameterBuilder::GetEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::EventInfo*, false>(___instance_arg, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.GetField
System::Reflection::FieldInfo* System::Reflection::Emit::GenericTypeParameterBuilder::GetField(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::GenericTypeParameterBuilder::GetField");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::FieldInfo*, false>(___instance_arg, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.GetFields
::ArrayW<System::Reflection::FieldInfo*> System::Reflection::Emit::GenericTypeParameterBuilder::GetFields(System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::GenericTypeParameterBuilder::GetFields");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<System::Reflection::FieldInfo*>, false>(___instance_arg, ___internal__method, bindingAttr);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.GetInterfaces
::ArrayW<System::Type*> System::Reflection::Emit::GenericTypeParameterBuilder::GetInterfaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::GenericTypeParameterBuilder::GetInterfaces");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInterfaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<System::Type*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.GetMethodImpl
System::Reflection::MethodInfo* System::Reflection::Emit::GenericTypeParameterBuilder::GetMethodImpl(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder* binder, System::Reflection::CallingConventions callConvention, ::ArrayW<System::Type*> types, ::ArrayW<System::Reflection::ParameterModifier> modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::GenericTypeParameterBuilder::GetMethodImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(callConvention), ::il2cpp_utils::ExtractType(types), ::il2cpp_utils::ExtractType(modifiers)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodInfo*, false>(___instance_arg, ___internal__method, name, bindingAttr, binder, callConvention, types, modifiers);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.GetMethods
::ArrayW<System::Reflection::MethodInfo*> System::Reflection::Emit::GenericTypeParameterBuilder::GetMethods(System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::GenericTypeParameterBuilder::GetMethods");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethods", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<System::Reflection::MethodInfo*>, false>(___instance_arg, ___internal__method, bindingAttr);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.GetNestedType
System::Type* System::Reflection::Emit::GenericTypeParameterBuilder::GetNestedType(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::GenericTypeParameterBuilder::GetNestedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNestedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(___instance_arg, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.GetProperties
::ArrayW<System::Reflection::PropertyInfo*> System::Reflection::Emit::GenericTypeParameterBuilder::GetProperties(System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::GenericTypeParameterBuilder::GetProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<System::Reflection::PropertyInfo*>, false>(___instance_arg, ___internal__method, bindingAttr);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.GetPropertyImpl
System::Reflection::PropertyInfo* System::Reflection::Emit::GenericTypeParameterBuilder::GetPropertyImpl(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder* binder, System::Type* returnType, ::ArrayW<System::Type*> types, ::ArrayW<System::Reflection::ParameterModifier> modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::GenericTypeParameterBuilder::GetPropertyImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertyImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(returnType), ::il2cpp_utils::ExtractType(types), ::il2cpp_utils::ExtractType(modifiers)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::PropertyInfo*, false>(___instance_arg, ___internal__method, name, bindingAttr, binder, returnType, types, modifiers);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.HasElementTypeImpl
bool System::Reflection::Emit::GenericTypeParameterBuilder::HasElementTypeImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::GenericTypeParameterBuilder::HasElementTypeImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasElementTypeImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.InvokeMember
::Il2CppObject* System::Reflection::Emit::GenericTypeParameterBuilder::InvokeMember(::Il2CppString* name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder* binder, ::Il2CppObject* target, ::ArrayW<::Il2CppObject*> args, ::ArrayW<System::Reflection::ParameterModifier> modifiers, System::Globalization::CultureInfo* culture, ::ArrayW<::Il2CppString*> namedParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::GenericTypeParameterBuilder::InvokeMember");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(invokeAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(modifiers), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(namedParameters)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method, name, invokeAttr, binder, target, args, modifiers, culture, namedParameters);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.IsArrayImpl
bool System::Reflection::Emit::GenericTypeParameterBuilder::IsArrayImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::GenericTypeParameterBuilder::IsArrayImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsArrayImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.IsByRefImpl
bool System::Reflection::Emit::GenericTypeParameterBuilder::IsByRefImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::GenericTypeParameterBuilder::IsByRefImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsByRefImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.IsCOMObjectImpl
bool System::Reflection::Emit::GenericTypeParameterBuilder::IsCOMObjectImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::GenericTypeParameterBuilder::IsCOMObjectImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsCOMObjectImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.IsDefined
bool System::Reflection::Emit::GenericTypeParameterBuilder::IsDefined(System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::GenericTypeParameterBuilder::IsDefined");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.IsPointerImpl
bool System::Reflection::Emit::GenericTypeParameterBuilder::IsPointerImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::GenericTypeParameterBuilder::IsPointerImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPointerImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.GenericTypeParameterBuilder.IsPrimitiveImpl
bool System::Reflection::Emit::GenericTypeParameterBuilder::IsPrimitiveImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::GenericTypeParameterBuilder::IsPrimitiveImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPrimitiveImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.Emit.MethodBuilder
#include "System/Reflection/Emit/MethodBuilder.hpp"
// Including type: System.Reflection.MethodAttributes
#include "System/Reflection/MethodAttributes.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.RuntimeMethodHandle
#include "System/RuntimeMethodHandle.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: System.Reflection.MethodImplAttributes
#include "System/Reflection/MethodImplAttributes.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: System.Reflection.Binder
#include "System/Reflection/Binder.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.Emit.MethodBuilder.get_Attributes
System::Reflection::MethodAttributes System::Reflection::Emit::MethodBuilder::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::MethodBuilder::get_Attributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodAttributes, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.MethodBuilder.get_DeclaringType
System::Type* System::Reflection::Emit::MethodBuilder::get_DeclaringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::MethodBuilder::get_DeclaringType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeclaringType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.MethodBuilder.get_Name
::Il2CppString* System::Reflection::Emit::MethodBuilder::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::MethodBuilder::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.MethodBuilder.get_MethodHandle
System::RuntimeMethodHandle System::Reflection::Emit::MethodBuilder::get_MethodHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::MethodBuilder::get_MethodHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MethodHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::RuntimeMethodHandle, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.MethodBuilder.get_ReflectedType
System::Type* System::Reflection::Emit::MethodBuilder::get_ReflectedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::MethodBuilder::get_ReflectedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReflectedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.MethodBuilder.GetParameters
::ArrayW<System::Reflection::ParameterInfo*> System::Reflection::Emit::MethodBuilder::GetParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::MethodBuilder::GetParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<System::Reflection::ParameterInfo*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.MethodBuilder.GetBaseDefinition
System::Reflection::MethodInfo* System::Reflection::Emit::MethodBuilder::GetBaseDefinition() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::MethodBuilder::GetBaseDefinition");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBaseDefinition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodInfo*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.MethodBuilder.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::Emit::MethodBuilder::GetCustomAttributes(bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::MethodBuilder::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inherit)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppObject*>, false>(___instance_arg, ___internal__method, inherit);
}
// Autogenerated method: System.Reflection.Emit.MethodBuilder.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::Emit::MethodBuilder::GetCustomAttributes(System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::MethodBuilder::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppObject*>, false>(___instance_arg, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.Emit.MethodBuilder.GetMethodImplementationFlags
System::Reflection::MethodImplAttributes System::Reflection::Emit::MethodBuilder::GetMethodImplementationFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::MethodBuilder::GetMethodImplementationFlags");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodImplementationFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodImplAttributes, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.MethodBuilder.Invoke
::Il2CppObject* System::Reflection::Emit::MethodBuilder::Invoke(::Il2CppObject* obj, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder* binder, ::ArrayW<::Il2CppObject*> parameters, System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::MethodBuilder::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(invokeAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(parameters), ::il2cpp_utils::ExtractType(culture)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method, obj, invokeAttr, binder, parameters, culture);
}
// Autogenerated method: System.Reflection.Emit.MethodBuilder.IsDefined
bool System::Reflection::Emit::MethodBuilder::IsDefined(System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::MethodBuilder::IsDefined");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, attributeType, inherit);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.Emit.PropertyBuilder
#include "System/Reflection/Emit/PropertyBuilder.hpp"
// Including type: System.Reflection.PropertyAttributes
#include "System/Reflection/PropertyAttributes.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.ParameterInfo
#include "System/Reflection/ParameterInfo.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: System.Reflection.Binder
#include "System/Reflection/Binder.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.Emit.PropertyBuilder.get_Attributes
System::Reflection::PropertyAttributes System::Reflection::Emit::PropertyBuilder::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::PropertyBuilder::get_Attributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::PropertyAttributes, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.PropertyBuilder.get_CanRead
bool System::Reflection::Emit::PropertyBuilder::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::PropertyBuilder::get_CanRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.PropertyBuilder.get_CanWrite
bool System::Reflection::Emit::PropertyBuilder::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::PropertyBuilder::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.PropertyBuilder.get_DeclaringType
System::Type* System::Reflection::Emit::PropertyBuilder::get_DeclaringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::PropertyBuilder::get_DeclaringType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeclaringType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.PropertyBuilder.get_Name
::Il2CppString* System::Reflection::Emit::PropertyBuilder::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::PropertyBuilder::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.PropertyBuilder.get_PropertyType
System::Type* System::Reflection::Emit::PropertyBuilder::get_PropertyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::PropertyBuilder::get_PropertyType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PropertyType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.PropertyBuilder.get_ReflectedType
System::Type* System::Reflection::Emit::PropertyBuilder::get_ReflectedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::PropertyBuilder::get_ReflectedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReflectedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.PropertyBuilder.GetIndexParameters
::ArrayW<System::Reflection::ParameterInfo*> System::Reflection::Emit::PropertyBuilder::GetIndexParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::PropertyBuilder::GetIndexParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIndexParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<System::Reflection::ParameterInfo*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.PropertyBuilder.GetAccessors
::ArrayW<System::Reflection::MethodInfo*> System::Reflection::Emit::PropertyBuilder::GetAccessors(bool nonPublic) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::PropertyBuilder::GetAccessors");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAccessors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nonPublic)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<System::Reflection::MethodInfo*>, false>(___instance_arg, ___internal__method, nonPublic);
}
// Autogenerated method: System.Reflection.Emit.PropertyBuilder.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::Emit::PropertyBuilder::GetCustomAttributes(bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::PropertyBuilder::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inherit)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppObject*>, false>(___instance_arg, ___internal__method, inherit);
}
// Autogenerated method: System.Reflection.Emit.PropertyBuilder.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::Emit::PropertyBuilder::GetCustomAttributes(System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::PropertyBuilder::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppObject*>, false>(___instance_arg, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.Emit.PropertyBuilder.GetGetMethod
System::Reflection::MethodInfo* System::Reflection::Emit::PropertyBuilder::GetGetMethod(bool nonPublic) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::PropertyBuilder::GetGetMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetGetMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nonPublic)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodInfo*, false>(___instance_arg, ___internal__method, nonPublic);
}
// Autogenerated method: System.Reflection.Emit.PropertyBuilder.GetSetMethod
System::Reflection::MethodInfo* System::Reflection::Emit::PropertyBuilder::GetSetMethod(bool nonPublic) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::PropertyBuilder::GetSetMethod");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSetMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nonPublic)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodInfo*, false>(___instance_arg, ___internal__method, nonPublic);
}
// Autogenerated method: System.Reflection.Emit.PropertyBuilder.GetValue
::Il2CppObject* System::Reflection::Emit::PropertyBuilder::GetValue(::Il2CppObject* obj, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder* binder, ::ArrayW<::Il2CppObject*> index, System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::PropertyBuilder::GetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(invokeAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(culture)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method, obj, invokeAttr, binder, index, culture);
}
// Autogenerated method: System.Reflection.Emit.PropertyBuilder.IsDefined
bool System::Reflection::Emit::PropertyBuilder::IsDefined(System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::PropertyBuilder::IsDefined");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.Emit.PropertyBuilder.SetValue
void System::Reflection::Emit::PropertyBuilder::SetValue(::Il2CppObject* obj, ::Il2CppObject* value, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder* binder, ::ArrayW<::Il2CppObject*> index, System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::PropertyBuilder::SetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(invokeAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(culture)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, obj, value, invokeAttr, binder, index, culture);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Reflection.Emit.TypeBuilder
#include "System/Reflection/Emit/TypeBuilder.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: System.Reflection.Module
#include "System/Reflection/Module.hpp"
// Including type: System.Reflection.TypeAttributes
#include "System/Reflection/TypeAttributes.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
// Including type: System.Reflection.Binder
#include "System/Reflection/Binder.hpp"
// Including type: System.Reflection.CallingConventions
#include "System/Reflection/CallingConventions.hpp"
// Including type: System.Reflection.EventInfo
#include "System/Reflection/EventInfo.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Reflection.PropertyInfo
#include "System/Reflection/PropertyInfo.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 UnspecifiedTypeSize
int System::Reflection::Emit::TypeBuilder::_get_UnspecifiedTypeSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::TypeBuilder::_get_UnspecifiedTypeSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Reflection.Emit", "TypeBuilder", "UnspecifiedTypeSize"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 UnspecifiedTypeSize
void System::Reflection::Emit::TypeBuilder::_set_UnspecifiedTypeSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::TypeBuilder::_set_UnspecifiedTypeSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Reflection.Emit", "TypeBuilder", "UnspecifiedTypeSize", value));
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.get_Assembly
System::Reflection::Assembly* System::Reflection::Emit::TypeBuilder::get_Assembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::TypeBuilder::get_Assembly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Assembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::Assembly*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.get_AssemblyQualifiedName
::Il2CppString* System::Reflection::Emit::TypeBuilder::get_AssemblyQualifiedName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::TypeBuilder::get_AssemblyQualifiedName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AssemblyQualifiedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.get_BaseType
System::Type* System::Reflection::Emit::TypeBuilder::get_BaseType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::TypeBuilder::get_BaseType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.get_FullName
::Il2CppString* System::Reflection::Emit::TypeBuilder::get_FullName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::TypeBuilder::get_FullName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FullName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.get_GUID
System::Guid System::Reflection::Emit::TypeBuilder::get_GUID() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::TypeBuilder::get_GUID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GUID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Guid, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.get_Module
System::Reflection::Module* System::Reflection::Emit::TypeBuilder::get_Module() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::TypeBuilder::get_Module");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Module", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::Module*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.get_Name
::Il2CppString* System::Reflection::Emit::TypeBuilder::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::TypeBuilder::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.get_Namespace
::Il2CppString* System::Reflection::Emit::TypeBuilder::get_Namespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::TypeBuilder::get_Namespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Namespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.get_UnderlyingSystemType
System::Type* System::Reflection::Emit::TypeBuilder::get_UnderlyingSystemType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::TypeBuilder::get_UnderlyingSystemType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnderlyingSystemType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.GetElementType
System::Type* System::Reflection::Emit::TypeBuilder::GetElementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::TypeBuilder::GetElementType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetElementType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.GetAttributeFlagsImpl
System::Reflection::TypeAttributes System::Reflection::Emit::TypeBuilder::GetAttributeFlagsImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::TypeBuilder::GetAttributeFlagsImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAttributeFlagsImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::TypeAttributes, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.GetConstructorImpl
System::Reflection::ConstructorInfo* System::Reflection::Emit::TypeBuilder::GetConstructorImpl(System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder* binder, System::Reflection::CallingConventions callConvention, ::ArrayW<System::Type*> types, ::ArrayW<System::Reflection::ParameterModifier> modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::TypeBuilder::GetConstructorImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConstructorImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(callConvention), ::il2cpp_utils::ExtractType(types), ::il2cpp_utils::ExtractType(modifiers)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::ConstructorInfo*, false>(___instance_arg, ___internal__method, bindingAttr, binder, callConvention, types, modifiers);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.GetConstructors
::ArrayW<System::Reflection::ConstructorInfo*> System::Reflection::Emit::TypeBuilder::GetConstructors(System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::TypeBuilder::GetConstructors");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetConstructors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<System::Reflection::ConstructorInfo*>, false>(___instance_arg, ___internal__method, bindingAttr);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::Emit::TypeBuilder::GetCustomAttributes(bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::TypeBuilder::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inherit)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppObject*>, false>(___instance_arg, ___internal__method, inherit);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.GetCustomAttributes
::ArrayW<::Il2CppObject*> System::Reflection::Emit::TypeBuilder::GetCustomAttributes(System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::TypeBuilder::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppObject*>, false>(___instance_arg, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.GetEvent
System::Reflection::EventInfo* System::Reflection::Emit::TypeBuilder::GetEvent(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::TypeBuilder::GetEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::EventInfo*, false>(___instance_arg, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.GetField
System::Reflection::FieldInfo* System::Reflection::Emit::TypeBuilder::GetField(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::TypeBuilder::GetField");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::FieldInfo*, false>(___instance_arg, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.GetFields
::ArrayW<System::Reflection::FieldInfo*> System::Reflection::Emit::TypeBuilder::GetFields(System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::TypeBuilder::GetFields");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFields", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<System::Reflection::FieldInfo*>, false>(___instance_arg, ___internal__method, bindingAttr);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.GetInterfaces
::ArrayW<System::Type*> System::Reflection::Emit::TypeBuilder::GetInterfaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::TypeBuilder::GetInterfaces");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInterfaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<System::Type*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.GetMethodImpl
System::Reflection::MethodInfo* System::Reflection::Emit::TypeBuilder::GetMethodImpl(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder* binder, System::Reflection::CallingConventions callConvention, ::ArrayW<System::Type*> types, ::ArrayW<System::Reflection::ParameterModifier> modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::TypeBuilder::GetMethodImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(callConvention), ::il2cpp_utils::ExtractType(types), ::il2cpp_utils::ExtractType(modifiers)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodInfo*, false>(___instance_arg, ___internal__method, name, bindingAttr, binder, callConvention, types, modifiers);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.GetMethods
::ArrayW<System::Reflection::MethodInfo*> System::Reflection::Emit::TypeBuilder::GetMethods(System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::TypeBuilder::GetMethods");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethods", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<System::Reflection::MethodInfo*>, false>(___instance_arg, ___internal__method, bindingAttr);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.GetNestedType
System::Type* System::Reflection::Emit::TypeBuilder::GetNestedType(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::TypeBuilder::GetNestedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNestedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(___instance_arg, ___internal__method, name, bindingAttr);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.GetProperties
::ArrayW<System::Reflection::PropertyInfo*> System::Reflection::Emit::TypeBuilder::GetProperties(System::Reflection::BindingFlags bindingAttr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::TypeBuilder::GetProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bindingAttr)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<System::Reflection::PropertyInfo*>, false>(___instance_arg, ___internal__method, bindingAttr);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.GetPropertyImpl
System::Reflection::PropertyInfo* System::Reflection::Emit::TypeBuilder::GetPropertyImpl(::Il2CppString* name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder* binder, System::Type* returnType, ::ArrayW<System::Type*> types, ::ArrayW<System::Reflection::ParameterModifier> modifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::TypeBuilder::GetPropertyImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertyImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(bindingAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(returnType), ::il2cpp_utils::ExtractType(types), ::il2cpp_utils::ExtractType(modifiers)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::PropertyInfo*, false>(___instance_arg, ___internal__method, name, bindingAttr, binder, returnType, types, modifiers);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.HasElementTypeImpl
bool System::Reflection::Emit::TypeBuilder::HasElementTypeImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::TypeBuilder::HasElementTypeImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasElementTypeImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.InvokeMember
::Il2CppObject* System::Reflection::Emit::TypeBuilder::InvokeMember(::Il2CppString* name, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder* binder, ::Il2CppObject* target, ::ArrayW<::Il2CppObject*> args, ::ArrayW<System::Reflection::ParameterModifier> modifiers, System::Globalization::CultureInfo* culture, ::ArrayW<::Il2CppString*> namedParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::TypeBuilder::InvokeMember");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeMember", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(invokeAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(modifiers), ::il2cpp_utils::ExtractType(culture), ::il2cpp_utils::ExtractType(namedParameters)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method, name, invokeAttr, binder, target, args, modifiers, culture, namedParameters);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.IsArrayImpl
bool System::Reflection::Emit::TypeBuilder::IsArrayImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::TypeBuilder::IsArrayImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsArrayImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.IsByRefImpl
bool System::Reflection::Emit::TypeBuilder::IsByRefImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::TypeBuilder::IsByRefImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsByRefImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.IsCOMObjectImpl
bool System::Reflection::Emit::TypeBuilder::IsCOMObjectImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::TypeBuilder::IsCOMObjectImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsCOMObjectImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.IsDefined
bool System::Reflection::Emit::TypeBuilder::IsDefined(System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::TypeBuilder::IsDefined");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.IsPointerImpl
bool System::Reflection::Emit::TypeBuilder::IsPointerImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::TypeBuilder::IsPointerImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPointerImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Reflection.Emit.TypeBuilder.IsPrimitiveImpl
bool System::Reflection::Emit::TypeBuilder::IsPrimitiveImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::TypeBuilder::IsPrimitiveImpl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPrimitiveImpl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Reflection.Emit.TypeBuilderInstantiation
#include "System/Reflection/Emit/TypeBuilderInstantiation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Reflection.Emit.TypeBuilderInstantiation.MakeGenericType
System::Type* System::Reflection::Emit::TypeBuilderInstantiation::MakeGenericType(System::Type* type, ::ArrayW<System::Type*> typeArguments) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Reflection::Emit::TypeBuilderInstantiation::MakeGenericType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Reflection.Emit", "TypeBuilderInstantiation", "MakeGenericType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(typeArguments)})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, typeArguments);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.__Error
#include "System/IO/__Error.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.__Error.EndOfFile
void System::IO::__Error::EndOfFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::__Error::EndOfFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "__Error", "EndOfFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.__Error.FileNotOpen
void System::IO::__Error::FileNotOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::__Error::FileNotOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "__Error", "FileNotOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.__Error.StreamIsClosed
void System::IO::__Error::StreamIsClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::__Error::StreamIsClosed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "__Error", "StreamIsClosed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.__Error.MemoryStreamNotExpandable
void System::IO::__Error::MemoryStreamNotExpandable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::__Error::MemoryStreamNotExpandable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "__Error", "MemoryStreamNotExpandable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.__Error.ReaderClosed
void System::IO::__Error::ReaderClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::__Error::ReaderClosed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "__Error", "ReaderClosed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.__Error.ReadNotSupported
void System::IO::__Error::ReadNotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::__Error::ReadNotSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "__Error", "ReadNotSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.__Error.WrongAsyncResult
void System::IO::__Error::WrongAsyncResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::__Error::WrongAsyncResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "__Error", "WrongAsyncResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.__Error.EndReadCalledTwice
void System::IO::__Error::EndReadCalledTwice() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::__Error::EndReadCalledTwice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "__Error", "EndReadCalledTwice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.__Error.EndWriteCalledTwice
void System::IO::__Error::EndWriteCalledTwice() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::__Error::EndWriteCalledTwice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "__Error", "EndWriteCalledTwice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.__Error.GetDisplayablePath
::Il2CppString* System::IO::__Error::GetDisplayablePath(::Il2CppString* path, bool isInvalidPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::__Error::GetDisplayablePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "__Error", "GetDisplayablePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(isInvalidPath)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, isInvalidPath);
}
// Autogenerated method: System.IO.__Error.WinIOError
void System::IO::__Error::WinIOError(int errorCode, ::Il2CppString* maybeFullPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::__Error::WinIOError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "__Error", "WinIOError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorCode), ::il2cpp_utils::ExtractType(maybeFullPath)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, errorCode, maybeFullPath);
}
// Autogenerated method: System.IO.__Error.WriteNotSupported
void System::IO::__Error::WriteNotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::__Error::WriteNotSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "__Error", "WriteNotSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.__Error.WriterClosed
void System::IO::__Error::WriterClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::__Error::WriterClosed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "__Error", "WriterClosed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.BinaryReader
#include "System/IO/BinaryReader.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.Decoder
#include "System/Text/Decoder.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream m_stream
System::IO::Stream*& System::IO::BinaryReader::dyn_m_stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryReader::dyn_m_stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_stream"))->offset;
  return *reinterpret_cast<System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] m_buffer
::ArrayW<uint8_t>& System::IO::BinaryReader::dyn_m_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryReader::dyn_m_buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Decoder m_decoder
System::Text::Decoder*& System::IO::BinaryReader::dyn_m_decoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryReader::dyn_m_decoder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_decoder"))->offset;
  return *reinterpret_cast<System::Text::Decoder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] m_charBytes
::ArrayW<uint8_t>& System::IO::BinaryReader::dyn_m_charBytes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryReader::dyn_m_charBytes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_charBytes"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char[] m_singleChar
::ArrayW<::Il2CppChar>& System::IO::BinaryReader::dyn_m_singleChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryReader::dyn_m_singleChar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_singleChar"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char[] m_charBuffer
::ArrayW<::Il2CppChar>& System::IO::BinaryReader::dyn_m_charBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryReader::dyn_m_charBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_charBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_maxCharsSize
int& System::IO::BinaryReader::dyn_m_maxCharsSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryReader::dyn_m_maxCharsSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_maxCharsSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_2BytesPerChar
bool& System::IO::BinaryReader::dyn_m_2BytesPerChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryReader::dyn_m_2BytesPerChar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_2BytesPerChar"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isMemoryStream
bool& System::IO::BinaryReader::dyn_m_isMemoryStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryReader::dyn_m_isMemoryStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isMemoryStream"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_leaveOpen
bool& System::IO::BinaryReader::dyn_m_leaveOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryReader::dyn_m_leaveOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_leaveOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.BinaryReader.get_BaseStream
System::IO::Stream* System::IO::BinaryReader::get_BaseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryReader::get_BaseStream");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IO::Stream*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.Close
void System::IO::BinaryReader::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryReader::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.Dispose
void System::IO::BinaryReader::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryReader::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, disposing);
}
// Autogenerated method: System.IO.BinaryReader.Dispose
void System::IO::BinaryReader::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryReader::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.Read
int System::IO::BinaryReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadBoolean
bool System::IO::BinaryReader::ReadBoolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryReader::ReadBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadByte
uint8_t System::IO::BinaryReader::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryReader::ReadByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadSByte
int8_t System::IO::BinaryReader::ReadSByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryReader::ReadSByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadSByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int8_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadChar
::Il2CppChar System::IO::BinaryReader::ReadChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryReader::ReadChar");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadInt16
int16_t System::IO::BinaryReader::ReadInt16() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryReader::ReadInt16");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadUInt16
uint16_t System::IO::BinaryReader::ReadUInt16() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryReader::ReadUInt16");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadUInt16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint16_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadInt32
int System::IO::BinaryReader::ReadInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryReader::ReadInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadUInt32
uint System::IO::BinaryReader::ReadUInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryReader::ReadUInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadUInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadInt64
int64_t System::IO::BinaryReader::ReadInt64() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryReader::ReadInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadUInt64
uint64_t System::IO::BinaryReader::ReadUInt64() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryReader::ReadUInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadUInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadSingle
float System::IO::BinaryReader::ReadSingle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryReader::ReadSingle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<float, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadDouble
double System::IO::BinaryReader::ReadDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryReader::ReadDouble");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<double, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadDecimal
System::Decimal System::IO::BinaryReader::ReadDecimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryReader::ReadDecimal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadDecimal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Decimal, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadString
::Il2CppString* System::IO::BinaryReader::ReadString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryReader::ReadString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.InternalReadChars
int System::IO::BinaryReader::InternalReadChars(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryReader::InternalReadChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalReadChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.BinaryReader.InternalReadOneChar
int System::IO::BinaryReader::InternalReadOneChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryReader::InternalReadOneChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalReadOneChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.BinaryReader.ReadChars
::ArrayW<::Il2CppChar> System::IO::BinaryReader::ReadChars(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryReader::ReadChars");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppChar>, false>(___instance_arg, ___internal__method, count);
}
// Autogenerated method: System.IO.BinaryReader.Read
int System::IO::BinaryReader::Read(::ArrayW<uint8_t> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.BinaryReader.ReadBytes
::ArrayW<uint8_t> System::IO::BinaryReader::ReadBytes(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryReader::ReadBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<uint8_t>, false>(___instance_arg, ___internal__method, count);
}
// Autogenerated method: System.IO.BinaryReader.FillBuffer
void System::IO::BinaryReader::FillBuffer(int numBytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryReader::FillBuffer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FillBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(numBytes)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, numBytes);
}
// Autogenerated method: System.IO.BinaryReader.Read7BitEncodedInt
int System::IO::BinaryReader::Read7BitEncodedInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryReader::Read7BitEncodedInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read7BitEncodedInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.BinaryWriter
#include "System/IO/BinaryWriter.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Text.Encoder
#include "System/Text/Encoder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IO.BinaryWriter Null
System::IO::BinaryWriter* System::IO::BinaryWriter::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryWriter::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::BinaryWriter*>("System.IO", "BinaryWriter", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IO.BinaryWriter Null
void System::IO::BinaryWriter::_set_Null(System::IO::BinaryWriter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryWriter::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "BinaryWriter", "Null", value));
}
// Autogenerated instance field getter
// Get instance field: protected System.IO.Stream OutStream
System::IO::Stream*& System::IO::BinaryWriter::dyn_OutStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryWriter::dyn_OutStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OutStream"))->offset;
  return *reinterpret_cast<System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _buffer
::ArrayW<uint8_t>& System::IO::BinaryWriter::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryWriter::dyn__buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoding _encoding
System::Text::Encoding*& System::IO::BinaryWriter::dyn__encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryWriter::dyn__encoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_encoding"))->offset;
  return *reinterpret_cast<System::Text::Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoder _encoder
System::Text::Encoder*& System::IO::BinaryWriter::dyn__encoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryWriter::dyn__encoder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_encoder"))->offset;
  return *reinterpret_cast<System::Text::Encoder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _leaveOpen
bool& System::IO::BinaryWriter::dyn__leaveOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryWriter::dyn__leaveOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leaveOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _largeByteBuffer
::ArrayW<uint8_t>& System::IO::BinaryWriter::dyn__largeByteBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryWriter::dyn__largeByteBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_largeByteBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxChars
int& System::IO::BinaryWriter::dyn__maxChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryWriter::dyn__maxChars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxChars"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.BinaryWriter..cctor
void System::IO::BinaryWriter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryWriter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "BinaryWriter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.BinaryWriter.Dispose
void System::IO::BinaryWriter::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryWriter::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, disposing);
}
// Autogenerated method: System.IO.BinaryWriter.Dispose
void System::IO::BinaryWriter::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryWriter::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.BinaryWriter.Flush
void System::IO::BinaryWriter::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryWriter::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(::ArrayW<uint8_t> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, buffer);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(::ArrayW<uint8_t> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, ch);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(::ArrayW<::Il2CppChar> chars) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chars)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, chars);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(double value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(uint value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.IO.BinaryWriter.Write
void System::IO::BinaryWriter::Write(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.IO.BinaryWriter.Write7BitEncodedInt
void System::IO::BinaryWriter::Write7BitEncodedInt(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::BinaryWriter::Write7BitEncodedInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write7BitEncodedInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.Directory
#include "System/IO/Directory.hpp"
// Including type: System.IO.Directory/System.IO.SearchData
#include "System/IO/Directory_SearchData.hpp"
// Including type: System.IO.SearchOption
#include "System/IO/SearchOption.hpp"
// Including type: System.IO.DirectoryInfo
#include "System/IO/DirectoryInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.Directory.GetFiles
::ArrayW<::Il2CppString*> System::IO::Directory::GetFiles(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Directory::GetFiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "GetFiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Directory.GetFiles
::ArrayW<::Il2CppString*> System::IO::Directory::GetFiles(::Il2CppString* path, ::Il2CppString* searchPattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Directory::GetFiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "GetFiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(searchPattern)})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, searchPattern);
}
// Autogenerated method: System.IO.Directory.GetFiles
::ArrayW<::Il2CppString*> System::IO::Directory::GetFiles(::Il2CppString* path, ::Il2CppString* searchPattern, System::IO::SearchOption searchOption) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Directory::GetFiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "GetFiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(searchPattern), ::il2cpp_utils::ExtractType(searchOption)})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, searchPattern, searchOption);
}
// Autogenerated method: System.IO.Directory.InternalGetFiles
::ArrayW<::Il2CppString*> System::IO::Directory::InternalGetFiles(::Il2CppString* path, ::Il2CppString* searchPattern, System::IO::SearchOption searchOption) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Directory::InternalGetFiles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "InternalGetFiles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(searchPattern), ::il2cpp_utils::ExtractType(searchOption)})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, searchPattern, searchOption);
}
// Autogenerated method: System.IO.Directory.GetDirectories
::ArrayW<::Il2CppString*> System::IO::Directory::GetDirectories(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Directory::GetDirectories");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "GetDirectories", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Directory.GetDirectories
::ArrayW<::Il2CppString*> System::IO::Directory::GetDirectories(::Il2CppString* path, ::Il2CppString* searchPattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Directory::GetDirectories");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "GetDirectories", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(searchPattern)})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, searchPattern);
}
// Autogenerated method: System.IO.Directory.InternalGetDirectories
::ArrayW<::Il2CppString*> System::IO::Directory::InternalGetDirectories(::Il2CppString* path, ::Il2CppString* searchPattern, System::IO::SearchOption searchOption) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Directory::InternalGetDirectories");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "InternalGetDirectories", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(searchPattern), ::il2cpp_utils::ExtractType(searchOption)})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, searchPattern, searchOption);
}
// Autogenerated method: System.IO.Directory.GetFileSystemEntries
::ArrayW<::Il2CppString*> System::IO::Directory::GetFileSystemEntries(::Il2CppString* path, ::Il2CppString* searchPattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Directory::GetFileSystemEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "GetFileSystemEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(searchPattern)})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, searchPattern);
}
// Autogenerated method: System.IO.Directory.InternalGetFileSystemEntries
::ArrayW<::Il2CppString*> System::IO::Directory::InternalGetFileSystemEntries(::Il2CppString* path, ::Il2CppString* searchPattern, System::IO::SearchOption searchOption) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Directory::InternalGetFileSystemEntries");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "InternalGetFileSystemEntries", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(searchPattern), ::il2cpp_utils::ExtractType(searchOption)})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, searchPattern, searchOption);
}
// Autogenerated method: System.IO.Directory.InternalGetFileDirectoryNames
::ArrayW<::Il2CppString*> System::IO::Directory::InternalGetFileDirectoryNames(::Il2CppString* path, ::Il2CppString* userPathOriginal, ::Il2CppString* searchPattern, bool includeFiles, bool includeDirs, System::IO::SearchOption searchOption, bool checkHost) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Directory::InternalGetFileDirectoryNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "InternalGetFileDirectoryNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(userPathOriginal), ::il2cpp_utils::ExtractType(searchPattern), ::il2cpp_utils::ExtractType(includeFiles), ::il2cpp_utils::ExtractType(includeDirs), ::il2cpp_utils::ExtractType(searchOption), ::il2cpp_utils::ExtractType(checkHost)})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, userPathOriginal, searchPattern, includeFiles, includeDirs, searchOption, checkHost);
}
// Autogenerated method: System.IO.Directory.CreateDirectory
System::IO::DirectoryInfo* System::IO::Directory::CreateDirectory(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Directory::CreateDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "CreateDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<System::IO::DirectoryInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Directory.CreateDirectoriesInternal
System::IO::DirectoryInfo* System::IO::Directory::CreateDirectoriesInternal(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Directory::CreateDirectoriesInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "CreateDirectoriesInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<System::IO::DirectoryInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Directory.Delete
void System::IO::Directory::Delete(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Directory::Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Directory.RecursiveDelete
void System::IO::Directory::RecursiveDelete(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Directory::RecursiveDelete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "RecursiveDelete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Directory.Delete
void System::IO::Directory::Delete(::Il2CppString* path, bool recursive) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Directory::Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(recursive)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, recursive);
}
// Autogenerated method: System.IO.Directory.Exists
bool System::IO::Directory::Exists(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Directory::Exists");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "Exists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Directory.GetCurrentDirectory
::Il2CppString* System::IO::Directory::GetCurrentDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Directory::GetCurrentDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "GetCurrentDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Directory.InsecureGetCurrentDirectory
::Il2CppString* System::IO::Directory::InsecureGetCurrentDirectory() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Directory::InsecureGetCurrentDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "InsecureGetCurrentDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Directory.GetLogicalDrives
::ArrayW<::Il2CppString*> System::IO::Directory::GetLogicalDrives() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Directory::GetLogicalDrives");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "GetLogicalDrives", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Directory.IsRootDirectory
bool System::IO::Directory::IsRootDirectory(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Directory::IsRootDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "IsRootDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Directory.GetParent
System::IO::DirectoryInfo* System::IO::Directory::GetParent(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Directory::GetParent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "GetParent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<System::IO::DirectoryInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Directory.GetDemandDir
::Il2CppString* System::IO::Directory::GetDemandDir(::Il2CppString* fullPath, bool thisDirOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Directory::GetDemandDir");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Directory", "GetDemandDir", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fullPath), ::il2cpp_utils::ExtractType(thisDirOnly)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, fullPath, thisDirOnly);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.Directory/System.IO.SearchData
#include "System/IO/Directory_SearchData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.String fullPath
::Il2CppString*& System::IO::Directory::SearchData::dyn_fullPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Directory::SearchData::dyn_fullPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fullPath"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.String userPath
::Il2CppString*& System::IO::Directory::SearchData::dyn_userPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Directory::SearchData::dyn_userPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userPath"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.IO.SearchOption searchOption
System::IO::SearchOption& System::IO::Directory::SearchData::dyn_searchOption() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Directory::SearchData::dyn_searchOption");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "searchOption"))->offset;
  return *reinterpret_cast<System::IO::SearchOption*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.DirectoryNotFoundException
#include "System/IO/DirectoryNotFoundException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.DriveNotFoundException
#include "System/IO/DriveNotFoundException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.EndOfStreamException
#include "System/IO/EndOfStreamException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.FileInfo
#include "System/IO/FileInfo.hpp"
// Including type: System.IO.StreamWriter
#include "System/IO/StreamWriter.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _name
::Il2CppString*& System::IO::FileInfo::dyn__name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileInfo::dyn__name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_name"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.FileInfo.get_Length
int64_t System::IO::FileInfo::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileInfo::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileInfo.get_DirectoryName
::Il2CppString* System::IO::FileInfo::get_DirectoryName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileInfo::get_DirectoryName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DirectoryName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileInfo.Init
void System::IO::FileInfo::Init(::Il2CppString* fileName, bool checkHost) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileInfo::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fileName), ::il2cpp_utils::ExtractType(checkHost)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, fileName, checkHost);
}
// Autogenerated method: System.IO.FileInfo.GetDisplayPath
::Il2CppString* System::IO::FileInfo::GetDisplayPath(::Il2CppString* originalPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileInfo::GetDisplayPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDisplayPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(originalPath)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method, originalPath);
}
// Autogenerated method: System.IO.FileInfo.CreateText
System::IO::StreamWriter* System::IO::FileInfo::CreateText() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileInfo::CreateText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IO::StreamWriter*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileInfo.AppendText
System::IO::StreamWriter* System::IO::FileInfo::AppendText() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileInfo::AppendText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IO::StreamWriter*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileInfo.get_Name
::Il2CppString* System::IO::FileInfo::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileInfo::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileInfo.get_Exists
bool System::IO::FileInfo::get_Exists() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileInfo::get_Exists");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Exists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileInfo.Delete
void System::IO::FileInfo::Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileInfo::Delete");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileInfo.ToString
::Il2CppString* System::IO::FileInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileInfo::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.FileLoadException
#include "System/IO/FileLoadException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _fileName
::Il2CppString*& System::IO::FileLoadException::dyn__fileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileLoadException::dyn__fileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fileName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _fusionLog
::Il2CppString*& System::IO::FileLoadException::dyn__fusionLog() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileLoadException::dyn__fusionLog");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fusionLog"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.FileLoadException.get_FusionLog
::Il2CppString* System::IO::FileLoadException::get_FusionLog() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileLoadException::get_FusionLog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FusionLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileLoadException.SetMessageField
void System::IO::FileLoadException::SetMessageField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileLoadException::SetMessageField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMessageField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileLoadException.FormatFileLoadExceptionMessage
::Il2CppString* System::IO::FileLoadException::FormatFileLoadExceptionMessage(::Il2CppString* fileName, int hResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileLoadException::FormatFileLoadExceptionMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "FileLoadException", "FormatFileLoadExceptionMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fileName), ::il2cpp_utils::ExtractType(hResult)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, fileName, hResult);
}
// Autogenerated method: System.IO.FileLoadException.get_Message
::Il2CppString* System::IO::FileLoadException::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileLoadException::get_Message");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileLoadException.ToString
::Il2CppString* System::IO::FileLoadException::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileLoadException::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileLoadException.GetObjectData
void System::IO::FileLoadException::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileLoadException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, info, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.FileNotFoundException
#include "System/IO/FileNotFoundException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _fileName
::Il2CppString*& System::IO::FileNotFoundException::dyn__fileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileNotFoundException::dyn__fileName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fileName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _fusionLog
::Il2CppString*& System::IO::FileNotFoundException::dyn__fusionLog() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileNotFoundException::dyn__fusionLog");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fusionLog"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.FileNotFoundException.get_FusionLog
::Il2CppString* System::IO::FileNotFoundException::get_FusionLog() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileNotFoundException::get_FusionLog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FusionLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileNotFoundException.SetMessageField
void System::IO::FileNotFoundException::SetMessageField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileNotFoundException::SetMessageField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMessageField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileNotFoundException.get_Message
::Il2CppString* System::IO::FileNotFoundException::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileNotFoundException::get_Message");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileNotFoundException.ToString
::Il2CppString* System::IO::FileNotFoundException::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileNotFoundException::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileNotFoundException.GetObjectData
void System::IO::FileNotFoundException::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileNotFoundException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, info, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.FileSystemEnumerableFactory
#include "System/IO/FileSystemEnumerableFactory.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.IO.SearchOption
#include "System/IO/SearchOption.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.FileSystemEnumerableFactory.CreateFileNameIterator
System::Collections::Generic::IEnumerable_1<::Il2CppString*>* System::IO::FileSystemEnumerableFactory::CreateFileNameIterator(::Il2CppString* path, ::Il2CppString* originalUserPath, ::Il2CppString* searchPattern, bool includeFiles, bool includeDirs, System::IO::SearchOption searchOption, bool checkHost) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileSystemEnumerableFactory::CreateFileNameIterator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "FileSystemEnumerableFactory", "CreateFileNameIterator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(originalUserPath), ::il2cpp_utils::ExtractType(searchPattern), ::il2cpp_utils::ExtractType(includeFiles), ::il2cpp_utils::ExtractType(includeDirs), ::il2cpp_utils::ExtractType(searchOption), ::il2cpp_utils::ExtractType(checkHost)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, originalUserPath, searchPattern, includeFiles, includeDirs, searchOption, checkHost);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.StringResultHandler
#include "System/IO/StringResultHandler.hpp"
// Including type: System.IO.SearchResult
#include "System/IO/SearchResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _includeFiles
bool& System::IO::StringResultHandler::dyn__includeFiles() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StringResultHandler::dyn__includeFiles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_includeFiles"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _includeDirs
bool& System::IO::StringResultHandler::dyn__includeDirs() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StringResultHandler::dyn__includeDirs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_includeDirs"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.StringResultHandler.CreateObject
::Il2CppString* System::IO::StringResultHandler::CreateObject(System::IO::SearchResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StringResultHandler::CreateObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method, result);
}
// Autogenerated method: System.IO.StringResultHandler.IsResultIncluded
bool System::IO::StringResultHandler::IsResultIncluded(System::IO::SearchResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StringResultHandler::IsResultIncluded");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsResultIncluded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.SearchResult
#include "System/IO/SearchResult.hpp"
// Including type: Microsoft.Win32.Win32Native/Microsoft.Win32.WIN32_FIND_DATA
#include "Microsoft/Win32/Win32Native_WIN32_FIND_DATA.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String fullPath
::Il2CppString*& System::IO::SearchResult::dyn_fullPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::SearchResult::dyn_fullPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fullPath"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String userPath
::Il2CppString*& System::IO::SearchResult::dyn_userPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::SearchResult::dyn_userPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userPath"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Microsoft.Win32.Win32Native/Microsoft.Win32.WIN32_FIND_DATA findData
Microsoft::Win32::Win32Native::WIN32_FIND_DATA*& System::IO::SearchResult::dyn_findData() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::SearchResult::dyn_findData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "findData"))->offset;
  return *reinterpret_cast<Microsoft::Win32::Win32Native::WIN32_FIND_DATA**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.SearchResult.get_UserPath
::Il2CppString* System::IO::SearchResult::get_UserPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::SearchResult::get_UserPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.SearchResult.get_FindData
Microsoft::Win32::Win32Native::WIN32_FIND_DATA* System::IO::SearchResult::get_FindData() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::SearchResult::get_FindData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FindData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Microsoft::Win32::Win32Native::WIN32_FIND_DATA*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.FileSystemEnumerableHelpers
#include "System/IO/FileSystemEnumerableHelpers.hpp"
// Including type: Microsoft.Win32.Win32Native/Microsoft.Win32.WIN32_FIND_DATA
#include "Microsoft/Win32/Win32Native_WIN32_FIND_DATA.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.FileSystemEnumerableHelpers.IsDir
bool System::IO::FileSystemEnumerableHelpers::IsDir(Microsoft::Win32::Win32Native::WIN32_FIND_DATA* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileSystemEnumerableHelpers::IsDir");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "FileSystemEnumerableHelpers", "IsDir", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, data);
}
// Autogenerated method: System.IO.FileSystemEnumerableHelpers.IsFile
bool System::IO::FileSystemEnumerableHelpers::IsFile(Microsoft::Win32::Win32Native::WIN32_FIND_DATA* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileSystemEnumerableHelpers::IsFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "FileSystemEnumerableHelpers", "IsFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.FileSystemInfo
#include "System/IO/FileSystemInfo.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IO.MonoIOStat _data
System::IO::MonoIOStat& System::IO::FileSystemInfo::dyn__data() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileSystemInfo::dyn__data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_data"))->offset;
  return *reinterpret_cast<System::IO::MonoIOStat*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _dataInitialised
int& System::IO::FileSystemInfo::dyn__dataInitialised() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileSystemInfo::dyn__dataInitialised");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataInitialised"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.String FullPath
::Il2CppString*& System::IO::FileSystemInfo::dyn_FullPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileSystemInfo::dyn_FullPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FullPath"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.String OriginalPath
::Il2CppString*& System::IO::FileSystemInfo::dyn_OriginalPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileSystemInfo::dyn_OriginalPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OriginalPath"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _displayPath
::Il2CppString*& System::IO::FileSystemInfo::dyn__displayPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileSystemInfo::dyn__displayPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_displayPath"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.FileSystemInfo.get_FullName
::Il2CppString* System::IO::FileSystemInfo::get_FullName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileSystemInfo::get_FullName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FullName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileSystemInfo.get_Name
::Il2CppString* System::IO::FileSystemInfo::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileSystemInfo::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileSystemInfo.get_Exists
bool System::IO::FileSystemInfo::get_Exists() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileSystemInfo::get_Exists");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Exists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileSystemInfo.get_CreationTime
System::DateTime System::IO::FileSystemInfo::get_CreationTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileSystemInfo::get_CreationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileSystemInfo.get_CreationTimeUtc
System::DateTime System::IO::FileSystemInfo::get_CreationTimeUtc() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileSystemInfo::get_CreationTimeUtc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CreationTimeUtc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileSystemInfo.get_LastAccessTime
System::DateTime System::IO::FileSystemInfo::get_LastAccessTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileSystemInfo::get_LastAccessTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LastAccessTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileSystemInfo.get_LastAccessTimeUtc
System::DateTime System::IO::FileSystemInfo::get_LastAccessTimeUtc() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileSystemInfo::get_LastAccessTimeUtc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LastAccessTimeUtc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileSystemInfo.get_Attributes
System::IO::FileAttributes System::IO::FileSystemInfo::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileSystemInfo::get_Attributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IO::FileAttributes, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileSystemInfo.get_DisplayPath
::Il2CppString* System::IO::FileSystemInfo::get_DisplayPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileSystemInfo::get_DisplayPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DisplayPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileSystemInfo.set_DisplayPath
void System::IO::FileSystemInfo::set_DisplayPath(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileSystemInfo::set_DisplayPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DisplayPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.IO.FileSystemInfo.Delete
void System::IO::FileSystemInfo::Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileSystemInfo::Delete");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileSystemInfo.Refresh
void System::IO::FileSystemInfo::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileSystemInfo::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileSystemInfo.GetObjectData
void System::IO::FileSystemInfo::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileSystemInfo::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, info, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.IOException
#include "System/IO/IOException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _maybeFullPath
::Il2CppString*& System::IO::IOException::dyn__maybeFullPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::IOException::dyn__maybeFullPath");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maybeFullPath"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.MemoryStream
#include "System/IO/MemoryStream.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _buffer
::ArrayW<uint8_t>& System::IO::MemoryStream::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MemoryStream::dyn__buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _origin
int& System::IO::MemoryStream::dyn__origin() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MemoryStream::dyn__origin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_origin"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _position
int& System::IO::MemoryStream::dyn__position() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MemoryStream::dyn__position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_position"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _length
int& System::IO::MemoryStream::dyn__length() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MemoryStream::dyn__length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _capacity
int& System::IO::MemoryStream::dyn__capacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MemoryStream::dyn__capacity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capacity"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _expandable
bool& System::IO::MemoryStream::dyn__expandable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MemoryStream::dyn__expandable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_expandable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _writable
bool& System::IO::MemoryStream::dyn__writable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MemoryStream::dyn__writable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_writable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _exposable
bool& System::IO::MemoryStream::dyn__exposable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MemoryStream::dyn__exposable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_exposable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isOpen
bool& System::IO::MemoryStream::dyn__isOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MemoryStream::dyn__isOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task`1<System.Int32> _lastReadTask
System::Threading::Tasks::Task_1<int>*& System::IO::MemoryStream::dyn__lastReadTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MemoryStream::dyn__lastReadTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastReadTask"))->offset;
  return *reinterpret_cast<System::Threading::Tasks::Task_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.MemoryStream.get_Capacity
int System::IO::MemoryStream::get_Capacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MemoryStream::get_Capacity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Capacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.set_Capacity
void System::IO::MemoryStream::set_Capacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MemoryStream::set_Capacity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Capacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.IO.MemoryStream.EnsureWriteable
void System::IO::MemoryStream::EnsureWriteable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MemoryStream::EnsureWriteable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureWriteable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.EnsureCapacity
bool System::IO::MemoryStream::EnsureCapacity(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MemoryStream::EnsureCapacity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureCapacity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.IO.MemoryStream.GetBuffer
::ArrayW<uint8_t> System::IO::MemoryStream::GetBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MemoryStream::GetBuffer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<uint8_t>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.InternalGetBuffer
::ArrayW<uint8_t> System::IO::MemoryStream::InternalGetBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MemoryStream::InternalGetBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalGetBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<uint8_t>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.InternalGetPosition
int System::IO::MemoryStream::InternalGetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MemoryStream::InternalGetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalGetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.InternalReadInt32
int System::IO::MemoryStream::InternalReadInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MemoryStream::InternalReadInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalReadInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.InternalEmulateRead
int System::IO::MemoryStream::InternalEmulateRead(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MemoryStream::InternalEmulateRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalEmulateRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, count);
}
// Autogenerated method: System.IO.MemoryStream.ToArray
::ArrayW<uint8_t> System::IO::MemoryStream::ToArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MemoryStream::ToArray");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<uint8_t>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.WriteTo
void System::IO::MemoryStream::WriteTo(System::IO::Stream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MemoryStream::WriteTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, stream);
}
// Autogenerated method: System.IO.MemoryStream.get_CanRead
bool System::IO::MemoryStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MemoryStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.get_CanSeek
bool System::IO::MemoryStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MemoryStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanSeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.get_CanWrite
bool System::IO::MemoryStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MemoryStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.get_Length
int64_t System::IO::MemoryStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MemoryStream::get_Length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.get_Position
int64_t System::IO::MemoryStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MemoryStream::get_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.set_Position
void System::IO::MemoryStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MemoryStream::set_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.IO.MemoryStream.Dispose
void System::IO::MemoryStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MemoryStream::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, disposing);
}
// Autogenerated method: System.IO.MemoryStream.Flush
void System::IO::MemoryStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MemoryStream::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.Read
int System::IO::MemoryStream::Read(ByRef<::ArrayW<uint8_t>> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MemoryStream::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, byref(buffer), offset, count);
}
// Autogenerated method: System.IO.MemoryStream.ReadAsync
System::Threading::Tasks::Task_1<int>* System::IO::MemoryStream::ReadAsync(::ArrayW<uint8_t> buffer, int offset, int count, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MemoryStream::ReadAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<int>*, false>(___instance_arg, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.MemoryStream.ReadByte
int System::IO::MemoryStream::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MemoryStream::ReadByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.MemoryStream.CopyToAsync
System::Threading::Tasks::Task* System::IO::MemoryStream::CopyToAsync(System::IO::Stream* destination, int bufferSize, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MemoryStream::CopyToAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyToAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(bufferSize), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method, destination, bufferSize, cancellationToken);
}
// Autogenerated method: System.IO.MemoryStream.Seek
int64_t System::IO::MemoryStream::Seek(int64_t offset, System::IO::SeekOrigin loc) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MemoryStream::Seek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(loc)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method, offset, loc);
}
// Autogenerated method: System.IO.MemoryStream.SetLength
void System::IO::MemoryStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MemoryStream::SetLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.IO.MemoryStream.Write
void System::IO::MemoryStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MemoryStream::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.MemoryStream.WriteAsync
System::Threading::Tasks::Task* System::IO::MemoryStream::WriteAsync(::ArrayW<uint8_t> buffer, int offset, int count, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MemoryStream::WriteAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.MemoryStream.WriteByte
void System::IO::MemoryStream::WriteByte(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MemoryStream::WriteByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.PathTooLongException
#include "System/IO/PathTooLongException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.PinnedBufferMemoryStream
#include "System/IO/PinnedBufferMemoryStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _array
::ArrayW<uint8_t>& System::IO::PinnedBufferMemoryStream::dyn__array() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::PinnedBufferMemoryStream::dyn__array");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_array"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.GCHandle _pinningHandle
System::Runtime::InteropServices::GCHandle& System::IO::PinnedBufferMemoryStream::dyn__pinningHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::PinnedBufferMemoryStream::dyn__pinningHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pinningHandle"))->offset;
  return *reinterpret_cast<System::Runtime::InteropServices::GCHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.PinnedBufferMemoryStream.Finalize
void System::IO::PinnedBufferMemoryStream::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::PinnedBufferMemoryStream::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.PinnedBufferMemoryStream.Dispose
void System::IO::PinnedBufferMemoryStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::PinnedBufferMemoryStream::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, disposing);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.IO.Stream/System.IO.ReadWriteParameters
#include "System/IO/Stream_ReadWriteParameters.hpp"
// Including type: System.IO.Stream/System.IO.ReadWriteTask
#include "System/IO/Stream_ReadWriteTask.hpp"
// Including type: System.IO.Stream/System.IO.NullStream
#include "System/IO/Stream_NullStream.hpp"
// Including type: System.IO.Stream/System.IO.SynchronousAsyncResult
#include "System/IO/Stream_SynchronousAsyncResult.hpp"
// Including type: System.IO.Stream/System.IO.<>c
#include "System/IO/Stream_--c.hpp"
// Including type: System.IO.Stream/System.IO.<CopyToAsyncInternal>d__27
#include "System/IO/Stream_-CopyToAsyncInternal-d__27.hpp"
// Including type: System.Threading.SemaphoreSlim
#include "System/Threading/SemaphoreSlim.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IO.Stream Null
System::IO::Stream* System::IO::Stream::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::Stream*>("System.IO", "Stream", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IO.Stream Null
void System::IO::Stream::_set_Null(System::IO::Stream* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Stream", "Null", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 _DefaultCopyBufferSize
int System::IO::Stream::_get__DefaultCopyBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::_get__DefaultCopyBufferSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.IO", "Stream", "_DefaultCopyBufferSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 _DefaultCopyBufferSize
void System::IO::Stream::_set__DefaultCopyBufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::_set__DefaultCopyBufferSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Stream", "_DefaultCopyBufferSize", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream/System.IO.ReadWriteTask _activeReadWriteTask
System::IO::Stream::ReadWriteTask*& System::IO::Stream::dyn__activeReadWriteTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::dyn__activeReadWriteTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeReadWriteTask"))->offset;
  return *reinterpret_cast<System::IO::Stream::ReadWriteTask**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.SemaphoreSlim _asyncActiveSemaphore
System::Threading::SemaphoreSlim*& System::IO::Stream::dyn__asyncActiveSemaphore() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::dyn__asyncActiveSemaphore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_asyncActiveSemaphore"))->offset;
  return *reinterpret_cast<System::Threading::SemaphoreSlim**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Stream.get_CanRead
bool System::IO::Stream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.Stream.get_CanSeek
bool System::IO::Stream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanSeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.Stream.get_CanWrite
bool System::IO::Stream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.Stream.get_Length
int64_t System::IO::Stream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::get_Length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.Stream.get_Position
int64_t System::IO::Stream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::get_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.Stream.set_Position
void System::IO::Stream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::set_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.IO.Stream.get_ReadTimeout
int System::IO::Stream::get_ReadTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::get_ReadTimeout");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReadTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.Stream.get_WriteTimeout
int System::IO::Stream::get_WriteTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::get_WriteTimeout");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WriteTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.Stream..cctor
void System::IO::Stream::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Stream", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Stream.EnsureAsyncActiveSemaphoreInitialized
System::Threading::SemaphoreSlim* System::IO::Stream::EnsureAsyncActiveSemaphoreInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::EnsureAsyncActiveSemaphoreInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureAsyncActiveSemaphoreInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::SemaphoreSlim*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.Stream.CopyToAsync
System::Threading::Tasks::Task* System::IO::Stream::CopyToAsync(System::IO::Stream* destination) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::CopyToAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyToAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method, destination);
}
// Autogenerated method: System.IO.Stream.CopyToAsync
System::Threading::Tasks::Task* System::IO::Stream::CopyToAsync(System::IO::Stream* destination, int bufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::CopyToAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyToAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(bufferSize)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method, destination, bufferSize);
}
// Autogenerated method: System.IO.Stream.CopyToAsync
System::Threading::Tasks::Task* System::IO::Stream::CopyToAsync(System::IO::Stream* destination, int bufferSize, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::CopyToAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyToAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(bufferSize), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method, destination, bufferSize, cancellationToken);
}
// Autogenerated method: System.IO.Stream.CopyToAsyncInternal
System::Threading::Tasks::Task* System::IO::Stream::CopyToAsyncInternal(System::IO::Stream* destination, int bufferSize, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::CopyToAsyncInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyToAsyncInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destination), ::il2cpp_utils::ExtractType(bufferSize), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method, destination, bufferSize, cancellationToken);
}
// Autogenerated method: System.IO.Stream.Close
void System::IO::Stream::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.Stream.Dispose
void System::IO::Stream::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.Stream.Dispose
void System::IO::Stream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, disposing);
}
// Autogenerated method: System.IO.Stream.Flush
void System::IO::Stream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.Stream.BeginRead
System::IAsyncResult* System::IO::Stream::BeginRead(::ArrayW<uint8_t> buffer, int offset, int count, System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::BeginRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, buffer, offset, count, callback, state);
}
// Autogenerated method: System.IO.Stream.BeginReadInternal
System::IAsyncResult* System::IO::Stream::BeginReadInternal(::ArrayW<uint8_t> buffer, int offset, int count, System::AsyncCallback* callback, ::Il2CppObject* state, bool serializeAsynchronously) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::BeginReadInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginReadInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(serializeAsynchronously)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, buffer, offset, count, callback, state, serializeAsynchronously);
}
// Autogenerated method: System.IO.Stream.EndRead
int System::IO::Stream::EndRead(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::EndRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, asyncResult);
}
// Autogenerated method: System.IO.Stream.ReadAsync
System::Threading::Tasks::Task_1<int>* System::IO::Stream::ReadAsync(::ArrayW<uint8_t> buffer, int offset, int count, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::ReadAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<int>*, false>(___instance_arg, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.Stream.BeginEndReadAsync
System::Threading::Tasks::Task_1<int>* System::IO::Stream::BeginEndReadAsync(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::BeginEndReadAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginEndReadAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<int>*, false>(___instance_arg, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Stream.BeginWrite
System::IAsyncResult* System::IO::Stream::BeginWrite(::ArrayW<uint8_t> buffer, int offset, int count, System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::BeginWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, buffer, offset, count, callback, state);
}
// Autogenerated method: System.IO.Stream.BeginWriteInternal
System::IAsyncResult* System::IO::Stream::BeginWriteInternal(::ArrayW<uint8_t> buffer, int offset, int count, System::AsyncCallback* callback, ::Il2CppObject* state, bool serializeAsynchronously) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::BeginWriteInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginWriteInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(serializeAsynchronously)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, buffer, offset, count, callback, state, serializeAsynchronously);
}
// Autogenerated method: System.IO.Stream.RunReadWriteTaskWhenReady
void System::IO::Stream::RunReadWriteTaskWhenReady(System::Threading::Tasks::Task* asyncWaiter, System::IO::Stream::ReadWriteTask* readWriteTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::RunReadWriteTaskWhenReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunReadWriteTaskWhenReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncWaiter), ::il2cpp_utils::ExtractType(readWriteTask)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, asyncWaiter, readWriteTask);
}
// Autogenerated method: System.IO.Stream.RunReadWriteTask
void System::IO::Stream::RunReadWriteTask(System::IO::Stream::ReadWriteTask* readWriteTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::RunReadWriteTask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RunReadWriteTask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(readWriteTask)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, readWriteTask);
}
// Autogenerated method: System.IO.Stream.EndWrite
void System::IO::Stream::EndWrite(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::EndWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, asyncResult);
}
// Autogenerated method: System.IO.Stream.WriteAsync
System::Threading::Tasks::Task* System::IO::Stream::WriteAsync(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::WriteAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Stream.WriteAsync
System::Threading::Tasks::Task* System::IO::Stream::WriteAsync(::ArrayW<uint8_t> buffer, int offset, int count, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::WriteAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.Stream.BeginEndWriteAsync
System::Threading::Tasks::Task* System::IO::Stream::BeginEndWriteAsync(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::BeginEndWriteAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginEndWriteAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Stream.Seek
int64_t System::IO::Stream::Seek(int64_t offset, System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::Seek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method, offset, origin);
}
// Autogenerated method: System.IO.Stream.SetLength
void System::IO::Stream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::SetLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.IO.Stream.Read
int System::IO::Stream::Read(ByRef<::ArrayW<uint8_t>> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, byref(buffer), offset, count);
}
// Autogenerated method: System.IO.Stream.ReadByte
int System::IO::Stream::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::ReadByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.Stream.Write
void System::IO::Stream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Stream.WriteByte
void System::IO::Stream::WriteByte(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::WriteByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.IO.Stream.BlockingBeginRead
System::IAsyncResult* System::IO::Stream::BlockingBeginRead(::ArrayW<uint8_t> buffer, int offset, int count, System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::BlockingBeginRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlockingBeginRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, buffer, offset, count, callback, state);
}
// Autogenerated method: System.IO.Stream.BlockingEndRead
int System::IO::Stream::BlockingEndRead(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::BlockingEndRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Stream", "BlockingEndRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, asyncResult);
}
// Autogenerated method: System.IO.Stream.BlockingBeginWrite
System::IAsyncResult* System::IO::Stream::BlockingBeginWrite(::ArrayW<uint8_t> buffer, int offset, int count, System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::BlockingBeginWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BlockingBeginWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, buffer, offset, count, callback, state);
}
// Autogenerated method: System.IO.Stream.BlockingEndWrite
void System::IO::Stream::BlockingEndWrite(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::BlockingEndWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Stream", "BlockingEndWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, asyncResult);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.Stream/System.IO.ReadWriteTask
#include "System/IO/Stream_ReadWriteTask.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Threading.ExecutionContext
#include "System/Threading/ExecutionContext.hpp"
// Including type: System.Threading.ContextCallback
#include "System/Threading/ContextCallback.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Threading.ContextCallback s_invokeAsyncCallback
System::Threading::ContextCallback* System::IO::Stream::ReadWriteTask::_get_s_invokeAsyncCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::ReadWriteTask::_get_s_invokeAsyncCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::ContextCallback*>("System.IO", "Stream/ReadWriteTask", "s_invokeAsyncCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.ContextCallback s_invokeAsyncCallback
void System::IO::Stream::ReadWriteTask::_set_s_invokeAsyncCallback(System::Threading::ContextCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::ReadWriteTask::_set_s_invokeAsyncCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Stream/ReadWriteTask", "s_invokeAsyncCallback", value));
}
// Autogenerated instance field getter
// Get instance field: readonly System.Boolean _isRead
bool& System::IO::Stream::ReadWriteTask::dyn__isRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::ReadWriteTask::dyn__isRead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isRead"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.IO.Stream _stream
System::IO::Stream*& System::IO::Stream::ReadWriteTask::dyn__stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::ReadWriteTask::dyn__stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stream"))->offset;
  return *reinterpret_cast<System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Byte[] _buffer
::ArrayW<uint8_t>& System::IO::Stream::ReadWriteTask::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::ReadWriteTask::dyn__buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _offset
int& System::IO::Stream::ReadWriteTask::dyn__offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::ReadWriteTask::dyn__offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 _count
int& System::IO::Stream::ReadWriteTask::dyn__count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::ReadWriteTask::dyn__count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.AsyncCallback _callback
System::AsyncCallback*& System::IO::Stream::ReadWriteTask::dyn__callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::ReadWriteTask::dyn__callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_callback"))->offset;
  return *reinterpret_cast<System::AsyncCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ExecutionContext _context
System::Threading::ExecutionContext*& System::IO::Stream::ReadWriteTask::dyn__context() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::ReadWriteTask::dyn__context");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_context"))->offset;
  return *reinterpret_cast<System::Threading::ExecutionContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Stream/System.IO.ReadWriteTask.ClearBeginState
void System::IO::Stream::ReadWriteTask::ClearBeginState() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::ReadWriteTask::ClearBeginState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearBeginState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.Stream/System.IO.ReadWriteTask.InvokeAsyncCallback
void System::IO::Stream::ReadWriteTask::InvokeAsyncCallback(::Il2CppObject* completedTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::ReadWriteTask::InvokeAsyncCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Stream/ReadWriteTask", "InvokeAsyncCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(completedTask)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, completedTask);
}
// Autogenerated method: System.IO.Stream/System.IO.ReadWriteTask.System.Threading.Tasks.ITaskCompletionAction.Invoke
void System::IO::Stream::ReadWriteTask::System_Threading_Tasks_ITaskCompletionAction_Invoke(System::Threading::Tasks::Task* completingTask) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::ReadWriteTask::System.Threading.Tasks.ITaskCompletionAction.Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Threading.Tasks.ITaskCompletionAction.Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(completingTask)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, completingTask);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.Stream/System.IO.NullStream
#include "System/IO/Stream_NullStream.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Threading.Tasks.Task`1<System.Int32> s_nullReadTask
System::Threading::Tasks::Task_1<int>* System::IO::Stream::NullStream::_get_s_nullReadTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::NullStream::_get_s_nullReadTask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::Tasks::Task_1<int>*>("System.IO", "Stream/NullStream", "s_nullReadTask"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.Tasks.Task`1<System.Int32> s_nullReadTask
void System::IO::Stream::NullStream::_set_s_nullReadTask(System::Threading::Tasks::Task_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::NullStream::_set_s_nullReadTask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Stream/NullStream", "s_nullReadTask", value));
}
// Autogenerated method: System.IO.Stream/System.IO.NullStream.get_CanRead
bool System::IO::Stream::NullStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::NullStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.Stream/System.IO.NullStream.get_CanWrite
bool System::IO::Stream::NullStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::NullStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.Stream/System.IO.NullStream.get_CanSeek
bool System::IO::Stream::NullStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::NullStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanSeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.Stream/System.IO.NullStream.get_Length
int64_t System::IO::Stream::NullStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::NullStream::get_Length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.Stream/System.IO.NullStream.get_Position
int64_t System::IO::Stream::NullStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::NullStream::get_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.Stream/System.IO.NullStream.set_Position
void System::IO::Stream::NullStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::NullStream::set_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.IO.Stream/System.IO.NullStream.Dispose
void System::IO::Stream::NullStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::NullStream::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, disposing);
}
// Autogenerated method: System.IO.Stream/System.IO.NullStream.Flush
void System::IO::Stream::NullStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::NullStream::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.Stream/System.IO.NullStream.BeginRead
System::IAsyncResult* System::IO::Stream::NullStream::BeginRead(::ArrayW<uint8_t> buffer, int offset, int count, System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::NullStream::BeginRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, buffer, offset, count, callback, state);
}
// Autogenerated method: System.IO.Stream/System.IO.NullStream.EndRead
int System::IO::Stream::NullStream::EndRead(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::NullStream::EndRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, asyncResult);
}
// Autogenerated method: System.IO.Stream/System.IO.NullStream.BeginWrite
System::IAsyncResult* System::IO::Stream::NullStream::BeginWrite(::ArrayW<uint8_t> buffer, int offset, int count, System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::NullStream::BeginWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, buffer, offset, count, callback, state);
}
// Autogenerated method: System.IO.Stream/System.IO.NullStream.EndWrite
void System::IO::Stream::NullStream::EndWrite(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::NullStream::EndWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, asyncResult);
}
// Autogenerated method: System.IO.Stream/System.IO.NullStream.Read
int System::IO::Stream::NullStream::Read(ByRef<::ArrayW<uint8_t>> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::NullStream::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, byref(buffer), offset, count);
}
// Autogenerated method: System.IO.Stream/System.IO.NullStream.ReadAsync
System::Threading::Tasks::Task_1<int>* System::IO::Stream::NullStream::ReadAsync(::ArrayW<uint8_t> buffer, int offset, int count, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::NullStream::ReadAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<int>*, false>(___instance_arg, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.Stream/System.IO.NullStream.ReadByte
int System::IO::Stream::NullStream::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::NullStream::ReadByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.Stream/System.IO.NullStream.Write
void System::IO::Stream::NullStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::NullStream::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.Stream/System.IO.NullStream.WriteAsync
System::Threading::Tasks::Task* System::IO::Stream::NullStream::WriteAsync(::ArrayW<uint8_t> buffer, int offset, int count, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::NullStream::WriteAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.Stream/System.IO.NullStream.WriteByte
void System::IO::Stream::NullStream::WriteByte(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::NullStream::WriteByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.IO.Stream/System.IO.NullStream.Seek
int64_t System::IO::Stream::NullStream::Seek(int64_t offset, System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::NullStream::Seek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method, offset, origin);
}
// Autogenerated method: System.IO.Stream/System.IO.NullStream.SetLength
void System::IO::Stream::NullStream::SetLength(int64_t length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::NullStream::SetLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, length);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.Stream/System.IO.SynchronousAsyncResult
#include "System/IO/Stream_SynchronousAsyncResult.hpp"
// Including type: System.IO.Stream/System.IO.SynchronousAsyncResult/System.IO.<>c
#include "System/IO/Stream_SynchronousAsyncResult_--c.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.Runtime.ExceptionServices.ExceptionDispatchInfo
#include "System/Runtime/ExceptionServices/ExceptionDispatchInfo.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Object _stateObject
::Il2CppObject*& System::IO::Stream::SynchronousAsyncResult::dyn__stateObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::SynchronousAsyncResult::dyn__stateObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stateObject"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _isWrite
bool& System::IO::Stream::SynchronousAsyncResult::dyn__isWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::SynchronousAsyncResult::dyn__isWrite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isWrite"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ManualResetEvent _waitHandle
System::Threading::ManualResetEvent*& System::IO::Stream::SynchronousAsyncResult::dyn__waitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::SynchronousAsyncResult::dyn__waitHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_waitHandle"))->offset;
  return *reinterpret_cast<System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.ExceptionServices.ExceptionDispatchInfo _exceptionInfo
System::Runtime::ExceptionServices::ExceptionDispatchInfo*& System::IO::Stream::SynchronousAsyncResult::dyn__exceptionInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::SynchronousAsyncResult::dyn__exceptionInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_exceptionInfo"))->offset;
  return *reinterpret_cast<System::Runtime::ExceptionServices::ExceptionDispatchInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _endXxxCalled
bool& System::IO::Stream::SynchronousAsyncResult::dyn__endXxxCalled() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::SynchronousAsyncResult::dyn__endXxxCalled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endXxxCalled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _bytesRead
int& System::IO::Stream::SynchronousAsyncResult::dyn__bytesRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::SynchronousAsyncResult::dyn__bytesRead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bytesRead"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Stream/System.IO.SynchronousAsyncResult.get_IsCompleted
bool System::IO::Stream::SynchronousAsyncResult::get_IsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::SynchronousAsyncResult::get_IsCompleted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.Stream/System.IO.SynchronousAsyncResult.get_AsyncWaitHandle
System::Threading::WaitHandle* System::IO::Stream::SynchronousAsyncResult::get_AsyncWaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::SynchronousAsyncResult::get_AsyncWaitHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsyncWaitHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::WaitHandle*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.Stream/System.IO.SynchronousAsyncResult.get_AsyncState
::Il2CppObject* System::IO::Stream::SynchronousAsyncResult::get_AsyncState() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::SynchronousAsyncResult::get_AsyncState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsyncState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.Stream/System.IO.SynchronousAsyncResult.get_CompletedSynchronously
bool System::IO::Stream::SynchronousAsyncResult::get_CompletedSynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::SynchronousAsyncResult::get_CompletedSynchronously");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompletedSynchronously", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.Stream/System.IO.SynchronousAsyncResult.ThrowIfError
void System::IO::Stream::SynchronousAsyncResult::ThrowIfError() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::SynchronousAsyncResult::ThrowIfError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.Stream/System.IO.SynchronousAsyncResult.EndRead
int System::IO::Stream::SynchronousAsyncResult::EndRead(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::SynchronousAsyncResult::EndRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Stream/SynchronousAsyncResult", "EndRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, asyncResult);
}
// Autogenerated method: System.IO.Stream/System.IO.SynchronousAsyncResult.EndWrite
void System::IO::Stream::SynchronousAsyncResult::EndWrite(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::SynchronousAsyncResult::EndWrite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Stream/SynchronousAsyncResult", "EndWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, asyncResult);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Stream/System.IO.SynchronousAsyncResult/System.IO.<>c
#include "System/IO/Stream_SynchronousAsyncResult_--c.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IO.Stream/System.IO.SynchronousAsyncResult/System.IO.<>c <>9
System::IO::Stream::SynchronousAsyncResult::$$c* System::IO::Stream::SynchronousAsyncResult::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::SynchronousAsyncResult::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::IO::Stream::SynchronousAsyncResult::$$c*>("System.IO", "Stream/SynchronousAsyncResult/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IO.Stream/System.IO.SynchronousAsyncResult/System.IO.<>c <>9
void System::IO::Stream::SynchronousAsyncResult::$$c::_set_$$9(System::IO::Stream::SynchronousAsyncResult::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::SynchronousAsyncResult::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "Stream/SynchronousAsyncResult/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<System.Threading.ManualResetEvent> <>9__12_0
System::Func_1<System::Threading::ManualResetEvent*>* System::IO::Stream::SynchronousAsyncResult::$$c::_get_$$9__12_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::SynchronousAsyncResult::$$c::_get_$$9__12_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_1<System::Threading::ManualResetEvent*>*>("System.IO", "Stream/SynchronousAsyncResult/<>c", "<>9__12_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<System.Threading.ManualResetEvent> <>9__12_0
void System::IO::Stream::SynchronousAsyncResult::$$c::_set_$$9__12_0(System::Func_1<System::Threading::ManualResetEvent*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::SynchronousAsyncResult::$$c::_set_$$9__12_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "Stream/SynchronousAsyncResult/<>c", "<>9__12_0", value)));
}
// Autogenerated method: System.IO.Stream/System.IO.SynchronousAsyncResult/System.IO.<>c..cctor
void System::IO::Stream::SynchronousAsyncResult::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::SynchronousAsyncResult::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Stream/SynchronousAsyncResult/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Stream/System.IO.SynchronousAsyncResult/System.IO.<>c.<get_AsyncWaitHandle>b__12_0
System::Threading::ManualResetEvent* System::IO::Stream::SynchronousAsyncResult::$$c::$get_AsyncWaitHandle$b__12_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::SynchronousAsyncResult::$$c::<get_AsyncWaitHandle>b__12_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_AsyncWaitHandle>b__12_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::ManualResetEvent*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.Stream/System.IO.<>c
#include "System/IO/Stream_--c.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Threading.SemaphoreSlim
#include "System/Threading/SemaphoreSlim.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Func`5
#include "System/Func_5.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IO.Stream/System.IO.<>c <>9
System::IO::Stream::$$c* System::IO::Stream::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::IO::Stream::$$c*>("System.IO", "Stream/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IO.Stream/System.IO.<>c <>9
void System::IO::Stream::$$c::_set_$$9(System::IO::Stream::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "Stream/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`1<System.Threading.SemaphoreSlim> <>9__4_0
System::Func_1<System::Threading::SemaphoreSlim*>* System::IO::Stream::$$c::_get_$$9__4_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::$$c::_get_$$9__4_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_1<System::Threading::SemaphoreSlim*>*>("System.IO", "Stream/<>c", "<>9__4_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`1<System.Threading.SemaphoreSlim> <>9__4_0
void System::IO::Stream::$$c::_set_$$9__4_0(System::Func_1<System::Threading::SemaphoreSlim*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::$$c::_set_$$9__4_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "Stream/<>c", "<>9__4_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Object,System.Int32> <>9__39_0
System::Func_2<::Il2CppObject*, int>* System::IO::Stream::$$c::_get_$$9__39_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::$$c::_get_$$9__39_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<::Il2CppObject*, int>*>("System.IO", "Stream/<>c", "<>9__39_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Object,System.Int32> <>9__39_0
void System::IO::Stream::$$c::_set_$$9__39_0(System::Func_2<::Il2CppObject*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::$$c::_set_$$9__39_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "Stream/<>c", "<>9__39_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`5<System.IO.Stream,System.IO.Stream/System.IO.ReadWriteParameters,System.AsyncCallback,System.Object,System.IAsyncResult> <>9__43_0
System::Func_5<System::IO::Stream*, System::IO::Stream::ReadWriteParameters, System::AsyncCallback*, ::Il2CppObject*, System::IAsyncResult*>* System::IO::Stream::$$c::_get_$$9__43_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::$$c::_get_$$9__43_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_5<System::IO::Stream*, System::IO::Stream::ReadWriteParameters, System::AsyncCallback*, ::Il2CppObject*, System::IAsyncResult*>*>("System.IO", "Stream/<>c", "<>9__43_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`5<System.IO.Stream,System.IO.Stream/System.IO.ReadWriteParameters,System.AsyncCallback,System.Object,System.IAsyncResult> <>9__43_0
void System::IO::Stream::$$c::_set_$$9__43_0(System::Func_5<System::IO::Stream*, System::IO::Stream::ReadWriteParameters, System::AsyncCallback*, ::Il2CppObject*, System::IAsyncResult*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::$$c::_set_$$9__43_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "Stream/<>c", "<>9__43_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`3<System.IO.Stream,System.IAsyncResult,System.Int32> <>9__43_1
System::Func_3<System::IO::Stream*, System::IAsyncResult*, int>* System::IO::Stream::$$c::_get_$$9__43_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::$$c::_get_$$9__43_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_3<System::IO::Stream*, System::IAsyncResult*, int>*>("System.IO", "Stream/<>c", "<>9__43_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`3<System.IO.Stream,System.IAsyncResult,System.Int32> <>9__43_1
void System::IO::Stream::$$c::_set_$$9__43_1(System::Func_3<System::IO::Stream*, System::IAsyncResult*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::$$c::_set_$$9__43_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "Stream/<>c", "<>9__43_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.Object,System.Int32> <>9__46_0
System::Func_2<::Il2CppObject*, int>* System::IO::Stream::$$c::_get_$$9__46_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::$$c::_get_$$9__46_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<::Il2CppObject*, int>*>("System.IO", "Stream/<>c", "<>9__46_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.Object,System.Int32> <>9__46_0
void System::IO::Stream::$$c::_set_$$9__46_0(System::Func_2<::Il2CppObject*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::$$c::_set_$$9__46_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "Stream/<>c", "<>9__46_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`2<System.Threading.Tasks.Task,System.Object> <>9__47_0
System::Action_2<System::Threading::Tasks::Task*, ::Il2CppObject*>* System::IO::Stream::$$c::_get_$$9__47_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::$$c::_get_$$9__47_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Action_2<System::Threading::Tasks::Task*, ::Il2CppObject*>*>("System.IO", "Stream/<>c", "<>9__47_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`2<System.Threading.Tasks.Task,System.Object> <>9__47_0
void System::IO::Stream::$$c::_set_$$9__47_0(System::Action_2<System::Threading::Tasks::Task*, ::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::$$c::_set_$$9__47_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "Stream/<>c", "<>9__47_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`5<System.IO.Stream,System.IO.Stream/System.IO.ReadWriteParameters,System.AsyncCallback,System.Object,System.IAsyncResult> <>9__53_0
System::Func_5<System::IO::Stream*, System::IO::Stream::ReadWriteParameters, System::AsyncCallback*, ::Il2CppObject*, System::IAsyncResult*>* System::IO::Stream::$$c::_get_$$9__53_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::$$c::_get_$$9__53_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_5<System::IO::Stream*, System::IO::Stream::ReadWriteParameters, System::AsyncCallback*, ::Il2CppObject*, System::IAsyncResult*>*>("System.IO", "Stream/<>c", "<>9__53_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`5<System.IO.Stream,System.IO.Stream/System.IO.ReadWriteParameters,System.AsyncCallback,System.Object,System.IAsyncResult> <>9__53_0
void System::IO::Stream::$$c::_set_$$9__53_0(System::Func_5<System::IO::Stream*, System::IO::Stream::ReadWriteParameters, System::AsyncCallback*, ::Il2CppObject*, System::IAsyncResult*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::$$c::_set_$$9__53_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "Stream/<>c", "<>9__53_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`3<System.IO.Stream,System.IAsyncResult,System.Threading.Tasks.VoidTaskResult> <>9__53_1
System::Func_3<System::IO::Stream*, System::IAsyncResult*, System::Threading::Tasks::VoidTaskResult>* System::IO::Stream::$$c::_get_$$9__53_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::$$c::_get_$$9__53_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_3<System::IO::Stream*, System::IAsyncResult*, System::Threading::Tasks::VoidTaskResult>*>("System.IO", "Stream/<>c", "<>9__53_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`3<System.IO.Stream,System.IAsyncResult,System.Threading.Tasks.VoidTaskResult> <>9__53_1
void System::IO::Stream::$$c::_set_$$9__53_1(System::Func_3<System::IO::Stream*, System::IAsyncResult*, System::Threading::Tasks::VoidTaskResult>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::$$c::_set_$$9__53_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "Stream/<>c", "<>9__53_1", value)));
}
// Autogenerated method: System.IO.Stream/System.IO.<>c..cctor
void System::IO::Stream::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Stream/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Stream/System.IO.<>c.<EnsureAsyncActiveSemaphoreInitialized>b__4_0
System::Threading::SemaphoreSlim* System::IO::Stream::$$c::$EnsureAsyncActiveSemaphoreInitialized$b__4_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::$$c::<EnsureAsyncActiveSemaphoreInitialized>b__4_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<EnsureAsyncActiveSemaphoreInitialized>b__4_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::SemaphoreSlim*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.Stream/System.IO.<>c.<BeginReadInternal>b__39_0
int System::IO::Stream::$$c::$BeginReadInternal$b__39_0(::Il2CppObject* $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::$$c::<BeginReadInternal>b__39_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginReadInternal>b__39_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, $p0$);
}
// Autogenerated method: System.IO.Stream/System.IO.<>c.<BeginEndReadAsync>b__43_0
System::IAsyncResult* System::IO::Stream::$$c::$BeginEndReadAsync$b__43_0(System::IO::Stream* stream, System::IO::Stream::ReadWriteParameters args, System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::$$c::<BeginEndReadAsync>b__43_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginEndReadAsync>b__43_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, stream, args, callback, state);
}
// Autogenerated method: System.IO.Stream/System.IO.<>c.<BeginEndReadAsync>b__43_1
int System::IO::Stream::$$c::$BeginEndReadAsync$b__43_1(System::IO::Stream* stream, System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::$$c::<BeginEndReadAsync>b__43_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginEndReadAsync>b__43_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(asyncResult)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, stream, asyncResult);
}
// Autogenerated method: System.IO.Stream/System.IO.<>c.<BeginWriteInternal>b__46_0
int System::IO::Stream::$$c::$BeginWriteInternal$b__46_0(::Il2CppObject* $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::$$c::<BeginWriteInternal>b__46_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginWriteInternal>b__46_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, $p0$);
}
// Autogenerated method: System.IO.Stream/System.IO.<>c.<RunReadWriteTaskWhenReady>b__47_0
void System::IO::Stream::$$c::$RunReadWriteTaskWhenReady$b__47_0(System::Threading::Tasks::Task* t, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::$$c::<RunReadWriteTaskWhenReady>b__47_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RunReadWriteTaskWhenReady>b__47_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(state)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, t, state);
}
// Autogenerated method: System.IO.Stream/System.IO.<>c.<BeginEndWriteAsync>b__53_0
System::IAsyncResult* System::IO::Stream::$$c::$BeginEndWriteAsync$b__53_0(System::IO::Stream* stream, System::IO::Stream::ReadWriteParameters args, System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::$$c::<BeginEndWriteAsync>b__53_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginEndWriteAsync>b__53_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(args), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, stream, args, callback, state);
}
// Autogenerated method: System.IO.Stream/System.IO.<>c.<BeginEndWriteAsync>b__53_1
System::Threading::Tasks::VoidTaskResult System::IO::Stream::$$c::$BeginEndWriteAsync$b__53_1(System::IO::Stream* stream, System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::$$c::<BeginEndWriteAsync>b__53_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginEndWriteAsync>b__53_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(asyncResult)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::VoidTaskResult, false>(___instance_arg, ___internal__method, stream, asyncResult);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.Stream/System.IO.<CopyToAsyncInternal>d__27
#include "System/IO/Stream_-CopyToAsyncInternal-d__27.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 <>1__state
int& System::IO::Stream::$CopyToAsyncInternal$d__27::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::$CopyToAsyncInternal$d__27::dyn_$$1__state");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Runtime.CompilerServices.AsyncTaskMethodBuilder <>t__builder
System::Runtime::CompilerServices::AsyncTaskMethodBuilder& System::IO::Stream::$CopyToAsyncInternal$d__27::dyn_$$t__builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::$CopyToAsyncInternal$d__27::dyn_$$t__builder");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>t__builder"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::AsyncTaskMethodBuilder*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 bufferSize
int& System::IO::Stream::$CopyToAsyncInternal$d__27::dyn_bufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::$CopyToAsyncInternal$d__27::dyn_bufferSize");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bufferSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IO.Stream destination
System::IO::Stream*& System::IO::Stream::$CopyToAsyncInternal$d__27::dyn_destination() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::$CopyToAsyncInternal$d__27::dyn_destination");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "destination"))->offset;
  return *reinterpret_cast<System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] <buffer>5__1
::ArrayW<uint8_t>& System::IO::Stream::$CopyToAsyncInternal$d__27::dyn_$buffer$5__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::$CopyToAsyncInternal$d__27::dyn_$buffer$5__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<buffer>5__1"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <bytesRead>5__2
int& System::IO::Stream::$CopyToAsyncInternal$d__27::dyn_$bytesRead$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::$CopyToAsyncInternal$d__27::dyn_$bytesRead$5__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<bytesRead>5__2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Threading.CancellationToken cancellationToken
System::Threading::CancellationToken& System::IO::Stream::$CopyToAsyncInternal$d__27::dyn_cancellationToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::$CopyToAsyncInternal$d__27::dyn_cancellationToken");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cancellationToken"))->offset;
  return *reinterpret_cast<System::Threading::CancellationToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.IO.Stream <>4__this
System::IO::Stream*& System::IO::Stream::$CopyToAsyncInternal$d__27::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::$CopyToAsyncInternal$d__27::dyn_$$4__this");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable/System.Runtime.CompilerServices.ConfiguredTaskAwaiter <>u__1
System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter& System::IO::Stream::$CopyToAsyncInternal$d__27::dyn_$$u__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::$CopyToAsyncInternal$d__27::dyn_$$u__1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__1"))->offset;
  return *reinterpret_cast<System::Runtime::CompilerServices::ConfiguredTaskAwaitable::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1/System.Runtime.CompilerServices.ConfiguredTaskAwaiter<System.Int32> <>u__2
typename System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<int>::ConfiguredTaskAwaiter& System::IO::Stream::$CopyToAsyncInternal$d__27::dyn_$$u__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::$CopyToAsyncInternal$d__27::dyn_$$u__2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>u__2"))->offset;
  return *reinterpret_cast<typename System::Runtime::CompilerServices::ConfiguredTaskAwaitable_1<int>::ConfiguredTaskAwaiter*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.Stream/System.IO.<CopyToAsyncInternal>d__27.MoveNext
void System::IO::Stream::$CopyToAsyncInternal$d__27::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::$CopyToAsyncInternal$d__27::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: System.IO.Stream/System.IO.<CopyToAsyncInternal>d__27.SetStateMachine
void System::IO::Stream::$CopyToAsyncInternal$d__27::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Stream::$CopyToAsyncInternal$d__27::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.StreamReader
#include "System/IO/StreamReader.hpp"
// Including type: System.IO.StreamReader/System.IO.NullStreamReader
#include "System/IO/StreamReader_NullStreamReader.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Text.Decoder
#include "System/Text/Decoder.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IO.StreamReader Null
System::IO::StreamReader* System::IO::StreamReader::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::StreamReader*>("System.IO", "StreamReader", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IO.StreamReader Null
void System::IO::StreamReader::_set_Null(System::IO::StreamReader* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "StreamReader", "Null", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream stream
System::IO::Stream*& System::IO::StreamReader::dyn_stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::dyn_stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stream"))->offset;
  return *reinterpret_cast<System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoding encoding
System::Text::Encoding*& System::IO::StreamReader::dyn_encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::dyn_encoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encoding"))->offset;
  return *reinterpret_cast<System::Text::Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Decoder decoder
System::Text::Decoder*& System::IO::StreamReader::dyn_decoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::dyn_decoder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "decoder"))->offset;
  return *reinterpret_cast<System::Text::Decoder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] byteBuffer
::ArrayW<uint8_t>& System::IO::StreamReader::dyn_byteBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::dyn_byteBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "byteBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char[] charBuffer
::ArrayW<::Il2CppChar>& System::IO::StreamReader::dyn_charBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::dyn_charBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] _preamble
::ArrayW<uint8_t>& System::IO::StreamReader::dyn__preamble() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::dyn__preamble");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_preamble"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 charPos
int& System::IO::StreamReader::dyn_charPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::dyn_charPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 charLen
int& System::IO::StreamReader::dyn_charLen() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::dyn_charLen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charLen"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 byteLen
int& System::IO::StreamReader::dyn_byteLen() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::dyn_byteLen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "byteLen"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 bytePos
int& System::IO::StreamReader::dyn_bytePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::dyn_bytePos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bytePos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxCharsPerBuffer
int& System::IO::StreamReader::dyn__maxCharsPerBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::dyn__maxCharsPerBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxCharsPerBuffer"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _detectEncoding
bool& System::IO::StreamReader::dyn__detectEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::dyn__detectEncoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_detectEncoding"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _checkPreamble
bool& System::IO::StreamReader::dyn__checkPreamble() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::dyn__checkPreamble");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_checkPreamble"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isBlocked
bool& System::IO::StreamReader::dyn__isBlocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::dyn__isBlocked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isBlocked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _closable
bool& System::IO::StreamReader::dyn__closable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::dyn__closable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_closable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task _asyncReadTask
System::Threading::Tasks::Task*& System::IO::StreamReader::dyn__asyncReadTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::dyn__asyncReadTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_asyncReadTask"))->offset;
  return *reinterpret_cast<System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.StreamReader.get_DefaultBufferSize
int System::IO::StreamReader::get_DefaultBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::get_DefaultBufferSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "StreamReader", "get_DefaultBufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.StreamReader.get_CurrentEncoding
System::Text::Encoding* System::IO::StreamReader::get_CurrentEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::get_CurrentEncoding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Text::Encoding*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader.get_BaseStream
System::IO::Stream* System::IO::StreamReader::get_BaseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::get_BaseStream");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IO::Stream*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader.get_LeaveOpen
bool System::IO::StreamReader::get_LeaveOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::get_LeaveOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeaveOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader.get_EndOfStream
bool System::IO::StreamReader::get_EndOfStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::get_EndOfStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EndOfStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader.CheckAsyncTaskInProgress
void System::IO::StreamReader::CheckAsyncTaskInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::CheckAsyncTaskInProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckAsyncTaskInProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader.Init
void System::IO::StreamReader::Init(System::IO::Stream* stream, System::Text::Encoding* encoding, bool detectEncodingFromByteOrderMarks, int bufferSize, bool leaveOpen) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(encoding), ::il2cpp_utils::ExtractType(detectEncodingFromByteOrderMarks), ::il2cpp_utils::ExtractType(bufferSize), ::il2cpp_utils::ExtractType(leaveOpen)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, stream, encoding, detectEncodingFromByteOrderMarks, bufferSize, leaveOpen);
}
// Autogenerated method: System.IO.StreamReader.Init
void System::IO::StreamReader::Init(System::IO::Stream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, stream);
}
// Autogenerated method: System.IO.StreamReader.DataAvailable
bool System::IO::StreamReader::DataAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::DataAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DataAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader.CompressBuffer
void System::IO::StreamReader::CompressBuffer(int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::CompressBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompressBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, n);
}
// Autogenerated method: System.IO.StreamReader.DetectEncoding
void System::IO::StreamReader::DetectEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::DetectEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DetectEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader.IsPreamble
bool System::IO::StreamReader::IsPreamble() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::IsPreamble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPreamble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader.ReadBuffer
int System::IO::StreamReader::ReadBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::ReadBuffer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader.ReadBuffer
int System::IO::StreamReader::ReadBuffer(::ArrayW<::Il2CppChar> userBuffer, int userOffset, int desiredChars, ByRef<bool> readToUserBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::ReadBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userBuffer), ::il2cpp_utils::ExtractType(userOffset), ::il2cpp_utils::ExtractType(desiredChars), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, userBuffer, userOffset, desiredChars, byref(readToUserBuffer));
}
// Autogenerated method: System.IO.StreamReader..cctor
void System::IO::StreamReader::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "StreamReader", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.StreamReader.Close
void System::IO::StreamReader::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader.Dispose
void System::IO::StreamReader::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, disposing);
}
// Autogenerated method: System.IO.StreamReader.Peek
int System::IO::StreamReader::Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::Peek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Peek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader.Read
int System::IO::StreamReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader.Read
int System::IO::StreamReader::Read(ByRef<::ArrayW<::Il2CppChar>> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, byref(buffer), index, count);
}
// Autogenerated method: System.IO.StreamReader.ReadToEnd
::Il2CppString* System::IO::StreamReader::ReadToEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::ReadToEnd");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadToEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader.ReadLine
::Il2CppString* System::IO::StreamReader::ReadLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::ReadLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.StreamReader/System.IO.NullStreamReader
#include "System/IO/StreamReader_NullStreamReader.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.StreamReader/System.IO.NullStreamReader.get_BaseStream
System::IO::Stream* System::IO::StreamReader::NullStreamReader::get_BaseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::NullStreamReader::get_BaseStream");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IO::Stream*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader/System.IO.NullStreamReader.get_CurrentEncoding
System::Text::Encoding* System::IO::StreamReader::NullStreamReader::get_CurrentEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::NullStreamReader::get_CurrentEncoding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Text::Encoding*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader/System.IO.NullStreamReader.Dispose
void System::IO::StreamReader::NullStreamReader::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::NullStreamReader::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, disposing);
}
// Autogenerated method: System.IO.StreamReader/System.IO.NullStreamReader.Peek
int System::IO::StreamReader::NullStreamReader::Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::NullStreamReader::Peek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Peek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader/System.IO.NullStreamReader.Read
int System::IO::StreamReader::NullStreamReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::NullStreamReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader/System.IO.NullStreamReader.Read
int System::IO::StreamReader::NullStreamReader::Read(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::NullStreamReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.StreamReader/System.IO.NullStreamReader.ReadLine
::Il2CppString* System::IO::StreamReader::NullStreamReader::ReadLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::NullStreamReader::ReadLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader/System.IO.NullStreamReader.ReadToEnd
::Il2CppString* System::IO::StreamReader::NullStreamReader::ReadToEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::NullStreamReader::ReadToEnd");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadToEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.StreamReader/System.IO.NullStreamReader.ReadBuffer
int System::IO::StreamReader::NullStreamReader::ReadBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamReader::NullStreamReader::ReadBuffer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.StreamWriter
#include "System/IO/StreamWriter.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Text.Encoder
#include "System/Text/Encoder.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IO.StreamWriter Null
System::IO::StreamWriter* System::IO::StreamWriter::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamWriter::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::StreamWriter*>("System.IO", "StreamWriter", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IO.StreamWriter Null
void System::IO::StreamWriter::_set_Null(System::IO::StreamWriter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamWriter::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "StreamWriter", "Null", value));
}
// Autogenerated static field getter
// Get static field: static private System.Text.Encoding _UTF8NoBOM
System::Text::Encoding* System::IO::StreamWriter::_get__UTF8NoBOM() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamWriter::_get__UTF8NoBOM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Text::Encoding*>("System.IO", "StreamWriter", "_UTF8NoBOM"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.Encoding _UTF8NoBOM
void System::IO::StreamWriter::_set__UTF8NoBOM(System::Text::Encoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamWriter::_set__UTF8NoBOM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "StreamWriter", "_UTF8NoBOM", value));
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream stream
System::IO::Stream*& System::IO::StreamWriter::dyn_stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamWriter::dyn_stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stream"))->offset;
  return *reinterpret_cast<System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoding encoding
System::Text::Encoding*& System::IO::StreamWriter::dyn_encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamWriter::dyn_encoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encoding"))->offset;
  return *reinterpret_cast<System::Text::Encoding**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.Encoder encoder
System::Text::Encoder*& System::IO::StreamWriter::dyn_encoder() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamWriter::dyn_encoder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encoder"))->offset;
  return *reinterpret_cast<System::Text::Encoder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] byteBuffer
::ArrayW<uint8_t>& System::IO::StreamWriter::dyn_byteBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamWriter::dyn_byteBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "byteBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char[] charBuffer
::ArrayW<::Il2CppChar>& System::IO::StreamWriter::dyn_charBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamWriter::dyn_charBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charBuffer"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 charPos
int& System::IO::StreamWriter::dyn_charPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamWriter::dyn_charPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 charLen
int& System::IO::StreamWriter::dyn_charLen() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamWriter::dyn_charLen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "charLen"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean autoFlush
bool& System::IO::StreamWriter::dyn_autoFlush() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamWriter::dyn_autoFlush");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoFlush"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean haveWrittenPreamble
bool& System::IO::StreamWriter::dyn_haveWrittenPreamble() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamWriter::dyn_haveWrittenPreamble");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "haveWrittenPreamble"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean closable
bool& System::IO::StreamWriter::dyn_closable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamWriter::dyn_closable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "closable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task _asyncWriteTask
System::Threading::Tasks::Task*& System::IO::StreamWriter::dyn__asyncWriteTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamWriter::dyn__asyncWriteTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_asyncWriteTask"))->offset;
  return *reinterpret_cast<System::Threading::Tasks::Task**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.StreamWriter.get_UTF8NoBOM
System::Text::Encoding* System::IO::StreamWriter::get_UTF8NoBOM() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamWriter::get_UTF8NoBOM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "StreamWriter", "get_UTF8NoBOM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::Encoding*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.StreamWriter.set_AutoFlush
void System::IO::StreamWriter::set_AutoFlush(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamWriter::set_AutoFlush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AutoFlush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.IO.StreamWriter.get_LeaveOpen
bool System::IO::StreamWriter::get_LeaveOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamWriter::get_LeaveOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LeaveOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.StreamWriter.CheckAsyncTaskInProgress
void System::IO::StreamWriter::CheckAsyncTaskInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamWriter::CheckAsyncTaskInProgress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckAsyncTaskInProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.StreamWriter.Init
void System::IO::StreamWriter::Init(System::IO::Stream* streamArg, System::Text::Encoding* encodingArg, int bufferSize, bool shouldLeaveOpen) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamWriter::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(streamArg), ::il2cpp_utils::ExtractType(encodingArg), ::il2cpp_utils::ExtractType(bufferSize), ::il2cpp_utils::ExtractType(shouldLeaveOpen)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, streamArg, encodingArg, bufferSize, shouldLeaveOpen);
}
// Autogenerated method: System.IO.StreamWriter.CreateFile
System::IO::Stream* System::IO::StreamWriter::CreateFile(::Il2CppString* path, bool append, bool checkHost) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamWriter::CreateFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "StreamWriter", "CreateFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(append), ::il2cpp_utils::ExtractType(checkHost)})));
  return ::il2cpp_utils::RunMethodThrow<System::IO::Stream*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, append, checkHost);
}
// Autogenerated method: System.IO.StreamWriter.Flush
void System::IO::StreamWriter::Flush(bool flushStream, bool flushEncoder) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamWriter::Flush");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flushStream), ::il2cpp_utils::ExtractType(flushEncoder)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, flushStream, flushEncoder);
}
// Autogenerated method: System.IO.StreamWriter.get_Encoding
System::Text::Encoding* System::IO::StreamWriter::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamWriter::get_Encoding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Encoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Text::Encoding*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.StreamWriter..cctor
void System::IO::StreamWriter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamWriter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "StreamWriter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.StreamWriter.Close
void System::IO::StreamWriter::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamWriter::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.StreamWriter.Dispose
void System::IO::StreamWriter::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamWriter::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, disposing);
}
// Autogenerated method: System.IO.StreamWriter.Flush
void System::IO::StreamWriter::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamWriter::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.StreamWriter.Write
void System::IO::StreamWriter::Write(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.IO.StreamWriter.Write
void System::IO::StreamWriter::Write(::ArrayW<::Il2CppChar> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, buffer);
}
// Autogenerated method: System.IO.StreamWriter.Write
void System::IO::StreamWriter::Write(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.StreamWriter.Write
void System::IO::StreamWriter::Write(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StreamWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.StringReader
#include "System/IO/StringReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String _s
::Il2CppString*& System::IO::StringReader::dyn__s() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StringReader::dyn__s");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_s"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _pos
int& System::IO::StringReader::dyn__pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StringReader::dyn__pos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _length
int& System::IO::StringReader::dyn__length() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StringReader::dyn__length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.StringReader.Close
void System::IO::StringReader::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StringReader::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.StringReader.Dispose
void System::IO::StringReader::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StringReader::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, disposing);
}
// Autogenerated method: System.IO.StringReader.Peek
int System::IO::StringReader::Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StringReader::Peek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Peek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.StringReader.Read
int System::IO::StringReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StringReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.StringReader.Read
int System::IO::StringReader::Read(ByRef<::ArrayW<::Il2CppChar>> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StringReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, byref(buffer), index, count);
}
// Autogenerated method: System.IO.StringReader.ReadToEnd
::Il2CppString* System::IO::StringReader::ReadToEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StringReader::ReadToEnd");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadToEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.StringReader.ReadLine
::Il2CppString* System::IO::StringReader::ReadLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StringReader::ReadLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.StringWriter
#include "System/IO/StringWriter.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.Text.UnicodeEncoding
#include "System/Text/UnicodeEncoding.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Text.UnicodeEncoding m_encoding
System::Text::UnicodeEncoding* System::IO::StringWriter::_get_m_encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StringWriter::_get_m_encoding");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Text::UnicodeEncoding*>("System.IO", "StringWriter", "m_encoding"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.UnicodeEncoding m_encoding
void System::IO::StringWriter::_set_m_encoding(System::Text::UnicodeEncoding* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StringWriter::_set_m_encoding");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "StringWriter", "m_encoding", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder _sb
System::Text::StringBuilder*& System::IO::StringWriter::dyn__sb() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StringWriter::dyn__sb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sb"))->offset;
  return *reinterpret_cast<System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isOpen
bool& System::IO::StringWriter::dyn__isOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StringWriter::dyn__isOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.StringWriter.get_Encoding
System::Text::Encoding* System::IO::StringWriter::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StringWriter::get_Encoding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Encoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Text::Encoding*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.StringWriter.Close
void System::IO::StringWriter::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StringWriter::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.StringWriter.Dispose
void System::IO::StringWriter::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StringWriter::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, disposing);
}
// Autogenerated method: System.IO.StringWriter.Write
void System::IO::StringWriter::Write(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StringWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.IO.StringWriter.Write
void System::IO::StringWriter::Write(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StringWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.StringWriter.Write
void System::IO::StringWriter::Write(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StringWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.IO.StringWriter.ToString
::Il2CppString* System::IO::StringWriter::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::StringWriter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.TextReader
#include "System/IO/TextReader.hpp"
// Including type: System.IO.TextReader/System.IO.NullTextReader
#include "System/IO/TextReader_NullTextReader.hpp"
// Including type: System.IO.TextReader/System.IO.SyncTextReader
#include "System/IO/TextReader_SyncTextReader.hpp"
// Including type: System.IO.TextReader/System.IO.<>c
#include "System/IO/TextReader_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Func`2<System.Object,System.String> _ReadLineDelegate
System::Func_2<::Il2CppObject*, ::Il2CppString*>* System::IO::TextReader::_get__ReadLineDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::_get__ReadLineDelegate");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<::Il2CppObject*, ::Il2CppString*>*>("System.IO", "TextReader", "_ReadLineDelegate")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`2<System.Object,System.String> _ReadLineDelegate
void System::IO::TextReader::_set__ReadLineDelegate(System::Func_2<::Il2CppObject*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::_set__ReadLineDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "TextReader", "_ReadLineDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private System.Func`2<System.Object,System.Int32> _ReadDelegate
System::Func_2<::Il2CppObject*, int>* System::IO::TextReader::_get__ReadDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::_get__ReadDelegate");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<::Il2CppObject*, int>*>("System.IO", "TextReader", "_ReadDelegate")));
}
// Autogenerated static field setter
// Set static field: static private System.Func`2<System.Object,System.Int32> _ReadDelegate
void System::IO::TextReader::_set__ReadDelegate(System::Func_2<::Il2CppObject*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::_set__ReadDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "TextReader", "_ReadDelegate", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.IO.TextReader Null
System::IO::TextReader* System::IO::TextReader::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::TextReader*>("System.IO", "TextReader", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IO.TextReader Null
void System::IO::TextReader::_set_Null(System::IO::TextReader* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "TextReader", "Null", value));
}
// Autogenerated method: System.IO.TextReader..cctor
void System::IO::TextReader::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "TextReader", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.TextReader.Close
void System::IO::TextReader::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.TextReader.Dispose
void System::IO::TextReader::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.TextReader.Dispose
void System::IO::TextReader::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, disposing);
}
// Autogenerated method: System.IO.TextReader.Peek
int System::IO::TextReader::Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::Peek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Peek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.TextReader.Read
int System::IO::TextReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.TextReader.Read
int System::IO::TextReader::Read(ByRef<::ArrayW<::Il2CppChar>> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, byref(buffer), index, count);
}
// Autogenerated method: System.IO.TextReader.ReadToEnd
::Il2CppString* System::IO::TextReader::ReadToEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::ReadToEnd");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadToEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.TextReader.ReadLine
::Il2CppString* System::IO::TextReader::ReadLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::ReadLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.TextReader.Synchronized
System::IO::TextReader* System::IO::TextReader::Synchronized(System::IO::TextReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::Synchronized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "TextReader", "Synchronized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodThrow<System::IO::TextReader*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, reader);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.TextReader/System.IO.NullTextReader
#include "System/IO/TextReader_NullTextReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.TextReader/System.IO.NullTextReader.Read
int System::IO::TextReader::NullTextReader::Read(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::NullTextReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.TextReader/System.IO.NullTextReader.ReadLine
::Il2CppString* System::IO::TextReader::NullTextReader::ReadLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::NullTextReader::ReadLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.TextReader/System.IO.SyncTextReader
#include "System/IO/TextReader_SyncTextReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.IO.TextReader _in
System::IO::TextReader*& System::IO::TextReader::SyncTextReader::dyn__in() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::SyncTextReader::dyn__in");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_in"))->offset;
  return *reinterpret_cast<System::IO::TextReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.TextReader/System.IO.SyncTextReader.Close
void System::IO::TextReader::SyncTextReader::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::SyncTextReader::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.TextReader/System.IO.SyncTextReader.Dispose
void System::IO::TextReader::SyncTextReader::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::SyncTextReader::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, disposing);
}
// Autogenerated method: System.IO.TextReader/System.IO.SyncTextReader.Peek
int System::IO::TextReader::SyncTextReader::Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::SyncTextReader::Peek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Peek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.TextReader/System.IO.SyncTextReader.Read
int System::IO::TextReader::SyncTextReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::SyncTextReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.TextReader/System.IO.SyncTextReader.Read
int System::IO::TextReader::SyncTextReader::Read(ByRef<::ArrayW<::Il2CppChar>> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::SyncTextReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, byref(buffer), index, count);
}
// Autogenerated method: System.IO.TextReader/System.IO.SyncTextReader.ReadLine
::Il2CppString* System::IO::TextReader::SyncTextReader::ReadLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::SyncTextReader::ReadLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.TextReader/System.IO.SyncTextReader.ReadToEnd
::Il2CppString* System::IO::TextReader::SyncTextReader::ReadToEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::SyncTextReader::ReadToEnd");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadToEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.TextReader/System.IO.<>c
#include "System/IO/TextReader_--c.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IO.TextReader/System.IO.<>c <>9
System::IO::TextReader::$$c* System::IO::TextReader::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::IO::TextReader::$$c*>("System.IO", "TextReader/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IO.TextReader/System.IO.<>c <>9
void System::IO::TextReader::$$c::_set_$$9(System::IO::TextReader::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "TextReader/<>c", "<>9", value)));
}
// Autogenerated method: System.IO.TextReader/System.IO.<>c..cctor
void System::IO::TextReader::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "TextReader/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.TextReader/System.IO.<>c.<.cctor>b__22_0
::Il2CppString* System::IO::TextReader::$$c::$_cctor$b__22_0(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::$$c::<.cctor>b__22_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__22_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method, state);
}
// Autogenerated method: System.IO.TextReader/System.IO.<>c.<.cctor>b__22_1
int System::IO::TextReader::$$c::$_cctor$b__22_1(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextReader::$$c::<.cctor>b__22_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__22_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
// Including type: System.IO.TextWriter/System.IO.NullTextWriter
#include "System/IO/TextWriter_NullTextWriter.hpp"
// Including type: System.IO.TextWriter/System.IO.SyncTextWriter
#include "System/IO/TextWriter_SyncTextWriter.hpp"
// Including type: System.IO.TextWriter/System.IO.<>c
#include "System/IO/TextWriter_--c.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IO.TextWriter Null
System::IO::TextWriter* System::IO::TextWriter::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::TextWriter*>("System.IO", "TextWriter", "Null"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IO.TextWriter Null
void System::IO::TextWriter::_set_Null(System::IO::TextWriter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "TextWriter", "Null", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.Object> _WriteCharDelegate
System::Action_1<::Il2CppObject*>* System::IO::TextWriter::_get__WriteCharDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::_get__WriteCharDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<::Il2CppObject*>*>("System.IO", "TextWriter", "_WriteCharDelegate"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.Object> _WriteCharDelegate
void System::IO::TextWriter::_set__WriteCharDelegate(System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::_set__WriteCharDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "TextWriter", "_WriteCharDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.Object> _WriteStringDelegate
System::Action_1<::Il2CppObject*>* System::IO::TextWriter::_get__WriteStringDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::_get__WriteStringDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<::Il2CppObject*>*>("System.IO", "TextWriter", "_WriteStringDelegate"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.Object> _WriteStringDelegate
void System::IO::TextWriter::_set__WriteStringDelegate(System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::_set__WriteStringDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "TextWriter", "_WriteStringDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.Object> _WriteCharArrayRangeDelegate
System::Action_1<::Il2CppObject*>* System::IO::TextWriter::_get__WriteCharArrayRangeDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::_get__WriteCharArrayRangeDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<::Il2CppObject*>*>("System.IO", "TextWriter", "_WriteCharArrayRangeDelegate"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.Object> _WriteCharArrayRangeDelegate
void System::IO::TextWriter::_set__WriteCharArrayRangeDelegate(System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::_set__WriteCharArrayRangeDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "TextWriter", "_WriteCharArrayRangeDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.Object> _WriteLineCharDelegate
System::Action_1<::Il2CppObject*>* System::IO::TextWriter::_get__WriteLineCharDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::_get__WriteLineCharDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<::Il2CppObject*>*>("System.IO", "TextWriter", "_WriteLineCharDelegate"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.Object> _WriteLineCharDelegate
void System::IO::TextWriter::_set__WriteLineCharDelegate(System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::_set__WriteLineCharDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "TextWriter", "_WriteLineCharDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.Object> _WriteLineStringDelegate
System::Action_1<::Il2CppObject*>* System::IO::TextWriter::_get__WriteLineStringDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::_get__WriteLineStringDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<::Il2CppObject*>*>("System.IO", "TextWriter", "_WriteLineStringDelegate"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.Object> _WriteLineStringDelegate
void System::IO::TextWriter::_set__WriteLineStringDelegate(System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::_set__WriteLineStringDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "TextWriter", "_WriteLineStringDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.Object> _WriteLineCharArrayRangeDelegate
System::Action_1<::Il2CppObject*>* System::IO::TextWriter::_get__WriteLineCharArrayRangeDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::_get__WriteLineCharArrayRangeDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<::Il2CppObject*>*>("System.IO", "TextWriter", "_WriteLineCharArrayRangeDelegate"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.Object> _WriteLineCharArrayRangeDelegate
void System::IO::TextWriter::_set__WriteLineCharArrayRangeDelegate(System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::_set__WriteLineCharArrayRangeDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "TextWriter", "_WriteLineCharArrayRangeDelegate", value));
}
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.Object> _FlushDelegate
System::Action_1<::Il2CppObject*>* System::IO::TextWriter::_get__FlushDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::_get__FlushDelegate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Action_1<::Il2CppObject*>*>("System.IO", "TextWriter", "_FlushDelegate"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.Object> _FlushDelegate
void System::IO::TextWriter::_set__FlushDelegate(System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::_set__FlushDelegate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "TextWriter", "_FlushDelegate", value));
}
// Autogenerated instance field getter
// Get instance field: protected System.Char[] CoreNewLine
::ArrayW<::Il2CppChar>& System::IO::TextWriter::dyn_CoreNewLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::dyn_CoreNewLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CoreNewLine"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IFormatProvider InternalFormatProvider
System::IFormatProvider*& System::IO::TextWriter::dyn_InternalFormatProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::dyn_InternalFormatProvider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InternalFormatProvider"))->offset;
  return *reinterpret_cast<System::IFormatProvider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.TextWriter.get_InitialNewLine
::Il2CppString* System::IO::TextWriter::get_InitialNewLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::get_InitialNewLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "TextWriter", "get_InitialNewLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.TextWriter.get_FormatProvider
System::IFormatProvider* System::IO::TextWriter::get_FormatProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::get_FormatProvider");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FormatProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IFormatProvider*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter.get_Encoding
System::Text::Encoding* System::IO::TextWriter::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::get_Encoding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Encoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Text::Encoding*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter..cctor
void System::IO::TextWriter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "TextWriter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.TextWriter.Close
void System::IO::TextWriter::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter.Dispose
void System::IO::TextWriter::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, disposing);
}
// Autogenerated method: System.IO.TextWriter.Dispose
void System::IO::TextWriter::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter.Flush
void System::IO::TextWriter::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter.Synchronized
System::IO::TextWriter* System::IO::TextWriter::Synchronized(System::IO::TextWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::Synchronized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "TextWriter", "Synchronized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  return ::il2cpp_utils::RunMethodThrow<System::IO::TextWriter*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, writer);
}
// Autogenerated method: System.IO.TextWriter.Write
void System::IO::TextWriter::Write(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter.Write
void System::IO::TextWriter::Write(::ArrayW<::Il2CppChar> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, buffer);
}
// Autogenerated method: System.IO.TextWriter.Write
void System::IO::TextWriter::Write(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.TextWriter.Write
void System::IO::TextWriter::Write(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter.Write
void System::IO::TextWriter::Write(::Il2CppString* format, ::Il2CppObject* arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(arg0)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, format, arg0);
}
// Autogenerated method: System.IO.TextWriter.Write
void System::IO::TextWriter::Write(::Il2CppString* format, ::Il2CppObject* arg0, ::Il2CppObject* arg1, ::Il2CppObject* arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, format, arg0, arg1, arg2);
}
// Autogenerated method: System.IO.TextWriter.WriteLine
void System::IO::TextWriter::WriteLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter.WriteLine
void System::IO::TextWriter::WriteLine(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter.WriteLine
void System::IO::TextWriter::WriteLine(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.TextWriter.WriteLine
void System::IO::TextWriter::WriteLine(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter.WriteLine
void System::IO::TextWriter::WriteLine(::Il2CppString* format, ::Il2CppObject* arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(arg0)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, format, arg0);
}
// Autogenerated method: System.IO.TextWriter.WriteLine
void System::IO::TextWriter::WriteLine(::Il2CppString* format, ::Il2CppObject* arg0, ::Il2CppObject* arg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, format, arg0, arg1);
}
// Autogenerated method: System.IO.TextWriter.WriteLine
void System::IO::TextWriter::WriteLine(::Il2CppString* format, ::Il2CppObject* arg0, ::Il2CppObject* arg1, ::Il2CppObject* arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, format, arg0, arg1, arg2);
}
// Autogenerated method: System.IO.TextWriter.WriteLine
void System::IO::TextWriter::WriteLine(::Il2CppString* format, ::ArrayW<::Il2CppObject*> arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(arg)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, format, arg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.TextWriter/System.IO.NullTextWriter
#include "System/IO/TextWriter_NullTextWriter.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.TextWriter/System.IO.NullTextWriter.get_Encoding
System::Text::Encoding* System::IO::TextWriter::NullTextWriter::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::NullTextWriter::get_Encoding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Encoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Text::Encoding*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter/System.IO.NullTextWriter.Write
void System::IO::TextWriter::NullTextWriter::Write(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::NullTextWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.TextWriter/System.IO.NullTextWriter.Write
void System::IO::TextWriter::NullTextWriter::Write(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::NullTextWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter/System.IO.NullTextWriter.WriteLine
void System::IO::TextWriter::NullTextWriter::WriteLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::NullTextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter/System.IO.NullTextWriter.WriteLine
void System::IO::TextWriter::NullTextWriter::WriteLine(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::NullTextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.TextWriter/System.IO.SyncTextWriter
#include "System/IO/TextWriter_SyncTextWriter.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.IO.TextWriter _out
System::IO::TextWriter*& System::IO::TextWriter::SyncTextWriter::dyn__out() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::SyncTextWriter::dyn__out");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_out"))->offset;
  return *reinterpret_cast<System::IO::TextWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.TextWriter/System.IO.SyncTextWriter.get_Encoding
System::Text::Encoding* System::IO::TextWriter::SyncTextWriter::get_Encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::SyncTextWriter::get_Encoding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Encoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Text::Encoding*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter/System.IO.SyncTextWriter.get_FormatProvider
System::IFormatProvider* System::IO::TextWriter::SyncTextWriter::get_FormatProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::SyncTextWriter::get_FormatProvider");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FormatProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IFormatProvider*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter/System.IO.SyncTextWriter.Close
void System::IO::TextWriter::SyncTextWriter::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::SyncTextWriter::Close");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter/System.IO.SyncTextWriter.Dispose
void System::IO::TextWriter::SyncTextWriter::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::SyncTextWriter::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, disposing);
}
// Autogenerated method: System.IO.TextWriter/System.IO.SyncTextWriter.Flush
void System::IO::TextWriter::SyncTextWriter::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::SyncTextWriter::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter/System.IO.SyncTextWriter.Write
void System::IO::TextWriter::SyncTextWriter::Write(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::SyncTextWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter/System.IO.SyncTextWriter.Write
void System::IO::TextWriter::SyncTextWriter::Write(::ArrayW<::Il2CppChar> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::SyncTextWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, buffer);
}
// Autogenerated method: System.IO.TextWriter/System.IO.SyncTextWriter.Write
void System::IO::TextWriter::SyncTextWriter::Write(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::SyncTextWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.TextWriter/System.IO.SyncTextWriter.Write
void System::IO::TextWriter::SyncTextWriter::Write(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::SyncTextWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter/System.IO.SyncTextWriter.Write
void System::IO::TextWriter::SyncTextWriter::Write(::Il2CppString* format, ::Il2CppObject* arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::SyncTextWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(arg0)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, format, arg0);
}
// Autogenerated method: System.IO.TextWriter/System.IO.SyncTextWriter.Write
void System::IO::TextWriter::SyncTextWriter::Write(::Il2CppString* format, ::Il2CppObject* arg0, ::Il2CppObject* arg1, ::Il2CppObject* arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::SyncTextWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, format, arg0, arg1, arg2);
}
// Autogenerated method: System.IO.TextWriter/System.IO.SyncTextWriter.WriteLine
void System::IO::TextWriter::SyncTextWriter::WriteLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::SyncTextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.TextWriter/System.IO.SyncTextWriter.WriteLine
void System::IO::TextWriter::SyncTextWriter::WriteLine(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::SyncTextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter/System.IO.SyncTextWriter.WriteLine
void System::IO::TextWriter::SyncTextWriter::WriteLine(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::SyncTextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.TextWriter/System.IO.SyncTextWriter.WriteLine
void System::IO::TextWriter::SyncTextWriter::WriteLine(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::SyncTextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.IO.TextWriter/System.IO.SyncTextWriter.WriteLine
void System::IO::TextWriter::SyncTextWriter::WriteLine(::Il2CppString* format, ::Il2CppObject* arg0) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::SyncTextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(arg0)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, format, arg0);
}
// Autogenerated method: System.IO.TextWriter/System.IO.SyncTextWriter.WriteLine
void System::IO::TextWriter::SyncTextWriter::WriteLine(::Il2CppString* format, ::Il2CppObject* arg0, ::Il2CppObject* arg1) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::SyncTextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, format, arg0, arg1);
}
// Autogenerated method: System.IO.TextWriter/System.IO.SyncTextWriter.WriteLine
void System::IO::TextWriter::SyncTextWriter::WriteLine(::Il2CppString* format, ::Il2CppObject* arg0, ::Il2CppObject* arg1, ::Il2CppObject* arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::SyncTextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(arg0), ::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, format, arg0, arg1, arg2);
}
// Autogenerated method: System.IO.TextWriter/System.IO.SyncTextWriter.WriteLine
void System::IO::TextWriter::SyncTextWriter::WriteLine(::Il2CppString* format, ::ArrayW<::Il2CppObject*> arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::SyncTextWriter::WriteLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format), ::il2cpp_utils::ExtractType(arg)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, format, arg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.TextWriter/System.IO.<>c
#include "System/IO/TextWriter_--c.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IO.TextWriter/System.IO.<>c <>9
System::IO::TextWriter::$$c* System::IO::TextWriter::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::IO::TextWriter::$$c*>("System.IO", "TextWriter/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IO.TextWriter/System.IO.<>c <>9
void System::IO::TextWriter::$$c::_set_$$9(System::IO::TextWriter::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.IO", "TextWriter/<>c", "<>9", value)));
}
// Autogenerated method: System.IO.TextWriter/System.IO.<>c..cctor
void System::IO::TextWriter::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "TextWriter/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.TextWriter/System.IO.<>c.<.cctor>b__73_0
void System::IO::TextWriter::$$c::$_cctor$b__73_0(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::$$c::<.cctor>b__73_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__73_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, state);
}
// Autogenerated method: System.IO.TextWriter/System.IO.<>c.<.cctor>b__73_1
void System::IO::TextWriter::$$c::$_cctor$b__73_1(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::$$c::<.cctor>b__73_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__73_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, state);
}
// Autogenerated method: System.IO.TextWriter/System.IO.<>c.<.cctor>b__73_2
void System::IO::TextWriter::$$c::$_cctor$b__73_2(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::$$c::<.cctor>b__73_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__73_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, state);
}
// Autogenerated method: System.IO.TextWriter/System.IO.<>c.<.cctor>b__73_3
void System::IO::TextWriter::$$c::$_cctor$b__73_3(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::$$c::<.cctor>b__73_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__73_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, state);
}
// Autogenerated method: System.IO.TextWriter/System.IO.<>c.<.cctor>b__73_4
void System::IO::TextWriter::$$c::$_cctor$b__73_4(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::$$c::<.cctor>b__73_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__73_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, state);
}
// Autogenerated method: System.IO.TextWriter/System.IO.<>c.<.cctor>b__73_5
void System::IO::TextWriter::$$c::$_cctor$b__73_5(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::$$c::<.cctor>b__73_5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__73_5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, state);
}
// Autogenerated method: System.IO.TextWriter/System.IO.<>c.<.cctor>b__73_6
void System::IO::TextWriter::$$c::$_cctor$b__73_6(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::TextWriter::$$c::<.cctor>b__73_6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__73_6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.UnmanagedMemoryStream
#include "System/IO/UnmanagedMemoryStream.hpp"
// Including type: System.Runtime.InteropServices.SafeBuffer
#include "System/Runtime/InteropServices/SafeBuffer.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.SafeBuffer _buffer
System::Runtime::InteropServices::SafeBuffer*& System::IO::UnmanagedMemoryStream::dyn__buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::dyn__buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_buffer"))->offset;
  return *reinterpret_cast<System::Runtime::InteropServices::SafeBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte* _mem
uint8_t*& System::IO::UnmanagedMemoryStream::dyn__mem() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::dyn__mem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mem"))->offset;
  return *reinterpret_cast<uint8_t**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _length
int64_t& System::IO::UnmanagedMemoryStream::dyn__length() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::dyn__length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_length"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _capacity
int64_t& System::IO::UnmanagedMemoryStream::dyn__capacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::dyn__capacity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capacity"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _position
int64_t& System::IO::UnmanagedMemoryStream::dyn__position() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::dyn__position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_position"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 _offset
int64_t& System::IO::UnmanagedMemoryStream::dyn__offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::dyn__offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offset"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.FileAccess _access
System::IO::FileAccess& System::IO::UnmanagedMemoryStream::dyn__access() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::dyn__access");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_access"))->offset;
  return *reinterpret_cast<System::IO::FileAccess*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean _isOpen
bool& System::IO::UnmanagedMemoryStream::dyn__isOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::dyn__isOpen");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isOpen"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Tasks.Task`1<System.Int32> _lastReadTask
System::Threading::Tasks::Task_1<int>*& System::IO::UnmanagedMemoryStream::dyn__lastReadTask() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::dyn__lastReadTask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastReadTask"))->offset;
  return *reinterpret_cast<System::Threading::Tasks::Task_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.get_PositionPointer
uint8_t* System::IO::UnmanagedMemoryStream::get_PositionPointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::get_PositionPointer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PositionPointer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<uint8_t*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.Initialize
void System::IO::UnmanagedMemoryStream::Initialize(uint8_t* pointer, int64_t length, int64_t capacity, System::IO::FileAccess access, bool skipSecurityCheck) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pointer), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(capacity), ::il2cpp_utils::ExtractType(access), ::il2cpp_utils::ExtractType(skipSecurityCheck)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, pointer, length, capacity, access, skipSecurityCheck);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.get_CanRead
bool System::IO::UnmanagedMemoryStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.get_CanSeek
bool System::IO::UnmanagedMemoryStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanSeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.get_CanWrite
bool System::IO::UnmanagedMemoryStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.get_Length
int64_t System::IO::UnmanagedMemoryStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::get_Length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.get_Position
int64_t System::IO::UnmanagedMemoryStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::get_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.set_Position
void System::IO::UnmanagedMemoryStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::set_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.Dispose
void System::IO::UnmanagedMemoryStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, disposing);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.Flush
void System::IO::UnmanagedMemoryStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.Read
int System::IO::UnmanagedMemoryStream::Read(ByRef<::ArrayW<uint8_t>> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, byref(buffer), offset, count);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.ReadAsync
System::Threading::Tasks::Task_1<int>* System::IO::UnmanagedMemoryStream::ReadAsync(::ArrayW<uint8_t> buffer, int offset, int count, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::ReadAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<int>*, false>(___instance_arg, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.ReadByte
int System::IO::UnmanagedMemoryStream::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::ReadByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.Seek
int64_t System::IO::UnmanagedMemoryStream::Seek(int64_t offset, System::IO::SeekOrigin loc) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::Seek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(loc)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method, offset, loc);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.SetLength
void System::IO::UnmanagedMemoryStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::SetLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.Write
void System::IO::UnmanagedMemoryStream::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.WriteAsync
System::Threading::Tasks::Task* System::IO::UnmanagedMemoryStream::WriteAsync(::ArrayW<uint8_t> buffer, int offset, int count, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::WriteAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.UnmanagedMemoryStream.WriteByte
void System::IO::UnmanagedMemoryStream::WriteByte(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnmanagedMemoryStream::WriteByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.PathInternal
#include "System/IO/PathInternal.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.PathInternal.IsPartiallyQualified
bool System::IO::PathInternal::IsPartiallyQualified(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::PathInternal::IsPartiallyQualified");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "PathInternal", "IsPartiallyQualified", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.PathInternal.HasIllegalCharacters
bool System::IO::PathInternal::HasIllegalCharacters(::Il2CppString* path, bool checkAdditional) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::PathInternal::HasIllegalCharacters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "PathInternal", "HasIllegalCharacters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(checkAdditional)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, checkAdditional);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.DirectoryInfo
#include "System/IO/DirectoryInfo.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String current
::Il2CppString*& System::IO::DirectoryInfo::dyn_current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::DirectoryInfo::dyn_current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "current"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String parent
::Il2CppString*& System::IO::DirectoryInfo::dyn_parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::DirectoryInfo::dyn_parent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parent"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.DirectoryInfo.get_Parent
System::IO::DirectoryInfo* System::IO::DirectoryInfo::get_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::DirectoryInfo::get_Parent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IO::DirectoryInfo*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.DirectoryInfo.Initialize
void System::IO::DirectoryInfo::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::DirectoryInfo::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.DirectoryInfo.Create
void System::IO::DirectoryInfo::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::DirectoryInfo::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.DirectoryInfo.GetDirectories
::ArrayW<System::IO::DirectoryInfo*> System::IO::DirectoryInfo::GetDirectories() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::DirectoryInfo::GetDirectories");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDirectories", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<System::IO::DirectoryInfo*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.DirectoryInfo.GetDirectories
::ArrayW<System::IO::DirectoryInfo*> System::IO::DirectoryInfo::GetDirectories(::Il2CppString* searchPattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::DirectoryInfo::GetDirectories");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDirectories", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(searchPattern)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<System::IO::DirectoryInfo*>, false>(___instance_arg, ___internal__method, searchPattern);
}
// Autogenerated method: System.IO.DirectoryInfo.Delete
void System::IO::DirectoryInfo::Delete(bool recursive) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::DirectoryInfo::Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recursive)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, recursive);
}
// Autogenerated method: System.IO.DirectoryInfo.CheckPath
void System::IO::DirectoryInfo::CheckPath(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::DirectoryInfo::CheckPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, path);
}
// Autogenerated method: System.IO.DirectoryInfo.get_Exists
bool System::IO::DirectoryInfo::get_Exists() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::DirectoryInfo::get_Exists");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Exists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.DirectoryInfo.get_Name
::Il2CppString* System::IO::DirectoryInfo::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::DirectoryInfo::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.DirectoryInfo.Delete
void System::IO::DirectoryInfo::Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::DirectoryInfo::Delete");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.DirectoryInfo.ToString
::Il2CppString* System::IO::DirectoryInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::DirectoryInfo::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.File
#include "System/IO/File.hpp"
// Including type: System.IO.StreamWriter
#include "System/IO/StreamWriter.hpp"
// Including type: System.IO.FileStream
#include "System/IO/FileStream.hpp"
// Including type: System.IO.FileAttributes
#include "System/IO/FileAttributes.hpp"
// Including type: System.IO.FileMode
#include "System/IO/FileMode.hpp"
// Including type: System.IO.FileAccess
#include "System/IO/FileAccess.hpp"
// Including type: System.IO.FileShare
#include "System/IO/FileShare.hpp"
// Including type: System.IO.StreamReader
#include "System/IO/StreamReader.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.IO.MonoIOStat
#include "System/IO/MonoIOStat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Nullable`1<System.DateTime> defaultLocalFileTime
System::Nullable_1<System::DateTime> System::IO::File::_get_defaultLocalFileTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::_get_defaultLocalFileTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Nullable_1<System::DateTime>>("System.IO", "File", "defaultLocalFileTime"));
}
// Autogenerated static field setter
// Set static field: static private System.Nullable`1<System.DateTime> defaultLocalFileTime
void System::IO::File::_set_defaultLocalFileTime(System::Nullable_1<System::DateTime> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::_set_defaultLocalFileTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "File", "defaultLocalFileTime", value));
}
// Autogenerated method: System.IO.File.get_DefaultLocalFileTime
System::DateTime System::IO::File::get_DefaultLocalFileTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::get_DefaultLocalFileTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "get_DefaultLocalFileTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.File.AppendText
System::IO::StreamWriter* System::IO::File::AppendText(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::AppendText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "AppendText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<System::IO::StreamWriter*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.Create
System::IO::FileStream* System::IO::File::Create(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<System::IO::FileStream*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.Create
System::IO::FileStream* System::IO::File::Create(::Il2CppString* path, int bufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(bufferSize)})));
  return ::il2cpp_utils::RunMethodThrow<System::IO::FileStream*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, bufferSize);
}
// Autogenerated method: System.IO.File.CreateText
System::IO::StreamWriter* System::IO::File::CreateText(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::CreateText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "CreateText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<System::IO::StreamWriter*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.Delete
void System::IO::File::Delete(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::Delete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "Delete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.Exists
bool System::IO::File::Exists(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::Exists");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "Exists", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.GetAttributes
System::IO::FileAttributes System::IO::File::GetAttributes(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::GetAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "GetAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<System::IO::FileAttributes, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.GetCreationTime
System::DateTime System::IO::File::GetCreationTime(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::GetCreationTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "GetCreationTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.GetLastWriteTime
System::DateTime System::IO::File::GetLastWriteTime(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::GetLastWriteTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "GetLastWriteTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.Open
System::IO::FileStream* System::IO::File::Open(::Il2CppString* path, System::IO::FileMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::Open");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "Open", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodThrow<System::IO::FileStream*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, mode);
}
// Autogenerated method: System.IO.File.Open
System::IO::FileStream* System::IO::File::Open(::Il2CppString* path, System::IO::FileMode mode, System::IO::FileAccess access, System::IO::FileShare share) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::Open");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "Open", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(access), ::il2cpp_utils::ExtractType(share)})));
  return ::il2cpp_utils::RunMethodThrow<System::IO::FileStream*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, mode, access, share);
}
// Autogenerated method: System.IO.File.OpenRead
System::IO::FileStream* System::IO::File::OpenRead(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::OpenRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "OpenRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<System::IO::FileStream*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.OpenText
System::IO::StreamReader* System::IO::File::OpenText(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::OpenText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "OpenText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<System::IO::StreamReader*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.Replace
void System::IO::File::Replace(::Il2CppString* sourceFileName, ::Il2CppString* destinationFileName, ::Il2CppString* destinationBackupFileName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceFileName), ::il2cpp_utils::ExtractType(destinationFileName), ::il2cpp_utils::ExtractType(destinationBackupFileName)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sourceFileName, destinationFileName, destinationBackupFileName);
}
// Autogenerated method: System.IO.File.Replace
void System::IO::File::Replace(::Il2CppString* sourceFileName, ::Il2CppString* destinationFileName, ::Il2CppString* destinationBackupFileName, bool ignoreMetadataErrors) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::Replace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "Replace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceFileName), ::il2cpp_utils::ExtractType(destinationFileName), ::il2cpp_utils::ExtractType(destinationBackupFileName), ::il2cpp_utils::ExtractType(ignoreMetadataErrors)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sourceFileName, destinationFileName, destinationBackupFileName, ignoreMetadataErrors);
}
// Autogenerated method: System.IO.File.ReadAllBytes
::ArrayW<uint8_t> System::IO::File::ReadAllBytes(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::ReadAllBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "ReadAllBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<uint8_t>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.ReadAllLines
::ArrayW<::Il2CppString*> System::IO::File::ReadAllLines(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::ReadAllLines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "ReadAllLines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.ReadAllLines
::ArrayW<::Il2CppString*> System::IO::File::ReadAllLines(System::IO::StreamReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::ReadAllLines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "ReadAllLines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: System.IO.File.ReadAllText
::Il2CppString* System::IO::File::ReadAllText(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::ReadAllText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "ReadAllText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.File.WriteAllBytes
void System::IO::File::WriteAllBytes(::Il2CppString* path, ::ArrayW<uint8_t> bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::WriteAllBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "WriteAllBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(bytes)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, bytes);
}
// Autogenerated method: System.IO.File.WriteAllLines
void System::IO::File::WriteAllLines(::Il2CppString* path, ::ArrayW<::Il2CppString*> contents) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::WriteAllLines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "WriteAllLines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(contents)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, contents);
}
// Autogenerated method: System.IO.File.WriteAllLines
void System::IO::File::WriteAllLines(System::IO::StreamWriter* writer, ::ArrayW<::Il2CppString*> contents) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::WriteAllLines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "WriteAllLines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(contents)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, writer, contents);
}
// Autogenerated method: System.IO.File.WriteAllText
void System::IO::File::WriteAllText(::Il2CppString* path, ::Il2CppString* contents) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::WriteAllText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "WriteAllText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(contents)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, contents);
}
// Autogenerated method: System.IO.File.WriteAllText
void System::IO::File::WriteAllText(::Il2CppString* path, ::Il2CppString* contents, System::Text::Encoding* encoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::WriteAllText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "WriteAllText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(contents), ::il2cpp_utils::ExtractType(encoding)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, contents, encoding);
}
// Autogenerated method: System.IO.File.AppendAllLines
void System::IO::File::AppendAllLines(::Il2CppString* path, System::Collections::Generic::IEnumerable_1<::Il2CppString*>* contents) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::AppendAllLines");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "AppendAllLines", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(contents)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, contents);
}
// Autogenerated method: System.IO.File.FillAttributeInfo
int System::IO::File::FillAttributeInfo(::Il2CppString* path, ByRef<System::IO::MonoIOStat> data, bool tryagain, bool returnErrorOnNotFound) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::File::FillAttributeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "File", "FillAttributeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(tryagain), ::il2cpp_utils::ExtractType(returnErrorOnNotFound)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, byref(data), tryagain, returnErrorOnNotFound);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.FileAccess
#include "System/IO/FileAccess.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.FileAccess Read
System::IO::FileAccess System::IO::FileAccess::_get_Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAccess::_get_Read");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileAccess>("System.IO", "FileAccess", "Read"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAccess Read
void System::IO::FileAccess::_set_Read(System::IO::FileAccess value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAccess::_set_Read");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAccess", "Read", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAccess Write
System::IO::FileAccess System::IO::FileAccess::_get_Write() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAccess::_get_Write");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileAccess>("System.IO", "FileAccess", "Write"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAccess Write
void System::IO::FileAccess::_set_Write(System::IO::FileAccess value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAccess::_set_Write");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAccess", "Write", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAccess ReadWrite
System::IO::FileAccess System::IO::FileAccess::_get_ReadWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAccess::_get_ReadWrite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileAccess>("System.IO", "FileAccess", "ReadWrite"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAccess ReadWrite
void System::IO::FileAccess::_set_ReadWrite(System::IO::FileAccess value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAccess::_set_ReadWrite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAccess", "ReadWrite", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::IO::FileAccess::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAccess::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.FileAttributes
#include "System/IO/FileAttributes.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes Archive
System::IO::FileAttributes System::IO::FileAttributes::_get_Archive() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_get_Archive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileAttributes>("System.IO", "FileAttributes", "Archive"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes Archive
void System::IO::FileAttributes::_set_Archive(System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_set_Archive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "Archive", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes Compressed
System::IO::FileAttributes System::IO::FileAttributes::_get_Compressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_get_Compressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileAttributes>("System.IO", "FileAttributes", "Compressed"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes Compressed
void System::IO::FileAttributes::_set_Compressed(System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_set_Compressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "Compressed", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes Device
System::IO::FileAttributes System::IO::FileAttributes::_get_Device() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_get_Device");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileAttributes>("System.IO", "FileAttributes", "Device"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes Device
void System::IO::FileAttributes::_set_Device(System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_set_Device");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "Device", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes Directory
System::IO::FileAttributes System::IO::FileAttributes::_get_Directory() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_get_Directory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileAttributes>("System.IO", "FileAttributes", "Directory"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes Directory
void System::IO::FileAttributes::_set_Directory(System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_set_Directory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "Directory", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes Encrypted
System::IO::FileAttributes System::IO::FileAttributes::_get_Encrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_get_Encrypted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileAttributes>("System.IO", "FileAttributes", "Encrypted"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes Encrypted
void System::IO::FileAttributes::_set_Encrypted(System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_set_Encrypted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "Encrypted", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes Hidden
System::IO::FileAttributes System::IO::FileAttributes::_get_Hidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_get_Hidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileAttributes>("System.IO", "FileAttributes", "Hidden"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes Hidden
void System::IO::FileAttributes::_set_Hidden(System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_set_Hidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "Hidden", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes Normal
System::IO::FileAttributes System::IO::FileAttributes::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileAttributes>("System.IO", "FileAttributes", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes Normal
void System::IO::FileAttributes::_set_Normal(System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes NotContentIndexed
System::IO::FileAttributes System::IO::FileAttributes::_get_NotContentIndexed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_get_NotContentIndexed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileAttributes>("System.IO", "FileAttributes", "NotContentIndexed"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes NotContentIndexed
void System::IO::FileAttributes::_set_NotContentIndexed(System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_set_NotContentIndexed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "NotContentIndexed", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes Offline
System::IO::FileAttributes System::IO::FileAttributes::_get_Offline() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_get_Offline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileAttributes>("System.IO", "FileAttributes", "Offline"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes Offline
void System::IO::FileAttributes::_set_Offline(System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_set_Offline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "Offline", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes ReadOnly
System::IO::FileAttributes System::IO::FileAttributes::_get_ReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_get_ReadOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileAttributes>("System.IO", "FileAttributes", "ReadOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes ReadOnly
void System::IO::FileAttributes::_set_ReadOnly(System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_set_ReadOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "ReadOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes ReparsePoint
System::IO::FileAttributes System::IO::FileAttributes::_get_ReparsePoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_get_ReparsePoint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileAttributes>("System.IO", "FileAttributes", "ReparsePoint"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes ReparsePoint
void System::IO::FileAttributes::_set_ReparsePoint(System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_set_ReparsePoint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "ReparsePoint", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes SparseFile
System::IO::FileAttributes System::IO::FileAttributes::_get_SparseFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_get_SparseFile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileAttributes>("System.IO", "FileAttributes", "SparseFile"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes SparseFile
void System::IO::FileAttributes::_set_SparseFile(System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_set_SparseFile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "SparseFile", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes System
System::IO::FileAttributes System::IO::FileAttributes::_get_System() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_get_System");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileAttributes>("System.IO", "FileAttributes", "System"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes System
void System::IO::FileAttributes::_set_System(System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_set_System");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "System", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes Temporary
System::IO::FileAttributes System::IO::FileAttributes::_get_Temporary() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_get_Temporary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileAttributes>("System.IO", "FileAttributes", "Temporary"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes Temporary
void System::IO::FileAttributes::_set_Temporary(System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_set_Temporary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "Temporary", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes IntegrityStream
System::IO::FileAttributes System::IO::FileAttributes::_get_IntegrityStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_get_IntegrityStream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileAttributes>("System.IO", "FileAttributes", "IntegrityStream"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes IntegrityStream
void System::IO::FileAttributes::_set_IntegrityStream(System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_set_IntegrityStream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "IntegrityStream", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileAttributes NoScrubData
System::IO::FileAttributes System::IO::FileAttributes::_get_NoScrubData() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_get_NoScrubData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileAttributes>("System.IO", "FileAttributes", "NoScrubData"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileAttributes NoScrubData
void System::IO::FileAttributes::_set_NoScrubData(System::IO::FileAttributes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::_set_NoScrubData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileAttributes", "NoScrubData", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::IO::FileAttributes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileAttributes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.FileMode
#include "System/IO/FileMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.FileMode CreateNew
System::IO::FileMode System::IO::FileMode::_get_CreateNew() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileMode::_get_CreateNew");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileMode>("System.IO", "FileMode", "CreateNew"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileMode CreateNew
void System::IO::FileMode::_set_CreateNew(System::IO::FileMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileMode::_set_CreateNew");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileMode", "CreateNew", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileMode Create
System::IO::FileMode System::IO::FileMode::_get_Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileMode::_get_Create");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileMode>("System.IO", "FileMode", "Create"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileMode Create
void System::IO::FileMode::_set_Create(System::IO::FileMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileMode::_set_Create");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileMode", "Create", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileMode Open
System::IO::FileMode System::IO::FileMode::_get_Open() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileMode::_get_Open");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileMode>("System.IO", "FileMode", "Open"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileMode Open
void System::IO::FileMode::_set_Open(System::IO::FileMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileMode::_set_Open");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileMode", "Open", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileMode OpenOrCreate
System::IO::FileMode System::IO::FileMode::_get_OpenOrCreate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileMode::_get_OpenOrCreate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileMode>("System.IO", "FileMode", "OpenOrCreate"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileMode OpenOrCreate
void System::IO::FileMode::_set_OpenOrCreate(System::IO::FileMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileMode::_set_OpenOrCreate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileMode", "OpenOrCreate", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileMode Truncate
System::IO::FileMode System::IO::FileMode::_get_Truncate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileMode::_get_Truncate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileMode>("System.IO", "FileMode", "Truncate"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileMode Truncate
void System::IO::FileMode::_set_Truncate(System::IO::FileMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileMode::_set_Truncate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileMode", "Truncate", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileMode Append
System::IO::FileMode System::IO::FileMode::_get_Append() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileMode::_get_Append");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileMode>("System.IO", "FileMode", "Append"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileMode Append
void System::IO::FileMode::_set_Append(System::IO::FileMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileMode::_set_Append");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileMode", "Append", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::IO::FileMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.FileOptions
#include "System/IO/FileOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.FileOptions None
System::IO::FileOptions System::IO::FileOptions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileOptions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileOptions>("System.IO", "FileOptions", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileOptions None
void System::IO::FileOptions::_set_None(System::IO::FileOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileOptions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileOptions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileOptions Encrypted
System::IO::FileOptions System::IO::FileOptions::_get_Encrypted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileOptions::_get_Encrypted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileOptions>("System.IO", "FileOptions", "Encrypted"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileOptions Encrypted
void System::IO::FileOptions::_set_Encrypted(System::IO::FileOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileOptions::_set_Encrypted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileOptions", "Encrypted", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileOptions DeleteOnClose
System::IO::FileOptions System::IO::FileOptions::_get_DeleteOnClose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileOptions::_get_DeleteOnClose");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileOptions>("System.IO", "FileOptions", "DeleteOnClose"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileOptions DeleteOnClose
void System::IO::FileOptions::_set_DeleteOnClose(System::IO::FileOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileOptions::_set_DeleteOnClose");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileOptions", "DeleteOnClose", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileOptions SequentialScan
System::IO::FileOptions System::IO::FileOptions::_get_SequentialScan() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileOptions::_get_SequentialScan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileOptions>("System.IO", "FileOptions", "SequentialScan"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileOptions SequentialScan
void System::IO::FileOptions::_set_SequentialScan(System::IO::FileOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileOptions::_set_SequentialScan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileOptions", "SequentialScan", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileOptions RandomAccess
System::IO::FileOptions System::IO::FileOptions::_get_RandomAccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileOptions::_get_RandomAccess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileOptions>("System.IO", "FileOptions", "RandomAccess"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileOptions RandomAccess
void System::IO::FileOptions::_set_RandomAccess(System::IO::FileOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileOptions::_set_RandomAccess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileOptions", "RandomAccess", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileOptions Asynchronous
System::IO::FileOptions System::IO::FileOptions::_get_Asynchronous() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileOptions::_get_Asynchronous");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileOptions>("System.IO", "FileOptions", "Asynchronous"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileOptions Asynchronous
void System::IO::FileOptions::_set_Asynchronous(System::IO::FileOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileOptions::_set_Asynchronous");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileOptions", "Asynchronous", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileOptions WriteThrough
System::IO::FileOptions System::IO::FileOptions::_get_WriteThrough() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileOptions::_get_WriteThrough");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileOptions>("System.IO", "FileOptions", "WriteThrough"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileOptions WriteThrough
void System::IO::FileOptions::_set_WriteThrough(System::IO::FileOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileOptions::_set_WriteThrough");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileOptions", "WriteThrough", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::IO::FileOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.FileShare
#include "System/IO/FileShare.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.FileShare None
System::IO::FileShare System::IO::FileShare::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileShare::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileShare>("System.IO", "FileShare", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileShare None
void System::IO::FileShare::_set_None(System::IO::FileShare value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileShare::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileShare", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileShare Read
System::IO::FileShare System::IO::FileShare::_get_Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileShare::_get_Read");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileShare>("System.IO", "FileShare", "Read"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileShare Read
void System::IO::FileShare::_set_Read(System::IO::FileShare value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileShare::_set_Read");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileShare", "Read", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileShare Write
System::IO::FileShare System::IO::FileShare::_get_Write() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileShare::_get_Write");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileShare>("System.IO", "FileShare", "Write"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileShare Write
void System::IO::FileShare::_set_Write(System::IO::FileShare value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileShare::_set_Write");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileShare", "Write", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileShare ReadWrite
System::IO::FileShare System::IO::FileShare::_get_ReadWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileShare::_get_ReadWrite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileShare>("System.IO", "FileShare", "ReadWrite"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileShare ReadWrite
void System::IO::FileShare::_set_ReadWrite(System::IO::FileShare value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileShare::_set_ReadWrite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileShare", "ReadWrite", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileShare Delete
System::IO::FileShare System::IO::FileShare::_get_Delete() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileShare::_get_Delete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileShare>("System.IO", "FileShare", "Delete"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileShare Delete
void System::IO::FileShare::_set_Delete(System::IO::FileShare value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileShare::_set_Delete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileShare", "Delete", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.FileShare Inheritable
System::IO::FileShare System::IO::FileShare::_get_Inheritable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileShare::_get_Inheritable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::FileShare>("System.IO", "FileShare", "Inheritable"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.FileShare Inheritable
void System::IO::FileShare::_set_Inheritable(System::IO::FileShare value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileShare::_set_Inheritable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileShare", "Inheritable", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::IO::FileShare::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileShare::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.FileStream
#include "System/IO/FileStream.hpp"
// Including type: System.IO.FileStream/System.IO.ReadDelegate
#include "System/IO/FileStream_ReadDelegate.hpp"
// Including type: System.IO.FileStream/System.IO.WriteDelegate
#include "System/IO/FileStream_WriteDelegate.hpp"
// Including type: Microsoft.Win32.SafeHandles.SafeFileHandle
#include "Microsoft/Win32/SafeHandles/SafeFileHandle.hpp"
// Including type: System.Runtime.InteropServices.SafeHandle
#include "System/Runtime/InteropServices/SafeHandle.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int32 DefaultBufferSize
int System::IO::FileStream::_get_DefaultBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::_get_DefaultBufferSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.IO", "FileStream", "DefaultBufferSize"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 DefaultBufferSize
void System::IO::FileStream::_set_DefaultBufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::_set_DefaultBufferSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileStream", "DefaultBufferSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] buf_recycle
::ArrayW<uint8_t> System::IO::FileStream::_get_buf_recycle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::_get_buf_recycle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.IO", "FileStream", "buf_recycle"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] buf_recycle
void System::IO::FileStream::_set_buf_recycle(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::_set_buf_recycle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileStream", "buf_recycle", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object buf_recycle_lock
::Il2CppObject* System::IO::FileStream::_get_buf_recycle_lock() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::_get_buf_recycle_lock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.IO", "FileStream", "buf_recycle_lock"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object buf_recycle_lock
void System::IO::FileStream::_set_buf_recycle_lock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::_set_buf_recycle_lock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "FileStream", "buf_recycle_lock", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Byte[] buf
::ArrayW<uint8_t>& System::IO::FileStream::dyn_buf() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::dyn_buf");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buf"))->offset;
  return *reinterpret_cast<::ArrayW<uint8_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String name
::Il2CppString*& System::IO::FileStream::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::dyn_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Microsoft.Win32.SafeHandles.SafeFileHandle safeHandle
Microsoft::Win32::SafeHandles::SafeFileHandle*& System::IO::FileStream::dyn_safeHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::dyn_safeHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "safeHandle"))->offset;
  return *reinterpret_cast<Microsoft::Win32::SafeHandles::SafeFileHandle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isExposed
bool& System::IO::FileStream::dyn_isExposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::dyn_isExposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isExposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 append_startpos
int64_t& System::IO::FileStream::dyn_append_startpos() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::dyn_append_startpos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "append_startpos"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.FileAccess access
System::IO::FileAccess& System::IO::FileStream::dyn_access() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::dyn_access");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "access"))->offset;
  return *reinterpret_cast<System::IO::FileAccess*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean owner
bool& System::IO::FileStream::dyn_owner() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::dyn_owner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "owner"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean async
bool& System::IO::FileStream::dyn_async() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::dyn_async");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "async"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean canseek
bool& System::IO::FileStream::dyn_canseek() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::dyn_canseek");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "canseek"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean anonymous
bool& System::IO::FileStream::dyn_anonymous() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::dyn_anonymous");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anonymous"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean buf_dirty
bool& System::IO::FileStream::dyn_buf_dirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::dyn_buf_dirty");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buf_dirty"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 buf_size
int& System::IO::FileStream::dyn_buf_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::dyn_buf_size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buf_size"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 buf_length
int& System::IO::FileStream::dyn_buf_length() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::dyn_buf_length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buf_length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 buf_offset
int& System::IO::FileStream::dyn_buf_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::dyn_buf_offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buf_offset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 buf_start
int64_t& System::IO::FileStream::dyn_buf_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::dyn_buf_start");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buf_start"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.FileStream.get_SafeFileHandle
Microsoft::Win32::SafeHandles::SafeFileHandle* System::IO::FileStream::get_SafeFileHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::get_SafeFileHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SafeFileHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Microsoft::Win32::SafeHandles::SafeFileHandle*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.Init
void System::IO::FileStream::Init(Microsoft::Win32::SafeHandles::SafeFileHandle* safeHandle, System::IO::FileAccess access, bool ownsHandle, int bufferSize, bool isAsync, bool isConsoleWrapper) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractType(access), ::il2cpp_utils::ExtractType(ownsHandle), ::il2cpp_utils::ExtractType(bufferSize), ::il2cpp_utils::ExtractType(isAsync), ::il2cpp_utils::ExtractType(isConsoleWrapper)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, safeHandle, access, ownsHandle, bufferSize, isAsync, isConsoleWrapper);
}
// Autogenerated method: System.IO.FileStream.ExposeHandle
void System::IO::FileStream::ExposeHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::ExposeHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExposeHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.ReadInternal
int System::IO::FileStream::ReadInternal(::ArrayW<uint8_t> dest, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::ReadInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, dest, offset, count);
}
// Autogenerated method: System.IO.FileStream.WriteInternal
void System::IO::FileStream::WriteInternal(::ArrayW<uint8_t> src, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::WriteInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, src, offset, count);
}
// Autogenerated method: System.IO.FileStream.ReadSegment
int System::IO::FileStream::ReadSegment(::ArrayW<uint8_t> dest, int dest_offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::ReadSegment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadSegment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(dest_offset), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, dest, dest_offset, count);
}
// Autogenerated method: System.IO.FileStream.WriteSegment
int System::IO::FileStream::WriteSegment(::ArrayW<uint8_t> src, int src_offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::WriteSegment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSegment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(src_offset), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, src, src_offset, count);
}
// Autogenerated method: System.IO.FileStream.FlushBuffer
void System::IO::FileStream::FlushBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::FlushBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.FlushBufferIfDirty
void System::IO::FileStream::FlushBufferIfDirty() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::FlushBufferIfDirty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlushBufferIfDirty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.RefillBuffer
void System::IO::FileStream::RefillBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::RefillBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefillBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.ReadData
int System::IO::FileStream::ReadData(System::Runtime::InteropServices::SafeHandle* safeHandle, ::ArrayW<uint8_t> buf, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::ReadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractType(buf), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, safeHandle, buf, offset, count);
}
// Autogenerated method: System.IO.FileStream.InitBuffer
void System::IO::FileStream::InitBuffer(int size, bool isZeroSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::InitBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(isZeroSize)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, size, isZeroSize);
}
// Autogenerated method: System.IO.FileStream.GetSecureFileName
::Il2CppString* System::IO::FileStream::GetSecureFileName(::Il2CppString* filename) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::GetSecureFileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSecureFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filename)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method, filename);
}
// Autogenerated method: System.IO.FileStream.GetSecureFileName
::Il2CppString* System::IO::FileStream::GetSecureFileName(::Il2CppString* filename, bool full) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::GetSecureFileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSecureFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filename), ::il2cpp_utils::ExtractType(full)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method, filename, full);
}
// Autogenerated method: System.IO.FileStream.get_CanRead
bool System::IO::FileStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.get_CanWrite
bool System::IO::FileStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.get_CanSeek
bool System::IO::FileStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanSeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.get_Length
int64_t System::IO::FileStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::get_Length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.get_Position
int64_t System::IO::FileStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::get_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.set_Position
void System::IO::FileStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::set_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.IO.FileStream..cctor
void System::IO::FileStream::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "FileStream", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.FileStream.ReadByte
int System::IO::FileStream::ReadByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::ReadByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.WriteByte
void System::IO::FileStream::WriteByte(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::WriteByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.IO.FileStream.Read
int System::IO::FileStream::Read(ByRef<::ArrayW<uint8_t>> array, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, byref(array), offset, count);
}
// Autogenerated method: System.IO.FileStream.BeginRead
System::IAsyncResult* System::IO::FileStream::BeginRead(::ArrayW<uint8_t> array, int offset, int numBytes, System::AsyncCallback* userCallback, ::Il2CppObject* stateObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::BeginRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(numBytes), ::il2cpp_utils::ExtractType(userCallback), ::il2cpp_utils::ExtractType(stateObject)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, array, offset, numBytes, userCallback, stateObject);
}
// Autogenerated method: System.IO.FileStream.EndRead
int System::IO::FileStream::EndRead(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::EndRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, asyncResult);
}
// Autogenerated method: System.IO.FileStream.Write
void System::IO::FileStream::Write(::ArrayW<uint8_t> array, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, array, offset, count);
}
// Autogenerated method: System.IO.FileStream.BeginWrite
System::IAsyncResult* System::IO::FileStream::BeginWrite(::ArrayW<uint8_t> array, int offset, int numBytes, System::AsyncCallback* userCallback, ::Il2CppObject* stateObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::BeginWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(numBytes), ::il2cpp_utils::ExtractType(userCallback), ::il2cpp_utils::ExtractType(stateObject)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, array, offset, numBytes, userCallback, stateObject);
}
// Autogenerated method: System.IO.FileStream.EndWrite
void System::IO::FileStream::EndWrite(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::EndWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, asyncResult);
}
// Autogenerated method: System.IO.FileStream.Seek
int64_t System::IO::FileStream::Seek(int64_t offset, System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::Seek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(origin)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(___instance_arg, ___internal__method, offset, origin);
}
// Autogenerated method: System.IO.FileStream.SetLength
void System::IO::FileStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::SetLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.IO.FileStream.Flush
void System::IO::FileStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.Finalize
void System::IO::FileStream::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileStream.Dispose
void System::IO::FileStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, disposing);
}
// Autogenerated method: System.IO.FileStream.ReadAsync
System::Threading::Tasks::Task_1<int>* System::IO::FileStream::ReadAsync(::ArrayW<uint8_t> buffer, int offset, int count, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::ReadAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<int>*, false>(___instance_arg, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: System.IO.FileStream.WriteAsync
System::Threading::Tasks::Task* System::IO::FileStream::WriteAsync(::ArrayW<uint8_t> buffer, int offset, int count, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::WriteAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(cancellationToken)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(___instance_arg, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.FileStream/System.IO.ReadDelegate
#include "System/IO/FileStream_ReadDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.FileStream/System.IO.ReadDelegate.Invoke
int System::IO::FileStream::ReadDelegate::Invoke(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::ReadDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.FileStream/System.IO.ReadDelegate.BeginInvoke
System::IAsyncResult* System::IO::FileStream::ReadDelegate::BeginInvoke(::ArrayW<uint8_t> buffer, int offset, int count, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::ReadDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, buffer, offset, count, callback, object);
}
// Autogenerated method: System.IO.FileStream/System.IO.ReadDelegate.EndInvoke
int System::IO::FileStream::ReadDelegate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::ReadDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.FileStream/System.IO.WriteDelegate
#include "System/IO/FileStream_WriteDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.FileStream/System.IO.WriteDelegate.Invoke
void System::IO::FileStream::WriteDelegate::Invoke(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::WriteDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.IO.FileStream/System.IO.WriteDelegate.BeginInvoke
System::IAsyncResult* System::IO::FileStream::WriteDelegate::BeginInvoke(::ArrayW<uint8_t> buffer, int offset, int count, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::WriteDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(___instance_arg, ___internal__method, buffer, offset, count, callback, object);
}
// Autogenerated method: System.IO.FileStream/System.IO.WriteDelegate.EndInvoke
void System::IO::FileStream::WriteDelegate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStream::WriteDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.FileStreamAsyncResult
#include "System/IO/FileStreamAsyncResult.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Object state
::Il2CppObject*& System::IO::FileStreamAsyncResult::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStreamAsyncResult::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean completed
bool& System::IO::FileStreamAsyncResult::dyn_completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStreamAsyncResult::dyn_completed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.ManualResetEvent wh
System::Threading::ManualResetEvent*& System::IO::FileStreamAsyncResult::dyn_wh() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStreamAsyncResult::dyn_wh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wh"))->offset;
  return *reinterpret_cast<System::Threading::ManualResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.AsyncCallback cb
System::AsyncCallback*& System::IO::FileStreamAsyncResult::dyn_cb() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStreamAsyncResult::dyn_cb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cb"))->offset;
  return *reinterpret_cast<System::AsyncCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean completedSynch
bool& System::IO::FileStreamAsyncResult::dyn_completedSynch() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStreamAsyncResult::dyn_completedSynch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "completedSynch"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Count
int& System::IO::FileStreamAsyncResult::dyn_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStreamAsyncResult::dyn_Count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 OriginalCount
int& System::IO::FileStreamAsyncResult::dyn_OriginalCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStreamAsyncResult::dyn_OriginalCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OriginalCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 BytesRead
int& System::IO::FileStreamAsyncResult::dyn_BytesRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStreamAsyncResult::dyn_BytesRead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "BytesRead"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.AsyncCallback realcb
System::AsyncCallback*& System::IO::FileStreamAsyncResult::dyn_realcb() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStreamAsyncResult::dyn_realcb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "realcb"))->offset;
  return *reinterpret_cast<System::AsyncCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.FileStreamAsyncResult.get_AsyncState
::Il2CppObject* System::IO::FileStreamAsyncResult::get_AsyncState() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStreamAsyncResult::get_AsyncState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsyncState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileStreamAsyncResult.get_CompletedSynchronously
bool System::IO::FileStreamAsyncResult::get_CompletedSynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStreamAsyncResult::get_CompletedSynchronously");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompletedSynchronously", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileStreamAsyncResult.get_AsyncWaitHandle
System::Threading::WaitHandle* System::IO::FileStreamAsyncResult::get_AsyncWaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStreamAsyncResult::get_AsyncWaitHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsyncWaitHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Threading::WaitHandle*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileStreamAsyncResult.get_IsCompleted
bool System::IO::FileStreamAsyncResult::get_IsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStreamAsyncResult::get_IsCompleted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.FileStreamAsyncResult.CBWrapper
void System::IO::FileStreamAsyncResult::CBWrapper(System::IAsyncResult* ares) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::FileStreamAsyncResult::CBWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "FileStreamAsyncResult", "CBWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ares)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ares);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.MonoFileType
#include "System/IO/MonoFileType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.MonoFileType Unknown
System::IO::MonoFileType System::IO::MonoFileType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoFileType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoFileType>("System.IO", "MonoFileType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoFileType Unknown
void System::IO::MonoFileType::_set_Unknown(System::IO::MonoFileType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoFileType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoFileType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoFileType Disk
System::IO::MonoFileType System::IO::MonoFileType::_get_Disk() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoFileType::_get_Disk");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoFileType>("System.IO", "MonoFileType", "Disk"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoFileType Disk
void System::IO::MonoFileType::_set_Disk(System::IO::MonoFileType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoFileType::_set_Disk");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoFileType", "Disk", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoFileType Char
System::IO::MonoFileType System::IO::MonoFileType::_get_Char() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoFileType::_get_Char");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoFileType>("System.IO", "MonoFileType", "Char"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoFileType Char
void System::IO::MonoFileType::_set_Char(System::IO::MonoFileType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoFileType::_set_Char");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoFileType", "Char", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoFileType Pipe
System::IO::MonoFileType System::IO::MonoFileType::_get_Pipe() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoFileType::_get_Pipe");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoFileType>("System.IO", "MonoFileType", "Pipe"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoFileType Pipe
void System::IO::MonoFileType::_set_Pipe(System::IO::MonoFileType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoFileType::_set_Pipe");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoFileType", "Pipe", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoFileType Remote
System::IO::MonoFileType System::IO::MonoFileType::_get_Remote() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoFileType::_get_Remote");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoFileType>("System.IO", "MonoFileType", "Remote"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoFileType Remote
void System::IO::MonoFileType::_set_Remote(System::IO::MonoFileType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoFileType::_set_Remote");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoFileType", "Remote", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::IO::MonoFileType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoFileType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.MonoIO
#include "System/IO/MonoIO.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.IO.MonoIOError
#include "System/IO/MonoIOError.hpp"
// Including type: System.IO.FileAttributes
#include "System/IO/FileAttributes.hpp"
// Including type: System.IO.MonoFileType
#include "System/IO/MonoFileType.hpp"
// Including type: System.Runtime.InteropServices.SafeHandle
#include "System/Runtime/InteropServices/SafeHandle.hpp"
// Including type: System.IO.MonoIOStat
#include "System/IO/MonoIOStat.hpp"
// Including type: System.IO.FileMode
#include "System/IO/FileMode.hpp"
// Including type: System.IO.FileAccess
#include "System/IO/FileAccess.hpp"
// Including type: System.IO.FileShare
#include "System/IO/FileShare.hpp"
// Including type: System.IO.FileOptions
#include "System/IO/FileOptions.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.IntPtr InvalidHandle
System::IntPtr System::IO::MonoIO::_get_InvalidHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::_get_InvalidHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("System.IO", "MonoIO", "InvalidHandle"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.IntPtr InvalidHandle
void System::IO::MonoIO::_set_InvalidHandle(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::_set_InvalidHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIO", "InvalidHandle", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean dump_handles
bool System::IO::MonoIO::_get_dump_handles() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::_get_dump_handles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.IO", "MonoIO", "dump_handles"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean dump_handles
void System::IO::MonoIO::_set_dump_handles(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::_set_dump_handles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIO", "dump_handles", value));
}
// Autogenerated method: System.IO.MonoIO.get_ConsoleOutput
System::IntPtr System::IO::MonoIO::get_ConsoleOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::get_ConsoleOutput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "get_ConsoleOutput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO.get_ConsoleInput
System::IntPtr System::IO::MonoIO::get_ConsoleInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::get_ConsoleInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "get_ConsoleInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO.get_ConsoleError
System::IntPtr System::IO::MonoIO::get_ConsoleError() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::get_ConsoleError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "get_ConsoleError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO.get_VolumeSeparatorChar
::Il2CppChar System::IO::MonoIO::get_VolumeSeparatorChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::get_VolumeSeparatorChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "get_VolumeSeparatorChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO.get_DirectorySeparatorChar
::Il2CppChar System::IO::MonoIO::get_DirectorySeparatorChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::get_DirectorySeparatorChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "get_DirectorySeparatorChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO.get_AltDirectorySeparatorChar
::Il2CppChar System::IO::MonoIO::get_AltDirectorySeparatorChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::get_AltDirectorySeparatorChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "get_AltDirectorySeparatorChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO.get_PathSeparator
::Il2CppChar System::IO::MonoIO::get_PathSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::get_PathSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "get_PathSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO..cctor
void System::IO::MonoIO::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO.GetException
System::Exception* System::IO::MonoIO::GetException(System::IO::MonoIOError error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::GetException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, error);
}
// Autogenerated method: System.IO.MonoIO.GetException
System::Exception* System::IO::MonoIO::GetException(::Il2CppString* path, System::IO::MonoIOError error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::GetException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(error)})));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, error);
}
// Autogenerated method: System.IO.MonoIO.CreateDirectory
bool System::IO::MonoIO::CreateDirectory(::Il2CppChar* path, ByRef<System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::CreateDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "CreateDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, byref(error));
}
// Autogenerated method: System.IO.MonoIO.CreateDirectory
bool System::IO::MonoIO::CreateDirectory(::Il2CppString* path, ByRef<System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::CreateDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "CreateDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, byref(error));
}
// Autogenerated method: System.IO.MonoIO.RemoveDirectory
bool System::IO::MonoIO::RemoveDirectory(::Il2CppChar* path, ByRef<System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::RemoveDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "RemoveDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, byref(error));
}
// Autogenerated method: System.IO.MonoIO.RemoveDirectory
bool System::IO::MonoIO::RemoveDirectory(::Il2CppString* path, ByRef<System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::RemoveDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "RemoveDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, byref(error));
}
// Autogenerated method: System.IO.MonoIO.GetCurrentDirectory
::Il2CppString* System::IO::MonoIO::GetCurrentDirectory(ByRef<System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::GetCurrentDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetCurrentDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, byref(error));
}
// Autogenerated method: System.IO.MonoIO.DeleteFile
bool System::IO::MonoIO::DeleteFile(::Il2CppChar* path, ByRef<System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::DeleteFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "DeleteFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, byref(error));
}
// Autogenerated method: System.IO.MonoIO.DeleteFile
bool System::IO::MonoIO::DeleteFile(::Il2CppString* path, ByRef<System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::DeleteFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "DeleteFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, byref(error));
}
// Autogenerated method: System.IO.MonoIO.ReplaceFile
bool System::IO::MonoIO::ReplaceFile(::Il2CppChar* sourceFileName, ::Il2CppChar* destinationFileName, ::Il2CppChar* destinationBackupFileName, bool ignoreMetadataErrors, ByRef<System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::ReplaceFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "ReplaceFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceFileName), ::il2cpp_utils::ExtractType(destinationFileName), ::il2cpp_utils::ExtractType(destinationBackupFileName), ::il2cpp_utils::ExtractType(ignoreMetadataErrors), ::il2cpp_utils::ExtractIndependentType<System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sourceFileName, destinationFileName, destinationBackupFileName, ignoreMetadataErrors, byref(error));
}
// Autogenerated method: System.IO.MonoIO.ReplaceFile
bool System::IO::MonoIO::ReplaceFile(::Il2CppString* sourceFileName, ::Il2CppString* destinationFileName, ::Il2CppString* destinationBackupFileName, bool ignoreMetadataErrors, ByRef<System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::ReplaceFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "ReplaceFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceFileName), ::il2cpp_utils::ExtractType(destinationFileName), ::il2cpp_utils::ExtractType(destinationBackupFileName), ::il2cpp_utils::ExtractType(ignoreMetadataErrors), ::il2cpp_utils::ExtractIndependentType<System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sourceFileName, destinationFileName, destinationBackupFileName, ignoreMetadataErrors, byref(error));
}
// Autogenerated method: System.IO.MonoIO.GetFileAttributes
System::IO::FileAttributes System::IO::MonoIO::GetFileAttributes(::Il2CppChar* path, ByRef<System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::GetFileAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetFileAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodThrow<System::IO::FileAttributes, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, byref(error));
}
// Autogenerated method: System.IO.MonoIO.GetFileAttributes
System::IO::FileAttributes System::IO::MonoIO::GetFileAttributes(::Il2CppString* path, ByRef<System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::GetFileAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetFileAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodThrow<System::IO::FileAttributes, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, byref(error));
}
// Autogenerated method: System.IO.MonoIO.GetFileType
System::IO::MonoFileType System::IO::MonoIO::GetFileType(System::IntPtr handle, ByRef<System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::GetFileType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetFileType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractIndependentType<System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodThrow<System::IO::MonoFileType, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, byref(error));
}
// Autogenerated method: System.IO.MonoIO.GetFileType
System::IO::MonoFileType System::IO::MonoIO::GetFileType(System::Runtime::InteropServices::SafeHandle* safeHandle, ByRef<System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::GetFileType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetFileType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractIndependentType<System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodThrow<System::IO::MonoFileType, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, safeHandle, byref(error));
}
// Autogenerated method: System.IO.MonoIO.FindFirstFile
System::IntPtr System::IO::MonoIO::FindFirstFile(::Il2CppChar* pathWithPattern, ByRef<::Il2CppString*> fileName, ByRef<int> fileAttr, ByRef<int> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::FindFirstFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "FindFirstFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pathWithPattern), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pathWithPattern, byref(fileName), byref(fileAttr), byref(error));
}
// Autogenerated method: System.IO.MonoIO.FindFirstFile
System::IntPtr System::IO::MonoIO::FindFirstFile(::Il2CppString* pathWithPattern, ByRef<::Il2CppString*> fileName, ByRef<int> fileAttr, ByRef<int> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::FindFirstFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "FindFirstFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pathWithPattern), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pathWithPattern, byref(fileName), byref(fileAttr), byref(error));
}
// Autogenerated method: System.IO.MonoIO.FindNextFile
bool System::IO::MonoIO::FindNextFile(System::IntPtr hnd, ByRef<::Il2CppString*> fileName, ByRef<int> fileAttr, ByRef<int> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::FindNextFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "FindNextFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hnd), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hnd, byref(fileName), byref(fileAttr), byref(error));
}
// Autogenerated method: System.IO.MonoIO.FindCloseFile
bool System::IO::MonoIO::FindCloseFile(System::IntPtr hnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::FindCloseFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "FindCloseFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hnd)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hnd);
}
// Autogenerated method: System.IO.MonoIO.ExistsFile
bool System::IO::MonoIO::ExistsFile(::Il2CppString* path, ByRef<System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::ExistsFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "ExistsFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, byref(error));
}
// Autogenerated method: System.IO.MonoIO.ExistsDirectory
bool System::IO::MonoIO::ExistsDirectory(::Il2CppString* path, ByRef<System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::ExistsDirectory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "ExistsDirectory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, byref(error));
}
// Autogenerated method: System.IO.MonoIO.ExistsSymlink
bool System::IO::MonoIO::ExistsSymlink(::Il2CppString* path, ByRef<System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::ExistsSymlink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "ExistsSymlink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, byref(error));
}
// Autogenerated method: System.IO.MonoIO.GetFileStat
bool System::IO::MonoIO::GetFileStat(::Il2CppChar* path, ByRef<System::IO::MonoIOStat> stat, ByRef<System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::GetFileStat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetFileStat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<System::IO::MonoIOStat&>(), ::il2cpp_utils::ExtractIndependentType<System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, byref(stat), byref(error));
}
// Autogenerated method: System.IO.MonoIO.GetFileStat
bool System::IO::MonoIO::GetFileStat(::Il2CppString* path, ByRef<System::IO::MonoIOStat> stat, ByRef<System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::GetFileStat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetFileStat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<System::IO::MonoIOStat&>(), ::il2cpp_utils::ExtractIndependentType<System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, byref(stat), byref(error));
}
// Autogenerated method: System.IO.MonoIO.Open
System::IntPtr System::IO::MonoIO::Open(::Il2CppChar* filename, System::IO::FileMode mode, System::IO::FileAccess access, System::IO::FileShare share, System::IO::FileOptions options, ByRef<System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::Open");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Open", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filename), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(access), ::il2cpp_utils::ExtractType(share), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractIndependentType<System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, filename, mode, access, share, options, byref(error));
}
// Autogenerated method: System.IO.MonoIO.Open
System::IntPtr System::IO::MonoIO::Open(::Il2CppString* filename, System::IO::FileMode mode, System::IO::FileAccess access, System::IO::FileShare share, System::IO::FileOptions options, ByRef<System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::Open");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Open", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filename), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(access), ::il2cpp_utils::ExtractType(share), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractIndependentType<System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, filename, mode, access, share, options, byref(error));
}
// Autogenerated method: System.IO.MonoIO.Close
bool System::IO::MonoIO::Close(System::IntPtr handle, ByRef<System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractIndependentType<System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, byref(error));
}
// Autogenerated method: System.IO.MonoIO.Read
int System::IO::MonoIO::Read(System::IntPtr handle, ::ArrayW<uint8_t> dest, int dest_offset, int count, ByRef<System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::Read");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(dest_offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractIndependentType<System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, dest, dest_offset, count, byref(error));
}
// Autogenerated method: System.IO.MonoIO.Read
int System::IO::MonoIO::Read(System::Runtime::InteropServices::SafeHandle* safeHandle, ::ArrayW<uint8_t> dest, int dest_offset, int count, ByRef<System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::Read");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(dest_offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractIndependentType<System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, safeHandle, dest, dest_offset, count, byref(error));
}
// Autogenerated method: System.IO.MonoIO.Write
int System::IO::MonoIO::Write(System::IntPtr handle, ByRef<::ArrayW<uint8_t>> src, int src_offset, int count, ByRef<System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(src_offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractIndependentType<System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, byref(src), src_offset, count, byref(error));
}
// Autogenerated method: System.IO.MonoIO.Write
int System::IO::MonoIO::Write(System::Runtime::InteropServices::SafeHandle* safeHandle, ::ArrayW<uint8_t> src, int src_offset, int count, ByRef<System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractType(src), ::il2cpp_utils::ExtractType(src_offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractIndependentType<System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, safeHandle, src, src_offset, count, byref(error));
}
// Autogenerated method: System.IO.MonoIO.Seek
int64_t System::IO::MonoIO::Seek(System::IntPtr handle, int64_t offset, System::IO::SeekOrigin origin, ByRef<System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::Seek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractIndependentType<System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, offset, origin, byref(error));
}
// Autogenerated method: System.IO.MonoIO.Seek
int64_t System::IO::MonoIO::Seek(System::Runtime::InteropServices::SafeHandle* safeHandle, int64_t offset, System::IO::SeekOrigin origin, ByRef<System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::Seek");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractIndependentType<System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, safeHandle, offset, origin, byref(error));
}
// Autogenerated method: System.IO.MonoIO.GetLength
int64_t System::IO::MonoIO::GetLength(System::IntPtr handle, ByRef<System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::GetLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractIndependentType<System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, byref(error));
}
// Autogenerated method: System.IO.MonoIO.GetLength
int64_t System::IO::MonoIO::GetLength(System::Runtime::InteropServices::SafeHandle* safeHandle, ByRef<System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::GetLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "GetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractIndependentType<System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, safeHandle, byref(error));
}
// Autogenerated method: System.IO.MonoIO.SetLength
bool System::IO::MonoIO::SetLength(System::IntPtr handle, int64_t length, ByRef<System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::SetLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "SetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractIndependentType<System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, length, byref(error));
}
// Autogenerated method: System.IO.MonoIO.SetLength
bool System::IO::MonoIO::SetLength(System::Runtime::InteropServices::SafeHandle* safeHandle, int64_t length, ByRef<System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::SetLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "SetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractIndependentType<System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, safeHandle, length, byref(error));
}
// Autogenerated method: System.IO.MonoIO.CreatePipe
bool System::IO::MonoIO::CreatePipe(ByRef<System::IntPtr> read_handle, ByRef<System::IntPtr> write_handle, ByRef<System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::CreatePipe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "CreatePipe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr&>(), ::il2cpp_utils::ExtractIndependentType<System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, byref(read_handle), byref(write_handle), byref(error));
}
// Autogenerated method: System.IO.MonoIO.DuplicateHandle
bool System::IO::MonoIO::DuplicateHandle(System::IntPtr source_process_handle, System::IntPtr source_handle, System::IntPtr target_process_handle, ByRef<System::IntPtr> target_handle, int access, int inherit, int options, ByRef<System::IO::MonoIOError> error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::DuplicateHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "DuplicateHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source_process_handle), ::il2cpp_utils::ExtractType(source_handle), ::il2cpp_utils::ExtractType(target_process_handle), ::il2cpp_utils::ExtractIndependentType<System::IntPtr&>(), ::il2cpp_utils::ExtractType(access), ::il2cpp_utils::ExtractType(inherit), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractIndependentType<System::IO::MonoIOError&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, source_process_handle, source_handle, target_process_handle, byref(target_handle), access, inherit, options, byref(error));
}
// Autogenerated method: System.IO.MonoIO.DumpHandles
void System::IO::MonoIO::DumpHandles() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::DumpHandles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "DumpHandles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.MonoIO.RemapPath
bool System::IO::MonoIO::RemapPath(::Il2CppString* path, ByRef<::Il2CppString*> newPath) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIO::RemapPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "MonoIO", "RemapPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, byref(newPath));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.MonoIOError
#include "System/IO/MonoIOError.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_SUCCESS
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_SUCCESS() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_SUCCESS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_SUCCESS"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_SUCCESS
void System::IO::MonoIOError::_set_ERROR_SUCCESS(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_SUCCESS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_SUCCESS", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_FILE_NOT_FOUND
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_FILE_NOT_FOUND() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_FILE_NOT_FOUND");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_FILE_NOT_FOUND"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_FILE_NOT_FOUND
void System::IO::MonoIOError::_set_ERROR_FILE_NOT_FOUND(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_FILE_NOT_FOUND");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_FILE_NOT_FOUND", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_PATH_NOT_FOUND
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_PATH_NOT_FOUND() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_PATH_NOT_FOUND");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_PATH_NOT_FOUND"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_PATH_NOT_FOUND
void System::IO::MonoIOError::_set_ERROR_PATH_NOT_FOUND(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_PATH_NOT_FOUND");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_PATH_NOT_FOUND", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_TOO_MANY_OPEN_FILES
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_TOO_MANY_OPEN_FILES() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_TOO_MANY_OPEN_FILES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_TOO_MANY_OPEN_FILES"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_TOO_MANY_OPEN_FILES
void System::IO::MonoIOError::_set_ERROR_TOO_MANY_OPEN_FILES(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_TOO_MANY_OPEN_FILES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_TOO_MANY_OPEN_FILES", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_ACCESS_DENIED
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_ACCESS_DENIED() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_ACCESS_DENIED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_ACCESS_DENIED"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_ACCESS_DENIED
void System::IO::MonoIOError::_set_ERROR_ACCESS_DENIED(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_ACCESS_DENIED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_ACCESS_DENIED", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_INVALID_HANDLE
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_INVALID_HANDLE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_INVALID_HANDLE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_INVALID_HANDLE"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_INVALID_HANDLE
void System::IO::MonoIOError::_set_ERROR_INVALID_HANDLE(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_INVALID_HANDLE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_INVALID_HANDLE", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_INVALID_DRIVE
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_INVALID_DRIVE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_INVALID_DRIVE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_INVALID_DRIVE"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_INVALID_DRIVE
void System::IO::MonoIOError::_set_ERROR_INVALID_DRIVE(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_INVALID_DRIVE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_INVALID_DRIVE", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_NOT_SAME_DEVICE
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_NOT_SAME_DEVICE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_NOT_SAME_DEVICE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_NOT_SAME_DEVICE"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_NOT_SAME_DEVICE
void System::IO::MonoIOError::_set_ERROR_NOT_SAME_DEVICE(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_NOT_SAME_DEVICE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_NOT_SAME_DEVICE", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_NO_MORE_FILES
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_NO_MORE_FILES() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_NO_MORE_FILES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_NO_MORE_FILES"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_NO_MORE_FILES
void System::IO::MonoIOError::_set_ERROR_NO_MORE_FILES(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_NO_MORE_FILES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_NO_MORE_FILES", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_NOT_READY
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_NOT_READY() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_NOT_READY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_NOT_READY"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_NOT_READY
void System::IO::MonoIOError::_set_ERROR_NOT_READY(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_NOT_READY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_NOT_READY", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_WRITE_FAULT
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_WRITE_FAULT() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_WRITE_FAULT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_WRITE_FAULT"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_WRITE_FAULT
void System::IO::MonoIOError::_set_ERROR_WRITE_FAULT(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_WRITE_FAULT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_WRITE_FAULT", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_READ_FAULT
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_READ_FAULT() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_READ_FAULT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_READ_FAULT"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_READ_FAULT
void System::IO::MonoIOError::_set_ERROR_READ_FAULT(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_READ_FAULT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_READ_FAULT", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_GEN_FAILURE
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_GEN_FAILURE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_GEN_FAILURE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_GEN_FAILURE"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_GEN_FAILURE
void System::IO::MonoIOError::_set_ERROR_GEN_FAILURE(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_GEN_FAILURE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_GEN_FAILURE", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_SHARING_VIOLATION
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_SHARING_VIOLATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_SHARING_VIOLATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_SHARING_VIOLATION"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_SHARING_VIOLATION
void System::IO::MonoIOError::_set_ERROR_SHARING_VIOLATION(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_SHARING_VIOLATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_SHARING_VIOLATION", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_LOCK_VIOLATION
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_LOCK_VIOLATION() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_LOCK_VIOLATION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_LOCK_VIOLATION"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_LOCK_VIOLATION
void System::IO::MonoIOError::_set_ERROR_LOCK_VIOLATION(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_LOCK_VIOLATION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_LOCK_VIOLATION", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_HANDLE_DISK_FULL
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_HANDLE_DISK_FULL() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_HANDLE_DISK_FULL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_HANDLE_DISK_FULL"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_HANDLE_DISK_FULL
void System::IO::MonoIOError::_set_ERROR_HANDLE_DISK_FULL(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_HANDLE_DISK_FULL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_HANDLE_DISK_FULL", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_FILE_EXISTS
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_FILE_EXISTS() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_FILE_EXISTS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_FILE_EXISTS"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_FILE_EXISTS
void System::IO::MonoIOError::_set_ERROR_FILE_EXISTS(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_FILE_EXISTS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_FILE_EXISTS", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_CANNOT_MAKE
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_CANNOT_MAKE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_CANNOT_MAKE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_CANNOT_MAKE"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_CANNOT_MAKE
void System::IO::MonoIOError::_set_ERROR_CANNOT_MAKE(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_CANNOT_MAKE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_CANNOT_MAKE", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_INVALID_PARAMETER
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_INVALID_PARAMETER() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_INVALID_PARAMETER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_INVALID_PARAMETER"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_INVALID_PARAMETER
void System::IO::MonoIOError::_set_ERROR_INVALID_PARAMETER(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_INVALID_PARAMETER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_INVALID_PARAMETER", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_BROKEN_PIPE
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_BROKEN_PIPE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_BROKEN_PIPE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_BROKEN_PIPE"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_BROKEN_PIPE
void System::IO::MonoIOError::_set_ERROR_BROKEN_PIPE(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_BROKEN_PIPE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_BROKEN_PIPE", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_INVALID_NAME
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_INVALID_NAME() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_INVALID_NAME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_INVALID_NAME"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_INVALID_NAME
void System::IO::MonoIOError::_set_ERROR_INVALID_NAME(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_INVALID_NAME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_INVALID_NAME", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_DIR_NOT_EMPTY
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_DIR_NOT_EMPTY() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_DIR_NOT_EMPTY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_DIR_NOT_EMPTY"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_DIR_NOT_EMPTY
void System::IO::MonoIOError::_set_ERROR_DIR_NOT_EMPTY(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_DIR_NOT_EMPTY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_DIR_NOT_EMPTY", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_ALREADY_EXISTS
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_ALREADY_EXISTS() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_ALREADY_EXISTS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_ALREADY_EXISTS"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_ALREADY_EXISTS
void System::IO::MonoIOError::_set_ERROR_ALREADY_EXISTS(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_ALREADY_EXISTS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_ALREADY_EXISTS", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_FILENAME_EXCED_RANGE
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_FILENAME_EXCED_RANGE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_FILENAME_EXCED_RANGE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_FILENAME_EXCED_RANGE"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_FILENAME_EXCED_RANGE
void System::IO::MonoIOError::_set_ERROR_FILENAME_EXCED_RANGE(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_FILENAME_EXCED_RANGE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_FILENAME_EXCED_RANGE", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_DIRECTORY
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_DIRECTORY() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_DIRECTORY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_DIRECTORY"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_DIRECTORY
void System::IO::MonoIOError::_set_ERROR_DIRECTORY(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_DIRECTORY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_DIRECTORY", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.MonoIOError ERROR_ENCRYPTION_FAILED
System::IO::MonoIOError System::IO::MonoIOError::_get_ERROR_ENCRYPTION_FAILED() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_get_ERROR_ENCRYPTION_FAILED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::MonoIOError>("System.IO", "MonoIOError", "ERROR_ENCRYPTION_FAILED"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.MonoIOError ERROR_ENCRYPTION_FAILED
void System::IO::MonoIOError::_set_ERROR_ENCRYPTION_FAILED(System::IO::MonoIOError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::_set_ERROR_ENCRYPTION_FAILED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "MonoIOError", "ERROR_ENCRYPTION_FAILED", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::IO::MonoIOError::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::MonoIOError::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.Path
#include "System/IO/Path.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [ObsoleteAttribute] Offset: 0xE65868
// Autogenerated static field getter
// Get static field: static public readonly System.Char[] InvalidPathChars
::ArrayW<::Il2CppChar> System::IO::Path::_get_InvalidPathChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::_get_InvalidPathChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.IO", "Path", "InvalidPathChars"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char[] InvalidPathChars
void System::IO::Path::_set_InvalidPathChars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::_set_InvalidPathChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Path", "InvalidPathChars", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char AltDirectorySeparatorChar
::Il2CppChar System::IO::Path::_get_AltDirectorySeparatorChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::_get_AltDirectorySeparatorChar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("System.IO", "Path", "AltDirectorySeparatorChar"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char AltDirectorySeparatorChar
void System::IO::Path::_set_AltDirectorySeparatorChar(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::_set_AltDirectorySeparatorChar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Path", "AltDirectorySeparatorChar", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char DirectorySeparatorChar
::Il2CppChar System::IO::Path::_get_DirectorySeparatorChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::_get_DirectorySeparatorChar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("System.IO", "Path", "DirectorySeparatorChar"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char DirectorySeparatorChar
void System::IO::Path::_set_DirectorySeparatorChar(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::_set_DirectorySeparatorChar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Path", "DirectorySeparatorChar", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char PathSeparator
::Il2CppChar System::IO::Path::_get_PathSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::_get_PathSeparator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("System.IO", "Path", "PathSeparator"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char PathSeparator
void System::IO::Path::_set_PathSeparator(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::_set_PathSeparator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Path", "PathSeparator", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String DirectorySeparatorStr
::Il2CppString* System::IO::Path::_get_DirectorySeparatorStr() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::_get_DirectorySeparatorStr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.IO", "Path", "DirectorySeparatorStr"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String DirectorySeparatorStr
void System::IO::Path::_set_DirectorySeparatorStr(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::_set_DirectorySeparatorStr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Path", "DirectorySeparatorStr", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Char VolumeSeparatorChar
::Il2CppChar System::IO::Path::_get_VolumeSeparatorChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::_get_VolumeSeparatorChar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("System.IO", "Path", "VolumeSeparatorChar"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Char VolumeSeparatorChar
void System::IO::Path::_set_VolumeSeparatorChar(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::_set_VolumeSeparatorChar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Path", "VolumeSeparatorChar", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Char[] PathSeparatorChars
::ArrayW<::Il2CppChar> System::IO::Path::_get_PathSeparatorChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::_get_PathSeparatorChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.IO", "Path", "PathSeparatorChars"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Char[] PathSeparatorChars
void System::IO::Path::_set_PathSeparatorChars(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::_set_PathSeparatorChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Path", "PathSeparatorChars", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Boolean dirEqualsVolume
bool System::IO::Path::_get_dirEqualsVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::_get_dirEqualsVolume");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.IO", "Path", "dirEqualsVolume"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Boolean dirEqualsVolume
void System::IO::Path::_set_dirEqualsVolume(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::_set_dirEqualsVolume");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Path", "dirEqualsVolume", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Char[] trimEndCharsWindows
::ArrayW<::Il2CppChar> System::IO::Path::_get_trimEndCharsWindows() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::_get_trimEndCharsWindows");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.IO", "Path", "trimEndCharsWindows"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Char[] trimEndCharsWindows
void System::IO::Path::_set_trimEndCharsWindows(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::_set_trimEndCharsWindows");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Path", "trimEndCharsWindows", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Char[] trimEndCharsUnix
::ArrayW<::Il2CppChar> System::IO::Path::_get_trimEndCharsUnix() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::_get_trimEndCharsUnix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::Il2CppChar>>("System.IO", "Path", "trimEndCharsUnix"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Char[] trimEndCharsUnix
void System::IO::Path::_set_trimEndCharsUnix(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::_set_trimEndCharsUnix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "Path", "trimEndCharsUnix", value));
}
// Autogenerated method: System.IO.Path.get_DirectorySeparatorCharAsString
::Il2CppString* System::IO::Path::get_DirectorySeparatorCharAsString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::get_DirectorySeparatorCharAsString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "get_DirectorySeparatorCharAsString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Path.get_TrimEndChars
::ArrayW<::Il2CppChar> System::IO::Path::get_TrimEndChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::get_TrimEndChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "get_TrimEndChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppChar>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Path..cctor
void System::IO::Path::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Path.ChangeExtension
::Il2CppString* System::IO::Path::ChangeExtension(::Il2CppString* path, ::Il2CppString* extension) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::ChangeExtension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "ChangeExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(extension)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, extension);
}
// Autogenerated method: System.IO.Path.Combine
::Il2CppString* System::IO::Path::Combine(::Il2CppString* path1, ::Il2CppString* path2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::Combine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "Combine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path1), ::il2cpp_utils::ExtractType(path2)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path1, path2);
}
// Autogenerated method: System.IO.Path.CleanPath
::Il2CppString* System::IO::Path::CleanPath(::Il2CppString* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::CleanPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "CleanPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s);
}
// Autogenerated method: System.IO.Path.GetDirectoryName
::Il2CppString* System::IO::Path::GetDirectoryName(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::GetDirectoryName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "GetDirectoryName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.GetExtension
::Il2CppString* System::IO::Path::GetExtension(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::GetExtension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "GetExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.GetFileName
::Il2CppString* System::IO::Path::GetFileName(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::GetFileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "GetFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.GetFileNameWithoutExtension
::Il2CppString* System::IO::Path::GetFileNameWithoutExtension(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::GetFileNameWithoutExtension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "GetFileNameWithoutExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.GetFullPath
::Il2CppString* System::IO::Path::GetFullPath(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::GetFullPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "GetFullPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.GetFullPathInternal
::Il2CppString* System::IO::Path::GetFullPathInternal(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::GetFullPathInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "GetFullPathInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.GetFullPathName
int System::IO::Path::GetFullPathName(::Il2CppString* path, int numBufferChars, System::Text::StringBuilder* buffer, ByRef<System::IntPtr> lpFilePartOrNull) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::GetFullPathName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "GetFullPathName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(numBufferChars), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(lpFilePartOrNull)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, numBufferChars, buffer, byref(lpFilePartOrNull));
}
// Autogenerated method: System.IO.Path.GetFullPathName
::Il2CppString* System::IO::Path::GetFullPathName(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::GetFullPathName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "GetFullPathName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.WindowsDriveAdjustment
::Il2CppString* System::IO::Path::WindowsDriveAdjustment(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::WindowsDriveAdjustment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "WindowsDriveAdjustment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.InsecureGetFullPath
::Il2CppString* System::IO::Path::InsecureGetFullPath(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::InsecureGetFullPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "InsecureGetFullPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.IsDirectorySeparator
bool System::IO::Path::IsDirectorySeparator(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::IsDirectorySeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "IsDirectorySeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.IO.Path.GetPathRoot
::Il2CppString* System::IO::Path::GetPathRoot(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::GetPathRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "GetPathRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.IsPathRooted
bool System::IO::Path::IsPathRooted(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::IsPathRooted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "IsPathRooted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.GetInvalidFileNameChars
::ArrayW<::Il2CppChar> System::IO::Path::GetInvalidFileNameChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::GetInvalidFileNameChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "GetInvalidFileNameChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppChar>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Path.GetInvalidPathChars
::ArrayW<::Il2CppChar> System::IO::Path::GetInvalidPathChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::GetInvalidPathChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "GetInvalidPathChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppChar>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Path.GetRandomFileName
::Il2CppString* System::IO::Path::GetRandomFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::GetRandomFileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "GetRandomFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.Path.findExtension
int System::IO::Path::findExtension(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::findExtension");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "findExtension", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.GetServerAndShare
::Il2CppString* System::IO::Path::GetServerAndShare(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::GetServerAndShare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "GetServerAndShare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.SameRoot
bool System::IO::Path::SameRoot(::Il2CppString* root, ::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::SameRoot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "SameRoot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(root), ::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, root, path);
}
// Autogenerated method: System.IO.Path.CanonicalizePath
::Il2CppString* System::IO::Path::CanonicalizePath(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::CanonicalizePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "CanonicalizePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.Combine
::Il2CppString* System::IO::Path::Combine(::ArrayW<::Il2CppString*> paths) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::Combine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "Combine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paths)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, paths);
}
// Autogenerated method: System.IO.Path.Combine
::Il2CppString* System::IO::Path::Combine(::Il2CppString* path1, ::Il2CppString* path2, ::Il2CppString* path3) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::Combine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "Combine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path1), ::il2cpp_utils::ExtractType(path2), ::il2cpp_utils::ExtractType(path3)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path1, path2, path3);
}
// Autogenerated method: System.IO.Path.Validate
void System::IO::Path::Validate(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::Validate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "Validate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.IO.Path.Validate
void System::IO::Path::Validate(::Il2CppString* path, ::Il2CppString* parameterName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::Validate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "Validate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(parameterName)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, parameterName);
}
// Autogenerated method: System.IO.Path.CheckSearchPattern
void System::IO::Path::CheckSearchPattern(::Il2CppString* searchPattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::CheckSearchPattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "CheckSearchPattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(searchPattern)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, searchPattern);
}
// Autogenerated method: System.IO.Path.CheckInvalidPathChars
void System::IO::Path::CheckInvalidPathChars(::Il2CppString* path, bool checkAdditional) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::CheckInvalidPathChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "CheckInvalidPathChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path), ::il2cpp_utils::ExtractType(checkAdditional)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, checkAdditional);
}
// Autogenerated method: System.IO.Path.InternalCombine
::Il2CppString* System::IO::Path::InternalCombine(::Il2CppString* path1, ::Il2CppString* path2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::Path::InternalCombine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "Path", "InternalCombine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path1), ::il2cpp_utils::ExtractType(path2)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path1, path2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.SearchOption
#include "System/IO/SearchOption.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.SearchOption TopDirectoryOnly
System::IO::SearchOption System::IO::SearchOption::_get_TopDirectoryOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::SearchOption::_get_TopDirectoryOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::SearchOption>("System.IO", "SearchOption", "TopDirectoryOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.SearchOption TopDirectoryOnly
void System::IO::SearchOption::_set_TopDirectoryOnly(System::IO::SearchOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::SearchOption::_set_TopDirectoryOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "SearchOption", "TopDirectoryOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.SearchOption AllDirectories
System::IO::SearchOption System::IO::SearchOption::_get_AllDirectories() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::SearchOption::_get_AllDirectories");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::SearchOption>("System.IO", "SearchOption", "AllDirectories"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.SearchOption AllDirectories
void System::IO::SearchOption::_set_AllDirectories(System::IO::SearchOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::SearchOption::_set_AllDirectories");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "SearchOption", "AllDirectories", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::IO::SearchOption::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::SearchOption::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.IO.SeekOrigin Begin
System::IO::SeekOrigin System::IO::SeekOrigin::_get_Begin() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::SeekOrigin::_get_Begin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::SeekOrigin>("System.IO", "SeekOrigin", "Begin"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.SeekOrigin Begin
void System::IO::SeekOrigin::_set_Begin(System::IO::SeekOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::SeekOrigin::_set_Begin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "SeekOrigin", "Begin", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.SeekOrigin Current
System::IO::SeekOrigin System::IO::SeekOrigin::_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::SeekOrigin::_get_Current");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::SeekOrigin>("System.IO", "SeekOrigin", "Current"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.SeekOrigin Current
void System::IO::SeekOrigin::_set_Current(System::IO::SeekOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::SeekOrigin::_set_Current");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "SeekOrigin", "Current", value));
}
// Autogenerated static field getter
// Get static field: static public System.IO.SeekOrigin End
System::IO::SeekOrigin System::IO::SeekOrigin::_get_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::SeekOrigin::_get_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IO::SeekOrigin>("System.IO", "SeekOrigin", "End"));
}
// Autogenerated static field setter
// Set static field: static public System.IO.SeekOrigin End
void System::IO::SeekOrigin::_set_End(System::IO::SeekOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::SeekOrigin::_set_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "SeekOrigin", "End", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::IO::SeekOrigin::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::SeekOrigin::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.UnexceptionalStreamReader
#include "System/IO/UnexceptionalStreamReader.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean[] newline
::ArrayW<bool> System::IO::UnexceptionalStreamReader::_get_newline() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnexceptionalStreamReader::_get_newline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<bool>>("System.IO", "UnexceptionalStreamReader", "newline"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean[] newline
void System::IO::UnexceptionalStreamReader::_set_newline(::ArrayW<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnexceptionalStreamReader::_set_newline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "UnexceptionalStreamReader", "newline", value));
}
// Autogenerated static field getter
// Get static field: static private System.Char newlineChar
::Il2CppChar System::IO::UnexceptionalStreamReader::_get_newlineChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnexceptionalStreamReader::_get_newlineChar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppChar>("System.IO", "UnexceptionalStreamReader", "newlineChar"));
}
// Autogenerated static field setter
// Set static field: static private System.Char newlineChar
void System::IO::UnexceptionalStreamReader::_set_newlineChar(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnexceptionalStreamReader::_set_newlineChar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.IO", "UnexceptionalStreamReader", "newlineChar", value));
}
// Autogenerated method: System.IO.UnexceptionalStreamReader.CheckEOL
bool System::IO::UnexceptionalStreamReader::CheckEOL(::Il2CppChar current) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnexceptionalStreamReader::CheckEOL");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckEOL", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(current)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, current);
}
// Autogenerated method: System.IO.UnexceptionalStreamReader..cctor
void System::IO::UnexceptionalStreamReader::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnexceptionalStreamReader::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.IO", "UnexceptionalStreamReader", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.IO.UnexceptionalStreamReader.Peek
int System::IO::UnexceptionalStreamReader::Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnexceptionalStreamReader::Peek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Peek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.UnexceptionalStreamReader.Read
int System::IO::UnexceptionalStreamReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnexceptionalStreamReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.UnexceptionalStreamReader.Read
int System::IO::UnexceptionalStreamReader::Read(ByRef<::ArrayW<::Il2CppChar>> dest_buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnexceptionalStreamReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest_buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, byref(dest_buffer), index, count);
}
// Autogenerated method: System.IO.UnexceptionalStreamReader.ReadLine
::Il2CppString* System::IO::UnexceptionalStreamReader::ReadLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnexceptionalStreamReader::ReadLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.UnexceptionalStreamReader.ReadToEnd
::Il2CppString* System::IO::UnexceptionalStreamReader::ReadToEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnexceptionalStreamReader::ReadToEnd");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadToEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.UnexceptionalStreamWriter
#include "System/IO/UnexceptionalStreamWriter.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IO.UnexceptionalStreamWriter.Flush
void System::IO::UnexceptionalStreamWriter::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnexceptionalStreamWriter::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.UnexceptionalStreamWriter.Write
void System::IO::UnexceptionalStreamWriter::Write(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnexceptionalStreamWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.UnexceptionalStreamWriter.Write
void System::IO::UnexceptionalStreamWriter::Write(::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnexceptionalStreamWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.IO.UnexceptionalStreamWriter.Write
void System::IO::UnexceptionalStreamWriter::Write(::ArrayW<::Il2CppChar> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnexceptionalStreamWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.IO.UnexceptionalStreamWriter.Write
void System::IO::UnexceptionalStreamWriter::Write(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::UnexceptionalStreamWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.CStreamReader
#include "System/IO/CStreamReader.hpp"
// Including type: System.TermInfoDriver
#include "System/TermInfoDriver.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.TermInfoDriver driver
System::TermInfoDriver*& System::IO::CStreamReader::dyn_driver() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::CStreamReader::dyn_driver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "driver"))->offset;
  return *reinterpret_cast<System::TermInfoDriver**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.CStreamReader.Peek
int System::IO::CStreamReader::Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::CStreamReader::Peek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Peek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.CStreamReader.Read
int System::IO::CStreamReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::CStreamReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.CStreamReader.Read
int System::IO::CStreamReader::Read(ByRef<::ArrayW<::Il2CppChar>> dest, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::CStreamReader::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dest), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, byref(dest), index, count);
}
// Autogenerated method: System.IO.CStreamReader.ReadLine
::Il2CppString* System::IO::CStreamReader::ReadLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::CStreamReader::ReadLine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.IO.CStreamReader.ReadToEnd
::Il2CppString* System::IO::CStreamReader::ReadToEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::CStreamReader::ReadToEnd");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadToEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IO.CStreamWriter
#include "System/IO/CStreamWriter.hpp"
// Including type: System.TermInfoDriver
#include "System/TermInfoDriver.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.TermInfoDriver driver
System::TermInfoDriver*& System::IO::CStreamWriter::dyn_driver() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::CStreamWriter::dyn_driver");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "driver"))->offset;
  return *reinterpret_cast<System::TermInfoDriver**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.IO.CStreamWriter.InternalWriteString
void System::IO::CStreamWriter::InternalWriteString(::Il2CppString* val) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::CStreamWriter::InternalWriteString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalWriteString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, val);
}
// Autogenerated method: System.IO.CStreamWriter.InternalWriteChar
void System::IO::CStreamWriter::InternalWriteChar(::Il2CppChar val) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::CStreamWriter::InternalWriteChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalWriteChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, val);
}
// Autogenerated method: System.IO.CStreamWriter.InternalWriteChars
void System::IO::CStreamWriter::InternalWriteChars(::ArrayW<::Il2CppChar> buffer, int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::CStreamWriter::InternalWriteChars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalWriteChars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(n)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, buffer, n);
}
// Autogenerated method: System.IO.CStreamWriter.Write
void System::IO::CStreamWriter::Write(::ArrayW<::Il2CppChar> buffer, int index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::CStreamWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, buffer, index, count);
}
// Autogenerated method: System.IO.CStreamWriter.Write
void System::IO::CStreamWriter::Write(::Il2CppChar val) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::CStreamWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, val);
}
// Autogenerated method: System.IO.CStreamWriter.Write
void System::IO::CStreamWriter::Write(::ArrayW<::Il2CppChar> val) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::CStreamWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, val);
}
// Autogenerated method: System.IO.CStreamWriter.Write
void System::IO::CStreamWriter::Write(::Il2CppString* val) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::IO::CStreamWriter::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, val);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.CharUnicodeInfo
#include "System/Globalization/CharUnicodeInfo.hpp"
// Including type: System.Globalization.CharUnicodeInfo/System.Globalization.Debug
#include "System/Globalization/CharUnicodeInfo_Debug.hpp"
// Including type: System.Globalization.UnicodeCategory
#include "System/Globalization/UnicodeCategory.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.UInt16[] s_pCategoryLevel1Index
::ArrayW<uint16_t> System::Globalization::CharUnicodeInfo::_get_s_pCategoryLevel1Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CharUnicodeInfo::_get_s_pCategoryLevel1Index");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint16_t>>("System.Globalization", "CharUnicodeInfo", "s_pCategoryLevel1Index"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt16[] s_pCategoryLevel1Index
void System::Globalization::CharUnicodeInfo::_set_s_pCategoryLevel1Index(::ArrayW<uint16_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CharUnicodeInfo::_set_s_pCategoryLevel1Index");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CharUnicodeInfo", "s_pCategoryLevel1Index", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] s_pCategoriesValue
::ArrayW<uint8_t> System::Globalization::CharUnicodeInfo::_get_s_pCategoriesValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CharUnicodeInfo::_get_s_pCategoriesValue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Globalization", "CharUnicodeInfo", "s_pCategoriesValue"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] s_pCategoriesValue
void System::Globalization::CharUnicodeInfo::_set_s_pCategoriesValue(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CharUnicodeInfo::_set_s_pCategoriesValue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CharUnicodeInfo", "s_pCategoriesValue", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt16[] s_pNumericLevel1Index
::ArrayW<uint16_t> System::Globalization::CharUnicodeInfo::_get_s_pNumericLevel1Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CharUnicodeInfo::_get_s_pNumericLevel1Index");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint16_t>>("System.Globalization", "CharUnicodeInfo", "s_pNumericLevel1Index"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt16[] s_pNumericLevel1Index
void System::Globalization::CharUnicodeInfo::_set_s_pNumericLevel1Index(::ArrayW<uint16_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CharUnicodeInfo::_set_s_pNumericLevel1Index");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CharUnicodeInfo", "s_pNumericLevel1Index", value));
}
// Autogenerated static field getter
// Get static field: static private System.Byte[] s_pNumericValues
::ArrayW<uint8_t> System::Globalization::CharUnicodeInfo::_get_s_pNumericValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CharUnicodeInfo::_get_s_pNumericValues");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint8_t>>("System.Globalization", "CharUnicodeInfo", "s_pNumericValues"));
}
// Autogenerated static field setter
// Set static field: static private System.Byte[] s_pNumericValues
void System::Globalization::CharUnicodeInfo::_set_s_pNumericValues(::ArrayW<uint8_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CharUnicodeInfo::_set_s_pNumericValues");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CharUnicodeInfo", "s_pNumericValues", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt16[] s_pDigitValues
::ArrayW<uint16_t> System::Globalization::CharUnicodeInfo::_get_s_pDigitValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CharUnicodeInfo::_get_s_pDigitValues");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<uint16_t>>("System.Globalization", "CharUnicodeInfo", "s_pDigitValues"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt16[] s_pDigitValues
void System::Globalization::CharUnicodeInfo::_set_s_pDigitValues(::ArrayW<uint16_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CharUnicodeInfo::_set_s_pDigitValues");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CharUnicodeInfo", "s_pDigitValues", value));
}
// Autogenerated method: System.Globalization.CharUnicodeInfo..cctor
void System::Globalization::CharUnicodeInfo::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CharUnicodeInfo::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CharUnicodeInfo.InternalConvertToUtf32
int System::Globalization::CharUnicodeInfo::InternalConvertToUtf32(::Il2CppString* s, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CharUnicodeInfo::InternalConvertToUtf32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo", "InternalConvertToUtf32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, index);
}
// Autogenerated method: System.Globalization.CharUnicodeInfo.IsWhiteSpace
bool System::Globalization::CharUnicodeInfo::IsWhiteSpace(::Il2CppString* s, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CharUnicodeInfo::IsWhiteSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo", "IsWhiteSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, index);
}
// Autogenerated method: System.Globalization.CharUnicodeInfo.IsWhiteSpace
bool System::Globalization::CharUnicodeInfo::IsWhiteSpace(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CharUnicodeInfo::IsWhiteSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo", "IsWhiteSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.Globalization.CharUnicodeInfo.GetUnicodeCategory
System::Globalization::UnicodeCategory System::Globalization::CharUnicodeInfo::GetUnicodeCategory(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CharUnicodeInfo::GetUnicodeCategory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo", "GetUnicodeCategory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::UnicodeCategory, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Globalization.CharUnicodeInfo.GetUnicodeCategory
System::Globalization::UnicodeCategory System::Globalization::CharUnicodeInfo::GetUnicodeCategory(::Il2CppString* s, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CharUnicodeInfo::GetUnicodeCategory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo", "GetUnicodeCategory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::UnicodeCategory, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, s, index);
}
// Autogenerated method: System.Globalization.CharUnicodeInfo.InternalGetUnicodeCategory
System::Globalization::UnicodeCategory System::Globalization::CharUnicodeInfo::InternalGetUnicodeCategory(int ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CharUnicodeInfo::InternalGetUnicodeCategory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo", "InternalGetUnicodeCategory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::UnicodeCategory, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Globalization.CharUnicodeInfo.InternalGetCategoryValue
uint8_t System::Globalization::CharUnicodeInfo::InternalGetCategoryValue(int ch, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CharUnicodeInfo::InternalGetCategoryValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo", "InternalGetCategoryValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodThrow<uint8_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch, offset);
}
// Autogenerated method: System.Globalization.CharUnicodeInfo.InternalGetUnicodeCategory
System::Globalization::UnicodeCategory System::Globalization::CharUnicodeInfo::InternalGetUnicodeCategory(::Il2CppString* value, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CharUnicodeInfo::InternalGetUnicodeCategory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo", "InternalGetUnicodeCategory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::UnicodeCategory, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.CharUnicodeInfo/System.Globalization.Debug
#include "System/Globalization/CharUnicodeInfo_Debug.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Globalization.CharUnicodeInfo/System.Globalization.Debug.Assert
void System::Globalization::CharUnicodeInfo::Debug::Assert_(bool condition, ::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CharUnicodeInfo::Debug::Assert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CharUnicodeInfo/Debug", "Assert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(condition), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, condition, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.Calendar
#include "System/Globalization/Calendar.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
// Including type: System.DayOfWeek
#include "System/DayOfWeek.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int64 TicksPerMillisecond
int64_t System::Globalization::Calendar::_get_TicksPerMillisecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_TicksPerMillisecond");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Globalization", "Calendar", "TicksPerMillisecond"));
}
// Autogenerated static field setter
// Set static field: static System.Int64 TicksPerMillisecond
void System::Globalization::Calendar::_set_TicksPerMillisecond(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_TicksPerMillisecond");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "TicksPerMillisecond", value));
}
// Autogenerated static field getter
// Get static field: static System.Int64 TicksPerSecond
int64_t System::Globalization::Calendar::_get_TicksPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_TicksPerSecond");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Globalization", "Calendar", "TicksPerSecond"));
}
// Autogenerated static field setter
// Set static field: static System.Int64 TicksPerSecond
void System::Globalization::Calendar::_set_TicksPerSecond(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_TicksPerSecond");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "TicksPerSecond", value));
}
// Autogenerated static field getter
// Get static field: static System.Int64 TicksPerMinute
int64_t System::Globalization::Calendar::_get_TicksPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_TicksPerMinute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Globalization", "Calendar", "TicksPerMinute"));
}
// Autogenerated static field setter
// Set static field: static System.Int64 TicksPerMinute
void System::Globalization::Calendar::_set_TicksPerMinute(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_TicksPerMinute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "TicksPerMinute", value));
}
// Autogenerated static field getter
// Get static field: static System.Int64 TicksPerHour
int64_t System::Globalization::Calendar::_get_TicksPerHour() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_TicksPerHour");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Globalization", "Calendar", "TicksPerHour"));
}
// Autogenerated static field setter
// Set static field: static System.Int64 TicksPerHour
void System::Globalization::Calendar::_set_TicksPerHour(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_TicksPerHour");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "TicksPerHour", value));
}
// Autogenerated static field getter
// Get static field: static System.Int64 TicksPerDay
int64_t System::Globalization::Calendar::_get_TicksPerDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_TicksPerDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Globalization", "Calendar", "TicksPerDay"));
}
// Autogenerated static field setter
// Set static field: static System.Int64 TicksPerDay
void System::Globalization::Calendar::_set_TicksPerDay(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_TicksPerDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "TicksPerDay", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 MillisPerSecond
int System::Globalization::Calendar::_get_MillisPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_MillisPerSecond");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "MillisPerSecond"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 MillisPerSecond
void System::Globalization::Calendar::_set_MillisPerSecond(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_MillisPerSecond");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "MillisPerSecond", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 MillisPerMinute
int System::Globalization::Calendar::_get_MillisPerMinute() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_MillisPerMinute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "MillisPerMinute"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 MillisPerMinute
void System::Globalization::Calendar::_set_MillisPerMinute(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_MillisPerMinute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "MillisPerMinute", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 MillisPerHour
int System::Globalization::Calendar::_get_MillisPerHour() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_MillisPerHour");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "MillisPerHour"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 MillisPerHour
void System::Globalization::Calendar::_set_MillisPerHour(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_MillisPerHour");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "MillisPerHour", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 MillisPerDay
int System::Globalization::Calendar::_get_MillisPerDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_MillisPerDay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "MillisPerDay"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 MillisPerDay
void System::Globalization::Calendar::_set_MillisPerDay(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_MillisPerDay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "MillisPerDay", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 DaysPerYear
int System::Globalization::Calendar::_get_DaysPerYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_DaysPerYear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "DaysPerYear"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 DaysPerYear
void System::Globalization::Calendar::_set_DaysPerYear(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_DaysPerYear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "DaysPerYear", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 DaysPer4Years
int System::Globalization::Calendar::_get_DaysPer4Years() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_DaysPer4Years");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "DaysPer4Years"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 DaysPer4Years
void System::Globalization::Calendar::_set_DaysPer4Years(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_DaysPer4Years");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "DaysPer4Years", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 DaysPer100Years
int System::Globalization::Calendar::_get_DaysPer100Years() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_DaysPer100Years");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "DaysPer100Years"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 DaysPer100Years
void System::Globalization::Calendar::_set_DaysPer100Years(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_DaysPer100Years");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "DaysPer100Years", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 DaysPer400Years
int System::Globalization::Calendar::_get_DaysPer400Years() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_DaysPer400Years");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "DaysPer400Years"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 DaysPer400Years
void System::Globalization::Calendar::_set_DaysPer400Years(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_DaysPer400Years");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "DaysPer400Years", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 DaysTo10000
int System::Globalization::Calendar::_get_DaysTo10000() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_DaysTo10000");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "DaysTo10000"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 DaysTo10000
void System::Globalization::Calendar::_set_DaysTo10000(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_DaysTo10000");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "DaysTo10000", value));
}
// Autogenerated static field getter
// Get static field: static System.Int64 MaxMillis
int64_t System::Globalization::Calendar::_get_MaxMillis() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_MaxMillis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Globalization", "Calendar", "MaxMillis"));
}
// Autogenerated static field setter
// Set static field: static System.Int64 MaxMillis
void System::Globalization::Calendar::_set_MaxMillis(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_MaxMillis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "MaxMillis", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_GREGORIAN
int System::Globalization::Calendar::_get_CAL_GREGORIAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_GREGORIAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_GREGORIAN"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_GREGORIAN
void System::Globalization::Calendar::_set_CAL_GREGORIAN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_GREGORIAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_GREGORIAN", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_GREGORIAN_US
int System::Globalization::Calendar::_get_CAL_GREGORIAN_US() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_GREGORIAN_US");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_GREGORIAN_US"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_GREGORIAN_US
void System::Globalization::Calendar::_set_CAL_GREGORIAN_US(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_GREGORIAN_US");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_GREGORIAN_US", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_JAPAN
int System::Globalization::Calendar::_get_CAL_JAPAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_JAPAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_JAPAN"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_JAPAN
void System::Globalization::Calendar::_set_CAL_JAPAN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_JAPAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_JAPAN", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_TAIWAN
int System::Globalization::Calendar::_get_CAL_TAIWAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_TAIWAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_TAIWAN"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_TAIWAN
void System::Globalization::Calendar::_set_CAL_TAIWAN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_TAIWAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_TAIWAN", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_KOREA
int System::Globalization::Calendar::_get_CAL_KOREA() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_KOREA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_KOREA"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_KOREA
void System::Globalization::Calendar::_set_CAL_KOREA(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_KOREA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_KOREA", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_HIJRI
int System::Globalization::Calendar::_get_CAL_HIJRI() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_HIJRI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_HIJRI"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_HIJRI
void System::Globalization::Calendar::_set_CAL_HIJRI(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_HIJRI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_HIJRI", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_THAI
int System::Globalization::Calendar::_get_CAL_THAI() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_THAI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_THAI"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_THAI
void System::Globalization::Calendar::_set_CAL_THAI(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_THAI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_THAI", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_HEBREW
int System::Globalization::Calendar::_get_CAL_HEBREW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_HEBREW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_HEBREW"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_HEBREW
void System::Globalization::Calendar::_set_CAL_HEBREW(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_HEBREW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_HEBREW", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_GREGORIAN_ME_FRENCH
int System::Globalization::Calendar::_get_CAL_GREGORIAN_ME_FRENCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_GREGORIAN_ME_FRENCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_GREGORIAN_ME_FRENCH"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_GREGORIAN_ME_FRENCH
void System::Globalization::Calendar::_set_CAL_GREGORIAN_ME_FRENCH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_GREGORIAN_ME_FRENCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_GREGORIAN_ME_FRENCH", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_GREGORIAN_ARABIC
int System::Globalization::Calendar::_get_CAL_GREGORIAN_ARABIC() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_GREGORIAN_ARABIC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_GREGORIAN_ARABIC"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_GREGORIAN_ARABIC
void System::Globalization::Calendar::_set_CAL_GREGORIAN_ARABIC(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_GREGORIAN_ARABIC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_GREGORIAN_ARABIC", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_GREGORIAN_XLIT_ENGLISH
int System::Globalization::Calendar::_get_CAL_GREGORIAN_XLIT_ENGLISH() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_GREGORIAN_XLIT_ENGLISH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_GREGORIAN_XLIT_ENGLISH"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_GREGORIAN_XLIT_ENGLISH
void System::Globalization::Calendar::_set_CAL_GREGORIAN_XLIT_ENGLISH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_GREGORIAN_XLIT_ENGLISH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_GREGORIAN_XLIT_ENGLISH", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_GREGORIAN_XLIT_FRENCH
int System::Globalization::Calendar::_get_CAL_GREGORIAN_XLIT_FRENCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_GREGORIAN_XLIT_FRENCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_GREGORIAN_XLIT_FRENCH"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_GREGORIAN_XLIT_FRENCH
void System::Globalization::Calendar::_set_CAL_GREGORIAN_XLIT_FRENCH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_GREGORIAN_XLIT_FRENCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_GREGORIAN_XLIT_FRENCH", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_JULIAN
int System::Globalization::Calendar::_get_CAL_JULIAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_JULIAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_JULIAN"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_JULIAN
void System::Globalization::Calendar::_set_CAL_JULIAN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_JULIAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_JULIAN", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_JAPANESELUNISOLAR
int System::Globalization::Calendar::_get_CAL_JAPANESELUNISOLAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_JAPANESELUNISOLAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_JAPANESELUNISOLAR"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_JAPANESELUNISOLAR
void System::Globalization::Calendar::_set_CAL_JAPANESELUNISOLAR(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_JAPANESELUNISOLAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_JAPANESELUNISOLAR", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_CHINESELUNISOLAR
int System::Globalization::Calendar::_get_CAL_CHINESELUNISOLAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_CHINESELUNISOLAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_CHINESELUNISOLAR"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_CHINESELUNISOLAR
void System::Globalization::Calendar::_set_CAL_CHINESELUNISOLAR(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_CHINESELUNISOLAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_CHINESELUNISOLAR", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_SAKA
int System::Globalization::Calendar::_get_CAL_SAKA() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_SAKA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_SAKA"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_SAKA
void System::Globalization::Calendar::_set_CAL_SAKA(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_SAKA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_SAKA", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_LUNAR_ETO_CHN
int System::Globalization::Calendar::_get_CAL_LUNAR_ETO_CHN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_LUNAR_ETO_CHN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_LUNAR_ETO_CHN"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_LUNAR_ETO_CHN
void System::Globalization::Calendar::_set_CAL_LUNAR_ETO_CHN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_LUNAR_ETO_CHN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_LUNAR_ETO_CHN", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_LUNAR_ETO_KOR
int System::Globalization::Calendar::_get_CAL_LUNAR_ETO_KOR() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_LUNAR_ETO_KOR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_LUNAR_ETO_KOR"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_LUNAR_ETO_KOR
void System::Globalization::Calendar::_set_CAL_LUNAR_ETO_KOR(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_LUNAR_ETO_KOR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_LUNAR_ETO_KOR", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_LUNAR_ETO_ROKUYOU
int System::Globalization::Calendar::_get_CAL_LUNAR_ETO_ROKUYOU() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_LUNAR_ETO_ROKUYOU");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_LUNAR_ETO_ROKUYOU"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_LUNAR_ETO_ROKUYOU
void System::Globalization::Calendar::_set_CAL_LUNAR_ETO_ROKUYOU(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_LUNAR_ETO_ROKUYOU");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_LUNAR_ETO_ROKUYOU", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_KOREANLUNISOLAR
int System::Globalization::Calendar::_get_CAL_KOREANLUNISOLAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_KOREANLUNISOLAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_KOREANLUNISOLAR"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_KOREANLUNISOLAR
void System::Globalization::Calendar::_set_CAL_KOREANLUNISOLAR(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_KOREANLUNISOLAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_KOREANLUNISOLAR", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_TAIWANLUNISOLAR
int System::Globalization::Calendar::_get_CAL_TAIWANLUNISOLAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_TAIWANLUNISOLAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_TAIWANLUNISOLAR"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_TAIWANLUNISOLAR
void System::Globalization::Calendar::_set_CAL_TAIWANLUNISOLAR(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_TAIWANLUNISOLAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_TAIWANLUNISOLAR", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_PERSIAN
int System::Globalization::Calendar::_get_CAL_PERSIAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_PERSIAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_PERSIAN"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_PERSIAN
void System::Globalization::Calendar::_set_CAL_PERSIAN(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_PERSIAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_PERSIAN", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 CAL_UMALQURA
int System::Globalization::Calendar::_get_CAL_UMALQURA() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CAL_UMALQURA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CAL_UMALQURA"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 CAL_UMALQURA
void System::Globalization::Calendar::_set_CAL_UMALQURA(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CAL_UMALQURA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CAL_UMALQURA", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 CurrentEra
int System::Globalization::Calendar::_get_CurrentEra() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_get_CurrentEra");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "Calendar", "CurrentEra"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 CurrentEra
void System::Globalization::Calendar::_set_CurrentEra(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::_set_CurrentEra");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "Calendar", "CurrentEra", value));
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_currentEraValue
int& System::Globalization::Calendar::dyn_m_currentEraValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::dyn_m_currentEraValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_currentEraValue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_isReadOnly
bool& System::Globalization::Calendar::dyn_m_isReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::dyn_m_isReadOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isReadOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 twoDigitYearMax
int& System::Globalization::Calendar::dyn_twoDigitYearMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::dyn_twoDigitYearMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "twoDigitYearMax"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.Calendar.get_MinSupportedDateTime
System::DateTime System::Globalization::Calendar::get_MinSupportedDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::get_MinSupportedDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MinSupportedDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.Calendar.get_MaxSupportedDateTime
System::DateTime System::Globalization::Calendar::get_MaxSupportedDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::get_MaxSupportedDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxSupportedDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.Calendar.get_ID
int System::Globalization::Calendar::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::get_ID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.Calendar.get_BaseCalendarID
int System::Globalization::Calendar::get_BaseCalendarID() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::get_BaseCalendarID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BaseCalendarID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.Calendar.get_CurrentEraValue
int System::Globalization::Calendar::get_CurrentEraValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::get_CurrentEraValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentEraValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.Calendar.get_Eras
::ArrayW<int> System::Globalization::Calendar::get_Eras() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::get_Eras");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Eras", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<int>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.Calendar.get_TwoDigitYearMax
int System::Globalization::Calendar::get_TwoDigitYearMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::get_TwoDigitYearMax");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TwoDigitYearMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.Calendar.Clone
::Il2CppObject* System::Globalization::Calendar::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.Calendar.SetReadOnlyState
void System::Globalization::Calendar::SetReadOnlyState(bool readOnly) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::SetReadOnlyState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetReadOnlyState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(readOnly)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, readOnly);
}
// Autogenerated method: System.Globalization.Calendar.GetDayOfMonth
int System::Globalization::Calendar::GetDayOfMonth(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::GetDayOfMonth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDayOfMonth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, time);
}
// Autogenerated method: System.Globalization.Calendar.GetDayOfWeek
System::DayOfWeek System::Globalization::Calendar::GetDayOfWeek(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::GetDayOfWeek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDayOfWeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::DayOfWeek, false>(___instance_arg, ___internal__method, time);
}
// Autogenerated method: System.Globalization.Calendar.GetDaysInMonth
int System::Globalization::Calendar::GetDaysInMonth(int year, int month, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::GetDaysInMonth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDaysInMonth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(era)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, year, month, era);
}
// Autogenerated method: System.Globalization.Calendar.GetEra
int System::Globalization::Calendar::GetEra(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::GetEra");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEra", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, time);
}
// Autogenerated method: System.Globalization.Calendar.GetMonth
int System::Globalization::Calendar::GetMonth(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::GetMonth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMonth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, time);
}
// Autogenerated method: System.Globalization.Calendar.GetMonthsInYear
int System::Globalization::Calendar::GetMonthsInYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::GetMonthsInYear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMonthsInYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(era)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.Calendar.GetYear
int System::Globalization::Calendar::GetYear(System::DateTime time) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::GetYear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, time);
}
// Autogenerated method: System.Globalization.Calendar.IsLeapYear
bool System::Globalization::Calendar::IsLeapYear(int year) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::IsLeapYear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsLeapYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, year);
}
// Autogenerated method: System.Globalization.Calendar.IsLeapYear
bool System::Globalization::Calendar::IsLeapYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::IsLeapYear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsLeapYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(era)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.Calendar.ToDateTime
System::DateTime System::Globalization::Calendar::ToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::ToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(day), ::il2cpp_utils::ExtractType(hour), ::il2cpp_utils::ExtractType(minute), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(millisecond), ::il2cpp_utils::ExtractType(era)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(___instance_arg, ___internal__method, year, month, day, hour, minute, second, millisecond, era);
}
// Autogenerated method: System.Globalization.Calendar.TryToDateTime
bool System::Globalization::Calendar::TryToDateTime(int year, int month, int day, int hour, int minute, int second, int millisecond, int era, ByRef<System::DateTime> result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::TryToDateTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryToDateTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(day), ::il2cpp_utils::ExtractType(hour), ::il2cpp_utils::ExtractType(minute), ::il2cpp_utils::ExtractType(second), ::il2cpp_utils::ExtractType(millisecond), ::il2cpp_utils::ExtractType(era), ::il2cpp_utils::ExtractIndependentType<System::DateTime&>()})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, year, month, day, hour, minute, second, millisecond, era, byref(result));
}
// Autogenerated method: System.Globalization.Calendar.IsValidYear
bool System::Globalization::Calendar::IsValidYear(int year, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::IsValidYear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(era)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, year, era);
}
// Autogenerated method: System.Globalization.Calendar.IsValidMonth
bool System::Globalization::Calendar::IsValidMonth(int year, int month, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::IsValidMonth");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidMonth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(era)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, year, month, era);
}
// Autogenerated method: System.Globalization.Calendar.IsValidDay
bool System::Globalization::Calendar::IsValidDay(int year, int month, int day, int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::IsValidDay");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidDay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(day), ::il2cpp_utils::ExtractType(era)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, year, month, day, era);
}
// Autogenerated method: System.Globalization.Calendar.ToFourDigitYear
int System::Globalization::Calendar::ToFourDigitYear(int year) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::ToFourDigitYear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToFourDigitYear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, year);
}
// Autogenerated method: System.Globalization.Calendar.GetSystemTwoDigitYearSetting
int System::Globalization::Calendar::GetSystemTwoDigitYearSetting(int CalID, int defaultYearValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::Calendar::GetSystemTwoDigitYearSetting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "Calendar", "GetSystemTwoDigitYearSetting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(CalID), ::il2cpp_utils::ExtractType(defaultYearValue)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, CalID, defaultYearValue);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.CalendarData
#include "System/Globalization/CalendarData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int32 MAX_CALENDARS
int System::Globalization::CalendarData::_get_MAX_CALENDARS() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::_get_MAX_CALENDARS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CalendarData", "MAX_CALENDARS"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 MAX_CALENDARS
void System::Globalization::CalendarData::_set_MAX_CALENDARS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::_set_MAX_CALENDARS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarData", "MAX_CALENDARS", value));
}
// Autogenerated static field getter
// Get static field: static System.Globalization.CalendarData Invariant
System::Globalization::CalendarData* System::Globalization::CalendarData::_get_Invariant() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::_get_Invariant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarData*>("System.Globalization", "CalendarData", "Invariant"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.CalendarData Invariant
void System::Globalization::CalendarData::_set_Invariant(System::Globalization::CalendarData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::_set_Invariant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarData", "Invariant", value));
}
// Autogenerated instance field getter
// Get instance field: System.String sNativeName
::Il2CppString*& System::Globalization::CalendarData::dyn_sNativeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::dyn_sNativeName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sNativeName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saShortDates
::ArrayW<::Il2CppString*>& System::Globalization::CalendarData::dyn_saShortDates() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::dyn_saShortDates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saShortDates"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saYearMonths
::ArrayW<::Il2CppString*>& System::Globalization::CalendarData::dyn_saYearMonths() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::dyn_saYearMonths");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saYearMonths"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saLongDates
::ArrayW<::Il2CppString*>& System::Globalization::CalendarData::dyn_saLongDates() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::dyn_saLongDates");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saLongDates"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String sMonthDay
::Il2CppString*& System::Globalization::CalendarData::dyn_sMonthDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::dyn_sMonthDay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sMonthDay"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saEraNames
::ArrayW<::Il2CppString*>& System::Globalization::CalendarData::dyn_saEraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::dyn_saEraNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saEraNames"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saAbbrevEraNames
::ArrayW<::Il2CppString*>& System::Globalization::CalendarData::dyn_saAbbrevEraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::dyn_saAbbrevEraNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saAbbrevEraNames"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saAbbrevEnglishEraNames
::ArrayW<::Il2CppString*>& System::Globalization::CalendarData::dyn_saAbbrevEnglishEraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::dyn_saAbbrevEnglishEraNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saAbbrevEnglishEraNames"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saDayNames
::ArrayW<::Il2CppString*>& System::Globalization::CalendarData::dyn_saDayNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::dyn_saDayNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saDayNames"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saAbbrevDayNames
::ArrayW<::Il2CppString*>& System::Globalization::CalendarData::dyn_saAbbrevDayNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::dyn_saAbbrevDayNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saAbbrevDayNames"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saSuperShortDayNames
::ArrayW<::Il2CppString*>& System::Globalization::CalendarData::dyn_saSuperShortDayNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::dyn_saSuperShortDayNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saSuperShortDayNames"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saMonthNames
::ArrayW<::Il2CppString*>& System::Globalization::CalendarData::dyn_saMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::dyn_saMonthNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saMonthNames"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saAbbrevMonthNames
::ArrayW<::Il2CppString*>& System::Globalization::CalendarData::dyn_saAbbrevMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::dyn_saAbbrevMonthNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saAbbrevMonthNames"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saMonthGenitiveNames
::ArrayW<::Il2CppString*>& System::Globalization::CalendarData::dyn_saMonthGenitiveNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::dyn_saMonthGenitiveNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saMonthGenitiveNames"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saAbbrevMonthGenitiveNames
::ArrayW<::Il2CppString*>& System::Globalization::CalendarData::dyn_saAbbrevMonthGenitiveNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::dyn_saAbbrevMonthGenitiveNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saAbbrevMonthGenitiveNames"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] saLeapYearMonthNames
::ArrayW<::Il2CppString*>& System::Globalization::CalendarData::dyn_saLeapYearMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::dyn_saLeapYearMonthNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "saLeapYearMonthNames"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 iTwoDigitYearMax
int& System::Globalization::CalendarData::dyn_iTwoDigitYearMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::dyn_iTwoDigitYearMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iTwoDigitYearMax"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 iCurrentEra
int& System::Globalization::CalendarData::dyn_iCurrentEra() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::dyn_iCurrentEra");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iCurrentEra"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean bUseUserOverrides
bool& System::Globalization::CalendarData::dyn_bUseUserOverrides() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::dyn_bUseUserOverrides");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bUseUserOverrides"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.CalendarData..cctor
void System::Globalization::CalendarData::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CalendarData", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CalendarData.InitializeEraNames
void System::Globalization::CalendarData::InitializeEraNames(::Il2CppString* localeName, int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::InitializeEraNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeEraNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localeName), ::il2cpp_utils::ExtractType(calendarId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, localeName, calendarId);
}
// Autogenerated method: System.Globalization.CalendarData.InitializeAbbreviatedEraNames
void System::Globalization::CalendarData::InitializeAbbreviatedEraNames(::Il2CppString* localeName, int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::InitializeAbbreviatedEraNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeAbbreviatedEraNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localeName), ::il2cpp_utils::ExtractType(calendarId)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, localeName, calendarId);
}
// Autogenerated method: System.Globalization.CalendarData.GetCalendarData
System::Globalization::CalendarData* System::Globalization::CalendarData::GetCalendarData(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::GetCalendarData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CalendarData", "GetCalendarData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::CalendarData*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CalendarData.CalendarIdToCultureName
::Il2CppString* System::Globalization::CalendarData::CalendarIdToCultureName(int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::CalendarIdToCultureName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CalendarData", "CalendarIdToCultureName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, calendarId);
}
// Autogenerated method: System.Globalization.CalendarData.nativeGetTwoDigitYearMax
int System::Globalization::CalendarData::nativeGetTwoDigitYearMax(int calID) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::nativeGetTwoDigitYearMax");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CalendarData", "nativeGetTwoDigitYearMax", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calID)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, calID);
}
// Autogenerated method: System.Globalization.CalendarData.nativeGetCalendarData
bool System::Globalization::CalendarData::nativeGetCalendarData(System::Globalization::CalendarData* data, ::Il2CppString* localeName, int calendarId) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::nativeGetCalendarData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CalendarData", "nativeGetCalendarData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(localeName), ::il2cpp_utils::ExtractType(calendarId)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, data, localeName, calendarId);
}
// Autogenerated method: System.Globalization.CalendarData.fill_calendar_data
bool System::Globalization::CalendarData::fill_calendar_data(::Il2CppString* localeName, int datetimeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarData::fill_calendar_data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "fill_calendar_data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localeName), ::il2cpp_utils::ExtractType(datetimeIndex)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, localeName, datetimeIndex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.CompareOptions
#include "System/Globalization/CompareOptions.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.CompareOptions None
System::Globalization::CompareOptions System::Globalization::CompareOptions::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareOptions::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CompareOptions>("System.Globalization", "CompareOptions", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CompareOptions None
void System::Globalization::CompareOptions::_set_None(System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareOptions::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareOptions", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CompareOptions IgnoreCase
System::Globalization::CompareOptions System::Globalization::CompareOptions::_get_IgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareOptions::_get_IgnoreCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CompareOptions>("System.Globalization", "CompareOptions", "IgnoreCase"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CompareOptions IgnoreCase
void System::Globalization::CompareOptions::_set_IgnoreCase(System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareOptions::_set_IgnoreCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareOptions", "IgnoreCase", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CompareOptions IgnoreNonSpace
System::Globalization::CompareOptions System::Globalization::CompareOptions::_get_IgnoreNonSpace() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareOptions::_get_IgnoreNonSpace");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CompareOptions>("System.Globalization", "CompareOptions", "IgnoreNonSpace"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CompareOptions IgnoreNonSpace
void System::Globalization::CompareOptions::_set_IgnoreNonSpace(System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareOptions::_set_IgnoreNonSpace");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareOptions", "IgnoreNonSpace", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CompareOptions IgnoreSymbols
System::Globalization::CompareOptions System::Globalization::CompareOptions::_get_IgnoreSymbols() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareOptions::_get_IgnoreSymbols");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CompareOptions>("System.Globalization", "CompareOptions", "IgnoreSymbols"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CompareOptions IgnoreSymbols
void System::Globalization::CompareOptions::_set_IgnoreSymbols(System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareOptions::_set_IgnoreSymbols");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareOptions", "IgnoreSymbols", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CompareOptions IgnoreKanaType
System::Globalization::CompareOptions System::Globalization::CompareOptions::_get_IgnoreKanaType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareOptions::_get_IgnoreKanaType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CompareOptions>("System.Globalization", "CompareOptions", "IgnoreKanaType"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CompareOptions IgnoreKanaType
void System::Globalization::CompareOptions::_set_IgnoreKanaType(System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareOptions::_set_IgnoreKanaType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareOptions", "IgnoreKanaType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CompareOptions IgnoreWidth
System::Globalization::CompareOptions System::Globalization::CompareOptions::_get_IgnoreWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareOptions::_get_IgnoreWidth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CompareOptions>("System.Globalization", "CompareOptions", "IgnoreWidth"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CompareOptions IgnoreWidth
void System::Globalization::CompareOptions::_set_IgnoreWidth(System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareOptions::_set_IgnoreWidth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareOptions", "IgnoreWidth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CompareOptions OrdinalIgnoreCase
System::Globalization::CompareOptions System::Globalization::CompareOptions::_get_OrdinalIgnoreCase() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareOptions::_get_OrdinalIgnoreCase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CompareOptions>("System.Globalization", "CompareOptions", "OrdinalIgnoreCase"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CompareOptions OrdinalIgnoreCase
void System::Globalization::CompareOptions::_set_OrdinalIgnoreCase(System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareOptions::_set_OrdinalIgnoreCase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareOptions", "OrdinalIgnoreCase", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CompareOptions StringSort
System::Globalization::CompareOptions System::Globalization::CompareOptions::_get_StringSort() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareOptions::_get_StringSort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CompareOptions>("System.Globalization", "CompareOptions", "StringSort"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CompareOptions StringSort
void System::Globalization::CompareOptions::_set_StringSort(System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareOptions::_set_StringSort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareOptions", "StringSort", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CompareOptions Ordinal
System::Globalization::CompareOptions System::Globalization::CompareOptions::_get_Ordinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareOptions::_get_Ordinal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CompareOptions>("System.Globalization", "CompareOptions", "Ordinal"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CompareOptions Ordinal
void System::Globalization::CompareOptions::_set_Ordinal(System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareOptions::_set_Ordinal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareOptions", "Ordinal", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Globalization::CompareOptions::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareOptions::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.CompareInfo
#include "System/Globalization/CompareInfo.hpp"
// Including type: System.Globalization.SortVersion
#include "System/Globalization/SortVersion.hpp"
// Including type: Mono.Globalization.Unicode.SimpleCollator
#include "Mono/Globalization/Unicode/SimpleCollator.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.Globalization.SortKey
#include "System/Globalization/SortKey.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Globalization.CompareOptions ValidIndexMaskOffFlags
System::Globalization::CompareOptions System::Globalization::CompareInfo::_get_ValidIndexMaskOffFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_get_ValidIndexMaskOffFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CompareOptions>("System.Globalization", "CompareInfo", "ValidIndexMaskOffFlags"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.CompareOptions ValidIndexMaskOffFlags
void System::Globalization::CompareInfo::_set_ValidIndexMaskOffFlags(System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_set_ValidIndexMaskOffFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "ValidIndexMaskOffFlags", value));
}
// Autogenerated static field getter
// Get static field: static private System.Globalization.CompareOptions ValidCompareMaskOffFlags
System::Globalization::CompareOptions System::Globalization::CompareInfo::_get_ValidCompareMaskOffFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_get_ValidCompareMaskOffFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CompareOptions>("System.Globalization", "CompareInfo", "ValidCompareMaskOffFlags"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.CompareOptions ValidCompareMaskOffFlags
void System::Globalization::CompareInfo::_set_ValidCompareMaskOffFlags(System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_set_ValidCompareMaskOffFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "ValidCompareMaskOffFlags", value));
}
// Autogenerated static field getter
// Get static field: static private System.Globalization.CompareOptions ValidHashCodeOfStringMaskOffFlags
System::Globalization::CompareOptions System::Globalization::CompareInfo::_get_ValidHashCodeOfStringMaskOffFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_get_ValidHashCodeOfStringMaskOffFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CompareOptions>("System.Globalization", "CompareInfo", "ValidHashCodeOfStringMaskOffFlags"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.CompareOptions ValidHashCodeOfStringMaskOffFlags
void System::Globalization::CompareInfo::_set_ValidHashCodeOfStringMaskOffFlags(System::Globalization::CompareOptions value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_set_ValidHashCodeOfStringMaskOffFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "ValidHashCodeOfStringMaskOffFlags", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 LINGUISTIC_IGNORECASE
int System::Globalization::CompareInfo::_get_LINGUISTIC_IGNORECASE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_get_LINGUISTIC_IGNORECASE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CompareInfo", "LINGUISTIC_IGNORECASE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 LINGUISTIC_IGNORECASE
void System::Globalization::CompareInfo::_set_LINGUISTIC_IGNORECASE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_set_LINGUISTIC_IGNORECASE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "LINGUISTIC_IGNORECASE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NORM_IGNORECASE
int System::Globalization::CompareInfo::_get_NORM_IGNORECASE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_get_NORM_IGNORECASE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CompareInfo", "NORM_IGNORECASE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NORM_IGNORECASE
void System::Globalization::CompareInfo::_set_NORM_IGNORECASE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_set_NORM_IGNORECASE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "NORM_IGNORECASE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NORM_IGNOREKANATYPE
int System::Globalization::CompareInfo::_get_NORM_IGNOREKANATYPE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_get_NORM_IGNOREKANATYPE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CompareInfo", "NORM_IGNOREKANATYPE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NORM_IGNOREKANATYPE
void System::Globalization::CompareInfo::_set_NORM_IGNOREKANATYPE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_set_NORM_IGNOREKANATYPE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "NORM_IGNOREKANATYPE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 LINGUISTIC_IGNOREDIACRITIC
int System::Globalization::CompareInfo::_get_LINGUISTIC_IGNOREDIACRITIC() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_get_LINGUISTIC_IGNOREDIACRITIC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CompareInfo", "LINGUISTIC_IGNOREDIACRITIC"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 LINGUISTIC_IGNOREDIACRITIC
void System::Globalization::CompareInfo::_set_LINGUISTIC_IGNOREDIACRITIC(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_set_LINGUISTIC_IGNOREDIACRITIC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "LINGUISTIC_IGNOREDIACRITIC", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NORM_IGNORENONSPACE
int System::Globalization::CompareInfo::_get_NORM_IGNORENONSPACE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_get_NORM_IGNORENONSPACE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CompareInfo", "NORM_IGNORENONSPACE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NORM_IGNORENONSPACE
void System::Globalization::CompareInfo::_set_NORM_IGNORENONSPACE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_set_NORM_IGNORENONSPACE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "NORM_IGNORENONSPACE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NORM_IGNORESYMBOLS
int System::Globalization::CompareInfo::_get_NORM_IGNORESYMBOLS() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_get_NORM_IGNORESYMBOLS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CompareInfo", "NORM_IGNORESYMBOLS"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NORM_IGNORESYMBOLS
void System::Globalization::CompareInfo::_set_NORM_IGNORESYMBOLS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_set_NORM_IGNORESYMBOLS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "NORM_IGNORESYMBOLS", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 NORM_IGNOREWIDTH
int System::Globalization::CompareInfo::_get_NORM_IGNOREWIDTH() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_get_NORM_IGNOREWIDTH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CompareInfo", "NORM_IGNOREWIDTH"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 NORM_IGNOREWIDTH
void System::Globalization::CompareInfo::_set_NORM_IGNOREWIDTH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_set_NORM_IGNOREWIDTH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "NORM_IGNOREWIDTH", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SORT_STRINGSORT
int System::Globalization::CompareInfo::_get_SORT_STRINGSORT() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_get_SORT_STRINGSORT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CompareInfo", "SORT_STRINGSORT"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SORT_STRINGSORT
void System::Globalization::CompareInfo::_set_SORT_STRINGSORT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_set_SORT_STRINGSORT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "SORT_STRINGSORT", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 COMPARE_OPTIONS_ORDINAL
int System::Globalization::CompareInfo::_get_COMPARE_OPTIONS_ORDINAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_get_COMPARE_OPTIONS_ORDINAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CompareInfo", "COMPARE_OPTIONS_ORDINAL"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 COMPARE_OPTIONS_ORDINAL
void System::Globalization::CompareInfo::_set_COMPARE_OPTIONS_ORDINAL(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_set_COMPARE_OPTIONS_ORDINAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "COMPARE_OPTIONS_ORDINAL", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 NORM_LINGUISTIC_CASING
int System::Globalization::CompareInfo::_get_NORM_LINGUISTIC_CASING() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_get_NORM_LINGUISTIC_CASING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CompareInfo", "NORM_LINGUISTIC_CASING"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 NORM_LINGUISTIC_CASING
void System::Globalization::CompareInfo::_set_NORM_LINGUISTIC_CASING(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_set_NORM_LINGUISTIC_CASING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "NORM_LINGUISTIC_CASING", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 RESERVED_FIND_ASCII_STRING
int System::Globalization::CompareInfo::_get_RESERVED_FIND_ASCII_STRING() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_get_RESERVED_FIND_ASCII_STRING");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CompareInfo", "RESERVED_FIND_ASCII_STRING"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 RESERVED_FIND_ASCII_STRING
void System::Globalization::CompareInfo::_set_RESERVED_FIND_ASCII_STRING(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_set_RESERVED_FIND_ASCII_STRING");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "RESERVED_FIND_ASCII_STRING", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SORT_VERSION_WHIDBEY
int System::Globalization::CompareInfo::_get_SORT_VERSION_WHIDBEY() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_get_SORT_VERSION_WHIDBEY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CompareInfo", "SORT_VERSION_WHIDBEY"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SORT_VERSION_WHIDBEY
void System::Globalization::CompareInfo::_set_SORT_VERSION_WHIDBEY(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_set_SORT_VERSION_WHIDBEY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "SORT_VERSION_WHIDBEY", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SORT_VERSION_V4
int System::Globalization::CompareInfo::_get_SORT_VERSION_V4() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_get_SORT_VERSION_V4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "CompareInfo", "SORT_VERSION_V4"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SORT_VERSION_V4
void System::Globalization::CompareInfo::_set_SORT_VERSION_V4(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_set_SORT_VERSION_V4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "SORT_VERSION_V4", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,Mono.Globalization.Unicode.SimpleCollator> collators
System::Collections::Generic::Dictionary_2<::Il2CppString*, Mono::Globalization::Unicode::SimpleCollator*>* System::Globalization::CompareInfo::_get_collators() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_get_collators");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<::Il2CppString*, Mono::Globalization::Unicode::SimpleCollator*>*>("System.Globalization", "CompareInfo", "collators")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,Mono.Globalization.Unicode.SimpleCollator> collators
void System::Globalization::CompareInfo::_set_collators(System::Collections::Generic::Dictionary_2<::Il2CppString*, Mono::Globalization::Unicode::SimpleCollator*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_set_collators");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "collators", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean managedCollation
bool System::Globalization::CompareInfo::_get_managedCollation() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_get_managedCollation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Globalization", "CompareInfo", "managedCollation"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean managedCollation
void System::Globalization::CompareInfo::_set_managedCollation(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_set_managedCollation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "managedCollation", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean managedCollationChecked
bool System::Globalization::CompareInfo::_get_managedCollationChecked() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_get_managedCollationChecked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Globalization", "CompareInfo", "managedCollationChecked"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean managedCollationChecked
void System::Globalization::CompareInfo::_set_managedCollationChecked(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::_set_managedCollationChecked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CompareInfo", "managedCollationChecked", value));
}
// Autogenerated instance field getter
// Get instance field: private System.String m_name
::Il2CppString*& System::Globalization::CompareInfo::dyn_m_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::dyn_m_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_name"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_sortName
::Il2CppString*& System::Globalization::CompareInfo::dyn_m_sortName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::dyn_m_sortName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_sortName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 win32LCID
int& System::Globalization::CompareInfo::dyn_win32LCID() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::dyn_win32LCID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "win32LCID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 culture
int& System::Globalization::CompareInfo::dyn_culture() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::dyn_culture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "culture"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.SortVersion m_SortVersion
System::Globalization::SortVersion*& System::Globalization::CompareInfo::dyn_m_SortVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::dyn_m_SortVersion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SortVersion"))->offset;
  return *reinterpret_cast<System::Globalization::SortVersion**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Mono.Globalization.Unicode.SimpleCollator collator
Mono::Globalization::Unicode::SimpleCollator*& System::Globalization::CompareInfo::dyn_collator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::dyn_collator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collator"))->offset;
  return *reinterpret_cast<Mono::Globalization::Unicode::SimpleCollator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.CompareInfo.get_Name
::Il2CppString* System::Globalization::CompareInfo::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.CompareInfo.get_UseManagedCollation
bool System::Globalization::CompareInfo::get_UseManagedCollation() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::get_UseManagedCollation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CompareInfo", "get_UseManagedCollation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CompareInfo.GetCompareInfo
System::Globalization::CompareInfo* System::Globalization::CompareInfo::GetCompareInfo(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::GetCompareInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CompareInfo", "GetCompareInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::CompareInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Globalization.CompareInfo.OnDeserializing
void System::Globalization::CompareInfo::OnDeserializing(System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::OnDeserializing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserializing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, ctx);
}
// Autogenerated method: System.Globalization.CompareInfo.OnDeserialized
void System::Globalization::CompareInfo::OnDeserialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::OnDeserialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.CompareInfo.OnDeserialized
void System::Globalization::CompareInfo::OnDeserialized(System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::OnDeserialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, ctx);
}
// Autogenerated method: System.Globalization.CompareInfo.OnSerializing
void System::Globalization::CompareInfo::OnSerializing(System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::OnSerializing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSerializing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, ctx);
}
// Autogenerated method: System.Globalization.CompareInfo.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
void System::Globalization::CompareInfo::System_Runtime_Serialization_IDeserializationCallback_OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::System.Runtime.Serialization.IDeserializationCallback.OnDeserialization");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.IDeserializationCallback.OnDeserialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, sender);
}
// Autogenerated method: System.Globalization.CompareInfo.Compare
int System::Globalization::CompareInfo::Compare(::Il2CppString* string1, ::Il2CppString* string2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(string1), ::il2cpp_utils::ExtractType(string2)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, string1, string2);
}
// Autogenerated method: System.Globalization.CompareInfo.Compare
int System::Globalization::CompareInfo::Compare(::Il2CppString* string1, ::Il2CppString* string2, System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(string1), ::il2cpp_utils::ExtractType(string2), ::il2cpp_utils::ExtractType(options)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, string1, string2, options);
}
// Autogenerated method: System.Globalization.CompareInfo.Compare
int System::Globalization::CompareInfo::Compare(::Il2CppString* string1, int offset1, int length1, ::Il2CppString* string2, int offset2, int length2, System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(string1), ::il2cpp_utils::ExtractType(offset1), ::il2cpp_utils::ExtractType(length1), ::il2cpp_utils::ExtractType(string2), ::il2cpp_utils::ExtractType(offset2), ::il2cpp_utils::ExtractType(length2), ::il2cpp_utils::ExtractType(options)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, string1, offset1, length1, string2, offset2, length2, options);
}
// Autogenerated method: System.Globalization.CompareInfo.CompareOrdinal
int System::Globalization::CompareInfo::CompareOrdinal(::Il2CppString* string1, int offset1, int length1, ::Il2CppString* string2, int offset2, int length2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::CompareOrdinal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CompareInfo", "CompareOrdinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(string1), ::il2cpp_utils::ExtractType(offset1), ::il2cpp_utils::ExtractType(length1), ::il2cpp_utils::ExtractType(string2), ::il2cpp_utils::ExtractType(offset2), ::il2cpp_utils::ExtractType(length2)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, string1, offset1, length1, string2, offset2, length2);
}
// Autogenerated method: System.Globalization.CompareInfo.IsPrefix
bool System::Globalization::CompareInfo::IsPrefix(::Il2CppString* source, ::Il2CppString* prefix, System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::IsPrefix");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsPrefix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(prefix), ::il2cpp_utils::ExtractType(options)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, source, prefix, options);
}
// Autogenerated method: System.Globalization.CompareInfo.IsSuffix
bool System::Globalization::CompareInfo::IsSuffix(::Il2CppString* source, ::Il2CppString* suffix, System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::IsSuffix");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsSuffix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(suffix), ::il2cpp_utils::ExtractType(options)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, source, suffix, options);
}
// Autogenerated method: System.Globalization.CompareInfo.IndexOf
int System::Globalization::CompareInfo::IndexOf(::Il2CppString* source, ::Il2CppString* value, System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::IndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(options)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, source, value, options);
}
// Autogenerated method: System.Globalization.CompareInfo.IndexOf
int System::Globalization::CompareInfo::IndexOf(::Il2CppString* source, ::Il2CppString* value, int startIndex, int count, System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::IndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(options)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, source, value, startIndex, count, options);
}
// Autogenerated method: System.Globalization.CompareInfo.LastIndexOf
int System::Globalization::CompareInfo::LastIndexOf(::Il2CppString* source, ::Il2CppString* value, int startIndex, int count, System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::LastIndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LastIndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(startIndex), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(options)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, source, value, startIndex, count, options);
}
// Autogenerated method: System.Globalization.CompareInfo.GetSortKey
System::Globalization::SortKey* System::Globalization::CompareInfo::GetSortKey(::Il2CppString* source, System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::GetSortKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSortKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(options)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::SortKey*, false>(___instance_arg, ___internal__method, source, options);
}
// Autogenerated method: System.Globalization.CompareInfo.CreateSortKey
System::Globalization::SortKey* System::Globalization::CompareInfo::CreateSortKey(::Il2CppString* source, System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::CreateSortKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSortKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(options)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::SortKey*, false>(___instance_arg, ___internal__method, source, options);
}
// Autogenerated method: System.Globalization.CompareInfo.GetHashCodeOfString
int System::Globalization::CompareInfo::GetHashCodeOfString(::Il2CppString* source, System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::GetHashCodeOfString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCodeOfString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(options)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, source, options);
}
// Autogenerated method: System.Globalization.CompareInfo.GetHashCodeOfString
int System::Globalization::CompareInfo::GetHashCodeOfString(::Il2CppString* source, System::Globalization::CompareOptions options, bool forceRandomizedHashing, int64_t additionalEntropy) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::GetHashCodeOfString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCodeOfString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(forceRandomizedHashing), ::il2cpp_utils::ExtractType(additionalEntropy)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, source, options, forceRandomizedHashing, additionalEntropy);
}
// Autogenerated method: System.Globalization.CompareInfo.GetCollator
Mono::Globalization::Unicode::SimpleCollator* System::Globalization::CompareInfo::GetCollator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::GetCollator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCollator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<Mono::Globalization::Unicode::SimpleCollator*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.CompareInfo.CreateSortKeyCore
System::Globalization::SortKey* System::Globalization::CompareInfo::CreateSortKeyCore(::Il2CppString* source, System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::CreateSortKeyCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateSortKeyCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(options)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::SortKey*, false>(___instance_arg, ___internal__method, source, options);
}
// Autogenerated method: System.Globalization.CompareInfo.internal_index_switch
int System::Globalization::CompareInfo::internal_index_switch(::Il2CppString* s1, int sindex, int count, ::Il2CppString* s2, System::Globalization::CompareOptions opt, bool first) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::internal_index_switch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internal_index_switch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s1), ::il2cpp_utils::ExtractType(sindex), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(s2), ::il2cpp_utils::ExtractType(opt), ::il2cpp_utils::ExtractType(first)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, s1, sindex, count, s2, opt, first);
}
// Autogenerated method: System.Globalization.CompareInfo.internal_compare_switch
int System::Globalization::CompareInfo::internal_compare_switch(::Il2CppString* str1, int offset1, int length1, ::Il2CppString* str2, int offset2, int length2, System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::internal_compare_switch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internal_compare_switch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str1), ::il2cpp_utils::ExtractType(offset1), ::il2cpp_utils::ExtractType(length1), ::il2cpp_utils::ExtractType(str2), ::il2cpp_utils::ExtractType(offset2), ::il2cpp_utils::ExtractType(length2), ::il2cpp_utils::ExtractType(options)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, str1, offset1, length1, str2, offset2, length2, options);
}
// Autogenerated method: System.Globalization.CompareInfo.internal_compare_managed
int System::Globalization::CompareInfo::internal_compare_managed(::Il2CppString* str1, int offset1, int length1, ::Il2CppString* str2, int offset2, int length2, System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::internal_compare_managed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internal_compare_managed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str1), ::il2cpp_utils::ExtractType(offset1), ::il2cpp_utils::ExtractType(length1), ::il2cpp_utils::ExtractType(str2), ::il2cpp_utils::ExtractType(offset2), ::il2cpp_utils::ExtractType(length2), ::il2cpp_utils::ExtractType(options)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, str1, offset1, length1, str2, offset2, length2, options);
}
// Autogenerated method: System.Globalization.CompareInfo.internal_index_managed
int System::Globalization::CompareInfo::internal_index_managed(::Il2CppString* s1, int sindex, int count, ::Il2CppString* s2, System::Globalization::CompareOptions opt, bool first) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::internal_index_managed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internal_index_managed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s1), ::il2cpp_utils::ExtractType(sindex), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(s2), ::il2cpp_utils::ExtractType(opt), ::il2cpp_utils::ExtractType(first)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, s1, sindex, count, s2, opt, first);
}
// Autogenerated method: System.Globalization.CompareInfo.assign_sortkey
void System::Globalization::CompareInfo::assign_sortkey(::Il2CppObject* key, ::Il2CppString* source, System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::assign_sortkey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "assign_sortkey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(options)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, key, source, options);
}
// Autogenerated method: System.Globalization.CompareInfo.internal_compare
int System::Globalization::CompareInfo::internal_compare(::Il2CppString* str1, int offset1, int length1, ::Il2CppString* str2, int offset2, int length2, System::Globalization::CompareOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::internal_compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internal_compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str1), ::il2cpp_utils::ExtractType(offset1), ::il2cpp_utils::ExtractType(length1), ::il2cpp_utils::ExtractType(str2), ::il2cpp_utils::ExtractType(offset2), ::il2cpp_utils::ExtractType(length2), ::il2cpp_utils::ExtractType(options)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, str1, offset1, length1, str2, offset2, length2, options);
}
// Autogenerated method: System.Globalization.CompareInfo.internal_index
int System::Globalization::CompareInfo::internal_index(::Il2CppString* source, int sindex, int count, ::Il2CppString* value, System::Globalization::CompareOptions options, bool first) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::internal_index");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internal_index", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(sindex), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(options), ::il2cpp_utils::ExtractType(first)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, source, sindex, count, value, options, first);
}
// Autogenerated method: System.Globalization.CompareInfo.Equals
bool System::Globalization::CompareInfo::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.Globalization.CompareInfo.GetHashCode
int System::Globalization::CompareInfo::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.CompareInfo.ToString
::Il2CppString* System::Globalization::CompareInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CompareInfo::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.CultureNotFoundException
#include "System/Globalization/CultureNotFoundException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String m_invalidCultureName
::Il2CppString*& System::Globalization::CultureNotFoundException::dyn_m_invalidCultureName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureNotFoundException::dyn_m_invalidCultureName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_invalidCultureName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Nullable`1<System.Int32> m_invalidCultureId
System::Nullable_1<int>& System::Globalization::CultureNotFoundException::dyn_m_invalidCultureId() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureNotFoundException::dyn_m_invalidCultureId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_invalidCultureId"))->offset;
  return *reinterpret_cast<System::Nullable_1<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.CultureNotFoundException.get_InvalidCultureId
System::Nullable_1<int> System::Globalization::CultureNotFoundException::get_InvalidCultureId() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureNotFoundException::get_InvalidCultureId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InvalidCultureId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<int>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureNotFoundException.get_InvalidCultureName
::Il2CppString* System::Globalization::CultureNotFoundException::get_InvalidCultureName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureNotFoundException::get_InvalidCultureName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InvalidCultureName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureNotFoundException.get_DefaultMessage
::Il2CppString* System::Globalization::CultureNotFoundException::get_DefaultMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureNotFoundException::get_DefaultMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "CultureNotFoundException", "get_DefaultMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.CultureNotFoundException.get_FormatedInvalidCultureId
::Il2CppString* System::Globalization::CultureNotFoundException::get_FormatedInvalidCultureId() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureNotFoundException::get_FormatedInvalidCultureId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FormatedInvalidCultureId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureNotFoundException.get_Message
::Il2CppString* System::Globalization::CultureNotFoundException::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureNotFoundException::get_Message");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.CultureNotFoundException.GetObjectData
void System::Globalization::CultureNotFoundException::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CultureNotFoundException::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, info, context);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.MonthNameStyles
#include "System/Globalization/MonthNameStyles.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.MonthNameStyles Regular
System::Globalization::MonthNameStyles System::Globalization::MonthNameStyles::_get_Regular() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::MonthNameStyles::_get_Regular");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::MonthNameStyles>("System.Globalization", "MonthNameStyles", "Regular"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.MonthNameStyles Regular
void System::Globalization::MonthNameStyles::_set_Regular(System::Globalization::MonthNameStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::MonthNameStyles::_set_Regular");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "MonthNameStyles", "Regular", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.MonthNameStyles Genitive
System::Globalization::MonthNameStyles System::Globalization::MonthNameStyles::_get_Genitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::MonthNameStyles::_get_Genitive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::MonthNameStyles>("System.Globalization", "MonthNameStyles", "Genitive"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.MonthNameStyles Genitive
void System::Globalization::MonthNameStyles::_set_Genitive(System::Globalization::MonthNameStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::MonthNameStyles::_set_Genitive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "MonthNameStyles", "Genitive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.MonthNameStyles LeapYear
System::Globalization::MonthNameStyles System::Globalization::MonthNameStyles::_get_LeapYear() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::MonthNameStyles::_get_LeapYear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::MonthNameStyles>("System.Globalization", "MonthNameStyles", "LeapYear"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.MonthNameStyles LeapYear
void System::Globalization::MonthNameStyles::_set_LeapYear(System::Globalization::MonthNameStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::MonthNameStyles::_set_LeapYear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "MonthNameStyles", "LeapYear", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Globalization::MonthNameStyles::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::MonthNameStyles::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.DateTimeFormatFlags
#include "System/Globalization/DateTimeFormatFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatFlags None
System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeFormatFlags>("System.Globalization", "DateTimeFormatFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatFlags None
void System::Globalization::DateTimeFormatFlags::_set_None(System::Globalization::DateTimeFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatFlags UseGenitiveMonth
System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatFlags::_get_UseGenitiveMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatFlags::_get_UseGenitiveMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeFormatFlags>("System.Globalization", "DateTimeFormatFlags", "UseGenitiveMonth"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatFlags UseGenitiveMonth
void System::Globalization::DateTimeFormatFlags::_set_UseGenitiveMonth(System::Globalization::DateTimeFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatFlags::_set_UseGenitiveMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatFlags", "UseGenitiveMonth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatFlags UseLeapYearMonth
System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatFlags::_get_UseLeapYearMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatFlags::_get_UseLeapYearMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeFormatFlags>("System.Globalization", "DateTimeFormatFlags", "UseLeapYearMonth"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatFlags UseLeapYearMonth
void System::Globalization::DateTimeFormatFlags::_set_UseLeapYearMonth(System::Globalization::DateTimeFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatFlags::_set_UseLeapYearMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatFlags", "UseLeapYearMonth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatFlags UseSpacesInMonthNames
System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatFlags::_get_UseSpacesInMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatFlags::_get_UseSpacesInMonthNames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeFormatFlags>("System.Globalization", "DateTimeFormatFlags", "UseSpacesInMonthNames"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatFlags UseSpacesInMonthNames
void System::Globalization::DateTimeFormatFlags::_set_UseSpacesInMonthNames(System::Globalization::DateTimeFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatFlags::_set_UseSpacesInMonthNames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatFlags", "UseSpacesInMonthNames", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatFlags UseHebrewRule
System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatFlags::_get_UseHebrewRule() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatFlags::_get_UseHebrewRule");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeFormatFlags>("System.Globalization", "DateTimeFormatFlags", "UseHebrewRule"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatFlags UseHebrewRule
void System::Globalization::DateTimeFormatFlags::_set_UseHebrewRule(System::Globalization::DateTimeFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatFlags::_set_UseHebrewRule");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatFlags", "UseHebrewRule", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatFlags UseSpacesInDayNames
System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatFlags::_get_UseSpacesInDayNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatFlags::_get_UseSpacesInDayNames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeFormatFlags>("System.Globalization", "DateTimeFormatFlags", "UseSpacesInDayNames"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatFlags UseSpacesInDayNames
void System::Globalization::DateTimeFormatFlags::_set_UseSpacesInDayNames(System::Globalization::DateTimeFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatFlags::_set_UseSpacesInDayNames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatFlags", "UseSpacesInDayNames", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatFlags UseDigitPrefixInTokens
System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatFlags::_get_UseDigitPrefixInTokens() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatFlags::_get_UseDigitPrefixInTokens");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeFormatFlags>("System.Globalization", "DateTimeFormatFlags", "UseDigitPrefixInTokens"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatFlags UseDigitPrefixInTokens
void System::Globalization::DateTimeFormatFlags::_set_UseDigitPrefixInTokens(System::Globalization::DateTimeFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatFlags::_set_UseDigitPrefixInTokens");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatFlags", "UseDigitPrefixInTokens", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.DateTimeFormatFlags NotInitialized
System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatFlags::_get_NotInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatFlags::_get_NotInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeFormatFlags>("System.Globalization", "DateTimeFormatFlags", "NotInitialized"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.DateTimeFormatFlags NotInitialized
void System::Globalization::DateTimeFormatFlags::_set_NotInitialized(System::Globalization::DateTimeFormatFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatFlags::_set_NotInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatFlags", "NotInitialized", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Globalization::DateTimeFormatFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.DateTimeFormatInfo
#include "System/Globalization/DateTimeFormatInfo.hpp"
// Including type: System.Globalization.CultureData
#include "System/Globalization/CultureData.hpp"
// Including type: System.Globalization.CompareInfo
#include "System/Globalization/CompareInfo.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Globalization.Calendar
#include "System/Globalization/Calendar.hpp"
// Including type: System.Globalization.TokenHashValue
#include "System/Globalization/TokenHashValue.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Globalization.MonthNameStyles
#include "System/Globalization/MonthNameStyles.hpp"
// Including type: System.DayOfWeek
#include "System/DayOfWeek.hpp"
// Including type: System.__DTString
#include "System/__DTString.hpp"
// Including type: System.TokenType
#include "System/TokenType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Globalization.DateTimeFormatInfo invariantInfo
System::Globalization::DateTimeFormatInfo* System::Globalization::DateTimeFormatInfo::_get_invariantInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_invariantInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeFormatInfo*>("System.Globalization", "DateTimeFormatInfo", "invariantInfo"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.DateTimeFormatInfo invariantInfo
void System::Globalization::DateTimeFormatInfo::_set_invariantInfo(System::Globalization::DateTimeFormatInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_invariantInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "invariantInfo", value));
}
// Autogenerated static field getter
// Get static field: static System.String rfc1123Pattern
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_rfc1123Pattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_rfc1123Pattern");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "rfc1123Pattern"));
}
// Autogenerated static field setter
// Set static field: static System.String rfc1123Pattern
void System::Globalization::DateTimeFormatInfo::_set_rfc1123Pattern(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_rfc1123Pattern");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "rfc1123Pattern", value));
}
// Autogenerated static field getter
// Get static field: static System.String sortableDateTimePattern
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_sortableDateTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_sortableDateTimePattern");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "sortableDateTimePattern"));
}
// Autogenerated static field setter
// Set static field: static System.String sortableDateTimePattern
void System::Globalization::DateTimeFormatInfo::_set_sortableDateTimePattern(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_sortableDateTimePattern");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "sortableDateTimePattern", value));
}
// Autogenerated static field getter
// Get static field: static System.String universalSortableDateTimePattern
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_universalSortableDateTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_universalSortableDateTimePattern");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "universalSortableDateTimePattern"));
}
// Autogenerated static field setter
// Set static field: static System.String universalSortableDateTimePattern
void System::Globalization::DateTimeFormatInfo::_set_universalSortableDateTimePattern(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_universalSortableDateTimePattern");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "universalSortableDateTimePattern", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 DEFAULT_ALL_DATETIMES_SIZE
int System::Globalization::DateTimeFormatInfo::_get_DEFAULT_ALL_DATETIMES_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_DEFAULT_ALL_DATETIMES_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "DateTimeFormatInfo", "DEFAULT_ALL_DATETIMES_SIZE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DEFAULT_ALL_DATETIMES_SIZE
void System::Globalization::DateTimeFormatInfo::_set_DEFAULT_ALL_DATETIMES_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_DEFAULT_ALL_DATETIMES_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "DEFAULT_ALL_DATETIMES_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static System.Boolean preferExistingTokens
bool System::Globalization::DateTimeFormatInfo::_get_preferExistingTokens() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_preferExistingTokens");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Globalization", "DateTimeFormatInfo", "preferExistingTokens"));
}
// Autogenerated static field setter
// Set static field: static System.Boolean preferExistingTokens
void System::Globalization::DateTimeFormatInfo::_set_preferExistingTokens(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_preferExistingTokens");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "preferExistingTokens", value));
}
// [OptionalFieldAttribute] Offset: 0xE65D70
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable s_calendarNativeNames
System::Collections::Hashtable* System::Globalization::DateTimeFormatInfo::_get_s_calendarNativeNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_s_calendarNativeNames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Hashtable*>("System.Globalization", "DateTimeFormatInfo", "s_calendarNativeNames"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable s_calendarNativeNames
void System::Globalization::DateTimeFormatInfo::_set_s_calendarNativeNames(System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_s_calendarNativeNames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "s_calendarNativeNames", value));
}
// Autogenerated static field getter
// Get static field: static System.Globalization.DateTimeStyles InvalidDateTimeStyles
System::Globalization::DateTimeStyles System::Globalization::DateTimeFormatInfo::_get_InvalidDateTimeStyles() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_InvalidDateTimeStyles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeStyles>("System.Globalization", "DateTimeFormatInfo", "InvalidDateTimeStyles"));
}
// Autogenerated static field setter
// Set static field: static System.Globalization.DateTimeStyles InvalidDateTimeStyles
void System::Globalization::DateTimeFormatInfo::_set_InvalidDateTimeStyles(System::Globalization::DateTimeStyles value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_InvalidDateTimeStyles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "InvalidDateTimeStyles", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 TOKEN_HASH_SIZE
int System::Globalization::DateTimeFormatInfo::_get_TOKEN_HASH_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_TOKEN_HASH_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "DateTimeFormatInfo", "TOKEN_HASH_SIZE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 TOKEN_HASH_SIZE
void System::Globalization::DateTimeFormatInfo::_set_TOKEN_HASH_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_TOKEN_HASH_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "TOKEN_HASH_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SECOND_PRIME
int System::Globalization::DateTimeFormatInfo::_get_SECOND_PRIME() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_SECOND_PRIME");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Globalization", "DateTimeFormatInfo", "SECOND_PRIME"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SECOND_PRIME
void System::Globalization::DateTimeFormatInfo::_set_SECOND_PRIME(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_SECOND_PRIME");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "SECOND_PRIME", value));
}
// Autogenerated static field getter
// Get static field: static private System.String dateSeparatorOrTimeZoneOffset
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_dateSeparatorOrTimeZoneOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_dateSeparatorOrTimeZoneOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "dateSeparatorOrTimeZoneOffset"));
}
// Autogenerated static field setter
// Set static field: static private System.String dateSeparatorOrTimeZoneOffset
void System::Globalization::DateTimeFormatInfo::_set_dateSeparatorOrTimeZoneOffset(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_dateSeparatorOrTimeZoneOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "dateSeparatorOrTimeZoneOffset", value));
}
// Autogenerated static field getter
// Get static field: static private System.String invariantDateSeparator
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_invariantDateSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_invariantDateSeparator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "invariantDateSeparator"));
}
// Autogenerated static field setter
// Set static field: static private System.String invariantDateSeparator
void System::Globalization::DateTimeFormatInfo::_set_invariantDateSeparator(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_invariantDateSeparator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "invariantDateSeparator", value));
}
// Autogenerated static field getter
// Get static field: static private System.String invariantTimeSeparator
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_invariantTimeSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_invariantTimeSeparator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "invariantTimeSeparator"));
}
// Autogenerated static field setter
// Set static field: static private System.String invariantTimeSeparator
void System::Globalization::DateTimeFormatInfo::_set_invariantTimeSeparator(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_invariantTimeSeparator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "invariantTimeSeparator", value));
}
// Autogenerated static field getter
// Get static field: static System.String IgnorablePeriod
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_IgnorablePeriod() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_IgnorablePeriod");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "IgnorablePeriod"));
}
// Autogenerated static field setter
// Set static field: static System.String IgnorablePeriod
void System::Globalization::DateTimeFormatInfo::_set_IgnorablePeriod(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_IgnorablePeriod");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "IgnorablePeriod", value));
}
// Autogenerated static field getter
// Get static field: static System.String IgnorableComma
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_IgnorableComma() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_IgnorableComma");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "IgnorableComma"));
}
// Autogenerated static field setter
// Set static field: static System.String IgnorableComma
void System::Globalization::DateTimeFormatInfo::_set_IgnorableComma(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_IgnorableComma");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "IgnorableComma", value));
}
// Autogenerated static field getter
// Get static field: static System.String CJKYearSuff
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_CJKYearSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_CJKYearSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "CJKYearSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String CJKYearSuff
void System::Globalization::DateTimeFormatInfo::_set_CJKYearSuff(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_CJKYearSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "CJKYearSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String CJKMonthSuff
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_CJKMonthSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_CJKMonthSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "CJKMonthSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String CJKMonthSuff
void System::Globalization::DateTimeFormatInfo::_set_CJKMonthSuff(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_CJKMonthSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "CJKMonthSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String CJKDaySuff
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_CJKDaySuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_CJKDaySuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "CJKDaySuff"));
}
// Autogenerated static field setter
// Set static field: static System.String CJKDaySuff
void System::Globalization::DateTimeFormatInfo::_set_CJKDaySuff(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_CJKDaySuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "CJKDaySuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String KoreanYearSuff
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_KoreanYearSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_KoreanYearSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "KoreanYearSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String KoreanYearSuff
void System::Globalization::DateTimeFormatInfo::_set_KoreanYearSuff(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_KoreanYearSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "KoreanYearSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String KoreanMonthSuff
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_KoreanMonthSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_KoreanMonthSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "KoreanMonthSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String KoreanMonthSuff
void System::Globalization::DateTimeFormatInfo::_set_KoreanMonthSuff(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_KoreanMonthSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "KoreanMonthSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String KoreanDaySuff
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_KoreanDaySuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_KoreanDaySuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "KoreanDaySuff"));
}
// Autogenerated static field setter
// Set static field: static System.String KoreanDaySuff
void System::Globalization::DateTimeFormatInfo::_set_KoreanDaySuff(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_KoreanDaySuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "KoreanDaySuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String KoreanHourSuff
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_KoreanHourSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_KoreanHourSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "KoreanHourSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String KoreanHourSuff
void System::Globalization::DateTimeFormatInfo::_set_KoreanHourSuff(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_KoreanHourSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "KoreanHourSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String KoreanMinuteSuff
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_KoreanMinuteSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_KoreanMinuteSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "KoreanMinuteSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String KoreanMinuteSuff
void System::Globalization::DateTimeFormatInfo::_set_KoreanMinuteSuff(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_KoreanMinuteSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "KoreanMinuteSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String KoreanSecondSuff
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_KoreanSecondSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_KoreanSecondSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "KoreanSecondSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String KoreanSecondSuff
void System::Globalization::DateTimeFormatInfo::_set_KoreanSecondSuff(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_KoreanSecondSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "KoreanSecondSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String CJKHourSuff
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_CJKHourSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_CJKHourSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "CJKHourSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String CJKHourSuff
void System::Globalization::DateTimeFormatInfo::_set_CJKHourSuff(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_CJKHourSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "CJKHourSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String ChineseHourSuff
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_ChineseHourSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_ChineseHourSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "ChineseHourSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String ChineseHourSuff
void System::Globalization::DateTimeFormatInfo::_set_ChineseHourSuff(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_ChineseHourSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "ChineseHourSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String CJKMinuteSuff
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_CJKMinuteSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_CJKMinuteSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "CJKMinuteSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String CJKMinuteSuff
void System::Globalization::DateTimeFormatInfo::_set_CJKMinuteSuff(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_CJKMinuteSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "CJKMinuteSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String CJKSecondSuff
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_CJKSecondSuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_CJKSecondSuff");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "CJKSecondSuff"));
}
// Autogenerated static field setter
// Set static field: static System.String CJKSecondSuff
void System::Globalization::DateTimeFormatInfo::_set_CJKSecondSuff(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_CJKSecondSuff");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "CJKSecondSuff", value));
}
// Autogenerated static field getter
// Get static field: static System.String LocalTimeMark
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_LocalTimeMark() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_LocalTimeMark");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "LocalTimeMark"));
}
// Autogenerated static field setter
// Set static field: static System.String LocalTimeMark
void System::Globalization::DateTimeFormatInfo::_set_LocalTimeMark(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_LocalTimeMark");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "LocalTimeMark", value));
}
// Autogenerated static field getter
// Get static field: static System.String KoreanLangName
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_KoreanLangName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_KoreanLangName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "KoreanLangName"));
}
// Autogenerated static field setter
// Set static field: static System.String KoreanLangName
void System::Globalization::DateTimeFormatInfo::_set_KoreanLangName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_KoreanLangName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "KoreanLangName", value));
}
// Autogenerated static field getter
// Get static field: static System.String JapaneseLangName
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_JapaneseLangName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_JapaneseLangName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "JapaneseLangName"));
}
// Autogenerated static field setter
// Set static field: static System.String JapaneseLangName
void System::Globalization::DateTimeFormatInfo::_set_JapaneseLangName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_JapaneseLangName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "JapaneseLangName", value));
}
// Autogenerated static field getter
// Get static field: static System.String EnglishLangName
::Il2CppString* System::Globalization::DateTimeFormatInfo::_get_EnglishLangName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_EnglishLangName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Globalization", "DateTimeFormatInfo", "EnglishLangName"));
}
// Autogenerated static field setter
// Set static field: static System.String EnglishLangName
void System::Globalization::DateTimeFormatInfo::_set_EnglishLangName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_EnglishLangName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "EnglishLangName", value));
}
// Autogenerated static field getter
// Get static field: static private System.Globalization.DateTimeFormatInfo s_jajpDTFI
System::Globalization::DateTimeFormatInfo* System::Globalization::DateTimeFormatInfo::_get_s_jajpDTFI() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_s_jajpDTFI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeFormatInfo*>("System.Globalization", "DateTimeFormatInfo", "s_jajpDTFI"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.DateTimeFormatInfo s_jajpDTFI
void System::Globalization::DateTimeFormatInfo::_set_s_jajpDTFI(System::Globalization::DateTimeFormatInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_s_jajpDTFI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "s_jajpDTFI", value));
}
// Autogenerated static field getter
// Get static field: static private System.Globalization.DateTimeFormatInfo s_zhtwDTFI
System::Globalization::DateTimeFormatInfo* System::Globalization::DateTimeFormatInfo::_get_s_zhtwDTFI() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_get_s_zhtwDTFI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::DateTimeFormatInfo*>("System.Globalization", "DateTimeFormatInfo", "s_zhtwDTFI"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.DateTimeFormatInfo s_zhtwDTFI
void System::Globalization::DateTimeFormatInfo::_set_s_zhtwDTFI(System::Globalization::DateTimeFormatInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::_set_s_zhtwDTFI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfo", "s_zhtwDTFI", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CultureData m_cultureData
System::Globalization::CultureData*& System::Globalization::DateTimeFormatInfo::dyn_m_cultureData() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_m_cultureData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cultureData"))->offset;
  return *reinterpret_cast<System::Globalization::CultureData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String m_name
::Il2CppString*& System::Globalization::DateTimeFormatInfo::dyn_m_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_m_name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_name"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_langName
::Il2CppString*& System::Globalization::DateTimeFormatInfo::dyn_m_langName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_m_langName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_langName"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CompareInfo m_compareInfo
System::Globalization::CompareInfo*& System::Globalization::DateTimeFormatInfo::dyn_m_compareInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_m_compareInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_compareInfo"))->offset;
  return *reinterpret_cast<System::Globalization::CompareInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.CultureInfo m_cultureInfo
System::Globalization::CultureInfo*& System::Globalization::DateTimeFormatInfo::dyn_m_cultureInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_m_cultureInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_cultureInfo"))->offset;
  return *reinterpret_cast<System::Globalization::CultureInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String amDesignator
::Il2CppString*& System::Globalization::DateTimeFormatInfo::dyn_amDesignator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_amDesignator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "amDesignator"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String pmDesignator
::Il2CppString*& System::Globalization::DateTimeFormatInfo::dyn_pmDesignator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_pmDesignator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pmDesignator"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String dateSeparator
::Il2CppString*& System::Globalization::DateTimeFormatInfo::dyn_dateSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_dateSeparator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dateSeparator"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String generalShortTimePattern
::Il2CppString*& System::Globalization::DateTimeFormatInfo::dyn_generalShortTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_generalShortTimePattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "generalShortTimePattern"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String generalLongTimePattern
::Il2CppString*& System::Globalization::DateTimeFormatInfo::dyn_generalLongTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_generalLongTimePattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "generalLongTimePattern"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String timeSeparator
::Il2CppString*& System::Globalization::DateTimeFormatInfo::dyn_timeSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_timeSeparator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeSeparator"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String monthDayPattern
::Il2CppString*& System::Globalization::DateTimeFormatInfo::dyn_monthDayPattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_monthDayPattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "monthDayPattern"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String dateTimeOffsetPattern
::Il2CppString*& System::Globalization::DateTimeFormatInfo::dyn_dateTimeOffsetPattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_dateTimeOffsetPattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dateTimeOffsetPattern"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Globalization.Calendar calendar
System::Globalization::Calendar*& System::Globalization::DateTimeFormatInfo::dyn_calendar() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_calendar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calendar"))->offset;
  return *reinterpret_cast<System::Globalization::Calendar**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 firstDayOfWeek
int& System::Globalization::DateTimeFormatInfo::dyn_firstDayOfWeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_firstDayOfWeek");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstDayOfWeek"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 calendarWeekRule
int& System::Globalization::DateTimeFormatInfo::dyn_calendarWeekRule() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_calendarWeekRule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calendarWeekRule"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String fullDateTimePattern
::Il2CppString*& System::Globalization::DateTimeFormatInfo::dyn_fullDateTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_fullDateTimePattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fullDateTimePattern"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] abbreviatedDayNames
::ArrayW<::Il2CppString*>& System::Globalization::DateTimeFormatInfo::dyn_abbreviatedDayNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_abbreviatedDayNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "abbreviatedDayNames"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] m_superShortDayNames
::ArrayW<::Il2CppString*>& System::Globalization::DateTimeFormatInfo::dyn_m_superShortDayNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_m_superShortDayNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_superShortDayNames"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] dayNames
::ArrayW<::Il2CppString*>& System::Globalization::DateTimeFormatInfo::dyn_dayNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_dayNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dayNames"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] abbreviatedMonthNames
::ArrayW<::Il2CppString*>& System::Globalization::DateTimeFormatInfo::dyn_abbreviatedMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_abbreviatedMonthNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "abbreviatedMonthNames"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] monthNames
::ArrayW<::Il2CppString*>& System::Globalization::DateTimeFormatInfo::dyn_monthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_monthNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "monthNames"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] genitiveMonthNames
::ArrayW<::Il2CppString*>& System::Globalization::DateTimeFormatInfo::dyn_genitiveMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_genitiveMonthNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "genitiveMonthNames"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] m_genitiveAbbreviatedMonthNames
::ArrayW<::Il2CppString*>& System::Globalization::DateTimeFormatInfo::dyn_m_genitiveAbbreviatedMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_m_genitiveAbbreviatedMonthNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_genitiveAbbreviatedMonthNames"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] leapYearMonthNames
::ArrayW<::Il2CppString*>& System::Globalization::DateTimeFormatInfo::dyn_leapYearMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_leapYearMonthNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leapYearMonthNames"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String longDatePattern
::Il2CppString*& System::Globalization::DateTimeFormatInfo::dyn_longDatePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_longDatePattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "longDatePattern"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String shortDatePattern
::Il2CppString*& System::Globalization::DateTimeFormatInfo::dyn_shortDatePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_shortDatePattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shortDatePattern"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String yearMonthPattern
::Il2CppString*& System::Globalization::DateTimeFormatInfo::dyn_yearMonthPattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_yearMonthPattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "yearMonthPattern"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String longTimePattern
::Il2CppString*& System::Globalization::DateTimeFormatInfo::dyn_longTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_longTimePattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "longTimePattern"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String shortTimePattern
::Il2CppString*& System::Globalization::DateTimeFormatInfo::dyn_shortTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_shortTimePattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shortTimePattern"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] allYearMonthPatterns
::ArrayW<::Il2CppString*>& System::Globalization::DateTimeFormatInfo::dyn_allYearMonthPatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_allYearMonthPatterns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allYearMonthPatterns"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] allShortDatePatterns
::ArrayW<::Il2CppString*>& System::Globalization::DateTimeFormatInfo::dyn_allShortDatePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_allShortDatePatterns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allShortDatePatterns"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] allLongDatePatterns
::ArrayW<::Il2CppString*>& System::Globalization::DateTimeFormatInfo::dyn_allLongDatePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_allLongDatePatterns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allLongDatePatterns"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] allShortTimePatterns
::ArrayW<::Il2CppString*>& System::Globalization::DateTimeFormatInfo::dyn_allShortTimePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_allShortTimePatterns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allShortTimePatterns"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] allLongTimePatterns
::ArrayW<::Il2CppString*>& System::Globalization::DateTimeFormatInfo::dyn_allLongTimePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_allLongTimePatterns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allLongTimePatterns"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] m_eraNames
::ArrayW<::Il2CppString*>& System::Globalization::DateTimeFormatInfo::dyn_m_eraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_m_eraNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_eraNames"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] m_abbrevEraNames
::ArrayW<::Il2CppString*>& System::Globalization::DateTimeFormatInfo::dyn_m_abbrevEraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_m_abbrevEraNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_abbrevEraNames"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] m_abbrevEnglishEraNames
::ArrayW<::Il2CppString*>& System::Globalization::DateTimeFormatInfo::dyn_m_abbrevEnglishEraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_m_abbrevEnglishEraNames");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_abbrevEnglishEraNames"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32[] optionalCalendars
::ArrayW<int>& System::Globalization::DateTimeFormatInfo::dyn_optionalCalendars() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_optionalCalendars");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "optionalCalendars"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean m_isReadOnly
bool& System::Globalization::DateTimeFormatInfo::dyn_m_isReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_m_isReadOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isReadOnly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Globalization.DateTimeFormatFlags formatFlags
System::Globalization::DateTimeFormatFlags& System::Globalization::DateTimeFormatInfo::dyn_formatFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_formatFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "formatFlags"))->offset;
  return *reinterpret_cast<System::Globalization::DateTimeFormatFlags*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 CultureID
int& System::Globalization::DateTimeFormatInfo::dyn_CultureID() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_CultureID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CultureID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_useUserOverride
bool& System::Globalization::DateTimeFormatInfo::dyn_m_useUserOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_m_useUserOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_useUserOverride"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean bUseCalendarInfo
bool& System::Globalization::DateTimeFormatInfo::dyn_bUseCalendarInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_bUseCalendarInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bUseCalendarInfo"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 nDataItem
int& System::Globalization::DateTimeFormatInfo::dyn_nDataItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_nDataItem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nDataItem"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean m_isDefaultCalendar
bool& System::Globalization::DateTimeFormatInfo::dyn_m_isDefaultCalendar() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_m_isDefaultCalendar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_isDefaultCalendar"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String[] m_dateWords
::ArrayW<::Il2CppString*>& System::Globalization::DateTimeFormatInfo::dyn_m_dateWords() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_m_dateWords");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_dateWords"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppString*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_fullTimeSpanPositivePattern
::Il2CppString*& System::Globalization::DateTimeFormatInfo::dyn_m_fullTimeSpanPositivePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_m_fullTimeSpanPositivePattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fullTimeSpanPositivePattern"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String m_fullTimeSpanNegativePattern
::Il2CppString*& System::Globalization::DateTimeFormatInfo::dyn_m_fullTimeSpanNegativePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_m_fullTimeSpanNegativePattern");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_fullTimeSpanNegativePattern"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.TokenHashValue[] m_dtfiTokenHash
::ArrayW<System::Globalization::TokenHashValue*>& System::Globalization::DateTimeFormatInfo::dyn_m_dtfiTokenHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::dyn_m_dtfiTokenHash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_dtfiTokenHash"))->offset;
  return *reinterpret_cast<::ArrayW<System::Globalization::TokenHashValue*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_CultureName
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_CultureName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_CultureName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CultureName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_Culture
System::Globalization::CultureInfo* System::Globalization::DateTimeFormatInfo::get_Culture() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_Culture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Culture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::CultureInfo*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_LanguageName
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_LanguageName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_LanguageName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LanguageName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_InvariantInfo
System::Globalization::DateTimeFormatInfo* System::Globalization::DateTimeFormatInfo::get_InvariantInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_InvariantInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "get_InvariantInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::DateTimeFormatInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_CurrentInfo
System::Globalization::DateTimeFormatInfo* System::Globalization::DateTimeFormatInfo::get_CurrentInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_CurrentInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "get_CurrentInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::DateTimeFormatInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_AMDesignator
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_AMDesignator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_AMDesignator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AMDesignator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_Calendar
System::Globalization::Calendar* System::Globalization::DateTimeFormatInfo::get_Calendar() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_Calendar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Calendar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::Calendar*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.set_Calendar
void System::Globalization::DateTimeFormatInfo::set_Calendar(System::Globalization::Calendar* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::set_Calendar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Calendar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_OptionalCalendars
::ArrayW<int> System::Globalization::DateTimeFormatInfo::get_OptionalCalendars() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_OptionalCalendars");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OptionalCalendars", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<int>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_EraNames
::ArrayW<::Il2CppString*> System::Globalization::DateTimeFormatInfo::get_EraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_EraNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EraNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_AbbreviatedEraNames
::ArrayW<::Il2CppString*> System::Globalization::DateTimeFormatInfo::get_AbbreviatedEraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_AbbreviatedEraNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AbbreviatedEraNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_AbbreviatedEnglishEraNames
::ArrayW<::Il2CppString*> System::Globalization::DateTimeFormatInfo::get_AbbreviatedEnglishEraNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_AbbreviatedEnglishEraNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AbbreviatedEnglishEraNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_DateSeparator
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_DateSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_DateSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DateSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_FullDateTimePattern
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_FullDateTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_FullDateTimePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FullDateTimePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_LongDatePattern
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_LongDatePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_LongDatePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LongDatePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.set_LongDatePattern
void System::Globalization::DateTimeFormatInfo::set_LongDatePattern(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::set_LongDatePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LongDatePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_LongTimePattern
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_LongTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_LongTimePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LongTimePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.set_LongTimePattern
void System::Globalization::DateTimeFormatInfo::set_LongTimePattern(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::set_LongTimePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LongTimePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_MonthDayPattern
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_MonthDayPattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_MonthDayPattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MonthDayPattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_PMDesignator
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_PMDesignator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_PMDesignator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PMDesignator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_RFC1123Pattern
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_RFC1123Pattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_RFC1123Pattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RFC1123Pattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_ShortDatePattern
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_ShortDatePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_ShortDatePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ShortDatePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.set_ShortDatePattern
void System::Globalization::DateTimeFormatInfo::set_ShortDatePattern(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::set_ShortDatePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ShortDatePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_ShortTimePattern
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_ShortTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_ShortTimePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ShortTimePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.set_ShortTimePattern
void System::Globalization::DateTimeFormatInfo::set_ShortTimePattern(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::set_ShortTimePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ShortTimePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_SortableDateTimePattern
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_SortableDateTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_SortableDateTimePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SortableDateTimePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_GeneralShortTimePattern
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_GeneralShortTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_GeneralShortTimePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GeneralShortTimePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_GeneralLongTimePattern
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_GeneralLongTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_GeneralLongTimePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GeneralLongTimePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_DateTimeOffsetPattern
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_DateTimeOffsetPattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_DateTimeOffsetPattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DateTimeOffsetPattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_TimeSeparator
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_TimeSeparator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_TimeSeparator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TimeSeparator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_UniversalSortableDateTimePattern
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_UniversalSortableDateTimePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_UniversalSortableDateTimePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UniversalSortableDateTimePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_YearMonthPattern
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_YearMonthPattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_YearMonthPattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_YearMonthPattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.set_YearMonthPattern
void System::Globalization::DateTimeFormatInfo::set_YearMonthPattern(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::set_YearMonthPattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_YearMonthPattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, value);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_AbbreviatedDayNames
::ArrayW<::Il2CppString*> System::Globalization::DateTimeFormatInfo::get_AbbreviatedDayNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_AbbreviatedDayNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AbbreviatedDayNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_DayNames
::ArrayW<::Il2CppString*> System::Globalization::DateTimeFormatInfo::get_DayNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_DayNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DayNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_AbbreviatedMonthNames
::ArrayW<::Il2CppString*> System::Globalization::DateTimeFormatInfo::get_AbbreviatedMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_AbbreviatedMonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AbbreviatedMonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_MonthNames
::ArrayW<::Il2CppString*> System::Globalization::DateTimeFormatInfo::get_MonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_MonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_HasSpacesInMonthNames
bool System::Globalization::DateTimeFormatInfo::get_HasSpacesInMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_HasSpacesInMonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasSpacesInMonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_HasSpacesInDayNames
bool System::Globalization::DateTimeFormatInfo::get_HasSpacesInDayNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_HasSpacesInDayNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasSpacesInDayNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_AllYearMonthPatterns
::ArrayW<::Il2CppString*> System::Globalization::DateTimeFormatInfo::get_AllYearMonthPatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_AllYearMonthPatterns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllYearMonthPatterns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_AllShortDatePatterns
::ArrayW<::Il2CppString*> System::Globalization::DateTimeFormatInfo::get_AllShortDatePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_AllShortDatePatterns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllShortDatePatterns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_AllShortTimePatterns
::ArrayW<::Il2CppString*> System::Globalization::DateTimeFormatInfo::get_AllShortTimePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_AllShortTimePatterns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllShortTimePatterns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_AllLongDatePatterns
::ArrayW<::Il2CppString*> System::Globalization::DateTimeFormatInfo::get_AllLongDatePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_AllLongDatePatterns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllLongDatePatterns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_AllLongTimePatterns
::ArrayW<::Il2CppString*> System::Globalization::DateTimeFormatInfo::get_AllLongTimePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_AllLongTimePatterns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllLongTimePatterns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_UnclonedYearMonthPatterns
::ArrayW<::Il2CppString*> System::Globalization::DateTimeFormatInfo::get_UnclonedYearMonthPatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_UnclonedYearMonthPatterns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnclonedYearMonthPatterns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_UnclonedShortDatePatterns
::ArrayW<::Il2CppString*> System::Globalization::DateTimeFormatInfo::get_UnclonedShortDatePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_UnclonedShortDatePatterns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnclonedShortDatePatterns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_UnclonedLongDatePatterns
::ArrayW<::Il2CppString*> System::Globalization::DateTimeFormatInfo::get_UnclonedLongDatePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_UnclonedLongDatePatterns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnclonedLongDatePatterns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_UnclonedShortTimePatterns
::ArrayW<::Il2CppString*> System::Globalization::DateTimeFormatInfo::get_UnclonedShortTimePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_UnclonedShortTimePatterns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnclonedShortTimePatterns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_UnclonedLongTimePatterns
::ArrayW<::Il2CppString*> System::Globalization::DateTimeFormatInfo::get_UnclonedLongTimePatterns() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_UnclonedLongTimePatterns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnclonedLongTimePatterns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_IsReadOnly
bool System::Globalization::DateTimeFormatInfo::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_IsReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_MonthGenitiveNames
::ArrayW<::Il2CppString*> System::Globalization::DateTimeFormatInfo::get_MonthGenitiveNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_MonthGenitiveNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MonthGenitiveNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_FullTimeSpanPositivePattern
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_FullTimeSpanPositivePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_FullTimeSpanPositivePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FullTimeSpanPositivePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_FullTimeSpanNegativePattern
::Il2CppString* System::Globalization::DateTimeFormatInfo::get_FullTimeSpanNegativePattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_FullTimeSpanNegativePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FullTimeSpanNegativePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_CompareInfo
System::Globalization::CompareInfo* System::Globalization::DateTimeFormatInfo::get_CompareInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_CompareInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompareInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::CompareInfo*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_FormatFlags
System::Globalization::DateTimeFormatFlags System::Globalization::DateTimeFormatInfo::get_FormatFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_FormatFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FormatFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::DateTimeFormatFlags, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_HasForceTwoDigitYears
bool System::Globalization::DateTimeFormatInfo::get_HasForceTwoDigitYears() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_HasForceTwoDigitYears");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasForceTwoDigitYears", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.get_HasYearMonthAdjustment
bool System::Globalization::DateTimeFormatInfo::get_HasYearMonthAdjustment() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::get_HasYearMonthAdjustment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasYearMonthAdjustment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo..cctor
void System::Globalization::DateTimeFormatInfo::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.InitPreferExistingTokens
bool System::Globalization::DateTimeFormatInfo::InitPreferExistingTokens() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::InitPreferExistingTokens");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "InitPreferExistingTokens", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.internalGetAbbreviatedDayOfWeekNames
::ArrayW<::Il2CppString*> System::Globalization::DateTimeFormatInfo::internalGetAbbreviatedDayOfWeekNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::internalGetAbbreviatedDayOfWeekNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internalGetAbbreviatedDayOfWeekNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.internalGetDayOfWeekNames
::ArrayW<::Il2CppString*> System::Globalization::DateTimeFormatInfo::internalGetDayOfWeekNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::internalGetDayOfWeekNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internalGetDayOfWeekNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.internalGetAbbreviatedMonthNames
::ArrayW<::Il2CppString*> System::Globalization::DateTimeFormatInfo::internalGetAbbreviatedMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::internalGetAbbreviatedMonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internalGetAbbreviatedMonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.internalGetMonthNames
::ArrayW<::Il2CppString*> System::Globalization::DateTimeFormatInfo::internalGetMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::internalGetMonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internalGetMonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.InitializeOverridableProperties
void System::Globalization::DateTimeFormatInfo::InitializeOverridableProperties(System::Globalization::CultureData* cultureData, int calendarID) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::InitializeOverridableProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeOverridableProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cultureData), ::il2cpp_utils::ExtractType(calendarID)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, cultureData, calendarID);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.OnDeserialized
void System::Globalization::DateTimeFormatInfo::OnDeserialized(System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::OnDeserialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, ctx);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.OnSerializing
void System::Globalization::DateTimeFormatInfo::OnSerializing(System::Runtime::Serialization::StreamingContext ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::OnSerializing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnSerializing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, ctx);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetInstance
System::Globalization::DateTimeFormatInfo* System::Globalization::DateTimeFormatInfo::GetInstance(System::IFormatProvider* provider) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::GetInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "GetInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(provider)})));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::DateTimeFormatInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, provider);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetFormat
::Il2CppObject* System::Globalization::DateTimeFormatInfo::GetFormat(System::Type* formatType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::GetFormat");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(formatType)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method, formatType);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.Clone
::Il2CppObject* System::Globalization::DateTimeFormatInfo::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetEraName
::Il2CppString* System::Globalization::DateTimeFormatInfo::GetEraName(int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::GetEraName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEraName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(era)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method, era);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName
::Il2CppString* System::Globalization::DateTimeFormatInfo::GetAbbreviatedEraName(int era) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::GetAbbreviatedEraName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAbbreviatedEraName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(era)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method, era);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.internalGetMonthName
::Il2CppString* System::Globalization::DateTimeFormatInfo::internalGetMonthName(int month, System::Globalization::MonthNameStyles style, bool abbreviated) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::internalGetMonthName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internalGetMonthName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(abbreviated)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method, month, style, abbreviated);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.internalGetGenitiveMonthNames
::ArrayW<::Il2CppString*> System::Globalization::DateTimeFormatInfo::internalGetGenitiveMonthNames(bool abbreviated) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::internalGetGenitiveMonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internalGetGenitiveMonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(abbreviated)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(___instance_arg, ___internal__method, abbreviated);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.internalGetLeapYearMonthNames
::ArrayW<::Il2CppString*> System::Globalization::DateTimeFormatInfo::internalGetLeapYearMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::internalGetLeapYearMonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "internalGetLeapYearMonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetAbbreviatedDayName
::Il2CppString* System::Globalization::DateTimeFormatInfo::GetAbbreviatedDayName(System::DayOfWeek dayofweek) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::GetAbbreviatedDayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAbbreviatedDayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dayofweek)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method, dayofweek);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetCombinedPatterns
::ArrayW<::Il2CppString*> System::Globalization::DateTimeFormatInfo::GetCombinedPatterns(::ArrayW<::Il2CppString*> patterns1, ::ArrayW<::Il2CppString*> patterns2, ::Il2CppString* connectString) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::GetCombinedPatterns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "GetCombinedPatterns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(patterns1), ::il2cpp_utils::ExtractType(patterns2), ::il2cpp_utils::ExtractType(connectString)})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, patterns1, patterns2, connectString);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetAllDateTimePatterns
::ArrayW<::Il2CppString*> System::Globalization::DateTimeFormatInfo::GetAllDateTimePatterns(::Il2CppChar format) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::GetAllDateTimePatterns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllDateTimePatterns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(format)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(___instance_arg, ___internal__method, format);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetDayName
::Il2CppString* System::Globalization::DateTimeFormatInfo::GetDayName(System::DayOfWeek dayofweek) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::GetDayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dayofweek)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method, dayofweek);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetAbbreviatedMonthName
::Il2CppString* System::Globalization::DateTimeFormatInfo::GetAbbreviatedMonthName(int month) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::GetAbbreviatedMonthName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAbbreviatedMonthName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(month)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method, month);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetMonthName
::Il2CppString* System::Globalization::DateTimeFormatInfo::GetMonthName(int month) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::GetMonthName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMonthName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(month)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(___instance_arg, ___internal__method, month);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetMergedPatterns
::ArrayW<::Il2CppString*> System::Globalization::DateTimeFormatInfo::GetMergedPatterns(::ArrayW<::Il2CppString*> patterns, ::Il2CppString* defaultPattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::GetMergedPatterns");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "GetMergedPatterns", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(patterns), ::il2cpp_utils::ExtractType(defaultPattern)})));
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, patterns, defaultPattern);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.ValidateStyles
void System::Globalization::DateTimeFormatInfo::ValidateStyles(System::Globalization::DateTimeStyles style, ::Il2CppString* parameterName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::ValidateStyles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "ValidateStyles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(style), ::il2cpp_utils::ExtractType(parameterName)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, style, parameterName);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.YearMonthAdjustment
bool System::Globalization::DateTimeFormatInfo::YearMonthAdjustment(ByRef<int> year, ByRef<int> month, bool parsedMonthName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::YearMonthAdjustment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "YearMonthAdjustment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(year), ::il2cpp_utils::ExtractType(month), ::il2cpp_utils::ExtractType(parsedMonthName)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, byref(year), byref(month), parsedMonthName);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetJapaneseCalendarDTFI
System::Globalization::DateTimeFormatInfo* System::Globalization::DateTimeFormatInfo::GetJapaneseCalendarDTFI() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::GetJapaneseCalendarDTFI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "GetJapaneseCalendarDTFI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::DateTimeFormatInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.GetTaiwanCalendarDTFI
System::Globalization::DateTimeFormatInfo* System::Globalization::DateTimeFormatInfo::GetTaiwanCalendarDTFI() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::GetTaiwanCalendarDTFI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "GetTaiwanCalendarDTFI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::DateTimeFormatInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.ClearTokenHashTable
void System::Globalization::DateTimeFormatInfo::ClearTokenHashTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::ClearTokenHashTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearTokenHashTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.CreateTokenHashTable
::ArrayW<System::Globalization::TokenHashValue*> System::Globalization::DateTimeFormatInfo::CreateTokenHashTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::CreateTokenHashTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateTokenHashTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<System::Globalization::TokenHashValue*>, false>(___instance_arg, ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.AddMonthNames
void System::Globalization::DateTimeFormatInfo::AddMonthNames(::ArrayW<System::Globalization::TokenHashValue*> temp, ::Il2CppString* monthPostfix) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::AddMonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddMonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(temp), ::il2cpp_utils::ExtractType(monthPostfix)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, temp, monthPostfix);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.TryParseHebrewNumber
bool System::Globalization::DateTimeFormatInfo::TryParseHebrewNumber(ByRef<System::__DTString> str, ByRef<bool> badFormat, ByRef<int> number) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::TryParseHebrewNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "TryParseHebrewNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, byref(str), byref(badFormat), byref(number));
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.IsHebrewChar
bool System::Globalization::DateTimeFormatInfo::IsHebrewChar(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::IsHebrewChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfo", "IsHebrewChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ch)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.Tokenize
bool System::Globalization::DateTimeFormatInfo::Tokenize(System::TokenType TokenMask, ByRef<System::TokenType> tokenType, ByRef<int> tokenValue, ByRef<System::__DTString> str) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::Tokenize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Tokenize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(TokenMask), ::il2cpp_utils::ExtractIndependentType<System::TokenType&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(str)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<bool, false>(___instance_arg, ___internal__method, TokenMask, byref(tokenType), byref(tokenValue), byref(str));
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.InsertAtCurrentHashNode
void System::Globalization::DateTimeFormatInfo::InsertAtCurrentHashNode(::ArrayW<System::Globalization::TokenHashValue*> hashTable, ::Il2CppString* str, ::Il2CppChar ch, System::TokenType tokenType, int tokenValue, int pos, int hashcode, int hashProbe) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::InsertAtCurrentHashNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertAtCurrentHashNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashTable), ::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(tokenType), ::il2cpp_utils::ExtractType(tokenValue), ::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(hashcode), ::il2cpp_utils::ExtractType(hashProbe)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, hashTable, str, ch, tokenType, tokenValue, pos, hashcode, hashProbe);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfo.InsertHash
void System::Globalization::DateTimeFormatInfo::InsertHash(::ArrayW<System::Globalization::TokenHashValue*> hashTable, ::Il2CppString* str, System::TokenType tokenType, int tokenValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfo::InsertHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InsertHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(hashTable), ::il2cpp_utils::ExtractType(str), ::il2cpp_utils::ExtractType(tokenType), ::il2cpp_utils::ExtractType(tokenValue)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, hashTable, str, tokenType, tokenValue);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.TokenHashValue
#include "System/Globalization/TokenHashValue.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String tokenString
::Il2CppString*& System::Globalization::TokenHashValue::dyn_tokenString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TokenHashValue::dyn_tokenString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tokenString"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.TokenType tokenType
System::TokenType& System::Globalization::TokenHashValue::dyn_tokenType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TokenHashValue::dyn_tokenType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tokenType"))->offset;
  return *reinterpret_cast<System::TokenType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 tokenValue
int& System::Globalization::TokenHashValue::dyn_tokenValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::TokenHashValue::dyn_tokenValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tokenValue"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.FORMATFLAGS
#include "System/Globalization/FORMATFLAGS.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.FORMATFLAGS None
System::Globalization::FORMATFLAGS System::Globalization::FORMATFLAGS::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FORMATFLAGS::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::FORMATFLAGS>("System.Globalization", "FORMATFLAGS", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.FORMATFLAGS None
void System::Globalization::FORMATFLAGS::_set_None(System::Globalization::FORMATFLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FORMATFLAGS::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FORMATFLAGS", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.FORMATFLAGS UseGenitiveMonth
System::Globalization::FORMATFLAGS System::Globalization::FORMATFLAGS::_get_UseGenitiveMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FORMATFLAGS::_get_UseGenitiveMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::FORMATFLAGS>("System.Globalization", "FORMATFLAGS", "UseGenitiveMonth"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.FORMATFLAGS UseGenitiveMonth
void System::Globalization::FORMATFLAGS::_set_UseGenitiveMonth(System::Globalization::FORMATFLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FORMATFLAGS::_set_UseGenitiveMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FORMATFLAGS", "UseGenitiveMonth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.FORMATFLAGS UseLeapYearMonth
System::Globalization::FORMATFLAGS System::Globalization::FORMATFLAGS::_get_UseLeapYearMonth() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FORMATFLAGS::_get_UseLeapYearMonth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::FORMATFLAGS>("System.Globalization", "FORMATFLAGS", "UseLeapYearMonth"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.FORMATFLAGS UseLeapYearMonth
void System::Globalization::FORMATFLAGS::_set_UseLeapYearMonth(System::Globalization::FORMATFLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FORMATFLAGS::_set_UseLeapYearMonth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FORMATFLAGS", "UseLeapYearMonth", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.FORMATFLAGS UseSpacesInMonthNames
System::Globalization::FORMATFLAGS System::Globalization::FORMATFLAGS::_get_UseSpacesInMonthNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FORMATFLAGS::_get_UseSpacesInMonthNames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::FORMATFLAGS>("System.Globalization", "FORMATFLAGS", "UseSpacesInMonthNames"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.FORMATFLAGS UseSpacesInMonthNames
void System::Globalization::FORMATFLAGS::_set_UseSpacesInMonthNames(System::Globalization::FORMATFLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FORMATFLAGS::_set_UseSpacesInMonthNames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FORMATFLAGS", "UseSpacesInMonthNames", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.FORMATFLAGS UseHebrewParsing
System::Globalization::FORMATFLAGS System::Globalization::FORMATFLAGS::_get_UseHebrewParsing() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FORMATFLAGS::_get_UseHebrewParsing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::FORMATFLAGS>("System.Globalization", "FORMATFLAGS", "UseHebrewParsing"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.FORMATFLAGS UseHebrewParsing
void System::Globalization::FORMATFLAGS::_set_UseHebrewParsing(System::Globalization::FORMATFLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FORMATFLAGS::_set_UseHebrewParsing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FORMATFLAGS", "UseHebrewParsing", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.FORMATFLAGS UseSpacesInDayNames
System::Globalization::FORMATFLAGS System::Globalization::FORMATFLAGS::_get_UseSpacesInDayNames() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FORMATFLAGS::_get_UseSpacesInDayNames");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::FORMATFLAGS>("System.Globalization", "FORMATFLAGS", "UseSpacesInDayNames"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.FORMATFLAGS UseSpacesInDayNames
void System::Globalization::FORMATFLAGS::_set_UseSpacesInDayNames(System::Globalization::FORMATFLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FORMATFLAGS::_set_UseSpacesInDayNames");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FORMATFLAGS", "UseSpacesInDayNames", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.FORMATFLAGS UseDigitPrefixInTokens
System::Globalization::FORMATFLAGS System::Globalization::FORMATFLAGS::_get_UseDigitPrefixInTokens() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FORMATFLAGS::_get_UseDigitPrefixInTokens");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::FORMATFLAGS>("System.Globalization", "FORMATFLAGS", "UseDigitPrefixInTokens"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.FORMATFLAGS UseDigitPrefixInTokens
void System::Globalization::FORMATFLAGS::_set_UseDigitPrefixInTokens(System::Globalization::FORMATFLAGS value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FORMATFLAGS::_set_UseDigitPrefixInTokens");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "FORMATFLAGS", "UseDigitPrefixInTokens", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& System::Globalization::FORMATFLAGS::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::FORMATFLAGS::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Globalization.CalendarId
#include "System/Globalization/CalendarId.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId GREGORIAN
System::Globalization::CalendarId System::Globalization::CalendarId::_get_GREGORIAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_GREGORIAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "GREGORIAN"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId GREGORIAN
void System::Globalization::CalendarId::_set_GREGORIAN(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_GREGORIAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "GREGORIAN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId GREGORIAN_US
System::Globalization::CalendarId System::Globalization::CalendarId::_get_GREGORIAN_US() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_GREGORIAN_US");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "GREGORIAN_US"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId GREGORIAN_US
void System::Globalization::CalendarId::_set_GREGORIAN_US(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_GREGORIAN_US");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "GREGORIAN_US", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId JAPAN
System::Globalization::CalendarId System::Globalization::CalendarId::_get_JAPAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_JAPAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "JAPAN"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId JAPAN
void System::Globalization::CalendarId::_set_JAPAN(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_JAPAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "JAPAN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId TAIWAN
System::Globalization::CalendarId System::Globalization::CalendarId::_get_TAIWAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_TAIWAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "TAIWAN"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId TAIWAN
void System::Globalization::CalendarId::_set_TAIWAN(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_TAIWAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "TAIWAN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId KOREA
System::Globalization::CalendarId System::Globalization::CalendarId::_get_KOREA() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_KOREA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "KOREA"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId KOREA
void System::Globalization::CalendarId::_set_KOREA(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_KOREA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "KOREA", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId HIJRI
System::Globalization::CalendarId System::Globalization::CalendarId::_get_HIJRI() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_HIJRI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "HIJRI"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId HIJRI
void System::Globalization::CalendarId::_set_HIJRI(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_HIJRI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "HIJRI", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId THAI
System::Globalization::CalendarId System::Globalization::CalendarId::_get_THAI() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_THAI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "THAI"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId THAI
void System::Globalization::CalendarId::_set_THAI(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_THAI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "THAI", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId HEBREW
System::Globalization::CalendarId System::Globalization::CalendarId::_get_HEBREW() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_HEBREW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "HEBREW"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId HEBREW
void System::Globalization::CalendarId::_set_HEBREW(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_HEBREW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "HEBREW", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId GREGORIAN_ME_FRENCH
System::Globalization::CalendarId System::Globalization::CalendarId::_get_GREGORIAN_ME_FRENCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_GREGORIAN_ME_FRENCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "GREGORIAN_ME_FRENCH"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId GREGORIAN_ME_FRENCH
void System::Globalization::CalendarId::_set_GREGORIAN_ME_FRENCH(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_GREGORIAN_ME_FRENCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "GREGORIAN_ME_FRENCH", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId GREGORIAN_ARABIC
System::Globalization::CalendarId System::Globalization::CalendarId::_get_GREGORIAN_ARABIC() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_GREGORIAN_ARABIC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "GREGORIAN_ARABIC"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId GREGORIAN_ARABIC
void System::Globalization::CalendarId::_set_GREGORIAN_ARABIC(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_GREGORIAN_ARABIC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "GREGORIAN_ARABIC", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId GREGORIAN_XLIT_ENGLISH
System::Globalization::CalendarId System::Globalization::CalendarId::_get_GREGORIAN_XLIT_ENGLISH() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_GREGORIAN_XLIT_ENGLISH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "GREGORIAN_XLIT_ENGLISH"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId GREGORIAN_XLIT_ENGLISH
void System::Globalization::CalendarId::_set_GREGORIAN_XLIT_ENGLISH(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_GREGORIAN_XLIT_ENGLISH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "GREGORIAN_XLIT_ENGLISH", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId GREGORIAN_XLIT_FRENCH
System::Globalization::CalendarId System::Globalization::CalendarId::_get_GREGORIAN_XLIT_FRENCH() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_GREGORIAN_XLIT_FRENCH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "GREGORIAN_XLIT_FRENCH"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId GREGORIAN_XLIT_FRENCH
void System::Globalization::CalendarId::_set_GREGORIAN_XLIT_FRENCH(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_GREGORIAN_XLIT_FRENCH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "GREGORIAN_XLIT_FRENCH", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId JULIAN
System::Globalization::CalendarId System::Globalization::CalendarId::_get_JULIAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_JULIAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "JULIAN"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId JULIAN
void System::Globalization::CalendarId::_set_JULIAN(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_JULIAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "JULIAN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId JAPANESELUNISOLAR
System::Globalization::CalendarId System::Globalization::CalendarId::_get_JAPANESELUNISOLAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_JAPANESELUNISOLAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "JAPANESELUNISOLAR"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId JAPANESELUNISOLAR
void System::Globalization::CalendarId::_set_JAPANESELUNISOLAR(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_JAPANESELUNISOLAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "JAPANESELUNISOLAR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId CHINESELUNISOLAR
System::Globalization::CalendarId System::Globalization::CalendarId::_get_CHINESELUNISOLAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_CHINESELUNISOLAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "CHINESELUNISOLAR"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId CHINESELUNISOLAR
void System::Globalization::CalendarId::_set_CHINESELUNISOLAR(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_CHINESELUNISOLAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "CHINESELUNISOLAR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId SAKA
System::Globalization::CalendarId System::Globalization::CalendarId::_get_SAKA() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_SAKA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "SAKA"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId SAKA
void System::Globalization::CalendarId::_set_SAKA(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_SAKA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "SAKA", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId LUNAR_ETO_CHN
System::Globalization::CalendarId System::Globalization::CalendarId::_get_LUNAR_ETO_CHN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_LUNAR_ETO_CHN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "LUNAR_ETO_CHN"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId LUNAR_ETO_CHN
void System::Globalization::CalendarId::_set_LUNAR_ETO_CHN(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_LUNAR_ETO_CHN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "LUNAR_ETO_CHN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId LUNAR_ETO_KOR
System::Globalization::CalendarId System::Globalization::CalendarId::_get_LUNAR_ETO_KOR() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_LUNAR_ETO_KOR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "LUNAR_ETO_KOR"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId LUNAR_ETO_KOR
void System::Globalization::CalendarId::_set_LUNAR_ETO_KOR(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_LUNAR_ETO_KOR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "LUNAR_ETO_KOR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId LUNAR_ETO_ROKUYOU
System::Globalization::CalendarId System::Globalization::CalendarId::_get_LUNAR_ETO_ROKUYOU() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_LUNAR_ETO_ROKUYOU");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "LUNAR_ETO_ROKUYOU"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId LUNAR_ETO_ROKUYOU
void System::Globalization::CalendarId::_set_LUNAR_ETO_ROKUYOU(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_LUNAR_ETO_ROKUYOU");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "LUNAR_ETO_ROKUYOU", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId KOREANLUNISOLAR
System::Globalization::CalendarId System::Globalization::CalendarId::_get_KOREANLUNISOLAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_KOREANLUNISOLAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "KOREANLUNISOLAR"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId KOREANLUNISOLAR
void System::Globalization::CalendarId::_set_KOREANLUNISOLAR(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_KOREANLUNISOLAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "KOREANLUNISOLAR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId TAIWANLUNISOLAR
System::Globalization::CalendarId System::Globalization::CalendarId::_get_TAIWANLUNISOLAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_TAIWANLUNISOLAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "TAIWANLUNISOLAR"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId TAIWANLUNISOLAR
void System::Globalization::CalendarId::_set_TAIWANLUNISOLAR(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_TAIWANLUNISOLAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "TAIWANLUNISOLAR", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId PERSIAN
System::Globalization::CalendarId System::Globalization::CalendarId::_get_PERSIAN() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_PERSIAN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "PERSIAN"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId PERSIAN
void System::Globalization::CalendarId::_set_PERSIAN(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_PERSIAN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "PERSIAN", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId UMALQURA
System::Globalization::CalendarId System::Globalization::CalendarId::_get_UMALQURA() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_UMALQURA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "UMALQURA"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId UMALQURA
void System::Globalization::CalendarId::_set_UMALQURA(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_UMALQURA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "UMALQURA", value));
}
// Autogenerated static field getter
// Get static field: static public System.Globalization.CalendarId LAST_CALENDAR
System::Globalization::CalendarId System::Globalization::CalendarId::_get_LAST_CALENDAR() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_get_LAST_CALENDAR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Globalization::CalendarId>("System.Globalization", "CalendarId", "LAST_CALENDAR"));
}
// Autogenerated static field setter
// Set static field: static public System.Globalization.CalendarId LAST_CALENDAR
void System::Globalization::CalendarId::_set_LAST_CALENDAR(System::Globalization::CalendarId value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::_set_LAST_CALENDAR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "CalendarId", "LAST_CALENDAR", value));
}
// Autogenerated instance field getter
// Get instance field: public System.UInt16 value__
uint16_t& System::Globalization::CalendarId::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::CalendarId::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Globalization.DateTimeFormatInfoScanner
#include "System/Globalization/DateTimeFormatInfoScanner.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Globalization.DateTimeFormatInfo
#include "System/Globalization/DateTimeFormatInfo.hpp"
// Including type: System.Globalization.FORMATFLAGS
#include "System/Globalization/FORMATFLAGS.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.String> s_knownWords
System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* System::Globalization::DateTimeFormatInfoScanner::_get_s_knownWords() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::_get_s_knownWords");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>*>("System.Globalization", "DateTimeFormatInfoScanner", "s_knownWords")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.String> s_knownWords
void System::Globalization::DateTimeFormatInfoScanner::_set_s_knownWords(System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::_set_s_knownWords");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Globalization", "DateTimeFormatInfoScanner", "s_knownWords", value));
}
// Autogenerated instance field getter
// Get instance field: System.Collections.Generic.List`1<System.String> m_dateWords
System::Collections::Generic::List_1<::Il2CppString*>*& System::Globalization::DateTimeFormatInfoScanner::dyn_m_dateWords() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::dyn_m_dateWords");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_dateWords"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<::Il2CppString*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Globalization.DateTimeFormatInfoScanner/System.Globalization.FoundDatePattern m_ymdFlags
System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern& System::Globalization::DateTimeFormatInfoScanner::dyn_m_ymdFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::dyn_m_ymdFlags");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ymdFlags"))->offset;
  return *reinterpret_cast<System::Globalization::DateTimeFormatInfoScanner::FoundDatePattern*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.get_KnownWords
System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>* System::Globalization::DateTimeFormatInfoScanner::get_KnownWords() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::get_KnownWords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfoScanner", "get_KnownWords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::Dictionary_2<::Il2CppString*, ::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.SkipWhiteSpacesAndNonLetter
int System::Globalization::DateTimeFormatInfoScanner::SkipWhiteSpacesAndNonLetter(::Il2CppString* pattern, int currentIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::SkipWhiteSpacesAndNonLetter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfoScanner", "SkipWhiteSpacesAndNonLetter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern), ::il2cpp_utils::ExtractType(currentIndex)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pattern, currentIndex);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.AddDateWordOrPostfix
void System::Globalization::DateTimeFormatInfoScanner::AddDateWordOrPostfix(::Il2CppString* formatPostfix, ::Il2CppString* str) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::AddDateWordOrPostfix");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddDateWordOrPostfix", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(formatPostfix), ::il2cpp_utils::ExtractType(str)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, formatPostfix, str);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.AddDateWords
int System::Globalization::DateTimeFormatInfoScanner::AddDateWords(::Il2CppString* pattern, int index, ::Il2CppString* formatPostfix) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::AddDateWords");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddDateWords", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(formatPostfix)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<int, false>(___instance_arg, ___internal__method, pattern, index, formatPostfix);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.ScanRepeatChar
int System::Globalization::DateTimeFormatInfoScanner::ScanRepeatChar(::Il2CppString* pattern, ::Il2CppChar ch, int index, ByRef<int> count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::ScanRepeatChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfoScanner", "ScanRepeatChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern), ::il2cpp_utils::ExtractType(ch), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pattern, ch, index, byref(count));
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.AddIgnorableSymbols
void System::Globalization::DateTimeFormatInfoScanner::AddIgnorableSymbols(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::AddIgnorableSymbols");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddIgnorableSymbols", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, text);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.ScanDateWord
void System::Globalization::DateTimeFormatInfoScanner::ScanDateWord(::Il2CppString* pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::ScanDateWord");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScanDateWord", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pattern)})));
  auto ___instance_arg = this;
  ::il2cpp_utils::RunMethodThrow<void, false>(___instance_arg, ___internal__method, pattern);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.GetDateWordsOfDTFI
::ArrayW<::Il2CppString*> System::Globalization::DateTimeFormatInfoScanner::GetDateWordsOfDTFI(System::Globalization::DateTimeFormatInfo* dtfi) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::GetDateWordsOfDTFI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDateWordsOfDTFI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dtfi)})));
  auto ___instance_arg = this;
  return ::il2cpp_utils::RunMethodThrow<::ArrayW<::Il2CppString*>, false>(___instance_arg, ___internal__method, dtfi);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.GetFormatFlagGenitiveMonth
System::Globalization::FORMATFLAGS System::Globalization::DateTimeFormatInfoScanner::GetFormatFlagGenitiveMonth(::ArrayW<::Il2CppString*> monthNames, ::ArrayW<::Il2CppString*> genitveMonthNames, ::ArrayW<::Il2CppString*> abbrevMonthNames, ::ArrayW<::Il2CppString*> genetiveAbbrevMonthNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::GetFormatFlagGenitiveMonth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfoScanner", "GetFormatFlagGenitiveMonth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(monthNames), ::il2cpp_utils::ExtractType(genitveMonthNames), ::il2cpp_utils::ExtractType(abbrevMonthNames), ::il2cpp_utils::ExtractType(genetiveAbbrevMonthNames)})));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::FORMATFLAGS, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, monthNames, genitveMonthNames, abbrevMonthNames, genetiveAbbrevMonthNames);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.GetFormatFlagUseSpaceInMonthNames
System::Globalization::FORMATFLAGS System::Globalization::DateTimeFormatInfoScanner::GetFormatFlagUseSpaceInMonthNames(::ArrayW<::Il2CppString*> monthNames, ::ArrayW<::Il2CppString*> genitveMonthNames, ::ArrayW<::Il2CppString*> abbrevMonthNames, ::ArrayW<::Il2CppString*> genetiveAbbrevMonthNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::GetFormatFlagUseSpaceInMonthNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfoScanner", "GetFormatFlagUseSpaceInMonthNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(monthNames), ::il2cpp_utils::ExtractType(genitveMonthNames), ::il2cpp_utils::ExtractType(abbrevMonthNames), ::il2cpp_utils::ExtractType(genetiveAbbrevMonthNames)})));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::FORMATFLAGS, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, monthNames, genitveMonthNames, abbrevMonthNames, genetiveAbbrevMonthNames);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.GetFormatFlagUseSpaceInDayNames
System::Globalization::FORMATFLAGS System::Globalization::DateTimeFormatInfoScanner::GetFormatFlagUseSpaceInDayNames(::ArrayW<::Il2CppString*> dayNames, ::ArrayW<::Il2CppString*> abbrevDayNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::GetFormatFlagUseSpaceInDayNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfoScanner", "GetFormatFlagUseSpaceInDayNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dayNames), ::il2cpp_utils::ExtractType(abbrevDayNames)})));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::FORMATFLAGS, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dayNames, abbrevDayNames);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.GetFormatFlagUseHebrewCalendar
System::Globalization::FORMATFLAGS System::Globalization::DateTimeFormatInfoScanner::GetFormatFlagUseHebrewCalendar(int calID) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::GetFormatFlagUseHebrewCalendar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfoScanner", "GetFormatFlagUseHebrewCalendar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(calID)})));
  return ::il2cpp_utils::RunMethodThrow<System::Globalization::FORMATFLAGS, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, calID);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.EqualStringArrays
bool System::Globalization::DateTimeFormatInfoScanner::EqualStringArrays(::ArrayW<::Il2CppString*> array1, ::ArrayW<::Il2CppString*> array2) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::EqualStringArrays");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfoScanner", "EqualStringArrays", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array1), ::il2cpp_utils::ExtractType(array2)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array1, array2);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.ArrayElementsHaveSpace
bool System::Globalization::DateTimeFormatInfoScanner::ArrayElementsHaveSpace(::ArrayW<::Il2CppString*> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::ArrayElementsHaveSpace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfoScanner", "ArrayElementsHaveSpace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
// Autogenerated method: System.Globalization.DateTimeFormatInfoScanner.ArrayElementsBeginWithDigit
bool System::Globalization::DateTimeFormatInfoScanner::ArrayElementsBeginWithDigit(::ArrayW<::Il2CppString*> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Globalization::DateTimeFormatInfoScanner::ArrayElementsBeginWithDigit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Globalization", "DateTimeFormatInfoScanner", "ArrayElementsBeginWithDigit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array);
}
