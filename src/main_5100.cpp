// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.SoapServices
#include "System/Runtime/Remoting/SoapServices.hpp"
// Including type: System.Runtime.Remoting.SoapServices/TypeInfo
#include "System/Runtime/Remoting/SoapServices_TypeInfo.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable _xmlTypes
System::Collections::Hashtable* System::Runtime::Remoting::SoapServices::_get__xmlTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::SoapServices::_get__xmlTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Hashtable*>("System.Runtime.Remoting", "SoapServices", "_xmlTypes"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable _xmlTypes
void System::Runtime::Remoting::SoapServices::_set__xmlTypes(System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::SoapServices::_set__xmlTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting", "SoapServices", "_xmlTypes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable _xmlElements
System::Collections::Hashtable* System::Runtime::Remoting::SoapServices::_get__xmlElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::SoapServices::_get__xmlElements");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Hashtable*>("System.Runtime.Remoting", "SoapServices", "_xmlElements"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable _xmlElements
void System::Runtime::Remoting::SoapServices::_set__xmlElements(System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::SoapServices::_set__xmlElements");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting", "SoapServices", "_xmlElements", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable _soapActions
System::Collections::Hashtable* System::Runtime::Remoting::SoapServices::_get__soapActions() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::SoapServices::_get__soapActions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Hashtable*>("System.Runtime.Remoting", "SoapServices", "_soapActions"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable _soapActions
void System::Runtime::Remoting::SoapServices::_set__soapActions(System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::SoapServices::_set__soapActions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting", "SoapServices", "_soapActions", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable _soapActionsMethods
System::Collections::Hashtable* System::Runtime::Remoting::SoapServices::_get__soapActionsMethods() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::SoapServices::_get__soapActionsMethods");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Hashtable*>("System.Runtime.Remoting", "SoapServices", "_soapActionsMethods"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable _soapActionsMethods
void System::Runtime::Remoting::SoapServices::_set__soapActionsMethods(System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::SoapServices::_set__soapActionsMethods");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting", "SoapServices", "_soapActionsMethods", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable _typeInfos
System::Collections::Hashtable* System::Runtime::Remoting::SoapServices::_get__typeInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::SoapServices::_get__typeInfos");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Hashtable*>("System.Runtime.Remoting", "SoapServices", "_typeInfos"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable _typeInfos
void System::Runtime::Remoting::SoapServices::_set__typeInfos(System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::SoapServices::_set__typeInfos");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting", "SoapServices", "_typeInfos", value));
}
// Autogenerated method: System.Runtime.Remoting.SoapServices.get_XmlNsForClrTypeWithAssembly
::Il2CppString* System::Runtime::Remoting::SoapServices::get_XmlNsForClrTypeWithAssembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::SoapServices::get_XmlNsForClrTypeWithAssembly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "SoapServices", "get_XmlNsForClrTypeWithAssembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.SoapServices.get_XmlNsForClrTypeWithNs
::Il2CppString* System::Runtime::Remoting::SoapServices::get_XmlNsForClrTypeWithNs() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::SoapServices::get_XmlNsForClrTypeWithNs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "SoapServices", "get_XmlNsForClrTypeWithNs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.SoapServices.get_XmlNsForClrTypeWithNsAndAssembly
::Il2CppString* System::Runtime::Remoting::SoapServices::get_XmlNsForClrTypeWithNsAndAssembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::SoapServices::get_XmlNsForClrTypeWithNsAndAssembly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "SoapServices", "get_XmlNsForClrTypeWithNsAndAssembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.SoapServices.CodeXmlNamespaceForClrTypeNamespace
::Il2CppString* System::Runtime::Remoting::SoapServices::CodeXmlNamespaceForClrTypeNamespace(::Il2CppString* typeNamespace, ::Il2CppString* assemblyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::SoapServices::CodeXmlNamespaceForClrTypeNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "SoapServices", "CodeXmlNamespaceForClrTypeNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeNamespace), ::il2cpp_utils::ExtractType(assemblyName)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, typeNamespace, assemblyName);
}
// Autogenerated method: System.Runtime.Remoting.SoapServices.GetNameKey
::Il2CppString* System::Runtime::Remoting::SoapServices::GetNameKey(::Il2CppString* name, ::Il2CppString* namspace) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::SoapServices::GetNameKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "SoapServices", "GetNameKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(namspace)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, namspace);
}
// Autogenerated method: System.Runtime.Remoting.SoapServices.GetAssemblyName
::Il2CppString* System::Runtime::Remoting::SoapServices::GetAssemblyName(System::Reflection::MethodBase* mb) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::SoapServices::GetAssemblyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "SoapServices", "GetAssemblyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mb)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mb);
}
// Autogenerated method: System.Runtime.Remoting.SoapServices.GetXmlElementForInteropType
bool System::Runtime::Remoting::SoapServices::GetXmlElementForInteropType(System::Type* type, ::Il2CppString*& xmlElement, ::Il2CppString*& xmlNamespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::SoapServices::GetXmlElementForInteropType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "SoapServices", "GetXmlElementForInteropType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, xmlElement, xmlNamespace);
}
// Autogenerated method: System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodCall
::Il2CppString* System::Runtime::Remoting::SoapServices::GetXmlNamespaceForMethodCall(System::Reflection::MethodBase* mb) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::SoapServices::GetXmlNamespaceForMethodCall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "SoapServices", "GetXmlNamespaceForMethodCall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mb)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mb);
}
// Autogenerated method: System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodResponse
::Il2CppString* System::Runtime::Remoting::SoapServices::GetXmlNamespaceForMethodResponse(System::Reflection::MethodBase* mb) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::SoapServices::GetXmlNamespaceForMethodResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "SoapServices", "GetXmlNamespaceForMethodResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mb)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mb);
}
// Autogenerated method: System.Runtime.Remoting.SoapServices.GetXmlTypeForInteropType
bool System::Runtime::Remoting::SoapServices::GetXmlTypeForInteropType(System::Type* type, ::Il2CppString*& xmlType, ::Il2CppString*& xmlTypeNamespace) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::SoapServices::GetXmlTypeForInteropType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "SoapServices", "GetXmlTypeForInteropType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, xmlType, xmlTypeNamespace);
}
// Autogenerated method: System.Runtime.Remoting.SoapServices.PreLoad
void System::Runtime::Remoting::SoapServices::PreLoad(System::Reflection::Assembly* assembly) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::SoapServices::PreLoad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "SoapServices", "PreLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assembly)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assembly);
}
// Autogenerated method: System.Runtime.Remoting.SoapServices.PreLoad
void System::Runtime::Remoting::SoapServices::PreLoad(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::SoapServices::PreLoad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "SoapServices", "PreLoad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Runtime.Remoting.SoapServices.RegisterInteropXmlElement
void System::Runtime::Remoting::SoapServices::RegisterInteropXmlElement(::Il2CppString* xmlElement, ::Il2CppString* xmlNamespace, System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::SoapServices::RegisterInteropXmlElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "SoapServices", "RegisterInteropXmlElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmlElement), ::il2cpp_utils::ExtractType(xmlNamespace), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, xmlElement, xmlNamespace, type);
}
// Autogenerated method: System.Runtime.Remoting.SoapServices.RegisterInteropXmlType
void System::Runtime::Remoting::SoapServices::RegisterInteropXmlType(::Il2CppString* xmlType, ::Il2CppString* xmlTypeNamespace, System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::SoapServices::RegisterInteropXmlType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "SoapServices", "RegisterInteropXmlType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(xmlType), ::il2cpp_utils::ExtractType(xmlTypeNamespace), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, xmlType, xmlTypeNamespace, type);
}
// Autogenerated method: System.Runtime.Remoting.SoapServices.EncodeNs
::Il2CppString* System::Runtime::Remoting::SoapServices::EncodeNs(::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::SoapServices::EncodeNs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "SoapServices", "EncodeNs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ns);
}
// Autogenerated method: System.Runtime.Remoting.SoapServices..cctor
void System::Runtime::Remoting::SoapServices::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::SoapServices::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting", "SoapServices", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.SoapServices/TypeInfo
#include "System/Runtime/Remoting/SoapServices_TypeInfo.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.TypeEntry
#include "System/Runtime/Remoting/TypeEntry.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.TypeEntry.get_AssemblyName
::Il2CppString* System::Runtime::Remoting::TypeEntry::get_AssemblyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::TypeEntry::get_AssemblyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AssemblyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.TypeEntry.set_AssemblyName
void System::Runtime::Remoting::TypeEntry::set_AssemblyName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::TypeEntry::set_AssemblyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AssemblyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Remoting.TypeEntry.get_TypeName
::Il2CppString* System::Runtime::Remoting::TypeEntry::get_TypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::TypeEntry::get_TypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.TypeEntry.set_TypeName
void System::Runtime::Remoting::TypeEntry::set_TypeName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::TypeEntry::set_TypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.TypeInfo
#include "System/Runtime/Remoting/TypeInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.TypeInfo.get_TypeName
::Il2CppString* System::Runtime::Remoting::TypeInfo::get_TypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::TypeInfo::get_TypeName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.TypeInfo.CanCastTo
bool System::Runtime::Remoting::TypeInfo::CanCastTo(System::Type* fromType, ::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::TypeInfo::CanCastTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanCastTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fromType), ::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, fromType, o);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.WellKnownClientTypeEntry
#include "System/Runtime/Remoting/WellKnownClientTypeEntry.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.WellKnownClientTypeEntry.get_ApplicationUrl
::Il2CppString* System::Runtime::Remoting::WellKnownClientTypeEntry::get_ApplicationUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::WellKnownClientTypeEntry::get_ApplicationUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ApplicationUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.WellKnownClientTypeEntry.get_ObjectType
System::Type* System::Runtime::Remoting::WellKnownClientTypeEntry::get_ObjectType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::WellKnownClientTypeEntry::get_ObjectType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ObjectType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.WellKnownClientTypeEntry.get_ObjectUrl
::Il2CppString* System::Runtime::Remoting::WellKnownClientTypeEntry::get_ObjectUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::WellKnownClientTypeEntry::get_ObjectUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ObjectUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.WellKnownClientTypeEntry.ToString
::Il2CppString* System::Runtime::Remoting::WellKnownClientTypeEntry::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::WellKnownClientTypeEntry::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.WellKnownObjectMode
#include "System/Runtime/Remoting/WellKnownObjectMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Runtime.Remoting.WellKnownObjectMode Singleton
System::Runtime::Remoting::WellKnownObjectMode System::Runtime::Remoting::WellKnownObjectMode::_get_Singleton() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::WellKnownObjectMode::_get_Singleton");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Remoting::WellKnownObjectMode>("System.Runtime.Remoting", "WellKnownObjectMode", "Singleton"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Remoting.WellKnownObjectMode Singleton
void System::Runtime::Remoting::WellKnownObjectMode::_set_Singleton(System::Runtime::Remoting::WellKnownObjectMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::WellKnownObjectMode::_set_Singleton");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting", "WellKnownObjectMode", "Singleton", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Remoting.WellKnownObjectMode SingleCall
System::Runtime::Remoting::WellKnownObjectMode System::Runtime::Remoting::WellKnownObjectMode::_get_SingleCall() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::WellKnownObjectMode::_get_SingleCall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Remoting::WellKnownObjectMode>("System.Runtime.Remoting", "WellKnownObjectMode", "SingleCall"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Remoting.WellKnownObjectMode SingleCall
void System::Runtime::Remoting::WellKnownObjectMode::_set_SingleCall(System::Runtime::Remoting::WellKnownObjectMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::WellKnownObjectMode::_set_SingleCall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting", "WellKnownObjectMode", "SingleCall", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.WellKnownServiceTypeEntry
#include "System/Runtime/Remoting/WellKnownServiceTypeEntry.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.WellKnownServiceTypeEntry.get_Mode
System::Runtime::Remoting::WellKnownObjectMode System::Runtime::Remoting::WellKnownServiceTypeEntry::get_Mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::WellKnownServiceTypeEntry::get_Mode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::WellKnownObjectMode, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.WellKnownServiceTypeEntry.get_ObjectType
System::Type* System::Runtime::Remoting::WellKnownServiceTypeEntry::get_ObjectType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::WellKnownServiceTypeEntry::get_ObjectType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ObjectType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.WellKnownServiceTypeEntry.get_ObjectUri
::Il2CppString* System::Runtime::Remoting::WellKnownServiceTypeEntry::get_ObjectUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::WellKnownServiceTypeEntry::get_ObjectUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ObjectUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.WellKnownServiceTypeEntry.ToString
::Il2CppString* System::Runtime::Remoting::WellKnownServiceTypeEntry::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::WellKnownServiceTypeEntry::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Services.ITrackingHandler
#include "System/Runtime/Remoting/Services/ITrackingHandler.hpp"
// Including type: System.Runtime.Remoting.ObjRef
#include "System/Runtime/Remoting/ObjRef.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Services.ITrackingHandler.DisconnectedObject
void System::Runtime::Remoting::Services::ITrackingHandler::DisconnectedObject(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Services::ITrackingHandler::DisconnectedObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisconnectedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Runtime.Remoting.Services.ITrackingHandler.MarshaledObject
void System::Runtime::Remoting::Services::ITrackingHandler::MarshaledObject(::Il2CppObject* obj, System::Runtime::Remoting::ObjRef* _or) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Services::ITrackingHandler::MarshaledObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarshaledObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(_or)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj, _or);
}
// Autogenerated method: System.Runtime.Remoting.Services.ITrackingHandler.UnmarshaledObject
void System::Runtime::Remoting::Services::ITrackingHandler::UnmarshaledObject(::Il2CppObject* obj, System::Runtime::Remoting::ObjRef* _or) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Services::ITrackingHandler::UnmarshaledObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnmarshaledObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(_or)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj, _or);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Services.TrackingServices
#include "System/Runtime/Remoting/Services/TrackingServices.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Runtime.Remoting.ObjRef
#include "System/Runtime/Remoting/ObjRef.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.ArrayList _handlers
System::Collections::ArrayList* System::Runtime::Remoting::Services::TrackingServices::_get__handlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Services::TrackingServices::_get__handlers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::ArrayList*>("System.Runtime.Remoting.Services", "TrackingServices", "_handlers"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.ArrayList _handlers
void System::Runtime::Remoting::Services::TrackingServices::_set__handlers(System::Collections::ArrayList* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Services::TrackingServices::_set__handlers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting.Services", "TrackingServices", "_handlers", value));
}
// Autogenerated method: System.Runtime.Remoting.Services.TrackingServices.NotifyMarshaledObject
void System::Runtime::Remoting::Services::TrackingServices::NotifyMarshaledObject(::Il2CppObject* obj, System::Runtime::Remoting::ObjRef* _or) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Services::TrackingServices::NotifyMarshaledObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Services", "TrackingServices", "NotifyMarshaledObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(_or)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, _or);
}
// Autogenerated method: System.Runtime.Remoting.Services.TrackingServices.NotifyUnmarshaledObject
void System::Runtime::Remoting::Services::TrackingServices::NotifyUnmarshaledObject(::Il2CppObject* obj, System::Runtime::Remoting::ObjRef* _or) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Services::TrackingServices::NotifyUnmarshaledObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Services", "TrackingServices", "NotifyUnmarshaledObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(_or)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, _or);
}
// Autogenerated method: System.Runtime.Remoting.Services.TrackingServices.NotifyDisconnectedObject
void System::Runtime::Remoting::Services::TrackingServices::NotifyDisconnectedObject(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Services::TrackingServices::NotifyDisconnectedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Services", "TrackingServices", "NotifyDisconnectedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Runtime.Remoting.Services.TrackingServices..cctor
void System::Runtime::Remoting::Services::TrackingServices::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Services::TrackingServices::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Services", "TrackingServices", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Proxies.ProxyAttribute
#include "System/Runtime/Remoting/Proxies/ProxyAttribute.hpp"
// Including type: System.MarshalByRefObject
#include "System/MarshalByRefObject.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Runtime.Remoting.Proxies.RealProxy
#include "System/Runtime/Remoting/Proxies/RealProxy.hpp"
// Including type: System.Runtime.Remoting.ObjRef
#include "System/Runtime/Remoting/ObjRef.hpp"
// Including type: System.Runtime.Remoting.Contexts.Context
#include "System/Runtime/Remoting/Contexts/Context.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Proxies.ProxyAttribute.CreateInstance
System::MarshalByRefObject* System::Runtime::Remoting::Proxies::ProxyAttribute::CreateInstance(System::Type* serverType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Proxies::ProxyAttribute::CreateInstance");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverType)})));
  return ::il2cpp_utils::RunMethodThrow<System::MarshalByRefObject*, false>(this, ___internal__method, serverType);
}
// Autogenerated method: System.Runtime.Remoting.Proxies.ProxyAttribute.CreateProxy
System::Runtime::Remoting::Proxies::RealProxy* System::Runtime::Remoting::Proxies::ProxyAttribute::CreateProxy(System::Runtime::Remoting::ObjRef* objRef, System::Type* serverType, ::Il2CppObject* serverObject, System::Runtime::Remoting::Contexts::Context* serverContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Proxies::ProxyAttribute::CreateProxy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objRef), ::il2cpp_utils::ExtractType(serverType), ::il2cpp_utils::ExtractType(serverObject), ::il2cpp_utils::ExtractType(serverContext)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Proxies::RealProxy*, false>(this, ___internal__method, objRef, serverType, serverObject, serverContext);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Proxies.TransparentProxy
#include "System/Runtime/Remoting/Proxies/TransparentProxy.hpp"
// Including type: System.Runtime.Remoting.Proxies.RealProxy
#include "System/Runtime/Remoting/Proxies/RealProxy.hpp"
// Including type: System.RuntimeType
#include "System/RuntimeType.hpp"
// Including type: System.Runtime.Remoting.Contexts.Context
#include "System/Runtime/Remoting/Contexts/Context.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Proxies.TransparentProxy.GetProxyType
System::RuntimeType* System::Runtime::Remoting::Proxies::TransparentProxy::GetProxyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Proxies::TransparentProxy::GetProxyType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProxyType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::RuntimeType*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Proxies.TransparentProxy.get_IsContextBoundObject
bool System::Runtime::Remoting::Proxies::TransparentProxy::get_IsContextBoundObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Proxies::TransparentProxy::get_IsContextBoundObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsContextBoundObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Proxies.TransparentProxy.get_TargetContext
System::Runtime::Remoting::Contexts::Context* System::Runtime::Remoting::Proxies::TransparentProxy::get_TargetContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Proxies::TransparentProxy::get_TargetContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Contexts::Context*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Proxies.TransparentProxy.InCurrentContext
bool System::Runtime::Remoting::Proxies::TransparentProxy::InCurrentContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Proxies::TransparentProxy::InCurrentContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InCurrentContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Proxies.TransparentProxy.LoadRemoteFieldNew
::Il2CppObject* System::Runtime::Remoting::Proxies::TransparentProxy::LoadRemoteFieldNew(System::IntPtr classPtr, System::IntPtr fieldPtr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Proxies::TransparentProxy::LoadRemoteFieldNew");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadRemoteFieldNew", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(classPtr), ::il2cpp_utils::ExtractType(fieldPtr)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, classPtr, fieldPtr);
}
// Autogenerated method: System.Runtime.Remoting.Proxies.TransparentProxy.StoreRemoteField
void System::Runtime::Remoting::Proxies::TransparentProxy::StoreRemoteField(System::IntPtr classPtr, System::IntPtr fieldPtr, ::Il2CppObject* arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Proxies::TransparentProxy::StoreRemoteField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StoreRemoteField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(classPtr), ::il2cpp_utils::ExtractType(fieldPtr), ::il2cpp_utils::ExtractType(arg)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, classPtr, fieldPtr, arg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Proxies.RealProxy
#include "System/Runtime/Remoting/Proxies/RealProxy.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Runtime.Remoting.Contexts.Context
#include "System/Runtime/Remoting/Contexts/Context.hpp"
// Including type: System.MarshalByRefObject
#include "System/MarshalByRefObject.hpp"
// Including type: System.Runtime.Remoting.Identity
#include "System/Runtime/Remoting/Identity.hpp"
// Including type: System.Runtime.Remoting.ClientIdentity
#include "System/Runtime/Remoting/ClientIdentity.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessage
#include "System/Runtime/Remoting/Messaging/IMessage.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMethodReturnMessage
#include "System/Runtime/Remoting/Messaging/IMethodReturnMessage.hpp"
// Including type: System.Runtime.Remoting.Messaging.MonoMethodMessage
#include "System/Runtime/Remoting/Messaging/MonoMethodMessage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Proxies.RealProxy.InternalGetProxyType
System::Type* System::Runtime::Remoting::Proxies::RealProxy::InternalGetProxyType(::Il2CppObject* transparentProxy) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Proxies::RealProxy::InternalGetProxyType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Proxies", "RealProxy", "InternalGetProxyType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transparentProxy)})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, transparentProxy);
}
// Autogenerated method: System.Runtime.Remoting.Proxies.RealProxy.GetProxiedType
System::Type* System::Runtime::Remoting::Proxies::RealProxy::GetProxiedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Proxies::RealProxy::GetProxiedType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProxiedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Proxies.RealProxy.GetObjectData
void System::Runtime::Remoting::Proxies::RealProxy::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Proxies::RealProxy::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Runtime.Remoting.Proxies.RealProxy.get_ObjectIdentity
System::Runtime::Remoting::Identity* System::Runtime::Remoting::Proxies::RealProxy::get_ObjectIdentity() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Proxies::RealProxy::get_ObjectIdentity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ObjectIdentity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Identity*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Proxies.RealProxy.set_ObjectIdentity
void System::Runtime::Remoting::Proxies::RealProxy::set_ObjectIdentity(System::Runtime::Remoting::Identity* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Proxies::RealProxy::set_ObjectIdentity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ObjectIdentity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Remoting.Proxies.RealProxy.Invoke
System::Runtime::Remoting::Messaging::IMessage* System::Runtime::Remoting::Proxies::RealProxy::Invoke(System::Runtime::Remoting::Messaging::IMessage* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Proxies::RealProxy::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessage*, false>(this, ___internal__method, msg);
}
// Autogenerated method: System.Runtime.Remoting.Proxies.RealProxy.PrivateInvoke
::Il2CppObject* System::Runtime::Remoting::Proxies::RealProxy::PrivateInvoke(System::Runtime::Remoting::Proxies::RealProxy* rp, System::Runtime::Remoting::Messaging::IMessage* msg, System::Exception*& exc, ::Array<::Il2CppObject*>*& out_args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Proxies::RealProxy::PrivateInvoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Proxies", "RealProxy", "PrivateInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rp), ::il2cpp_utils::ExtractType(msg), ::il2cpp_utils::ExtractIndependentType<System::Exception*&>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppObject*>*&>()})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rp, msg, exc, out_args);
}
// Autogenerated method: System.Runtime.Remoting.Proxies.RealProxy.InternalGetTransparentProxy
::Il2CppObject* System::Runtime::Remoting::Proxies::RealProxy::InternalGetTransparentProxy(::Il2CppString* className) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Proxies::RealProxy::InternalGetTransparentProxy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalGetTransparentProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(className)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, className);
}
// Autogenerated method: System.Runtime.Remoting.Proxies.RealProxy.GetTransparentProxy
::Il2CppObject* System::Runtime::Remoting::Proxies::RealProxy::GetTransparentProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Proxies::RealProxy::GetTransparentProxy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTransparentProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Proxies.RealProxy.AttachServer
void System::Runtime::Remoting::Proxies::RealProxy::AttachServer(System::MarshalByRefObject* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Proxies::RealProxy::AttachServer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Runtime.Remoting.Proxies.RealProxy.SetTargetDomain
void System::Runtime::Remoting::Proxies::RealProxy::SetTargetDomain(int domainId) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Proxies::RealProxy::SetTargetDomain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTargetDomain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(domainId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, domainId);
}
// Autogenerated method: System.Runtime.Remoting.Proxies.RealProxy.GetAppDomainTarget
::Il2CppObject* System::Runtime::Remoting::Proxies::RealProxy::GetAppDomainTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Proxies::RealProxy::GetAppDomainTarget");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAppDomainTarget", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Proxies.RealProxy.ProcessResponse
::Array<::Il2CppObject*>* System::Runtime::Remoting::Proxies::RealProxy::ProcessResponse(System::Runtime::Remoting::Messaging::IMethodReturnMessage* mrm, System::Runtime::Remoting::Messaging::MonoMethodMessage* call) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Proxies::RealProxy::ProcessResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Proxies", "RealProxy", "ProcessResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mrm), ::il2cpp_utils::ExtractType(call)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppObject*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mrm, call);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Proxies.RemotingProxy
#include "System/Runtime/Remoting/Proxies/RemotingProxy.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessageSink
#include "System/Runtime/Remoting/Messaging/IMessageSink.hpp"
// Including type: System.Runtime.Remoting.Messaging.ConstructionCall
#include "System/Runtime/Remoting/Messaging/ConstructionCall.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Runtime.Remoting.Identity
#include "System/Runtime/Remoting/Identity.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessage
#include "System/Runtime/Remoting/Messaging/IMessage.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMethodMessage
#include "System/Runtime/Remoting/Messaging/IMethodMessage.hpp"
// Including type: System.Runtime.Remoting.ClientIdentity
#include "System/Runtime/Remoting/ClientIdentity.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Reflection.MethodInfo _cache_GetTypeMethod
System::Reflection::MethodInfo* System::Runtime::Remoting::Proxies::RemotingProxy::_get__cache_GetTypeMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Proxies::RemotingProxy::_get__cache_GetTypeMethod");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodInfo*>("System.Runtime.Remoting.Proxies", "RemotingProxy", "_cache_GetTypeMethod"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.MethodInfo _cache_GetTypeMethod
void System::Runtime::Remoting::Proxies::RemotingProxy::_set__cache_GetTypeMethod(System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Proxies::RemotingProxy::_set__cache_GetTypeMethod");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting.Proxies", "RemotingProxy", "_cache_GetTypeMethod", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.MethodInfo _cache_GetHashCodeMethod
System::Reflection::MethodInfo* System::Runtime::Remoting::Proxies::RemotingProxy::_get__cache_GetHashCodeMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Proxies::RemotingProxy::_get__cache_GetHashCodeMethod");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodInfo*>("System.Runtime.Remoting.Proxies", "RemotingProxy", "_cache_GetHashCodeMethod"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.MethodInfo _cache_GetHashCodeMethod
void System::Runtime::Remoting::Proxies::RemotingProxy::_set__cache_GetHashCodeMethod(System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Proxies::RemotingProxy::_set__cache_GetHashCodeMethod");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting.Proxies", "RemotingProxy", "_cache_GetHashCodeMethod", value));
}
// Autogenerated method: System.Runtime.Remoting.Proxies.RemotingProxy.AttachIdentity
void System::Runtime::Remoting::Proxies::RemotingProxy::AttachIdentity(System::Runtime::Remoting::Identity* identity) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Proxies::RemotingProxy::AttachIdentity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttachIdentity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(identity)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, identity);
}
// Autogenerated method: System.Runtime.Remoting.Proxies.RemotingProxy.ActivateRemoteObject
System::Runtime::Remoting::Messaging::IMessage* System::Runtime::Remoting::Proxies::RemotingProxy::ActivateRemoteObject(System::Runtime::Remoting::Messaging::IMethodMessage* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Proxies::RemotingProxy::ActivateRemoteObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateRemoteObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessage*, false>(this, ___internal__method, request);
}
// Autogenerated method: System.Runtime.Remoting.Proxies.RemotingProxy.get_TypeName
::Il2CppString* System::Runtime::Remoting::Proxies::RemotingProxy::get_TypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Proxies::RemotingProxy::get_TypeName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Proxies.RemotingProxy.CanCastTo
bool System::Runtime::Remoting::Proxies::RemotingProxy::CanCastTo(System::Type* fromType, ::Il2CppObject* o) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Proxies::RemotingProxy::CanCastTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanCastTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fromType), ::il2cpp_utils::ExtractType(o)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, fromType, o);
}
// Autogenerated method: System.Runtime.Remoting.Proxies.RemotingProxy..cctor
void System::Runtime::Remoting::Proxies::RemotingProxy::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Proxies::RemotingProxy::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Proxies", "RemotingProxy", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Proxies.RemotingProxy.Invoke
System::Runtime::Remoting::Messaging::IMessage* System::Runtime::Remoting::Proxies::RemotingProxy::Invoke(System::Runtime::Remoting::Messaging::IMessage* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Proxies::RemotingProxy::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessage*, false>(this, ___internal__method, request);
}
// Autogenerated method: System.Runtime.Remoting.Proxies.RemotingProxy.Finalize
void System::Runtime::Remoting::Proxies::RemotingProxy::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Proxies::RemotingProxy::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.Lifetime.ILease
#include "System/Runtime/Remoting/Lifetime/ILease.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.Runtime.Remoting.Lifetime.LeaseState
#include "System/Runtime/Remoting/Lifetime/LeaseState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Lifetime.ILease.get_CurrentLeaseTime
System::TimeSpan System::Runtime::Remoting::Lifetime::ILease::get_CurrentLeaseTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::ILease::get_CurrentLeaseTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentLeaseTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Lifetime.ILease.get_CurrentState
System::Runtime::Remoting::Lifetime::LeaseState System::Runtime::Remoting::Lifetime::ILease::get_CurrentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::ILease::get_CurrentState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Lifetime::LeaseState, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Lifetime.ILease.get_RenewOnCallTime
System::TimeSpan System::Runtime::Remoting::Lifetime::ILease::get_RenewOnCallTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::ILease::get_RenewOnCallTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RenewOnCallTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Lifetime.ILease.Renew
System::TimeSpan System::Runtime::Remoting::Lifetime::ILease::Renew(System::TimeSpan renewalTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::ILease::Renew");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Renew", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renewalTime)})));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(this, ___internal__method, renewalTime);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.Lifetime.ISponsor
#include "System/Runtime/Remoting/Lifetime/ISponsor.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.Runtime.Remoting.Lifetime.ILease
#include "System/Runtime/Remoting/Lifetime/ILease.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Lifetime.ISponsor.Renewal
System::TimeSpan System::Runtime::Remoting::Lifetime::ISponsor::Renewal(System::Runtime::Remoting::Lifetime::ILease* lease) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::ISponsor::Renewal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Renewal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lease)})));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(this, ___internal__method, lease);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Lifetime.Lease
#include "System/Runtime/Remoting/Lifetime/Lease.hpp"
// Including type: System.Runtime.Remoting.Lifetime.Lease/RenewalDelegate
#include "System/Runtime/Remoting/Lifetime/Lease_RenewalDelegate.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Collections.Queue
#include "System/Collections/Queue.hpp"
// Including type: System.Runtime.Remoting.Lifetime.ISponsor
#include "System/Runtime/Remoting/Lifetime/ISponsor.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Lifetime.Lease.get_CurrentLeaseTime
System::TimeSpan System::Runtime::Remoting::Lifetime::Lease::get_CurrentLeaseTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::Lease::get_CurrentLeaseTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentLeaseTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Lifetime.Lease.get_CurrentState
System::Runtime::Remoting::Lifetime::LeaseState System::Runtime::Remoting::Lifetime::Lease::get_CurrentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::Lease::get_CurrentState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CurrentState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Lifetime::LeaseState, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Lifetime.Lease.Activate
void System::Runtime::Remoting::Lifetime::Lease::Activate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::Lease::Activate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Lifetime.Lease.get_RenewOnCallTime
System::TimeSpan System::Runtime::Remoting::Lifetime::Lease::get_RenewOnCallTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::Lease::get_RenewOnCallTime");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RenewOnCallTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Lifetime.Lease.Renew
System::TimeSpan System::Runtime::Remoting::Lifetime::Lease::Renew(System::TimeSpan renewalTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::Lease::Renew");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Renew", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(renewalTime)})));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(this, ___internal__method, renewalTime);
}
// Autogenerated method: System.Runtime.Remoting.Lifetime.Lease.Unregister
void System::Runtime::Remoting::Lifetime::Lease::Unregister(System::Runtime::Remoting::Lifetime::ISponsor* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::Lease::Unregister");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unregister", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Runtime.Remoting.Lifetime.Lease.UpdateState
void System::Runtime::Remoting::Lifetime::Lease::UpdateState() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::Lease::UpdateState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Lifetime.Lease.CheckNextSponsor
void System::Runtime::Remoting::Lifetime::Lease::CheckNextSponsor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::Lease::CheckNextSponsor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckNextSponsor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Lifetime.Lease.ProcessSponsorResponse
void System::Runtime::Remoting::Lifetime::Lease::ProcessSponsorResponse(::Il2CppObject* state, bool timedOut) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::Lease::ProcessSponsorResponse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessSponsorResponse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(timedOut)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state, timedOut);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Lifetime.Lease/RenewalDelegate
#include "System/Runtime/Remoting/Lifetime/Lease_RenewalDelegate.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.Runtime.Remoting.Lifetime.ILease
#include "System/Runtime/Remoting/Lifetime/ILease.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Lifetime.Lease/RenewalDelegate.Invoke
System::TimeSpan System::Runtime::Remoting::Lifetime::Lease::RenewalDelegate::Invoke(System::Runtime::Remoting::Lifetime::ILease* lease) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::Lease::RenewalDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lease)})));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(this, ___internal__method, lease);
}
// Autogenerated method: System.Runtime.Remoting.Lifetime.Lease/RenewalDelegate.BeginInvoke
System::IAsyncResult* System::Runtime::Remoting::Lifetime::Lease::RenewalDelegate::BeginInvoke(System::Runtime::Remoting::Lifetime::ILease* lease, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::Lease::RenewalDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lease), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, lease, callback, object);
}
// Autogenerated method: System.Runtime.Remoting.Lifetime.Lease/RenewalDelegate.EndInvoke
System::TimeSpan System::Runtime::Remoting::Lifetime::Lease::RenewalDelegate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::Lease::RenewalDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Lifetime.LeaseManager
#include "System/Runtime/Remoting/Lifetime/LeaseManager.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Threading.Timer
#include "System/Threading/Timer.hpp"
// Including type: System.TimeSpan
#include "System/TimeSpan.hpp"
// Including type: System.Runtime.Remoting.ServerIdentity
#include "System/Runtime/Remoting/ServerIdentity.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Lifetime.LeaseManager.SetPollTime
void System::Runtime::Remoting::Lifetime::LeaseManager::SetPollTime(System::TimeSpan timeSpan) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::LeaseManager::SetPollTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPollTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeSpan)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, timeSpan);
}
// Autogenerated method: System.Runtime.Remoting.Lifetime.LeaseManager.TrackLifetime
void System::Runtime::Remoting::Lifetime::LeaseManager::TrackLifetime(System::Runtime::Remoting::ServerIdentity* identity) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::LeaseManager::TrackLifetime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TrackLifetime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(identity)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, identity);
}
// Autogenerated method: System.Runtime.Remoting.Lifetime.LeaseManager.StartManager
void System::Runtime::Remoting::Lifetime::LeaseManager::StartManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::LeaseManager::StartManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Lifetime.LeaseManager.StopManager
void System::Runtime::Remoting::Lifetime::LeaseManager::StopManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::LeaseManager::StopManager");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopManager", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Lifetime.LeaseManager.ManageLeases
void System::Runtime::Remoting::Lifetime::LeaseManager::ManageLeases(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::LeaseManager::ManageLeases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ManageLeases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.Lifetime.LeaseSink
#include "System/Runtime/Remoting/Lifetime/LeaseSink.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessage
#include "System/Runtime/Remoting/Messaging/IMessage.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessageCtrl
#include "System/Runtime/Remoting/Messaging/IMessageCtrl.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Lifetime.LeaseSink.SyncProcessMessage
System::Runtime::Remoting::Messaging::IMessage* System::Runtime::Remoting::Lifetime::LeaseSink::SyncProcessMessage(System::Runtime::Remoting::Messaging::IMessage* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::LeaseSink::SyncProcessMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncProcessMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessage*, false>(this, ___internal__method, msg);
}
// Autogenerated method: System.Runtime.Remoting.Lifetime.LeaseSink.AsyncProcessMessage
System::Runtime::Remoting::Messaging::IMessageCtrl* System::Runtime::Remoting::Lifetime::LeaseSink::AsyncProcessMessage(System::Runtime::Remoting::Messaging::IMessage* msg, System::Runtime::Remoting::Messaging::IMessageSink* replySink) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::LeaseSink::AsyncProcessMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AsyncProcessMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg), ::il2cpp_utils::ExtractType(replySink)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessageCtrl*, false>(this, ___internal__method, msg, replySink);
}
// Autogenerated method: System.Runtime.Remoting.Lifetime.LeaseSink.RenewLease
void System::Runtime::Remoting::Lifetime::LeaseSink::RenewLease(System::Runtime::Remoting::Messaging::IMessage* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::LeaseSink::RenewLease");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RenewLease", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.Lifetime.LeaseState
#include "System/Runtime/Remoting/Lifetime/LeaseState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Runtime.Remoting.Lifetime.LeaseState Null
System::Runtime::Remoting::Lifetime::LeaseState System::Runtime::Remoting::Lifetime::LeaseState::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::LeaseState::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Remoting::Lifetime::LeaseState>("System.Runtime.Remoting.Lifetime", "LeaseState", "Null"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Remoting.Lifetime.LeaseState Null
void System::Runtime::Remoting::Lifetime::LeaseState::_set_Null(System::Runtime::Remoting::Lifetime::LeaseState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::LeaseState::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting.Lifetime", "LeaseState", "Null", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Remoting.Lifetime.LeaseState Initial
System::Runtime::Remoting::Lifetime::LeaseState System::Runtime::Remoting::Lifetime::LeaseState::_get_Initial() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::LeaseState::_get_Initial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Remoting::Lifetime::LeaseState>("System.Runtime.Remoting.Lifetime", "LeaseState", "Initial"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Remoting.Lifetime.LeaseState Initial
void System::Runtime::Remoting::Lifetime::LeaseState::_set_Initial(System::Runtime::Remoting::Lifetime::LeaseState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::LeaseState::_set_Initial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting.Lifetime", "LeaseState", "Initial", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Remoting.Lifetime.LeaseState Active
System::Runtime::Remoting::Lifetime::LeaseState System::Runtime::Remoting::Lifetime::LeaseState::_get_Active() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::LeaseState::_get_Active");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Remoting::Lifetime::LeaseState>("System.Runtime.Remoting.Lifetime", "LeaseState", "Active"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Remoting.Lifetime.LeaseState Active
void System::Runtime::Remoting::Lifetime::LeaseState::_set_Active(System::Runtime::Remoting::Lifetime::LeaseState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::LeaseState::_set_Active");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting.Lifetime", "LeaseState", "Active", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Remoting.Lifetime.LeaseState Renewing
System::Runtime::Remoting::Lifetime::LeaseState System::Runtime::Remoting::Lifetime::LeaseState::_get_Renewing() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::LeaseState::_get_Renewing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Remoting::Lifetime::LeaseState>("System.Runtime.Remoting.Lifetime", "LeaseState", "Renewing"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Remoting.Lifetime.LeaseState Renewing
void System::Runtime::Remoting::Lifetime::LeaseState::_set_Renewing(System::Runtime::Remoting::Lifetime::LeaseState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::LeaseState::_set_Renewing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting.Lifetime", "LeaseState", "Renewing", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Remoting.Lifetime.LeaseState Expired
System::Runtime::Remoting::Lifetime::LeaseState System::Runtime::Remoting::Lifetime::LeaseState::_get_Expired() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::LeaseState::_get_Expired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Remoting::Lifetime::LeaseState>("System.Runtime.Remoting.Lifetime", "LeaseState", "Expired"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Remoting.Lifetime.LeaseState Expired
void System::Runtime::Remoting::Lifetime::LeaseState::_set_Expired(System::Runtime::Remoting::Lifetime::LeaseState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::LeaseState::_set_Expired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting.Lifetime", "LeaseState", "Expired", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.Lifetime.LifetimeServices
#include "System/Runtime/Remoting/Lifetime/LifetimeServices.hpp"
// Including type: System.Runtime.Remoting.Lifetime.LeaseManager
#include "System/Runtime/Remoting/Lifetime/LeaseManager.hpp"
// Including type: System.Runtime.Remoting.ServerIdentity
#include "System/Runtime/Remoting/ServerIdentity.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.TimeSpan _leaseManagerPollTime
System::TimeSpan System::Runtime::Remoting::Lifetime::LifetimeServices::_get__leaseManagerPollTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::LifetimeServices::_get__leaseManagerPollTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TimeSpan>("System.Runtime.Remoting.Lifetime", "LifetimeServices", "_leaseManagerPollTime"));
}
// Autogenerated static field setter
// Set static field: static private System.TimeSpan _leaseManagerPollTime
void System::Runtime::Remoting::Lifetime::LifetimeServices::_set__leaseManagerPollTime(System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::LifetimeServices::_set__leaseManagerPollTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting.Lifetime", "LifetimeServices", "_leaseManagerPollTime", value));
}
// Autogenerated static field getter
// Get static field: static private System.TimeSpan _leaseTime
System::TimeSpan System::Runtime::Remoting::Lifetime::LifetimeServices::_get__leaseTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::LifetimeServices::_get__leaseTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TimeSpan>("System.Runtime.Remoting.Lifetime", "LifetimeServices", "_leaseTime"));
}
// Autogenerated static field setter
// Set static field: static private System.TimeSpan _leaseTime
void System::Runtime::Remoting::Lifetime::LifetimeServices::_set__leaseTime(System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::LifetimeServices::_set__leaseTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting.Lifetime", "LifetimeServices", "_leaseTime", value));
}
// Autogenerated static field getter
// Get static field: static private System.TimeSpan _renewOnCallTime
System::TimeSpan System::Runtime::Remoting::Lifetime::LifetimeServices::_get__renewOnCallTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::LifetimeServices::_get__renewOnCallTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TimeSpan>("System.Runtime.Remoting.Lifetime", "LifetimeServices", "_renewOnCallTime"));
}
// Autogenerated static field setter
// Set static field: static private System.TimeSpan _renewOnCallTime
void System::Runtime::Remoting::Lifetime::LifetimeServices::_set__renewOnCallTime(System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::LifetimeServices::_set__renewOnCallTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting.Lifetime", "LifetimeServices", "_renewOnCallTime", value));
}
// Autogenerated static field getter
// Get static field: static private System.TimeSpan _sponsorshipTimeout
System::TimeSpan System::Runtime::Remoting::Lifetime::LifetimeServices::_get__sponsorshipTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::LifetimeServices::_get__sponsorshipTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TimeSpan>("System.Runtime.Remoting.Lifetime", "LifetimeServices", "_sponsorshipTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.TimeSpan _sponsorshipTimeout
void System::Runtime::Remoting::Lifetime::LifetimeServices::_set__sponsorshipTimeout(System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::LifetimeServices::_set__sponsorshipTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting.Lifetime", "LifetimeServices", "_sponsorshipTimeout", value));
}
// Autogenerated static field getter
// Get static field: static private System.Runtime.Remoting.Lifetime.LeaseManager _leaseManager
System::Runtime::Remoting::Lifetime::LeaseManager* System::Runtime::Remoting::Lifetime::LifetimeServices::_get__leaseManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::LifetimeServices::_get__leaseManager");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Remoting::Lifetime::LeaseManager*>("System.Runtime.Remoting.Lifetime", "LifetimeServices", "_leaseManager"));
}
// Autogenerated static field setter
// Set static field: static private System.Runtime.Remoting.Lifetime.LeaseManager _leaseManager
void System::Runtime::Remoting::Lifetime::LifetimeServices::_set__leaseManager(System::Runtime::Remoting::Lifetime::LeaseManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::LifetimeServices::_set__leaseManager");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting.Lifetime", "LifetimeServices", "_leaseManager", value));
}
// Autogenerated method: System.Runtime.Remoting.Lifetime.LifetimeServices..cctor
void System::Runtime::Remoting::Lifetime::LifetimeServices::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::LifetimeServices::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Lifetime", "LifetimeServices", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Lifetime.LifetimeServices.get_LeaseManagerPollTime
System::TimeSpan System::Runtime::Remoting::Lifetime::LifetimeServices::get_LeaseManagerPollTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::LifetimeServices::get_LeaseManagerPollTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Lifetime", "LifetimeServices", "get_LeaseManagerPollTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Lifetime.LifetimeServices.set_LeaseManagerPollTime
void System::Runtime::Remoting::Lifetime::LifetimeServices::set_LeaseManagerPollTime(System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::LifetimeServices::set_LeaseManagerPollTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Lifetime", "LifetimeServices", "set_LeaseManagerPollTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Runtime.Remoting.Lifetime.LifetimeServices.get_LeaseTime
System::TimeSpan System::Runtime::Remoting::Lifetime::LifetimeServices::get_LeaseTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::LifetimeServices::get_LeaseTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Lifetime", "LifetimeServices", "get_LeaseTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Lifetime.LifetimeServices.set_LeaseTime
void System::Runtime::Remoting::Lifetime::LifetimeServices::set_LeaseTime(System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::LifetimeServices::set_LeaseTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Lifetime", "LifetimeServices", "set_LeaseTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Runtime.Remoting.Lifetime.LifetimeServices.get_RenewOnCallTime
System::TimeSpan System::Runtime::Remoting::Lifetime::LifetimeServices::get_RenewOnCallTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::LifetimeServices::get_RenewOnCallTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Lifetime", "LifetimeServices", "get_RenewOnCallTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Lifetime.LifetimeServices.set_RenewOnCallTime
void System::Runtime::Remoting::Lifetime::LifetimeServices::set_RenewOnCallTime(System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::LifetimeServices::set_RenewOnCallTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Lifetime", "LifetimeServices", "set_RenewOnCallTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Runtime.Remoting.Lifetime.LifetimeServices.get_SponsorshipTimeout
System::TimeSpan System::Runtime::Remoting::Lifetime::LifetimeServices::get_SponsorshipTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::LifetimeServices::get_SponsorshipTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Lifetime", "LifetimeServices", "get_SponsorshipTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::TimeSpan, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Lifetime.LifetimeServices.set_SponsorshipTimeout
void System::Runtime::Remoting::Lifetime::LifetimeServices::set_SponsorshipTimeout(System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::LifetimeServices::set_SponsorshipTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Lifetime", "LifetimeServices", "set_SponsorshipTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: System.Runtime.Remoting.Lifetime.LifetimeServices.TrackLifetime
void System::Runtime::Remoting::Lifetime::LifetimeServices::TrackLifetime(System::Runtime::Remoting::ServerIdentity* identity) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Lifetime::LifetimeServices::TrackLifetime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Lifetime", "LifetimeServices", "TrackLifetime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(identity)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, identity);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Contexts.Context
#include "System/Runtime/Remoting/Contexts/Context.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessageSink
#include "System/Runtime/Remoting/Messaging/IMessageSink.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Runtime.Remoting.Contexts.IContextProperty
#include "System/Runtime/Remoting/Contexts/IContextProperty.hpp"
// Including type: System.LocalDataStoreHolder
#include "System/LocalDataStoreHolder.hpp"
// Including type: System.Runtime.Remoting.Contexts.DynamicPropertyCollection
#include "System/Runtime/Remoting/Contexts/DynamicPropertyCollection.hpp"
// Including type: System.Runtime.Remoting.Contexts.ContextCallbackObject
#include "System/Runtime/Remoting/Contexts/ContextCallbackObject.hpp"
// Including type: System.LocalDataStoreMgr
#include "System/LocalDataStoreMgr.hpp"
// Including type: System.Runtime.Remoting.Contexts.IDynamicProperty
#include "System/Runtime/Remoting/Contexts/IDynamicProperty.hpp"
// Including type: System.ContextBoundObject
#include "System/ContextBoundObject.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessage
#include "System/Runtime/Remoting/Messaging/IMessage.hpp"
// Including type: System.MarshalByRefObject
#include "System/MarshalByRefObject.hpp"
// Including type: System.Runtime.Remoting.Activation.IConstructionCallMessage
#include "System/Runtime/Remoting/Activation/IConstructionCallMessage.hpp"
// Including type: System.Runtime.Remoting.Contexts.CrossContextDelegate
#include "System/Runtime/Remoting/Contexts/CrossContextDelegate.hpp"
// Including type: System.LocalDataStore
#include "System/LocalDataStore.hpp"
// Including type: System.LocalDataStoreSlot
#include "System/LocalDataStoreSlot.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [ContextStaticAttribute] Offset: 0xCACF9C
// Autogenerated static field getter
// Get static field: static private System.Object[] local_slots
::Array<::Il2CppObject*>* System::Runtime::Remoting::Contexts::Context::_get_local_slots() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::_get_local_slots");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppObject*>*>("System.Runtime.Remoting.Contexts", "Context", "local_slots"));
}
// Autogenerated static field setter
// Set static field: static private System.Object[] local_slots
void System::Runtime::Remoting::Contexts::Context::_set_local_slots(::Array<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::_set_local_slots");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting.Contexts", "Context", "local_slots", value));
}
// Autogenerated static field getter
// Get static field: static private System.Runtime.Remoting.Messaging.IMessageSink default_server_context_sink
System::Runtime::Remoting::Messaging::IMessageSink* System::Runtime::Remoting::Contexts::Context::_get_default_server_context_sink() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::_get_default_server_context_sink");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Remoting::Messaging::IMessageSink*>("System.Runtime.Remoting.Contexts", "Context", "default_server_context_sink"));
}
// Autogenerated static field setter
// Set static field: static private System.Runtime.Remoting.Messaging.IMessageSink default_server_context_sink
void System::Runtime::Remoting::Contexts::Context::_set_default_server_context_sink(System::Runtime::Remoting::Messaging::IMessageSink* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::_set_default_server_context_sink");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting.Contexts", "Context", "default_server_context_sink", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 global_count
int System::Runtime::Remoting::Contexts::Context::_get_global_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::_get_global_count");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Runtime.Remoting.Contexts", "Context", "global_count"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 global_count
void System::Runtime::Remoting::Contexts::Context::_set_global_count(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::_set_global_count");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting.Contexts", "Context", "global_count", value));
}
// Autogenerated static field getter
// Get static field: static private System.LocalDataStoreMgr _localDataStoreMgr
System::LocalDataStoreMgr* System::Runtime::Remoting::Contexts::Context::_get__localDataStoreMgr() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::_get__localDataStoreMgr");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::LocalDataStoreMgr*>("System.Runtime.Remoting.Contexts", "Context", "_localDataStoreMgr"));
}
// Autogenerated static field setter
// Set static field: static private System.LocalDataStoreMgr _localDataStoreMgr
void System::Runtime::Remoting::Contexts::Context::_set__localDataStoreMgr(System::LocalDataStoreMgr* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::_set__localDataStoreMgr");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting.Contexts", "Context", "_localDataStoreMgr", value));
}
// Autogenerated static field getter
// Get static field: static private System.Runtime.Remoting.Contexts.DynamicPropertyCollection global_dynamic_properties
System::Runtime::Remoting::Contexts::DynamicPropertyCollection* System::Runtime::Remoting::Contexts::Context::_get_global_dynamic_properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::_get_global_dynamic_properties");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Remoting::Contexts::DynamicPropertyCollection*>("System.Runtime.Remoting.Contexts", "Context", "global_dynamic_properties"));
}
// Autogenerated static field setter
// Set static field: static private System.Runtime.Remoting.Contexts.DynamicPropertyCollection global_dynamic_properties
void System::Runtime::Remoting::Contexts::Context::_set_global_dynamic_properties(System::Runtime::Remoting::Contexts::DynamicPropertyCollection* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::_set_global_dynamic_properties");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting.Contexts", "Context", "global_dynamic_properties", value));
}
// Autogenerated method: System.Runtime.Remoting.Contexts.Context.RegisterContext
void System::Runtime::Remoting::Contexts::Context::RegisterContext(System::Runtime::Remoting::Contexts::Context* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::RegisterContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Contexts", "Context", "RegisterContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.Context.ReleaseContext
void System::Runtime::Remoting::Contexts::Context::ReleaseContext(System::Runtime::Remoting::Contexts::Context* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::ReleaseContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Contexts", "Context", "ReleaseContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.Context.get_DefaultContext
System::Runtime::Remoting::Contexts::Context* System::Runtime::Remoting::Contexts::Context::get_DefaultContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::get_DefaultContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Contexts", "Context", "get_DefaultContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Contexts::Context*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.Context.get_ContextID
int System::Runtime::Remoting::Contexts::Context::get_ContextID() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::get_ContextID");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContextID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.Context.get_ContextProperties
::Array<System::Runtime::Remoting::Contexts::IContextProperty*>* System::Runtime::Remoting::Contexts::Context::get_ContextProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::get_ContextProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContextProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Runtime::Remoting::Contexts::IContextProperty*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.Context.get_IsDefaultContext
bool System::Runtime::Remoting::Contexts::Context::get_IsDefaultContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::get_IsDefaultContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDefaultContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.Context.get_NeedsContextSink
bool System::Runtime::Remoting::Contexts::Context::get_NeedsContextSink() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::get_NeedsContextSink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NeedsContextSink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.Context.RegisterDynamicProperty
bool System::Runtime::Remoting::Contexts::Context::RegisterDynamicProperty(System::Runtime::Remoting::Contexts::IDynamicProperty* prop, System::ContextBoundObject* obj, System::Runtime::Remoting::Contexts::Context* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::RegisterDynamicProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Contexts", "Context", "RegisterDynamicProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prop), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, prop, obj, ctx);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.Context.UnregisterDynamicProperty
bool System::Runtime::Remoting::Contexts::Context::UnregisterDynamicProperty(::Il2CppString* name, System::ContextBoundObject* obj, System::Runtime::Remoting::Contexts::Context* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::UnregisterDynamicProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Contexts", "Context", "UnregisterDynamicProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, obj, ctx);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.Context.GetDynamicPropertyCollection
System::Runtime::Remoting::Contexts::DynamicPropertyCollection* System::Runtime::Remoting::Contexts::Context::GetDynamicPropertyCollection(System::ContextBoundObject* obj, System::Runtime::Remoting::Contexts::Context* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::GetDynamicPropertyCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Contexts", "Context", "GetDynamicPropertyCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Contexts::DynamicPropertyCollection*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, ctx);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.Context.NotifyGlobalDynamicSinks
void System::Runtime::Remoting::Contexts::Context::NotifyGlobalDynamicSinks(bool start, System::Runtime::Remoting::Messaging::IMessage* req_msg, bool client_site, bool async) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::NotifyGlobalDynamicSinks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Contexts", "Context", "NotifyGlobalDynamicSinks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(req_msg), ::il2cpp_utils::ExtractType(client_site), ::il2cpp_utils::ExtractType(async)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, start, req_msg, client_site, async);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.Context.get_HasGlobalDynamicSinks
bool System::Runtime::Remoting::Contexts::Context::get_HasGlobalDynamicSinks() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::get_HasGlobalDynamicSinks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Contexts", "Context", "get_HasGlobalDynamicSinks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.Context.NotifyDynamicSinks
void System::Runtime::Remoting::Contexts::Context::NotifyDynamicSinks(bool start, System::Runtime::Remoting::Messaging::IMessage* req_msg, bool client_site, bool async) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::NotifyDynamicSinks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NotifyDynamicSinks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(req_msg), ::il2cpp_utils::ExtractType(client_site), ::il2cpp_utils::ExtractType(async)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, start, req_msg, client_site, async);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.Context.get_HasDynamicSinks
bool System::Runtime::Remoting::Contexts::Context::get_HasDynamicSinks() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::get_HasDynamicSinks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasDynamicSinks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.Context.get_HasExitSinks
bool System::Runtime::Remoting::Contexts::Context::get_HasExitSinks() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::get_HasExitSinks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasExitSinks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.Context.GetProperty
System::Runtime::Remoting::Contexts::IContextProperty* System::Runtime::Remoting::Contexts::Context::GetProperty(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::GetProperty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Contexts::IContextProperty*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.Context.SetProperty
void System::Runtime::Remoting::Contexts::Context::SetProperty(System::Runtime::Remoting::Contexts::IContextProperty* prop) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::SetProperty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prop)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, prop);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.Context.Freeze
void System::Runtime::Remoting::Contexts::Context::Freeze() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::Freeze");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Freeze", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.Context.GetServerContextSinkChain
System::Runtime::Remoting::Messaging::IMessageSink* System::Runtime::Remoting::Contexts::Context::GetServerContextSinkChain() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::GetServerContextSinkChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetServerContextSinkChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessageSink*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.Context.GetClientContextSinkChain
System::Runtime::Remoting::Messaging::IMessageSink* System::Runtime::Remoting::Contexts::Context::GetClientContextSinkChain() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::GetClientContextSinkChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClientContextSinkChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessageSink*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.Context.CreateServerObjectSinkChain
System::Runtime::Remoting::Messaging::IMessageSink* System::Runtime::Remoting::Contexts::Context::CreateServerObjectSinkChain(System::MarshalByRefObject* obj, bool forceInternalExecute) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::CreateServerObjectSinkChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateServerObjectSinkChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(forceInternalExecute)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessageSink*, false>(this, ___internal__method, obj, forceInternalExecute);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.Context.CreateEnvoySink
System::Runtime::Remoting::Messaging::IMessageSink* System::Runtime::Remoting::Contexts::Context::CreateEnvoySink(System::MarshalByRefObject* serverObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::CreateEnvoySink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateEnvoySink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverObject)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessageSink*, false>(this, ___internal__method, serverObject);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.Context.SwitchToContext
System::Runtime::Remoting::Contexts::Context* System::Runtime::Remoting::Contexts::Context::SwitchToContext(System::Runtime::Remoting::Contexts::Context* newContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::SwitchToContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Contexts", "Context", "SwitchToContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newContext)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Contexts::Context*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, newContext);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.Context.CreateNewContext
System::Runtime::Remoting::Contexts::Context* System::Runtime::Remoting::Contexts::Context::CreateNewContext(System::Runtime::Remoting::Activation::IConstructionCallMessage* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::CreateNewContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Contexts", "Context", "CreateNewContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Contexts::Context*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, msg);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.Context.DoCallBack
void System::Runtime::Remoting::Contexts::Context::DoCallBack(System::Runtime::Remoting::Contexts::CrossContextDelegate* deleg) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::DoCallBack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoCallBack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deleg)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, deleg);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.Context.get_MyLocalStore
System::LocalDataStore* System::Runtime::Remoting::Contexts::Context::get_MyLocalStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::get_MyLocalStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MyLocalStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::LocalDataStore*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.Context.AllocateDataSlot
System::LocalDataStoreSlot* System::Runtime::Remoting::Contexts::Context::AllocateDataSlot() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::AllocateDataSlot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Contexts", "Context", "AllocateDataSlot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::LocalDataStoreSlot*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot
System::LocalDataStoreSlot* System::Runtime::Remoting::Contexts::Context::AllocateNamedDataSlot(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::AllocateNamedDataSlot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Contexts", "Context", "AllocateNamedDataSlot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<System::LocalDataStoreSlot*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.Context.FreeNamedDataSlot
void System::Runtime::Remoting::Contexts::Context::FreeNamedDataSlot(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::FreeNamedDataSlot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Contexts", "Context", "FreeNamedDataSlot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.Context.GetNamedDataSlot
System::LocalDataStoreSlot* System::Runtime::Remoting::Contexts::Context::GetNamedDataSlot(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::GetNamedDataSlot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Contexts", "Context", "GetNamedDataSlot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<System::LocalDataStoreSlot*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.Context.GetData
::Il2CppObject* System::Runtime::Remoting::Contexts::Context::GetData(System::LocalDataStoreSlot* slot) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::GetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Contexts", "Context", "GetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slot)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, slot);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.Context.SetData
void System::Runtime::Remoting::Contexts::Context::SetData(System::LocalDataStoreSlot* slot, ::Il2CppObject* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Contexts", "Context", "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slot), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, slot, data);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.Context..cctor
void System::Runtime::Remoting::Contexts::Context::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Contexts", "Context", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.Context.Finalize
void System::Runtime::Remoting::Contexts::Context::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.Context.ToString
::Il2CppString* System::Runtime::Remoting::Contexts::Context::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::Context::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Contexts.DynamicPropertyCollection
#include "System/Runtime/Remoting/Contexts/DynamicPropertyCollection.hpp"
// Including type: System.Runtime.Remoting.Contexts.DynamicPropertyCollection/DynamicPropertyReg
#include "System/Runtime/Remoting/Contexts/DynamicPropertyCollection_DynamicPropertyReg.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Runtime.Remoting.Contexts.IDynamicProperty
#include "System/Runtime/Remoting/Contexts/IDynamicProperty.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessage
#include "System/Runtime/Remoting/Messaging/IMessage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Contexts.DynamicPropertyCollection.get_HasProperties
bool System::Runtime::Remoting::Contexts::DynamicPropertyCollection::get_HasProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::DynamicPropertyCollection::get_HasProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.DynamicPropertyCollection.RegisterDynamicProperty
bool System::Runtime::Remoting::Contexts::DynamicPropertyCollection::RegisterDynamicProperty(System::Runtime::Remoting::Contexts::IDynamicProperty* prop) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::DynamicPropertyCollection::RegisterDynamicProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterDynamicProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prop)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, prop);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.DynamicPropertyCollection.UnregisterDynamicProperty
bool System::Runtime::Remoting::Contexts::DynamicPropertyCollection::UnregisterDynamicProperty(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::DynamicPropertyCollection::UnregisterDynamicProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterDynamicProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.DynamicPropertyCollection.NotifyMessage
void System::Runtime::Remoting::Contexts::DynamicPropertyCollection::NotifyMessage(bool start, System::Runtime::Remoting::Messaging::IMessage* msg, bool client_site, bool async) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::DynamicPropertyCollection::NotifyMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NotifyMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(msg), ::il2cpp_utils::ExtractType(client_site), ::il2cpp_utils::ExtractType(async)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, start, msg, client_site, async);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.DynamicPropertyCollection.FindProperty
int System::Runtime::Remoting::Contexts::DynamicPropertyCollection::FindProperty(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::DynamicPropertyCollection::FindProperty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.Contexts.DynamicPropertyCollection/DynamicPropertyReg
#include "System/Runtime/Remoting/Contexts/DynamicPropertyCollection_DynamicPropertyReg.hpp"
// Including type: System.Runtime.Remoting.Contexts.IDynamicProperty
#include "System/Runtime/Remoting/Contexts/IDynamicProperty.hpp"
// Including type: System.Runtime.Remoting.Contexts.IDynamicMessageSink
#include "System/Runtime/Remoting/Contexts/IDynamicMessageSink.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.Contexts.ContextCallbackObject
#include "System/Runtime/Remoting/Contexts/ContextCallbackObject.hpp"
// Including type: System.Runtime.Remoting.Contexts.CrossContextDelegate
#include "System/Runtime/Remoting/Contexts/CrossContextDelegate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Contexts.ContextCallbackObject.DoCallBack
void System::Runtime::Remoting::Contexts::ContextCallbackObject::DoCallBack(System::Runtime::Remoting::Contexts::CrossContextDelegate* deleg) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::ContextCallbackObject::DoCallBack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoCallBack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deleg)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, deleg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.Contexts.CrossContextChannel
#include "System/Runtime/Remoting/Contexts/CrossContextChannel.hpp"
// Including type: System.Runtime.Remoting.Contexts.CrossContextChannel/ContextRestoreSink
#include "System/Runtime/Remoting/Contexts/CrossContextChannel_ContextRestoreSink.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessage
#include "System/Runtime/Remoting/Messaging/IMessage.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessageCtrl
#include "System/Runtime/Remoting/Messaging/IMessageCtrl.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Contexts.CrossContextChannel.SyncProcessMessage
System::Runtime::Remoting::Messaging::IMessage* System::Runtime::Remoting::Contexts::CrossContextChannel::SyncProcessMessage(System::Runtime::Remoting::Messaging::IMessage* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::CrossContextChannel::SyncProcessMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncProcessMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessage*, false>(this, ___internal__method, msg);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.CrossContextChannel.AsyncProcessMessage
System::Runtime::Remoting::Messaging::IMessageCtrl* System::Runtime::Remoting::Contexts::CrossContextChannel::AsyncProcessMessage(System::Runtime::Remoting::Messaging::IMessage* msg, System::Runtime::Remoting::Messaging::IMessageSink* replySink) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::CrossContextChannel::AsyncProcessMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AsyncProcessMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg), ::il2cpp_utils::ExtractType(replySink)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessageCtrl*, false>(this, ___internal__method, msg, replySink);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.Contexts.CrossContextChannel/ContextRestoreSink
#include "System/Runtime/Remoting/Contexts/CrossContextChannel_ContextRestoreSink.hpp"
// Including type: System.Runtime.Remoting.Contexts.Context
#include "System/Runtime/Remoting/Contexts/Context.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessage
#include "System/Runtime/Remoting/Messaging/IMessage.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessageCtrl
#include "System/Runtime/Remoting/Messaging/IMessageCtrl.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Contexts.CrossContextChannel/ContextRestoreSink.SyncProcessMessage
System::Runtime::Remoting::Messaging::IMessage* System::Runtime::Remoting::Contexts::CrossContextChannel::ContextRestoreSink::SyncProcessMessage(System::Runtime::Remoting::Messaging::IMessage* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::CrossContextChannel::ContextRestoreSink::SyncProcessMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncProcessMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessage*, false>(this, ___internal__method, msg);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.CrossContextChannel/ContextRestoreSink.AsyncProcessMessage
System::Runtime::Remoting::Messaging::IMessageCtrl* System::Runtime::Remoting::Contexts::CrossContextChannel::ContextRestoreSink::AsyncProcessMessage(System::Runtime::Remoting::Messaging::IMessage* msg, System::Runtime::Remoting::Messaging::IMessageSink* replySink) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::CrossContextChannel::ContextRestoreSink::AsyncProcessMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AsyncProcessMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg), ::il2cpp_utils::ExtractType(replySink)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessageCtrl*, false>(this, ___internal__method, msg, replySink);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Contexts.CrossContextDelegate
#include "System/Runtime/Remoting/Contexts/CrossContextDelegate.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Contexts.CrossContextDelegate.Invoke
void System::Runtime::Remoting::Contexts::CrossContextDelegate::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::CrossContextDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.CrossContextDelegate.BeginInvoke
System::IAsyncResult* System::Runtime::Remoting::Contexts::CrossContextDelegate::BeginInvoke(System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::CrossContextDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.CrossContextDelegate.EndInvoke
void System::Runtime::Remoting::Contexts::CrossContextDelegate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::CrossContextDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.Contexts.IContextAttribute
#include "System/Runtime/Remoting/Contexts/IContextAttribute.hpp"
// Including type: System.Runtime.Remoting.Activation.IConstructionCallMessage
#include "System/Runtime/Remoting/Activation/IConstructionCallMessage.hpp"
// Including type: System.Runtime.Remoting.Contexts.Context
#include "System/Runtime/Remoting/Contexts/Context.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Contexts.IContextAttribute.GetPropertiesForNewContext
void System::Runtime::Remoting::Contexts::IContextAttribute::GetPropertiesForNewContext(System::Runtime::Remoting::Activation::IConstructionCallMessage* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::IContextAttribute::GetPropertiesForNewContext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPropertiesForNewContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.IContextAttribute.IsContextOK
bool System::Runtime::Remoting::Contexts::IContextAttribute::IsContextOK(System::Runtime::Remoting::Contexts::Context* ctx, System::Runtime::Remoting::Activation::IConstructionCallMessage* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::IContextAttribute::IsContextOK");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsContextOK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx), ::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, ctx, msg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Contexts.IContextProperty
#include "System/Runtime/Remoting/Contexts/IContextProperty.hpp"
// Including type: System.Runtime.Remoting.Contexts.Context
#include "System/Runtime/Remoting/Contexts/Context.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Contexts.IContextProperty.get_Name
::Il2CppString* System::Runtime::Remoting::Contexts::IContextProperty::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::IContextProperty::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.IContextProperty.Freeze
void System::Runtime::Remoting::Contexts::IContextProperty::Freeze(System::Runtime::Remoting::Contexts::Context* newContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::IContextProperty::Freeze");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Freeze", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newContext)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newContext);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.IContextProperty.IsNewContextOK
bool System::Runtime::Remoting::Contexts::IContextProperty::IsNewContextOK(System::Runtime::Remoting::Contexts::Context* newCtx) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::IContextProperty::IsNewContextOK");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsNewContextOK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newCtx)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, newCtx);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.Contexts.IContributeClientContextSink
#include "System/Runtime/Remoting/Contexts/IContributeClientContextSink.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessageSink
#include "System/Runtime/Remoting/Messaging/IMessageSink.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Contexts.IContributeClientContextSink.GetClientContextSink
System::Runtime::Remoting::Messaging::IMessageSink* System::Runtime::Remoting::Contexts::IContributeClientContextSink::GetClientContextSink(System::Runtime::Remoting::Messaging::IMessageSink* nextSink) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::IContributeClientContextSink::GetClientContextSink");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetClientContextSink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nextSink)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessageSink*, false>(this, ___internal__method, nextSink);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.Contexts.IContributeDynamicSink
#include "System/Runtime/Remoting/Contexts/IContributeDynamicSink.hpp"
// Including type: System.Runtime.Remoting.Contexts.IDynamicMessageSink
#include "System/Runtime/Remoting/Contexts/IDynamicMessageSink.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Contexts.IContributeDynamicSink.GetDynamicSink
System::Runtime::Remoting::Contexts::IDynamicMessageSink* System::Runtime::Remoting::Contexts::IContributeDynamicSink::GetDynamicSink() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::IContributeDynamicSink::GetDynamicSink");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDynamicSink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Contexts::IDynamicMessageSink*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.Contexts.IContributeEnvoySink
#include "System/Runtime/Remoting/Contexts/IContributeEnvoySink.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessageSink
#include "System/Runtime/Remoting/Messaging/IMessageSink.hpp"
// Including type: System.MarshalByRefObject
#include "System/MarshalByRefObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Contexts.IContributeEnvoySink.GetEnvoySink
System::Runtime::Remoting::Messaging::IMessageSink* System::Runtime::Remoting::Contexts::IContributeEnvoySink::GetEnvoySink(System::MarshalByRefObject* obj, System::Runtime::Remoting::Messaging::IMessageSink* nextSink) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::IContributeEnvoySink::GetEnvoySink");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnvoySink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(nextSink)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessageSink*, false>(this, ___internal__method, obj, nextSink);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.Contexts.IContributeObjectSink
#include "System/Runtime/Remoting/Contexts/IContributeObjectSink.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessageSink
#include "System/Runtime/Remoting/Messaging/IMessageSink.hpp"
// Including type: System.MarshalByRefObject
#include "System/MarshalByRefObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Contexts.IContributeObjectSink.GetObjectSink
System::Runtime::Remoting::Messaging::IMessageSink* System::Runtime::Remoting::Contexts::IContributeObjectSink::GetObjectSink(System::MarshalByRefObject* obj, System::Runtime::Remoting::Messaging::IMessageSink* nextSink) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::IContributeObjectSink::GetObjectSink");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectSink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(nextSink)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessageSink*, false>(this, ___internal__method, obj, nextSink);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.Contexts.IContributeServerContextSink
#include "System/Runtime/Remoting/Contexts/IContributeServerContextSink.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessageSink
#include "System/Runtime/Remoting/Messaging/IMessageSink.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Contexts.IContributeServerContextSink.GetServerContextSink
System::Runtime::Remoting::Messaging::IMessageSink* System::Runtime::Remoting::Contexts::IContributeServerContextSink::GetServerContextSink(System::Runtime::Remoting::Messaging::IMessageSink* nextSink) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::IContributeServerContextSink::GetServerContextSink");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetServerContextSink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nextSink)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessageSink*, false>(this, ___internal__method, nextSink);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.Contexts.IDynamicMessageSink
#include "System/Runtime/Remoting/Contexts/IDynamicMessageSink.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessage
#include "System/Runtime/Remoting/Messaging/IMessage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Contexts.IDynamicMessageSink.ProcessMessageFinish
void System::Runtime::Remoting::Contexts::IDynamicMessageSink::ProcessMessageFinish(System::Runtime::Remoting::Messaging::IMessage* replyMsg, bool bCliSide, bool bAsync) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::IDynamicMessageSink::ProcessMessageFinish");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessMessageFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(replyMsg), ::il2cpp_utils::ExtractType(bCliSide), ::il2cpp_utils::ExtractType(bAsync)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, replyMsg, bCliSide, bAsync);
}
// Autogenerated method: System.Runtime.Remoting.Contexts.IDynamicMessageSink.ProcessMessageStart
void System::Runtime::Remoting::Contexts::IDynamicMessageSink::ProcessMessageStart(System::Runtime::Remoting::Messaging::IMessage* reqMsg, bool bCliSide, bool bAsync) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::IDynamicMessageSink::ProcessMessageStart");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessMessageStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reqMsg), ::il2cpp_utils::ExtractType(bCliSide), ::il2cpp_utils::ExtractType(bAsync)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reqMsg, bCliSide, bAsync);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Contexts.IDynamicProperty
#include "System/Runtime/Remoting/Contexts/IDynamicProperty.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Contexts.IDynamicProperty.get_Name
::Il2CppString* System::Runtime::Remoting::Contexts::IDynamicProperty::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Contexts::IDynamicProperty::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Channels.ChannelServices
#include "System/Runtime/Remoting/Channels/ChannelServices.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Runtime.Remoting.Contexts.CrossContextChannel
#include "System/Runtime/Remoting/Contexts/CrossContextChannel.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessageSink
#include "System/Runtime/Remoting/Messaging/IMessageSink.hpp"
// Including type: System.Runtime.Remoting.Channels.IChannelSender
#include "System/Runtime/Remoting/Channels/IChannelSender.hpp"
// Including type: System.Runtime.Remoting.Channels.IChannel
#include "System/Runtime/Remoting/Channels/IChannel.hpp"
// Including type: System.Runtime.Remoting.ChannelData
#include "System/Runtime/Remoting/ChannelData.hpp"
// Including type: System.Runtime.Remoting.ProviderData
#include "System/Runtime/Remoting/ProviderData.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessage
#include "System/Runtime/Remoting/Messaging/IMessage.hpp"
// Including type: System.Runtime.Remoting.Messaging.ReturnMessage
#include "System/Runtime/Remoting/Messaging/ReturnMessage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.ArrayList registeredChannels
System::Collections::ArrayList* System::Runtime::Remoting::Channels::ChannelServices::_get_registeredChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::ChannelServices::_get_registeredChannels");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::ArrayList*>("System.Runtime.Remoting.Channels", "ChannelServices", "registeredChannels"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.ArrayList registeredChannels
void System::Runtime::Remoting::Channels::ChannelServices::_set_registeredChannels(System::Collections::ArrayList* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::ChannelServices::_set_registeredChannels");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting.Channels", "ChannelServices", "registeredChannels", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.ArrayList delayedClientChannels
System::Collections::ArrayList* System::Runtime::Remoting::Channels::ChannelServices::_get_delayedClientChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::ChannelServices::_get_delayedClientChannels");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::ArrayList*>("System.Runtime.Remoting.Channels", "ChannelServices", "delayedClientChannels"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.ArrayList delayedClientChannels
void System::Runtime::Remoting::Channels::ChannelServices::_set_delayedClientChannels(System::Collections::ArrayList* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::ChannelServices::_set_delayedClientChannels");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting.Channels", "ChannelServices", "delayedClientChannels", value));
}
// Autogenerated static field getter
// Get static field: static private System.Runtime.Remoting.Contexts.CrossContextChannel _crossContextSink
System::Runtime::Remoting::Contexts::CrossContextChannel* System::Runtime::Remoting::Channels::ChannelServices::_get__crossContextSink() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::ChannelServices::_get__crossContextSink");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Remoting::Contexts::CrossContextChannel*>("System.Runtime.Remoting.Channels", "ChannelServices", "_crossContextSink"));
}
// Autogenerated static field setter
// Set static field: static private System.Runtime.Remoting.Contexts.CrossContextChannel _crossContextSink
void System::Runtime::Remoting::Channels::ChannelServices::_set__crossContextSink(System::Runtime::Remoting::Contexts::CrossContextChannel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::ChannelServices::_set__crossContextSink");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting.Channels", "ChannelServices", "_crossContextSink", value));
}
// Autogenerated static field getter
// Get static field: static System.String CrossContextUrl
::Il2CppString* System::Runtime::Remoting::Channels::ChannelServices::_get_CrossContextUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::ChannelServices::_get_CrossContextUrl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Runtime.Remoting.Channels", "ChannelServices", "CrossContextUrl"));
}
// Autogenerated static field setter
// Set static field: static System.String CrossContextUrl
void System::Runtime::Remoting::Channels::ChannelServices::_set_CrossContextUrl(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::ChannelServices::_set_CrossContextUrl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting.Channels", "ChannelServices", "CrossContextUrl", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.IList oldStartModeTypes
System::Collections::IList* System::Runtime::Remoting::Channels::ChannelServices::_get_oldStartModeTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::ChannelServices::_get_oldStartModeTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::IList*>("System.Runtime.Remoting.Channels", "ChannelServices", "oldStartModeTypes"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.IList oldStartModeTypes
void System::Runtime::Remoting::Channels::ChannelServices::_set_oldStartModeTypes(System::Collections::IList* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::ChannelServices::_set_oldStartModeTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting.Channels", "ChannelServices", "oldStartModeTypes", value));
}
// Autogenerated method: System.Runtime.Remoting.Channels.ChannelServices.get_CrossContextChannel
System::Runtime::Remoting::Contexts::CrossContextChannel* System::Runtime::Remoting::Channels::ChannelServices::get_CrossContextChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::ChannelServices::get_CrossContextChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Channels", "ChannelServices", "get_CrossContextChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Contexts::CrossContextChannel*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Channels.ChannelServices.CreateClientChannelSinkChain
System::Runtime::Remoting::Messaging::IMessageSink* System::Runtime::Remoting::Channels::ChannelServices::CreateClientChannelSinkChain(::Il2CppString* url, ::Il2CppObject* remoteChannelData, ::Il2CppString*& objectUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::ChannelServices::CreateClientChannelSinkChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Channels", "ChannelServices", "CreateClientChannelSinkChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(remoteChannelData), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>()})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessageSink*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, url, remoteChannelData, objectUri);
}
// Autogenerated method: System.Runtime.Remoting.Channels.ChannelServices.CreateClientChannelSinkChain
System::Runtime::Remoting::Messaging::IMessageSink* System::Runtime::Remoting::Channels::ChannelServices::CreateClientChannelSinkChain(System::Runtime::Remoting::Channels::IChannelSender* sender, ::Il2CppString* url, ::Array<::Il2CppObject*>* channelDataArray, ::Il2CppString*& objectUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::ChannelServices::CreateClientChannelSinkChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Channels", "ChannelServices", "CreateClientChannelSinkChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(channelDataArray), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>()})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessageSink*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sender, url, channelDataArray, objectUri);
}
// Autogenerated method: System.Runtime.Remoting.Channels.ChannelServices.RegisterChannel
void System::Runtime::Remoting::Channels::ChannelServices::RegisterChannel(System::Runtime::Remoting::Channels::IChannel* chnl) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::ChannelServices::RegisterChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Channels", "ChannelServices", "RegisterChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chnl)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, chnl);
}
// Autogenerated method: System.Runtime.Remoting.Channels.ChannelServices.RegisterChannel
void System::Runtime::Remoting::Channels::ChannelServices::RegisterChannel(System::Runtime::Remoting::Channels::IChannel* chnl, bool ensureSecurity) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::ChannelServices::RegisterChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Channels", "ChannelServices", "RegisterChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(chnl), ::il2cpp_utils::ExtractType(ensureSecurity)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, chnl, ensureSecurity);
}
// Autogenerated method: System.Runtime.Remoting.Channels.ChannelServices.RegisterChannelConfig
void System::Runtime::Remoting::Channels::ChannelServices::RegisterChannelConfig(System::Runtime::Remoting::ChannelData* channel) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::ChannelServices::RegisterChannelConfig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Channels", "ChannelServices", "RegisterChannelConfig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channel)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, channel);
}
// Autogenerated method: System.Runtime.Remoting.Channels.ChannelServices.CreateProvider
::Il2CppObject* System::Runtime::Remoting::Channels::ChannelServices::CreateProvider(System::Runtime::Remoting::ProviderData* prov) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::ChannelServices::CreateProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Channels", "ChannelServices", "CreateProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prov)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, prov);
}
// Autogenerated method: System.Runtime.Remoting.Channels.ChannelServices.SyncDispatchMessage
System::Runtime::Remoting::Messaging::IMessage* System::Runtime::Remoting::Channels::ChannelServices::SyncDispatchMessage(System::Runtime::Remoting::Messaging::IMessage* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::ChannelServices::SyncDispatchMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Channels", "ChannelServices", "SyncDispatchMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessage*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, msg);
}
// Autogenerated method: System.Runtime.Remoting.Channels.ChannelServices.CheckIncomingMessage
System::Runtime::Remoting::Messaging::ReturnMessage* System::Runtime::Remoting::Channels::ChannelServices::CheckIncomingMessage(System::Runtime::Remoting::Messaging::IMessage* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::ChannelServices::CheckIncomingMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Channels", "ChannelServices", "CheckIncomingMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::ReturnMessage*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, msg);
}
// Autogenerated method: System.Runtime.Remoting.Channels.ChannelServices.CheckReturnMessage
System::Runtime::Remoting::Messaging::IMessage* System::Runtime::Remoting::Channels::ChannelServices::CheckReturnMessage(System::Runtime::Remoting::Messaging::IMessage* callMsg, System::Runtime::Remoting::Messaging::IMessage* retMsg) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::ChannelServices::CheckReturnMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Channels", "ChannelServices", "CheckReturnMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callMsg), ::il2cpp_utils::ExtractType(retMsg)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessage*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callMsg, retMsg);
}
// Autogenerated method: System.Runtime.Remoting.Channels.ChannelServices.IsLocalCall
bool System::Runtime::Remoting::Channels::ChannelServices::IsLocalCall(System::Runtime::Remoting::Messaging::IMessage* callMsg) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::ChannelServices::IsLocalCall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Channels", "ChannelServices", "IsLocalCall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callMsg)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callMsg);
}
// Autogenerated method: System.Runtime.Remoting.Channels.ChannelServices.GetCurrentChannelInfo
::Array<::Il2CppObject*>* System::Runtime::Remoting::Channels::ChannelServices::GetCurrentChannelInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::ChannelServices::GetCurrentChannelInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Channels", "ChannelServices", "GetCurrentChannelInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppObject*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Channels.ChannelServices..cctor
void System::Runtime::Remoting::Channels::ChannelServices::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::ChannelServices::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Channels", "ChannelServices", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Channels.CrossAppDomainData
#include "System/Runtime/Remoting/Channels/CrossAppDomainData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Channels.CrossAppDomainData.get_DomainID
int System::Runtime::Remoting::Channels::CrossAppDomainData::get_DomainID() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::CrossAppDomainData::get_DomainID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DomainID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Channels.CrossAppDomainData.get_ProcessID
::Il2CppString* System::Runtime::Remoting::Channels::CrossAppDomainData::get_ProcessID() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::CrossAppDomainData::get_ProcessID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProcessID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Channels.CrossAppDomainChannel
#include "System/Runtime/Remoting/Channels/CrossAppDomainChannel.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessageSink
#include "System/Runtime/Remoting/Messaging/IMessageSink.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Object s_lock
::Il2CppObject* System::Runtime::Remoting::Channels::CrossAppDomainChannel::_get_s_lock() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::CrossAppDomainChannel::_get_s_lock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Runtime.Remoting.Channels", "CrossAppDomainChannel", "s_lock"));
}
// Autogenerated static field setter
// Set static field: static private System.Object s_lock
void System::Runtime::Remoting::Channels::CrossAppDomainChannel::_set_s_lock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::CrossAppDomainChannel::_set_s_lock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting.Channels", "CrossAppDomainChannel", "s_lock", value));
}
// Autogenerated method: System.Runtime.Remoting.Channels.CrossAppDomainChannel.RegisterCrossAppDomainChannel
void System::Runtime::Remoting::Channels::CrossAppDomainChannel::RegisterCrossAppDomainChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::CrossAppDomainChannel::RegisterCrossAppDomainChannel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Channels", "CrossAppDomainChannel", "RegisterCrossAppDomainChannel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Channels.CrossAppDomainChannel.get_ChannelName
::Il2CppString* System::Runtime::Remoting::Channels::CrossAppDomainChannel::get_ChannelName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::CrossAppDomainChannel::get_ChannelName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChannelName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Channels.CrossAppDomainChannel.get_ChannelPriority
int System::Runtime::Remoting::Channels::CrossAppDomainChannel::get_ChannelPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::CrossAppDomainChannel::get_ChannelPriority");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChannelPriority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Channels.CrossAppDomainChannel.get_ChannelData
::Il2CppObject* System::Runtime::Remoting::Channels::CrossAppDomainChannel::get_ChannelData() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::CrossAppDomainChannel::get_ChannelData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChannelData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Channels.CrossAppDomainChannel.StartListening
void System::Runtime::Remoting::Channels::CrossAppDomainChannel::StartListening(::Il2CppObject* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::CrossAppDomainChannel::StartListening");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartListening", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Runtime.Remoting.Channels.CrossAppDomainChannel.CreateMessageSink
System::Runtime::Remoting::Messaging::IMessageSink* System::Runtime::Remoting::Channels::CrossAppDomainChannel::CreateMessageSink(::Il2CppString* url, ::Il2CppObject* data, ::Il2CppString*& uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::CrossAppDomainChannel::CreateMessageSink");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateMessageSink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>()})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessageSink*, false>(this, ___internal__method, url, data, uri);
}
// Autogenerated method: System.Runtime.Remoting.Channels.CrossAppDomainChannel..cctor
void System::Runtime::Remoting::Channels::CrossAppDomainChannel::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::CrossAppDomainChannel::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Channels", "CrossAppDomainChannel", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Channels.CrossAppDomainSink
#include "System/Runtime/Remoting/Channels/CrossAppDomainSink.hpp"
// Including type: System.Runtime.Remoting.Channels.CrossAppDomainSink/ProcessMessageRes
#include "System/Runtime/Remoting/Channels/CrossAppDomainSink_ProcessMessageRes.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Runtime.Remoting.Messaging.CADMethodCallMessage
#include "System/Runtime/Remoting/Messaging/CADMethodCallMessage.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessage
#include "System/Runtime/Remoting/Messaging/IMessage.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessageCtrl
#include "System/Runtime/Remoting/Messaging/IMessageCtrl.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable s_sinks
System::Collections::Hashtable* System::Runtime::Remoting::Channels::CrossAppDomainSink::_get_s_sinks() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::CrossAppDomainSink::_get_s_sinks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Hashtable*>("System.Runtime.Remoting.Channels", "CrossAppDomainSink", "s_sinks"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable s_sinks
void System::Runtime::Remoting::Channels::CrossAppDomainSink::_set_s_sinks(System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::CrossAppDomainSink::_set_s_sinks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting.Channels", "CrossAppDomainSink", "s_sinks", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.MethodInfo processMessageMethod
System::Reflection::MethodInfo* System::Runtime::Remoting::Channels::CrossAppDomainSink::_get_processMessageMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::CrossAppDomainSink::_get_processMessageMethod");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::MethodInfo*>("System.Runtime.Remoting.Channels", "CrossAppDomainSink", "processMessageMethod"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.MethodInfo processMessageMethod
void System::Runtime::Remoting::Channels::CrossAppDomainSink::_set_processMessageMethod(System::Reflection::MethodInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::CrossAppDomainSink::_set_processMessageMethod");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting.Channels", "CrossAppDomainSink", "processMessageMethod", value));
}
// Autogenerated method: System.Runtime.Remoting.Channels.CrossAppDomainSink.GetSink
System::Runtime::Remoting::Channels::CrossAppDomainSink* System::Runtime::Remoting::Channels::CrossAppDomainSink::GetSink(int domainID) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::CrossAppDomainSink::GetSink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Channels", "CrossAppDomainSink", "GetSink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(domainID)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Channels::CrossAppDomainSink*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, domainID);
}
// Autogenerated method: System.Runtime.Remoting.Channels.CrossAppDomainSink.get_TargetDomainId
int System::Runtime::Remoting::Channels::CrossAppDomainSink::get_TargetDomainId() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::CrossAppDomainSink::get_TargetDomainId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetDomainId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Channels.CrossAppDomainSink.ProcessMessageInDomain
System::Runtime::Remoting::Channels::CrossAppDomainSink::ProcessMessageRes System::Runtime::Remoting::Channels::CrossAppDomainSink::ProcessMessageInDomain(::Array<uint8_t>* arrRequest, System::Runtime::Remoting::Messaging::CADMethodCallMessage* cadMsg) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::CrossAppDomainSink::ProcessMessageInDomain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Channels", "CrossAppDomainSink", "ProcessMessageInDomain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arrRequest), ::il2cpp_utils::ExtractType(cadMsg)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Channels::CrossAppDomainSink::ProcessMessageRes, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, arrRequest, cadMsg);
}
// Autogenerated method: System.Runtime.Remoting.Channels.CrossAppDomainSink.SyncProcessMessage
System::Runtime::Remoting::Messaging::IMessage* System::Runtime::Remoting::Channels::CrossAppDomainSink::SyncProcessMessage(System::Runtime::Remoting::Messaging::IMessage* msgRequest) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::CrossAppDomainSink::SyncProcessMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncProcessMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msgRequest)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessage*, false>(this, ___internal__method, msgRequest);
}
// Autogenerated method: System.Runtime.Remoting.Channels.CrossAppDomainSink.AsyncProcessMessage
System::Runtime::Remoting::Messaging::IMessageCtrl* System::Runtime::Remoting::Channels::CrossAppDomainSink::AsyncProcessMessage(System::Runtime::Remoting::Messaging::IMessage* reqMsg, System::Runtime::Remoting::Messaging::IMessageSink* replySink) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::CrossAppDomainSink::AsyncProcessMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AsyncProcessMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reqMsg), ::il2cpp_utils::ExtractType(replySink)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessageCtrl*, false>(this, ___internal__method, reqMsg, replySink);
}
// Autogenerated method: System.Runtime.Remoting.Channels.CrossAppDomainSink.SendAsyncMessage
void System::Runtime::Remoting::Channels::CrossAppDomainSink::SendAsyncMessage(::Il2CppObject* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::CrossAppDomainSink::SendAsyncMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAsyncMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Runtime.Remoting.Channels.CrossAppDomainSink..cctor
void System::Runtime::Remoting::Channels::CrossAppDomainSink::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::CrossAppDomainSink::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Channels", "CrossAppDomainSink", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Channels.CrossAppDomainSink.<AsyncProcessMessage>b__10_0
void System::Runtime::Remoting::Channels::CrossAppDomainSink::$AsyncProcessMessage$b__10_0(::Il2CppObject* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::CrossAppDomainSink::<AsyncProcessMessage>b__10_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AsyncProcessMessage>b__10_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Channels.CADSerializer
#include "System/Runtime/Remoting/Channels/CADSerializer.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessage
#include "System/Runtime/Remoting/Messaging/IMessage.hpp"
// Including type: System.IO.MemoryStream
#include "System/IO/MemoryStream.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMethodCallMessage
#include "System/Runtime/Remoting/Messaging/IMethodCallMessage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Channels.CADSerializer.DeserializeMessage
System::Runtime::Remoting::Messaging::IMessage* System::Runtime::Remoting::Channels::CADSerializer::DeserializeMessage(System::IO::MemoryStream* mem, System::Runtime::Remoting::Messaging::IMethodCallMessage* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::CADSerializer::DeserializeMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Channels", "CADSerializer", "DeserializeMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mem), ::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessage*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mem, msg);
}
// Autogenerated method: System.Runtime.Remoting.Channels.CADSerializer.SerializeMessage
System::IO::MemoryStream* System::Runtime::Remoting::Channels::CADSerializer::SerializeMessage(System::Runtime::Remoting::Messaging::IMessage* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::CADSerializer::SerializeMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Channels", "CADSerializer", "SerializeMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodThrow<System::IO::MemoryStream*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, msg);
}
// Autogenerated method: System.Runtime.Remoting.Channels.CADSerializer.DeserializeObjectSafe
::Il2CppObject* System::Runtime::Remoting::Channels::CADSerializer::DeserializeObjectSafe(::Array<uint8_t>* mem) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::CADSerializer::DeserializeObjectSafe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Channels", "CADSerializer", "DeserializeObjectSafe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mem)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mem);
}
// Autogenerated method: System.Runtime.Remoting.Channels.CADSerializer.SerializeObject
System::IO::MemoryStream* System::Runtime::Remoting::Channels::CADSerializer::SerializeObject(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::CADSerializer::SerializeObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Channels", "CADSerializer", "SerializeObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<System::IO::MemoryStream*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Runtime.Remoting.Channels.CADSerializer.DeserializeObject
::Il2CppObject* System::Runtime::Remoting::Channels::CADSerializer::DeserializeObject(System::IO::MemoryStream* mem) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::CADSerializer::DeserializeObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Channels", "CADSerializer", "DeserializeObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mem)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mem);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.Channels.AsyncRequest
#include "System/Runtime/Remoting/Channels/AsyncRequest.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessageSink
#include "System/Runtime/Remoting/Messaging/IMessageSink.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessage
#include "System/Runtime/Remoting/Messaging/IMessage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Channels.IChannel
#include "System/Runtime/Remoting/Channels/IChannel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Channels.IChannel.get_ChannelName
::Il2CppString* System::Runtime::Remoting::Channels::IChannel::get_ChannelName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::IChannel::get_ChannelName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChannelName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Channels.IChannel.get_ChannelPriority
int System::Runtime::Remoting::Channels::IChannel::get_ChannelPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::IChannel::get_ChannelPriority");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChannelPriority", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Channels.IChannelReceiver
#include "System/Runtime/Remoting/Channels/IChannelReceiver.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Channels.IChannelReceiver.get_ChannelData
::Il2CppObject* System::Runtime::Remoting::Channels::IChannelReceiver::get_ChannelData() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::IChannelReceiver::get_ChannelData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChannelData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Channels.IChannelReceiver.StartListening
void System::Runtime::Remoting::Channels::IChannelReceiver::StartListening(::Il2CppObject* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::IChannelReceiver::StartListening");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartListening", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Channels.IChannelSender
#include "System/Runtime/Remoting/Channels/IChannelSender.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessageSink
#include "System/Runtime/Remoting/Messaging/IMessageSink.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink
System::Runtime::Remoting::Messaging::IMessageSink* System::Runtime::Remoting::Channels::IChannelSender::CreateMessageSink(::Il2CppString* url, ::Il2CppObject* remoteChannelData, ::Il2CppString*& objectURI) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::IChannelSender::CreateMessageSink");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateMessageSink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(url), ::il2cpp_utils::ExtractType(remoteChannelData), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>()})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessageSink*, false>(this, ___internal__method, url, remoteChannelData, objectURI);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.Channels.IClientChannelSinkProvider
#include "System/Runtime/Remoting/Channels/IClientChannelSinkProvider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Channels.IClientChannelSinkProvider.set_Next
void System::Runtime::Remoting::Channels::IClientChannelSinkProvider::set_Next(System::Runtime::Remoting::Channels::IClientChannelSinkProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::IClientChannelSinkProvider::set_Next");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Next", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.Channels.ISecurableChannel
#include "System/Runtime/Remoting/Channels/ISecurableChannel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Channels.ISecurableChannel.set_IsSecured
void System::Runtime::Remoting::Channels::ISecurableChannel::set_IsSecured(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::ISecurableChannel::set_IsSecured");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsSecured", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.Channels.IServerChannelSinkProvider
#include "System/Runtime/Remoting/Channels/IServerChannelSinkProvider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Channels.IServerChannelSinkProvider.set_Next
void System::Runtime::Remoting::Channels::IServerChannelSinkProvider::set_Next(System::Runtime::Remoting::Channels::IServerChannelSinkProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::IServerChannelSinkProvider::set_Next");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Next", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Channels.SinkProviderData
#include "System/Runtime/Remoting/Channels/SinkProviderData.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Channels.SinkProviderData.get_Children
System::Collections::IList* System::Runtime::Remoting::Channels::SinkProviderData::get_Children() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::SinkProviderData::get_Children");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Children", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Channels.SinkProviderData.get_Properties
System::Collections::IDictionary* System::Runtime::Remoting::Channels::SinkProviderData::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Channels::SinkProviderData::get_Properties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IDictionary*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Activation.ActivationServices
#include "System/Runtime/Remoting/Activation/ActivationServices.hpp"
// Including type: System.Runtime.Remoting.Activation.IActivator
#include "System/Runtime/Remoting/Activation/IActivator.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessage
#include "System/Runtime/Remoting/Messaging/IMessage.hpp"
// Including type: System.Runtime.Remoting.Proxies.RemotingProxy
#include "System/Runtime/Remoting/Proxies/RemotingProxy.hpp"
// Including type: System.Runtime.Remoting.Messaging.ConstructionCall
#include "System/Runtime/Remoting/Messaging/ConstructionCall.hpp"
// Including type: System.Runtime.Remoting.Activation.IConstructionCallMessage
#include "System/Runtime/Remoting/Activation/IConstructionCallMessage.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Runtime.Remoting.Activation.IActivator _constructionActivator
System::Runtime::Remoting::Activation::IActivator* System::Runtime::Remoting::Activation::ActivationServices::_get__constructionActivator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Activation::ActivationServices::_get__constructionActivator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Remoting::Activation::IActivator*>("System.Runtime.Remoting.Activation", "ActivationServices", "_constructionActivator"));
}
// Autogenerated static field setter
// Set static field: static private System.Runtime.Remoting.Activation.IActivator _constructionActivator
void System::Runtime::Remoting::Activation::ActivationServices::_set__constructionActivator(System::Runtime::Remoting::Activation::IActivator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Activation::ActivationServices::_set__constructionActivator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting.Activation", "ActivationServices", "_constructionActivator", value));
}
// Autogenerated method: System.Runtime.Remoting.Activation.ActivationServices.get_ConstructionActivator
System::Runtime::Remoting::Activation::IActivator* System::Runtime::Remoting::Activation::ActivationServices::get_ConstructionActivator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Activation::ActivationServices::get_ConstructionActivator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Activation", "ActivationServices", "get_ConstructionActivator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Activation::IActivator*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Activation.ActivationServices.Activate
System::Runtime::Remoting::Messaging::IMessage* System::Runtime::Remoting::Activation::ActivationServices::Activate(System::Runtime::Remoting::Proxies::RemotingProxy* proxy, System::Runtime::Remoting::Messaging::ConstructionCall* ctorCall) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Activation::ActivationServices::Activate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Activation", "ActivationServices", "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proxy), ::il2cpp_utils::ExtractType(ctorCall)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessage*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, proxy, ctorCall);
}
// Autogenerated method: System.Runtime.Remoting.Activation.ActivationServices.RemoteActivate
System::Runtime::Remoting::Messaging::IMessage* System::Runtime::Remoting::Activation::ActivationServices::RemoteActivate(System::Runtime::Remoting::Activation::IConstructionCallMessage* ctorCall) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Activation::ActivationServices::RemoteActivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Activation", "ActivationServices", "RemoteActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctorCall)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessage*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ctorCall);
}
// Autogenerated method: System.Runtime.Remoting.Activation.ActivationServices.CreateConstructionCall
System::Runtime::Remoting::Messaging::ConstructionCall* System::Runtime::Remoting::Activation::ActivationServices::CreateConstructionCall(System::Type* type, ::Il2CppString* activationUrl, ::Array<::Il2CppObject*>* activationAttributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Activation::ActivationServices::CreateConstructionCall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Activation", "ActivationServices", "CreateConstructionCall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(activationUrl), ::il2cpp_utils::ExtractType(activationAttributes)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::ConstructionCall*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, activationUrl, activationAttributes);
}
// Autogenerated method: System.Runtime.Remoting.Activation.ActivationServices.CreateInstanceFromMessage
System::Runtime::Remoting::Messaging::IMessage* System::Runtime::Remoting::Activation::ActivationServices::CreateInstanceFromMessage(System::Runtime::Remoting::Activation::IConstructionCallMessage* ctorCall) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Activation::ActivationServices::CreateInstanceFromMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Activation", "ActivationServices", "CreateInstanceFromMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctorCall)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessage*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ctorCall);
}
// Autogenerated method: System.Runtime.Remoting.Activation.ActivationServices.CreateProxyForType
::Il2CppObject* System::Runtime::Remoting::Activation::ActivationServices::CreateProxyForType(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Activation::ActivationServices::CreateProxyForType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Activation", "ActivationServices", "CreateProxyForType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Runtime.Remoting.Activation.ActivationServices.AllocateUninitializedClassInstance
::Il2CppObject* System::Runtime::Remoting::Activation::ActivationServices::AllocateUninitializedClassInstance(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Activation::ActivationServices::AllocateUninitializedClassInstance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Activation", "ActivationServices", "AllocateUninitializedClassInstance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Runtime.Remoting.Activation.ActivationServices.EnableProxyActivation
void System::Runtime::Remoting::Activation::ActivationServices::EnableProxyActivation(System::Type* type, bool enable) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Activation::ActivationServices::EnableProxyActivation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Activation", "ActivationServices", "EnableProxyActivation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(enable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, enable);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Activation.AppDomainLevelActivator
#include "System/Runtime/Remoting/Activation/AppDomainLevelActivator.hpp"
// Including type: System.Runtime.Remoting.Activation.IConstructionReturnMessage
#include "System/Runtime/Remoting/Activation/IConstructionReturnMessage.hpp"
// Including type: System.Runtime.Remoting.Activation.IConstructionCallMessage
#include "System/Runtime/Remoting/Activation/IConstructionCallMessage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Activation.AppDomainLevelActivator.get_NextActivator
System::Runtime::Remoting::Activation::IActivator* System::Runtime::Remoting::Activation::AppDomainLevelActivator::get_NextActivator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Activation::AppDomainLevelActivator::get_NextActivator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NextActivator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Activation::IActivator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Activation.AppDomainLevelActivator.Activate
System::Runtime::Remoting::Activation::IConstructionReturnMessage* System::Runtime::Remoting::Activation::AppDomainLevelActivator::Activate(System::Runtime::Remoting::Activation::IConstructionCallMessage* ctorCall) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Activation::AppDomainLevelActivator::Activate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctorCall)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Activation::IConstructionReturnMessage*, false>(this, ___internal__method, ctorCall);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.Activation.ConstructionLevelActivator
#include "System/Runtime/Remoting/Activation/ConstructionLevelActivator.hpp"
// Including type: System.Runtime.Remoting.Activation.IConstructionReturnMessage
#include "System/Runtime/Remoting/Activation/IConstructionReturnMessage.hpp"
// Including type: System.Runtime.Remoting.Activation.IConstructionCallMessage
#include "System/Runtime/Remoting/Activation/IConstructionCallMessage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Activation.ConstructionLevelActivator.get_NextActivator
System::Runtime::Remoting::Activation::IActivator* System::Runtime::Remoting::Activation::ConstructionLevelActivator::get_NextActivator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Activation::ConstructionLevelActivator::get_NextActivator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NextActivator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Activation::IActivator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Activation.ConstructionLevelActivator.Activate
System::Runtime::Remoting::Activation::IConstructionReturnMessage* System::Runtime::Remoting::Activation::ConstructionLevelActivator::Activate(System::Runtime::Remoting::Activation::IConstructionCallMessage* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Activation::ConstructionLevelActivator::Activate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Activation::IConstructionReturnMessage*, false>(this, ___internal__method, msg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.Activation.ContextLevelActivator
#include "System/Runtime/Remoting/Activation/ContextLevelActivator.hpp"
// Including type: System.Runtime.Remoting.Activation.IConstructionReturnMessage
#include "System/Runtime/Remoting/Activation/IConstructionReturnMessage.hpp"
// Including type: System.Runtime.Remoting.Activation.IConstructionCallMessage
#include "System/Runtime/Remoting/Activation/IConstructionCallMessage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Activation.ContextLevelActivator.get_NextActivator
System::Runtime::Remoting::Activation::IActivator* System::Runtime::Remoting::Activation::ContextLevelActivator::get_NextActivator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Activation::ContextLevelActivator::get_NextActivator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NextActivator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Activation::IActivator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Activation.ContextLevelActivator.Activate
System::Runtime::Remoting::Activation::IConstructionReturnMessage* System::Runtime::Remoting::Activation::ContextLevelActivator::Activate(System::Runtime::Remoting::Activation::IConstructionCallMessage* ctorCall) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Activation::ContextLevelActivator::Activate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctorCall)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Activation::IConstructionReturnMessage*, false>(this, ___internal__method, ctorCall);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.Activation.IActivator
#include "System/Runtime/Remoting/Activation/IActivator.hpp"
// Including type: System.Runtime.Remoting.Activation.IConstructionReturnMessage
#include "System/Runtime/Remoting/Activation/IConstructionReturnMessage.hpp"
// Including type: System.Runtime.Remoting.Activation.IConstructionCallMessage
#include "System/Runtime/Remoting/Activation/IConstructionCallMessage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Activation.IActivator.get_NextActivator
System::Runtime::Remoting::Activation::IActivator* System::Runtime::Remoting::Activation::IActivator::get_NextActivator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Activation::IActivator::get_NextActivator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NextActivator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Activation::IActivator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Activation.IActivator.Activate
System::Runtime::Remoting::Activation::IConstructionReturnMessage* System::Runtime::Remoting::Activation::IActivator::Activate(System::Runtime::Remoting::Activation::IConstructionCallMessage* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Activation::IActivator::Activate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Activate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Activation::IConstructionReturnMessage*, false>(this, ___internal__method, msg);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Activation.IConstructionCallMessage
#include "System/Runtime/Remoting/Activation/IConstructionCallMessage.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Runtime.Remoting.Activation.IActivator
#include "System/Runtime/Remoting/Activation/IActivator.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Activation.IConstructionCallMessage.get_ActivationType
System::Type* System::Runtime::Remoting::Activation::IConstructionCallMessage::get_ActivationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Activation::IConstructionCallMessage::get_ActivationType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ActivationType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Activation.IConstructionCallMessage.get_ActivationTypeName
::Il2CppString* System::Runtime::Remoting::Activation::IConstructionCallMessage::get_ActivationTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Activation::IConstructionCallMessage::get_ActivationTypeName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ActivationTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Activation.IConstructionCallMessage.get_Activator
System::Runtime::Remoting::Activation::IActivator* System::Runtime::Remoting::Activation::IConstructionCallMessage::get_Activator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Activation::IConstructionCallMessage::get_Activator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Activator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Activation::IActivator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Activation.IConstructionCallMessage.set_Activator
void System::Runtime::Remoting::Activation::IConstructionCallMessage::set_Activator(System::Runtime::Remoting::Activation::IActivator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Activation::IConstructionCallMessage::set_Activator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Activator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Remoting.Activation.IConstructionCallMessage.get_CallSiteActivationAttributes
::Array<::Il2CppObject*>* System::Runtime::Remoting::Activation::IConstructionCallMessage::get_CallSiteActivationAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Activation::IConstructionCallMessage::get_CallSiteActivationAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CallSiteActivationAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Activation.IConstructionCallMessage.get_ContextProperties
System::Collections::IList* System::Runtime::Remoting::Activation::IConstructionCallMessage::get_ContextProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Activation::IConstructionCallMessage::get_ContextProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContextProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IList*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Metadata.SoapAttribute
#include "System/Runtime/Remoting/Metadata/SoapAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Metadata.SoapAttribute.get_UseAttribute
bool System::Runtime::Remoting::Metadata::SoapAttribute::get_UseAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Metadata::SoapAttribute::get_UseAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Metadata.SoapAttribute.get_XmlNamespace
::Il2CppString* System::Runtime::Remoting::Metadata::SoapAttribute::get_XmlNamespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Metadata::SoapAttribute::get_XmlNamespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Metadata.SoapAttribute.SetReflectionObject
void System::Runtime::Remoting::Metadata::SoapAttribute::SetReflectionObject(::Il2CppObject* reflectionObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Metadata::SoapAttribute::SetReflectionObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetReflectionObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reflectionObject)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reflectionObject);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Metadata.SoapFieldAttribute
#include "System/Runtime/Remoting/Metadata/SoapFieldAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Metadata.SoapFieldAttribute.get_XmlElementName
::Il2CppString* System::Runtime::Remoting::Metadata::SoapFieldAttribute::get_XmlElementName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Metadata::SoapFieldAttribute::get_XmlElementName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlElementName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Metadata.SoapFieldAttribute.IsInteropXmlElement
bool System::Runtime::Remoting::Metadata::SoapFieldAttribute::IsInteropXmlElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Metadata::SoapFieldAttribute::IsInteropXmlElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsInteropXmlElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Metadata.SoapFieldAttribute.SetReflectionObject
void System::Runtime::Remoting::Metadata::SoapFieldAttribute::SetReflectionObject(::Il2CppObject* reflectionObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Metadata::SoapFieldAttribute::SetReflectionObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetReflectionObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reflectionObject)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reflectionObject);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Metadata.SoapMethodAttribute
#include "System/Runtime/Remoting/Metadata/SoapMethodAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Metadata.SoapMethodAttribute.get_UseAttribute
bool System::Runtime::Remoting::Metadata::SoapMethodAttribute::get_UseAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Metadata::SoapMethodAttribute::get_UseAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Metadata.SoapMethodAttribute.get_XmlNamespace
::Il2CppString* System::Runtime::Remoting::Metadata::SoapMethodAttribute::get_XmlNamespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Metadata::SoapMethodAttribute::get_XmlNamespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Metadata.SoapMethodAttribute.SetReflectionObject
void System::Runtime::Remoting::Metadata::SoapMethodAttribute::SetReflectionObject(::Il2CppObject* reflectionObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Metadata::SoapMethodAttribute::SetReflectionObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetReflectionObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reflectionObject)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reflectionObject);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.Metadata.SoapParameterAttribute
#include "System/Runtime/Remoting/Metadata/SoapParameterAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Metadata.SoapTypeAttribute
#include "System/Runtime/Remoting/Metadata/SoapTypeAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Metadata.SoapTypeAttribute.get_XmlElementName
::Il2CppString* System::Runtime::Remoting::Metadata::SoapTypeAttribute::get_XmlElementName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Metadata::SoapTypeAttribute::get_XmlElementName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlElementName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Metadata.SoapTypeAttribute.get_XmlTypeName
::Il2CppString* System::Runtime::Remoting::Metadata::SoapTypeAttribute::get_XmlTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Metadata::SoapTypeAttribute::get_XmlTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Metadata.SoapTypeAttribute.get_XmlTypeNamespace
::Il2CppString* System::Runtime::Remoting::Metadata::SoapTypeAttribute::get_XmlTypeNamespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Metadata::SoapTypeAttribute::get_XmlTypeNamespace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlTypeNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Metadata.SoapTypeAttribute.get_IsInteropXmlElement
bool System::Runtime::Remoting::Metadata::SoapTypeAttribute::get_IsInteropXmlElement() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Metadata::SoapTypeAttribute::get_IsInteropXmlElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsInteropXmlElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Metadata.SoapTypeAttribute.get_IsInteropXmlType
bool System::Runtime::Remoting::Metadata::SoapTypeAttribute::get_IsInteropXmlType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Metadata::SoapTypeAttribute::get_IsInteropXmlType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsInteropXmlType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Metadata.SoapTypeAttribute.get_UseAttribute
bool System::Runtime::Remoting::Metadata::SoapTypeAttribute::get_UseAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Metadata::SoapTypeAttribute::get_UseAttribute");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Metadata.SoapTypeAttribute.get_XmlNamespace
::Il2CppString* System::Runtime::Remoting::Metadata::SoapTypeAttribute::get_XmlNamespace() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Metadata::SoapTypeAttribute::get_XmlNamespace");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_XmlNamespace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Metadata.SoapTypeAttribute.SetReflectionObject
void System::Runtime::Remoting::Metadata::SoapTypeAttribute::SetReflectionObject(::Il2CppObject* reflectionObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Metadata::SoapTypeAttribute::SetReflectionObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetReflectionObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reflectionObject)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reflectionObject);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Messaging.CallContext
#include "System/Runtime/Remoting/Messaging/CallContext.hpp"
// Including type: System.Runtime.Remoting.Messaging.LogicalCallContext
#include "System/Runtime/Remoting/Messaging/LogicalCallContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Messaging.CallContext.SetCurrentCallContext
::Il2CppObject* System::Runtime::Remoting::Messaging::CallContext::SetCurrentCallContext(System::Runtime::Remoting::Messaging::LogicalCallContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::CallContext::SetCurrentCallContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Messaging", "CallContext", "SetCurrentCallContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.CallContext.SetLogicalCallContext
System::Runtime::Remoting::Messaging::LogicalCallContext* System::Runtime::Remoting::Messaging::CallContext::SetLogicalCallContext(System::Runtime::Remoting::Messaging::LogicalCallContext* callCtx) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::CallContext::SetLogicalCallContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Messaging", "CallContext", "SetLogicalCallContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callCtx)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::LogicalCallContext*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callCtx);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.CallContext.LogicalGetData
::Il2CppObject* System::Runtime::Remoting::Messaging::CallContext::LogicalGetData(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::CallContext::LogicalGetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Messaging", "CallContext", "LogicalGetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.CallContext.IllogicalGetData
::Il2CppObject* System::Runtime::Remoting::Messaging::CallContext::IllogicalGetData(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::CallContext::IllogicalGetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Messaging", "CallContext", "IllogicalGetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.CallContext.GetData
::Il2CppObject* System::Runtime::Remoting::Messaging::CallContext::GetData(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::CallContext::GetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Messaging", "CallContext", "GetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.CallContext.SetData
void System::Runtime::Remoting::Messaging::CallContext::SetData(::Il2CppString* name, ::Il2CppObject* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::CallContext::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Messaging", "CallContext", "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, data);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.CallContext.LogicalSetData
void System::Runtime::Remoting::Messaging::CallContext::LogicalSetData(::Il2CppString* name, ::Il2CppObject* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::CallContext::LogicalSetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Messaging", "CallContext", "LogicalSetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Messaging.IllogicalCallContext
#include "System/Runtime/Remoting/Messaging/IllogicalCallContext.hpp"
// Including type: System.Runtime.Remoting.Messaging.IllogicalCallContext/Reader
#include "System/Runtime/Remoting/Messaging/IllogicalCallContext_Reader.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Messaging.IllogicalCallContext.get_Datastore
System::Collections::Hashtable* System::Runtime::Remoting::Messaging::IllogicalCallContext::get_Datastore() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::IllogicalCallContext::get_Datastore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Datastore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Hashtable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.IllogicalCallContext.get_HostContext
::Il2CppObject* System::Runtime::Remoting::Messaging::IllogicalCallContext::get_HostContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::IllogicalCallContext::get_HostContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HostContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.IllogicalCallContext.set_HostContext
void System::Runtime::Remoting::Messaging::IllogicalCallContext::set_HostContext(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::IllogicalCallContext::set_HostContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HostContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.IllogicalCallContext.get_HasUserData
bool System::Runtime::Remoting::Messaging::IllogicalCallContext::get_HasUserData() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::IllogicalCallContext::get_HasUserData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasUserData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.IllogicalCallContext.FreeNamedDataSlot
void System::Runtime::Remoting::Messaging::IllogicalCallContext::FreeNamedDataSlot(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::IllogicalCallContext::FreeNamedDataSlot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FreeNamedDataSlot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.IllogicalCallContext.GetData
::Il2CppObject* System::Runtime::Remoting::Messaging::IllogicalCallContext::GetData(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::IllogicalCallContext::GetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.IllogicalCallContext.SetData
void System::Runtime::Remoting::Messaging::IllogicalCallContext::SetData(::Il2CppString* name, ::Il2CppObject* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::IllogicalCallContext::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, data);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.IllogicalCallContext.CreateCopy
System::Runtime::Remoting::Messaging::IllogicalCallContext* System::Runtime::Remoting::Messaging::IllogicalCallContext::CreateCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::IllogicalCallContext::CreateCopy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCopy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IllogicalCallContext*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Messaging.IllogicalCallContext/Reader
#include "System/Runtime/Remoting/Messaging/IllogicalCallContext_Reader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Messaging.IllogicalCallContext/Reader.get_IsNull
bool System::Runtime::Remoting::Messaging::IllogicalCallContext::Reader::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::IllogicalCallContext::Reader::get_IsNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.IllogicalCallContext/Reader.GetData
::Il2CppObject* System::Runtime::Remoting::Messaging::IllogicalCallContext::Reader::GetData(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::IllogicalCallContext::Reader::GetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(*this, ___internal__method, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Messaging.LogicalCallContext
#include "System/Runtime/Remoting/Messaging/LogicalCallContext.hpp"
// Including type: System.Runtime.Remoting.Messaging.LogicalCallContext/Reader
#include "System/Runtime/Remoting/Messaging/LogicalCallContext_Reader.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Runtime.Remoting.Messaging.CallContextRemotingData
#include "System/Runtime/Remoting/Messaging/CallContextRemotingData.hpp"
// Including type: System.Runtime.Remoting.Messaging.CallContextSecurityData
#include "System/Runtime/Remoting/Messaging/CallContextSecurityData.hpp"
// Including type: System.Runtime.Remoting.Messaging.Header
#include "System/Runtime/Remoting/Messaging/Header.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Type s_callContextType
System::Type* System::Runtime::Remoting::Messaging::LogicalCallContext::_get_s_callContextType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::LogicalCallContext::_get_s_callContextType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Runtime.Remoting.Messaging", "LogicalCallContext", "s_callContextType"));
}
// Autogenerated static field setter
// Set static field: static private System.Type s_callContextType
void System::Runtime::Remoting::Messaging::LogicalCallContext::_set_s_callContextType(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::LogicalCallContext::_set_s_callContextType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting.Messaging", "LogicalCallContext", "s_callContextType", value));
}
// Autogenerated static field getter
// Get static field: static private System.String s_CorrelationMgrSlotName
::Il2CppString* System::Runtime::Remoting::Messaging::LogicalCallContext::_get_s_CorrelationMgrSlotName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::LogicalCallContext::_get_s_CorrelationMgrSlotName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Runtime.Remoting.Messaging", "LogicalCallContext", "s_CorrelationMgrSlotName"));
}
// Autogenerated static field setter
// Set static field: static private System.String s_CorrelationMgrSlotName
void System::Runtime::Remoting::Messaging::LogicalCallContext::_set_s_CorrelationMgrSlotName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::LogicalCallContext::_set_s_CorrelationMgrSlotName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting.Messaging", "LogicalCallContext", "s_CorrelationMgrSlotName", value));
}
// Autogenerated method: System.Runtime.Remoting.Messaging.LogicalCallContext.GetObjectData
void System::Runtime::Remoting::Messaging::LogicalCallContext::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::LogicalCallContext::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.LogicalCallContext.Clone
::Il2CppObject* System::Runtime::Remoting::Messaging::LogicalCallContext::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::LogicalCallContext::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.LogicalCallContext.Merge
void System::Runtime::Remoting::Messaging::LogicalCallContext::Merge(System::Runtime::Remoting::Messaging::LogicalCallContext* lc) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::LogicalCallContext::Merge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Merge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lc)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lc);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.LogicalCallContext.get_HasInfo
bool System::Runtime::Remoting::Messaging::LogicalCallContext::get_HasInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::LogicalCallContext::get_HasInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.LogicalCallContext.get_HasUserData
bool System::Runtime::Remoting::Messaging::LogicalCallContext::get_HasUserData() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::LogicalCallContext::get_HasUserData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasUserData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.LogicalCallContext.get_Datastore
System::Collections::Hashtable* System::Runtime::Remoting::Messaging::LogicalCallContext::get_Datastore() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::LogicalCallContext::get_Datastore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Datastore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Hashtable*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.LogicalCallContext.FreeNamedDataSlot
void System::Runtime::Remoting::Messaging::LogicalCallContext::FreeNamedDataSlot(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::LogicalCallContext::FreeNamedDataSlot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FreeNamedDataSlot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.LogicalCallContext.GetData
::Il2CppObject* System::Runtime::Remoting::Messaging::LogicalCallContext::GetData(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::LogicalCallContext::GetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.LogicalCallContext.SetData
void System::Runtime::Remoting::Messaging::LogicalCallContext::SetData(::Il2CppString* name, ::Il2CppObject* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::LogicalCallContext::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, data);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.LogicalCallContext..cctor
void System::Runtime::Remoting::Messaging::LogicalCallContext::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::LogicalCallContext::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Messaging", "LogicalCallContext", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Messaging.LogicalCallContext/Reader
#include "System/Runtime/Remoting/Messaging/LogicalCallContext_Reader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Messaging.LogicalCallContext/Reader.get_IsNull
bool System::Runtime::Remoting::Messaging::LogicalCallContext::Reader::get_IsNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::LogicalCallContext::Reader::get_IsNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.LogicalCallContext/Reader.get_HasInfo
bool System::Runtime::Remoting::Messaging::LogicalCallContext::Reader::get_HasInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::LogicalCallContext::Reader::get_HasInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_HasInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.LogicalCallContext/Reader.Clone
System::Runtime::Remoting::Messaging::LogicalCallContext* System::Runtime::Remoting::Messaging::LogicalCallContext::Reader::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::LogicalCallContext::Reader::Clone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::LogicalCallContext*, false>(*this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.LogicalCallContext/Reader.GetData
::Il2CppObject* System::Runtime::Remoting::Messaging::LogicalCallContext::Reader::GetData(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::LogicalCallContext::Reader::GetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(*this, ___internal__method, name);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Messaging.CallContextSecurityData
#include "System/Runtime/Remoting/Messaging/CallContextSecurityData.hpp"
// Including type: System.Security.Principal.IPrincipal
#include "System/Security/Principal/IPrincipal.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Messaging.CallContextSecurityData.get_HasInfo
bool System::Runtime::Remoting::Messaging::CallContextSecurityData::get_HasInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::CallContextSecurityData::get_HasInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.CallContextSecurityData.Clone
::Il2CppObject* System::Runtime::Remoting::Messaging::CallContextSecurityData::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::CallContextSecurityData::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Messaging.CallContextRemotingData
#include "System/Runtime/Remoting/Messaging/CallContextRemotingData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Messaging.CallContextRemotingData.get_LogicalCallID
::Il2CppString* System::Runtime::Remoting::Messaging::CallContextRemotingData::get_LogicalCallID() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::CallContextRemotingData::get_LogicalCallID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LogicalCallID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.CallContextRemotingData.set_LogicalCallID
void System::Runtime::Remoting::Messaging::CallContextRemotingData::set_LogicalCallID(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::CallContextRemotingData::set_LogicalCallID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LogicalCallID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.CallContextRemotingData.get_HasInfo
bool System::Runtime::Remoting::Messaging::CallContextRemotingData::get_HasInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::CallContextRemotingData::get_HasInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.CallContextRemotingData.Clone
::Il2CppObject* System::Runtime::Remoting::Messaging::CallContextRemotingData::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::CallContextRemotingData::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.Messaging.ArgInfoType
#include "System/Runtime/Remoting/Messaging/ArgInfoType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Runtime.Remoting.Messaging.ArgInfoType In
System::Runtime::Remoting::Messaging::ArgInfoType System::Runtime::Remoting::Messaging::ArgInfoType::_get_In() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ArgInfoType::_get_In");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Remoting::Messaging::ArgInfoType>("System.Runtime.Remoting.Messaging", "ArgInfoType", "In"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Remoting.Messaging.ArgInfoType In
void System::Runtime::Remoting::Messaging::ArgInfoType::_set_In(System::Runtime::Remoting::Messaging::ArgInfoType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ArgInfoType::_set_In");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting.Messaging", "ArgInfoType", "In", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Remoting.Messaging.ArgInfoType Out
System::Runtime::Remoting::Messaging::ArgInfoType System::Runtime::Remoting::Messaging::ArgInfoType::_get_Out() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ArgInfoType::_get_Out");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Remoting::Messaging::ArgInfoType>("System.Runtime.Remoting.Messaging", "ArgInfoType", "Out"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Remoting.Messaging.ArgInfoType Out
void System::Runtime::Remoting::Messaging::ArgInfoType::_set_Out(System::Runtime::Remoting::Messaging::ArgInfoType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ArgInfoType::_set_Out");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting.Messaging", "ArgInfoType", "Out", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Messaging.ArgInfo
#include "System/Runtime/Remoting/Messaging/ArgInfo.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Messaging.ArgInfo.GetInOutArgs
::Array<::Il2CppObject*>* System::Runtime::Remoting::Messaging::ArgInfo::GetInOutArgs(::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ArgInfo::GetInOutArgs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInOutArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppObject*>*, false>(this, ___internal__method, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Messaging.AsyncResult
#include "System/Runtime/Remoting/Messaging/AsyncResult.hpp"
// Including type: System.Threading.WaitHandle
#include "System/Threading/WaitHandle.hpp"
// Including type: System.Threading.ExecutionContext
#include "System/Threading/ExecutionContext.hpp"
// Including type: System.Runtime.Remoting.Messaging.MonoMethodMessage
#include "System/Runtime/Remoting/Messaging/MonoMethodMessage.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessageCtrl
#include "System/Runtime/Remoting/Messaging/IMessageCtrl.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessage
#include "System/Runtime/Remoting/Messaging/IMessage.hpp"
// Including type: System.Threading.WaitCallback
#include "System/Threading/WaitCallback.hpp"
// Including type: System.Threading.ContextCallback
#include "System/Threading/ContextCallback.hpp"
// Including type: System.Threading.ThreadAbortException
#include "System/Threading/ThreadAbortException.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Threading.ContextCallback ccb
System::Threading::ContextCallback* System::Runtime::Remoting::Messaging::AsyncResult::_get_ccb() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::AsyncResult::_get_ccb");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::ContextCallback*>("System.Runtime.Remoting.Messaging", "AsyncResult", "ccb"));
}
// Autogenerated static field setter
// Set static field: static System.Threading.ContextCallback ccb
void System::Runtime::Remoting::Messaging::AsyncResult::_set_ccb(System::Threading::ContextCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::AsyncResult::_set_ccb");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting.Messaging", "AsyncResult", "ccb", value));
}
// Autogenerated method: System.Runtime.Remoting.Messaging.AsyncResult.WaitCallback_Context
void System::Runtime::Remoting::Messaging::AsyncResult::WaitCallback_Context(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::AsyncResult::WaitCallback_Context");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Messaging", "AsyncResult", "WaitCallback_Context", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, state);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.AsyncResult.get_AsyncState
::Il2CppObject* System::Runtime::Remoting::Messaging::AsyncResult::get_AsyncState() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::AsyncResult::get_AsyncState");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsyncState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.AsyncResult.get_AsyncWaitHandle
System::Threading::WaitHandle* System::Runtime::Remoting::Messaging::AsyncResult::get_AsyncWaitHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::AsyncResult::get_AsyncWaitHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsyncWaitHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::WaitHandle*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.AsyncResult.get_CompletedSynchronously
bool System::Runtime::Remoting::Messaging::AsyncResult::get_CompletedSynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::AsyncResult::get_CompletedSynchronously");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompletedSynchronously", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.AsyncResult.get_IsCompleted
bool System::Runtime::Remoting::Messaging::AsyncResult::get_IsCompleted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::AsyncResult::get_IsCompleted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.AsyncResult.get_EndInvokeCalled
bool System::Runtime::Remoting::Messaging::AsyncResult::get_EndInvokeCalled() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::AsyncResult::get_EndInvokeCalled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EndInvokeCalled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.AsyncResult.set_EndInvokeCalled
void System::Runtime::Remoting::Messaging::AsyncResult::set_EndInvokeCalled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::AsyncResult::set_EndInvokeCalled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EndInvokeCalled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.AsyncResult.get_AsyncDelegate
::Il2CppObject* System::Runtime::Remoting::Messaging::AsyncResult::get_AsyncDelegate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::AsyncResult::get_AsyncDelegate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AsyncDelegate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.AsyncResult.get_NextSink
System::Runtime::Remoting::Messaging::IMessageSink* System::Runtime::Remoting::Messaging::AsyncResult::get_NextSink() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::AsyncResult::get_NextSink");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NextSink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessageSink*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.AsyncResult.AsyncProcessMessage
System::Runtime::Remoting::Messaging::IMessageCtrl* System::Runtime::Remoting::Messaging::AsyncResult::AsyncProcessMessage(System::Runtime::Remoting::Messaging::IMessage* msg, System::Runtime::Remoting::Messaging::IMessageSink* replySink) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::AsyncResult::AsyncProcessMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AsyncProcessMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg), ::il2cpp_utils::ExtractType(replySink)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessageCtrl*, false>(this, ___internal__method, msg, replySink);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.AsyncResult.GetReplyMessage
System::Runtime::Remoting::Messaging::IMessage* System::Runtime::Remoting::Messaging::AsyncResult::GetReplyMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::AsyncResult::GetReplyMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetReplyMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessage*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.AsyncResult.SetMessageCtrl
void System::Runtime::Remoting::Messaging::AsyncResult::SetMessageCtrl(System::Runtime::Remoting::Messaging::IMessageCtrl* mc) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::AsyncResult::SetMessageCtrl");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMessageCtrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mc)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, mc);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.AsyncResult.SetCompletedSynchronously
void System::Runtime::Remoting::Messaging::AsyncResult::SetCompletedSynchronously(bool completed) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::AsyncResult::SetCompletedSynchronously");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCompletedSynchronously", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(completed)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, completed);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.AsyncResult.EndInvoke
System::Runtime::Remoting::Messaging::IMessage* System::Runtime::Remoting::Messaging::AsyncResult::EndInvoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::AsyncResult::EndInvoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessage*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.AsyncResult.SyncProcessMessage
System::Runtime::Remoting::Messaging::IMessage* System::Runtime::Remoting::Messaging::AsyncResult::SyncProcessMessage(System::Runtime::Remoting::Messaging::IMessage* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::AsyncResult::SyncProcessMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncProcessMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessage*, false>(this, ___internal__method, msg);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.AsyncResult.get_CallMessage
System::Runtime::Remoting::Messaging::MonoMethodMessage* System::Runtime::Remoting::Messaging::AsyncResult::get_CallMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::AsyncResult::get_CallMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CallMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::MonoMethodMessage*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.AsyncResult.set_CallMessage
void System::Runtime::Remoting::Messaging::AsyncResult::set_CallMessage(System::Runtime::Remoting::Messaging::MonoMethodMessage* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::AsyncResult::set_CallMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CallMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.AsyncResult.System.Threading.IThreadPoolWorkItem.ExecuteWorkItem
void System::Runtime::Remoting::Messaging::AsyncResult::System_Threading_IThreadPoolWorkItem_ExecuteWorkItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::AsyncResult::System.Threading.IThreadPoolWorkItem.ExecuteWorkItem");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Threading.IThreadPoolWorkItem.ExecuteWorkItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.AsyncResult.System.Threading.IThreadPoolWorkItem.MarkAborted
void System::Runtime::Remoting::Messaging::AsyncResult::System_Threading_IThreadPoolWorkItem_MarkAborted(System::Threading::ThreadAbortException* tae) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::AsyncResult::System.Threading.IThreadPoolWorkItem.MarkAborted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Threading.IThreadPoolWorkItem.MarkAborted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tae)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tae);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.AsyncResult.Invoke
::Il2CppObject* System::Runtime::Remoting::Messaging::AsyncResult::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::AsyncResult::Invoke");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.AsyncResult..cctor
void System::Runtime::Remoting::Messaging::AsyncResult::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::AsyncResult::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Messaging", "AsyncResult", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.AsyncResult.<.ctor>b__17_0
void System::Runtime::Remoting::Messaging::AsyncResult::$_ctor$b__17_0(::Il2CppObject* $p0$) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::AsyncResult::<.ctor>b__17_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.ctor>b__17_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType($p0$)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, $p0$);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.Messaging.CADArgHolder
#include "System/Runtime/Remoting/Messaging/CADArgHolder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Messaging.CADObjRef
#include "System/Runtime/Remoting/Messaging/CADObjRef.hpp"
// Including type: System.Runtime.Remoting.ObjRef
#include "System/Runtime/Remoting/ObjRef.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Messaging.CADMethodRef
#include "System/Runtime/Remoting/Messaging/CADMethodRef.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMethodMessage
#include "System/Runtime/Remoting/Messaging/IMethodMessage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Messaging.CADMethodRef.GetTypes
::Array<System::Type*>* System::Runtime::Remoting::Messaging::CADMethodRef::GetTypes(::Array<::Il2CppString*>* typeArray) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::CADMethodRef::GetTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeArray)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Type*>*, false>(this, ___internal__method, typeArray);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.CADMethodRef.Resolve
System::Reflection::MethodBase* System::Runtime::Remoting::Messaging::CADMethodRef::Resolve() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::CADMethodRef::Resolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Resolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodBase*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Messaging.CADMessageBase
#include "System/Runtime/Remoting/Messaging/CADMessageBase.hpp"
// Including type: System.Runtime.Remoting.Messaging.CADArgHolder
#include "System/Runtime/Remoting/Messaging/CADArgHolder.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMethodMessage
#include "System/Runtime/Remoting/Messaging/IMethodMessage.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Runtime.Remoting.Messaging.LogicalCallContext
#include "System/Runtime/Remoting/Messaging/LogicalCallContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Messaging.CADMessageBase.GetMethod
System::Reflection::MethodBase* System::Runtime::Remoting::Messaging::CADMessageBase::GetMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::CADMessageBase::GetMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodBase*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.CADMessageBase.GetSignature
::Array<System::Type*>* System::Runtime::Remoting::Messaging::CADMessageBase::GetSignature(System::Reflection::MethodBase* methodBase, bool load) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::CADMessageBase::GetSignature");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Messaging", "CADMessageBase", "GetSignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(methodBase), ::il2cpp_utils::ExtractType(load)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Type*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, methodBase, load);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.CADMessageBase.MarshalProperties
int System::Runtime::Remoting::Messaging::CADMessageBase::MarshalProperties(System::Collections::IDictionary* dict, System::Collections::ArrayList*& args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::CADMessageBase::MarshalProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Messaging", "CADMessageBase", "MarshalProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dict), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dict, args);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.CADMessageBase.UnmarshalProperties
void System::Runtime::Remoting::Messaging::CADMessageBase::UnmarshalProperties(System::Collections::IDictionary* dict, int count, System::Collections::ArrayList* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::CADMessageBase::UnmarshalProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Messaging", "CADMessageBase", "UnmarshalProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dict), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(args)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dict, count, args);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.CADMessageBase.IsPossibleToIgnoreMarshal
bool System::Runtime::Remoting::Messaging::CADMessageBase::IsPossibleToIgnoreMarshal(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::CADMessageBase::IsPossibleToIgnoreMarshal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Messaging", "CADMessageBase", "IsPossibleToIgnoreMarshal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.CADMessageBase.MarshalArgument
::Il2CppObject* System::Runtime::Remoting::Messaging::CADMessageBase::MarshalArgument(::Il2CppObject* arg, System::Collections::ArrayList*& args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::CADMessageBase::MarshalArgument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarshalArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, arg, args);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.CADMessageBase.UnmarshalArgument
::Il2CppObject* System::Runtime::Remoting::Messaging::CADMessageBase::UnmarshalArgument(::Il2CppObject* arg, System::Collections::ArrayList* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::CADMessageBase::UnmarshalArgument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnmarshalArgument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, arg, args);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.CADMessageBase.MarshalArguments
::Array<::Il2CppObject*>* System::Runtime::Remoting::Messaging::CADMessageBase::MarshalArguments(::Array<::Il2CppObject*>* arguments, System::Collections::ArrayList*& args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::CADMessageBase::MarshalArguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarshalArguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arguments), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppObject*>*, false>(this, ___internal__method, arguments, args);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.CADMessageBase.UnmarshalArguments
::Array<::Il2CppObject*>* System::Runtime::Remoting::Messaging::CADMessageBase::UnmarshalArguments(::Array<::Il2CppObject*>* arguments, System::Collections::ArrayList* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::CADMessageBase::UnmarshalArguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnmarshalArguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arguments), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppObject*>*, false>(this, ___internal__method, arguments, args);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.CADMessageBase.SaveLogicalCallContext
void System::Runtime::Remoting::Messaging::CADMessageBase::SaveLogicalCallContext(System::Runtime::Remoting::Messaging::IMethodMessage* msg, System::Collections::ArrayList*& serializeList) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::CADMessageBase::SaveLogicalCallContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaveLogicalCallContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg), ::il2cpp_utils::ExtractType(serializeList)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, msg, serializeList);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.CADMessageBase.GetLogicalCallContext
System::Runtime::Remoting::Messaging::LogicalCallContext* System::Runtime::Remoting::Messaging::CADMessageBase::GetLogicalCallContext(System::Collections::ArrayList* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::CADMessageBase::GetLogicalCallContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLogicalCallContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::LogicalCallContext*, false>(this, ___internal__method, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Messaging.CADMethodCallMessage
#include "System/Runtime/Remoting/Messaging/CADMethodCallMessage.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessage
#include "System/Runtime/Remoting/Messaging/IMessage.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMethodCallMessage
#include "System/Runtime/Remoting/Messaging/IMethodCallMessage.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Messaging.CADMethodCallMessage.get_Uri
::Il2CppString* System::Runtime::Remoting::Messaging::CADMethodCallMessage::get_Uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::CADMethodCallMessage::get_Uri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Uri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.CADMethodCallMessage.Create
System::Runtime::Remoting::Messaging::CADMethodCallMessage* System::Runtime::Remoting::Messaging::CADMethodCallMessage::Create(System::Runtime::Remoting::Messaging::IMessage* callMsg) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::CADMethodCallMessage::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Messaging", "CADMethodCallMessage", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callMsg)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::CADMethodCallMessage*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callMsg);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.CADMethodCallMessage.GetArguments
System::Collections::ArrayList* System::Runtime::Remoting::Messaging::CADMethodCallMessage::GetArguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::CADMethodCallMessage::GetArguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::ArrayList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.CADMethodCallMessage.GetArgs
::Array<::Il2CppObject*>* System::Runtime::Remoting::Messaging::CADMethodCallMessage::GetArgs(System::Collections::ArrayList* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::CADMethodCallMessage::GetArgs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppObject*>*, false>(this, ___internal__method, args);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.CADMethodCallMessage.get_PropertiesCount
int System::Runtime::Remoting::Messaging::CADMethodCallMessage::get_PropertiesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::CADMethodCallMessage::get_PropertiesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PropertiesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Messaging.CADMethodReturnMessage
#include "System/Runtime/Remoting/Messaging/CADMethodReturnMessage.hpp"
// Including type: System.Runtime.Remoting.Messaging.CADArgHolder
#include "System/Runtime/Remoting/Messaging/CADArgHolder.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessage
#include "System/Runtime/Remoting/Messaging/IMessage.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMethodReturnMessage
#include "System/Runtime/Remoting/Messaging/IMethodReturnMessage.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Messaging.CADMethodReturnMessage.Create
System::Runtime::Remoting::Messaging::CADMethodReturnMessage* System::Runtime::Remoting::Messaging::CADMethodReturnMessage::Create(System::Runtime::Remoting::Messaging::IMessage* callMsg) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::CADMethodReturnMessage::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Messaging", "CADMethodReturnMessage", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callMsg)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::CADMethodReturnMessage*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callMsg);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.CADMethodReturnMessage.GetArguments
System::Collections::ArrayList* System::Runtime::Remoting::Messaging::CADMethodReturnMessage::GetArguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::CADMethodReturnMessage::GetArguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::ArrayList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.CADMethodReturnMessage.GetArgs
::Array<::Il2CppObject*>* System::Runtime::Remoting::Messaging::CADMethodReturnMessage::GetArgs(System::Collections::ArrayList* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::CADMethodReturnMessage::GetArgs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppObject*>*, false>(this, ___internal__method, args);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.CADMethodReturnMessage.GetReturnValue
::Il2CppObject* System::Runtime::Remoting::Messaging::CADMethodReturnMessage::GetReturnValue(System::Collections::ArrayList* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::CADMethodReturnMessage::GetReturnValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetReturnValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, args);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.CADMethodReturnMessage.GetException
System::Exception* System::Runtime::Remoting::Messaging::CADMethodReturnMessage::GetException(System::Collections::ArrayList* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::CADMethodReturnMessage::GetException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(this, ___internal__method, args);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.CADMethodReturnMessage.get_PropertiesCount
int System::Runtime::Remoting::Messaging::CADMethodReturnMessage::get_PropertiesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::CADMethodReturnMessage::get_PropertiesCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PropertiesCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.Messaging.ClientContextTerminatorSink
#include "System/Runtime/Remoting/Messaging/ClientContextTerminatorSink.hpp"
// Including type: System.Runtime.Remoting.Contexts.Context
#include "System/Runtime/Remoting/Contexts/Context.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessage
#include "System/Runtime/Remoting/Messaging/IMessage.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessageCtrl
#include "System/Runtime/Remoting/Messaging/IMessageCtrl.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Messaging.ClientContextTerminatorSink.SyncProcessMessage
System::Runtime::Remoting::Messaging::IMessage* System::Runtime::Remoting::Messaging::ClientContextTerminatorSink::SyncProcessMessage(System::Runtime::Remoting::Messaging::IMessage* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ClientContextTerminatorSink::SyncProcessMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncProcessMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessage*, false>(this, ___internal__method, msg);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.ClientContextTerminatorSink.AsyncProcessMessage
System::Runtime::Remoting::Messaging::IMessageCtrl* System::Runtime::Remoting::Messaging::ClientContextTerminatorSink::AsyncProcessMessage(System::Runtime::Remoting::Messaging::IMessage* msg, System::Runtime::Remoting::Messaging::IMessageSink* replySink) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ClientContextTerminatorSink::AsyncProcessMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AsyncProcessMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg), ::il2cpp_utils::ExtractType(replySink)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessageCtrl*, false>(this, ___internal__method, msg, replySink);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.Messaging.ClientContextReplySink
#include "System/Runtime/Remoting/Messaging/ClientContextReplySink.hpp"
// Including type: System.Runtime.Remoting.Contexts.Context
#include "System/Runtime/Remoting/Contexts/Context.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessage
#include "System/Runtime/Remoting/Messaging/IMessage.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessageCtrl
#include "System/Runtime/Remoting/Messaging/IMessageCtrl.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Messaging.ClientContextReplySink.SyncProcessMessage
System::Runtime::Remoting::Messaging::IMessage* System::Runtime::Remoting::Messaging::ClientContextReplySink::SyncProcessMessage(System::Runtime::Remoting::Messaging::IMessage* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ClientContextReplySink::SyncProcessMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncProcessMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessage*, false>(this, ___internal__method, msg);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.ClientContextReplySink.AsyncProcessMessage
System::Runtime::Remoting::Messaging::IMessageCtrl* System::Runtime::Remoting::Messaging::ClientContextReplySink::AsyncProcessMessage(System::Runtime::Remoting::Messaging::IMessage* msg, System::Runtime::Remoting::Messaging::IMessageSink* replySink) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ClientContextReplySink::AsyncProcessMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AsyncProcessMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg), ::il2cpp_utils::ExtractType(replySink)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessageCtrl*, false>(this, ___internal__method, msg, replySink);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Messaging.ConstructionCall
#include "System/Runtime/Remoting/Messaging/ConstructionCall.hpp"
// Including type: System.Runtime.Remoting.Activation.IActivator
#include "System/Runtime/Remoting/Activation/IActivator.hpp"
// Including type: System.Collections.IList
#include "System/Collections/IList.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Runtime.Remoting.Proxies.RemotingProxy
#include "System/Runtime/Remoting/Proxies/RemotingProxy.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Messaging.ConstructionCall.get_IsContextOk
bool System::Runtime::Remoting::Messaging::ConstructionCall::get_IsContextOk() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ConstructionCall::get_IsContextOk");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsContextOk", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.ConstructionCall.set_IsContextOk
void System::Runtime::Remoting::Messaging::ConstructionCall::set_IsContextOk(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ConstructionCall::set_IsContextOk");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsContextOk", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.ConstructionCall.get_ActivationType
System::Type* System::Runtime::Remoting::Messaging::ConstructionCall::get_ActivationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ConstructionCall::get_ActivationType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ActivationType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.ConstructionCall.get_ActivationTypeName
::Il2CppString* System::Runtime::Remoting::Messaging::ConstructionCall::get_ActivationTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ConstructionCall::get_ActivationTypeName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ActivationTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.ConstructionCall.get_Activator
System::Runtime::Remoting::Activation::IActivator* System::Runtime::Remoting::Messaging::ConstructionCall::get_Activator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ConstructionCall::get_Activator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Activator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Activation::IActivator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.ConstructionCall.set_Activator
void System::Runtime::Remoting::Messaging::ConstructionCall::set_Activator(System::Runtime::Remoting::Activation::IActivator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ConstructionCall::set_Activator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Activator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.ConstructionCall.get_CallSiteActivationAttributes
::Array<::Il2CppObject*>* System::Runtime::Remoting::Messaging::ConstructionCall::get_CallSiteActivationAttributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ConstructionCall::get_CallSiteActivationAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CallSiteActivationAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.ConstructionCall.SetActivationAttributes
void System::Runtime::Remoting::Messaging::ConstructionCall::SetActivationAttributes(::Array<::Il2CppObject*>* attributes) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ConstructionCall::SetActivationAttributes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetActivationAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributes)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, attributes);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.ConstructionCall.get_ContextProperties
System::Collections::IList* System::Runtime::Remoting::Messaging::ConstructionCall::get_ContextProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ConstructionCall::get_ContextProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContextProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.ConstructionCall.get_SourceProxy
System::Runtime::Remoting::Proxies::RemotingProxy* System::Runtime::Remoting::Messaging::ConstructionCall::get_SourceProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ConstructionCall::get_SourceProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SourceProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Proxies::RemotingProxy*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.ConstructionCall.set_SourceProxy
void System::Runtime::Remoting::Messaging::ConstructionCall::set_SourceProxy(System::Runtime::Remoting::Proxies::RemotingProxy* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ConstructionCall::set_SourceProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SourceProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.ConstructionCall.InitDictionary
void System::Runtime::Remoting::Messaging::ConstructionCall::InitDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ConstructionCall::InitDictionary");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitDictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.ConstructionCall.InitMethodProperty
void System::Runtime::Remoting::Messaging::ConstructionCall::InitMethodProperty(::Il2CppString* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ConstructionCall::InitMethodProperty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitMethodProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.ConstructionCall.GetObjectData
void System::Runtime::Remoting::Messaging::ConstructionCall::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ConstructionCall::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.ConstructionCall.get_Properties
System::Collections::IDictionary* System::Runtime::Remoting::Messaging::ConstructionCall::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ConstructionCall::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IDictionary*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Messaging.ConstructionCallDictionary
#include "System/Runtime/Remoting/Messaging/ConstructionCallDictionary.hpp"
// Including type: System.Runtime.Remoting.Activation.IConstructionCallMessage
#include "System/Runtime/Remoting/Activation/IConstructionCallMessage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String[] InternalKeys
::Array<::Il2CppString*>* System::Runtime::Remoting::Messaging::ConstructionCallDictionary::_get_InternalKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ConstructionCallDictionary::_get_InternalKeys");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("System.Runtime.Remoting.Messaging", "ConstructionCallDictionary", "InternalKeys"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] InternalKeys
void System::Runtime::Remoting::Messaging::ConstructionCallDictionary::_set_InternalKeys(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ConstructionCallDictionary::_set_InternalKeys");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting.Messaging", "ConstructionCallDictionary", "InternalKeys", value));
}
// Autogenerated method: System.Runtime.Remoting.Messaging.ConstructionCallDictionary..cctor
void System::Runtime::Remoting::Messaging::ConstructionCallDictionary::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ConstructionCallDictionary::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Messaging", "ConstructionCallDictionary", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.ConstructionCallDictionary.GetMethodProperty
::Il2CppObject* System::Runtime::Remoting::Messaging::ConstructionCallDictionary::GetMethodProperty(::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ConstructionCallDictionary::GetMethodProperty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.ConstructionCallDictionary.SetMethodProperty
void System::Runtime::Remoting::Messaging::ConstructionCallDictionary::SetMethodProperty(::Il2CppString* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ConstructionCallDictionary::SetMethodProperty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetMethodProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Messaging.ConstructionResponse
#include "System/Runtime/Remoting/Messaging/ConstructionResponse.hpp"
// Including type: System.Runtime.Remoting.Messaging.LogicalCallContext
#include "System/Runtime/Remoting/Messaging/LogicalCallContext.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMethodCallMessage
#include "System/Runtime/Remoting/Messaging/IMethodCallMessage.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Messaging.ConstructionResponse.get_Properties
System::Collections::IDictionary* System::Runtime::Remoting::Messaging::ConstructionResponse::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ConstructionResponse::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IDictionary*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.Messaging.EnvoyTerminatorSink
#include "System/Runtime/Remoting/Messaging/EnvoyTerminatorSink.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessage
#include "System/Runtime/Remoting/Messaging/IMessage.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessageCtrl
#include "System/Runtime/Remoting/Messaging/IMessageCtrl.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Runtime.Remoting.Messaging.EnvoyTerminatorSink Instance
System::Runtime::Remoting::Messaging::EnvoyTerminatorSink* System::Runtime::Remoting::Messaging::EnvoyTerminatorSink::_get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::EnvoyTerminatorSink::_get_Instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Remoting::Messaging::EnvoyTerminatorSink*>("System.Runtime.Remoting.Messaging", "EnvoyTerminatorSink", "Instance"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Remoting.Messaging.EnvoyTerminatorSink Instance
void System::Runtime::Remoting::Messaging::EnvoyTerminatorSink::_set_Instance(System::Runtime::Remoting::Messaging::EnvoyTerminatorSink* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::EnvoyTerminatorSink::_set_Instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting.Messaging", "EnvoyTerminatorSink", "Instance", value));
}
// Autogenerated method: System.Runtime.Remoting.Messaging.EnvoyTerminatorSink.SyncProcessMessage
System::Runtime::Remoting::Messaging::IMessage* System::Runtime::Remoting::Messaging::EnvoyTerminatorSink::SyncProcessMessage(System::Runtime::Remoting::Messaging::IMessage* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::EnvoyTerminatorSink::SyncProcessMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncProcessMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessage*, false>(this, ___internal__method, msg);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.EnvoyTerminatorSink.AsyncProcessMessage
System::Runtime::Remoting::Messaging::IMessageCtrl* System::Runtime::Remoting::Messaging::EnvoyTerminatorSink::AsyncProcessMessage(System::Runtime::Remoting::Messaging::IMessage* msg, System::Runtime::Remoting::Messaging::IMessageSink* replySink) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::EnvoyTerminatorSink::AsyncProcessMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AsyncProcessMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg), ::il2cpp_utils::ExtractType(replySink)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessageCtrl*, false>(this, ___internal__method, msg, replySink);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.EnvoyTerminatorSink..cctor
void System::Runtime::Remoting::Messaging::EnvoyTerminatorSink::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::EnvoyTerminatorSink::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Messaging", "EnvoyTerminatorSink", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Messaging.ErrorMessage
#include "System/Runtime/Remoting/Messaging/ErrorMessage.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
// Including type: System.Runtime.Remoting.Messaging.LogicalCallContext
#include "System/Runtime/Remoting/Messaging/LogicalCallContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Messaging.ErrorMessage.get_ArgCount
int System::Runtime::Remoting::Messaging::ErrorMessage::get_ArgCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ErrorMessage::get_ArgCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ArgCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.ErrorMessage.get_Args
::Array<::Il2CppObject*>* System::Runtime::Remoting::Messaging::ErrorMessage::get_Args() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ErrorMessage::get_Args");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Args", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.ErrorMessage.get_MethodBase
System::Reflection::MethodBase* System::Runtime::Remoting::Messaging::ErrorMessage::get_MethodBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ErrorMessage::get_MethodBase");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MethodBase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodBase*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.ErrorMessage.get_MethodName
::Il2CppString* System::Runtime::Remoting::Messaging::ErrorMessage::get_MethodName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ErrorMessage::get_MethodName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MethodName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.ErrorMessage.get_MethodSignature
::Il2CppObject* System::Runtime::Remoting::Messaging::ErrorMessage::get_MethodSignature() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ErrorMessage::get_MethodSignature");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MethodSignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.ErrorMessage.get_Properties
System::Collections::IDictionary* System::Runtime::Remoting::Messaging::ErrorMessage::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ErrorMessage::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IDictionary*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.ErrorMessage.get_TypeName
::Il2CppString* System::Runtime::Remoting::Messaging::ErrorMessage::get_TypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ErrorMessage::get_TypeName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.ErrorMessage.get_Uri
::Il2CppString* System::Runtime::Remoting::Messaging::ErrorMessage::get_Uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ErrorMessage::get_Uri");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Uri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.ErrorMessage.GetArg
::Il2CppObject* System::Runtime::Remoting::Messaging::ErrorMessage::GetArg(int arg_num) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ErrorMessage::GetArg");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArg", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg_num)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, arg_num);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.ErrorMessage.get_LogicalCallContext
System::Runtime::Remoting::Messaging::LogicalCallContext* System::Runtime::Remoting::Messaging::ErrorMessage::get_LogicalCallContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::ErrorMessage::get_LogicalCallContext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LogicalCallContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::LogicalCallContext*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Messaging.HeaderHandler
#include "System/Runtime/Remoting/Messaging/HeaderHandler.hpp"
// Including type: System.Runtime.Remoting.Messaging.Header
#include "System/Runtime/Remoting/Messaging/Header.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Messaging.HeaderHandler.Invoke
::Il2CppObject* System::Runtime::Remoting::Messaging::HeaderHandler::Invoke(::Array<System::Runtime::Remoting::Messaging::Header*>* headers) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::HeaderHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headers)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, headers);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.HeaderHandler.BeginInvoke
System::IAsyncResult* System::Runtime::Remoting::Messaging::HeaderHandler::BeginInvoke(::Array<System::Runtime::Remoting::Messaging::Header*>* headers, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::HeaderHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headers), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, headers, callback, object);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.HeaderHandler.EndInvoke
::Il2CppObject* System::Runtime::Remoting::Messaging::HeaderHandler::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::HeaderHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Messaging.IInternalMessage
#include "System/Runtime/Remoting/Messaging/IInternalMessage.hpp"
// Including type: System.Runtime.Remoting.Identity
#include "System/Runtime/Remoting/Identity.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Messaging.IInternalMessage.get_TargetIdentity
System::Runtime::Remoting::Identity* System::Runtime::Remoting::Messaging::IInternalMessage::get_TargetIdentity() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::IInternalMessage::get_TargetIdentity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TargetIdentity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Identity*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.IInternalMessage.set_TargetIdentity
void System::Runtime::Remoting::Messaging::IInternalMessage::set_TargetIdentity(System::Runtime::Remoting::Identity* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::IInternalMessage::set_TargetIdentity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TargetIdentity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.IInternalMessage.get_Uri
::Il2CppString* System::Runtime::Remoting::Messaging::IInternalMessage::get_Uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::IInternalMessage::get_Uri");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Uri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.IInternalMessage.set_Uri
void System::Runtime::Remoting::Messaging::IInternalMessage::set_Uri(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::IInternalMessage::set_Uri");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Uri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.Messaging.IMessage
#include "System/Runtime/Remoting/Messaging/IMessage.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Messaging.IMessage.get_Properties
System::Collections::IDictionary* System::Runtime::Remoting::Messaging::IMessage::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::IMessage::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IDictionary*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Remoting.Messaging.IMessageSink
#include "System/Runtime/Remoting/Messaging/IMessageSink.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessage
#include "System/Runtime/Remoting/Messaging/IMessage.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMessageCtrl
#include "System/Runtime/Remoting/Messaging/IMessageCtrl.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage
System::Runtime::Remoting::Messaging::IMessage* System::Runtime::Remoting::Messaging::IMessageSink::SyncProcessMessage(System::Runtime::Remoting::Messaging::IMessage* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::IMessageSink::SyncProcessMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SyncProcessMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessage*, false>(this, ___internal__method, msg);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage
System::Runtime::Remoting::Messaging::IMessageCtrl* System::Runtime::Remoting::Messaging::IMessageSink::AsyncProcessMessage(System::Runtime::Remoting::Messaging::IMessage* msg, System::Runtime::Remoting::Messaging::IMessageSink* replySink) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::IMessageSink::AsyncProcessMessage");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AsyncProcessMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg), ::il2cpp_utils::ExtractType(replySink)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::IMessageCtrl*, false>(this, ___internal__method, msg, replySink);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Messaging.IMethodMessage
#include "System/Runtime/Remoting/Messaging/IMethodMessage.hpp"
// Including type: System.Runtime.Remoting.Messaging.LogicalCallContext
#include "System/Runtime/Remoting/Messaging/LogicalCallContext.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Messaging.IMethodMessage.get_ArgCount
int System::Runtime::Remoting::Messaging::IMethodMessage::get_ArgCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::IMethodMessage::get_ArgCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ArgCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.IMethodMessage.get_Args
::Array<::Il2CppObject*>* System::Runtime::Remoting::Messaging::IMethodMessage::get_Args() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::IMethodMessage::get_Args");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Args", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.IMethodMessage.get_LogicalCallContext
System::Runtime::Remoting::Messaging::LogicalCallContext* System::Runtime::Remoting::Messaging::IMethodMessage::get_LogicalCallContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::IMethodMessage::get_LogicalCallContext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LogicalCallContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::LogicalCallContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.IMethodMessage.get_MethodBase
System::Reflection::MethodBase* System::Runtime::Remoting::Messaging::IMethodMessage::get_MethodBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::IMethodMessage::get_MethodBase");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MethodBase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodBase*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.IMethodMessage.get_MethodName
::Il2CppString* System::Runtime::Remoting::Messaging::IMethodMessage::get_MethodName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::IMethodMessage::get_MethodName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MethodName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.IMethodMessage.get_MethodSignature
::Il2CppObject* System::Runtime::Remoting::Messaging::IMethodMessage::get_MethodSignature() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::IMethodMessage::get_MethodSignature");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MethodSignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.IMethodMessage.get_TypeName
::Il2CppString* System::Runtime::Remoting::Messaging::IMethodMessage::get_TypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::IMethodMessage::get_TypeName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.IMethodMessage.get_Uri
::Il2CppString* System::Runtime::Remoting::Messaging::IMethodMessage::get_Uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::IMethodMessage::get_Uri");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Uri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.IMethodMessage.GetArg
::Il2CppObject* System::Runtime::Remoting::Messaging::IMethodMessage::GetArg(int argNum) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::IMethodMessage::GetArg");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArg", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(argNum)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, argNum);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Messaging.IMethodReturnMessage
#include "System/Runtime/Remoting/Messaging/IMethodReturnMessage.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Messaging.IMethodReturnMessage.get_Exception
System::Exception* System::Runtime::Remoting::Messaging::IMethodReturnMessage::get_Exception() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::IMethodReturnMessage::get_Exception");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Exception", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.IMethodReturnMessage.get_OutArgs
::Array<::Il2CppObject*>* System::Runtime::Remoting::Messaging::IMethodReturnMessage::get_OutArgs() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::IMethodReturnMessage::get_OutArgs");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OutArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.IMethodReturnMessage.get_ReturnValue
::Il2CppObject* System::Runtime::Remoting::Messaging::IMethodReturnMessage::get_ReturnValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::IMethodReturnMessage::get_ReturnValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReturnValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Messaging.MethodCall
#include "System/Runtime/Remoting/Messaging/MethodCall.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.MethodBase
#include "System/Reflection/MethodBase.hpp"
// Including type: System.Runtime.Remoting.Messaging.LogicalCallContext
#include "System/Runtime/Remoting/Messaging/LogicalCallContext.hpp"
// Including type: System.Runtime.Remoting.Identity
#include "System/Runtime/Remoting/Identity.hpp"
// Including type: System.Collections.IDictionary
#include "System/Collections/IDictionary.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Remoting.Messaging.CADMethodCallMessage
#include "System/Runtime/Remoting/Messaging/CADMethodCallMessage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Remoting.Messaging.MethodCall.CopyFrom
void System::Runtime::Remoting::Messaging::MethodCall::CopyFrom(System::Runtime::Remoting::Messaging::IMethodMessage* call) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::MethodCall::CopyFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(call)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, call);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.MethodCall.InitMethodProperty
void System::Runtime::Remoting::Messaging::MethodCall::InitMethodProperty(::Il2CppString* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::MethodCall::InitMethodProperty");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitMethodProperty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.MethodCall.GetObjectData
void System::Runtime::Remoting::Messaging::MethodCall::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::MethodCall::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.MethodCall.get_ArgCount
int System::Runtime::Remoting::Messaging::MethodCall::get_ArgCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::MethodCall::get_ArgCount");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ArgCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.MethodCall.get_Args
::Array<::Il2CppObject*>* System::Runtime::Remoting::Messaging::MethodCall::get_Args() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::MethodCall::get_Args");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Args", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.MethodCall.get_LogicalCallContext
System::Runtime::Remoting::Messaging::LogicalCallContext* System::Runtime::Remoting::Messaging::MethodCall::get_LogicalCallContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::MethodCall::get_LogicalCallContext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LogicalCallContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Messaging::LogicalCallContext*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.MethodCall.get_MethodBase
System::Reflection::MethodBase* System::Runtime::Remoting::Messaging::MethodCall::get_MethodBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::MethodCall::get_MethodBase");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MethodBase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::MethodBase*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.MethodCall.get_MethodName
::Il2CppString* System::Runtime::Remoting::Messaging::MethodCall::get_MethodName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::MethodCall::get_MethodName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MethodName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.MethodCall.get_MethodSignature
::Il2CppObject* System::Runtime::Remoting::Messaging::MethodCall::get_MethodSignature() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::MethodCall::get_MethodSignature");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MethodSignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.MethodCall.get_Properties
System::Collections::IDictionary* System::Runtime::Remoting::Messaging::MethodCall::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::MethodCall::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IDictionary*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.MethodCall.InitDictionary
void System::Runtime::Remoting::Messaging::MethodCall::InitDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::MethodCall::InitDictionary");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitDictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.MethodCall.get_TypeName
::Il2CppString* System::Runtime::Remoting::Messaging::MethodCall::get_TypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::MethodCall::get_TypeName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.MethodCall.get_Uri
::Il2CppString* System::Runtime::Remoting::Messaging::MethodCall::get_Uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::MethodCall::get_Uri");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Uri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.MethodCall.set_Uri
void System::Runtime::Remoting::Messaging::MethodCall::set_Uri(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::MethodCall::set_Uri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Uri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.MethodCall.System.Runtime.Remoting.Messaging.IInternalMessage.get_Uri
::Il2CppString* System::Runtime::Remoting::Messaging::MethodCall::System_Runtime_Remoting_Messaging_IInternalMessage_get_Uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::MethodCall::System.Runtime.Remoting.Messaging.IInternalMessage.get_Uri");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Remoting.Messaging.IInternalMessage.get_Uri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.MethodCall.System.Runtime.Remoting.Messaging.IInternalMessage.set_Uri
void System::Runtime::Remoting::Messaging::MethodCall::System_Runtime_Remoting_Messaging_IInternalMessage_set_Uri(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::MethodCall::System.Runtime.Remoting.Messaging.IInternalMessage.set_Uri");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Remoting.Messaging.IInternalMessage.set_Uri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.MethodCall.GetArg
::Il2CppObject* System::Runtime::Remoting::Messaging::MethodCall::GetArg(int argNum) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::MethodCall::GetArg");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetArg", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(argNum)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, argNum);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.MethodCall.Init
void System::Runtime::Remoting::Messaging::MethodCall::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::MethodCall::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.MethodCall.ResolveMethod
void System::Runtime::Remoting::Messaging::MethodCall::ResolveMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::MethodCall::ResolveMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.MethodCall.CastTo
System::Type* System::Runtime::Remoting::Messaging::MethodCall::CastTo(::Il2CppString* clientType, System::Type* serverType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::MethodCall::CastTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CastTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clientType), ::il2cpp_utils::ExtractType(serverType)})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, clientType, serverType);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.MethodCall.GetTypeNameFromAssemblyQualifiedName
::Il2CppString* System::Runtime::Remoting::Messaging::MethodCall::GetTypeNameFromAssemblyQualifiedName(::Il2CppString* aqname) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::MethodCall::GetTypeNameFromAssemblyQualifiedName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Messaging", "MethodCall", "GetTypeNameFromAssemblyQualifiedName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aqname)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, aqname);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.MethodCall.System.Runtime.Remoting.Messaging.IInternalMessage.get_TargetIdentity
System::Runtime::Remoting::Identity* System::Runtime::Remoting::Messaging::MethodCall::System_Runtime_Remoting_Messaging_IInternalMessage_get_TargetIdentity() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::MethodCall::System.Runtime.Remoting.Messaging.IInternalMessage.get_TargetIdentity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Remoting.Messaging.IInternalMessage.get_TargetIdentity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Remoting::Identity*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.MethodCall.System.Runtime.Remoting.Messaging.IInternalMessage.set_TargetIdentity
void System::Runtime::Remoting::Messaging::MethodCall::System_Runtime_Remoting_Messaging_IInternalMessage_set_TargetIdentity(System::Runtime::Remoting::Identity* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::MethodCall::System.Runtime.Remoting.Messaging.IInternalMessage.set_TargetIdentity");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Remoting.Messaging.IInternalMessage.set_TargetIdentity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Remoting.Messaging.MethodCall.get_GenericArguments
::Array<System::Type*>* System::Runtime::Remoting::Messaging::MethodCall::get_GenericArguments() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::MethodCall::get_GenericArguments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GenericArguments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Type*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Remoting.Messaging.MCMDictionary
#include "System/Runtime/Remoting/Messaging/MCMDictionary.hpp"
// Including type: System.Runtime.Remoting.Messaging.IMethodMessage
#include "System/Runtime/Remoting/Messaging/IMethodMessage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String[] InternalKeys
::Array<::Il2CppString*>* System::Runtime::Remoting::Messaging::MCMDictionary::_get_InternalKeys() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::MCMDictionary::_get_InternalKeys");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("System.Runtime.Remoting.Messaging", "MCMDictionary", "InternalKeys"));
}
// Autogenerated static field setter
// Set static field: static public System.String[] InternalKeys
void System::Runtime::Remoting::Messaging::MCMDictionary::_set_InternalKeys(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::MCMDictionary::_set_InternalKeys");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Remoting.Messaging", "MCMDictionary", "InternalKeys", value));
}
// Autogenerated method: System.Runtime.Remoting.Messaging.MCMDictionary..cctor
void System::Runtime::Remoting::Messaging::MCMDictionary::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Remoting::Messaging::MCMDictionary::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Remoting.Messaging", "MCMDictionary", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
