// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.RSAPKCS1SHA384SignatureDescription
#include "System/Security/Cryptography/RSAPKCS1SHA384SignatureDescription.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: RSAPKCS1SHA384SignatureDescription::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RSAPKCS1SHA384SignatureDescription::*)()>(&RSAPKCS1SHA384SignatureDescription::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RSAPKCS1SHA384SignatureDescription*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RSAPKCS1SHA384SignatureDescription::*)()>(&RSAPKCS1SHA384SignatureDescription::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RSAPKCS1SHA384SignatureDescription*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.RSAPKCS1SHA512SignatureDescription
#include "System/Security/Cryptography/RSAPKCS1SHA512SignatureDescription.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: RSAPKCS1SHA512SignatureDescription::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RSAPKCS1SHA512SignatureDescription::*)()>(&RSAPKCS1SHA512SignatureDescription::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RSAPKCS1SHA512SignatureDescription*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RSAPKCS1SHA512SignatureDescription::*)()>(&RSAPKCS1SHA512SignatureDescription::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RSAPKCS1SHA512SignatureDescription*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.DSASignatureDescription
#include "System/Security/Cryptography/DSASignatureDescription.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: DSASignatureDescription::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DSASignatureDescription::*)()>(&DSASignatureDescription::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DSASignatureDescription*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DSASignatureDescription::*)()>(&DSASignatureDescription::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DSASignatureDescription*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.SymmetricAlgorithm
#include "System/Security/Cryptography/SymmetricAlgorithm.hpp"
// Including type: System.Security.Cryptography.KeySizes
#include "System/Security/Cryptography/KeySizes.hpp"
// Including type: System.Security.Cryptography.ICryptoTransform
#include "System/Security/Cryptography/ICryptoTransform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.Dispose
void System::Security::Cryptography::SymmetricAlgorithm::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::SymmetricAlgorithm::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.Clear
void System::Security::Cryptography::SymmetricAlgorithm::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::SymmetricAlgorithm::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.Dispose
void System::Security::Cryptography::SymmetricAlgorithm::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::SymmetricAlgorithm::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.get_BlockSize
int System::Security::Cryptography::SymmetricAlgorithm::get_BlockSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::SymmetricAlgorithm::get_BlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.set_BlockSize
void System::Security::Cryptography::SymmetricAlgorithm::set_BlockSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::SymmetricAlgorithm::set_BlockSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BlockSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.get_FeedbackSize
int System::Security::Cryptography::SymmetricAlgorithm::get_FeedbackSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::SymmetricAlgorithm::get_FeedbackSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FeedbackSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.get_IV
::Array<uint8_t>* System::Security::Cryptography::SymmetricAlgorithm::get_IV() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::SymmetricAlgorithm::get_IV");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.set_IV
void System::Security::Cryptography::SymmetricAlgorithm::set_IV(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::SymmetricAlgorithm::set_IV");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.get_Key
::Array<uint8_t>* System::Security::Cryptography::SymmetricAlgorithm::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::SymmetricAlgorithm::get_Key");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.set_Key
void System::Security::Cryptography::SymmetricAlgorithm::set_Key(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::SymmetricAlgorithm::set_Key");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.get_LegalKeySizes
::Array<System::Security::Cryptography::KeySizes*>* System::Security::Cryptography::SymmetricAlgorithm::get_LegalKeySizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::SymmetricAlgorithm::get_LegalKeySizes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LegalKeySizes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Security::Cryptography::KeySizes*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.get_KeySize
int System::Security::Cryptography::SymmetricAlgorithm::get_KeySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::SymmetricAlgorithm::get_KeySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.set_KeySize
void System::Security::Cryptography::SymmetricAlgorithm::set_KeySize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::SymmetricAlgorithm::set_KeySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_KeySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.get_Mode
System::Security::Cryptography::CipherMode System::Security::Cryptography::SymmetricAlgorithm::get_Mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::SymmetricAlgorithm::get_Mode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::CipherMode, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.set_Mode
void System::Security::Cryptography::SymmetricAlgorithm::set_Mode(System::Security::Cryptography::CipherMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::SymmetricAlgorithm::set_Mode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.get_Padding
System::Security::Cryptography::PaddingMode System::Security::Cryptography::SymmetricAlgorithm::get_Padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::SymmetricAlgorithm::get_Padding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::PaddingMode, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.set_Padding
void System::Security::Cryptography::SymmetricAlgorithm::set_Padding(System::Security::Cryptography::PaddingMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::SymmetricAlgorithm::set_Padding");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Padding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize
bool System::Security::Cryptography::SymmetricAlgorithm::ValidKeySize(int bitLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::SymmetricAlgorithm::ValidKeySize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidKeySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bitLength)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, bitLength);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.Create
System::Security::Cryptography::SymmetricAlgorithm* System::Security::Cryptography::SymmetricAlgorithm::Create(::Il2CppString* algName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::SymmetricAlgorithm::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SymmetricAlgorithm", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(algName)})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::SymmetricAlgorithm*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, algName);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor
System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::SymmetricAlgorithm::CreateEncryptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::SymmetricAlgorithm::CreateEncryptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateEncryptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor
System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::SymmetricAlgorithm::CreateEncryptor(::Array<uint8_t>* rgbKey, ::Array<uint8_t>* rgbIV) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::SymmetricAlgorithm::CreateEncryptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateEncryptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgbKey), ::il2cpp_utils::ExtractType(rgbIV)})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method, rgbKey, rgbIV);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor
System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::SymmetricAlgorithm::CreateDecryptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::SymmetricAlgorithm::CreateDecryptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDecryptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor
System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::SymmetricAlgorithm::CreateDecryptor(::Array<uint8_t>* rgbKey, ::Array<uint8_t>* rgbIV) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::SymmetricAlgorithm::CreateDecryptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDecryptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgbKey), ::il2cpp_utils::ExtractType(rgbIV)})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method, rgbKey, rgbIV);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.GenerateKey
void System::Security::Cryptography::SymmetricAlgorithm::GenerateKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::SymmetricAlgorithm::GenerateKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SymmetricAlgorithm.GenerateIV
void System::Security::Cryptography::SymmetricAlgorithm::GenerateIV() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::SymmetricAlgorithm::GenerateIV");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateIV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: SymmetricAlgorithm::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SymmetricAlgorithm::*)()>(&SymmetricAlgorithm::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SymmetricAlgorithm*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SymmetricAlgorithm::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SymmetricAlgorithm::*)()>(&SymmetricAlgorithm::Clear)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SymmetricAlgorithm*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SymmetricAlgorithm::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SymmetricAlgorithm::*)(bool)>(&SymmetricAlgorithm::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SymmetricAlgorithm*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: SymmetricAlgorithm::get_BlockSize
// Il2CppName: get_BlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (SymmetricAlgorithm::*)()>(&SymmetricAlgorithm::get_BlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SymmetricAlgorithm*), "get_BlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SymmetricAlgorithm::set_BlockSize
// Il2CppName: set_BlockSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SymmetricAlgorithm::*)(int)>(&SymmetricAlgorithm::set_BlockSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SymmetricAlgorithm*), "set_BlockSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SymmetricAlgorithm::get_FeedbackSize
// Il2CppName: get_FeedbackSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (SymmetricAlgorithm::*)()>(&SymmetricAlgorithm::get_FeedbackSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SymmetricAlgorithm*), "get_FeedbackSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SymmetricAlgorithm::get_IV
// Il2CppName: get_IV
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (SymmetricAlgorithm::*)()>(&SymmetricAlgorithm::get_IV)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SymmetricAlgorithm*), "get_IV", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SymmetricAlgorithm::set_IV
// Il2CppName: set_IV
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SymmetricAlgorithm::*)(::Array<uint8_t>*)>(&SymmetricAlgorithm::set_IV)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SymmetricAlgorithm*), "set_IV", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: SymmetricAlgorithm::get_Key
// Il2CppName: get_Key
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (SymmetricAlgorithm::*)()>(&SymmetricAlgorithm::get_Key)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SymmetricAlgorithm*), "get_Key", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SymmetricAlgorithm::set_Key
// Il2CppName: set_Key
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SymmetricAlgorithm::*)(::Array<uint8_t>*)>(&SymmetricAlgorithm::set_Key)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SymmetricAlgorithm*), "set_Key", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: SymmetricAlgorithm::get_LegalKeySizes
// Il2CppName: get_LegalKeySizes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<System::Security::Cryptography::KeySizes*>* (SymmetricAlgorithm::*)()>(&SymmetricAlgorithm::get_LegalKeySizes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SymmetricAlgorithm*), "get_LegalKeySizes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SymmetricAlgorithm::get_KeySize
// Il2CppName: get_KeySize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (SymmetricAlgorithm::*)()>(&SymmetricAlgorithm::get_KeySize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SymmetricAlgorithm*), "get_KeySize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SymmetricAlgorithm::set_KeySize
// Il2CppName: set_KeySize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SymmetricAlgorithm::*)(int)>(&SymmetricAlgorithm::set_KeySize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SymmetricAlgorithm*), "set_KeySize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SymmetricAlgorithm::get_Mode
// Il2CppName: get_Mode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::CipherMode (SymmetricAlgorithm::*)()>(&SymmetricAlgorithm::get_Mode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SymmetricAlgorithm*), "get_Mode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SymmetricAlgorithm::set_Mode
// Il2CppName: set_Mode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SymmetricAlgorithm::*)(System::Security::Cryptography::CipherMode)>(&SymmetricAlgorithm::set_Mode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SymmetricAlgorithm*), "set_Mode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::CipherMode>()});
  }
};
// Writing MetadataGetter for method: SymmetricAlgorithm::get_Padding
// Il2CppName: get_Padding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::PaddingMode (SymmetricAlgorithm::*)()>(&SymmetricAlgorithm::get_Padding)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SymmetricAlgorithm*), "get_Padding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SymmetricAlgorithm::set_Padding
// Il2CppName: set_Padding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SymmetricAlgorithm::*)(System::Security::Cryptography::PaddingMode)>(&SymmetricAlgorithm::set_Padding)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SymmetricAlgorithm*), "set_Padding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::PaddingMode>()});
  }
};
// Writing MetadataGetter for method: SymmetricAlgorithm::ValidKeySize
// Il2CppName: ValidKeySize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (SymmetricAlgorithm::*)(int)>(&SymmetricAlgorithm::ValidKeySize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SymmetricAlgorithm*), "ValidKeySize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SymmetricAlgorithm::Create
// Il2CppName: Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::SymmetricAlgorithm* (*)(::Il2CppString*)>(&SymmetricAlgorithm::Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SymmetricAlgorithm*), "Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: SymmetricAlgorithm::CreateEncryptor
// Il2CppName: CreateEncryptor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::ICryptoTransform* (SymmetricAlgorithm::*)()>(&SymmetricAlgorithm::CreateEncryptor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SymmetricAlgorithm*), "CreateEncryptor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SymmetricAlgorithm::CreateEncryptor
// Il2CppName: CreateEncryptor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::ICryptoTransform* (SymmetricAlgorithm::*)(::Array<uint8_t>*, ::Array<uint8_t>*)>(&SymmetricAlgorithm::CreateEncryptor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SymmetricAlgorithm*), "CreateEncryptor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: SymmetricAlgorithm::CreateDecryptor
// Il2CppName: CreateDecryptor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::ICryptoTransform* (SymmetricAlgorithm::*)()>(&SymmetricAlgorithm::CreateDecryptor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SymmetricAlgorithm*), "CreateDecryptor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SymmetricAlgorithm::CreateDecryptor
// Il2CppName: CreateDecryptor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::ICryptoTransform* (SymmetricAlgorithm::*)(::Array<uint8_t>*, ::Array<uint8_t>*)>(&SymmetricAlgorithm::CreateDecryptor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SymmetricAlgorithm*), "CreateDecryptor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: SymmetricAlgorithm::GenerateKey
// Il2CppName: GenerateKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SymmetricAlgorithm::*)()>(&SymmetricAlgorithm::GenerateKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SymmetricAlgorithm*), "GenerateKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SymmetricAlgorithm::GenerateIV
// Il2CppName: GenerateIV
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SymmetricAlgorithm::*)()>(&SymmetricAlgorithm::GenerateIV)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SymmetricAlgorithm*), "GenerateIV", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SymmetricAlgorithm::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SymmetricAlgorithm::*)()>(&SymmetricAlgorithm::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SymmetricAlgorithm*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SymmetricAlgorithm::*)()>(&SymmetricAlgorithm::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SymmetricAlgorithm*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.TripleDES
#include "System/Security/Cryptography/TripleDES.hpp"
// Including type: System.Security.Cryptography.KeySizes
#include "System/Security/Cryptography/KeySizes.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.KeySizes[] s_legalBlockSizes
::Array<System::Security::Cryptography::KeySizes*>* System::Security::Cryptography::TripleDES::_get_s_legalBlockSizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::TripleDES::_get_s_legalBlockSizes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<System::Security::Cryptography::KeySizes*>*>("System.Security.Cryptography", "TripleDES", "s_legalBlockSizes"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.KeySizes[] s_legalBlockSizes
void System::Security::Cryptography::TripleDES::_set_s_legalBlockSizes(::Array<System::Security::Cryptography::KeySizes*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::TripleDES::_set_s_legalBlockSizes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "TripleDES", "s_legalBlockSizes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.KeySizes[] s_legalKeySizes
::Array<System::Security::Cryptography::KeySizes*>* System::Security::Cryptography::TripleDES::_get_s_legalKeySizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::TripleDES::_get_s_legalKeySizes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<System::Security::Cryptography::KeySizes*>*>("System.Security.Cryptography", "TripleDES", "s_legalKeySizes"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.KeySizes[] s_legalKeySizes
void System::Security::Cryptography::TripleDES::_set_s_legalKeySizes(::Array<System::Security::Cryptography::KeySizes*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::TripleDES::_set_s_legalKeySizes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "TripleDES", "s_legalKeySizes", value));
}
// Autogenerated method: System.Security.Cryptography.TripleDES.Create
System::Security::Cryptography::TripleDES* System::Security::Cryptography::TripleDES::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::TripleDES::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "TripleDES", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::TripleDES*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.TripleDES.IsWeakKey
bool System::Security::Cryptography::TripleDES::IsWeakKey(::Array<uint8_t>* rgbKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::TripleDES::IsWeakKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "TripleDES", "IsWeakKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgbKey)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rgbKey);
}
// Autogenerated method: System.Security.Cryptography.TripleDES.EqualBytes
bool System::Security::Cryptography::TripleDES::EqualBytes(::Array<uint8_t>* rgbKey, int start1, int start2, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::TripleDES::EqualBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "TripleDES", "EqualBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgbKey), ::il2cpp_utils::ExtractType(start1), ::il2cpp_utils::ExtractType(start2), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rgbKey, start1, start2, count);
}
// Autogenerated method: System.Security.Cryptography.TripleDES.IsLegalKeySize
bool System::Security::Cryptography::TripleDES::IsLegalKeySize(::Array<uint8_t>* rgbKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::TripleDES::IsLegalKeySize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "TripleDES", "IsLegalKeySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgbKey)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rgbKey);
}
// Autogenerated method: System.Security.Cryptography.TripleDES..cctor
void System::Security::Cryptography::TripleDES::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::TripleDES::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "TripleDES", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.TripleDES.get_Key
::Array<uint8_t>* System::Security::Cryptography::TripleDES::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::TripleDES::get_Key");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.TripleDES.set_Key
void System::Security::Cryptography::TripleDES::set_Key(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::TripleDES::set_Key");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: TripleDES::Create
// Il2CppName: Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::TripleDES* (*)()>(&TripleDES::Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TripleDES*), "Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TripleDES::IsWeakKey
// Il2CppName: IsWeakKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Array<uint8_t>*)>(&TripleDES::IsWeakKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TripleDES*), "IsWeakKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: TripleDES::EqualBytes
// Il2CppName: EqualBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Array<uint8_t>*, int, int, int)>(&TripleDES::EqualBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TripleDES*), "EqualBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: TripleDES::IsLegalKeySize
// Il2CppName: IsLegalKeySize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Array<uint8_t>*)>(&TripleDES::IsLegalKeySize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TripleDES*), "IsLegalKeySize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: TripleDES::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&TripleDES::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TripleDES*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TripleDES::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TripleDES::*)()>(&TripleDES::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TripleDES*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TripleDES::*)()>(&TripleDES::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TripleDES*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TripleDES::get_Key
// Il2CppName: get_Key
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (TripleDES::*)()>(&TripleDES::get_Key)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TripleDES*), "get_Key", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TripleDES::set_Key
// Il2CppName: set_Key
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TripleDES::*)(::Array<uint8_t>*)>(&TripleDES::set_Key)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TripleDES*), "set_Key", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.TripleDESCryptoServiceProvider
#include "System/Security/Cryptography/TripleDESCryptoServiceProvider.hpp"
// Including type: System.Security.Cryptography.ICryptoTransform
#include "System/Security/Cryptography/ICryptoTransform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor
System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::TripleDESCryptoServiceProvider::CreateEncryptor(::Array<uint8_t>* rgbKey, ::Array<uint8_t>* rgbIV) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::TripleDESCryptoServiceProvider::CreateEncryptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateEncryptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgbKey), ::il2cpp_utils::ExtractType(rgbIV)})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method, rgbKey, rgbIV);
}
// Autogenerated method: System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor
System::Security::Cryptography::ICryptoTransform* System::Security::Cryptography::TripleDESCryptoServiceProvider::CreateDecryptor(::Array<uint8_t>* rgbKey, ::Array<uint8_t>* rgbIV) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::TripleDESCryptoServiceProvider::CreateDecryptor");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateDecryptor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgbKey), ::il2cpp_utils::ExtractType(rgbIV)})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::ICryptoTransform*, false>(this, ___internal__method, rgbKey, rgbIV);
}
// Autogenerated method: System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateKey
void System::Security::Cryptography::TripleDESCryptoServiceProvider::GenerateKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::TripleDESCryptoServiceProvider::GenerateKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateIV
void System::Security::Cryptography::TripleDESCryptoServiceProvider::GenerateIV() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::TripleDESCryptoServiceProvider::GenerateIV");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateIV", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: TripleDESCryptoServiceProvider::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TripleDESCryptoServiceProvider::*)()>(&TripleDESCryptoServiceProvider::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TripleDESCryptoServiceProvider*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TripleDESCryptoServiceProvider::*)()>(&TripleDESCryptoServiceProvider::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TripleDESCryptoServiceProvider*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TripleDESCryptoServiceProvider::CreateEncryptor
// Il2CppName: CreateEncryptor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::ICryptoTransform* (TripleDESCryptoServiceProvider::*)(::Array<uint8_t>*, ::Array<uint8_t>*)>(&TripleDESCryptoServiceProvider::CreateEncryptor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TripleDESCryptoServiceProvider*), "CreateEncryptor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: TripleDESCryptoServiceProvider::CreateDecryptor
// Il2CppName: CreateDecryptor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::ICryptoTransform* (TripleDESCryptoServiceProvider::*)(::Array<uint8_t>*, ::Array<uint8_t>*)>(&TripleDESCryptoServiceProvider::CreateDecryptor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TripleDESCryptoServiceProvider*), "CreateDecryptor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: TripleDESCryptoServiceProvider::GenerateKey
// Il2CppName: GenerateKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TripleDESCryptoServiceProvider::*)()>(&TripleDESCryptoServiceProvider::GenerateKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TripleDESCryptoServiceProvider*), "GenerateKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TripleDESCryptoServiceProvider::GenerateIV
// Il2CppName: GenerateIV
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TripleDESCryptoServiceProvider::*)()>(&TripleDESCryptoServiceProvider::GenerateIV)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TripleDESCryptoServiceProvider*), "GenerateIV", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.Utils
#include "System/Security/Cryptography/Utils.hpp"
// Including type: System.Security.Cryptography.RNGCryptoServiceProvider
#include "System/Security/Cryptography/RNGCryptoServiceProvider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.RNGCryptoServiceProvider _rng
System::Security::Cryptography::RNGCryptoServiceProvider* System::Security::Cryptography::Utils::_get__rng() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::Utils::_get__rng");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Security::Cryptography::RNGCryptoServiceProvider*>("System.Security.Cryptography", "Utils", "_rng"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.RNGCryptoServiceProvider _rng
void System::Security::Cryptography::Utils::_set__rng(System::Security::Cryptography::RNGCryptoServiceProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::Utils::_set__rng");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "Utils", "_rng", value));
}
// Autogenerated method: System.Security.Cryptography.Utils.get_StaticRandomNumberGenerator
System::Security::Cryptography::RNGCryptoServiceProvider* System::Security::Cryptography::Utils::get_StaticRandomNumberGenerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::Utils::get_StaticRandomNumberGenerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Utils", "get_StaticRandomNumberGenerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::RNGCryptoServiceProvider*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.Utils.GenerateRandom
::Array<uint8_t>* System::Security::Cryptography::Utils::GenerateRandom(int keySize) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::Utils::GenerateRandom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Utils", "GenerateRandom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(keySize)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, keySize);
}
// Autogenerated method: System.Security.Cryptography.Utils.HasAlgorithm
bool System::Security::Cryptography::Utils::HasAlgorithm(int dwCalg, int dwKeySize) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::Utils::HasAlgorithm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Utils", "HasAlgorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dwCalg), ::il2cpp_utils::ExtractType(dwKeySize)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dwCalg, dwKeySize);
}
// Autogenerated method: System.Security.Cryptography.Utils.DiscardWhiteSpaces
::Il2CppString* System::Security::Cryptography::Utils::DiscardWhiteSpaces(::Il2CppString* inputBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::Utils::DiscardWhiteSpaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Utils", "DiscardWhiteSpaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, inputBuffer);
}
// Autogenerated method: System.Security.Cryptography.Utils.DiscardWhiteSpaces
::Il2CppString* System::Security::Cryptography::Utils::DiscardWhiteSpaces(::Il2CppString* inputBuffer, int inputOffset, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::Utils::DiscardWhiteSpaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Utils", "DiscardWhiteSpaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(inputOffset), ::il2cpp_utils::ExtractType(inputCount)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, inputBuffer, inputOffset, inputCount);
}
// Autogenerated method: System.Security.Cryptography.Utils.ConvertByteArrayToInt
int System::Security::Cryptography::Utils::ConvertByteArrayToInt(::Array<uint8_t>* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::Utils::ConvertByteArrayToInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Utils", "ConvertByteArrayToInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input);
}
// Autogenerated method: System.Security.Cryptography.Utils.ConvertIntToByteArray
::Array<uint8_t>* System::Security::Cryptography::Utils::ConvertIntToByteArray(int dwInput) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::Utils::ConvertIntToByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Utils", "ConvertIntToByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dwInput)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dwInput);
}
// Autogenerated method: System.Security.Cryptography.Utils.FixupKeyParity
::Array<uint8_t>* System::Security::Cryptography::Utils::FixupKeyParity(::Array<uint8_t>* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::Utils::FixupKeyParity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Utils", "FixupKeyParity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, key);
}
// Autogenerated method: System.Security.Cryptography.Utils.DWORDFromLittleEndian
void System::Security::Cryptography::Utils::DWORDFromLittleEndian(uint* x, int digits, uint8_t* block) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::Utils::DWORDFromLittleEndian");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Utils", "DWORDFromLittleEndian", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(digits), ::il2cpp_utils::ExtractType(block)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, digits, block);
}
// Autogenerated method: System.Security.Cryptography.Utils.DWORDToLittleEndian
void System::Security::Cryptography::Utils::DWORDToLittleEndian(::Array<uint8_t>* block, ::Array<uint>* x, int digits) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::Utils::DWORDToLittleEndian");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Utils", "DWORDToLittleEndian", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(block), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(digits)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, block, x, digits);
}
// Autogenerated method: System.Security.Cryptography.Utils.DWORDFromBigEndian
void System::Security::Cryptography::Utils::DWORDFromBigEndian(uint* x, int digits, uint8_t* block) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::Utils::DWORDFromBigEndian");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Utils", "DWORDFromBigEndian", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(digits), ::il2cpp_utils::ExtractType(block)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, digits, block);
}
// Autogenerated method: System.Security.Cryptography.Utils.DWORDToBigEndian
void System::Security::Cryptography::Utils::DWORDToBigEndian(::Array<uint8_t>* block, ::Array<uint>* x, int digits) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::Utils::DWORDToBigEndian");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Utils", "DWORDToBigEndian", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(block), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(digits)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, block, x, digits);
}
// Autogenerated method: System.Security.Cryptography.Utils.QuadWordFromBigEndian
void System::Security::Cryptography::Utils::QuadWordFromBigEndian(uint64_t* x, int digits, uint8_t* block) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::Utils::QuadWordFromBigEndian");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Utils", "QuadWordFromBigEndian", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(digits), ::il2cpp_utils::ExtractType(block)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x, digits, block);
}
// Autogenerated method: System.Security.Cryptography.Utils.QuadWordToBigEndian
void System::Security::Cryptography::Utils::QuadWordToBigEndian(::Array<uint8_t>* block, ::Array<uint64_t>* x, int digits) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::Utils::QuadWordToBigEndian");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Utils", "QuadWordToBigEndian", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(block), ::il2cpp_utils::ExtractType(x), ::il2cpp_utils::ExtractType(digits)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, block, x, digits);
}
// Autogenerated method: System.Security.Cryptography.Utils._ProduceLegacyHmacValues
bool System::Security::Cryptography::Utils::_ProduceLegacyHmacValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::Utils::_ProduceLegacyHmacValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "Utils", "_ProduceLegacyHmacValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: Utils::get_StaticRandomNumberGenerator
// Il2CppName: get_StaticRandomNumberGenerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::RNGCryptoServiceProvider* (*)()>(&Utils::get_StaticRandomNumberGenerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Utils*), "get_StaticRandomNumberGenerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Utils::GenerateRandom
// Il2CppName: GenerateRandom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)(int)>(&Utils::GenerateRandom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Utils*), "GenerateRandom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Utils::HasAlgorithm
// Il2CppName: HasAlgorithm
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(int, int)>(&Utils::HasAlgorithm)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Utils*), "HasAlgorithm", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Utils::DiscardWhiteSpaces
// Il2CppName: DiscardWhiteSpaces
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(::Il2CppString*)>(&Utils::DiscardWhiteSpaces)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Utils*), "DiscardWhiteSpaces", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Utils::DiscardWhiteSpaces
// Il2CppName: DiscardWhiteSpaces
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(::Il2CppString*, int, int)>(&Utils::DiscardWhiteSpaces)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Utils*), "DiscardWhiteSpaces", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Utils::ConvertByteArrayToInt
// Il2CppName: ConvertByteArrayToInt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Array<uint8_t>*)>(&Utils::ConvertByteArrayToInt)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Utils*), "ConvertByteArrayToInt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: Utils::ConvertIntToByteArray
// Il2CppName: ConvertIntToByteArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)(int)>(&Utils::ConvertIntToByteArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Utils*), "ConvertIntToByteArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Utils::FixupKeyParity
// Il2CppName: FixupKeyParity
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)(::Array<uint8_t>*)>(&Utils::FixupKeyParity)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Utils*), "FixupKeyParity", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: Utils::DWORDFromLittleEndian
// Il2CppName: DWORDFromLittleEndian
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint*, int, uint8_t*)>(&Utils::DWORDFromLittleEndian)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Utils*), "DWORDFromLittleEndian", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<uint8_t*>()});
  }
};
// Writing MetadataGetter for method: Utils::DWORDToLittleEndian
// Il2CppName: DWORDToLittleEndian
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Array<uint8_t>*, ::Array<uint>*, int)>(&Utils::DWORDToLittleEndian)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Utils*), "DWORDToLittleEndian", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Utils::DWORDFromBigEndian
// Il2CppName: DWORDFromBigEndian
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint*, int, uint8_t*)>(&Utils::DWORDFromBigEndian)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Utils*), "DWORDFromBigEndian", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<uint8_t*>()});
  }
};
// Writing MetadataGetter for method: Utils::DWORDToBigEndian
// Il2CppName: DWORDToBigEndian
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Array<uint8_t>*, ::Array<uint>*, int)>(&Utils::DWORDToBigEndian)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Utils*), "DWORDToBigEndian", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Utils::QuadWordFromBigEndian
// Il2CppName: QuadWordFromBigEndian
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(uint64_t*, int, uint8_t*)>(&Utils::QuadWordFromBigEndian)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Utils*), "QuadWordFromBigEndian", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<uint8_t*>()});
  }
};
// Writing MetadataGetter for method: Utils::QuadWordToBigEndian
// Il2CppName: QuadWordToBigEndian
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Array<uint8_t>*, ::Array<uint64_t>*, int)>(&Utils::QuadWordToBigEndian)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Utils*), "QuadWordToBigEndian", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint64_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Utils::_ProduceLegacyHmacValues
// Il2CppName: _ProduceLegacyHmacValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Utils::_ProduceLegacyHmacValues)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Utils*), "_ProduceLegacyHmacValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.CryptoConfig
#include "System/Security/Cryptography/CryptoConfig.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.CryptoConfig.EncodeOID
::Array<uint8_t>* System::Security::Cryptography::CryptoConfig::EncodeOID(::Il2CppString* str) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::CryptoConfig::EncodeOID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "CryptoConfig", "EncodeOID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str);
}
// Autogenerated method: System.Security.Cryptography.CryptoConfig.EncodeLongNumber
::Array<uint8_t>* System::Security::Cryptography::CryptoConfig::EncodeLongNumber(int64_t x) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::CryptoConfig::EncodeLongNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "CryptoConfig", "EncodeLongNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, x);
}
// Autogenerated method: System.Security.Cryptography.CryptoConfig.get_AllowOnlyFipsAlgorithms
bool System::Security::Cryptography::CryptoConfig::get_AllowOnlyFipsAlgorithms() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::CryptoConfig::get_AllowOnlyFipsAlgorithms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "CryptoConfig", "get_AllowOnlyFipsAlgorithms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.CryptoConfig.CreateFromName
::Il2CppObject* System::Security::Cryptography::CryptoConfig::CreateFromName(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::CryptoConfig::CreateFromName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "CryptoConfig", "CreateFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Security.Cryptography.CryptoConfig.CreateFromName
::Il2CppObject* System::Security::Cryptography::CryptoConfig::CreateFromName(::Il2CppString* name, ::Array<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::CryptoConfig::CreateFromName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "CryptoConfig", "CreateFromName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(args)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, args);
}
// Creating initializer_list -> params proxy for: System.Object CreateFromName(System.String name, params System.Object[] args)
::Il2CppObject* System::Security::Cryptography::CryptoConfig::CreateFromName(::Il2CppString* name, std::initializer_list<::Il2CppObject*> args) {
  return System::Security::Cryptography::CryptoConfig::CreateFromName(name, ::Array<::Il2CppObject*>::New(args));
}
// Autogenerated method: System.Security.Cryptography.CryptoConfig.MapNameToOID
::Il2CppString* System::Security::Cryptography::CryptoConfig::MapNameToOID(::Il2CppString* name, ::Il2CppObject* arg) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::CryptoConfig::MapNameToOID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "CryptoConfig", "MapNameToOID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(arg)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, arg);
}
// Autogenerated method: System.Security.Cryptography.CryptoConfig.MapNameToOID
::Il2CppString* System::Security::Cryptography::CryptoConfig::MapNameToOID(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::CryptoConfig::MapNameToOID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "CryptoConfig", "MapNameToOID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Writing MetadataGetter for method: CryptoConfig::EncodeOID
// Il2CppName: EncodeOID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)(::Il2CppString*)>(&CryptoConfig::EncodeOID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CryptoConfig*), "EncodeOID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CryptoConfig::EncodeLongNumber
// Il2CppName: EncodeLongNumber
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)(int64_t)>(&CryptoConfig::EncodeLongNumber)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CryptoConfig*), "EncodeLongNumber", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: CryptoConfig::get_AllowOnlyFipsAlgorithms
// Il2CppName: get_AllowOnlyFipsAlgorithms
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&CryptoConfig::get_AllowOnlyFipsAlgorithms)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CryptoConfig*), "get_AllowOnlyFipsAlgorithms", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CryptoConfig::CreateFromName
// Il2CppName: CreateFromName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(::Il2CppString*)>(&CryptoConfig::CreateFromName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CryptoConfig*), "CreateFromName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CryptoConfig::CreateFromName
// Il2CppName: CreateFromName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(::Il2CppString*, ::Array<::Il2CppObject*>*)>(&CryptoConfig::CreateFromName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CryptoConfig*), "CreateFromName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppObject*>*>()});
  }
};
// Writing MetadataGetter for method: CryptoConfig::MapNameToOID
// Il2CppName: MapNameToOID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(::Il2CppString*, ::Il2CppObject*)>(&CryptoConfig::MapNameToOID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CryptoConfig*), "MapNameToOID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: CryptoConfig::MapNameToOID
// Il2CppName: MapNameToOID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(::Il2CppString*)>(&CryptoConfig::MapNameToOID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CryptoConfig*), "MapNameToOID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.DESTransform
#include "System/Security/Cryptography/DESTransform.hpp"
// Including type: System.Security.Cryptography.SymmetricAlgorithm
#include "System/Security/Cryptography/SymmetricAlgorithm.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Int32 KEY_BIT_SIZE
int System::Security::Cryptography::DESTransform::_get_KEY_BIT_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::DESTransform::_get_KEY_BIT_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "DESTransform", "KEY_BIT_SIZE"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 KEY_BIT_SIZE
void System::Security::Cryptography::DESTransform::_set_KEY_BIT_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::DESTransform::_set_KEY_BIT_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DESTransform", "KEY_BIT_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 KEY_BYTE_SIZE
int System::Security::Cryptography::DESTransform::_get_KEY_BYTE_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::DESTransform::_get_KEY_BYTE_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "DESTransform", "KEY_BYTE_SIZE"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 KEY_BYTE_SIZE
void System::Security::Cryptography::DESTransform::_set_KEY_BYTE_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::DESTransform::_set_KEY_BYTE_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DESTransform", "KEY_BYTE_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 BLOCK_BIT_SIZE
int System::Security::Cryptography::DESTransform::_get_BLOCK_BIT_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::DESTransform::_get_BLOCK_BIT_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "DESTransform", "BLOCK_BIT_SIZE"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 BLOCK_BIT_SIZE
void System::Security::Cryptography::DESTransform::_set_BLOCK_BIT_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::DESTransform::_set_BLOCK_BIT_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DESTransform", "BLOCK_BIT_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Int32 BLOCK_BYTE_SIZE
int System::Security::Cryptography::DESTransform::_get_BLOCK_BYTE_SIZE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::DESTransform::_get_BLOCK_BYTE_SIZE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Security.Cryptography", "DESTransform", "BLOCK_BYTE_SIZE"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Int32 BLOCK_BYTE_SIZE
void System::Security::Cryptography::DESTransform::_set_BLOCK_BYTE_SIZE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::DESTransform::_set_BLOCK_BYTE_SIZE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DESTransform", "BLOCK_BYTE_SIZE", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] spBoxes
::Array<uint>* System::Security::Cryptography::DESTransform::_get_spBoxes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::DESTransform::_get_spBoxes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("System.Security.Cryptography", "DESTransform", "spBoxes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] spBoxes
void System::Security::Cryptography::DESTransform::_set_spBoxes(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::DESTransform::_set_spBoxes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DESTransform", "spBoxes", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] PC1
::Array<uint8_t>* System::Security::Cryptography::DESTransform::_get_PC1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::DESTransform::_get_PC1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("System.Security.Cryptography", "DESTransform", "PC1"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] PC1
void System::Security::Cryptography::DESTransform::_set_PC1(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::DESTransform::_set_PC1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DESTransform", "PC1", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] leftRotTotal
::Array<uint8_t>* System::Security::Cryptography::DESTransform::_get_leftRotTotal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::DESTransform::_get_leftRotTotal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("System.Security.Cryptography", "DESTransform", "leftRotTotal"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] leftRotTotal
void System::Security::Cryptography::DESTransform::_set_leftRotTotal(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::DESTransform::_set_leftRotTotal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DESTransform", "leftRotTotal", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] PC2
::Array<uint8_t>* System::Security::Cryptography::DESTransform::_get_PC2() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::DESTransform::_get_PC2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("System.Security.Cryptography", "DESTransform", "PC2"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] PC2
void System::Security::Cryptography::DESTransform::_set_PC2(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::DESTransform::_set_PC2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DESTransform", "PC2", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.UInt32[] ipTab
::Array<uint>* System::Security::Cryptography::DESTransform::_get_ipTab() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::DESTransform::_get_ipTab");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("System.Security.Cryptography", "DESTransform", "ipTab"));
}
// Autogenerated static field setter
// Set static field: static readonly System.UInt32[] ipTab
void System::Security::Cryptography::DESTransform::_set_ipTab(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::DESTransform::_set_ipTab");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DESTransform", "ipTab", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.UInt32[] fpTab
::Array<uint>* System::Security::Cryptography::DESTransform::_get_fpTab() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::DESTransform::_get_fpTab");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("System.Security.Cryptography", "DESTransform", "fpTab"));
}
// Autogenerated static field setter
// Set static field: static readonly System.UInt32[] fpTab
void System::Security::Cryptography::DESTransform::_set_fpTab(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::DESTransform::_set_fpTab");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DESTransform", "fpTab", value));
}
// Autogenerated method: System.Security.Cryptography.DESTransform.CipherFunct
uint System::Security::Cryptography::DESTransform::CipherFunct(uint r, int n) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::DESTransform::CipherFunct");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CipherFunct", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r), ::il2cpp_utils::ExtractType(n)})));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, r, n);
}
// Autogenerated method: System.Security.Cryptography.DESTransform.Permutation
void System::Security::Cryptography::DESTransform::Permutation(::Array<uint8_t>* input, ::Array<uint8_t>* output, ::Array<uint>* permTab, bool preSwap) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::DESTransform::Permutation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "DESTransform", "Permutation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractType(permTab), ::il2cpp_utils::ExtractType(preSwap)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, output, permTab, preSwap);
}
// Autogenerated method: System.Security.Cryptography.DESTransform.BSwap
void System::Security::Cryptography::DESTransform::BSwap(::Array<uint8_t>* byteBuff) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::DESTransform::BSwap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "DESTransform", "BSwap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(byteBuff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, byteBuff);
}
// Autogenerated method: System.Security.Cryptography.DESTransform.SetKey
void System::Security::Cryptography::DESTransform::SetKey(::Array<uint8_t>* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::DESTransform::SetKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Security.Cryptography.DESTransform.ProcessBlock
void System::Security::Cryptography::DESTransform::ProcessBlock(::Array<uint8_t>* input, ::Array<uint8_t>* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::DESTransform::ProcessBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, output);
}
// Autogenerated method: System.Security.Cryptography.DESTransform.GetStrongKey
::Array<uint8_t>* System::Security::Cryptography::DESTransform::GetStrongKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::DESTransform::GetStrongKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "DESTransform", "GetStrongKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DESTransform..cctor
void System::Security::Cryptography::DESTransform::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::DESTransform::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "DESTransform", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DESTransform.ECB
void System::Security::Cryptography::DESTransform::ECB(::Array<uint8_t>* input, ::Array<uint8_t>* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::DESTransform::ECB");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ECB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, output);
}
// Writing MetadataGetter for method: DESTransform::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DESTransform::*)(System::Security::Cryptography::SymmetricAlgorithm*, bool, ::Array<uint8_t>*, ::Array<uint8_t>*)>(&DESTransform::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DESTransform*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::SymmetricAlgorithm*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DESTransform::*)(System::Security::Cryptography::SymmetricAlgorithm*, bool, ::Array<uint8_t>*, ::Array<uint8_t>*)>(&DESTransform::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DESTransform*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::SymmetricAlgorithm*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: DESTransform::CipherFunct
// Il2CppName: CipherFunct
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<uint (DESTransform::*)(uint, int)>(&DESTransform::CipherFunct)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DESTransform*), "CipherFunct", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: DESTransform::Permutation
// Il2CppName: Permutation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Array<uint8_t>*, ::Array<uint8_t>*, ::Array<uint>*, bool)>(&DESTransform::Permutation)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DESTransform*), "Permutation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint>*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: DESTransform::BSwap
// Il2CppName: BSwap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Array<uint8_t>*)>(&DESTransform::BSwap)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DESTransform*), "BSwap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: DESTransform::SetKey
// Il2CppName: SetKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DESTransform::*)(::Array<uint8_t>*)>(&DESTransform::SetKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DESTransform*), "SetKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: DESTransform::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DESTransform::*)(::Array<uint8_t>*, ::Array<uint8_t>*)>(&DESTransform::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DESTransform*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: DESTransform::GetStrongKey
// Il2CppName: GetStrongKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)()>(&DESTransform::GetStrongKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DESTransform*), "GetStrongKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DESTransform::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&DESTransform::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DESTransform*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DESTransform::ECB
// Il2CppName: ECB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DESTransform::*)(::Array<uint8_t>*, ::Array<uint8_t>*)>(&DESTransform::ECB)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DESTransform*), "ECB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.DSACryptoServiceProvider
#include "System/Security/Cryptography/DSACryptoServiceProvider.hpp"
// Including type: Mono.Security.Cryptography.KeyPairPersistence
#include "Mono/Security/Cryptography/KeyPairPersistence.hpp"
// Including type: Mono.Security.Cryptography.DSAManaged
#include "Mono/Security/Cryptography/DSAManaged.hpp"
// Including type: System.EventArgs
#include "System/EventArgs.hpp"
// Including type: System.Security.Cryptography.DSAParameters
#include "System/Security/Cryptography/DSAParameters.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean useMachineKeyStore
bool System::Security::Cryptography::DSACryptoServiceProvider::_get_useMachineKeyStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::DSACryptoServiceProvider::_get_useMachineKeyStore");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Security.Cryptography", "DSACryptoServiceProvider", "useMachineKeyStore"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean useMachineKeyStore
void System::Security::Cryptography::DSACryptoServiceProvider::_set_useMachineKeyStore(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::DSACryptoServiceProvider::_set_useMachineKeyStore");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "DSACryptoServiceProvider", "useMachineKeyStore", value));
}
// Autogenerated method: System.Security.Cryptography.DSACryptoServiceProvider.Common
void System::Security::Cryptography::DSACryptoServiceProvider::Common(int dwKeySize, bool parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::DSACryptoServiceProvider::Common");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Common", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dwKeySize), ::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, dwKeySize, parameters);
}
// Autogenerated method: System.Security.Cryptography.DSACryptoServiceProvider.get_PublicOnly
bool System::Security::Cryptography::DSACryptoServiceProvider::get_PublicOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::DSACryptoServiceProvider::get_PublicOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PublicOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DSACryptoServiceProvider.OnKeyGenerated
void System::Security::Cryptography::DSACryptoServiceProvider::OnKeyGenerated(::Il2CppObject* sender, System::EventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::DSACryptoServiceProvider::OnKeyGenerated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnKeyGenerated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sender, e);
}
// Autogenerated method: System.Security.Cryptography.DSACryptoServiceProvider.Finalize
void System::Security::Cryptography::DSACryptoServiceProvider::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::DSACryptoServiceProvider::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DSACryptoServiceProvider.get_KeySize
int System::Security::Cryptography::DSACryptoServiceProvider::get_KeySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::DSACryptoServiceProvider::get_KeySize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_KeySize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.DSACryptoServiceProvider.ExportParameters
System::Security::Cryptography::DSAParameters System::Security::Cryptography::DSACryptoServiceProvider::ExportParameters(bool includePrivateParameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::DSACryptoServiceProvider::ExportParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExportParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(includePrivateParameters)})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::DSAParameters, false>(this, ___internal__method, includePrivateParameters);
}
// Autogenerated method: System.Security.Cryptography.DSACryptoServiceProvider.ImportParameters
void System::Security::Cryptography::DSACryptoServiceProvider::ImportParameters(System::Security::Cryptography::DSAParameters parameters) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::DSACryptoServiceProvider::ImportParameters");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImportParameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parameters)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, parameters);
}
// Autogenerated method: System.Security.Cryptography.DSACryptoServiceProvider.VerifySignature
bool System::Security::Cryptography::DSACryptoServiceProvider::VerifySignature(::Array<uint8_t>* rgbHash, ::Array<uint8_t>* rgbSignature) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::DSACryptoServiceProvider::VerifySignature");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifySignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgbHash), ::il2cpp_utils::ExtractType(rgbSignature)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, rgbHash, rgbSignature);
}
// Autogenerated method: System.Security.Cryptography.DSACryptoServiceProvider.Dispose
void System::Security::Cryptography::DSACryptoServiceProvider::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::DSACryptoServiceProvider::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Writing MetadataGetter for method: DSACryptoServiceProvider::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DSACryptoServiceProvider::*)(int)>(&DSACryptoServiceProvider::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DSACryptoServiceProvider*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DSACryptoServiceProvider::*)(int)>(&DSACryptoServiceProvider::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DSACryptoServiceProvider*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: DSACryptoServiceProvider::Common
// Il2CppName: Common
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DSACryptoServiceProvider::*)(int, bool)>(&DSACryptoServiceProvider::Common)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DSACryptoServiceProvider*), "Common", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: DSACryptoServiceProvider::get_PublicOnly
// Il2CppName: get_PublicOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DSACryptoServiceProvider::*)()>(&DSACryptoServiceProvider::get_PublicOnly)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DSACryptoServiceProvider*), "get_PublicOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DSACryptoServiceProvider::OnKeyGenerated
// Il2CppName: OnKeyGenerated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DSACryptoServiceProvider::*)(::Il2CppObject*, System::EventArgs*)>(&DSACryptoServiceProvider::OnKeyGenerated)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DSACryptoServiceProvider*), "OnKeyGenerated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::EventArgs*>()});
  }
};
// Writing MetadataGetter for method: DSACryptoServiceProvider::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DSACryptoServiceProvider::*)()>(&DSACryptoServiceProvider::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DSACryptoServiceProvider*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DSACryptoServiceProvider::*)()>(&DSACryptoServiceProvider::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DSACryptoServiceProvider*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DSACryptoServiceProvider::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DSACryptoServiceProvider::*)()>(&DSACryptoServiceProvider::Finalize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DSACryptoServiceProvider*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DSACryptoServiceProvider::get_KeySize
// Il2CppName: get_KeySize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (DSACryptoServiceProvider::*)()>(&DSACryptoServiceProvider::get_KeySize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DSACryptoServiceProvider*), "get_KeySize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DSACryptoServiceProvider::ExportParameters
// Il2CppName: ExportParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::DSAParameters (DSACryptoServiceProvider::*)(bool)>(&DSACryptoServiceProvider::ExportParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DSACryptoServiceProvider*), "ExportParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: DSACryptoServiceProvider::ImportParameters
// Il2CppName: ImportParameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DSACryptoServiceProvider::*)(System::Security::Cryptography::DSAParameters)>(&DSACryptoServiceProvider::ImportParameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DSACryptoServiceProvider*), "ImportParameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::DSAParameters>()});
  }
};
// Writing MetadataGetter for method: DSACryptoServiceProvider::VerifySignature
// Il2CppName: VerifySignature
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (DSACryptoServiceProvider::*)(::Array<uint8_t>*, ::Array<uint8_t>*)>(&DSACryptoServiceProvider::VerifySignature)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DSACryptoServiceProvider*), "VerifySignature", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: DSACryptoServiceProvider::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DSACryptoServiceProvider::*)(bool)>(&DSACryptoServiceProvider::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DSACryptoServiceProvider*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.MD5CryptoServiceProvider
#include "System/Security/Cryptography/MD5CryptoServiceProvider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.UInt32[] K
::Array<uint>* System::Security::Cryptography::MD5CryptoServiceProvider::_get_K() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::MD5CryptoServiceProvider::_get_K");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint>*>("System.Security.Cryptography", "MD5CryptoServiceProvider", "K"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt32[] K
void System::Security::Cryptography::MD5CryptoServiceProvider::_set_K(::Array<uint>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::MD5CryptoServiceProvider::_set_K");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "MD5CryptoServiceProvider", "K", value));
}
// Autogenerated method: System.Security.Cryptography.MD5CryptoServiceProvider.ProcessBlock
void System::Security::Cryptography::MD5CryptoServiceProvider::ProcessBlock(::Array<uint8_t>* inputBuffer, int inputOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::MD5CryptoServiceProvider::ProcessBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(inputOffset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inputBuffer, inputOffset);
}
// Autogenerated method: System.Security.Cryptography.MD5CryptoServiceProvider.ProcessFinalBlock
void System::Security::Cryptography::MD5CryptoServiceProvider::ProcessFinalBlock(::Array<uint8_t>* inputBuffer, int inputOffset, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::MD5CryptoServiceProvider::ProcessFinalBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFinalBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(inputOffset), ::il2cpp_utils::ExtractType(inputCount)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount);
}
// Autogenerated method: System.Security.Cryptography.MD5CryptoServiceProvider.AddLength
void System::Security::Cryptography::MD5CryptoServiceProvider::AddLength(uint64_t length, ::Array<uint8_t>* buffer, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::MD5CryptoServiceProvider::AddLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, length, buffer, position);
}
// Autogenerated method: System.Security.Cryptography.MD5CryptoServiceProvider..cctor
void System::Security::Cryptography::MD5CryptoServiceProvider::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::MD5CryptoServiceProvider::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "MD5CryptoServiceProvider", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.MD5CryptoServiceProvider.Finalize
void System::Security::Cryptography::MD5CryptoServiceProvider::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::MD5CryptoServiceProvider::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.MD5CryptoServiceProvider.Dispose
void System::Security::Cryptography::MD5CryptoServiceProvider::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::MD5CryptoServiceProvider::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Security.Cryptography.MD5CryptoServiceProvider.HashCore
void System::Security::Cryptography::MD5CryptoServiceProvider::HashCore(::Array<uint8_t>* rgb, int ibStart, int cbSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::MD5CryptoServiceProvider::HashCore");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HashCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgb), ::il2cpp_utils::ExtractType(ibStart), ::il2cpp_utils::ExtractType(cbSize)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rgb, ibStart, cbSize);
}
// Autogenerated method: System.Security.Cryptography.MD5CryptoServiceProvider.HashFinal
::Array<uint8_t>* System::Security::Cryptography::MD5CryptoServiceProvider::HashFinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::MD5CryptoServiceProvider::HashFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HashFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.MD5CryptoServiceProvider.Initialize
void System::Security::Cryptography::MD5CryptoServiceProvider::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::MD5CryptoServiceProvider::Initialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MD5CryptoServiceProvider::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD5CryptoServiceProvider::*)(::Array<uint8_t>*, int)>(&MD5CryptoServiceProvider::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD5CryptoServiceProvider*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MD5CryptoServiceProvider::ProcessFinalBlock
// Il2CppName: ProcessFinalBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD5CryptoServiceProvider::*)(::Array<uint8_t>*, int, int)>(&MD5CryptoServiceProvider::ProcessFinalBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD5CryptoServiceProvider*), "ProcessFinalBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MD5CryptoServiceProvider::AddLength
// Il2CppName: AddLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD5CryptoServiceProvider::*)(uint64_t, ::Array<uint8_t>*, int)>(&MD5CryptoServiceProvider::AddLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD5CryptoServiceProvider*), "AddLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MD5CryptoServiceProvider::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&MD5CryptoServiceProvider::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD5CryptoServiceProvider*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MD5CryptoServiceProvider::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD5CryptoServiceProvider::*)()>(&MD5CryptoServiceProvider::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD5CryptoServiceProvider*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD5CryptoServiceProvider::*)()>(&MD5CryptoServiceProvider::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD5CryptoServiceProvider*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MD5CryptoServiceProvider::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD5CryptoServiceProvider::*)()>(&MD5CryptoServiceProvider::Finalize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD5CryptoServiceProvider*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MD5CryptoServiceProvider::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD5CryptoServiceProvider::*)(bool)>(&MD5CryptoServiceProvider::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD5CryptoServiceProvider*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: MD5CryptoServiceProvider::HashCore
// Il2CppName: HashCore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD5CryptoServiceProvider::*)(::Array<uint8_t>*, int, int)>(&MD5CryptoServiceProvider::HashCore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD5CryptoServiceProvider*), "HashCore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MD5CryptoServiceProvider::HashFinal
// Il2CppName: HashFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (MD5CryptoServiceProvider::*)()>(&MD5CryptoServiceProvider::HashFinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD5CryptoServiceProvider*), "HashFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MD5CryptoServiceProvider::Initialize
// Il2CppName: Initialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MD5CryptoServiceProvider::*)()>(&MD5CryptoServiceProvider::Initialize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MD5CryptoServiceProvider*), "Initialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.RC2Transform
#include "System/Security/Cryptography/RC2Transform.hpp"
// Including type: System.Security.Cryptography.RC2
#include "System/Security/Cryptography/RC2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Byte[] pitable
::Array<uint8_t>* System::Security::Cryptography::RC2Transform::_get_pitable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::RC2Transform::_get_pitable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<uint8_t>*>("System.Security.Cryptography", "RC2Transform", "pitable"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Byte[] pitable
void System::Security::Cryptography::RC2Transform::_set_pitable(::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::RC2Transform::_set_pitable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "RC2Transform", "pitable", value));
}
// Autogenerated method: System.Security.Cryptography.RC2Transform..cctor
void System::Security::Cryptography::RC2Transform::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::RC2Transform::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RC2Transform", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RC2Transform.ECB
void System::Security::Cryptography::RC2Transform::ECB(::Array<uint8_t>* input, ::Array<uint8_t>* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::RC2Transform::ECB");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ECB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, output);
}
// Writing MetadataGetter for method: RC2Transform::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RC2Transform::*)(System::Security::Cryptography::RC2*, bool, ::Array<uint8_t>*, ::Array<uint8_t>*)>(&RC2Transform::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC2Transform*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::RC2*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RC2Transform::*)(System::Security::Cryptography::RC2*, bool, ::Array<uint8_t>*, ::Array<uint8_t>*)>(&RC2Transform::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC2Transform*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::RC2*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: RC2Transform::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&RC2Transform::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC2Transform*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RC2Transform::ECB
// Il2CppName: ECB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RC2Transform::*)(::Array<uint8_t>*, ::Array<uint8_t>*)>(&RC2Transform::ECB)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RC2Transform*), "ECB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.RNGCryptoServiceProvider
#include "System/Security/Cryptography/RNGCryptoServiceProvider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Object _lock
::Il2CppObject* System::Security::Cryptography::RNGCryptoServiceProvider::_get__lock() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::RNGCryptoServiceProvider::_get__lock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Security.Cryptography", "RNGCryptoServiceProvider", "_lock"));
}
// Autogenerated static field setter
// Set static field: static private System.Object _lock
void System::Security::Cryptography::RNGCryptoServiceProvider::_set__lock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::RNGCryptoServiceProvider::_set__lock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography", "RNGCryptoServiceProvider", "_lock", value));
}
// Autogenerated method: System.Security.Cryptography.RNGCryptoServiceProvider..cctor
void System::Security::Cryptography::RNGCryptoServiceProvider::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::RNGCryptoServiceProvider::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RNGCryptoServiceProvider", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RNGCryptoServiceProvider.Check
void System::Security::Cryptography::RNGCryptoServiceProvider::Check() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::RNGCryptoServiceProvider::Check");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Check", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RNGCryptoServiceProvider.RngOpen
bool System::Security::Cryptography::RNGCryptoServiceProvider::RngOpen() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::RNGCryptoServiceProvider::RngOpen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RNGCryptoServiceProvider", "RngOpen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RNGCryptoServiceProvider.RngInitialize
System::IntPtr System::Security::Cryptography::RNGCryptoServiceProvider::RngInitialize(::Array<uint8_t>* seed) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::RNGCryptoServiceProvider::RngInitialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RNGCryptoServiceProvider", "RngInitialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(seed)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, seed);
}
// Autogenerated method: System.Security.Cryptography.RNGCryptoServiceProvider.RngGetBytes
System::IntPtr System::Security::Cryptography::RNGCryptoServiceProvider::RngGetBytes(System::IntPtr handle, ::Array<uint8_t>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::RNGCryptoServiceProvider::RngGetBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RNGCryptoServiceProvider", "RngGetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, data);
}
// Autogenerated method: System.Security.Cryptography.RNGCryptoServiceProvider.RngClose
void System::Security::Cryptography::RNGCryptoServiceProvider::RngClose(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::RNGCryptoServiceProvider::RngClose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "RNGCryptoServiceProvider", "RngClose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes
void System::Security::Cryptography::RNGCryptoServiceProvider::GetBytes(::Array<uint8_t>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::RNGCryptoServiceProvider::GetBytes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Security.Cryptography.RNGCryptoServiceProvider.Finalize
void System::Security::Cryptography::RNGCryptoServiceProvider::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::RNGCryptoServiceProvider::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.RNGCryptoServiceProvider.Dispose
void System::Security::Cryptography::RNGCryptoServiceProvider::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::RNGCryptoServiceProvider::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Writing MetadataGetter for method: RNGCryptoServiceProvider::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&RNGCryptoServiceProvider::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RNGCryptoServiceProvider*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RNGCryptoServiceProvider::Check
// Il2CppName: Check
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RNGCryptoServiceProvider::*)()>(&RNGCryptoServiceProvider::Check)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RNGCryptoServiceProvider*), "Check", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RNGCryptoServiceProvider::RngOpen
// Il2CppName: RngOpen
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&RNGCryptoServiceProvider::RngOpen)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RNGCryptoServiceProvider*), "RngOpen", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RNGCryptoServiceProvider::RngInitialize
// Il2CppName: RngInitialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(::Array<uint8_t>*)>(&RNGCryptoServiceProvider::RngInitialize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RNGCryptoServiceProvider*), "RngInitialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: RNGCryptoServiceProvider::RngGetBytes
// Il2CppName: RngGetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr, ::Array<uint8_t>*)>(&RNGCryptoServiceProvider::RngGetBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RNGCryptoServiceProvider*), "RngGetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: RNGCryptoServiceProvider::RngClose
// Il2CppName: RngClose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr)>(&RNGCryptoServiceProvider::RngClose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RNGCryptoServiceProvider*), "RngClose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: RNGCryptoServiceProvider::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RNGCryptoServiceProvider::*)()>(&RNGCryptoServiceProvider::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RNGCryptoServiceProvider*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RNGCryptoServiceProvider::*)()>(&RNGCryptoServiceProvider::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RNGCryptoServiceProvider*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RNGCryptoServiceProvider::GetBytes
// Il2CppName: GetBytes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RNGCryptoServiceProvider::*)(::Array<uint8_t>*)>(&RNGCryptoServiceProvider::GetBytes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RNGCryptoServiceProvider*), "GetBytes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: RNGCryptoServiceProvider::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RNGCryptoServiceProvider::*)()>(&RNGCryptoServiceProvider::Finalize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RNGCryptoServiceProvider*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RNGCryptoServiceProvider::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RNGCryptoServiceProvider::*)(bool)>(&RNGCryptoServiceProvider::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RNGCryptoServiceProvider*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.RSAPKCS1SignatureDeformatter
#include "System/Security/Cryptography/RSAPKCS1SignatureDeformatter.hpp"
// Including type: System.Security.Cryptography.RSA
#include "System/Security/Cryptography/RSA.hpp"
// Including type: System.Security.Cryptography.AsymmetricAlgorithm
#include "System/Security/Cryptography/AsymmetricAlgorithm.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.RSAPKCS1SignatureDeformatter.SetHashAlgorithm
void System::Security::Cryptography::RSAPKCS1SignatureDeformatter::SetHashAlgorithm(::Il2CppString* strName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::RSAPKCS1SignatureDeformatter::SetHashAlgorithm");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHashAlgorithm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(strName)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, strName);
}
// Autogenerated method: System.Security.Cryptography.RSAPKCS1SignatureDeformatter.SetKey
void System::Security::Cryptography::RSAPKCS1SignatureDeformatter::SetKey(System::Security::Cryptography::AsymmetricAlgorithm* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::RSAPKCS1SignatureDeformatter::SetKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Security.Cryptography.RSAPKCS1SignatureDeformatter.VerifySignature
bool System::Security::Cryptography::RSAPKCS1SignatureDeformatter::VerifySignature(::Array<uint8_t>* rgbHash, ::Array<uint8_t>* rgbSignature) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::RSAPKCS1SignatureDeformatter::VerifySignature");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VerifySignature", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgbHash), ::il2cpp_utils::ExtractType(rgbSignature)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, rgbHash, rgbSignature);
}
// Writing MetadataGetter for method: RSAPKCS1SignatureDeformatter::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RSAPKCS1SignatureDeformatter::*)(System::Security::Cryptography::AsymmetricAlgorithm*)>(&RSAPKCS1SignatureDeformatter::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RSAPKCS1SignatureDeformatter*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::AsymmetricAlgorithm*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RSAPKCS1SignatureDeformatter::*)(System::Security::Cryptography::AsymmetricAlgorithm*)>(&RSAPKCS1SignatureDeformatter::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RSAPKCS1SignatureDeformatter*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::AsymmetricAlgorithm*>()});
  }
};
// Writing MetadataGetter for method: RSAPKCS1SignatureDeformatter::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RSAPKCS1SignatureDeformatter::*)()>(&RSAPKCS1SignatureDeformatter::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RSAPKCS1SignatureDeformatter*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RSAPKCS1SignatureDeformatter::*)()>(&RSAPKCS1SignatureDeformatter::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RSAPKCS1SignatureDeformatter*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RSAPKCS1SignatureDeformatter::SetHashAlgorithm
// Il2CppName: SetHashAlgorithm
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RSAPKCS1SignatureDeformatter::*)(::Il2CppString*)>(&RSAPKCS1SignatureDeformatter::SetHashAlgorithm)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RSAPKCS1SignatureDeformatter*), "SetHashAlgorithm", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: RSAPKCS1SignatureDeformatter::SetKey
// Il2CppName: SetKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RSAPKCS1SignatureDeformatter::*)(System::Security::Cryptography::AsymmetricAlgorithm*)>(&RSAPKCS1SignatureDeformatter::SetKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RSAPKCS1SignatureDeformatter*), "SetKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::AsymmetricAlgorithm*>()});
  }
};
// Writing MetadataGetter for method: RSAPKCS1SignatureDeformatter::VerifySignature
// Il2CppName: VerifySignature
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (RSAPKCS1SignatureDeformatter::*)(::Array<uint8_t>*, ::Array<uint8_t>*)>(&RSAPKCS1SignatureDeformatter::VerifySignature)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RSAPKCS1SignatureDeformatter*), "VerifySignature", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.RSAPKCS1SignatureFormatter
#include "System/Security/Cryptography/RSAPKCS1SignatureFormatter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: RSAPKCS1SignatureFormatter::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RSAPKCS1SignatureFormatter::*)()>(&RSAPKCS1SignatureFormatter::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RSAPKCS1SignatureFormatter*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RSAPKCS1SignatureFormatter::*)()>(&RSAPKCS1SignatureFormatter::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RSAPKCS1SignatureFormatter*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.SHA1Internal
#include "System/Security/Cryptography/SHA1Internal.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.SHA1Internal.HashCore
void System::Security::Cryptography::SHA1Internal::HashCore(::Array<uint8_t>* rgb, int ibStart, int cbSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::SHA1Internal::HashCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HashCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgb), ::il2cpp_utils::ExtractType(ibStart), ::il2cpp_utils::ExtractType(cbSize)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rgb, ibStart, cbSize);
}
// Autogenerated method: System.Security.Cryptography.SHA1Internal.HashFinal
::Array<uint8_t>* System::Security::Cryptography::SHA1Internal::HashFinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::SHA1Internal::HashFinal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HashFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SHA1Internal.Initialize
void System::Security::Cryptography::SHA1Internal::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::SHA1Internal::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SHA1Internal.ProcessBlock
void System::Security::Cryptography::SHA1Internal::ProcessBlock(::Array<uint8_t>* inputBuffer, uint inputOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::SHA1Internal::ProcessBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(inputOffset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inputBuffer, inputOffset);
}
// Autogenerated method: System.Security.Cryptography.SHA1Internal.InitialiseBuff
void System::Security::Cryptography::SHA1Internal::InitialiseBuff(::Array<uint>* buff, ::Array<uint8_t>* input, uint inputOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::SHA1Internal::InitialiseBuff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA1Internal", "InitialiseBuff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buff), ::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(inputOffset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, buff, input, inputOffset);
}
// Autogenerated method: System.Security.Cryptography.SHA1Internal.FillBuff
void System::Security::Cryptography::SHA1Internal::FillBuff(::Array<uint>* buff) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::SHA1Internal::FillBuff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "SHA1Internal", "FillBuff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buff)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, buff);
}
// Autogenerated method: System.Security.Cryptography.SHA1Internal.ProcessFinalBlock
void System::Security::Cryptography::SHA1Internal::ProcessFinalBlock(::Array<uint8_t>* inputBuffer, int inputOffset, int inputCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::SHA1Internal::ProcessFinalBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessFinalBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inputBuffer), ::il2cpp_utils::ExtractType(inputOffset), ::il2cpp_utils::ExtractType(inputCount)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inputBuffer, inputOffset, inputCount);
}
// Autogenerated method: System.Security.Cryptography.SHA1Internal.AddLength
void System::Security::Cryptography::SHA1Internal::AddLength(uint64_t length, ::Array<uint8_t>* buffer, int position) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::SHA1Internal::AddLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, length, buffer, position);
}
// Writing MetadataGetter for method: SHA1Internal::HashCore
// Il2CppName: HashCore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SHA1Internal::*)(::Array<uint8_t>*, int, int)>(&SHA1Internal::HashCore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SHA1Internal*), "HashCore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SHA1Internal::HashFinal
// Il2CppName: HashFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (SHA1Internal::*)()>(&SHA1Internal::HashFinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SHA1Internal*), "HashFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SHA1Internal::Initialize
// Il2CppName: Initialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SHA1Internal::*)()>(&SHA1Internal::Initialize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SHA1Internal*), "Initialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SHA1Internal::ProcessBlock
// Il2CppName: ProcessBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SHA1Internal::*)(::Array<uint8_t>*, uint)>(&SHA1Internal::ProcessBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SHA1Internal*), "ProcessBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: SHA1Internal::InitialiseBuff
// Il2CppName: InitialiseBuff
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Array<uint>*, ::Array<uint8_t>*, uint)>(&SHA1Internal::InitialiseBuff)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SHA1Internal*), "InitialiseBuff", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: SHA1Internal::FillBuff
// Il2CppName: FillBuff
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Array<uint>*)>(&SHA1Internal::FillBuff)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SHA1Internal*), "FillBuff", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint>*>()});
  }
};
// Writing MetadataGetter for method: SHA1Internal::ProcessFinalBlock
// Il2CppName: ProcessFinalBlock
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SHA1Internal::*)(::Array<uint8_t>*, int, int)>(&SHA1Internal::ProcessFinalBlock)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SHA1Internal*), "ProcessFinalBlock", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SHA1Internal::AddLength
// Il2CppName: AddLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SHA1Internal::*)(uint64_t, ::Array<uint8_t>*, int)>(&SHA1Internal::AddLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SHA1Internal*), "AddLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint64_t>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SHA1Internal::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SHA1Internal::*)()>(&SHA1Internal::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SHA1Internal*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SHA1Internal::*)()>(&SHA1Internal::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SHA1Internal*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.SHA1CryptoServiceProvider
#include "System/Security/Cryptography/SHA1CryptoServiceProvider.hpp"
// Including type: System.Security.Cryptography.SHA1Internal
#include "System/Security/Cryptography/SHA1Internal.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.SHA1CryptoServiceProvider.Finalize
void System::Security::Cryptography::SHA1CryptoServiceProvider::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::SHA1CryptoServiceProvider::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SHA1CryptoServiceProvider.Dispose
void System::Security::Cryptography::SHA1CryptoServiceProvider::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::SHA1CryptoServiceProvider::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Security.Cryptography.SHA1CryptoServiceProvider.HashCore
void System::Security::Cryptography::SHA1CryptoServiceProvider::HashCore(::Array<uint8_t>* rgb, int ibStart, int cbSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::SHA1CryptoServiceProvider::HashCore");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HashCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rgb), ::il2cpp_utils::ExtractType(ibStart), ::il2cpp_utils::ExtractType(cbSize)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rgb, ibStart, cbSize);
}
// Autogenerated method: System.Security.Cryptography.SHA1CryptoServiceProvider.HashFinal
::Array<uint8_t>* System::Security::Cryptography::SHA1CryptoServiceProvider::HashFinal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::SHA1CryptoServiceProvider::HashFinal");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HashFinal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.SHA1CryptoServiceProvider.Initialize
void System::Security::Cryptography::SHA1CryptoServiceProvider::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::SHA1CryptoServiceProvider::Initialize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: SHA1CryptoServiceProvider::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SHA1CryptoServiceProvider::*)()>(&SHA1CryptoServiceProvider::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SHA1CryptoServiceProvider*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SHA1CryptoServiceProvider::*)()>(&SHA1CryptoServiceProvider::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SHA1CryptoServiceProvider*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SHA1CryptoServiceProvider::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SHA1CryptoServiceProvider::*)()>(&SHA1CryptoServiceProvider::Finalize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SHA1CryptoServiceProvider*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SHA1CryptoServiceProvider::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SHA1CryptoServiceProvider::*)(bool)>(&SHA1CryptoServiceProvider::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SHA1CryptoServiceProvider*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: SHA1CryptoServiceProvider::HashCore
// Il2CppName: HashCore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SHA1CryptoServiceProvider::*)(::Array<uint8_t>*, int, int)>(&SHA1CryptoServiceProvider::HashCore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SHA1CryptoServiceProvider*), "HashCore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SHA1CryptoServiceProvider::HashFinal
// Il2CppName: HashFinal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (SHA1CryptoServiceProvider::*)()>(&SHA1CryptoServiceProvider::HashFinal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SHA1CryptoServiceProvider*), "HashFinal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SHA1CryptoServiceProvider::Initialize
// Il2CppName: Initialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SHA1CryptoServiceProvider::*)()>(&SHA1CryptoServiceProvider::Initialize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SHA1CryptoServiceProvider*), "Initialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.TripleDESTransform
#include "System/Security/Cryptography/TripleDESTransform.hpp"
// Including type: System.Security.Cryptography.DESTransform
#include "System/Security/Cryptography/DESTransform.hpp"
// Including type: System.Security.Cryptography.TripleDES
#include "System/Security/Cryptography/TripleDES.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.TripleDESTransform.GetStrongKey
::Array<uint8_t>* System::Security::Cryptography::TripleDESTransform::GetStrongKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::TripleDESTransform::GetStrongKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography", "TripleDESTransform", "GetStrongKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.TripleDESTransform.ECB
void System::Security::Cryptography::TripleDESTransform::ECB(::Array<uint8_t>* input, ::Array<uint8_t>* output) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::TripleDESTransform::ECB");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ECB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(output)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, output);
}
// Writing MetadataGetter for method: TripleDESTransform::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TripleDESTransform::*)(System::Security::Cryptography::TripleDES*, bool, ::Array<uint8_t>*, ::Array<uint8_t>*)>(&TripleDESTransform::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TripleDESTransform*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::TripleDES*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TripleDESTransform::*)(System::Security::Cryptography::TripleDES*, bool, ::Array<uint8_t>*, ::Array<uint8_t>*)>(&TripleDESTransform::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TripleDESTransform*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::TripleDES*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: TripleDESTransform::GetStrongKey
// Il2CppName: GetStrongKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)()>(&TripleDESTransform::GetStrongKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TripleDESTransform*), "GetStrongKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TripleDESTransform::ECB
// Il2CppName: ECB
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TripleDESTransform::*)(::Array<uint8_t>*, ::Array<uint8_t>*)>(&TripleDESTransform::ECB)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TripleDESTransform*), "ECB", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
#include "System/Security/Cryptography/X509Certificates/X509KeyStorageFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509KeyStorageFlags DefaultKeySet
System::Security::Cryptography::X509Certificates::X509KeyStorageFlags System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_get_DefaultKeySet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_get_DefaultKeySet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Security::Cryptography::X509Certificates::X509KeyStorageFlags>("System.Security.Cryptography.X509Certificates", "X509KeyStorageFlags", "DefaultKeySet"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509KeyStorageFlags DefaultKeySet
void System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_set_DefaultKeySet(System::Security::Cryptography::X509Certificates::X509KeyStorageFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_set_DefaultKeySet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509KeyStorageFlags", "DefaultKeySet", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509KeyStorageFlags UserKeySet
System::Security::Cryptography::X509Certificates::X509KeyStorageFlags System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_get_UserKeySet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_get_UserKeySet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Security::Cryptography::X509Certificates::X509KeyStorageFlags>("System.Security.Cryptography.X509Certificates", "X509KeyStorageFlags", "UserKeySet"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509KeyStorageFlags UserKeySet
void System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_set_UserKeySet(System::Security::Cryptography::X509Certificates::X509KeyStorageFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_set_UserKeySet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509KeyStorageFlags", "UserKeySet", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509KeyStorageFlags MachineKeySet
System::Security::Cryptography::X509Certificates::X509KeyStorageFlags System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_get_MachineKeySet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_get_MachineKeySet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Security::Cryptography::X509Certificates::X509KeyStorageFlags>("System.Security.Cryptography.X509Certificates", "X509KeyStorageFlags", "MachineKeySet"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509KeyStorageFlags MachineKeySet
void System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_set_MachineKeySet(System::Security::Cryptography::X509Certificates::X509KeyStorageFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_set_MachineKeySet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509KeyStorageFlags", "MachineKeySet", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509KeyStorageFlags Exportable
System::Security::Cryptography::X509Certificates::X509KeyStorageFlags System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_get_Exportable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_get_Exportable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Security::Cryptography::X509Certificates::X509KeyStorageFlags>("System.Security.Cryptography.X509Certificates", "X509KeyStorageFlags", "Exportable"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509KeyStorageFlags Exportable
void System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_set_Exportable(System::Security::Cryptography::X509Certificates::X509KeyStorageFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_set_Exportable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509KeyStorageFlags", "Exportable", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509KeyStorageFlags UserProtected
System::Security::Cryptography::X509Certificates::X509KeyStorageFlags System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_get_UserProtected() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_get_UserProtected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Security::Cryptography::X509Certificates::X509KeyStorageFlags>("System.Security.Cryptography.X509Certificates", "X509KeyStorageFlags", "UserProtected"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509KeyStorageFlags UserProtected
void System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_set_UserProtected(System::Security::Cryptography::X509Certificates::X509KeyStorageFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_set_UserProtected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509KeyStorageFlags", "UserProtected", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509KeyStorageFlags PersistKeySet
System::Security::Cryptography::X509Certificates::X509KeyStorageFlags System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_get_PersistKeySet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_get_PersistKeySet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Security::Cryptography::X509Certificates::X509KeyStorageFlags>("System.Security.Cryptography.X509Certificates", "X509KeyStorageFlags", "PersistKeySet"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509KeyStorageFlags PersistKeySet
void System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_set_PersistKeySet(System::Security::Cryptography::X509Certificates::X509KeyStorageFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_set_PersistKeySet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509KeyStorageFlags", "PersistKeySet", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.X509KeyStorageFlags EphemeralKeySet
System::Security::Cryptography::X509Certificates::X509KeyStorageFlags System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_get_EphemeralKeySet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_get_EphemeralKeySet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Security::Cryptography::X509Certificates::X509KeyStorageFlags>("System.Security.Cryptography.X509Certificates", "X509KeyStorageFlags", "EphemeralKeySet"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.X509KeyStorageFlags EphemeralKeySet
void System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_set_EphemeralKeySet(System::Security::Cryptography::X509Certificates::X509KeyStorageFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509KeyStorageFlags::_set_EphemeralKeySet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509KeyStorageFlags", "EphemeralKeySet", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.OidGroup
#include "System/Security/Cryptography/X509Certificates/OidGroup.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.OidGroup AllGroups
System::Security::Cryptography::X509Certificates::OidGroup System::Security::Cryptography::X509Certificates::OidGroup::_get_AllGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::OidGroup::_get_AllGroups");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Security::Cryptography::X509Certificates::OidGroup>("System.Security.Cryptography.X509Certificates", "OidGroup", "AllGroups"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.OidGroup AllGroups
void System::Security::Cryptography::X509Certificates::OidGroup::_set_AllGroups(System::Security::Cryptography::X509Certificates::OidGroup value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::OidGroup::_set_AllGroups");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "OidGroup", "AllGroups", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.OidGroup HashAlgorithm
System::Security::Cryptography::X509Certificates::OidGroup System::Security::Cryptography::X509Certificates::OidGroup::_get_HashAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::OidGroup::_get_HashAlgorithm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Security::Cryptography::X509Certificates::OidGroup>("System.Security.Cryptography.X509Certificates", "OidGroup", "HashAlgorithm"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.OidGroup HashAlgorithm
void System::Security::Cryptography::X509Certificates::OidGroup::_set_HashAlgorithm(System::Security::Cryptography::X509Certificates::OidGroup value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::OidGroup::_set_HashAlgorithm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "OidGroup", "HashAlgorithm", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.OidGroup EncryptionAlgorithm
System::Security::Cryptography::X509Certificates::OidGroup System::Security::Cryptography::X509Certificates::OidGroup::_get_EncryptionAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::OidGroup::_get_EncryptionAlgorithm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Security::Cryptography::X509Certificates::OidGroup>("System.Security.Cryptography.X509Certificates", "OidGroup", "EncryptionAlgorithm"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.OidGroup EncryptionAlgorithm
void System::Security::Cryptography::X509Certificates::OidGroup::_set_EncryptionAlgorithm(System::Security::Cryptography::X509Certificates::OidGroup value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::OidGroup::_set_EncryptionAlgorithm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "OidGroup", "EncryptionAlgorithm", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.OidGroup PublicKeyAlgorithm
System::Security::Cryptography::X509Certificates::OidGroup System::Security::Cryptography::X509Certificates::OidGroup::_get_PublicKeyAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::OidGroup::_get_PublicKeyAlgorithm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Security::Cryptography::X509Certificates::OidGroup>("System.Security.Cryptography.X509Certificates", "OidGroup", "PublicKeyAlgorithm"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.OidGroup PublicKeyAlgorithm
void System::Security::Cryptography::X509Certificates::OidGroup::_set_PublicKeyAlgorithm(System::Security::Cryptography::X509Certificates::OidGroup value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::OidGroup::_set_PublicKeyAlgorithm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "OidGroup", "PublicKeyAlgorithm", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.OidGroup SignatureAlgorithm
System::Security::Cryptography::X509Certificates::OidGroup System::Security::Cryptography::X509Certificates::OidGroup::_get_SignatureAlgorithm() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::OidGroup::_get_SignatureAlgorithm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Security::Cryptography::X509Certificates::OidGroup>("System.Security.Cryptography.X509Certificates", "OidGroup", "SignatureAlgorithm"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.OidGroup SignatureAlgorithm
void System::Security::Cryptography::X509Certificates::OidGroup::_set_SignatureAlgorithm(System::Security::Cryptography::X509Certificates::OidGroup value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::OidGroup::_set_SignatureAlgorithm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "OidGroup", "SignatureAlgorithm", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.OidGroup Attribute
System::Security::Cryptography::X509Certificates::OidGroup System::Security::Cryptography::X509Certificates::OidGroup::_get_Attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::OidGroup::_get_Attribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Security::Cryptography::X509Certificates::OidGroup>("System.Security.Cryptography.X509Certificates", "OidGroup", "Attribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.OidGroup Attribute
void System::Security::Cryptography::X509Certificates::OidGroup::_set_Attribute(System::Security::Cryptography::X509Certificates::OidGroup value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::OidGroup::_set_Attribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "OidGroup", "Attribute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.OidGroup ExtensionOrAttribute
System::Security::Cryptography::X509Certificates::OidGroup System::Security::Cryptography::X509Certificates::OidGroup::_get_ExtensionOrAttribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::OidGroup::_get_ExtensionOrAttribute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Security::Cryptography::X509Certificates::OidGroup>("System.Security.Cryptography.X509Certificates", "OidGroup", "ExtensionOrAttribute"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.OidGroup ExtensionOrAttribute
void System::Security::Cryptography::X509Certificates::OidGroup::_set_ExtensionOrAttribute(System::Security::Cryptography::X509Certificates::OidGroup value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::OidGroup::_set_ExtensionOrAttribute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "OidGroup", "ExtensionOrAttribute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.OidGroup EnhancedKeyUsage
System::Security::Cryptography::X509Certificates::OidGroup System::Security::Cryptography::X509Certificates::OidGroup::_get_EnhancedKeyUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::OidGroup::_get_EnhancedKeyUsage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Security::Cryptography::X509Certificates::OidGroup>("System.Security.Cryptography.X509Certificates", "OidGroup", "EnhancedKeyUsage"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.OidGroup EnhancedKeyUsage
void System::Security::Cryptography::X509Certificates::OidGroup::_set_EnhancedKeyUsage(System::Security::Cryptography::X509Certificates::OidGroup value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::OidGroup::_set_EnhancedKeyUsage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "OidGroup", "EnhancedKeyUsage", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.OidGroup Policy
System::Security::Cryptography::X509Certificates::OidGroup System::Security::Cryptography::X509Certificates::OidGroup::_get_Policy() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::OidGroup::_get_Policy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Security::Cryptography::X509Certificates::OidGroup>("System.Security.Cryptography.X509Certificates", "OidGroup", "Policy"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.OidGroup Policy
void System::Security::Cryptography::X509Certificates::OidGroup::_set_Policy(System::Security::Cryptography::X509Certificates::OidGroup value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::OidGroup::_set_Policy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "OidGroup", "Policy", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.OidGroup Template
System::Security::Cryptography::X509Certificates::OidGroup System::Security::Cryptography::X509Certificates::OidGroup::_get_Template() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::OidGroup::_get_Template");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Security::Cryptography::X509Certificates::OidGroup>("System.Security.Cryptography.X509Certificates", "OidGroup", "Template"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.OidGroup Template
void System::Security::Cryptography::X509Certificates::OidGroup::_set_Template(System::Security::Cryptography::X509Certificates::OidGroup value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::OidGroup::_set_Template");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "OidGroup", "Template", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.OidGroup KeyDerivationFunction
System::Security::Cryptography::X509Certificates::OidGroup System::Security::Cryptography::X509Certificates::OidGroup::_get_KeyDerivationFunction() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::OidGroup::_get_KeyDerivationFunction");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Security::Cryptography::X509Certificates::OidGroup>("System.Security.Cryptography.X509Certificates", "OidGroup", "KeyDerivationFunction"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.OidGroup KeyDerivationFunction
void System::Security::Cryptography::X509Certificates::OidGroup::_set_KeyDerivationFunction(System::Security::Cryptography::X509Certificates::OidGroup value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::OidGroup::_set_KeyDerivationFunction");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "OidGroup", "KeyDerivationFunction", value));
}
// Autogenerated static field getter
// Get static field: static public System.Security.Cryptography.X509Certificates.OidGroup DisableSearchDS
System::Security::Cryptography::X509Certificates::OidGroup System::Security::Cryptography::X509Certificates::OidGroup::_get_DisableSearchDS() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::OidGroup::_get_DisableSearchDS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Security::Cryptography::X509Certificates::OidGroup>("System.Security.Cryptography.X509Certificates", "OidGroup", "DisableSearchDS"));
}
// Autogenerated static field setter
// Set static field: static public System.Security.Cryptography.X509Certificates.OidGroup DisableSearchDS
void System::Security::Cryptography::X509Certificates::OidGroup::_set_DisableSearchDS(System::Security::Cryptography::X509Certificates::OidGroup value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::OidGroup::_set_DisableSearchDS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "OidGroup", "DisableSearchDS", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Security.Cryptography.X509Certificates.INativeCertificateHelper
#include "System/Security/Cryptography/X509Certificates/INativeCertificateHelper.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateImpl
#include "System/Security/Cryptography/X509Certificates/X509CertificateImpl.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.X509Certificates.INativeCertificateHelper.Import
System::Security::Cryptography::X509Certificates::X509CertificateImpl* System::Security::Cryptography::X509Certificates::INativeCertificateHelper::Import(System::Security::Cryptography::X509Certificates::X509Certificate* cert) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::INativeCertificateHelper::Import");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Import", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cert)})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::X509Certificates::X509CertificateImpl*, false>(this, ___internal__method, cert);
}
// Writing MetadataGetter for method: INativeCertificateHelper::Import
// Il2CppName: Import
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::X509Certificates::X509CertificateImpl* (INativeCertificateHelper::*)(System::Security::Cryptography::X509Certificates::X509Certificate*)>(&INativeCertificateHelper::Import)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(INativeCertificateHelper*), "Import", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509Certificate*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateImpl
#include "System/Security/Cryptography/X509Certificates/X509CertificateImpl.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
#include "System/Security/Cryptography/X509Certificates/X509KeyStorageFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.ImportHandle
void System::Security::Cryptography::X509Certificates::X509Certificate::ImportHandle(System::Security::Cryptography::X509Certificates::X509CertificateImpl* impl) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509Certificate::ImportHandle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ImportHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(impl)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, impl);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.get_Impl
System::Security::Cryptography::X509Certificates::X509CertificateImpl* System::Security::Cryptography::X509Certificates::X509Certificate::get_Impl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509Certificate::get_Impl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Impl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::X509Certificates::X509CertificateImpl*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.get_IsValid
bool System::Security::Cryptography::X509Certificates::X509Certificate::get_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509Certificate::get_IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.Equals
bool System::Security::Cryptography::X509Certificates::X509Certificate::Equals(System::Security::Cryptography::X509Certificates::X509Certificate* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509Certificate::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHash
::Array<uint8_t>* System::Security::Cryptography::X509Certificates::X509Certificate::GetCertHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509Certificate::GetCertHash");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCertHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.GetCertHashString
::Il2CppString* System::Security::Cryptography::X509Certificates::X509Certificate::GetCertHashString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509Certificate::GetCertHashString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCertHashString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.GetRawCertData
::Array<uint8_t>* System::Security::Cryptography::X509Certificates::X509Certificate::GetRawCertData() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509Certificate::GetRawCertData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRawCertData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumber
::Array<uint8_t>* System::Security::Cryptography::X509Certificates::X509Certificate::GetSerialNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509Certificate::GetSerialNumber");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSerialNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.GetSerialNumberString
::Il2CppString* System::Security::Cryptography::X509Certificates::X509Certificate::GetSerialNumberString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509Certificate::GetSerialNumberString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSerialNumberString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.ToString
::Il2CppString* System::Security::Cryptography::X509Certificates::X509Certificate::ToString(bool fVerbose) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509Certificate::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fVerbose)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, fVerbose);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.get_Issuer
::Il2CppString* System::Security::Cryptography::X509Certificates::X509Certificate::get_Issuer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509Certificate::get_Issuer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Issuer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.get_Subject
::Il2CppString* System::Security::Cryptography::X509Certificates::X509Certificate::get_Subject() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509Certificate::get_Subject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Subject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.Import
void System::Security::Cryptography::X509Certificates::X509Certificate::Import(::Array<uint8_t>* rawData, ::Il2CppString* password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509Certificate::Import");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Import", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawData), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(keyStorageFlags)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rawData, password, keyStorageFlags);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.Import
void System::Security::Cryptography::X509Certificates::X509Certificate::Import(::Il2CppString* fileName, ::Il2CppString* password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509Certificate::Import");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Import", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fileName), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(keyStorageFlags)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, fileName, password, keyStorageFlags);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
void System::Security::Cryptography::X509Certificates::X509Certificate::System_Runtime_Serialization_IDeserializationCallback_OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509Certificate::System.Runtime.Serialization.IDeserializationCallback.OnDeserialization");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.IDeserializationCallback.OnDeserialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Security::Cryptography::X509Certificates::X509Certificate::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509Certificate::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose
void System::Security::Cryptography::X509Certificates::X509Certificate::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509Certificate::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.Dispose
void System::Security::Cryptography::X509Certificates::X509Certificate::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509Certificate::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.Reset
void System::Security::Cryptography::X509Certificates::X509Certificate::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509Certificate::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.GetHashCode
int System::Security::Cryptography::X509Certificates::X509Certificate::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509Certificate::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.ToString
::Il2CppString* System::Security::Cryptography::X509Certificates::X509Certificate::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509Certificate::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Certificate.Equals
bool System::Security::Cryptography::X509Certificates::X509Certificate::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509Certificate::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Writing MetadataGetter for method: X509Certificate::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Certificate::*)(::Array<uint8_t>*, bool)>(&X509Certificate::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Certificate::*)(::Array<uint8_t>*, bool)>(&X509Certificate::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: X509Certificate::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Certificate::*)(::Array<uint8_t>*)>(&X509Certificate::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Certificate::*)(::Array<uint8_t>*)>(&X509Certificate::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: X509Certificate::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Certificate::*)(System::Security::Cryptography::X509Certificates::X509CertificateImpl*)>(&X509Certificate::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509CertificateImpl*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Certificate::*)(System::Security::Cryptography::X509Certificates::X509CertificateImpl*)>(&X509Certificate::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509CertificateImpl*>()});
  }
};
// Writing MetadataGetter for method: X509Certificate::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Certificate::*)(System::Security::Cryptography::X509Certificates::X509Certificate*)>(&X509Certificate::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509Certificate*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Certificate::*)(System::Security::Cryptography::X509Certificates::X509Certificate*)>(&X509Certificate::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509Certificate*>()});
  }
};
// Writing MetadataGetter for method: X509Certificate::ImportHandle
// Il2CppName: ImportHandle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Certificate::*)(System::Security::Cryptography::X509Certificates::X509CertificateImpl*)>(&X509Certificate::ImportHandle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "ImportHandle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509CertificateImpl*>()});
  }
};
// Writing MetadataGetter for method: X509Certificate::get_Impl
// Il2CppName: get_Impl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::X509Certificates::X509CertificateImpl* (X509Certificate::*)()>(&X509Certificate::get_Impl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "get_Impl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Certificate::get_IsValid
// Il2CppName: get_IsValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (X509Certificate::*)()>(&X509Certificate::get_IsValid)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "get_IsValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Certificate::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (X509Certificate::*)(System::Security::Cryptography::X509Certificates::X509Certificate*)>(&X509Certificate::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509Certificate*>()});
  }
};
// Writing MetadataGetter for method: X509Certificate::GetCertHash
// Il2CppName: GetCertHash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (X509Certificate::*)()>(&X509Certificate::GetCertHash)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "GetCertHash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Certificate::GetCertHashString
// Il2CppName: GetCertHashString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (X509Certificate::*)()>(&X509Certificate::GetCertHashString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "GetCertHashString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Certificate::GetRawCertData
// Il2CppName: GetRawCertData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (X509Certificate::*)()>(&X509Certificate::GetRawCertData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "GetRawCertData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Certificate::GetSerialNumber
// Il2CppName: GetSerialNumber
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (X509Certificate::*)()>(&X509Certificate::GetSerialNumber)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "GetSerialNumber", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Certificate::GetSerialNumberString
// Il2CppName: GetSerialNumberString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (X509Certificate::*)()>(&X509Certificate::GetSerialNumberString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "GetSerialNumberString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Certificate::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (X509Certificate::*)(bool)>(&X509Certificate::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: X509Certificate::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Certificate::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&X509Certificate::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Certificate::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&X509Certificate::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: X509Certificate::get_Issuer
// Il2CppName: get_Issuer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (X509Certificate::*)()>(&X509Certificate::get_Issuer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "get_Issuer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Certificate::get_Subject
// Il2CppName: get_Subject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (X509Certificate::*)()>(&X509Certificate::get_Subject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "get_Subject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Certificate::Import
// Il2CppName: Import
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Certificate::*)(::Array<uint8_t>*, ::Il2CppString*, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags)>(&X509Certificate::Import)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "Import", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509KeyStorageFlags>()});
  }
};
// Writing MetadataGetter for method: X509Certificate::Import
// Il2CppName: Import
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Certificate::*)(::Il2CppString*, ::Il2CppString*, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags)>(&X509Certificate::Import)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "Import", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509KeyStorageFlags>()});
  }
};
// Writing MetadataGetter for method: X509Certificate::System_Runtime_Serialization_IDeserializationCallback_OnDeserialization
// Il2CppName: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Certificate::*)(::Il2CppObject*)>(&X509Certificate::System_Runtime_Serialization_IDeserializationCallback_OnDeserialization)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "System.Runtime.Serialization.IDeserializationCallback.OnDeserialization", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: X509Certificate::System_Runtime_Serialization_ISerializable_GetObjectData
// Il2CppName: System.Runtime.Serialization.ISerializable.GetObjectData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Certificate::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&X509Certificate::System_Runtime_Serialization_ISerializable_GetObjectData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: X509Certificate::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Certificate::*)()>(&X509Certificate::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Certificate::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Certificate::*)(bool)>(&X509Certificate::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: X509Certificate::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Certificate::*)()>(&X509Certificate::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Certificate::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (X509Certificate::*)()>(&X509Certificate::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Certificate::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (X509Certificate::*)()>(&X509Certificate::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Certificate::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Certificate::*)()>(&X509Certificate::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509Certificate::*)()>(&X509Certificate::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Certificate::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (X509Certificate::*)(::Il2CppObject*)>(&X509Certificate::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Certificate*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateImpl
#include "System/Security/Cryptography/X509Certificates/X509CertificateImpl.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImpl.get_IsValid
bool System::Security::Cryptography::X509Certificates::X509CertificateImpl::get_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509CertificateImpl::get_IsValid");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImpl.ThrowIfContextInvalid
void System::Security::Cryptography::X509Certificates::X509CertificateImpl::ThrowIfContextInvalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509CertificateImpl::ThrowIfContextInvalid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfContextInvalid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImpl.Clone
System::Security::Cryptography::X509Certificates::X509CertificateImpl* System::Security::Cryptography::X509Certificates::X509CertificateImpl::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509CertificateImpl::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::X509Certificates::X509CertificateImpl*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImpl.GetIssuerName
::Il2CppString* System::Security::Cryptography::X509Certificates::X509CertificateImpl::GetIssuerName(bool legacyV1Mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509CertificateImpl::GetIssuerName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIssuerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(legacyV1Mode)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, legacyV1Mode);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImpl.GetSubjectName
::Il2CppString* System::Security::Cryptography::X509Certificates::X509CertificateImpl::GetSubjectName(bool legacyV1Mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509CertificateImpl::GetSubjectName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSubjectName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(legacyV1Mode)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, legacyV1Mode);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImpl.GetRawCertData
::Array<uint8_t>* System::Security::Cryptography::X509Certificates::X509CertificateImpl::GetRawCertData() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509CertificateImpl::GetRawCertData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRawCertData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImpl.GetValidFrom
System::DateTime System::Security::Cryptography::X509Certificates::X509CertificateImpl::GetValidFrom() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509CertificateImpl::GetValidFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValidFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImpl.GetValidUntil
System::DateTime System::Security::Cryptography::X509Certificates::X509CertificateImpl::GetValidUntil() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509CertificateImpl::GetValidUntil");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValidUntil", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImpl.GetCertHash
::Array<uint8_t>* System::Security::Cryptography::X509Certificates::X509CertificateImpl::GetCertHash() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509CertificateImpl::GetCertHash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCertHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImpl.GetCertHash
::Array<uint8_t>* System::Security::Cryptography::X509Certificates::X509CertificateImpl::GetCertHash(bool lazy) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509CertificateImpl::GetCertHash");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCertHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lazy)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, lazy);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImpl.Equals
bool System::Security::Cryptography::X509Certificates::X509CertificateImpl::Equals(System::Security::Cryptography::X509Certificates::X509CertificateImpl* other, bool& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509CertificateImpl::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, other, result);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImpl.GetSerialNumber
::Array<uint8_t>* System::Security::Cryptography::X509Certificates::X509CertificateImpl::GetSerialNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509CertificateImpl::GetSerialNumber");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSerialNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImpl.ToString
::Il2CppString* System::Security::Cryptography::X509Certificates::X509CertificateImpl::ToString(bool full) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509CertificateImpl::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(full)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, full);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImpl.Dispose
void System::Security::Cryptography::X509Certificates::X509CertificateImpl::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509CertificateImpl::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImpl.Dispose
void System::Security::Cryptography::X509Certificates::X509CertificateImpl::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509CertificateImpl::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImpl.GetHashCode
int System::Security::Cryptography::X509Certificates::X509CertificateImpl::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509CertificateImpl::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImpl.Equals
bool System::Security::Cryptography::X509Certificates::X509CertificateImpl::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509CertificateImpl::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImpl.Finalize
void System::Security::Cryptography::X509Certificates::X509CertificateImpl::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509CertificateImpl::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: X509CertificateImpl::get_IsValid
// Il2CppName: get_IsValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (X509CertificateImpl::*)()>(&X509CertificateImpl::get_IsValid)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateImpl*), "get_IsValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509CertificateImpl::ThrowIfContextInvalid
// Il2CppName: ThrowIfContextInvalid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509CertificateImpl::*)()>(&X509CertificateImpl::ThrowIfContextInvalid)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateImpl*), "ThrowIfContextInvalid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509CertificateImpl::Clone
// Il2CppName: Clone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::X509Certificates::X509CertificateImpl* (X509CertificateImpl::*)()>(&X509CertificateImpl::Clone)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateImpl*), "Clone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509CertificateImpl::GetIssuerName
// Il2CppName: GetIssuerName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (X509CertificateImpl::*)(bool)>(&X509CertificateImpl::GetIssuerName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateImpl*), "GetIssuerName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: X509CertificateImpl::GetSubjectName
// Il2CppName: GetSubjectName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (X509CertificateImpl::*)(bool)>(&X509CertificateImpl::GetSubjectName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateImpl*), "GetSubjectName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: X509CertificateImpl::GetRawCertData
// Il2CppName: GetRawCertData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (X509CertificateImpl::*)()>(&X509CertificateImpl::GetRawCertData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateImpl*), "GetRawCertData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509CertificateImpl::GetValidFrom
// Il2CppName: GetValidFrom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::DateTime (X509CertificateImpl::*)()>(&X509CertificateImpl::GetValidFrom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateImpl*), "GetValidFrom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509CertificateImpl::GetValidUntil
// Il2CppName: GetValidUntil
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::DateTime (X509CertificateImpl::*)()>(&X509CertificateImpl::GetValidUntil)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateImpl*), "GetValidUntil", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509CertificateImpl::GetCertHash
// Il2CppName: GetCertHash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (X509CertificateImpl::*)()>(&X509CertificateImpl::GetCertHash)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateImpl*), "GetCertHash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509CertificateImpl::GetCertHash
// Il2CppName: GetCertHash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (X509CertificateImpl::*)(bool)>(&X509CertificateImpl::GetCertHash)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateImpl*), "GetCertHash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: X509CertificateImpl::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (X509CertificateImpl::*)(System::Security::Cryptography::X509Certificates::X509CertificateImpl*, bool&)>(&X509CertificateImpl::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateImpl*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509CertificateImpl*>(), ::il2cpp_utils::ExtractIndependentType<bool&>()});
  }
};
// Writing MetadataGetter for method: X509CertificateImpl::GetSerialNumber
// Il2CppName: GetSerialNumber
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (X509CertificateImpl::*)()>(&X509CertificateImpl::GetSerialNumber)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateImpl*), "GetSerialNumber", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509CertificateImpl::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (X509CertificateImpl::*)(bool)>(&X509CertificateImpl::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateImpl*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: X509CertificateImpl::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509CertificateImpl::*)()>(&X509CertificateImpl::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateImpl*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509CertificateImpl::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509CertificateImpl::*)(bool)>(&X509CertificateImpl::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateImpl*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: X509CertificateImpl::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (X509CertificateImpl::*)()>(&X509CertificateImpl::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateImpl*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509CertificateImpl::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (X509CertificateImpl::*)(::Il2CppObject*)>(&X509CertificateImpl::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateImpl*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: X509CertificateImpl::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509CertificateImpl::*)()>(&X509CertificateImpl::Finalize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateImpl*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509CertificateImpl::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509CertificateImpl::*)()>(&X509CertificateImpl::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateImpl*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509CertificateImpl::*)()>(&X509CertificateImpl::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateImpl*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateImplMono
#include "System/Security/Cryptography/X509Certificates/X509CertificateImplMono.hpp"
// Including type: Mono.Security.X509.X509Certificate
#include "Mono/Security/X509/X509Certificate.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImplMono.get_IsValid
bool System::Security::Cryptography::X509Certificates::X509CertificateImplMono::get_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509CertificateImplMono::get_IsValid");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImplMono.Clone
System::Security::Cryptography::X509Certificates::X509CertificateImpl* System::Security::Cryptography::X509Certificates::X509CertificateImplMono::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509CertificateImplMono::Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::X509Certificates::X509CertificateImpl*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImplMono.GetIssuerName
::Il2CppString* System::Security::Cryptography::X509Certificates::X509CertificateImplMono::GetIssuerName(bool legacyV1Mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509CertificateImplMono::GetIssuerName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIssuerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(legacyV1Mode)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, legacyV1Mode);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImplMono.GetSubjectName
::Il2CppString* System::Security::Cryptography::X509Certificates::X509CertificateImplMono::GetSubjectName(bool legacyV1Mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509CertificateImplMono::GetSubjectName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSubjectName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(legacyV1Mode)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, legacyV1Mode);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImplMono.GetRawCertData
::Array<uint8_t>* System::Security::Cryptography::X509Certificates::X509CertificateImplMono::GetRawCertData() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509CertificateImplMono::GetRawCertData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRawCertData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImplMono.GetCertHash
::Array<uint8_t>* System::Security::Cryptography::X509Certificates::X509CertificateImplMono::GetCertHash(bool lazy) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509CertificateImplMono::GetCertHash");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCertHash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lazy)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method, lazy);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImplMono.GetValidFrom
System::DateTime System::Security::Cryptography::X509Certificates::X509CertificateImplMono::GetValidFrom() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509CertificateImplMono::GetValidFrom");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValidFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImplMono.GetValidUntil
System::DateTime System::Security::Cryptography::X509Certificates::X509CertificateImplMono::GetValidUntil() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509CertificateImplMono::GetValidUntil");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValidUntil", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::DateTime, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImplMono.Equals
bool System::Security::Cryptography::X509Certificates::X509CertificateImplMono::Equals(System::Security::Cryptography::X509Certificates::X509CertificateImpl* other, bool& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509CertificateImplMono::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, other, result);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImplMono.GetSerialNumber
::Array<uint8_t>* System::Security::Cryptography::X509Certificates::X509CertificateImplMono::GetSerialNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509CertificateImplMono::GetSerialNumber");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSerialNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImplMono.ToString
::Il2CppString* System::Security::Cryptography::X509Certificates::X509CertificateImplMono::ToString(bool full) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509CertificateImplMono::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(full)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, full);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509CertificateImplMono.Dispose
void System::Security::Cryptography::X509Certificates::X509CertificateImplMono::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509CertificateImplMono::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Writing MetadataGetter for method: X509CertificateImplMono::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509CertificateImplMono::*)(Mono::Security::X509::X509Certificate*)>(&X509CertificateImplMono::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateImplMono*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::X509::X509Certificate*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509CertificateImplMono::*)(Mono::Security::X509::X509Certificate*)>(&X509CertificateImplMono::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateImplMono*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<Mono::Security::X509::X509Certificate*>()});
  }
};
// Writing MetadataGetter for method: X509CertificateImplMono::get_IsValid
// Il2CppName: get_IsValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (X509CertificateImplMono::*)()>(&X509CertificateImplMono::get_IsValid)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateImplMono*), "get_IsValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509CertificateImplMono::Clone
// Il2CppName: Clone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::X509Certificates::X509CertificateImpl* (X509CertificateImplMono::*)()>(&X509CertificateImplMono::Clone)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateImplMono*), "Clone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509CertificateImplMono::GetIssuerName
// Il2CppName: GetIssuerName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (X509CertificateImplMono::*)(bool)>(&X509CertificateImplMono::GetIssuerName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateImplMono*), "GetIssuerName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: X509CertificateImplMono::GetSubjectName
// Il2CppName: GetSubjectName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (X509CertificateImplMono::*)(bool)>(&X509CertificateImplMono::GetSubjectName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateImplMono*), "GetSubjectName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: X509CertificateImplMono::GetRawCertData
// Il2CppName: GetRawCertData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (X509CertificateImplMono::*)()>(&X509CertificateImplMono::GetRawCertData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateImplMono*), "GetRawCertData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509CertificateImplMono::GetCertHash
// Il2CppName: GetCertHash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (X509CertificateImplMono::*)(bool)>(&X509CertificateImplMono::GetCertHash)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateImplMono*), "GetCertHash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: X509CertificateImplMono::GetValidFrom
// Il2CppName: GetValidFrom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::DateTime (X509CertificateImplMono::*)()>(&X509CertificateImplMono::GetValidFrom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateImplMono*), "GetValidFrom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509CertificateImplMono::GetValidUntil
// Il2CppName: GetValidUntil
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::DateTime (X509CertificateImplMono::*)()>(&X509CertificateImplMono::GetValidUntil)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateImplMono*), "GetValidUntil", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509CertificateImplMono::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (X509CertificateImplMono::*)(System::Security::Cryptography::X509Certificates::X509CertificateImpl*, bool&)>(&X509CertificateImplMono::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateImplMono*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509CertificateImpl*>(), ::il2cpp_utils::ExtractIndependentType<bool&>()});
  }
};
// Writing MetadataGetter for method: X509CertificateImplMono::GetSerialNumber
// Il2CppName: GetSerialNumber
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (X509CertificateImplMono::*)()>(&X509CertificateImplMono::GetSerialNumber)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateImplMono*), "GetSerialNumber", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509CertificateImplMono::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (X509CertificateImplMono::*)(bool)>(&X509CertificateImplMono::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateImplMono*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: X509CertificateImplMono::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (X509CertificateImplMono::*)(bool)>(&X509CertificateImplMono::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509CertificateImplMono*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Security.Cryptography.X509Certificates.X509Helper
#include "System/Security/Cryptography/X509Certificates/X509Helper.hpp"
// Including type: System.Security.Cryptography.X509Certificates.INativeCertificateHelper
#include "System/Security/Cryptography/X509Certificates/INativeCertificateHelper.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateImpl
#include "System/Security/Cryptography/X509Certificates/X509CertificateImpl.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: Mono.Security.X509.X509Certificate
#include "Mono/Security/X509/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509KeyStorageFlags
#include "System/Security/Cryptography/X509Certificates/X509KeyStorageFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.X509Certificates.INativeCertificateHelper nativeHelper
System::Security::Cryptography::X509Certificates::INativeCertificateHelper* System::Security::Cryptography::X509Certificates::X509Helper::_get_nativeHelper() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509Helper::_get_nativeHelper");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Security::Cryptography::X509Certificates::INativeCertificateHelper*>("System.Security.Cryptography.X509Certificates", "X509Helper", "nativeHelper"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.X509Certificates.INativeCertificateHelper nativeHelper
void System::Security::Cryptography::X509Certificates::X509Helper::_set_nativeHelper(System::Security::Cryptography::X509Certificates::INativeCertificateHelper* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509Helper::_set_nativeHelper");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Security.Cryptography.X509Certificates", "X509Helper", "nativeHelper", value));
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Helper.InstallNativeHelper
void System::Security::Cryptography::X509Certificates::X509Helper::InstallNativeHelper(System::Security::Cryptography::X509Certificates::INativeCertificateHelper* helper) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509Helper::InstallNativeHelper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Helper", "InstallNativeHelper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(helper)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, helper);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Helper.Import
System::Security::Cryptography::X509Certificates::X509CertificateImpl* System::Security::Cryptography::X509Certificates::X509Helper::Import(::Array<uint8_t>* rawData) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509Helper::Import");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Helper", "Import", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawData)})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::X509Certificates::X509CertificateImpl*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rawData);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Helper.InitFromCertificate
System::Security::Cryptography::X509Certificates::X509CertificateImpl* System::Security::Cryptography::X509Certificates::X509Helper::InitFromCertificate(System::Security::Cryptography::X509Certificates::X509Certificate* cert) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509Helper::InitFromCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Helper", "InitFromCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cert)})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::X509Certificates::X509CertificateImpl*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cert);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Helper.InitFromCertificate
System::Security::Cryptography::X509Certificates::X509CertificateImpl* System::Security::Cryptography::X509Certificates::X509Helper::InitFromCertificate(System::Security::Cryptography::X509Certificates::X509CertificateImpl* impl) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509Helper::InitFromCertificate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Helper", "InitFromCertificate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(impl)})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::X509Certificates::X509CertificateImpl*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, impl);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Helper.IsValid
bool System::Security::Cryptography::X509Certificates::X509Helper::IsValid(System::Security::Cryptography::X509Certificates::X509CertificateImpl* impl) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509Helper::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Helper", "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(impl)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, impl);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Helper.ThrowIfContextInvalid
void System::Security::Cryptography::X509Certificates::X509Helper::ThrowIfContextInvalid(System::Security::Cryptography::X509Certificates::X509CertificateImpl* impl) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509Helper::ThrowIfContextInvalid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Helper", "ThrowIfContextInvalid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(impl)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, impl);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Helper.GetInvalidContextException
System::Exception* System::Security::Cryptography::X509Certificates::X509Helper::GetInvalidContextException() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509Helper::GetInvalidContextException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Helper", "GetInvalidContextException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Helper.ImportPkcs12
Mono::Security::X509::X509Certificate* System::Security::Cryptography::X509Certificates::X509Helper::ImportPkcs12(::Array<uint8_t>* rawData, ::Il2CppString* password) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509Helper::ImportPkcs12");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Helper", "ImportPkcs12", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawData), ::il2cpp_utils::ExtractType(password)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::X509::X509Certificate*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rawData, password);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Helper.PEM
::Array<uint8_t>* System::Security::Cryptography::X509Certificates::X509Helper::PEM(::Il2CppString* type, ::Array<uint8_t>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509Helper::PEM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Helper", "PEM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, data);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Helper.ConvertData
::Array<uint8_t>* System::Security::Cryptography::X509Certificates::X509Helper::ConvertData(::Array<uint8_t>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509Helper::ConvertData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Helper", "ConvertData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, data);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Helper.ImportCore
System::Security::Cryptography::X509Certificates::X509CertificateImpl* System::Security::Cryptography::X509Certificates::X509Helper::ImportCore(::Array<uint8_t>* rawData) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509Helper::ImportCore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Helper", "ImportCore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawData)})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::X509Certificates::X509CertificateImpl*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rawData);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Helper.Import
System::Security::Cryptography::X509Certificates::X509CertificateImpl* System::Security::Cryptography::X509Certificates::X509Helper::Import(::Array<uint8_t>* rawData, ::Il2CppString* password, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags keyStorageFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509Helper::Import");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Helper", "Import", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rawData), ::il2cpp_utils::ExtractType(password), ::il2cpp_utils::ExtractType(keyStorageFlags)})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::X509Certificates::X509CertificateImpl*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rawData, password, keyStorageFlags);
}
// Autogenerated method: System.Security.Cryptography.X509Certificates.X509Helper.ToHexString
::Il2CppString* System::Security::Cryptography::X509Certificates::X509Helper::ToHexString(::Array<uint8_t>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Security::Cryptography::X509Certificates::X509Helper::ToHexString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Security.Cryptography.X509Certificates", "X509Helper", "ToHexString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, data);
}
// Writing MetadataGetter for method: X509Helper::InstallNativeHelper
// Il2CppName: InstallNativeHelper
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Security::Cryptography::X509Certificates::INativeCertificateHelper*)>(&X509Helper::InstallNativeHelper)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Helper*), "InstallNativeHelper", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::INativeCertificateHelper*>()});
  }
};
// Writing MetadataGetter for method: X509Helper::Import
// Il2CppName: Import
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::X509Certificates::X509CertificateImpl* (*)(::Array<uint8_t>*)>(&X509Helper::Import)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Helper*), "Import", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: X509Helper::InitFromCertificate
// Il2CppName: InitFromCertificate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::X509Certificates::X509CertificateImpl* (*)(System::Security::Cryptography::X509Certificates::X509Certificate*)>(&X509Helper::InitFromCertificate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Helper*), "InitFromCertificate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509Certificate*>()});
  }
};
// Writing MetadataGetter for method: X509Helper::InitFromCertificate
// Il2CppName: InitFromCertificate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::X509Certificates::X509CertificateImpl* (*)(System::Security::Cryptography::X509Certificates::X509CertificateImpl*)>(&X509Helper::InitFromCertificate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Helper*), "InitFromCertificate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509CertificateImpl*>()});
  }
};
// Writing MetadataGetter for method: X509Helper::IsValid
// Il2CppName: IsValid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::Security::Cryptography::X509Certificates::X509CertificateImpl*)>(&X509Helper::IsValid)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Helper*), "IsValid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509CertificateImpl*>()});
  }
};
// Writing MetadataGetter for method: X509Helper::ThrowIfContextInvalid
// Il2CppName: ThrowIfContextInvalid
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Security::Cryptography::X509Certificates::X509CertificateImpl*)>(&X509Helper::ThrowIfContextInvalid)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Helper*), "ThrowIfContextInvalid", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509CertificateImpl*>()});
  }
};
// Writing MetadataGetter for method: X509Helper::GetInvalidContextException
// Il2CppName: GetInvalidContextException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Exception* (*)()>(&X509Helper::GetInvalidContextException)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Helper*), "GetInvalidContextException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: X509Helper::ImportPkcs12
// Il2CppName: ImportPkcs12
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::X509::X509Certificate* (*)(::Array<uint8_t>*, ::Il2CppString*)>(&X509Helper::ImportPkcs12)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Helper*), "ImportPkcs12", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: X509Helper::PEM
// Il2CppName: PEM
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)(::Il2CppString*, ::Array<uint8_t>*)>(&X509Helper::PEM)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Helper*), "PEM", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: X509Helper::ConvertData
// Il2CppName: ConvertData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<uint8_t>* (*)(::Array<uint8_t>*)>(&X509Helper::ConvertData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Helper*), "ConvertData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: X509Helper::ImportCore
// Il2CppName: ImportCore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::X509Certificates::X509CertificateImpl* (*)(::Array<uint8_t>*)>(&X509Helper::ImportCore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Helper*), "ImportCore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: X509Helper::Import
// Il2CppName: Import
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::X509Certificates::X509CertificateImpl* (*)(::Array<uint8_t>*, ::Il2CppString*, System::Security::Cryptography::X509Certificates::X509KeyStorageFlags)>(&X509Helper::Import)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Helper*), "Import", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509KeyStorageFlags>()});
  }
};
// Writing MetadataGetter for method: X509Helper::ToHexString
// Il2CppName: ToHexString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(::Array<uint8_t>*)>(&X509Helper::ToHexString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(X509Helper*), "ToHexString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Versioning.TargetFrameworkAttribute
#include "System/Runtime/Versioning/TargetFrameworkAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Versioning.TargetFrameworkAttribute.set_FrameworkDisplayName
void System::Runtime::Versioning::TargetFrameworkAttribute::set_FrameworkDisplayName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Versioning::TargetFrameworkAttribute::set_FrameworkDisplayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FrameworkDisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: TargetFrameworkAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TargetFrameworkAttribute::*)(::Il2CppString*)>(&TargetFrameworkAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TargetFrameworkAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TargetFrameworkAttribute::*)(::Il2CppString*)>(&TargetFrameworkAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TargetFrameworkAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: TargetFrameworkAttribute::set_FrameworkDisplayName
// Il2CppName: set_FrameworkDisplayName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TargetFrameworkAttribute::*)(::Il2CppString*)>(&TargetFrameworkAttribute::set_FrameworkDisplayName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TargetFrameworkAttribute*), "set_FrameworkDisplayName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Versioning.BinaryCompatibility
#include "System/Runtime/Versioning/BinaryCompatibility.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Boolean TargetsAtLeast_Desktop_V4_5
bool System::Runtime::Versioning::BinaryCompatibility::_get_TargetsAtLeast_Desktop_V4_5() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Versioning::BinaryCompatibility::_get_TargetsAtLeast_Desktop_V4_5");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Runtime.Versioning", "BinaryCompatibility", "TargetsAtLeast_Desktop_V4_5"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Boolean TargetsAtLeast_Desktop_V4_5
void System::Runtime::Versioning::BinaryCompatibility::_set_TargetsAtLeast_Desktop_V4_5(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Versioning::BinaryCompatibility::_set_TargetsAtLeast_Desktop_V4_5");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Versioning", "BinaryCompatibility", "TargetsAtLeast_Desktop_V4_5", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Boolean TargetsAtLeast_Desktop_V4_5_1
bool System::Runtime::Versioning::BinaryCompatibility::_get_TargetsAtLeast_Desktop_V4_5_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Versioning::BinaryCompatibility::_get_TargetsAtLeast_Desktop_V4_5_1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Runtime.Versioning", "BinaryCompatibility", "TargetsAtLeast_Desktop_V4_5_1"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Boolean TargetsAtLeast_Desktop_V4_5_1
void System::Runtime::Versioning::BinaryCompatibility::_set_TargetsAtLeast_Desktop_V4_5_1(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Versioning::BinaryCompatibility::_set_TargetsAtLeast_Desktop_V4_5_1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Versioning", "BinaryCompatibility", "TargetsAtLeast_Desktop_V4_5_1", value));
}
// Autogenerated method: System.Runtime.Versioning.BinaryCompatibility..cctor
void System::Runtime::Versioning::BinaryCompatibility::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Versioning::BinaryCompatibility::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Versioning", "BinaryCompatibility", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: BinaryCompatibility::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&BinaryCompatibility::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryCompatibility*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.DeserializationEventHandler
#include "System/Runtime/Serialization/DeserializationEventHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.DeserializationEventHandler.Invoke
void System::Runtime::Serialization::DeserializationEventHandler::Invoke(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::DeserializationEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated method: System.Runtime.Serialization.DeserializationEventHandler.BeginInvoke
System::IAsyncResult* System::Runtime::Serialization::DeserializationEventHandler::BeginInvoke(::Il2CppObject* sender, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::DeserializationEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, sender, callback, object);
}
// Autogenerated method: System.Runtime.Serialization.DeserializationEventHandler.EndInvoke
void System::Runtime::Serialization::DeserializationEventHandler::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::DeserializationEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Writing MetadataGetter for method: DeserializationEventHandler::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DeserializationEventHandler::*)(::Il2CppObject*, System::IntPtr)>(&DeserializationEventHandler::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DeserializationEventHandler*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DeserializationEventHandler::*)(::Il2CppObject*, System::IntPtr)>(&DeserializationEventHandler::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DeserializationEventHandler*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: DeserializationEventHandler::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DeserializationEventHandler::*)(::Il2CppObject*)>(&DeserializationEventHandler::Invoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DeserializationEventHandler*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: DeserializationEventHandler::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (DeserializationEventHandler::*)(::Il2CppObject*, System::AsyncCallback*, ::Il2CppObject*)>(&DeserializationEventHandler::BeginInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DeserializationEventHandler*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: DeserializationEventHandler::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DeserializationEventHandler::*)(System::IAsyncResult*)>(&DeserializationEventHandler::EndInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DeserializationEventHandler*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.SerializationEventHandler
#include "System/Runtime/Serialization/SerializationEventHandler.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.SerializationEventHandler.Invoke
void System::Runtime::Serialization::SerializationEventHandler::Invoke(System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationEventHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Runtime.Serialization.SerializationEventHandler.BeginInvoke
System::IAsyncResult* System::Runtime::Serialization::SerializationEventHandler::BeginInvoke(System::Runtime::Serialization::StreamingContext context, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationEventHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, context, callback, object);
}
// Autogenerated method: System.Runtime.Serialization.SerializationEventHandler.EndInvoke
void System::Runtime::Serialization::SerializationEventHandler::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationEventHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Writing MetadataGetter for method: SerializationEventHandler::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationEventHandler::*)(::Il2CppObject*, System::IntPtr)>(&SerializationEventHandler::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationEventHandler*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationEventHandler::*)(::Il2CppObject*, System::IntPtr)>(&SerializationEventHandler::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationEventHandler*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: SerializationEventHandler::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationEventHandler::*)(System::Runtime::Serialization::StreamingContext)>(&SerializationEventHandler::Invoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationEventHandler*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: SerializationEventHandler::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (SerializationEventHandler::*)(System::Runtime::Serialization::StreamingContext, System::AsyncCallback*, ::Il2CppObject*)>(&SerializationEventHandler::BeginInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationEventHandler*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: SerializationEventHandler::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationEventHandler::*)(System::IAsyncResult*)>(&SerializationEventHandler::EndInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationEventHandler*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.FormatterConverter
#include "System/Runtime/Serialization/FormatterConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.FormatterConverter.Convert
::Il2CppObject* System::Runtime::Serialization::FormatterConverter::Convert(::Il2CppObject* value, System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FormatterConverter::Convert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, value, type);
}
// Autogenerated method: System.Runtime.Serialization.FormatterConverter.ToBoolean
bool System::Runtime::Serialization::FormatterConverter::ToBoolean(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FormatterConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Serialization.FormatterConverter.ToInt32
int System::Runtime::Serialization::FormatterConverter::ToInt32(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FormatterConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Serialization.FormatterConverter.ToInt64
int64_t System::Runtime::Serialization::FormatterConverter::ToInt64(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FormatterConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Serialization.FormatterConverter.ToSingle
float System::Runtime::Serialization::FormatterConverter::ToSingle(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FormatterConverter::ToSingle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Serialization.FormatterConverter.ToString
::Il2CppString* System::Runtime::Serialization::FormatterConverter::ToString(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FormatterConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: FormatterConverter::Convert
// Il2CppName: Convert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (FormatterConverter::*)(::Il2CppObject*, System::Type*)>(&FormatterConverter::Convert)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormatterConverter*), "Convert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Type*>()});
  }
};
// Writing MetadataGetter for method: FormatterConverter::ToBoolean
// Il2CppName: ToBoolean
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (FormatterConverter::*)(::Il2CppObject*)>(&FormatterConverter::ToBoolean)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormatterConverter*), "ToBoolean", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: FormatterConverter::ToInt32
// Il2CppName: ToInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (FormatterConverter::*)(::Il2CppObject*)>(&FormatterConverter::ToInt32)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormatterConverter*), "ToInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: FormatterConverter::ToInt64
// Il2CppName: ToInt64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (FormatterConverter::*)(::Il2CppObject*)>(&FormatterConverter::ToInt64)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormatterConverter*), "ToInt64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: FormatterConverter::ToSingle
// Il2CppName: ToSingle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (FormatterConverter::*)(::Il2CppObject*)>(&FormatterConverter::ToSingle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormatterConverter*), "ToSingle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: FormatterConverter::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (FormatterConverter::*)(::Il2CppObject*)>(&FormatterConverter::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormatterConverter*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: FormatterConverter::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FormatterConverter::*)()>(&FormatterConverter::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormatterConverter*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FormatterConverter::*)()>(&FormatterConverter::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormatterConverter*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.FormatterServices
#include "System/Runtime/Serialization/FormatterServices.hpp"
// Including type: System.Runtime.Serialization.FormatterServices/<>c__DisplayClass9_0
#include "System/Runtime/Serialization/FormatterServices_--c__DisplayClass9_0.hpp"
// Including type: System.Collections.Concurrent.ConcurrentDictionary`2
#include "System/Collections/Concurrent/ConcurrentDictionary_2.hpp"
// Including type: System.Runtime.Serialization.MemberHolder
#include "System/Runtime/Serialization/MemberHolder.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.Binder
#include "System/Reflection/Binder.hpp"
// Including type: System.RuntimeType
#include "System/RuntimeType.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Collections.Concurrent.ConcurrentDictionary`2<System.Runtime.Serialization.MemberHolder,System.Reflection.MemberInfo[]> m_MemberInfoTable
System::Collections::Concurrent::ConcurrentDictionary_2<System::Runtime::Serialization::MemberHolder*, ::Array<System::Reflection::MemberInfo*>*>* System::Runtime::Serialization::FormatterServices::_get_m_MemberInfoTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FormatterServices::_get_m_MemberInfoTable");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Concurrent::ConcurrentDictionary_2<System::Runtime::Serialization::MemberHolder*, ::Array<System::Reflection::MemberInfo*>*>*>("System.Runtime.Serialization", "FormatterServices", "m_MemberInfoTable")));
}
// Autogenerated static field setter
// Set static field: static System.Collections.Concurrent.ConcurrentDictionary`2<System.Runtime.Serialization.MemberHolder,System.Reflection.MemberInfo[]> m_MemberInfoTable
void System::Runtime::Serialization::FormatterServices::_set_m_MemberInfoTable(System::Collections::Concurrent::ConcurrentDictionary_2<System::Runtime::Serialization::MemberHolder*, ::Array<System::Reflection::MemberInfo*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FormatterServices::_set_m_MemberInfoTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization", "FormatterServices", "m_MemberInfoTable", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean unsafeTypeForwardersIsEnabled
bool System::Runtime::Serialization::FormatterServices::_get_unsafeTypeForwardersIsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FormatterServices::_get_unsafeTypeForwardersIsEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Runtime.Serialization", "FormatterServices", "unsafeTypeForwardersIsEnabled"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean unsafeTypeForwardersIsEnabled
void System::Runtime::Serialization::FormatterServices::_set_unsafeTypeForwardersIsEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FormatterServices::_set_unsafeTypeForwardersIsEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization", "FormatterServices", "unsafeTypeForwardersIsEnabled", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean unsafeTypeForwardersIsEnabledInitialized
bool System::Runtime::Serialization::FormatterServices::_get_unsafeTypeForwardersIsEnabledInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FormatterServices::_get_unsafeTypeForwardersIsEnabledInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Runtime.Serialization", "FormatterServices", "unsafeTypeForwardersIsEnabledInitialized"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean unsafeTypeForwardersIsEnabledInitialized
void System::Runtime::Serialization::FormatterServices::_set_unsafeTypeForwardersIsEnabledInitialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FormatterServices::_set_unsafeTypeForwardersIsEnabledInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization", "FormatterServices", "unsafeTypeForwardersIsEnabledInitialized", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Type[] advancedTypes
::Array<System::Type*>* System::Runtime::Serialization::FormatterServices::_get_advancedTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FormatterServices::_get_advancedTypes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<System::Type*>*>("System.Runtime.Serialization", "FormatterServices", "advancedTypes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Type[] advancedTypes
void System::Runtime::Serialization::FormatterServices::_set_advancedTypes(::Array<System::Type*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FormatterServices::_set_advancedTypes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization", "FormatterServices", "advancedTypes", value));
}
// Autogenerated static field getter
// Get static field: static private System.Reflection.Binder s_binder
System::Reflection::Binder* System::Runtime::Serialization::FormatterServices::_get_s_binder() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FormatterServices::_get_s_binder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::Binder*>("System.Runtime.Serialization", "FormatterServices", "s_binder"));
}
// Autogenerated static field setter
// Set static field: static private System.Reflection.Binder s_binder
void System::Runtime::Serialization::FormatterServices::_set_s_binder(System::Reflection::Binder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FormatterServices::_set_s_binder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization", "FormatterServices", "s_binder", value));
}
// Autogenerated method: System.Runtime.Serialization.FormatterServices..cctor
void System::Runtime::Serialization::FormatterServices::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FormatterServices::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization", "FormatterServices", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.FormatterServices.GetSerializableMembers
::Array<System::Reflection::MemberInfo*>* System::Runtime::Serialization::FormatterServices::GetSerializableMembers(System::RuntimeType* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FormatterServices::GetSerializableMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization", "FormatterServices", "GetSerializableMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::MemberInfo*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Runtime.Serialization.FormatterServices.CheckSerializable
bool System::Runtime::Serialization::FormatterServices::CheckSerializable(System::RuntimeType* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FormatterServices::CheckSerializable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization", "FormatterServices", "CheckSerializable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Runtime.Serialization.FormatterServices.InternalGetSerializableMembers
::Array<System::Reflection::MemberInfo*>* System::Runtime::Serialization::FormatterServices::InternalGetSerializableMembers(System::RuntimeType* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FormatterServices::InternalGetSerializableMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization", "FormatterServices", "InternalGetSerializableMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::MemberInfo*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Runtime.Serialization.FormatterServices.GetParentTypes
bool System::Runtime::Serialization::FormatterServices::GetParentTypes(System::RuntimeType* parentType, ::Array<System::RuntimeType*>*& parentTypes, int& parentTypeCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FormatterServices::GetParentTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization", "FormatterServices", "GetParentTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentType), ::il2cpp_utils::ExtractIndependentType<::Array<System::RuntimeType*>*&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, parentType, parentTypes, parentTypeCount);
}
// Autogenerated method: System.Runtime.Serialization.FormatterServices.GetSerializableMembers
::Array<System::Reflection::MemberInfo*>* System::Runtime::Serialization::FormatterServices::GetSerializableMembers(System::Type* type, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FormatterServices::GetSerializableMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization", "FormatterServices", "GetSerializableMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::MemberInfo*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, context);
}
// Autogenerated method: System.Runtime.Serialization.FormatterServices.GetUninitializedObject
::Il2CppObject* System::Runtime::Serialization::FormatterServices::GetUninitializedObject(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FormatterServices::GetUninitializedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization", "FormatterServices", "GetUninitializedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Runtime.Serialization.FormatterServices.nativeGetUninitializedObject
::Il2CppObject* System::Runtime::Serialization::FormatterServices::nativeGetUninitializedObject(System::RuntimeType* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FormatterServices::nativeGetUninitializedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization", "FormatterServices", "nativeGetUninitializedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Runtime.Serialization.FormatterServices.GetEnableUnsafeTypeForwarders
bool System::Runtime::Serialization::FormatterServices::GetEnableUnsafeTypeForwarders() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FormatterServices::GetEnableUnsafeTypeForwarders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization", "FormatterServices", "GetEnableUnsafeTypeForwarders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.FormatterServices.UnsafeTypeForwardersIsEnabled
bool System::Runtime::Serialization::FormatterServices::UnsafeTypeForwardersIsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FormatterServices::UnsafeTypeForwardersIsEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization", "FormatterServices", "UnsafeTypeForwardersIsEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.FormatterServices.SerializationSetValue
void System::Runtime::Serialization::FormatterServices::SerializationSetValue(System::Reflection::MemberInfo* fi, ::Il2CppObject* target, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FormatterServices::SerializationSetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization", "FormatterServices", "SerializationSetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fi), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, fi, target, value);
}
// Autogenerated method: System.Runtime.Serialization.FormatterServices.PopulateObjectMembers
::Il2CppObject* System::Runtime::Serialization::FormatterServices::PopulateObjectMembers(::Il2CppObject* obj, ::Array<System::Reflection::MemberInfo*>* members, ::Array<::Il2CppObject*>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FormatterServices::PopulateObjectMembers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization", "FormatterServices", "PopulateObjectMembers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(members), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, members, data);
}
// Autogenerated method: System.Runtime.Serialization.FormatterServices.GetObjectData
::Array<::Il2CppObject*>* System::Runtime::Serialization::FormatterServices::GetObjectData(::Il2CppObject* obj, ::Array<System::Reflection::MemberInfo*>* members) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FormatterServices::GetObjectData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization", "FormatterServices", "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(members)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppObject*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, obj, members);
}
// Autogenerated method: System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly
System::Type* System::Runtime::Serialization::FormatterServices::GetTypeFromAssembly(System::Reflection::Assembly* assem, ::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FormatterServices::GetTypeFromAssembly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization", "FormatterServices", "GetTypeFromAssembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assem), ::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assem, name);
}
// Autogenerated method: System.Runtime.Serialization.FormatterServices.LoadAssemblyFromString
System::Reflection::Assembly* System::Runtime::Serialization::FormatterServices::LoadAssemblyFromString(::Il2CppString* assemblyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FormatterServices::LoadAssemblyFromString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization", "FormatterServices", "LoadAssemblyFromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assemblyName)})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::Assembly*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assemblyName);
}
// Autogenerated method: System.Runtime.Serialization.FormatterServices.LoadAssemblyFromStringNoThrow
System::Reflection::Assembly* System::Runtime::Serialization::FormatterServices::LoadAssemblyFromStringNoThrow(::Il2CppString* assemblyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FormatterServices::LoadAssemblyFromStringNoThrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization", "FormatterServices", "LoadAssemblyFromStringNoThrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assemblyName)})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::Assembly*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, assemblyName);
}
// Autogenerated method: System.Runtime.Serialization.FormatterServices.GetClrAssemblyName
::Il2CppString* System::Runtime::Serialization::FormatterServices::GetClrAssemblyName(System::Type* type, bool& hasTypeForwardedFrom) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FormatterServices::GetClrAssemblyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization", "FormatterServices", "GetClrAssemblyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, hasTypeForwardedFrom);
}
// Autogenerated method: System.Runtime.Serialization.FormatterServices.GetClrTypeFullName
::Il2CppString* System::Runtime::Serialization::FormatterServices::GetClrTypeFullName(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FormatterServices::GetClrTypeFullName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization", "FormatterServices", "GetClrTypeFullName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Runtime.Serialization.FormatterServices.GetClrTypeFullNameForArray
::Il2CppString* System::Runtime::Serialization::FormatterServices::GetClrTypeFullNameForArray(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FormatterServices::GetClrTypeFullNameForArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization", "FormatterServices", "GetClrTypeFullNameForArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Runtime.Serialization.FormatterServices.GetClrTypeFullNameForNonArrayTypes
::Il2CppString* System::Runtime::Serialization::FormatterServices::GetClrTypeFullNameForNonArrayTypes(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FormatterServices::GetClrTypeFullNameForNonArrayTypes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization", "FormatterServices", "GetClrTypeFullNameForNonArrayTypes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Writing MetadataGetter for method: FormatterServices::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&FormatterServices::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormatterServices*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FormatterServices::GetSerializableMembers
// Il2CppName: GetSerializableMembers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<System::Reflection::MemberInfo*>* (*)(System::RuntimeType*)>(&FormatterServices::GetSerializableMembers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormatterServices*), "GetSerializableMembers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::RuntimeType*>()});
  }
};
// Writing MetadataGetter for method: FormatterServices::CheckSerializable
// Il2CppName: CheckSerializable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::RuntimeType*)>(&FormatterServices::CheckSerializable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormatterServices*), "CheckSerializable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::RuntimeType*>()});
  }
};
// Writing MetadataGetter for method: FormatterServices::InternalGetSerializableMembers
// Il2CppName: InternalGetSerializableMembers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<System::Reflection::MemberInfo*>* (*)(System::RuntimeType*)>(&FormatterServices::InternalGetSerializableMembers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormatterServices*), "InternalGetSerializableMembers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::RuntimeType*>()});
  }
};
// Writing MetadataGetter for method: FormatterServices::GetParentTypes
// Il2CppName: GetParentTypes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::RuntimeType*, ::Array<System::RuntimeType*>*&, int&)>(&FormatterServices::GetParentTypes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormatterServices*), "GetParentTypes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::RuntimeType*>(), ::il2cpp_utils::ExtractIndependentType<::Array<System::RuntimeType*>*&>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: FormatterServices::GetSerializableMembers
// Il2CppName: GetSerializableMembers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<System::Reflection::MemberInfo*>* (*)(System::Type*, System::Runtime::Serialization::StreamingContext)>(&FormatterServices::GetSerializableMembers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormatterServices*), "GetSerializableMembers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: FormatterServices::GetUninitializedObject
// Il2CppName: GetUninitializedObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(System::Type*)>(&FormatterServices::GetUninitializedObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormatterServices*), "GetUninitializedObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>()});
  }
};
// Writing MetadataGetter for method: FormatterServices::nativeGetUninitializedObject
// Il2CppName: nativeGetUninitializedObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(System::RuntimeType*)>(&FormatterServices::nativeGetUninitializedObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormatterServices*), "nativeGetUninitializedObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::RuntimeType*>()});
  }
};
// Writing MetadataGetter for method: FormatterServices::GetEnableUnsafeTypeForwarders
// Il2CppName: GetEnableUnsafeTypeForwarders
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&FormatterServices::GetEnableUnsafeTypeForwarders)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormatterServices*), "GetEnableUnsafeTypeForwarders", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FormatterServices::UnsafeTypeForwardersIsEnabled
// Il2CppName: UnsafeTypeForwardersIsEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&FormatterServices::UnsafeTypeForwardersIsEnabled)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormatterServices*), "UnsafeTypeForwardersIsEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FormatterServices::SerializationSetValue
// Il2CppName: SerializationSetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Reflection::MemberInfo*, ::Il2CppObject*, ::Il2CppObject*)>(&FormatterServices::SerializationSetValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormatterServices*), "SerializationSetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::MemberInfo*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: FormatterServices::PopulateObjectMembers
// Il2CppName: PopulateObjectMembers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(::Il2CppObject*, ::Array<System::Reflection::MemberInfo*>*, ::Array<::Il2CppObject*>*)>(&FormatterServices::PopulateObjectMembers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormatterServices*), "PopulateObjectMembers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Array<System::Reflection::MemberInfo*>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppObject*>*>()});
  }
};
// Writing MetadataGetter for method: FormatterServices::GetObjectData
// Il2CppName: GetObjectData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppObject*>* (*)(::Il2CppObject*, ::Array<System::Reflection::MemberInfo*>*)>(&FormatterServices::GetObjectData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormatterServices*), "GetObjectData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Array<System::Reflection::MemberInfo*>*>()});
  }
};
// Writing MetadataGetter for method: FormatterServices::GetTypeFromAssembly
// Il2CppName: GetTypeFromAssembly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Type* (*)(System::Reflection::Assembly*, ::Il2CppString*)>(&FormatterServices::GetTypeFromAssembly)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormatterServices*), "GetTypeFromAssembly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::Assembly*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: FormatterServices::LoadAssemblyFromString
// Il2CppName: LoadAssemblyFromString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::Assembly* (*)(::Il2CppString*)>(&FormatterServices::LoadAssemblyFromString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormatterServices*), "LoadAssemblyFromString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: FormatterServices::LoadAssemblyFromStringNoThrow
// Il2CppName: LoadAssemblyFromStringNoThrow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::Assembly* (*)(::Il2CppString*)>(&FormatterServices::LoadAssemblyFromStringNoThrow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormatterServices*), "LoadAssemblyFromStringNoThrow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: FormatterServices::GetClrAssemblyName
// Il2CppName: GetClrAssemblyName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::Type*, bool&)>(&FormatterServices::GetClrAssemblyName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormatterServices*), "GetClrAssemblyName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>(), ::il2cpp_utils::ExtractIndependentType<bool&>()});
  }
};
// Writing MetadataGetter for method: FormatterServices::GetClrTypeFullName
// Il2CppName: GetClrTypeFullName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::Type*)>(&FormatterServices::GetClrTypeFullName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormatterServices*), "GetClrTypeFullName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>()});
  }
};
// Writing MetadataGetter for method: FormatterServices::GetClrTypeFullNameForArray
// Il2CppName: GetClrTypeFullNameForArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::Type*)>(&FormatterServices::GetClrTypeFullNameForArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormatterServices*), "GetClrTypeFullNameForArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>()});
  }
};
// Writing MetadataGetter for method: FormatterServices::GetClrTypeFullNameForNonArrayTypes
// Il2CppName: GetClrTypeFullNameForNonArrayTypes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::Type*)>(&FormatterServices::GetClrTypeFullNameForNonArrayTypes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormatterServices*), "GetClrTypeFullNameForNonArrayTypes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.FormatterServices/<>c__DisplayClass9_0
#include "System/Runtime/Serialization/FormatterServices_--c__DisplayClass9_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
// Including type: System.Runtime.Serialization.MemberHolder
#include "System/Runtime/Serialization/MemberHolder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.FormatterServices/<>c__DisplayClass9_0.<GetSerializableMembers>b__0
::Array<System::Reflection::MemberInfo*>* System::Runtime::Serialization::FormatterServices::$$c__DisplayClass9_0::$GetSerializableMembers$b__0(System::Runtime::Serialization::MemberHolder* _) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FormatterServices::$$c__DisplayClass9_0::<GetSerializableMembers>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetSerializableMembers>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(_)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Reflection::MemberInfo*>*, false>(this, ___internal__method, _);
}
// Writing MetadataGetter for method: FormatterServices::$$c__DisplayClass9_0::$GetSerializableMembers$b__0
// Il2CppName: <GetSerializableMembers>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<System::Reflection::MemberInfo*>* (FormatterServices::$$c__DisplayClass9_0::*)(System::Runtime::Serialization::MemberHolder*)>(&FormatterServices::$$c__DisplayClass9_0::$GetSerializableMembers$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormatterServices::$$c__DisplayClass9_0*), "<GetSerializableMembers>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::MemberHolder*>()});
  }
};
// Writing MetadataGetter for method: FormatterServices::$$c__DisplayClass9_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FormatterServices::$$c__DisplayClass9_0::*)()>(&FormatterServices::$$c__DisplayClass9_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormatterServices::$$c__DisplayClass9_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FormatterServices::$$c__DisplayClass9_0::*)()>(&FormatterServices::$$c__DisplayClass9_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FormatterServices::$$c__DisplayClass9_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.IDeserializationCallback
#include "System/Runtime/Serialization/IDeserializationCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization
void System::Runtime::Serialization::IDeserializationCallback::OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::IDeserializationCallback::OnDeserialization");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sender);
}
// Writing MetadataGetter for method: IDeserializationCallback::OnDeserialization
// Il2CppName: OnDeserialization
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IDeserializationCallback::*)(::Il2CppObject*)>(&IDeserializationCallback::OnDeserialization)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IDeserializationCallback*), "OnDeserialization", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.IFormatterConverter
#include "System/Runtime/Serialization/IFormatterConverter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.IFormatterConverter.Convert
::Il2CppObject* System::Runtime::Serialization::IFormatterConverter::Convert(::Il2CppObject* value, System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::IFormatterConverter::Convert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, value, type);
}
// Autogenerated method: System.Runtime.Serialization.IFormatterConverter.ToBoolean
bool System::Runtime::Serialization::IFormatterConverter::ToBoolean(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::IFormatterConverter::ToBoolean");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Serialization.IFormatterConverter.ToInt32
int System::Runtime::Serialization::IFormatterConverter::ToInt32(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::IFormatterConverter::ToInt32");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Serialization.IFormatterConverter.ToInt64
int64_t System::Runtime::Serialization::IFormatterConverter::ToInt64(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::IFormatterConverter::ToInt64");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Serialization.IFormatterConverter.ToSingle
float System::Runtime::Serialization::IFormatterConverter::ToSingle(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::IFormatterConverter::ToSingle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Serialization.IFormatterConverter.ToString
::Il2CppString* System::Runtime::Serialization::IFormatterConverter::ToString(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::IFormatterConverter::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: IFormatterConverter::Convert
// Il2CppName: Convert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (IFormatterConverter::*)(::Il2CppObject*, System::Type*)>(&IFormatterConverter::Convert)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IFormatterConverter*), "Convert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Type*>()});
  }
};
// Writing MetadataGetter for method: IFormatterConverter::ToBoolean
// Il2CppName: ToBoolean
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (IFormatterConverter::*)(::Il2CppObject*)>(&IFormatterConverter::ToBoolean)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IFormatterConverter*), "ToBoolean", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: IFormatterConverter::ToInt32
// Il2CppName: ToInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (IFormatterConverter::*)(::Il2CppObject*)>(&IFormatterConverter::ToInt32)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IFormatterConverter*), "ToInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: IFormatterConverter::ToInt64
// Il2CppName: ToInt64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (IFormatterConverter::*)(::Il2CppObject*)>(&IFormatterConverter::ToInt64)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IFormatterConverter*), "ToInt64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: IFormatterConverter::ToSingle
// Il2CppName: ToSingle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (IFormatterConverter::*)(::Il2CppObject*)>(&IFormatterConverter::ToSingle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IFormatterConverter*), "ToSingle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: IFormatterConverter::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (IFormatterConverter::*)(::Il2CppObject*)>(&IFormatterConverter::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IFormatterConverter*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.IObjectReference
#include "System/Runtime/Serialization/IObjectReference.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.IObjectReference.GetRealObject
::Il2CppObject* System::Runtime::Serialization::IObjectReference::GetRealObject(System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::IObjectReference::GetRealObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRealObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, context);
}
// Writing MetadataGetter for method: IObjectReference::GetRealObject
// Il2CppName: GetRealObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (IObjectReference::*)(System::Runtime::Serialization::StreamingContext)>(&IObjectReference::GetRealObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IObjectReference*), "GetRealObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.ISerializable
#include "System/Runtime/Serialization/ISerializable.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.ISerializable.GetObjectData
void System::Runtime::Serialization::ISerializable::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ISerializable::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
// Writing MetadataGetter for method: ISerializable::GetObjectData
// Il2CppName: GetObjectData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ISerializable::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&ISerializable::GetObjectData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ISerializable*), "GetObjectData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.ISerializationSurrogate
#include "System/Runtime/Serialization/ISerializationSurrogate.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.Runtime.Serialization.ISurrogateSelector
#include "System/Runtime/Serialization/ISurrogateSelector.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.ISerializationSurrogate.GetObjectData
void System::Runtime::Serialization::ISerializationSurrogate::GetObjectData(::Il2CppObject* obj, System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ISerializationSurrogate::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj, info, context);
}
// Autogenerated method: System.Runtime.Serialization.ISerializationSurrogate.SetObjectData
::Il2CppObject* System::Runtime::Serialization::ISerializationSurrogate::SetObjectData(::Il2CppObject* obj, System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context, System::Runtime::Serialization::ISurrogateSelector* selector) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ISerializationSurrogate::SetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractType(selector)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, obj, info, context, selector);
}
// Writing MetadataGetter for method: ISerializationSurrogate::GetObjectData
// Il2CppName: GetObjectData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ISerializationSurrogate::*)(::Il2CppObject*, System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&ISerializationSurrogate::GetObjectData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ISerializationSurrogate*), "GetObjectData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: ISerializationSurrogate::SetObjectData
// Il2CppName: SetObjectData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ISerializationSurrogate::*)(::Il2CppObject*, System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext, System::Runtime::Serialization::ISurrogateSelector*)>(&ISerializationSurrogate::SetObjectData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ISerializationSurrogate*), "SetObjectData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::ISurrogateSelector*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.ISurrogateSelector
#include "System/Runtime/Serialization/ISurrogateSelector.hpp"
// Including type: System.Runtime.Serialization.ISerializationSurrogate
#include "System/Runtime/Serialization/ISerializationSurrogate.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.ISurrogateSelector.GetSurrogate
System::Runtime::Serialization::ISerializationSurrogate* System::Runtime::Serialization::ISurrogateSelector::GetSurrogate(System::Type* type, System::Runtime::Serialization::StreamingContext context, System::Runtime::Serialization::ISurrogateSelector*& selector) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ISurrogateSelector::GetSurrogate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSurrogate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(context), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::ISurrogateSelector*&>()})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Serialization::ISerializationSurrogate*, false>(this, ___internal__method, type, context, selector);
}
// Writing MetadataGetter for method: ISurrogateSelector::GetSurrogate
// Il2CppName: GetSurrogate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Serialization::ISerializationSurrogate* (ISurrogateSelector::*)(System::Type*, System::Runtime::Serialization::StreamingContext, System::Runtime::Serialization::ISurrogateSelector*&)>(&ISurrogateSelector::GetSurrogate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ISurrogateSelector*), "GetSurrogate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::ISurrogateSelector*&>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.MemberHolder
#include "System/Runtime/Serialization/MemberHolder.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.MemberHolder.GetHashCode
int System::Runtime::Serialization::MemberHolder::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::MemberHolder::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.MemberHolder.Equals
bool System::Runtime::Serialization::MemberHolder::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::MemberHolder::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Writing MetadataGetter for method: MemberHolder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MemberHolder::*)(System::Type*, System::Runtime::Serialization::StreamingContext)>(&MemberHolder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberHolder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MemberHolder::*)(System::Type*, System::Runtime::Serialization::StreamingContext)>(&MemberHolder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberHolder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: MemberHolder::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MemberHolder::*)()>(&MemberHolder::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberHolder*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MemberHolder::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MemberHolder::*)(::Il2CppObject*)>(&MemberHolder::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberHolder*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.ObjectIDGenerator
#include "System/Runtime/Serialization/ObjectIDGenerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Int32[] sizes
::Array<int>* System::Runtime::Serialization::ObjectIDGenerator::_get_sizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectIDGenerator::_get_sizes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<int>*>("System.Runtime.Serialization", "ObjectIDGenerator", "sizes"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32[] sizes
void System::Runtime::Serialization::ObjectIDGenerator::_set_sizes(::Array<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectIDGenerator::_set_sizes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization", "ObjectIDGenerator", "sizes", value));
}
// Autogenerated method: System.Runtime.Serialization.ObjectIDGenerator.FindElement
int System::Runtime::Serialization::ObjectIDGenerator::FindElement(::Il2CppObject* obj, bool& found) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectIDGenerator::FindElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, obj, found);
}
// Autogenerated method: System.Runtime.Serialization.ObjectIDGenerator.GetId
int64_t System::Runtime::Serialization::ObjectIDGenerator::GetId(::Il2CppObject* obj, bool& firstTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectIDGenerator::GetId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method, obj, firstTime);
}
// Autogenerated method: System.Runtime.Serialization.ObjectIDGenerator.HasId
int64_t System::Runtime::Serialization::ObjectIDGenerator::HasId(::Il2CppObject* obj, bool& firstTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectIDGenerator::HasId");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HasId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method, obj, firstTime);
}
// Autogenerated method: System.Runtime.Serialization.ObjectIDGenerator.Rehash
void System::Runtime::Serialization::ObjectIDGenerator::Rehash() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectIDGenerator::Rehash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rehash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.ObjectIDGenerator..cctor
void System::Runtime::Serialization::ObjectIDGenerator::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectIDGenerator::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization", "ObjectIDGenerator", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: ObjectIDGenerator::FindElement
// Il2CppName: FindElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ObjectIDGenerator::*)(::Il2CppObject*, bool&)>(&ObjectIDGenerator::FindElement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectIDGenerator*), "FindElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<bool&>()});
  }
};
// Writing MetadataGetter for method: ObjectIDGenerator::GetId
// Il2CppName: GetId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (ObjectIDGenerator::*)(::Il2CppObject*, bool&)>(&ObjectIDGenerator::GetId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectIDGenerator*), "GetId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<bool&>()});
  }
};
// Writing MetadataGetter for method: ObjectIDGenerator::HasId
// Il2CppName: HasId
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (ObjectIDGenerator::*)(::Il2CppObject*, bool&)>(&ObjectIDGenerator::HasId)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectIDGenerator*), "HasId", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<bool&>()});
  }
};
// Writing MetadataGetter for method: ObjectIDGenerator::Rehash
// Il2CppName: Rehash
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectIDGenerator::*)()>(&ObjectIDGenerator::Rehash)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectIDGenerator*), "Rehash", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ObjectIDGenerator::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ObjectIDGenerator::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectIDGenerator*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ObjectIDGenerator::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectIDGenerator::*)()>(&ObjectIDGenerator::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectIDGenerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectIDGenerator::*)()>(&ObjectIDGenerator::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectIDGenerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.ObjectManager
#include "System/Runtime/Serialization/ObjectManager.hpp"
// Including type: System.Runtime.Serialization.DeserializationEventHandler
#include "System/Runtime/Serialization/DeserializationEventHandler.hpp"
// Including type: System.Runtime.Serialization.SerializationEventHandler
#include "System/Runtime/Serialization/SerializationEventHandler.hpp"
// Including type: System.Runtime.Serialization.ObjectHolder
#include "System/Runtime/Serialization/ObjectHolder.hpp"
// Including type: System.Runtime.Serialization.ObjectHolderList
#include "System/Runtime/Serialization/ObjectHolderList.hpp"
// Including type: System.Runtime.Serialization.ISurrogateSelector
#include "System/Runtime/Serialization/ISurrogateSelector.hpp"
// Including type: System.Runtime.Serialization.FixupHolder
#include "System/Runtime/Serialization/FixupHolder.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
// Including type: System.Reflection.RuntimeConstructorInfo
#include "System/Reflection/RuntimeConstructorInfo.hpp"
// Including type: System.RuntimeType
#include "System/RuntimeType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.ObjectManager.CanCallGetType
bool System::Runtime::Serialization::ObjectManager::CanCallGetType(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectManager::CanCallGetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CanCallGetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Runtime.Serialization.ObjectManager.set_TopObject
void System::Runtime::Serialization::ObjectManager::set_TopObject(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectManager::set_TopObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TopObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Serialization.ObjectManager.get_TopObject
::Il2CppObject* System::Runtime::Serialization::ObjectManager::get_TopObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectManager::get_TopObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TopObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.ObjectManager.get_SpecialFixupObjects
System::Runtime::Serialization::ObjectHolderList* System::Runtime::Serialization::ObjectManager::get_SpecialFixupObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectManager::get_SpecialFixupObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SpecialFixupObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Serialization::ObjectHolderList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.ObjectManager.FindObjectHolder
System::Runtime::Serialization::ObjectHolder* System::Runtime::Serialization::ObjectManager::FindObjectHolder(int64_t objectID) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectManager::FindObjectHolder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindObjectHolder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectID)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Serialization::ObjectHolder*, false>(this, ___internal__method, objectID);
}
// Autogenerated method: System.Runtime.Serialization.ObjectManager.FindOrCreateObjectHolder
System::Runtime::Serialization::ObjectHolder* System::Runtime::Serialization::ObjectManager::FindOrCreateObjectHolder(int64_t objectID) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectManager::FindOrCreateObjectHolder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindOrCreateObjectHolder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectID)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Serialization::ObjectHolder*, false>(this, ___internal__method, objectID);
}
// Autogenerated method: System.Runtime.Serialization.ObjectManager.AddObjectHolder
void System::Runtime::Serialization::ObjectManager::AddObjectHolder(System::Runtime::Serialization::ObjectHolder* holder) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectManager::AddObjectHolder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddObjectHolder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(holder)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, holder);
}
// Autogenerated method: System.Runtime.Serialization.ObjectManager.GetCompletionInfo
bool System::Runtime::Serialization::ObjectManager::GetCompletionInfo(System::Runtime::Serialization::FixupHolder* fixup, System::Runtime::Serialization::ObjectHolder*& holder, ::Il2CppObject*& member, bool bThrowIfMissing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectManager::GetCompletionInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCompletionInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fixup), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::ObjectHolder*&>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>(), ::il2cpp_utils::ExtractType(bThrowIfMissing)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, fixup, holder, member, bThrowIfMissing);
}
// Autogenerated method: System.Runtime.Serialization.ObjectManager.FixupSpecialObject
void System::Runtime::Serialization::ObjectManager::FixupSpecialObject(System::Runtime::Serialization::ObjectHolder* holder) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectManager::FixupSpecialObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixupSpecialObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(holder)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, holder);
}
// Autogenerated method: System.Runtime.Serialization.ObjectManager.ResolveObjectReference
bool System::Runtime::Serialization::ObjectManager::ResolveObjectReference(System::Runtime::Serialization::ObjectHolder* holder) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectManager::ResolveObjectReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResolveObjectReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(holder)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, holder);
}
// Autogenerated method: System.Runtime.Serialization.ObjectManager.DoValueTypeFixup
bool System::Runtime::Serialization::ObjectManager::DoValueTypeFixup(System::Reflection::FieldInfo* memberToFix, System::Runtime::Serialization::ObjectHolder* holder, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectManager::DoValueTypeFixup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoValueTypeFixup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(memberToFix), ::il2cpp_utils::ExtractType(holder), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, memberToFix, holder, value);
}
// Autogenerated method: System.Runtime.Serialization.ObjectManager.CompleteObject
void System::Runtime::Serialization::ObjectManager::CompleteObject(System::Runtime::Serialization::ObjectHolder* holder, bool bObjectFullyComplete) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectManager::CompleteObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompleteObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(holder), ::il2cpp_utils::ExtractType(bObjectFullyComplete)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, holder, bObjectFullyComplete);
}
// Autogenerated method: System.Runtime.Serialization.ObjectManager.DoNewlyRegisteredObjectFixups
void System::Runtime::Serialization::ObjectManager::DoNewlyRegisteredObjectFixups(System::Runtime::Serialization::ObjectHolder* holder) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectManager::DoNewlyRegisteredObjectFixups");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoNewlyRegisteredObjectFixups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(holder)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, holder);
}
// Autogenerated method: System.Runtime.Serialization.ObjectManager.GetObject
::Il2CppObject* System::Runtime::Serialization::ObjectManager::GetObject(int64_t objectID) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectManager::GetObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectID)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, objectID);
}
// Autogenerated method: System.Runtime.Serialization.ObjectManager.RegisterString
void System::Runtime::Serialization::ObjectManager::RegisterString(::Il2CppString* obj, int64_t objectID, System::Runtime::Serialization::SerializationInfo* info, int64_t idOfContainingObj, System::Reflection::MemberInfo* member) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectManager::RegisterString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(objectID), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(idOfContainingObj), ::il2cpp_utils::ExtractType(member)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj, objectID, info, idOfContainingObj, member);
}
// Autogenerated method: System.Runtime.Serialization.ObjectManager.RegisterObject
void System::Runtime::Serialization::ObjectManager::RegisterObject(::Il2CppObject* obj, int64_t objectID, System::Runtime::Serialization::SerializationInfo* info, int64_t idOfContainingObj, System::Reflection::MemberInfo* member, ::Array<int>* arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectManager::RegisterObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(objectID), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(idOfContainingObj), ::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(arrayIndex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj, objectID, info, idOfContainingObj, member, arrayIndex);
}
// Autogenerated method: System.Runtime.Serialization.ObjectManager.CompleteISerializableObject
void System::Runtime::Serialization::ObjectManager::CompleteISerializableObject(::Il2CppObject* obj, System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectManager::CompleteISerializableObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompleteISerializableObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj, info, context);
}
// Autogenerated method: System.Runtime.Serialization.ObjectManager.GetConstructor
System::Reflection::RuntimeConstructorInfo* System::Runtime::Serialization::ObjectManager::GetConstructor(System::RuntimeType* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectManager::GetConstructor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization", "ObjectManager", "GetConstructor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::RuntimeConstructorInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated method: System.Runtime.Serialization.ObjectManager.DoFixups
void System::Runtime::Serialization::ObjectManager::DoFixups() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectManager::DoFixups");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoFixups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.ObjectManager.RegisterFixup
void System::Runtime::Serialization::ObjectManager::RegisterFixup(System::Runtime::Serialization::FixupHolder* fixup, int64_t objectToBeFixed, int64_t objectRequired) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectManager::RegisterFixup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterFixup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fixup), ::il2cpp_utils::ExtractType(objectToBeFixed), ::il2cpp_utils::ExtractType(objectRequired)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, fixup, objectToBeFixed, objectRequired);
}
// Autogenerated method: System.Runtime.Serialization.ObjectManager.RecordFixup
void System::Runtime::Serialization::ObjectManager::RecordFixup(int64_t objectToBeFixed, System::Reflection::MemberInfo* member, int64_t objectRequired) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectManager::RecordFixup");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordFixup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectToBeFixed), ::il2cpp_utils::ExtractType(member), ::il2cpp_utils::ExtractType(objectRequired)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, objectToBeFixed, member, objectRequired);
}
// Autogenerated method: System.Runtime.Serialization.ObjectManager.RecordDelayedFixup
void System::Runtime::Serialization::ObjectManager::RecordDelayedFixup(int64_t objectToBeFixed, ::Il2CppString* memberName, int64_t objectRequired) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectManager::RecordDelayedFixup");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordDelayedFixup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectToBeFixed), ::il2cpp_utils::ExtractType(memberName), ::il2cpp_utils::ExtractType(objectRequired)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, objectToBeFixed, memberName, objectRequired);
}
// Autogenerated method: System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup
void System::Runtime::Serialization::ObjectManager::RecordArrayElementFixup(int64_t arrayToBeFixed, ::Array<int>* indices, int64_t objectRequired) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectManager::RecordArrayElementFixup");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordArrayElementFixup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arrayToBeFixed), ::il2cpp_utils::ExtractType(indices), ::il2cpp_utils::ExtractType(objectRequired)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, arrayToBeFixed, indices, objectRequired);
}
// Autogenerated method: System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent
void System::Runtime::Serialization::ObjectManager::RaiseDeserializationEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectManager::RaiseDeserializationEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RaiseDeserializationEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.ObjectManager.AddOnDeserialization
void System::Runtime::Serialization::ObjectManager::AddOnDeserialization(System::Runtime::Serialization::DeserializationEventHandler* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectManager::AddOnDeserialization");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddOnDeserialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handler)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, handler);
}
// Autogenerated method: System.Runtime.Serialization.ObjectManager.AddOnDeserialized
void System::Runtime::Serialization::ObjectManager::AddOnDeserialized(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectManager::AddOnDeserialized");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddOnDeserialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Runtime.Serialization.ObjectManager.RaiseOnDeserializedEvent
void System::Runtime::Serialization::ObjectManager::RaiseOnDeserializedEvent(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectManager::RaiseOnDeserializedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RaiseOnDeserializedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Runtime.Serialization.ObjectManager.RaiseOnDeserializingEvent
void System::Runtime::Serialization::ObjectManager::RaiseOnDeserializingEvent(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectManager::RaiseOnDeserializingEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RaiseOnDeserializingEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj);
}
// Writing MetadataGetter for method: ObjectManager::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectManager::*)(System::Runtime::Serialization::ISurrogateSelector*, System::Runtime::Serialization::StreamingContext, bool, bool)>(&ObjectManager::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectManager*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::ISurrogateSelector*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectManager::*)(System::Runtime::Serialization::ISurrogateSelector*, System::Runtime::Serialization::StreamingContext, bool, bool)>(&ObjectManager::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectManager*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::ISurrogateSelector*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ObjectManager::CanCallGetType
// Il2CppName: CanCallGetType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ObjectManager::*)(::Il2CppObject*)>(&ObjectManager::CanCallGetType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectManager*), "CanCallGetType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: ObjectManager::set_TopObject
// Il2CppName: set_TopObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectManager::*)(::Il2CppObject*)>(&ObjectManager::set_TopObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectManager*), "set_TopObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: ObjectManager::get_TopObject
// Il2CppName: get_TopObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ObjectManager::*)()>(&ObjectManager::get_TopObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectManager*), "get_TopObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ObjectManager::get_SpecialFixupObjects
// Il2CppName: get_SpecialFixupObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Serialization::ObjectHolderList* (ObjectManager::*)()>(&ObjectManager::get_SpecialFixupObjects)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectManager*), "get_SpecialFixupObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ObjectManager::FindObjectHolder
// Il2CppName: FindObjectHolder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Serialization::ObjectHolder* (ObjectManager::*)(int64_t)>(&ObjectManager::FindObjectHolder)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectManager*), "FindObjectHolder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: ObjectManager::FindOrCreateObjectHolder
// Il2CppName: FindOrCreateObjectHolder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Serialization::ObjectHolder* (ObjectManager::*)(int64_t)>(&ObjectManager::FindOrCreateObjectHolder)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectManager*), "FindOrCreateObjectHolder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: ObjectManager::AddObjectHolder
// Il2CppName: AddObjectHolder
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectManager::*)(System::Runtime::Serialization::ObjectHolder*)>(&ObjectManager::AddObjectHolder)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectManager*), "AddObjectHolder", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::ObjectHolder*>()});
  }
};
// Writing MetadataGetter for method: ObjectManager::GetCompletionInfo
// Il2CppName: GetCompletionInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ObjectManager::*)(System::Runtime::Serialization::FixupHolder*, System::Runtime::Serialization::ObjectHolder*&, ::Il2CppObject*&, bool)>(&ObjectManager::GetCompletionInfo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectManager*), "GetCompletionInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::FixupHolder*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::ObjectHolder*&>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ObjectManager::FixupSpecialObject
// Il2CppName: FixupSpecialObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectManager::*)(System::Runtime::Serialization::ObjectHolder*)>(&ObjectManager::FixupSpecialObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectManager*), "FixupSpecialObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::ObjectHolder*>()});
  }
};
// Writing MetadataGetter for method: ObjectManager::ResolveObjectReference
// Il2CppName: ResolveObjectReference
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ObjectManager::*)(System::Runtime::Serialization::ObjectHolder*)>(&ObjectManager::ResolveObjectReference)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectManager*), "ResolveObjectReference", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::ObjectHolder*>()});
  }
};
// Writing MetadataGetter for method: ObjectManager::DoValueTypeFixup
// Il2CppName: DoValueTypeFixup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ObjectManager::*)(System::Reflection::FieldInfo*, System::Runtime::Serialization::ObjectHolder*, ::Il2CppObject*)>(&ObjectManager::DoValueTypeFixup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectManager*), "DoValueTypeFixup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::FieldInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::ObjectHolder*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: ObjectManager::CompleteObject
// Il2CppName: CompleteObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectManager::*)(System::Runtime::Serialization::ObjectHolder*, bool)>(&ObjectManager::CompleteObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectManager*), "CompleteObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::ObjectHolder*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ObjectManager::DoNewlyRegisteredObjectFixups
// Il2CppName: DoNewlyRegisteredObjectFixups
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectManager::*)(System::Runtime::Serialization::ObjectHolder*)>(&ObjectManager::DoNewlyRegisteredObjectFixups)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectManager*), "DoNewlyRegisteredObjectFixups", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::ObjectHolder*>()});
  }
};
// Writing MetadataGetter for method: ObjectManager::GetObject
// Il2CppName: GetObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ObjectManager::*)(int64_t)>(&ObjectManager::GetObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectManager*), "GetObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: ObjectManager::RegisterString
// Il2CppName: RegisterString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectManager::*)(::Il2CppString*, int64_t, System::Runtime::Serialization::SerializationInfo*, int64_t, System::Reflection::MemberInfo*)>(&ObjectManager::RegisterString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectManager*), "RegisterString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::MemberInfo*>()});
  }
};
// Writing MetadataGetter for method: ObjectManager::RegisterObject
// Il2CppName: RegisterObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectManager::*)(::Il2CppObject*, int64_t, System::Runtime::Serialization::SerializationInfo*, int64_t, System::Reflection::MemberInfo*, ::Array<int>*)>(&ObjectManager::RegisterObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectManager*), "RegisterObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::MemberInfo*>(), ::il2cpp_utils::ExtractIndependentType<::Array<int>*>()});
  }
};
// Writing MetadataGetter for method: ObjectManager::CompleteISerializableObject
// Il2CppName: CompleteISerializableObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectManager::*)(::Il2CppObject*, System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&ObjectManager::CompleteISerializableObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectManager*), "CompleteISerializableObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: ObjectManager::GetConstructor
// Il2CppName: GetConstructor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::RuntimeConstructorInfo* (*)(System::RuntimeType*)>(&ObjectManager::GetConstructor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectManager*), "GetConstructor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::RuntimeType*>()});
  }
};
// Writing MetadataGetter for method: ObjectManager::DoFixups
// Il2CppName: DoFixups
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectManager::*)()>(&ObjectManager::DoFixups)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectManager*), "DoFixups", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ObjectManager::RegisterFixup
// Il2CppName: RegisterFixup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectManager::*)(System::Runtime::Serialization::FixupHolder*, int64_t, int64_t)>(&ObjectManager::RegisterFixup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectManager*), "RegisterFixup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::FixupHolder*>(), ::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: ObjectManager::RecordFixup
// Il2CppName: RecordFixup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectManager::*)(int64_t, System::Reflection::MemberInfo*, int64_t)>(&ObjectManager::RecordFixup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectManager*), "RecordFixup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::MemberInfo*>(), ::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: ObjectManager::RecordDelayedFixup
// Il2CppName: RecordDelayedFixup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectManager::*)(int64_t, ::Il2CppString*, int64_t)>(&ObjectManager::RecordDelayedFixup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectManager*), "RecordDelayedFixup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: ObjectManager::RecordArrayElementFixup
// Il2CppName: RecordArrayElementFixup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectManager::*)(int64_t, ::Array<int>*, int64_t)>(&ObjectManager::RecordArrayElementFixup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectManager*), "RecordArrayElementFixup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<::Array<int>*>(), ::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: ObjectManager::RaiseDeserializationEvent
// Il2CppName: RaiseDeserializationEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectManager::*)()>(&ObjectManager::RaiseDeserializationEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectManager*), "RaiseDeserializationEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ObjectManager::AddOnDeserialization
// Il2CppName: AddOnDeserialization
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectManager::*)(System::Runtime::Serialization::DeserializationEventHandler*)>(&ObjectManager::AddOnDeserialization)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectManager*), "AddOnDeserialization", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::DeserializationEventHandler*>()});
  }
};
// Writing MetadataGetter for method: ObjectManager::AddOnDeserialized
// Il2CppName: AddOnDeserialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectManager::*)(::Il2CppObject*)>(&ObjectManager::AddOnDeserialized)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectManager*), "AddOnDeserialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: ObjectManager::RaiseOnDeserializedEvent
// Il2CppName: RaiseOnDeserializedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectManager::*)(::Il2CppObject*)>(&ObjectManager::RaiseOnDeserializedEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectManager*), "RaiseOnDeserializedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: ObjectManager::RaiseOnDeserializingEvent
// Il2CppName: RaiseOnDeserializingEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectManager::*)(::Il2CppObject*)>(&ObjectManager::RaiseOnDeserializingEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectManager*), "RaiseOnDeserializingEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.ObjectHolder
#include "System/Runtime/Serialization/ObjectHolder.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Runtime.Serialization.ISerializationSurrogate
#include "System/Runtime/Serialization/ISerializationSurrogate.hpp"
// Including type: System.Runtime.Serialization.FixupHolderList
#include "System/Runtime/Serialization/FixupHolderList.hpp"
// Including type: System.Runtime.Serialization.LongList
#include "System/Runtime/Serialization/LongList.hpp"
// Including type: System.Runtime.Serialization.ValueTypeFixupInfo
#include "System/Runtime/Serialization/ValueTypeFixupInfo.hpp"
// Including type: System.Runtime.Serialization.TypeLoadExceptionHolder
#include "System/Runtime/Serialization/TypeLoadExceptionHolder.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: System.Runtime.Serialization.ObjectManager
#include "System/Runtime/Serialization/ObjectManager.hpp"
// Including type: System.Runtime.Serialization.FixupHolder
#include "System/Runtime/Serialization/FixupHolder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.ObjectHolder.IncrementDescendentFixups
void System::Runtime::Serialization::ObjectHolder::IncrementDescendentFixups(int amount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolder::IncrementDescendentFixups");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IncrementDescendentFixups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(amount)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, amount);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolder.DecrementFixupsRemaining
void System::Runtime::Serialization::ObjectHolder::DecrementFixupsRemaining(System::Runtime::Serialization::ObjectManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolder::DecrementFixupsRemaining");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DecrementFixupsRemaining", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(manager)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, manager);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolder.RemoveDependency
void System::Runtime::Serialization::ObjectHolder::RemoveDependency(int64_t id) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolder::RemoveDependency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveDependency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, id);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolder.AddFixup
void System::Runtime::Serialization::ObjectHolder::AddFixup(System::Runtime::Serialization::FixupHolder* fixup, System::Runtime::Serialization::ObjectManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolder::AddFixup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddFixup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fixup), ::il2cpp_utils::ExtractType(manager)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, fixup, manager);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolder.UpdateDescendentDependencyChain
void System::Runtime::Serialization::ObjectHolder::UpdateDescendentDependencyChain(int amount, System::Runtime::Serialization::ObjectManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolder::UpdateDescendentDependencyChain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDescendentDependencyChain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(amount), ::il2cpp_utils::ExtractType(manager)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, amount, manager);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolder.AddDependency
void System::Runtime::Serialization::ObjectHolder::AddDependency(int64_t dependentObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolder::AddDependency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddDependency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dependentObject)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, dependentObject);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolder.UpdateData
void System::Runtime::Serialization::ObjectHolder::UpdateData(::Il2CppObject* obj, System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::ISerializationSurrogate* surrogate, int64_t idOfContainer, System::Reflection::FieldInfo* field, ::Array<int>* arrayIndex, System::Runtime::Serialization::ObjectManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolder::UpdateData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(surrogate), ::il2cpp_utils::ExtractType(idOfContainer), ::il2cpp_utils::ExtractType(field), ::il2cpp_utils::ExtractType(arrayIndex), ::il2cpp_utils::ExtractType(manager)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj, info, surrogate, idOfContainer, field, arrayIndex, manager);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolder.MarkForCompletionWhenAvailable
void System::Runtime::Serialization::ObjectHolder::MarkForCompletionWhenAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolder::MarkForCompletionWhenAvailable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MarkForCompletionWhenAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolder.SetFlags
void System::Runtime::Serialization::ObjectHolder::SetFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolder::SetFlags");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFlags", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolder.get_IsIncompleteObjectReference
bool System::Runtime::Serialization::ObjectHolder::get_IsIncompleteObjectReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolder::get_IsIncompleteObjectReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsIncompleteObjectReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolder.set_IsIncompleteObjectReference
void System::Runtime::Serialization::ObjectHolder::set_IsIncompleteObjectReference(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolder::set_IsIncompleteObjectReference");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsIncompleteObjectReference", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolder.get_RequiresDelayedFixup
bool System::Runtime::Serialization::ObjectHolder::get_RequiresDelayedFixup() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolder::get_RequiresDelayedFixup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RequiresDelayedFixup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolder.get_RequiresValueTypeFixup
bool System::Runtime::Serialization::ObjectHolder::get_RequiresValueTypeFixup() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolder::get_RequiresValueTypeFixup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RequiresValueTypeFixup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolder.get_ValueTypeFixupPerformed
bool System::Runtime::Serialization::ObjectHolder::get_ValueTypeFixupPerformed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolder::get_ValueTypeFixupPerformed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueTypeFixupPerformed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolder.set_ValueTypeFixupPerformed
void System::Runtime::Serialization::ObjectHolder::set_ValueTypeFixupPerformed(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolder::set_ValueTypeFixupPerformed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ValueTypeFixupPerformed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolder.get_HasISerializable
bool System::Runtime::Serialization::ObjectHolder::get_HasISerializable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolder::get_HasISerializable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasISerializable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolder.get_HasSurrogate
bool System::Runtime::Serialization::ObjectHolder::get_HasSurrogate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolder::get_HasSurrogate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasSurrogate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolder.get_CanSurrogatedObjectValueChange
bool System::Runtime::Serialization::ObjectHolder::get_CanSurrogatedObjectValueChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolder::get_CanSurrogatedObjectValueChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanSurrogatedObjectValueChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolder.get_CanObjectValueChange
bool System::Runtime::Serialization::ObjectHolder::get_CanObjectValueChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolder::get_CanObjectValueChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanObjectValueChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolder.get_DirectlyDependentObjects
int System::Runtime::Serialization::ObjectHolder::get_DirectlyDependentObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolder::get_DirectlyDependentObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DirectlyDependentObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolder.get_TotalDependentObjects
int System::Runtime::Serialization::ObjectHolder::get_TotalDependentObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolder::get_TotalDependentObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TotalDependentObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolder.get_Reachable
bool System::Runtime::Serialization::ObjectHolder::get_Reachable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolder::get_Reachable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Reachable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolder.set_Reachable
void System::Runtime::Serialization::ObjectHolder::set_Reachable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolder::set_Reachable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Reachable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolder.get_TypeLoadExceptionReachable
bool System::Runtime::Serialization::ObjectHolder::get_TypeLoadExceptionReachable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolder::get_TypeLoadExceptionReachable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeLoadExceptionReachable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolder.get_TypeLoadException
System::Runtime::Serialization::TypeLoadExceptionHolder* System::Runtime::Serialization::ObjectHolder::get_TypeLoadException() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolder::get_TypeLoadException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeLoadException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Serialization::TypeLoadExceptionHolder*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolder.set_TypeLoadException
void System::Runtime::Serialization::ObjectHolder::set_TypeLoadException(System::Runtime::Serialization::TypeLoadExceptionHolder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolder::set_TypeLoadException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TypeLoadException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolder.get_ObjectValue
::Il2CppObject* System::Runtime::Serialization::ObjectHolder::get_ObjectValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolder::get_ObjectValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ObjectValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolder.SetObjectValue
void System::Runtime::Serialization::ObjectHolder::SetObjectValue(::Il2CppObject* obj, System::Runtime::Serialization::ObjectManager* manager) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolder::SetObjectValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetObjectValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(manager)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj, manager);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolder.get_SerializationInfo
System::Runtime::Serialization::SerializationInfo* System::Runtime::Serialization::ObjectHolder::get_SerializationInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolder::get_SerializationInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SerializationInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Serialization::SerializationInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolder.set_SerializationInfo
void System::Runtime::Serialization::ObjectHolder::set_SerializationInfo(System::Runtime::Serialization::SerializationInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolder::set_SerializationInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SerializationInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolder.get_Surrogate
System::Runtime::Serialization::ISerializationSurrogate* System::Runtime::Serialization::ObjectHolder::get_Surrogate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolder::get_Surrogate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Surrogate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Serialization::ISerializationSurrogate*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolder.get_DependentObjects
System::Runtime::Serialization::LongList* System::Runtime::Serialization::ObjectHolder::get_DependentObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolder::get_DependentObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DependentObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Serialization::LongList*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolder.set_DependentObjects
void System::Runtime::Serialization::ObjectHolder::set_DependentObjects(System::Runtime::Serialization::LongList* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolder::set_DependentObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DependentObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolder.get_RequiresSerInfoFixup
bool System::Runtime::Serialization::ObjectHolder::get_RequiresSerInfoFixup() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolder::get_RequiresSerInfoFixup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RequiresSerInfoFixup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolder.set_RequiresSerInfoFixup
void System::Runtime::Serialization::ObjectHolder::set_RequiresSerInfoFixup(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolder::set_RequiresSerInfoFixup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RequiresSerInfoFixup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolder.get_ValueFixup
System::Runtime::Serialization::ValueTypeFixupInfo* System::Runtime::Serialization::ObjectHolder::get_ValueFixup() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolder::get_ValueFixup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValueFixup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Serialization::ValueTypeFixupInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolder.get_CompletelyFixed
bool System::Runtime::Serialization::ObjectHolder::get_CompletelyFixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolder::get_CompletelyFixed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CompletelyFixed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolder.get_ContainerID
int64_t System::Runtime::Serialization::ObjectHolder::get_ContainerID() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolder::get_ContainerID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContainerID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: ObjectHolder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectHolder::*)(int64_t)>(&ObjectHolder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectHolder::*)(int64_t)>(&ObjectHolder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: ObjectHolder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectHolder::*)(::Il2CppObject*, int64_t, System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::ISerializationSurrogate*, int64_t, System::Reflection::FieldInfo*, ::Array<int>*)>(&ObjectHolder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::ISerializationSurrogate*>(), ::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::FieldInfo*>(), ::il2cpp_utils::ExtractIndependentType<::Array<int>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectHolder::*)(::Il2CppObject*, int64_t, System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::ISerializationSurrogate*, int64_t, System::Reflection::FieldInfo*, ::Array<int>*)>(&ObjectHolder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::ISerializationSurrogate*>(), ::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::FieldInfo*>(), ::il2cpp_utils::ExtractIndependentType<::Array<int>*>()});
  }
};
// Writing MetadataGetter for method: ObjectHolder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectHolder::*)(::Il2CppString*, int64_t, System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::ISerializationSurrogate*, int64_t, System::Reflection::FieldInfo*, ::Array<int>*)>(&ObjectHolder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::ISerializationSurrogate*>(), ::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::FieldInfo*>(), ::il2cpp_utils::ExtractIndependentType<::Array<int>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectHolder::*)(::Il2CppString*, int64_t, System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::ISerializationSurrogate*, int64_t, System::Reflection::FieldInfo*, ::Array<int>*)>(&ObjectHolder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::ISerializationSurrogate*>(), ::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::FieldInfo*>(), ::il2cpp_utils::ExtractIndependentType<::Array<int>*>()});
  }
};
// Writing MetadataGetter for method: ObjectHolder::IncrementDescendentFixups
// Il2CppName: IncrementDescendentFixups
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectHolder::*)(int)>(&ObjectHolder::IncrementDescendentFixups)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), "IncrementDescendentFixups", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ObjectHolder::DecrementFixupsRemaining
// Il2CppName: DecrementFixupsRemaining
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectHolder::*)(System::Runtime::Serialization::ObjectManager*)>(&ObjectHolder::DecrementFixupsRemaining)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), "DecrementFixupsRemaining", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::ObjectManager*>()});
  }
};
// Writing MetadataGetter for method: ObjectHolder::RemoveDependency
// Il2CppName: RemoveDependency
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectHolder::*)(int64_t)>(&ObjectHolder::RemoveDependency)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), "RemoveDependency", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: ObjectHolder::AddFixup
// Il2CppName: AddFixup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectHolder::*)(System::Runtime::Serialization::FixupHolder*, System::Runtime::Serialization::ObjectManager*)>(&ObjectHolder::AddFixup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), "AddFixup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::FixupHolder*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::ObjectManager*>()});
  }
};
// Writing MetadataGetter for method: ObjectHolder::UpdateDescendentDependencyChain
// Il2CppName: UpdateDescendentDependencyChain
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectHolder::*)(int, System::Runtime::Serialization::ObjectManager*)>(&ObjectHolder::UpdateDescendentDependencyChain)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), "UpdateDescendentDependencyChain", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::ObjectManager*>()});
  }
};
// Writing MetadataGetter for method: ObjectHolder::AddDependency
// Il2CppName: AddDependency
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectHolder::*)(int64_t)>(&ObjectHolder::AddDependency)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), "AddDependency", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: ObjectHolder::UpdateData
// Il2CppName: UpdateData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectHolder::*)(::Il2CppObject*, System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::ISerializationSurrogate*, int64_t, System::Reflection::FieldInfo*, ::Array<int>*, System::Runtime::Serialization::ObjectManager*)>(&ObjectHolder::UpdateData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), "UpdateData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::ISerializationSurrogate*>(), ::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::FieldInfo*>(), ::il2cpp_utils::ExtractIndependentType<::Array<int>*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::ObjectManager*>()});
  }
};
// Writing MetadataGetter for method: ObjectHolder::MarkForCompletionWhenAvailable
// Il2CppName: MarkForCompletionWhenAvailable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectHolder::*)()>(&ObjectHolder::MarkForCompletionWhenAvailable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), "MarkForCompletionWhenAvailable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ObjectHolder::SetFlags
// Il2CppName: SetFlags
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectHolder::*)()>(&ObjectHolder::SetFlags)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), "SetFlags", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ObjectHolder::get_IsIncompleteObjectReference
// Il2CppName: get_IsIncompleteObjectReference
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ObjectHolder::*)()>(&ObjectHolder::get_IsIncompleteObjectReference)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), "get_IsIncompleteObjectReference", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ObjectHolder::set_IsIncompleteObjectReference
// Il2CppName: set_IsIncompleteObjectReference
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectHolder::*)(bool)>(&ObjectHolder::set_IsIncompleteObjectReference)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), "set_IsIncompleteObjectReference", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ObjectHolder::get_RequiresDelayedFixup
// Il2CppName: get_RequiresDelayedFixup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ObjectHolder::*)()>(&ObjectHolder::get_RequiresDelayedFixup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), "get_RequiresDelayedFixup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ObjectHolder::get_RequiresValueTypeFixup
// Il2CppName: get_RequiresValueTypeFixup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ObjectHolder::*)()>(&ObjectHolder::get_RequiresValueTypeFixup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), "get_RequiresValueTypeFixup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ObjectHolder::get_ValueTypeFixupPerformed
// Il2CppName: get_ValueTypeFixupPerformed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ObjectHolder::*)()>(&ObjectHolder::get_ValueTypeFixupPerformed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), "get_ValueTypeFixupPerformed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ObjectHolder::set_ValueTypeFixupPerformed
// Il2CppName: set_ValueTypeFixupPerformed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectHolder::*)(bool)>(&ObjectHolder::set_ValueTypeFixupPerformed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), "set_ValueTypeFixupPerformed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ObjectHolder::get_HasISerializable
// Il2CppName: get_HasISerializable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ObjectHolder::*)()>(&ObjectHolder::get_HasISerializable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), "get_HasISerializable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ObjectHolder::get_HasSurrogate
// Il2CppName: get_HasSurrogate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ObjectHolder::*)()>(&ObjectHolder::get_HasSurrogate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), "get_HasSurrogate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ObjectHolder::get_CanSurrogatedObjectValueChange
// Il2CppName: get_CanSurrogatedObjectValueChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ObjectHolder::*)()>(&ObjectHolder::get_CanSurrogatedObjectValueChange)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), "get_CanSurrogatedObjectValueChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ObjectHolder::get_CanObjectValueChange
// Il2CppName: get_CanObjectValueChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ObjectHolder::*)()>(&ObjectHolder::get_CanObjectValueChange)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), "get_CanObjectValueChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ObjectHolder::get_DirectlyDependentObjects
// Il2CppName: get_DirectlyDependentObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ObjectHolder::*)()>(&ObjectHolder::get_DirectlyDependentObjects)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), "get_DirectlyDependentObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ObjectHolder::get_TotalDependentObjects
// Il2CppName: get_TotalDependentObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ObjectHolder::*)()>(&ObjectHolder::get_TotalDependentObjects)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), "get_TotalDependentObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ObjectHolder::get_Reachable
// Il2CppName: get_Reachable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ObjectHolder::*)()>(&ObjectHolder::get_Reachable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), "get_Reachable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ObjectHolder::set_Reachable
// Il2CppName: set_Reachable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectHolder::*)(bool)>(&ObjectHolder::set_Reachable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), "set_Reachable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ObjectHolder::get_TypeLoadExceptionReachable
// Il2CppName: get_TypeLoadExceptionReachable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ObjectHolder::*)()>(&ObjectHolder::get_TypeLoadExceptionReachable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), "get_TypeLoadExceptionReachable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ObjectHolder::get_TypeLoadException
// Il2CppName: get_TypeLoadException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Serialization::TypeLoadExceptionHolder* (ObjectHolder::*)()>(&ObjectHolder::get_TypeLoadException)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), "get_TypeLoadException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ObjectHolder::set_TypeLoadException
// Il2CppName: set_TypeLoadException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectHolder::*)(System::Runtime::Serialization::TypeLoadExceptionHolder*)>(&ObjectHolder::set_TypeLoadException)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), "set_TypeLoadException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::TypeLoadExceptionHolder*>()});
  }
};
// Writing MetadataGetter for method: ObjectHolder::get_ObjectValue
// Il2CppName: get_ObjectValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ObjectHolder::*)()>(&ObjectHolder::get_ObjectValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), "get_ObjectValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ObjectHolder::SetObjectValue
// Il2CppName: SetObjectValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectHolder::*)(::Il2CppObject*, System::Runtime::Serialization::ObjectManager*)>(&ObjectHolder::SetObjectValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), "SetObjectValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::ObjectManager*>()});
  }
};
// Writing MetadataGetter for method: ObjectHolder::get_SerializationInfo
// Il2CppName: get_SerializationInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Serialization::SerializationInfo* (ObjectHolder::*)()>(&ObjectHolder::get_SerializationInfo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), "get_SerializationInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ObjectHolder::set_SerializationInfo
// Il2CppName: set_SerializationInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectHolder::*)(System::Runtime::Serialization::SerializationInfo*)>(&ObjectHolder::set_SerializationInfo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), "set_SerializationInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>()});
  }
};
// Writing MetadataGetter for method: ObjectHolder::get_Surrogate
// Il2CppName: get_Surrogate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Serialization::ISerializationSurrogate* (ObjectHolder::*)()>(&ObjectHolder::get_Surrogate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), "get_Surrogate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ObjectHolder::get_DependentObjects
// Il2CppName: get_DependentObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Serialization::LongList* (ObjectHolder::*)()>(&ObjectHolder::get_DependentObjects)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), "get_DependentObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ObjectHolder::set_DependentObjects
// Il2CppName: set_DependentObjects
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectHolder::*)(System::Runtime::Serialization::LongList*)>(&ObjectHolder::set_DependentObjects)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), "set_DependentObjects", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::LongList*>()});
  }
};
// Writing MetadataGetter for method: ObjectHolder::get_RequiresSerInfoFixup
// Il2CppName: get_RequiresSerInfoFixup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ObjectHolder::*)()>(&ObjectHolder::get_RequiresSerInfoFixup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), "get_RequiresSerInfoFixup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ObjectHolder::set_RequiresSerInfoFixup
// Il2CppName: set_RequiresSerInfoFixup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectHolder::*)(bool)>(&ObjectHolder::set_RequiresSerInfoFixup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), "set_RequiresSerInfoFixup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ObjectHolder::get_ValueFixup
// Il2CppName: get_ValueFixup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Serialization::ValueTypeFixupInfo* (ObjectHolder::*)()>(&ObjectHolder::get_ValueFixup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), "get_ValueFixup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ObjectHolder::get_CompletelyFixed
// Il2CppName: get_CompletelyFixed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ObjectHolder::*)()>(&ObjectHolder::get_CompletelyFixed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), "get_CompletelyFixed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ObjectHolder::get_ContainerID
// Il2CppName: get_ContainerID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (ObjectHolder::*)()>(&ObjectHolder::get_ContainerID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolder*), "get_ContainerID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.FixupHolder
#include "System/Runtime/Serialization/FixupHolder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: FixupHolder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FixupHolder::*)(int64_t, ::Il2CppObject*, int)>(&FixupHolder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FixupHolder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FixupHolder::*)(int64_t, ::Il2CppObject*, int)>(&FixupHolder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FixupHolder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.FixupHolderList
#include "System/Runtime/Serialization/FixupHolderList.hpp"
// Including type: System.Runtime.Serialization.FixupHolder
#include "System/Runtime/Serialization/FixupHolder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.FixupHolderList.Add
void System::Runtime::Serialization::FixupHolderList::Add(System::Runtime::Serialization::FixupHolder* fixup) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FixupHolderList::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fixup)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, fixup);
}
// Autogenerated method: System.Runtime.Serialization.FixupHolderList.EnlargeArray
void System::Runtime::Serialization::FixupHolderList::EnlargeArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::FixupHolderList::EnlargeArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnlargeArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: FixupHolderList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FixupHolderList::*)(int)>(&FixupHolderList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FixupHolderList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FixupHolderList::*)(int)>(&FixupHolderList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FixupHolderList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: FixupHolderList::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FixupHolderList::*)(System::Runtime::Serialization::FixupHolder*)>(&FixupHolderList::Add)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FixupHolderList*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::FixupHolder*>()});
  }
};
// Writing MetadataGetter for method: FixupHolderList::EnlargeArray
// Il2CppName: EnlargeArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FixupHolderList::*)()>(&FixupHolderList::EnlargeArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FixupHolderList*), "EnlargeArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: FixupHolderList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FixupHolderList::*)()>(&FixupHolderList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FixupHolderList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (FixupHolderList::*)()>(&FixupHolderList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(FixupHolderList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.LongList
#include "System/Runtime/Serialization/LongList.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.LongList.Add
void System::Runtime::Serialization::LongList::Add(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::LongList::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Serialization.LongList.get_Count
int System::Runtime::Serialization::LongList::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::LongList::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.LongList.StartEnumeration
void System::Runtime::Serialization::LongList::StartEnumeration() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::LongList::StartEnumeration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartEnumeration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.LongList.MoveNext
bool System::Runtime::Serialization::LongList::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::LongList::MoveNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.LongList.get_Current
int64_t System::Runtime::Serialization::LongList::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::LongList::get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.LongList.RemoveElement
bool System::Runtime::Serialization::LongList::RemoveElement(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::LongList::RemoveElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Serialization.LongList.EnlargeArray
void System::Runtime::Serialization::LongList::EnlargeArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::LongList::EnlargeArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnlargeArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: LongList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LongList::*)(int)>(&LongList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LongList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LongList::*)(int)>(&LongList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LongList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: LongList::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LongList::*)(int64_t)>(&LongList::Add)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LongList*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: LongList::get_Count
// Il2CppName: get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (LongList::*)()>(&LongList::get_Count)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LongList*), "get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LongList::StartEnumeration
// Il2CppName: StartEnumeration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LongList::*)()>(&LongList::StartEnumeration)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LongList*), "StartEnumeration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LongList::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LongList::*)()>(&LongList::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LongList*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LongList::get_Current
// Il2CppName: get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (LongList::*)()>(&LongList::get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LongList*), "get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LongList::RemoveElement
// Il2CppName: RemoveElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LongList::*)(int64_t)>(&LongList::RemoveElement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LongList*), "RemoveElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: LongList::EnlargeArray
// Il2CppName: EnlargeArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LongList::*)()>(&LongList::EnlargeArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LongList*), "EnlargeArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LongList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LongList::*)()>(&LongList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LongList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LongList::*)()>(&LongList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LongList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.ObjectHolderList
#include "System/Runtime/Serialization/ObjectHolderList.hpp"
// Including type: System.Runtime.Serialization.ObjectHolder
#include "System/Runtime/Serialization/ObjectHolder.hpp"
// Including type: System.Runtime.Serialization.ObjectHolderListEnumerator
#include "System/Runtime/Serialization/ObjectHolderListEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.ObjectHolderList.Add
void System::Runtime::Serialization::ObjectHolderList::Add(System::Runtime::Serialization::ObjectHolder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolderList::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolderList.GetFixupEnumerator
System::Runtime::Serialization::ObjectHolderListEnumerator* System::Runtime::Serialization::ObjectHolderList::GetFixupEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolderList::GetFixupEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFixupEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Serialization::ObjectHolderListEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolderList.EnlargeArray
void System::Runtime::Serialization::ObjectHolderList::EnlargeArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolderList::EnlargeArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnlargeArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolderList.get_Version
int System::Runtime::Serialization::ObjectHolderList::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolderList::get_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolderList.get_Count
int System::Runtime::Serialization::ObjectHolderList::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolderList::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: ObjectHolderList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectHolderList::*)(int)>(&ObjectHolderList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolderList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectHolderList::*)(int)>(&ObjectHolderList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolderList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ObjectHolderList::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectHolderList::*)(System::Runtime::Serialization::ObjectHolder*)>(&ObjectHolderList::Add)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolderList*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::ObjectHolder*>()});
  }
};
// Writing MetadataGetter for method: ObjectHolderList::GetFixupEnumerator
// Il2CppName: GetFixupEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Serialization::ObjectHolderListEnumerator* (ObjectHolderList::*)()>(&ObjectHolderList::GetFixupEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolderList*), "GetFixupEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ObjectHolderList::EnlargeArray
// Il2CppName: EnlargeArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectHolderList::*)()>(&ObjectHolderList::EnlargeArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolderList*), "EnlargeArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ObjectHolderList::get_Version
// Il2CppName: get_Version
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ObjectHolderList::*)()>(&ObjectHolderList::get_Version)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolderList*), "get_Version", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ObjectHolderList::get_Count
// Il2CppName: get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ObjectHolderList::*)()>(&ObjectHolderList::get_Count)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolderList*), "get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ObjectHolderList::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectHolderList::*)()>(&ObjectHolderList::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolderList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectHolderList::*)()>(&ObjectHolderList::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolderList*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.ObjectHolderListEnumerator
#include "System/Runtime/Serialization/ObjectHolderListEnumerator.hpp"
// Including type: System.Runtime.Serialization.ObjectHolderList
#include "System/Runtime/Serialization/ObjectHolderList.hpp"
// Including type: System.Runtime.Serialization.ObjectHolder
#include "System/Runtime/Serialization/ObjectHolder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.ObjectHolderListEnumerator.MoveNext
bool System::Runtime::Serialization::ObjectHolderListEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolderListEnumerator::MoveNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.ObjectHolderListEnumerator.get_Current
System::Runtime::Serialization::ObjectHolder* System::Runtime::Serialization::ObjectHolderListEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ObjectHolderListEnumerator::get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Serialization::ObjectHolder*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: ObjectHolderListEnumerator::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectHolderListEnumerator::*)(System::Runtime::Serialization::ObjectHolderList*, bool)>(&ObjectHolderListEnumerator::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolderListEnumerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::ObjectHolderList*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectHolderListEnumerator::*)(System::Runtime::Serialization::ObjectHolderList*, bool)>(&ObjectHolderListEnumerator::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolderListEnumerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::ObjectHolderList*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ObjectHolderListEnumerator::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ObjectHolderListEnumerator::*)()>(&ObjectHolderListEnumerator::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolderListEnumerator*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ObjectHolderListEnumerator::get_Current
// Il2CppName: get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Serialization::ObjectHolder* (ObjectHolderListEnumerator::*)()>(&ObjectHolderListEnumerator::get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectHolderListEnumerator*), "get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.TypeLoadExceptionHolder
#include "System/Runtime/Serialization/TypeLoadExceptionHolder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.TypeLoadExceptionHolder.get_TypeName
::Il2CppString* System::Runtime::Serialization::TypeLoadExceptionHolder::get_TypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::TypeLoadExceptionHolder::get_TypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: TypeLoadExceptionHolder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TypeLoadExceptionHolder::*)(::Il2CppString*)>(&TypeLoadExceptionHolder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TypeLoadExceptionHolder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TypeLoadExceptionHolder::*)(::Il2CppString*)>(&TypeLoadExceptionHolder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TypeLoadExceptionHolder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: TypeLoadExceptionHolder::get_TypeName
// Il2CppName: get_TypeName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (TypeLoadExceptionHolder::*)()>(&TypeLoadExceptionHolder::get_TypeName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TypeLoadExceptionHolder*), "get_TypeName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.SafeSerializationEventArgs
#include "System/Runtime/Serialization/SafeSerializationEventArgs.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.SafeSerializationEventArgs.get_SerializedStates
System::Collections::Generic::IList_1<::Il2CppObject*>* System::Runtime::Serialization::SafeSerializationEventArgs::get_SerializedStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SafeSerializationEventArgs::get_SerializedStates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SerializedStates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IList_1<::Il2CppObject*>*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: SafeSerializationEventArgs::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SafeSerializationEventArgs::*)(System::Runtime::Serialization::StreamingContext)>(&SafeSerializationEventArgs::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SafeSerializationEventArgs*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SafeSerializationEventArgs::*)(System::Runtime::Serialization::StreamingContext)>(&SafeSerializationEventArgs::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SafeSerializationEventArgs*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: SafeSerializationEventArgs::get_SerializedStates
// Il2CppName: get_SerializedStates
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IList_1<::Il2CppObject*>* (SafeSerializationEventArgs::*)()>(&SafeSerializationEventArgs::get_SerializedStates)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SafeSerializationEventArgs*), "get_SerializedStates", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.ISafeSerializationData
#include "System/Runtime/Serialization/ISafeSerializationData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.ISafeSerializationData.CompleteDeserialization
void System::Runtime::Serialization::ISafeSerializationData::CompleteDeserialization(::Il2CppObject* deserialized) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ISafeSerializationData::CompleteDeserialization");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompleteDeserialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deserialized)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, deserialized);
}
// Writing MetadataGetter for method: ISafeSerializationData::CompleteDeserialization
// Il2CppName: CompleteDeserialization
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ISafeSerializationData::*)(::Il2CppObject*)>(&ISafeSerializationData::CompleteDeserialization)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ISafeSerializationData*), "CompleteDeserialization", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.SafeSerializationManager
#include "System/Runtime/Serialization/SafeSerializationManager.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.RuntimeType
#include "System/RuntimeType.hpp"
// Including type: System.EventHandler`1
#include "System/EventHandler_1.hpp"
// Including type: System.Runtime.Serialization.SafeSerializationEventArgs
#include "System/Runtime/Serialization/SafeSerializationEventArgs.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String RealTypeSerializationName
::Il2CppString* System::Runtime::Serialization::SafeSerializationManager::_get_RealTypeSerializationName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SafeSerializationManager::_get_RealTypeSerializationName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Runtime.Serialization", "SafeSerializationManager", "RealTypeSerializationName"));
}
// Autogenerated static field setter
// Set static field: static private System.String RealTypeSerializationName
void System::Runtime::Serialization::SafeSerializationManager::_set_RealTypeSerializationName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SafeSerializationManager::_set_RealTypeSerializationName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization", "SafeSerializationManager", "RealTypeSerializationName", value));
}
// Autogenerated method: System.Runtime.Serialization.SafeSerializationManager.get_IsActive
bool System::Runtime::Serialization::SafeSerializationManager::get_IsActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SafeSerializationManager::get_IsActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.SafeSerializationManager.CompleteSerialization
void System::Runtime::Serialization::SafeSerializationManager::CompleteSerialization(::Il2CppObject* serializedObject, System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SafeSerializationManager::CompleteSerialization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompleteSerialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializedObject), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serializedObject, info, context);
}
// Autogenerated method: System.Runtime.Serialization.SafeSerializationManager.CompleteDeserialization
void System::Runtime::Serialization::SafeSerializationManager::CompleteDeserialization(::Il2CppObject* deserializedObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SafeSerializationManager::CompleteDeserialization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompleteDeserialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deserializedObject)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, deserializedObject);
}
// Autogenerated method: System.Runtime.Serialization.SafeSerializationManager.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Runtime::Serialization::SafeSerializationManager::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SafeSerializationManager::System.Runtime.Serialization.ISerializable.GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Runtime.Serialization.SafeSerializationManager.System.Runtime.Serialization.IObjectReference.GetRealObject
::Il2CppObject* System::Runtime::Serialization::SafeSerializationManager::System_Runtime_Serialization_IObjectReference_GetRealObject(System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SafeSerializationManager::System.Runtime.Serialization.IObjectReference.GetRealObject");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.IObjectReference.GetRealObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, context);
}
// Autogenerated method: System.Runtime.Serialization.SafeSerializationManager.OnDeserialized
void System::Runtime::Serialization::SafeSerializationManager::OnDeserialized(System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SafeSerializationManager::OnDeserialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context);
}
// Writing MetadataGetter for method: SafeSerializationManager::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SafeSerializationManager::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&SafeSerializationManager::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SafeSerializationManager*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SafeSerializationManager::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&SafeSerializationManager::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SafeSerializationManager*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: SafeSerializationManager::get_IsActive
// Il2CppName: get_IsActive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (SafeSerializationManager::*)()>(&SafeSerializationManager::get_IsActive)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SafeSerializationManager*), "get_IsActive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SafeSerializationManager::CompleteSerialization
// Il2CppName: CompleteSerialization
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SafeSerializationManager::*)(::Il2CppObject*, System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&SafeSerializationManager::CompleteSerialization)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SafeSerializationManager*), "CompleteSerialization", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: SafeSerializationManager::CompleteDeserialization
// Il2CppName: CompleteDeserialization
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SafeSerializationManager::*)(::Il2CppObject*)>(&SafeSerializationManager::CompleteDeserialization)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SafeSerializationManager*), "CompleteDeserialization", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: SafeSerializationManager::System_Runtime_Serialization_ISerializable_GetObjectData
// Il2CppName: System.Runtime.Serialization.ISerializable.GetObjectData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SafeSerializationManager::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&SafeSerializationManager::System_Runtime_Serialization_ISerializable_GetObjectData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SafeSerializationManager*), "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: SafeSerializationManager::System_Runtime_Serialization_IObjectReference_GetRealObject
// Il2CppName: System.Runtime.Serialization.IObjectReference.GetRealObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (SafeSerializationManager::*)(System::Runtime::Serialization::StreamingContext)>(&SafeSerializationManager::System_Runtime_Serialization_IObjectReference_GetRealObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SafeSerializationManager*), "System.Runtime.Serialization.IObjectReference.GetRealObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: SafeSerializationManager::OnDeserialized
// Il2CppName: OnDeserialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SafeSerializationManager::*)(System::Runtime::Serialization::StreamingContext)>(&SafeSerializationManager::OnDeserialized)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SafeSerializationManager*), "OnDeserialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: SafeSerializationManager::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SafeSerializationManager::*)()>(&SafeSerializationManager::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SafeSerializationManager*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SafeSerializationManager::*)()>(&SafeSerializationManager::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SafeSerializationManager*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.OptionalFieldAttribute
#include "System/Runtime/Serialization/OptionalFieldAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.OptionalFieldAttribute.set_VersionAdded
void System::Runtime::Serialization::OptionalFieldAttribute::set_VersionAdded(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::OptionalFieldAttribute::set_VersionAdded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_VersionAdded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: OptionalFieldAttribute::set_VersionAdded
// Il2CppName: set_VersionAdded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OptionalFieldAttribute::*)(int)>(&OptionalFieldAttribute::set_VersionAdded)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OptionalFieldAttribute*), "set_VersionAdded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: OptionalFieldAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OptionalFieldAttribute::*)()>(&OptionalFieldAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OptionalFieldAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OptionalFieldAttribute::*)()>(&OptionalFieldAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OptionalFieldAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.OnSerializingAttribute
#include "System/Runtime/Serialization/OnSerializingAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: OnSerializingAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OnSerializingAttribute::*)()>(&OnSerializingAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OnSerializingAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OnSerializingAttribute::*)()>(&OnSerializingAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OnSerializingAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.OnDeserializingAttribute
#include "System/Runtime/Serialization/OnDeserializingAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: OnDeserializingAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OnDeserializingAttribute::*)()>(&OnDeserializingAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OnDeserializingAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OnDeserializingAttribute::*)()>(&OnDeserializingAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OnDeserializingAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.OnDeserializedAttribute
#include "System/Runtime/Serialization/OnDeserializedAttribute.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: OnDeserializedAttribute::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OnDeserializedAttribute::*)()>(&OnDeserializedAttribute::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OnDeserializedAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OnDeserializedAttribute::*)()>(&OnDeserializedAttribute::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OnDeserializedAttribute*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.SerializationBinder
#include "System/Runtime/Serialization/SerializationBinder.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.SerializationBinder.BindToName
void System::Runtime::Serialization::SerializationBinder::BindToName(System::Type* serializedType, ::Il2CppString*& assemblyName, ::Il2CppString*& typeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationBinder::BindToName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BindToName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serializedType), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serializedType, assemblyName, typeName);
}
// Autogenerated method: System.Runtime.Serialization.SerializationBinder.BindToType
System::Type* System::Runtime::Serialization::SerializationBinder::BindToType(::Il2CppString* assemblyName, ::Il2CppString* typeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationBinder::BindToType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BindToType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assemblyName), ::il2cpp_utils::ExtractType(typeName)})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, assemblyName, typeName);
}
// Writing MetadataGetter for method: SerializationBinder::BindToName
// Il2CppName: BindToName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationBinder::*)(System::Type*, ::Il2CppString*&, ::Il2CppString*&)>(&SerializationBinder::BindToName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationBinder*), "BindToName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>()});
  }
};
// Writing MetadataGetter for method: SerializationBinder::BindToType
// Il2CppName: BindToType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Type* (SerializationBinder::*)(::Il2CppString*, ::Il2CppString*)>(&SerializationBinder::BindToType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationBinder*), "BindToType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: SerializationBinder::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationBinder::*)()>(&SerializationBinder::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationBinder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationBinder::*)()>(&SerializationBinder::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationBinder*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.SerializationEvents
#include "System/Runtime/Serialization/SerializationEvents.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
// Including type: System.Runtime.Serialization.SerializationEventHandler
#include "System/Runtime/Serialization/SerializationEventHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.SerializationEvents.GetMethodsWithAttribute
System::Collections::Generic::List_1<System::Reflection::MethodInfo*>* System::Runtime::Serialization::SerializationEvents::GetMethodsWithAttribute(System::Type* attribute, System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationEvents::GetMethodsWithAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMethodsWithAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attribute), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<System::Reflection::MethodInfo*>*, false>(this, ___internal__method, attribute, t);
}
// Autogenerated method: System.Runtime.Serialization.SerializationEvents.get_HasOnSerializingEvents
bool System::Runtime::Serialization::SerializationEvents::get_HasOnSerializingEvents() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationEvents::get_HasOnSerializingEvents");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasOnSerializingEvents", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.SerializationEvents.InvokeOnSerializing
void System::Runtime::Serialization::SerializationEvents::InvokeOnSerializing(::Il2CppObject* obj, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationEvents::InvokeOnSerializing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeOnSerializing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj, context);
}
// Autogenerated method: System.Runtime.Serialization.SerializationEvents.InvokeOnDeserializing
void System::Runtime::Serialization::SerializationEvents::InvokeOnDeserializing(::Il2CppObject* obj, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationEvents::InvokeOnDeserializing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeOnDeserializing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj, context);
}
// Autogenerated method: System.Runtime.Serialization.SerializationEvents.InvokeOnDeserialized
void System::Runtime::Serialization::SerializationEvents::InvokeOnDeserialized(::Il2CppObject* obj, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationEvents::InvokeOnDeserialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvokeOnDeserialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj, context);
}
// Autogenerated method: System.Runtime.Serialization.SerializationEvents.AddOnSerialized
System::Runtime::Serialization::SerializationEventHandler* System::Runtime::Serialization::SerializationEvents::AddOnSerialized(::Il2CppObject* obj, System::Runtime::Serialization::SerializationEventHandler* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationEvents::AddOnSerialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddOnSerialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(handler)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Serialization::SerializationEventHandler*, false>(this, ___internal__method, obj, handler);
}
// Autogenerated method: System.Runtime.Serialization.SerializationEvents.AddOnDeserialized
System::Runtime::Serialization::SerializationEventHandler* System::Runtime::Serialization::SerializationEvents::AddOnDeserialized(::Il2CppObject* obj, System::Runtime::Serialization::SerializationEventHandler* handler) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationEvents::AddOnDeserialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddOnDeserialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(handler)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Serialization::SerializationEventHandler*, false>(this, ___internal__method, obj, handler);
}
// Writing MetadataGetter for method: SerializationEvents::GetMethodsWithAttribute
// Il2CppName: GetMethodsWithAttribute
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<System::Reflection::MethodInfo*>* (SerializationEvents::*)(System::Type*, System::Type*)>(&SerializationEvents::GetMethodsWithAttribute)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationEvents*), "GetMethodsWithAttribute", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>(), ::il2cpp_utils::ExtractIndependentType<System::Type*>()});
  }
};
// Writing MetadataGetter for method: SerializationEvents::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationEvents::*)(System::Type*)>(&SerializationEvents::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationEvents*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationEvents::*)(System::Type*)>(&SerializationEvents::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationEvents*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>()});
  }
};
// Writing MetadataGetter for method: SerializationEvents::get_HasOnSerializingEvents
// Il2CppName: get_HasOnSerializingEvents
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (SerializationEvents::*)()>(&SerializationEvents::get_HasOnSerializingEvents)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationEvents*), "get_HasOnSerializingEvents", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SerializationEvents::InvokeOnSerializing
// Il2CppName: InvokeOnSerializing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationEvents::*)(::Il2CppObject*, System::Runtime::Serialization::StreamingContext)>(&SerializationEvents::InvokeOnSerializing)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationEvents*), "InvokeOnSerializing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: SerializationEvents::InvokeOnDeserializing
// Il2CppName: InvokeOnDeserializing
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationEvents::*)(::Il2CppObject*, System::Runtime::Serialization::StreamingContext)>(&SerializationEvents::InvokeOnDeserializing)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationEvents*), "InvokeOnDeserializing", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: SerializationEvents::InvokeOnDeserialized
// Il2CppName: InvokeOnDeserialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationEvents::*)(::Il2CppObject*, System::Runtime::Serialization::StreamingContext)>(&SerializationEvents::InvokeOnDeserialized)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationEvents*), "InvokeOnDeserialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: SerializationEvents::AddOnSerialized
// Il2CppName: AddOnSerialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Serialization::SerializationEventHandler* (SerializationEvents::*)(::Il2CppObject*, System::Runtime::Serialization::SerializationEventHandler*)>(&SerializationEvents::AddOnSerialized)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationEvents*), "AddOnSerialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationEventHandler*>()});
  }
};
// Writing MetadataGetter for method: SerializationEvents::AddOnDeserialized
// Il2CppName: AddOnDeserialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Serialization::SerializationEventHandler* (SerializationEvents::*)(::Il2CppObject*, System::Runtime::Serialization::SerializationEventHandler*)>(&SerializationEvents::AddOnDeserialized)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationEvents*), "AddOnDeserialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationEventHandler*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.SerializationEventsCache
#include "System/Runtime/Serialization/SerializationEventsCache.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Runtime.Serialization.SerializationEvents
#include "System/Runtime/Serialization/SerializationEvents.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Hashtable cache
System::Collections::Hashtable* System::Runtime::Serialization::SerializationEventsCache::_get_cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationEventsCache::_get_cache");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Hashtable*>("System.Runtime.Serialization", "SerializationEventsCache", "cache"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Hashtable cache
void System::Runtime::Serialization::SerializationEventsCache::_set_cache(System::Collections::Hashtable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationEventsCache::_set_cache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization", "SerializationEventsCache", "cache", value));
}
// Autogenerated method: System.Runtime.Serialization.SerializationEventsCache.GetSerializationEventsForType
System::Runtime::Serialization::SerializationEvents* System::Runtime::Serialization::SerializationEventsCache::GetSerializationEventsForType(System::Type* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationEventsCache::GetSerializationEventsForType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization", "SerializationEventsCache", "GetSerializationEventsForType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Serialization::SerializationEvents*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t);
}
// Autogenerated method: System.Runtime.Serialization.SerializationEventsCache..cctor
void System::Runtime::Serialization::SerializationEventsCache::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationEventsCache::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization", "SerializationEventsCache", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: SerializationEventsCache::GetSerializationEventsForType
// Il2CppName: GetSerializationEventsForType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Serialization::SerializationEvents* (*)(System::Type*)>(&SerializationEventsCache::GetSerializationEventsForType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationEventsCache*), "GetSerializationEventsForType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>()});
  }
};
// Writing MetadataGetter for method: SerializationEventsCache::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&SerializationEventsCache::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationEventsCache*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.SerializationException
#include "System/Runtime/Serialization/SerializationException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String _nullMessage
::Il2CppString* System::Runtime::Serialization::SerializationException::_get__nullMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationException::_get__nullMessage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Runtime.Serialization", "SerializationException", "_nullMessage"));
}
// Autogenerated static field setter
// Set static field: static private System.String _nullMessage
void System::Runtime::Serialization::SerializationException::_set__nullMessage(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationException::_set__nullMessage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization", "SerializationException", "_nullMessage", value));
}
// Autogenerated method: System.Runtime.Serialization.SerializationException..cctor
void System::Runtime::Serialization::SerializationException::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationException::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization", "SerializationException", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: SerializationException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationException::*)()>(&SerializationException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationException::*)()>(&SerializationException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SerializationException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationException::*)(::Il2CppString*)>(&SerializationException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationException::*)(::Il2CppString*)>(&SerializationException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: SerializationException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationException::*)(::Il2CppString*, System::Exception*)>(&SerializationException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Exception*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationException::*)(::Il2CppString*, System::Exception*)>(&SerializationException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Exception*>()});
  }
};
// Writing MetadataGetter for method: SerializationException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationException::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&SerializationException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationException::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&SerializationException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: SerializationException::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&SerializationException::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationException*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.SerializationFieldInfo
#include "System/Runtime/Serialization/SerializationFieldInfo.hpp"
// Including type: System.Reflection.RuntimeFieldInfo
#include "System/Reflection/RuntimeFieldInfo.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: System.Reflection.Binder
#include "System/Reflection/Binder.hpp"
// Including type: System.Globalization.CultureInfo
#include "System/Globalization/CultureInfo.hpp"
// Including type: System.Reflection.Module
#include "System/Reflection/Module.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.RuntimeFieldHandle
#include "System/RuntimeFieldHandle.hpp"
// Including type: System.Reflection.FieldAttributes
#include "System/Reflection/FieldAttributes.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.SerializationFieldInfo.InternalGetValue
::Il2CppObject* System::Runtime::Serialization::SerializationFieldInfo::InternalGetValue(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationFieldInfo::InternalGetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalGetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Runtime.Serialization.SerializationFieldInfo.InternalSetValue
void System::Runtime::Serialization::SerializationFieldInfo::InternalSetValue(::Il2CppObject* obj, ::Il2CppObject* value, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder* binder, System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationFieldInfo::InternalSetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalSetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(invokeAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(culture)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj, value, invokeAttr, binder, culture);
}
// Autogenerated method: System.Runtime.Serialization.SerializationFieldInfo.get_FieldInfo
System::Reflection::RuntimeFieldInfo* System::Runtime::Serialization::SerializationFieldInfo::get_FieldInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationFieldInfo::get_FieldInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FieldInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::RuntimeFieldInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.SerializationFieldInfo.get_Module
System::Reflection::Module* System::Runtime::Serialization::SerializationFieldInfo::get_Module() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationFieldInfo::get_Module");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Module", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::Module*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.SerializationFieldInfo.get_MetadataToken
int System::Runtime::Serialization::SerializationFieldInfo::get_MetadataToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationFieldInfo::get_MetadataToken");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MetadataToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.SerializationFieldInfo.get_Name
::Il2CppString* System::Runtime::Serialization::SerializationFieldInfo::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationFieldInfo::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.SerializationFieldInfo.get_DeclaringType
System::Type* System::Runtime::Serialization::SerializationFieldInfo::get_DeclaringType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationFieldInfo::get_DeclaringType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DeclaringType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.SerializationFieldInfo.get_ReflectedType
System::Type* System::Runtime::Serialization::SerializationFieldInfo::get_ReflectedType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationFieldInfo::get_ReflectedType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReflectedType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.SerializationFieldInfo.GetCustomAttributes
::Array<::Il2CppObject*>* System::Runtime::Serialization::SerializationFieldInfo::GetCustomAttributes(bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationFieldInfo::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppObject*>*, false>(this, ___internal__method, inherit);
}
// Autogenerated method: System.Runtime.Serialization.SerializationFieldInfo.GetCustomAttributes
::Array<::Il2CppObject*>* System::Runtime::Serialization::SerializationFieldInfo::GetCustomAttributes(System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationFieldInfo::GetCustomAttributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCustomAttributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppObject*>*, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Runtime.Serialization.SerializationFieldInfo.IsDefined
bool System::Runtime::Serialization::SerializationFieldInfo::IsDefined(System::Type* attributeType, bool inherit) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationFieldInfo::IsDefined");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsDefined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attributeType), ::il2cpp_utils::ExtractType(inherit)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, attributeType, inherit);
}
// Autogenerated method: System.Runtime.Serialization.SerializationFieldInfo.get_FieldType
System::Type* System::Runtime::Serialization::SerializationFieldInfo::get_FieldType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationFieldInfo::get_FieldType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FieldType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.SerializationFieldInfo.GetValue
::Il2CppObject* System::Runtime::Serialization::SerializationFieldInfo::GetValue(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationFieldInfo::GetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Runtime.Serialization.SerializationFieldInfo.SetValue
void System::Runtime::Serialization::SerializationFieldInfo::SetValue(::Il2CppObject* obj, ::Il2CppObject* value, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder* binder, System::Globalization::CultureInfo* culture) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationFieldInfo::SetValue");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(invokeAttr), ::il2cpp_utils::ExtractType(binder), ::il2cpp_utils::ExtractType(culture)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj, value, invokeAttr, binder, culture);
}
// Autogenerated method: System.Runtime.Serialization.SerializationFieldInfo.get_FieldHandle
System::RuntimeFieldHandle System::Runtime::Serialization::SerializationFieldInfo::get_FieldHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationFieldInfo::get_FieldHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FieldHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::RuntimeFieldHandle, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.SerializationFieldInfo.get_Attributes
System::Reflection::FieldAttributes System::Runtime::Serialization::SerializationFieldInfo::get_Attributes() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationFieldInfo::get_Attributes");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Attributes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::FieldAttributes, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: SerializationFieldInfo::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationFieldInfo::*)(System::Reflection::RuntimeFieldInfo*, ::Il2CppString*)>(&SerializationFieldInfo::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationFieldInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::RuntimeFieldInfo*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationFieldInfo::*)(System::Reflection::RuntimeFieldInfo*, ::Il2CppString*)>(&SerializationFieldInfo::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationFieldInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Reflection::RuntimeFieldInfo*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: SerializationFieldInfo::InternalGetValue
// Il2CppName: InternalGetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (SerializationFieldInfo::*)(::Il2CppObject*)>(&SerializationFieldInfo::InternalGetValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationFieldInfo*), "InternalGetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: SerializationFieldInfo::InternalSetValue
// Il2CppName: InternalSetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationFieldInfo::*)(::Il2CppObject*, ::Il2CppObject*, System::Reflection::BindingFlags, System::Reflection::Binder*, System::Globalization::CultureInfo*)>(&SerializationFieldInfo::InternalSetValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationFieldInfo*), "InternalSetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::BindingFlags>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::Binder*>(), ::il2cpp_utils::ExtractIndependentType<System::Globalization::CultureInfo*>()});
  }
};
// Writing MetadataGetter for method: SerializationFieldInfo::get_FieldInfo
// Il2CppName: get_FieldInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::RuntimeFieldInfo* (SerializationFieldInfo::*)()>(&SerializationFieldInfo::get_FieldInfo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationFieldInfo*), "get_FieldInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SerializationFieldInfo::get_Module
// Il2CppName: get_Module
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::Module* (SerializationFieldInfo::*)()>(&SerializationFieldInfo::get_Module)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationFieldInfo*), "get_Module", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SerializationFieldInfo::get_MetadataToken
// Il2CppName: get_MetadataToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (SerializationFieldInfo::*)()>(&SerializationFieldInfo::get_MetadataToken)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationFieldInfo*), "get_MetadataToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SerializationFieldInfo::get_Name
// Il2CppName: get_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (SerializationFieldInfo::*)()>(&SerializationFieldInfo::get_Name)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationFieldInfo*), "get_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SerializationFieldInfo::get_DeclaringType
// Il2CppName: get_DeclaringType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Type* (SerializationFieldInfo::*)()>(&SerializationFieldInfo::get_DeclaringType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationFieldInfo*), "get_DeclaringType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SerializationFieldInfo::get_ReflectedType
// Il2CppName: get_ReflectedType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Type* (SerializationFieldInfo::*)()>(&SerializationFieldInfo::get_ReflectedType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationFieldInfo*), "get_ReflectedType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SerializationFieldInfo::GetCustomAttributes
// Il2CppName: GetCustomAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppObject*>* (SerializationFieldInfo::*)(bool)>(&SerializationFieldInfo::GetCustomAttributes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationFieldInfo*), "GetCustomAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: SerializationFieldInfo::GetCustomAttributes
// Il2CppName: GetCustomAttributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppObject*>* (SerializationFieldInfo::*)(System::Type*, bool)>(&SerializationFieldInfo::GetCustomAttributes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationFieldInfo*), "GetCustomAttributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: SerializationFieldInfo::IsDefined
// Il2CppName: IsDefined
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (SerializationFieldInfo::*)(System::Type*, bool)>(&SerializationFieldInfo::IsDefined)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationFieldInfo*), "IsDefined", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: SerializationFieldInfo::get_FieldType
// Il2CppName: get_FieldType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Type* (SerializationFieldInfo::*)()>(&SerializationFieldInfo::get_FieldType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationFieldInfo*), "get_FieldType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SerializationFieldInfo::GetValue
// Il2CppName: GetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (SerializationFieldInfo::*)(::Il2CppObject*)>(&SerializationFieldInfo::GetValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationFieldInfo*), "GetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: SerializationFieldInfo::SetValue
// Il2CppName: SetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationFieldInfo::*)(::Il2CppObject*, ::Il2CppObject*, System::Reflection::BindingFlags, System::Reflection::Binder*, System::Globalization::CultureInfo*)>(&SerializationFieldInfo::SetValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationFieldInfo*), "SetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::BindingFlags>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::Binder*>(), ::il2cpp_utils::ExtractIndependentType<System::Globalization::CultureInfo*>()});
  }
};
// Writing MetadataGetter for method: SerializationFieldInfo::get_FieldHandle
// Il2CppName: get_FieldHandle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::RuntimeFieldHandle (SerializationFieldInfo::*)()>(&SerializationFieldInfo::get_FieldHandle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationFieldInfo*), "get_FieldHandle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SerializationFieldInfo::get_Attributes
// Il2CppName: get_Attributes
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::FieldAttributes (SerializationFieldInfo::*)()>(&SerializationFieldInfo::get_Attributes)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationFieldInfo*), "get_Attributes", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Runtime.Serialization.IFormatterConverter
#include "System/Runtime/Serialization/IFormatterConverter.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Runtime.Serialization.SerializationInfoEnumerator
#include "System/Runtime/Serialization/SerializationInfoEnumerator.hpp"
// Including type: System.DateTime
#include "System/DateTime.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 defaultSize
int System::Runtime::Serialization::SerializationInfo::_get_defaultSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfo::_get_defaultSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Runtime.Serialization", "SerializationInfo", "defaultSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 defaultSize
void System::Runtime::Serialization::SerializationInfo::_set_defaultSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfo::_set_defaultSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization", "SerializationInfo", "defaultSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.String s_mscorlibAssemblySimpleName
::Il2CppString* System::Runtime::Serialization::SerializationInfo::_get_s_mscorlibAssemblySimpleName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfo::_get_s_mscorlibAssemblySimpleName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Runtime.Serialization", "SerializationInfo", "s_mscorlibAssemblySimpleName"));
}
// Autogenerated static field setter
// Set static field: static private System.String s_mscorlibAssemblySimpleName
void System::Runtime::Serialization::SerializationInfo::_set_s_mscorlibAssemblySimpleName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfo::_set_s_mscorlibAssemblySimpleName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization", "SerializationInfo", "s_mscorlibAssemblySimpleName", value));
}
// Autogenerated static field getter
// Get static field: static private System.String s_mscorlibFileName
::Il2CppString* System::Runtime::Serialization::SerializationInfo::_get_s_mscorlibFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfo::_get_s_mscorlibFileName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Runtime.Serialization", "SerializationInfo", "s_mscorlibFileName"));
}
// Autogenerated static field setter
// Set static field: static private System.String s_mscorlibFileName
void System::Runtime::Serialization::SerializationInfo::_set_s_mscorlibFileName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfo::_set_s_mscorlibFileName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization", "SerializationInfo", "s_mscorlibFileName", value));
}
// Autogenerated method: System.Runtime.Serialization.SerializationInfo.get_FullTypeName
::Il2CppString* System::Runtime::Serialization::SerializationInfo::get_FullTypeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfo::get_FullTypeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FullTypeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.SerializationInfo.get_AssemblyName
::Il2CppString* System::Runtime::Serialization::SerializationInfo::get_AssemblyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfo::get_AssemblyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AssemblyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.SerializationInfo.SetType
void System::Runtime::Serialization::SerializationInfo::SetType(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfo::SetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, type);
}
// Autogenerated method: System.Runtime.Serialization.SerializationInfo.Compare
bool System::Runtime::Serialization::SerializationInfo::Compare(::Array<uint8_t>* a, ::Array<uint8_t>* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfo::Compare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization", "SerializationInfo", "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b);
}
// Autogenerated method: System.Runtime.Serialization.SerializationInfo.DemandForUnsafeAssemblyNameAssignments
void System::Runtime::Serialization::SerializationInfo::DemandForUnsafeAssemblyNameAssignments(::Il2CppString* originalAssemblyName, ::Il2CppString* newAssemblyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfo::DemandForUnsafeAssemblyNameAssignments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization", "SerializationInfo", "DemandForUnsafeAssemblyNameAssignments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(originalAssemblyName), ::il2cpp_utils::ExtractType(newAssemblyName)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, originalAssemblyName, newAssemblyName);
}
// Autogenerated method: System.Runtime.Serialization.SerializationInfo.IsAssemblyNameAssignmentSafe
bool System::Runtime::Serialization::SerializationInfo::IsAssemblyNameAssignmentSafe(::Il2CppString* originalAssemblyName, ::Il2CppString* newAssemblyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfo::IsAssemblyNameAssignmentSafe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization", "SerializationInfo", "IsAssemblyNameAssignmentSafe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(originalAssemblyName), ::il2cpp_utils::ExtractType(newAssemblyName)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, originalAssemblyName, newAssemblyName);
}
// Autogenerated method: System.Runtime.Serialization.SerializationInfo.get_MemberCount
int System::Runtime::Serialization::SerializationInfo::get_MemberCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfo::get_MemberCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MemberCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.SerializationInfo.get_ObjectType
System::Type* System::Runtime::Serialization::SerializationInfo::get_ObjectType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfo::get_ObjectType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ObjectType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.SerializationInfo.get_IsFullTypeNameSetExplicit
bool System::Runtime::Serialization::SerializationInfo::get_IsFullTypeNameSetExplicit() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfo::get_IsFullTypeNameSetExplicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsFullTypeNameSetExplicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.SerializationInfo.get_IsAssemblyNameSetExplicit
bool System::Runtime::Serialization::SerializationInfo::get_IsAssemblyNameSetExplicit() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfo::get_IsAssemblyNameSetExplicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsAssemblyNameSetExplicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.SerializationInfo.GetEnumerator
System::Runtime::Serialization::SerializationInfoEnumerator* System::Runtime::Serialization::SerializationInfo::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfo::GetEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Serialization::SerializationInfoEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.SerializationInfo.ExpandArrays
void System::Runtime::Serialization::SerializationInfo::ExpandArrays() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfo::ExpandArrays");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ExpandArrays", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.SerializationInfo.AddValue
void System::Runtime::Serialization::SerializationInfo::AddValue(::Il2CppString* name, ::Il2CppObject* value, System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfo::AddValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value, type);
}
// Autogenerated method: System.Runtime.Serialization.SerializationInfo.AddValue
void System::Runtime::Serialization::SerializationInfo::AddValue(::Il2CppString* name, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfo::AddValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: System.Runtime.Serialization.SerializationInfo.AddValue
void System::Runtime::Serialization::SerializationInfo::AddValue(::Il2CppString* name, bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfo::AddValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: System.Runtime.Serialization.SerializationInfo.AddValue
void System::Runtime::Serialization::SerializationInfo::AddValue(::Il2CppString* name, ::Il2CppChar value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfo::AddValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: System.Runtime.Serialization.SerializationInfo.AddValue
void System::Runtime::Serialization::SerializationInfo::AddValue(::Il2CppString* name, uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfo::AddValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: System.Runtime.Serialization.SerializationInfo.AddValue
void System::Runtime::Serialization::SerializationInfo::AddValue(::Il2CppString* name, int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfo::AddValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: System.Runtime.Serialization.SerializationInfo.AddValue
void System::Runtime::Serialization::SerializationInfo::AddValue(::Il2CppString* name, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfo::AddValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: System.Runtime.Serialization.SerializationInfo.AddValue
void System::Runtime::Serialization::SerializationInfo::AddValue(::Il2CppString* name, int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfo::AddValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: System.Runtime.Serialization.SerializationInfo.AddValue
void System::Runtime::Serialization::SerializationInfo::AddValue(::Il2CppString* name, uint64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfo::AddValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: System.Runtime.Serialization.SerializationInfo.AddValue
void System::Runtime::Serialization::SerializationInfo::AddValue(::Il2CppString* name, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfo::AddValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: System.Runtime.Serialization.SerializationInfo.AddValue
void System::Runtime::Serialization::SerializationInfo::AddValue(::Il2CppString* name, System::DateTime value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfo::AddValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: System.Runtime.Serialization.SerializationInfo.AddValueInternal
void System::Runtime::Serialization::SerializationInfo::AddValueInternal(::Il2CppString* name, ::Il2CppObject* value, System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfo::AddValueInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddValueInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value, type);
}
// Autogenerated method: System.Runtime.Serialization.SerializationInfo.UpdateValue
void System::Runtime::Serialization::SerializationInfo::UpdateValue(::Il2CppString* name, ::Il2CppObject* value, System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfo::UpdateValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value, type);
}
// Autogenerated method: System.Runtime.Serialization.SerializationInfo.FindElement
int System::Runtime::Serialization::SerializationInfo::FindElement(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfo::FindElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Runtime.Serialization.SerializationInfo.GetElement
::Il2CppObject* System::Runtime::Serialization::SerializationInfo::GetElement(::Il2CppString* name, System::Type*& foundType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfo::GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<System::Type*&>()})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, name, foundType);
}
// Autogenerated method: System.Runtime.Serialization.SerializationInfo.GetElementNoThrow
::Il2CppObject* System::Runtime::Serialization::SerializationInfo::GetElementNoThrow(::Il2CppString* name, System::Type*& foundType) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfo::GetElementNoThrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetElementNoThrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<System::Type*&>()})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, name, foundType);
}
// Autogenerated method: System.Runtime.Serialization.SerializationInfo.GetValue
::Il2CppObject* System::Runtime::Serialization::SerializationInfo::GetValue(::Il2CppString* name, System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfo::GetValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, name, type);
}
// Autogenerated method: System.Runtime.Serialization.SerializationInfo.GetValueNoThrow
::Il2CppObject* System::Runtime::Serialization::SerializationInfo::GetValueNoThrow(::Il2CppString* name, System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfo::GetValueNoThrow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValueNoThrow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, name, type);
}
// Autogenerated method: System.Runtime.Serialization.SerializationInfo.GetBoolean
bool System::Runtime::Serialization::SerializationInfo::GetBoolean(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfo::GetBoolean");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Runtime.Serialization.SerializationInfo.GetInt32
int System::Runtime::Serialization::SerializationInfo::GetInt32(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfo::GetInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Runtime.Serialization.SerializationInfo.GetInt64
int64_t System::Runtime::Serialization::SerializationInfo::GetInt64(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfo::GetInt64");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInt64", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Runtime.Serialization.SerializationInfo.GetSingle
float System::Runtime::Serialization::SerializationInfo::GetSingle(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfo::GetSingle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSingle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Runtime.Serialization.SerializationInfo.GetString
::Il2CppString* System::Runtime::Serialization::SerializationInfo::GetString(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfo::GetString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, name);
}
// Writing MetadataGetter for method: SerializationInfo::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationInfo::*)(System::Type*, System::Runtime::Serialization::IFormatterConverter*)>(&SerializationInfo::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::IFormatterConverter*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationInfo::*)(System::Type*, System::Runtime::Serialization::IFormatterConverter*)>(&SerializationInfo::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::IFormatterConverter*>()});
  }
};
// Writing MetadataGetter for method: SerializationInfo::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationInfo::*)(System::Type*, System::Runtime::Serialization::IFormatterConverter*, bool)>(&SerializationInfo::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::IFormatterConverter*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationInfo::*)(System::Type*, System::Runtime::Serialization::IFormatterConverter*, bool)>(&SerializationInfo::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::IFormatterConverter*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: SerializationInfo::get_FullTypeName
// Il2CppName: get_FullTypeName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (SerializationInfo::*)()>(&SerializationInfo::get_FullTypeName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfo*), "get_FullTypeName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SerializationInfo::get_AssemblyName
// Il2CppName: get_AssemblyName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (SerializationInfo::*)()>(&SerializationInfo::get_AssemblyName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfo*), "get_AssemblyName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SerializationInfo::SetType
// Il2CppName: SetType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationInfo::*)(System::Type*)>(&SerializationInfo::SetType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfo*), "SetType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>()});
  }
};
// Writing MetadataGetter for method: SerializationInfo::Compare
// Il2CppName: Compare
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Array<uint8_t>*, ::Array<uint8_t>*)>(&SerializationInfo::Compare)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfo*), "Compare", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: SerializationInfo::DemandForUnsafeAssemblyNameAssignments
// Il2CppName: DemandForUnsafeAssemblyNameAssignments
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, ::Il2CppString*)>(&SerializationInfo::DemandForUnsafeAssemblyNameAssignments)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfo*), "DemandForUnsafeAssemblyNameAssignments", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: SerializationInfo::IsAssemblyNameAssignmentSafe
// Il2CppName: IsAssemblyNameAssignmentSafe
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppString*, ::Il2CppString*)>(&SerializationInfo::IsAssemblyNameAssignmentSafe)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfo*), "IsAssemblyNameAssignmentSafe", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: SerializationInfo::get_MemberCount
// Il2CppName: get_MemberCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (SerializationInfo::*)()>(&SerializationInfo::get_MemberCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfo*), "get_MemberCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SerializationInfo::get_ObjectType
// Il2CppName: get_ObjectType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Type* (SerializationInfo::*)()>(&SerializationInfo::get_ObjectType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfo*), "get_ObjectType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SerializationInfo::get_IsFullTypeNameSetExplicit
// Il2CppName: get_IsFullTypeNameSetExplicit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (SerializationInfo::*)()>(&SerializationInfo::get_IsFullTypeNameSetExplicit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfo*), "get_IsFullTypeNameSetExplicit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SerializationInfo::get_IsAssemblyNameSetExplicit
// Il2CppName: get_IsAssemblyNameSetExplicit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (SerializationInfo::*)()>(&SerializationInfo::get_IsAssemblyNameSetExplicit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfo*), "get_IsAssemblyNameSetExplicit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SerializationInfo::GetEnumerator
// Il2CppName: GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Serialization::SerializationInfoEnumerator* (SerializationInfo::*)()>(&SerializationInfo::GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfo*), "GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SerializationInfo::ExpandArrays
// Il2CppName: ExpandArrays
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationInfo::*)()>(&SerializationInfo::ExpandArrays)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfo*), "ExpandArrays", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SerializationInfo::AddValue
// Il2CppName: AddValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationInfo::*)(::Il2CppString*, ::Il2CppObject*, System::Type*)>(&SerializationInfo::AddValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfo*), "AddValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Type*>()});
  }
};
// Writing MetadataGetter for method: SerializationInfo::AddValue
// Il2CppName: AddValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationInfo::*)(::Il2CppString*, ::Il2CppObject*)>(&SerializationInfo::AddValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfo*), "AddValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: SerializationInfo::AddValue
// Il2CppName: AddValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationInfo::*)(::Il2CppString*, bool)>(&SerializationInfo::AddValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfo*), "AddValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: SerializationInfo::AddValue
// Il2CppName: AddValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationInfo::*)(::Il2CppString*, ::Il2CppChar)>(&SerializationInfo::AddValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfo*), "AddValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppChar>()});
  }
};
// Writing MetadataGetter for method: SerializationInfo::AddValue
// Il2CppName: AddValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationInfo::*)(::Il2CppString*, uint8_t)>(&SerializationInfo::AddValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfo*), "AddValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<uint8_t>()});
  }
};
// Writing MetadataGetter for method: SerializationInfo::AddValue
// Il2CppName: AddValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationInfo::*)(::Il2CppString*, int16_t)>(&SerializationInfo::AddValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfo*), "AddValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int16_t>()});
  }
};
// Writing MetadataGetter for method: SerializationInfo::AddValue
// Il2CppName: AddValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationInfo::*)(::Il2CppString*, int)>(&SerializationInfo::AddValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfo*), "AddValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SerializationInfo::AddValue
// Il2CppName: AddValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationInfo::*)(::Il2CppString*, int64_t)>(&SerializationInfo::AddValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfo*), "AddValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: SerializationInfo::AddValue
// Il2CppName: AddValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationInfo::*)(::Il2CppString*, uint64_t)>(&SerializationInfo::AddValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfo*), "AddValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<uint64_t>()});
  }
};
// Writing MetadataGetter for method: SerializationInfo::AddValue
// Il2CppName: AddValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationInfo::*)(::Il2CppString*, float)>(&SerializationInfo::AddValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfo*), "AddValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: SerializationInfo::AddValue
// Il2CppName: AddValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationInfo::*)(::Il2CppString*, System::DateTime)>(&SerializationInfo::AddValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfo*), "AddValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::DateTime>()});
  }
};
// Writing MetadataGetter for method: SerializationInfo::AddValueInternal
// Il2CppName: AddValueInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationInfo::*)(::Il2CppString*, ::Il2CppObject*, System::Type*)>(&SerializationInfo::AddValueInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfo*), "AddValueInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Type*>()});
  }
};
// Writing MetadataGetter for method: SerializationInfo::UpdateValue
// Il2CppName: UpdateValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationInfo::*)(::Il2CppString*, ::Il2CppObject*, System::Type*)>(&SerializationInfo::UpdateValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfo*), "UpdateValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Type*>()});
  }
};
// Writing MetadataGetter for method: SerializationInfo::FindElement
// Il2CppName: FindElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (SerializationInfo::*)(::Il2CppString*)>(&SerializationInfo::FindElement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfo*), "FindElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: SerializationInfo::GetElement
// Il2CppName: GetElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (SerializationInfo::*)(::Il2CppString*, System::Type*&)>(&SerializationInfo::GetElement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfo*), "GetElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Type*&>()});
  }
};
// Writing MetadataGetter for method: SerializationInfo::GetElementNoThrow
// Il2CppName: GetElementNoThrow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (SerializationInfo::*)(::Il2CppString*, System::Type*&)>(&SerializationInfo::GetElementNoThrow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfo*), "GetElementNoThrow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Type*&>()});
  }
};
// Writing MetadataGetter for method: SerializationInfo::GetValue
// Il2CppName: GetValue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (SerializationInfo::*)(::Il2CppString*, System::Type*)>(&SerializationInfo::GetValue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfo*), "GetValue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Type*>()});
  }
};
// Writing MetadataGetter for method: SerializationInfo::GetValueNoThrow
// Il2CppName: GetValueNoThrow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (SerializationInfo::*)(::Il2CppString*, System::Type*)>(&SerializationInfo::GetValueNoThrow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfo*), "GetValueNoThrow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Type*>()});
  }
};
// Writing MetadataGetter for method: SerializationInfo::GetBoolean
// Il2CppName: GetBoolean
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (SerializationInfo::*)(::Il2CppString*)>(&SerializationInfo::GetBoolean)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfo*), "GetBoolean", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: SerializationInfo::GetInt32
// Il2CppName: GetInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (SerializationInfo::*)(::Il2CppString*)>(&SerializationInfo::GetInt32)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfo*), "GetInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: SerializationInfo::GetInt64
// Il2CppName: GetInt64
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (SerializationInfo::*)(::Il2CppString*)>(&SerializationInfo::GetInt64)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfo*), "GetInt64", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: SerializationInfo::GetSingle
// Il2CppName: GetSingle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (SerializationInfo::*)(::Il2CppString*)>(&SerializationInfo::GetSingle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfo*), "GetSingle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: SerializationInfo::GetString
// Il2CppName: GetString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (SerializationInfo::*)(::Il2CppString*)>(&SerializationInfo::GetString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfo*), "GetString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.SerializationEntry
#include "System/Runtime/Serialization/SerializationEntry.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.SerializationEntry.get_Value
::Il2CppObject* System::Runtime::Serialization::SerializationEntry::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationEntry::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(*this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.SerializationEntry.get_Name
::Il2CppString* System::Runtime::Serialization::SerializationEntry::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationEntry::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Writing MetadataGetter for method: SerializationEntry::get_Value
// Il2CppName: get_Value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (SerializationEntry::*)()>(&SerializationEntry::get_Value)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationEntry), "get_Value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SerializationEntry::get_Name
// Il2CppName: get_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (SerializationEntry::*)()>(&SerializationEntry::get_Name)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationEntry), "get_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SerializationEntry::SerializationEntry
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationEntry::*)(::Il2CppString*, ::Il2CppObject*, System::Type*)>(&SerializationEntry::SerializationEntry<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationEntry), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Type*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationEntry::*)(::Il2CppString*, ::Il2CppObject*, System::Type*)>(&SerializationEntry::SerializationEntry<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationEntry), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Type*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.SerializationInfoEnumerator
#include "System/Runtime/Serialization/SerializationInfoEnumerator.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Runtime.Serialization.SerializationEntry
#include "System/Runtime/Serialization/SerializationEntry.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.SerializationInfoEnumerator.MoveNext
bool System::Runtime::Serialization::SerializationInfoEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfoEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.SerializationInfoEnumerator.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Runtime::Serialization::SerializationInfoEnumerator::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfoEnumerator::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.SerializationInfoEnumerator.get_Current
System::Runtime::Serialization::SerializationEntry System::Runtime::Serialization::SerializationInfoEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfoEnumerator::get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Serialization::SerializationEntry, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.SerializationInfoEnumerator.Reset
void System::Runtime::Serialization::SerializationInfoEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfoEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.SerializationInfoEnumerator.get_Name
::Il2CppString* System::Runtime::Serialization::SerializationInfoEnumerator::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfoEnumerator::get_Name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.SerializationInfoEnumerator.get_Value
::Il2CppObject* System::Runtime::Serialization::SerializationInfoEnumerator::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfoEnumerator::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.SerializationInfoEnumerator.get_ObjectType
System::Type* System::Runtime::Serialization::SerializationInfoEnumerator::get_ObjectType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationInfoEnumerator::get_ObjectType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ObjectType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: SerializationInfoEnumerator::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationInfoEnumerator::*)(::Array<::Il2CppString*>*, ::Array<::Il2CppObject*>*, ::Array<System::Type*>*, int)>(&SerializationInfoEnumerator::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfoEnumerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppObject*>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<System::Type*>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationInfoEnumerator::*)(::Array<::Il2CppString*>*, ::Array<::Il2CppObject*>*, ::Array<System::Type*>*, int)>(&SerializationInfoEnumerator::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfoEnumerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppObject*>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<System::Type*>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SerializationInfoEnumerator::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (SerializationInfoEnumerator::*)()>(&SerializationInfoEnumerator::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfoEnumerator*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SerializationInfoEnumerator::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (SerializationInfoEnumerator::*)()>(&SerializationInfoEnumerator::System_Collections_IEnumerator_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfoEnumerator*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SerializationInfoEnumerator::get_Current
// Il2CppName: get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Serialization::SerializationEntry (SerializationInfoEnumerator::*)()>(&SerializationInfoEnumerator::get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfoEnumerator*), "get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SerializationInfoEnumerator::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationInfoEnumerator::*)()>(&SerializationInfoEnumerator::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfoEnumerator*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SerializationInfoEnumerator::get_Name
// Il2CppName: get_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (SerializationInfoEnumerator::*)()>(&SerializationInfoEnumerator::get_Name)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfoEnumerator*), "get_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SerializationInfoEnumerator::get_Value
// Il2CppName: get_Value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (SerializationInfoEnumerator::*)()>(&SerializationInfoEnumerator::get_Value)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfoEnumerator*), "get_Value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SerializationInfoEnumerator::get_ObjectType
// Il2CppName: get_ObjectType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Type* (SerializationInfoEnumerator::*)()>(&SerializationInfoEnumerator::get_ObjectType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationInfoEnumerator*), "get_ObjectType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.SerializationObjectManager
#include "System/Runtime/Serialization/SerializationObjectManager.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Runtime.Serialization.SerializationEventHandler
#include "System/Runtime/Serialization/SerializationEventHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.SerializationObjectManager.RegisterObject
void System::Runtime::Serialization::SerializationObjectManager::RegisterObject(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationObjectManager::RegisterObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Runtime.Serialization.SerializationObjectManager.RaiseOnSerializedEvent
void System::Runtime::Serialization::SerializationObjectManager::RaiseOnSerializedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationObjectManager::RaiseOnSerializedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RaiseOnSerializedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.SerializationObjectManager.AddOnSerialized
void System::Runtime::Serialization::SerializationObjectManager::AddOnSerialized(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::SerializationObjectManager::AddOnSerialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddOnSerialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj);
}
// Writing MetadataGetter for method: SerializationObjectManager::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationObjectManager::*)(System::Runtime::Serialization::StreamingContext)>(&SerializationObjectManager::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationObjectManager*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationObjectManager::*)(System::Runtime::Serialization::StreamingContext)>(&SerializationObjectManager::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationObjectManager*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: SerializationObjectManager::RegisterObject
// Il2CppName: RegisterObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationObjectManager::*)(::Il2CppObject*)>(&SerializationObjectManager::RegisterObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationObjectManager*), "RegisterObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: SerializationObjectManager::RaiseOnSerializedEvent
// Il2CppName: RaiseOnSerializedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationObjectManager::*)()>(&SerializationObjectManager::RaiseOnSerializedEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationObjectManager*), "RaiseOnSerializedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SerializationObjectManager::AddOnSerialized
// Il2CppName: AddOnSerialized
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationObjectManager::*)(::Il2CppObject*)>(&SerializationObjectManager::AddOnSerialized)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationObjectManager*), "AddOnSerialized", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.StreamingContext
#include "System/Runtime/Serialization/StreamingContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.StreamingContext.get_State
System::Runtime::Serialization::StreamingContextStates System::Runtime::Serialization::StreamingContext::get_State() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::StreamingContext::get_State");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_State", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Serialization::StreamingContextStates, false>(*this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.StreamingContext.Equals
bool System::Runtime::Serialization::StreamingContext::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::StreamingContext::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(*this, ___internal__method, obj);
}
// Autogenerated method: System.Runtime.Serialization.StreamingContext.GetHashCode
int System::Runtime::Serialization::StreamingContext::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::StreamingContext::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Writing MetadataGetter for method: StreamingContext::StreamingContext
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StreamingContext::*)(System::Runtime::Serialization::StreamingContextStates)>(&StreamingContext::StreamingContext<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StreamingContext), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContextStates>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StreamingContext::*)(System::Runtime::Serialization::StreamingContextStates)>(&StreamingContext::StreamingContext<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StreamingContext), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContextStates>()});
  }
};
// Writing MetadataGetter for method: StreamingContext::StreamingContext
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StreamingContext::*)(System::Runtime::Serialization::StreamingContextStates, ::Il2CppObject*)>(&StreamingContext::StreamingContext<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StreamingContext), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContextStates>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StreamingContext::*)(System::Runtime::Serialization::StreamingContextStates, ::Il2CppObject*)>(&StreamingContext::StreamingContext<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StreamingContext), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContextStates>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: StreamingContext::get_State
// Il2CppName: get_State
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Serialization::StreamingContextStates (StreamingContext::*)()>(&StreamingContext::get_State)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StreamingContext), "get_State", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StreamingContext::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (StreamingContext::*)(::Il2CppObject*)>(&StreamingContext::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StreamingContext), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: StreamingContext::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (StreamingContext::*)()>(&StreamingContext::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StreamingContext), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.StreamingContextStates
#include "System/Runtime/Serialization/StreamingContextStates.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.StreamingContextStates CrossProcess
System::Runtime::Serialization::StreamingContextStates System::Runtime::Serialization::StreamingContextStates::_get_CrossProcess() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::StreamingContextStates::_get_CrossProcess");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::StreamingContextStates>("System.Runtime.Serialization", "StreamingContextStates", "CrossProcess"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.StreamingContextStates CrossProcess
void System::Runtime::Serialization::StreamingContextStates::_set_CrossProcess(System::Runtime::Serialization::StreamingContextStates value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::StreamingContextStates::_set_CrossProcess");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization", "StreamingContextStates", "CrossProcess", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.StreamingContextStates CrossMachine
System::Runtime::Serialization::StreamingContextStates System::Runtime::Serialization::StreamingContextStates::_get_CrossMachine() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::StreamingContextStates::_get_CrossMachine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::StreamingContextStates>("System.Runtime.Serialization", "StreamingContextStates", "CrossMachine"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.StreamingContextStates CrossMachine
void System::Runtime::Serialization::StreamingContextStates::_set_CrossMachine(System::Runtime::Serialization::StreamingContextStates value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::StreamingContextStates::_set_CrossMachine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization", "StreamingContextStates", "CrossMachine", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.StreamingContextStates File
System::Runtime::Serialization::StreamingContextStates System::Runtime::Serialization::StreamingContextStates::_get_File() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::StreamingContextStates::_get_File");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::StreamingContextStates>("System.Runtime.Serialization", "StreamingContextStates", "File"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.StreamingContextStates File
void System::Runtime::Serialization::StreamingContextStates::_set_File(System::Runtime::Serialization::StreamingContextStates value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::StreamingContextStates::_set_File");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization", "StreamingContextStates", "File", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.StreamingContextStates Persistence
System::Runtime::Serialization::StreamingContextStates System::Runtime::Serialization::StreamingContextStates::_get_Persistence() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::StreamingContextStates::_get_Persistence");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::StreamingContextStates>("System.Runtime.Serialization", "StreamingContextStates", "Persistence"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.StreamingContextStates Persistence
void System::Runtime::Serialization::StreamingContextStates::_set_Persistence(System::Runtime::Serialization::StreamingContextStates value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::StreamingContextStates::_set_Persistence");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization", "StreamingContextStates", "Persistence", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.StreamingContextStates Remoting
System::Runtime::Serialization::StreamingContextStates System::Runtime::Serialization::StreamingContextStates::_get_Remoting() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::StreamingContextStates::_get_Remoting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::StreamingContextStates>("System.Runtime.Serialization", "StreamingContextStates", "Remoting"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.StreamingContextStates Remoting
void System::Runtime::Serialization::StreamingContextStates::_set_Remoting(System::Runtime::Serialization::StreamingContextStates value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::StreamingContextStates::_set_Remoting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization", "StreamingContextStates", "Remoting", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.StreamingContextStates Other
System::Runtime::Serialization::StreamingContextStates System::Runtime::Serialization::StreamingContextStates::_get_Other() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::StreamingContextStates::_get_Other");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::StreamingContextStates>("System.Runtime.Serialization", "StreamingContextStates", "Other"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.StreamingContextStates Other
void System::Runtime::Serialization::StreamingContextStates::_set_Other(System::Runtime::Serialization::StreamingContextStates value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::StreamingContextStates::_set_Other");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization", "StreamingContextStates", "Other", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.StreamingContextStates Clone
System::Runtime::Serialization::StreamingContextStates System::Runtime::Serialization::StreamingContextStates::_get_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::StreamingContextStates::_get_Clone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::StreamingContextStates>("System.Runtime.Serialization", "StreamingContextStates", "Clone"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.StreamingContextStates Clone
void System::Runtime::Serialization::StreamingContextStates::_set_Clone(System::Runtime::Serialization::StreamingContextStates value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::StreamingContextStates::_set_Clone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization", "StreamingContextStates", "Clone", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.StreamingContextStates CrossAppDomain
System::Runtime::Serialization::StreamingContextStates System::Runtime::Serialization::StreamingContextStates::_get_CrossAppDomain() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::StreamingContextStates::_get_CrossAppDomain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::StreamingContextStates>("System.Runtime.Serialization", "StreamingContextStates", "CrossAppDomain"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.StreamingContextStates CrossAppDomain
void System::Runtime::Serialization::StreamingContextStates::_set_CrossAppDomain(System::Runtime::Serialization::StreamingContextStates value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::StreamingContextStates::_set_CrossAppDomain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization", "StreamingContextStates", "CrossAppDomain", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.StreamingContextStates All
System::Runtime::Serialization::StreamingContextStates System::Runtime::Serialization::StreamingContextStates::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::StreamingContextStates::_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::StreamingContextStates>("System.Runtime.Serialization", "StreamingContextStates", "All"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.StreamingContextStates All
void System::Runtime::Serialization::StreamingContextStates::_set_All(System::Runtime::Serialization::StreamingContextStates value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::StreamingContextStates::_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization", "StreamingContextStates", "All", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.ValueTypeFixupInfo
#include "System/Runtime/Serialization/ValueTypeFixupInfo.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.ValueTypeFixupInfo.get_ContainerID
int64_t System::Runtime::Serialization::ValueTypeFixupInfo::get_ContainerID() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ValueTypeFixupInfo::get_ContainerID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContainerID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.ValueTypeFixupInfo.get_ParentField
System::Reflection::FieldInfo* System::Runtime::Serialization::ValueTypeFixupInfo::get_ParentField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ValueTypeFixupInfo::get_ParentField");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentField", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::FieldInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.ValueTypeFixupInfo.get_ParentIndex
::Array<int>* System::Runtime::Serialization::ValueTypeFixupInfo::get_ParentIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::ValueTypeFixupInfo::get_ParentIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ParentIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: ValueTypeFixupInfo::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ValueTypeFixupInfo::*)(int64_t, System::Reflection::FieldInfo*, ::Array<int>*)>(&ValueTypeFixupInfo::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ValueTypeFixupInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::FieldInfo*>(), ::il2cpp_utils::ExtractIndependentType<::Array<int>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ValueTypeFixupInfo::*)(int64_t, System::Reflection::FieldInfo*, ::Array<int>*)>(&ValueTypeFixupInfo::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ValueTypeFixupInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::FieldInfo*>(), ::il2cpp_utils::ExtractIndependentType<::Array<int>*>()});
  }
};
// Writing MetadataGetter for method: ValueTypeFixupInfo::get_ContainerID
// Il2CppName: get_ContainerID
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (ValueTypeFixupInfo::*)()>(&ValueTypeFixupInfo::get_ContainerID)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ValueTypeFixupInfo*), "get_ContainerID", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ValueTypeFixupInfo::get_ParentField
// Il2CppName: get_ParentField
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::FieldInfo* (ValueTypeFixupInfo::*)()>(&ValueTypeFixupInfo::get_ParentField)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ValueTypeFixupInfo*), "get_ParentField", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ValueTypeFixupInfo::get_ParentIndex
// Il2CppName: get_ParentIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<int>* (ValueTypeFixupInfo::*)()>(&ValueTypeFixupInfo::get_ParentIndex)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ValueTypeFixupInfo*), "get_ParentIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.Formatters.FormatterTypeStyle
#include "System/Runtime/Serialization/Formatters/FormatterTypeStyle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.FormatterTypeStyle TypesWhenNeeded
System::Runtime::Serialization::Formatters::FormatterTypeStyle System::Runtime::Serialization::Formatters::FormatterTypeStyle::_get_TypesWhenNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::FormatterTypeStyle::_get_TypesWhenNeeded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::FormatterTypeStyle>("System.Runtime.Serialization.Formatters", "FormatterTypeStyle", "TypesWhenNeeded"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.FormatterTypeStyle TypesWhenNeeded
void System::Runtime::Serialization::Formatters::FormatterTypeStyle::_set_TypesWhenNeeded(System::Runtime::Serialization::Formatters::FormatterTypeStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::FormatterTypeStyle::_set_TypesWhenNeeded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters", "FormatterTypeStyle", "TypesWhenNeeded", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.FormatterTypeStyle TypesAlways
System::Runtime::Serialization::Formatters::FormatterTypeStyle System::Runtime::Serialization::Formatters::FormatterTypeStyle::_get_TypesAlways() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::FormatterTypeStyle::_get_TypesAlways");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::FormatterTypeStyle>("System.Runtime.Serialization.Formatters", "FormatterTypeStyle", "TypesAlways"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.FormatterTypeStyle TypesAlways
void System::Runtime::Serialization::Formatters::FormatterTypeStyle::_set_TypesAlways(System::Runtime::Serialization::Formatters::FormatterTypeStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::FormatterTypeStyle::_set_TypesAlways");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters", "FormatterTypeStyle", "TypesAlways", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.FormatterTypeStyle XsdString
System::Runtime::Serialization::Formatters::FormatterTypeStyle System::Runtime::Serialization::Formatters::FormatterTypeStyle::_get_XsdString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::FormatterTypeStyle::_get_XsdString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::FormatterTypeStyle>("System.Runtime.Serialization.Formatters", "FormatterTypeStyle", "XsdString"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.FormatterTypeStyle XsdString
void System::Runtime::Serialization::Formatters::FormatterTypeStyle::_set_XsdString(System::Runtime::Serialization::Formatters::FormatterTypeStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::FormatterTypeStyle::_set_XsdString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters", "FormatterTypeStyle", "XsdString", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.Formatters.FormatterAssemblyStyle
#include "System/Runtime/Serialization/Formatters/FormatterAssemblyStyle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.FormatterAssemblyStyle Simple
System::Runtime::Serialization::Formatters::FormatterAssemblyStyle System::Runtime::Serialization::Formatters::FormatterAssemblyStyle::_get_Simple() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::FormatterAssemblyStyle::_get_Simple");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::FormatterAssemblyStyle>("System.Runtime.Serialization.Formatters", "FormatterAssemblyStyle", "Simple"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.FormatterAssemblyStyle Simple
void System::Runtime::Serialization::Formatters::FormatterAssemblyStyle::_set_Simple(System::Runtime::Serialization::Formatters::FormatterAssemblyStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::FormatterAssemblyStyle::_set_Simple");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters", "FormatterAssemblyStyle", "Simple", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.FormatterAssemblyStyle Full
System::Runtime::Serialization::Formatters::FormatterAssemblyStyle System::Runtime::Serialization::Formatters::FormatterAssemblyStyle::_get_Full() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::FormatterAssemblyStyle::_get_Full");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::FormatterAssemblyStyle>("System.Runtime.Serialization.Formatters", "FormatterAssemblyStyle", "Full"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.FormatterAssemblyStyle Full
void System::Runtime::Serialization::Formatters::FormatterAssemblyStyle::_set_Full(System::Runtime::Serialization::Formatters::FormatterAssemblyStyle value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::FormatterAssemblyStyle::_set_Full");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters", "FormatterAssemblyStyle", "Full", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.Formatters.TypeFilterLevel
#include "System/Runtime/Serialization/Formatters/TypeFilterLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.TypeFilterLevel Low
System::Runtime::Serialization::Formatters::TypeFilterLevel System::Runtime::Serialization::Formatters::TypeFilterLevel::_get_Low() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::TypeFilterLevel::_get_Low");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::TypeFilterLevel>("System.Runtime.Serialization.Formatters", "TypeFilterLevel", "Low"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.TypeFilterLevel Low
void System::Runtime::Serialization::Formatters::TypeFilterLevel::_set_Low(System::Runtime::Serialization::Formatters::TypeFilterLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::TypeFilterLevel::_set_Low");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters", "TypeFilterLevel", "Low", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.TypeFilterLevel Full
System::Runtime::Serialization::Formatters::TypeFilterLevel System::Runtime::Serialization::Formatters::TypeFilterLevel::_get_Full() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::TypeFilterLevel::_get_Full");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::TypeFilterLevel>("System.Runtime.Serialization.Formatters", "TypeFilterLevel", "Full"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.TypeFilterLevel Full
void System::Runtime::Serialization::Formatters::TypeFilterLevel::_set_Full(System::Runtime::Serialization::Formatters::TypeFilterLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::TypeFilterLevel::_set_Full");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters", "TypeFilterLevel", "Full", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.Formatters.Binary.BinaryConverter
#include "System/Runtime/Serialization/Formatters/Binary/BinaryConverter.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.BinaryTypeEnum
#include "System/Runtime/Serialization/Formatters/Binary/BinaryTypeEnum.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.WriteObjectInfo
#include "System/Runtime/Serialization/Formatters/Binary/WriteObjectInfo.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.ObjectWriter
#include "System/Runtime/Serialization/Formatters/Binary/ObjectWriter.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.__BinaryWriter
#include "System/Runtime/Serialization/Formatters/Binary/__BinaryWriter.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.__BinaryParser
#include "System/Runtime/Serialization/Formatters/Binary/__BinaryParser.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.ObjectReader
#include "System/Runtime/Serialization/Formatters/Binary/ObjectReader.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.BinaryAssemblyInfo
#include "System/Runtime/Serialization/Formatters/Binary/BinaryAssemblyInfo.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.InternalPrimitiveTypeE
#include "System/Runtime/Serialization/Formatters/Binary/InternalPrimitiveTypeE.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.BinaryConverter.GetBinaryTypeInfo
System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum System::Runtime::Serialization::Formatters::Binary::BinaryConverter::GetBinaryTypeInfo(System::Type* type, System::Runtime::Serialization::Formatters::Binary::WriteObjectInfo* objectInfo, ::Il2CppString* typeName, System::Runtime::Serialization::Formatters::Binary::ObjectWriter* objectWriter, ::Il2CppObject*& typeInformation, int& assemId) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryConverter::GetBinaryTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization.Formatters.Binary", "BinaryConverter", "GetBinaryTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(objectInfo), ::il2cpp_utils::ExtractType(typeName), ::il2cpp_utils::ExtractType(objectWriter), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, objectInfo, typeName, objectWriter, typeInformation, assemId);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.BinaryConverter.GetParserBinaryTypeInfo
System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum System::Runtime::Serialization::Formatters::Binary::BinaryConverter::GetParserBinaryTypeInfo(System::Type* type, ::Il2CppObject*& typeInformation) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryConverter::GetParserBinaryTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization.Formatters.Binary", "BinaryConverter", "GetParserBinaryTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, typeInformation);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.BinaryConverter.WriteTypeInfo
void System::Runtime::Serialization::Formatters::Binary::BinaryConverter::WriteTypeInfo(System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum binaryTypeEnum, ::Il2CppObject* typeInformation, int assemId, System::Runtime::Serialization::Formatters::Binary::__BinaryWriter* sout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryConverter::WriteTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization.Formatters.Binary", "BinaryConverter", "WriteTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(binaryTypeEnum), ::il2cpp_utils::ExtractType(typeInformation), ::il2cpp_utils::ExtractType(assemId), ::il2cpp_utils::ExtractType(sout)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, binaryTypeEnum, typeInformation, assemId, sout);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.BinaryConverter.ReadTypeInfo
::Il2CppObject* System::Runtime::Serialization::Formatters::Binary::BinaryConverter::ReadTypeInfo(System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum binaryTypeEnum, System::Runtime::Serialization::Formatters::Binary::__BinaryParser* input, int& assemId) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryConverter::ReadTypeInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization.Formatters.Binary", "BinaryConverter", "ReadTypeInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(binaryTypeEnum), ::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, binaryTypeEnum, input, assemId);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.BinaryConverter.TypeFromInfo
void System::Runtime::Serialization::Formatters::Binary::BinaryConverter::TypeFromInfo(System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum binaryTypeEnum, ::Il2CppObject* typeInformation, System::Runtime::Serialization::Formatters::Binary::ObjectReader* objectReader, System::Runtime::Serialization::Formatters::Binary::BinaryAssemblyInfo* assemblyInfo, System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE& primitiveTypeEnum, ::Il2CppString*& typeString, System::Type*& type, bool& isVariant) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryConverter::TypeFromInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization.Formatters.Binary", "BinaryConverter", "TypeFromInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(binaryTypeEnum), ::il2cpp_utils::ExtractType(typeInformation), ::il2cpp_utils::ExtractType(objectReader), ::il2cpp_utils::ExtractType(assemblyInfo), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE&>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>(), ::il2cpp_utils::ExtractIndependentType<System::Type*&>(), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, binaryTypeEnum, typeInformation, objectReader, assemblyInfo, primitiveTypeEnum, typeString, type, isVariant);
}
// Writing MetadataGetter for method: BinaryConverter::GetBinaryTypeInfo
// Il2CppName: GetBinaryTypeInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum (*)(System::Type*, System::Runtime::Serialization::Formatters::Binary::WriteObjectInfo*, ::Il2CppString*, System::Runtime::Serialization::Formatters::Binary::ObjectWriter*, ::Il2CppObject*&, int&)>(&BinaryConverter::GetBinaryTypeInfo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryConverter*), "GetBinaryTypeInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::WriteObjectInfo*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::ObjectWriter*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: BinaryConverter::GetParserBinaryTypeInfo
// Il2CppName: GetParserBinaryTypeInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum (*)(System::Type*, ::Il2CppObject*&)>(&BinaryConverter::GetParserBinaryTypeInfo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryConverter*), "GetParserBinaryTypeInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()});
  }
};
// Writing MetadataGetter for method: BinaryConverter::WriteTypeInfo
// Il2CppName: WriteTypeInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum, ::Il2CppObject*, int, System::Runtime::Serialization::Formatters::Binary::__BinaryWriter*)>(&BinaryConverter::WriteTypeInfo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryConverter*), "WriteTypeInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::__BinaryWriter*>()});
  }
};
// Writing MetadataGetter for method: BinaryConverter::ReadTypeInfo
// Il2CppName: ReadTypeInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum, System::Runtime::Serialization::Formatters::Binary::__BinaryParser*, int&)>(&BinaryConverter::ReadTypeInfo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryConverter*), "ReadTypeInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::__BinaryParser*>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: BinaryConverter::TypeFromInfo
// Il2CppName: TypeFromInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum, ::Il2CppObject*, System::Runtime::Serialization::Formatters::Binary::ObjectReader*, System::Runtime::Serialization::Formatters::Binary::BinaryAssemblyInfo*, System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE&, ::Il2CppString*&, System::Type*&, bool&)>(&BinaryConverter::TypeFromInfo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryConverter*), "TypeFromInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::ObjectReader*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::BinaryAssemblyInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE&>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>(), ::il2cpp_utils::ExtractIndependentType<System::Type*&>(), ::il2cpp_utils::ExtractIndependentType<bool&>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.Formatters.Binary.IOUtil
#include "System/Runtime/Serialization/Formatters/Binary/IOUtil.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.MessageEnum
#include "System/Runtime/Serialization/Formatters/Binary/MessageEnum.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.__BinaryWriter
#include "System/Runtime/Serialization/Formatters/Binary/__BinaryWriter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.IOUtil.FlagTest
bool System::Runtime::Serialization::Formatters::Binary::IOUtil::FlagTest(System::Runtime::Serialization::Formatters::Binary::MessageEnum flag, System::Runtime::Serialization::Formatters::Binary::MessageEnum target) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::IOUtil::FlagTest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization.Formatters.Binary", "IOUtil", "FlagTest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flag), ::il2cpp_utils::ExtractType(target)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, flag, target);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.IOUtil.WriteStringWithCode
void System::Runtime::Serialization::Formatters::Binary::IOUtil::WriteStringWithCode(::Il2CppString* value, System::Runtime::Serialization::Formatters::Binary::__BinaryWriter* sout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::IOUtil::WriteStringWithCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization.Formatters.Binary", "IOUtil", "WriteStringWithCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(sout)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, sout);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.IOUtil.WriteWithCode
void System::Runtime::Serialization::Formatters::Binary::IOUtil::WriteWithCode(System::Type* type, ::Il2CppObject* value, System::Runtime::Serialization::Formatters::Binary::__BinaryWriter* sout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::IOUtil::WriteWithCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization.Formatters.Binary", "IOUtil", "WriteWithCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(sout)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, value, sout);
}
// Writing MetadataGetter for method: IOUtil::FlagTest
// Il2CppName: FlagTest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::Runtime::Serialization::Formatters::Binary::MessageEnum, System::Runtime::Serialization::Formatters::Binary::MessageEnum)>(&IOUtil::FlagTest)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IOUtil*), "FlagTest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::MessageEnum>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::MessageEnum>()});
  }
};
// Writing MetadataGetter for method: IOUtil::WriteStringWithCode
// Il2CppName: WriteStringWithCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(::Il2CppString*, System::Runtime::Serialization::Formatters::Binary::__BinaryWriter*)>(&IOUtil::WriteStringWithCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IOUtil*), "WriteStringWithCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::__BinaryWriter*>()});
  }
};
// Writing MetadataGetter for method: IOUtil::WriteWithCode
// Il2CppName: WriteWithCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Type*, ::Il2CppObject*, System::Runtime::Serialization::Formatters::Binary::__BinaryWriter*)>(&IOUtil::WriteWithCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IOUtil*), "WriteWithCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::__BinaryWriter*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.Formatters.Binary.BinaryAssemblyInfo
#include "System/Runtime/Serialization/Formatters/Binary/BinaryAssemblyInfo.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.BinaryAssemblyInfo.GetAssembly
System::Reflection::Assembly* System::Runtime::Serialization::Formatters::Binary::BinaryAssemblyInfo::GetAssembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryAssemblyInfo::GetAssembly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAssembly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Reflection::Assembly*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: BinaryAssemblyInfo::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryAssemblyInfo::*)(::Il2CppString*)>(&BinaryAssemblyInfo::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryAssemblyInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryAssemblyInfo::*)(::Il2CppString*)>(&BinaryAssemblyInfo::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryAssemblyInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: BinaryAssemblyInfo::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryAssemblyInfo::*)(::Il2CppString*, System::Reflection::Assembly*)>(&BinaryAssemblyInfo::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryAssemblyInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::Assembly*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryAssemblyInfo::*)(::Il2CppString*, System::Reflection::Assembly*)>(&BinaryAssemblyInfo::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryAssemblyInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Reflection::Assembly*>()});
  }
};
// Writing MetadataGetter for method: BinaryAssemblyInfo::GetAssembly
// Il2CppName: GetAssembly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Reflection::Assembly* (BinaryAssemblyInfo::*)()>(&BinaryAssemblyInfo::GetAssembly)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryAssemblyInfo*), "GetAssembly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.Formatters.Binary.SerializationHeaderRecord
#include "System/Runtime/Serialization/Formatters/Binary/SerializationHeaderRecord.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.__BinaryWriter
#include "System/Runtime/Serialization/Formatters/Binary/__BinaryWriter.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.__BinaryParser
#include "System/Runtime/Serialization/Formatters/Binary/__BinaryParser.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.SerializationHeaderRecord.Write
void System::Runtime::Serialization::Formatters::Binary::SerializationHeaderRecord::Write(System::Runtime::Serialization::Formatters::Binary::__BinaryWriter* sout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::SerializationHeaderRecord::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sout)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sout);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.SerializationHeaderRecord.GetInt32
int System::Runtime::Serialization::Formatters::Binary::SerializationHeaderRecord::GetInt32(::Array<uint8_t>* buffer, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::SerializationHeaderRecord::GetInt32");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization.Formatters.Binary", "SerializationHeaderRecord", "GetInt32", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, buffer, index);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.SerializationHeaderRecord.Read
void System::Runtime::Serialization::Formatters::Binary::SerializationHeaderRecord::Read(System::Runtime::Serialization::Formatters::Binary::__BinaryParser* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::SerializationHeaderRecord::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.SerializationHeaderRecord.Dump
void System::Runtime::Serialization::Formatters::Binary::SerializationHeaderRecord::Dump() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::SerializationHeaderRecord::Dump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: SerializationHeaderRecord::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationHeaderRecord::*)(System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum, int, int, int, int)>(&SerializationHeaderRecord::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationHeaderRecord*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationHeaderRecord::*)(System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum, int, int, int, int)>(&SerializationHeaderRecord::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationHeaderRecord*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SerializationHeaderRecord::Write
// Il2CppName: Write
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationHeaderRecord::*)(System::Runtime::Serialization::Formatters::Binary::__BinaryWriter*)>(&SerializationHeaderRecord::Write)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationHeaderRecord*), "Write", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::__BinaryWriter*>()});
  }
};
// Writing MetadataGetter for method: SerializationHeaderRecord::GetInt32
// Il2CppName: GetInt32
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Array<uint8_t>*, int)>(&SerializationHeaderRecord::GetInt32)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationHeaderRecord*), "GetInt32", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SerializationHeaderRecord::Read
// Il2CppName: Read
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationHeaderRecord::*)(System::Runtime::Serialization::Formatters::Binary::__BinaryParser*)>(&SerializationHeaderRecord::Read)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationHeaderRecord*), "Read", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::__BinaryParser*>()});
  }
};
// Writing MetadataGetter for method: SerializationHeaderRecord::Dump
// Il2CppName: Dump
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationHeaderRecord::*)()>(&SerializationHeaderRecord::Dump)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationHeaderRecord*), "Dump", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SerializationHeaderRecord::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationHeaderRecord::*)()>(&SerializationHeaderRecord::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationHeaderRecord*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SerializationHeaderRecord::*)()>(&SerializationHeaderRecord::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SerializationHeaderRecord*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.Formatters.Binary.BinaryAssembly
#include "System/Runtime/Serialization/Formatters/Binary/BinaryAssembly.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.__BinaryWriter
#include "System/Runtime/Serialization/Formatters/Binary/__BinaryWriter.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.__BinaryParser
#include "System/Runtime/Serialization/Formatters/Binary/__BinaryParser.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.BinaryAssembly.Set
void System::Runtime::Serialization::Formatters::Binary::BinaryAssembly::Set(int assemId, ::Il2CppString* assemblyString) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryAssembly::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assemId), ::il2cpp_utils::ExtractType(assemblyString)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, assemId, assemblyString);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.BinaryAssembly.Write
void System::Runtime::Serialization::Formatters::Binary::BinaryAssembly::Write(System::Runtime::Serialization::Formatters::Binary::__BinaryWriter* sout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryAssembly::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sout)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sout);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.BinaryAssembly.Read
void System::Runtime::Serialization::Formatters::Binary::BinaryAssembly::Read(System::Runtime::Serialization::Formatters::Binary::__BinaryParser* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryAssembly::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.BinaryAssembly.Dump
void System::Runtime::Serialization::Formatters::Binary::BinaryAssembly::Dump() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryAssembly::Dump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: BinaryAssembly::Set
// Il2CppName: Set
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryAssembly::*)(int, ::Il2CppString*)>(&BinaryAssembly::Set)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryAssembly*), "Set", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: BinaryAssembly::Write
// Il2CppName: Write
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryAssembly::*)(System::Runtime::Serialization::Formatters::Binary::__BinaryWriter*)>(&BinaryAssembly::Write)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryAssembly*), "Write", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::__BinaryWriter*>()});
  }
};
// Writing MetadataGetter for method: BinaryAssembly::Read
// Il2CppName: Read
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryAssembly::*)(System::Runtime::Serialization::Formatters::Binary::__BinaryParser*)>(&BinaryAssembly::Read)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryAssembly*), "Read", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::__BinaryParser*>()});
  }
};
// Writing MetadataGetter for method: BinaryAssembly::Dump
// Il2CppName: Dump
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryAssembly::*)()>(&BinaryAssembly::Dump)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryAssembly*), "Dump", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BinaryAssembly::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryAssembly::*)()>(&BinaryAssembly::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryAssembly*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryAssembly::*)()>(&BinaryAssembly::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryAssembly*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.Formatters.Binary.BinaryCrossAppDomainAssembly
#include "System/Runtime/Serialization/Formatters/Binary/BinaryCrossAppDomainAssembly.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.__BinaryParser
#include "System/Runtime/Serialization/Formatters/Binary/__BinaryParser.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.BinaryCrossAppDomainAssembly.Read
void System::Runtime::Serialization::Formatters::Binary::BinaryCrossAppDomainAssembly::Read(System::Runtime::Serialization::Formatters::Binary::__BinaryParser* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryCrossAppDomainAssembly::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.BinaryCrossAppDomainAssembly.Dump
void System::Runtime::Serialization::Formatters::Binary::BinaryCrossAppDomainAssembly::Dump() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryCrossAppDomainAssembly::Dump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: BinaryCrossAppDomainAssembly::Read
// Il2CppName: Read
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryCrossAppDomainAssembly::*)(System::Runtime::Serialization::Formatters::Binary::__BinaryParser*)>(&BinaryCrossAppDomainAssembly::Read)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryCrossAppDomainAssembly*), "Read", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::__BinaryParser*>()});
  }
};
// Writing MetadataGetter for method: BinaryCrossAppDomainAssembly::Dump
// Il2CppName: Dump
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryCrossAppDomainAssembly::*)()>(&BinaryCrossAppDomainAssembly::Dump)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryCrossAppDomainAssembly*), "Dump", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BinaryCrossAppDomainAssembly::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryCrossAppDomainAssembly::*)()>(&BinaryCrossAppDomainAssembly::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryCrossAppDomainAssembly*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryCrossAppDomainAssembly::*)()>(&BinaryCrossAppDomainAssembly::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryCrossAppDomainAssembly*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.Formatters.Binary.BinaryObject
#include "System/Runtime/Serialization/Formatters/Binary/BinaryObject.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.__BinaryWriter
#include "System/Runtime/Serialization/Formatters/Binary/__BinaryWriter.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.__BinaryParser
#include "System/Runtime/Serialization/Formatters/Binary/__BinaryParser.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.BinaryObject.Set
void System::Runtime::Serialization::Formatters::Binary::BinaryObject::Set(int objectId, int mapId) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryObject::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectId), ::il2cpp_utils::ExtractType(mapId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, objectId, mapId);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.BinaryObject.Write
void System::Runtime::Serialization::Formatters::Binary::BinaryObject::Write(System::Runtime::Serialization::Formatters::Binary::__BinaryWriter* sout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryObject::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sout)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sout);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.BinaryObject.Read
void System::Runtime::Serialization::Formatters::Binary::BinaryObject::Read(System::Runtime::Serialization::Formatters::Binary::__BinaryParser* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryObject::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.BinaryObject.Dump
void System::Runtime::Serialization::Formatters::Binary::BinaryObject::Dump() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryObject::Dump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: BinaryObject::Set
// Il2CppName: Set
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryObject::*)(int, int)>(&BinaryObject::Set)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryObject*), "Set", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BinaryObject::Write
// Il2CppName: Write
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryObject::*)(System::Runtime::Serialization::Formatters::Binary::__BinaryWriter*)>(&BinaryObject::Write)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryObject*), "Write", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::__BinaryWriter*>()});
  }
};
// Writing MetadataGetter for method: BinaryObject::Read
// Il2CppName: Read
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryObject::*)(System::Runtime::Serialization::Formatters::Binary::__BinaryParser*)>(&BinaryObject::Read)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryObject*), "Read", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::__BinaryParser*>()});
  }
};
// Writing MetadataGetter for method: BinaryObject::Dump
// Il2CppName: Dump
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryObject::*)()>(&BinaryObject::Dump)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryObject*), "Dump", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BinaryObject::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryObject::*)()>(&BinaryObject::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryObject*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryObject::*)()>(&BinaryObject::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryObject*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.Formatters.Binary.BinaryMethodCall
#include "System/Runtime/Serialization/Formatters/Binary/BinaryMethodCall.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.__BinaryWriter
#include "System/Runtime/Serialization/Formatters/Binary/__BinaryWriter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.BinaryMethodCall.Write
void System::Runtime::Serialization::Formatters::Binary::BinaryMethodCall::Write(System::Runtime::Serialization::Formatters::Binary::__BinaryWriter* sout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryMethodCall::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sout)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sout);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.BinaryMethodCall.Dump
void System::Runtime::Serialization::Formatters::Binary::BinaryMethodCall::Dump() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryMethodCall::Dump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: BinaryMethodCall::Write
// Il2CppName: Write
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryMethodCall::*)(System::Runtime::Serialization::Formatters::Binary::__BinaryWriter*)>(&BinaryMethodCall::Write)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryMethodCall*), "Write", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::__BinaryWriter*>()});
  }
};
// Writing MetadataGetter for method: BinaryMethodCall::Dump
// Il2CppName: Dump
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryMethodCall::*)()>(&BinaryMethodCall::Dump)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryMethodCall*), "Dump", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BinaryMethodCall::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryMethodCall::*)()>(&BinaryMethodCall::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryMethodCall*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryMethodCall::*)()>(&BinaryMethodCall::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryMethodCall*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.Formatters.Binary.BinaryMethodReturn
#include "System/Runtime/Serialization/Formatters/Binary/BinaryMethodReturn.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.__BinaryWriter
#include "System/Runtime/Serialization/Formatters/Binary/__BinaryWriter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Object instanceOfVoid
::Il2CppObject* System::Runtime::Serialization::Formatters::Binary::BinaryMethodReturn::_get_instanceOfVoid() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryMethodReturn::_get_instanceOfVoid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Runtime.Serialization.Formatters.Binary", "BinaryMethodReturn", "instanceOfVoid"));
}
// Autogenerated static field setter
// Set static field: static private System.Object instanceOfVoid
void System::Runtime::Serialization::Formatters::Binary::BinaryMethodReturn::_set_instanceOfVoid(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryMethodReturn::_set_instanceOfVoid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "BinaryMethodReturn", "instanceOfVoid", value));
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.BinaryMethodReturn..cctor
void System::Runtime::Serialization::Formatters::Binary::BinaryMethodReturn::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryMethodReturn::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization.Formatters.Binary", "BinaryMethodReturn", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.BinaryMethodReturn.Write
void System::Runtime::Serialization::Formatters::Binary::BinaryMethodReturn::Write(System::Runtime::Serialization::Formatters::Binary::__BinaryWriter* sout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryMethodReturn::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sout)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sout);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.BinaryMethodReturn.Dump
void System::Runtime::Serialization::Formatters::Binary::BinaryMethodReturn::Dump() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryMethodReturn::Dump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: BinaryMethodReturn::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&BinaryMethodReturn::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryMethodReturn*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BinaryMethodReturn::Write
// Il2CppName: Write
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryMethodReturn::*)(System::Runtime::Serialization::Formatters::Binary::__BinaryWriter*)>(&BinaryMethodReturn::Write)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryMethodReturn*), "Write", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::__BinaryWriter*>()});
  }
};
// Writing MetadataGetter for method: BinaryMethodReturn::Dump
// Il2CppName: Dump
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryMethodReturn::*)()>(&BinaryMethodReturn::Dump)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryMethodReturn*), "Dump", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BinaryMethodReturn::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryMethodReturn::*)()>(&BinaryMethodReturn::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryMethodReturn*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryMethodReturn::*)()>(&BinaryMethodReturn::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryMethodReturn*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.Formatters.Binary.BinaryObjectString
#include "System/Runtime/Serialization/Formatters/Binary/BinaryObjectString.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.__BinaryWriter
#include "System/Runtime/Serialization/Formatters/Binary/__BinaryWriter.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.__BinaryParser
#include "System/Runtime/Serialization/Formatters/Binary/__BinaryParser.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.BinaryObjectString.Set
void System::Runtime::Serialization::Formatters::Binary::BinaryObjectString::Set(int objectId, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryObjectString::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectId), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, objectId, value);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.BinaryObjectString.Write
void System::Runtime::Serialization::Formatters::Binary::BinaryObjectString::Write(System::Runtime::Serialization::Formatters::Binary::__BinaryWriter* sout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryObjectString::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sout)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sout);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.BinaryObjectString.Read
void System::Runtime::Serialization::Formatters::Binary::BinaryObjectString::Read(System::Runtime::Serialization::Formatters::Binary::__BinaryParser* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryObjectString::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.BinaryObjectString.Dump
void System::Runtime::Serialization::Formatters::Binary::BinaryObjectString::Dump() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryObjectString::Dump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: BinaryObjectString::Set
// Il2CppName: Set
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryObjectString::*)(int, ::Il2CppString*)>(&BinaryObjectString::Set)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryObjectString*), "Set", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: BinaryObjectString::Write
// Il2CppName: Write
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryObjectString::*)(System::Runtime::Serialization::Formatters::Binary::__BinaryWriter*)>(&BinaryObjectString::Write)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryObjectString*), "Write", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::__BinaryWriter*>()});
  }
};
// Writing MetadataGetter for method: BinaryObjectString::Read
// Il2CppName: Read
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryObjectString::*)(System::Runtime::Serialization::Formatters::Binary::__BinaryParser*)>(&BinaryObjectString::Read)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryObjectString*), "Read", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::__BinaryParser*>()});
  }
};
// Writing MetadataGetter for method: BinaryObjectString::Dump
// Il2CppName: Dump
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryObjectString::*)()>(&BinaryObjectString::Dump)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryObjectString*), "Dump", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BinaryObjectString::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryObjectString::*)()>(&BinaryObjectString::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryObjectString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryObjectString::*)()>(&BinaryObjectString::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryObjectString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.Formatters.Binary.BinaryCrossAppDomainString
#include "System/Runtime/Serialization/Formatters/Binary/BinaryCrossAppDomainString.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.__BinaryParser
#include "System/Runtime/Serialization/Formatters/Binary/__BinaryParser.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.BinaryCrossAppDomainString.Read
void System::Runtime::Serialization::Formatters::Binary::BinaryCrossAppDomainString::Read(System::Runtime::Serialization::Formatters::Binary::__BinaryParser* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryCrossAppDomainString::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.BinaryCrossAppDomainString.Dump
void System::Runtime::Serialization::Formatters::Binary::BinaryCrossAppDomainString::Dump() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryCrossAppDomainString::Dump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: BinaryCrossAppDomainString::Read
// Il2CppName: Read
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryCrossAppDomainString::*)(System::Runtime::Serialization::Formatters::Binary::__BinaryParser*)>(&BinaryCrossAppDomainString::Read)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryCrossAppDomainString*), "Read", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::__BinaryParser*>()});
  }
};
// Writing MetadataGetter for method: BinaryCrossAppDomainString::Dump
// Il2CppName: Dump
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryCrossAppDomainString::*)()>(&BinaryCrossAppDomainString::Dump)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryCrossAppDomainString*), "Dump", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BinaryCrossAppDomainString::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryCrossAppDomainString::*)()>(&BinaryCrossAppDomainString::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryCrossAppDomainString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryCrossAppDomainString::*)()>(&BinaryCrossAppDomainString::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryCrossAppDomainString*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.Formatters.Binary.BinaryCrossAppDomainMap
#include "System/Runtime/Serialization/Formatters/Binary/BinaryCrossAppDomainMap.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.__BinaryParser
#include "System/Runtime/Serialization/Formatters/Binary/__BinaryParser.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.BinaryCrossAppDomainMap.Read
void System::Runtime::Serialization::Formatters::Binary::BinaryCrossAppDomainMap::Read(System::Runtime::Serialization::Formatters::Binary::__BinaryParser* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryCrossAppDomainMap::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.BinaryCrossAppDomainMap.Dump
void System::Runtime::Serialization::Formatters::Binary::BinaryCrossAppDomainMap::Dump() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryCrossAppDomainMap::Dump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: BinaryCrossAppDomainMap::Read
// Il2CppName: Read
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryCrossAppDomainMap::*)(System::Runtime::Serialization::Formatters::Binary::__BinaryParser*)>(&BinaryCrossAppDomainMap::Read)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryCrossAppDomainMap*), "Read", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::__BinaryParser*>()});
  }
};
// Writing MetadataGetter for method: BinaryCrossAppDomainMap::Dump
// Il2CppName: Dump
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryCrossAppDomainMap::*)()>(&BinaryCrossAppDomainMap::Dump)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryCrossAppDomainMap*), "Dump", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BinaryCrossAppDomainMap::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryCrossAppDomainMap::*)()>(&BinaryCrossAppDomainMap::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryCrossAppDomainMap*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryCrossAppDomainMap::*)()>(&BinaryCrossAppDomainMap::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryCrossAppDomainMap*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.Formatters.Binary.MemberPrimitiveTyped
#include "System/Runtime/Serialization/Formatters/Binary/MemberPrimitiveTyped.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.__BinaryWriter
#include "System/Runtime/Serialization/Formatters/Binary/__BinaryWriter.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.__BinaryParser
#include "System/Runtime/Serialization/Formatters/Binary/__BinaryParser.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.MemberPrimitiveTyped.Set
void System::Runtime::Serialization::Formatters::Binary::MemberPrimitiveTyped::Set(System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE primitiveTypeEnum, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::MemberPrimitiveTyped::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(primitiveTypeEnum), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, primitiveTypeEnum, value);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.MemberPrimitiveTyped.Write
void System::Runtime::Serialization::Formatters::Binary::MemberPrimitiveTyped::Write(System::Runtime::Serialization::Formatters::Binary::__BinaryWriter* sout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::MemberPrimitiveTyped::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sout)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sout);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.MemberPrimitiveTyped.Read
void System::Runtime::Serialization::Formatters::Binary::MemberPrimitiveTyped::Read(System::Runtime::Serialization::Formatters::Binary::__BinaryParser* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::MemberPrimitiveTyped::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.MemberPrimitiveTyped.Dump
void System::Runtime::Serialization::Formatters::Binary::MemberPrimitiveTyped::Dump() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::MemberPrimitiveTyped::Dump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MemberPrimitiveTyped::Set
// Il2CppName: Set
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MemberPrimitiveTyped::*)(System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE, ::Il2CppObject*)>(&MemberPrimitiveTyped::Set)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberPrimitiveTyped*), "Set", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: MemberPrimitiveTyped::Write
// Il2CppName: Write
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MemberPrimitiveTyped::*)(System::Runtime::Serialization::Formatters::Binary::__BinaryWriter*)>(&MemberPrimitiveTyped::Write)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberPrimitiveTyped*), "Write", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::__BinaryWriter*>()});
  }
};
// Writing MetadataGetter for method: MemberPrimitiveTyped::Read
// Il2CppName: Read
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MemberPrimitiveTyped::*)(System::Runtime::Serialization::Formatters::Binary::__BinaryParser*)>(&MemberPrimitiveTyped::Read)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberPrimitiveTyped*), "Read", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::__BinaryParser*>()});
  }
};
// Writing MetadataGetter for method: MemberPrimitiveTyped::Dump
// Il2CppName: Dump
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MemberPrimitiveTyped::*)()>(&MemberPrimitiveTyped::Dump)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberPrimitiveTyped*), "Dump", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MemberPrimitiveTyped::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MemberPrimitiveTyped::*)()>(&MemberPrimitiveTyped::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberPrimitiveTyped*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MemberPrimitiveTyped::*)()>(&MemberPrimitiveTyped::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberPrimitiveTyped*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.Formatters.Binary.BinaryObjectWithMap
#include "System/Runtime/Serialization/Formatters/Binary/BinaryObjectWithMap.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.__BinaryWriter
#include "System/Runtime/Serialization/Formatters/Binary/__BinaryWriter.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.__BinaryParser
#include "System/Runtime/Serialization/Formatters/Binary/__BinaryParser.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.BinaryObjectWithMap.Set
void System::Runtime::Serialization::Formatters::Binary::BinaryObjectWithMap::Set(int objectId, ::Il2CppString* name, int numMembers, ::Array<::Il2CppString*>* memberNames, int assemId) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryObjectWithMap::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectId), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(numMembers), ::il2cpp_utils::ExtractType(memberNames), ::il2cpp_utils::ExtractType(assemId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, objectId, name, numMembers, memberNames, assemId);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.BinaryObjectWithMap.Write
void System::Runtime::Serialization::Formatters::Binary::BinaryObjectWithMap::Write(System::Runtime::Serialization::Formatters::Binary::__BinaryWriter* sout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryObjectWithMap::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sout)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sout);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.BinaryObjectWithMap.Read
void System::Runtime::Serialization::Formatters::Binary::BinaryObjectWithMap::Read(System::Runtime::Serialization::Formatters::Binary::__BinaryParser* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryObjectWithMap::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.BinaryObjectWithMap.Dump
void System::Runtime::Serialization::Formatters::Binary::BinaryObjectWithMap::Dump() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryObjectWithMap::Dump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: BinaryObjectWithMap::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryObjectWithMap::*)(System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum)>(&BinaryObjectWithMap::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryObjectWithMap*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryObjectWithMap::*)(System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum)>(&BinaryObjectWithMap::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryObjectWithMap*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum>()});
  }
};
// Writing MetadataGetter for method: BinaryObjectWithMap::Set
// Il2CppName: Set
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryObjectWithMap::*)(int, ::Il2CppString*, int, ::Array<::Il2CppString*>*, int)>(&BinaryObjectWithMap::Set)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryObjectWithMap*), "Set", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BinaryObjectWithMap::Write
// Il2CppName: Write
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryObjectWithMap::*)(System::Runtime::Serialization::Formatters::Binary::__BinaryWriter*)>(&BinaryObjectWithMap::Write)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryObjectWithMap*), "Write", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::__BinaryWriter*>()});
  }
};
// Writing MetadataGetter for method: BinaryObjectWithMap::Read
// Il2CppName: Read
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryObjectWithMap::*)(System::Runtime::Serialization::Formatters::Binary::__BinaryParser*)>(&BinaryObjectWithMap::Read)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryObjectWithMap*), "Read", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::__BinaryParser*>()});
  }
};
// Writing MetadataGetter for method: BinaryObjectWithMap::Dump
// Il2CppName: Dump
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryObjectWithMap::*)()>(&BinaryObjectWithMap::Dump)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryObjectWithMap*), "Dump", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BinaryObjectWithMap::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryObjectWithMap::*)()>(&BinaryObjectWithMap::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryObjectWithMap*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryObjectWithMap::*)()>(&BinaryObjectWithMap::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryObjectWithMap*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.Formatters.Binary.BinaryObjectWithMapTyped
#include "System/Runtime/Serialization/Formatters/Binary/BinaryObjectWithMapTyped.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.__BinaryWriter
#include "System/Runtime/Serialization/Formatters/Binary/__BinaryWriter.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.__BinaryParser
#include "System/Runtime/Serialization/Formatters/Binary/__BinaryParser.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.BinaryObjectWithMapTyped.Set
void System::Runtime::Serialization::Formatters::Binary::BinaryObjectWithMapTyped::Set(int objectId, ::Il2CppString* name, int numMembers, ::Array<::Il2CppString*>* memberNames, ::Array<System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum>* binaryTypeEnumA, ::Array<::Il2CppObject*>* typeInformationA, ::Array<int>* memberAssemIds, int assemId) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryObjectWithMapTyped::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectId), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(numMembers), ::il2cpp_utils::ExtractType(memberNames), ::il2cpp_utils::ExtractType(binaryTypeEnumA), ::il2cpp_utils::ExtractType(typeInformationA), ::il2cpp_utils::ExtractType(memberAssemIds), ::il2cpp_utils::ExtractType(assemId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, objectId, name, numMembers, memberNames, binaryTypeEnumA, typeInformationA, memberAssemIds, assemId);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.BinaryObjectWithMapTyped.Write
void System::Runtime::Serialization::Formatters::Binary::BinaryObjectWithMapTyped::Write(System::Runtime::Serialization::Formatters::Binary::__BinaryWriter* sout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryObjectWithMapTyped::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sout)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sout);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.BinaryObjectWithMapTyped.Read
void System::Runtime::Serialization::Formatters::Binary::BinaryObjectWithMapTyped::Read(System::Runtime::Serialization::Formatters::Binary::__BinaryParser* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryObjectWithMapTyped::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input);
}
// Writing MetadataGetter for method: BinaryObjectWithMapTyped::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryObjectWithMapTyped::*)(System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum)>(&BinaryObjectWithMapTyped::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryObjectWithMapTyped*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryObjectWithMapTyped::*)(System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum)>(&BinaryObjectWithMapTyped::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryObjectWithMapTyped*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum>()});
  }
};
// Writing MetadataGetter for method: BinaryObjectWithMapTyped::Set
// Il2CppName: Set
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryObjectWithMapTyped::*)(int, ::Il2CppString*, int, ::Array<::Il2CppString*>*, ::Array<System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum>*, ::Array<::Il2CppObject*>*, ::Array<int>*, int)>(&BinaryObjectWithMapTyped::Set)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryObjectWithMapTyped*), "Set", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppObject*>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<int>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BinaryObjectWithMapTyped::Write
// Il2CppName: Write
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryObjectWithMapTyped::*)(System::Runtime::Serialization::Formatters::Binary::__BinaryWriter*)>(&BinaryObjectWithMapTyped::Write)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryObjectWithMapTyped*), "Write", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::__BinaryWriter*>()});
  }
};
// Writing MetadataGetter for method: BinaryObjectWithMapTyped::Read
// Il2CppName: Read
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryObjectWithMapTyped::*)(System::Runtime::Serialization::Formatters::Binary::__BinaryParser*)>(&BinaryObjectWithMapTyped::Read)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryObjectWithMapTyped*), "Read", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::__BinaryParser*>()});
  }
};
// Writing MetadataGetter for method: BinaryObjectWithMapTyped::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryObjectWithMapTyped::*)()>(&BinaryObjectWithMapTyped::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryObjectWithMapTyped*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryObjectWithMapTyped::*)()>(&BinaryObjectWithMapTyped::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryObjectWithMapTyped*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.Formatters.Binary.BinaryArray
#include "System/Runtime/Serialization/Formatters/Binary/BinaryArray.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.__BinaryWriter
#include "System/Runtime/Serialization/Formatters/Binary/__BinaryWriter.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.__BinaryParser
#include "System/Runtime/Serialization/Formatters/Binary/__BinaryParser.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.BinaryArray.Set
void System::Runtime::Serialization::Formatters::Binary::BinaryArray::Set(int objectId, int rank, ::Array<int>* lengthA, ::Array<int>* lowerBoundA, System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum binaryTypeEnum, ::Il2CppObject* typeInformation, System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum binaryArrayTypeEnum, int assemId) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryArray::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(objectId), ::il2cpp_utils::ExtractType(rank), ::il2cpp_utils::ExtractType(lengthA), ::il2cpp_utils::ExtractType(lowerBoundA), ::il2cpp_utils::ExtractType(binaryTypeEnum), ::il2cpp_utils::ExtractType(typeInformation), ::il2cpp_utils::ExtractType(binaryArrayTypeEnum), ::il2cpp_utils::ExtractType(assemId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, objectId, rank, lengthA, lowerBoundA, binaryTypeEnum, typeInformation, binaryArrayTypeEnum, assemId);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.BinaryArray.Write
void System::Runtime::Serialization::Formatters::Binary::BinaryArray::Write(System::Runtime::Serialization::Formatters::Binary::__BinaryWriter* sout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryArray::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sout)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sout);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.BinaryArray.Read
void System::Runtime::Serialization::Formatters::Binary::BinaryArray::Read(System::Runtime::Serialization::Formatters::Binary::__BinaryParser* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryArray::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input);
}
// Writing MetadataGetter for method: BinaryArray::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryArray::*)(System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum)>(&BinaryArray::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryArray*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryArray::*)(System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum)>(&BinaryArray::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryArray*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum>()});
  }
};
// Writing MetadataGetter for method: BinaryArray::Set
// Il2CppName: Set
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryArray::*)(int, int, ::Array<int>*, ::Array<int>*, System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum, ::Il2CppObject*, System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum, int)>(&BinaryArray::Set)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryArray*), "Set", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<int>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<int>*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BinaryArray::Write
// Il2CppName: Write
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryArray::*)(System::Runtime::Serialization::Formatters::Binary::__BinaryWriter*)>(&BinaryArray::Write)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryArray*), "Write", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::__BinaryWriter*>()});
  }
};
// Writing MetadataGetter for method: BinaryArray::Read
// Il2CppName: Read
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryArray::*)(System::Runtime::Serialization::Formatters::Binary::__BinaryParser*)>(&BinaryArray::Read)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryArray*), "Read", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::__BinaryParser*>()});
  }
};
// Writing MetadataGetter for method: BinaryArray::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryArray::*)()>(&BinaryArray::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryArray*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BinaryArray::*)()>(&BinaryArray::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BinaryArray*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.Formatters.Binary.MemberPrimitiveUnTyped
#include "System/Runtime/Serialization/Formatters/Binary/MemberPrimitiveUnTyped.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.__BinaryWriter
#include "System/Runtime/Serialization/Formatters/Binary/__BinaryWriter.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.__BinaryParser
#include "System/Runtime/Serialization/Formatters/Binary/__BinaryParser.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.MemberPrimitiveUnTyped.Set
void System::Runtime::Serialization::Formatters::Binary::MemberPrimitiveUnTyped::Set(System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE typeInformation, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::MemberPrimitiveUnTyped::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeInformation), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, typeInformation, value);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.MemberPrimitiveUnTyped.Set
void System::Runtime::Serialization::Formatters::Binary::MemberPrimitiveUnTyped::Set(System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE typeInformation) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::MemberPrimitiveUnTyped::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeInformation)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, typeInformation);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.MemberPrimitiveUnTyped.Write
void System::Runtime::Serialization::Formatters::Binary::MemberPrimitiveUnTyped::Write(System::Runtime::Serialization::Formatters::Binary::__BinaryWriter* sout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::MemberPrimitiveUnTyped::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sout)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sout);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.MemberPrimitiveUnTyped.Read
void System::Runtime::Serialization::Formatters::Binary::MemberPrimitiveUnTyped::Read(System::Runtime::Serialization::Formatters::Binary::__BinaryParser* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::MemberPrimitiveUnTyped::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.MemberPrimitiveUnTyped.Dump
void System::Runtime::Serialization::Formatters::Binary::MemberPrimitiveUnTyped::Dump() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::MemberPrimitiveUnTyped::Dump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MemberPrimitiveUnTyped::Set
// Il2CppName: Set
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MemberPrimitiveUnTyped::*)(System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE, ::Il2CppObject*)>(&MemberPrimitiveUnTyped::Set)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberPrimitiveUnTyped*), "Set", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: MemberPrimitiveUnTyped::Set
// Il2CppName: Set
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MemberPrimitiveUnTyped::*)(System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE)>(&MemberPrimitiveUnTyped::Set)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberPrimitiveUnTyped*), "Set", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE>()});
  }
};
// Writing MetadataGetter for method: MemberPrimitiveUnTyped::Write
// Il2CppName: Write
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MemberPrimitiveUnTyped::*)(System::Runtime::Serialization::Formatters::Binary::__BinaryWriter*)>(&MemberPrimitiveUnTyped::Write)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberPrimitiveUnTyped*), "Write", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::__BinaryWriter*>()});
  }
};
// Writing MetadataGetter for method: MemberPrimitiveUnTyped::Read
// Il2CppName: Read
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MemberPrimitiveUnTyped::*)(System::Runtime::Serialization::Formatters::Binary::__BinaryParser*)>(&MemberPrimitiveUnTyped::Read)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberPrimitiveUnTyped*), "Read", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::__BinaryParser*>()});
  }
};
// Writing MetadataGetter for method: MemberPrimitiveUnTyped::Dump
// Il2CppName: Dump
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MemberPrimitiveUnTyped::*)()>(&MemberPrimitiveUnTyped::Dump)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberPrimitiveUnTyped*), "Dump", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MemberPrimitiveUnTyped::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MemberPrimitiveUnTyped::*)()>(&MemberPrimitiveUnTyped::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberPrimitiveUnTyped*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MemberPrimitiveUnTyped::*)()>(&MemberPrimitiveUnTyped::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberPrimitiveUnTyped*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.Formatters.Binary.MemberReference
#include "System/Runtime/Serialization/Formatters/Binary/MemberReference.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.__BinaryWriter
#include "System/Runtime/Serialization/Formatters/Binary/__BinaryWriter.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.__BinaryParser
#include "System/Runtime/Serialization/Formatters/Binary/__BinaryParser.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.MemberReference.Set
void System::Runtime::Serialization::Formatters::Binary::MemberReference::Set(int idRef) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::MemberReference::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idRef)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idRef);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.MemberReference.Write
void System::Runtime::Serialization::Formatters::Binary::MemberReference::Write(System::Runtime::Serialization::Formatters::Binary::__BinaryWriter* sout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::MemberReference::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sout)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sout);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.MemberReference.Read
void System::Runtime::Serialization::Formatters::Binary::MemberReference::Read(System::Runtime::Serialization::Formatters::Binary::__BinaryParser* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::MemberReference::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.MemberReference.Dump
void System::Runtime::Serialization::Formatters::Binary::MemberReference::Dump() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::MemberReference::Dump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MemberReference::Set
// Il2CppName: Set
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MemberReference::*)(int)>(&MemberReference::Set)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberReference*), "Set", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MemberReference::Write
// Il2CppName: Write
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MemberReference::*)(System::Runtime::Serialization::Formatters::Binary::__BinaryWriter*)>(&MemberReference::Write)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberReference*), "Write", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::__BinaryWriter*>()});
  }
};
// Writing MetadataGetter for method: MemberReference::Read
// Il2CppName: Read
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MemberReference::*)(System::Runtime::Serialization::Formatters::Binary::__BinaryParser*)>(&MemberReference::Read)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberReference*), "Read", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::__BinaryParser*>()});
  }
};
// Writing MetadataGetter for method: MemberReference::Dump
// Il2CppName: Dump
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MemberReference::*)()>(&MemberReference::Dump)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberReference*), "Dump", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MemberReference::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MemberReference::*)()>(&MemberReference::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberReference*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MemberReference::*)()>(&MemberReference::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MemberReference*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.Formatters.Binary.ObjectNull
#include "System/Runtime/Serialization/Formatters/Binary/ObjectNull.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.__BinaryWriter
#include "System/Runtime/Serialization/Formatters/Binary/__BinaryWriter.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.__BinaryParser
#include "System/Runtime/Serialization/Formatters/Binary/__BinaryParser.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum
#include "System/Runtime/Serialization/Formatters/Binary/BinaryHeaderEnum.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.ObjectNull.SetNullCount
void System::Runtime::Serialization::Formatters::Binary::ObjectNull::SetNullCount(int nullCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::ObjectNull::SetNullCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNullCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nullCount)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, nullCount);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.ObjectNull.Write
void System::Runtime::Serialization::Formatters::Binary::ObjectNull::Write(System::Runtime::Serialization::Formatters::Binary::__BinaryWriter* sout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::ObjectNull::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sout)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sout);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.ObjectNull.Read
void System::Runtime::Serialization::Formatters::Binary::ObjectNull::Read(System::Runtime::Serialization::Formatters::Binary::__BinaryParser* input, System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum binaryHeaderEnum) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::ObjectNull::Read");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(binaryHeaderEnum)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, binaryHeaderEnum);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.ObjectNull.Dump
void System::Runtime::Serialization::Formatters::Binary::ObjectNull::Dump() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::ObjectNull::Dump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: ObjectNull::SetNullCount
// Il2CppName: SetNullCount
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectNull::*)(int)>(&ObjectNull::SetNullCount)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectNull*), "SetNullCount", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ObjectNull::Write
// Il2CppName: Write
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectNull::*)(System::Runtime::Serialization::Formatters::Binary::__BinaryWriter*)>(&ObjectNull::Write)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectNull*), "Write", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::__BinaryWriter*>()});
  }
};
// Writing MetadataGetter for method: ObjectNull::Read
// Il2CppName: Read
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectNull::*)(System::Runtime::Serialization::Formatters::Binary::__BinaryParser*, System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum)>(&ObjectNull::Read)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectNull*), "Read", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::__BinaryParser*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum>()});
  }
};
// Writing MetadataGetter for method: ObjectNull::Dump
// Il2CppName: Dump
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectNull::*)()>(&ObjectNull::Dump)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectNull*), "Dump", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ObjectNull::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectNull::*)()>(&ObjectNull::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectNull*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectNull::*)()>(&ObjectNull::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectNull*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.Formatters.Binary.MessageEnd
#include "System/Runtime/Serialization/Formatters/Binary/MessageEnd.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.__BinaryWriter
#include "System/Runtime/Serialization/Formatters/Binary/__BinaryWriter.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.__BinaryParser
#include "System/Runtime/Serialization/Formatters/Binary/__BinaryParser.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.MessageEnd.Write
void System::Runtime::Serialization::Formatters::Binary::MessageEnd::Write(System::Runtime::Serialization::Formatters::Binary::__BinaryWriter* sout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::MessageEnd::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sout)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sout);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.MessageEnd.Read
void System::Runtime::Serialization::Formatters::Binary::MessageEnd::Read(System::Runtime::Serialization::Formatters::Binary::__BinaryParser* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::MessageEnd::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.MessageEnd.Dump
void System::Runtime::Serialization::Formatters::Binary::MessageEnd::Dump() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::MessageEnd::Dump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.MessageEnd.Dump
void System::Runtime::Serialization::Formatters::Binary::MessageEnd::Dump(System::IO::Stream* sout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::MessageEnd::Dump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sout)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sout);
}
// Writing MetadataGetter for method: MessageEnd::Write
// Il2CppName: Write
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageEnd::*)(System::Runtime::Serialization::Formatters::Binary::__BinaryWriter*)>(&MessageEnd::Write)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageEnd*), "Write", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::__BinaryWriter*>()});
  }
};
// Writing MetadataGetter for method: MessageEnd::Read
// Il2CppName: Read
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageEnd::*)(System::Runtime::Serialization::Formatters::Binary::__BinaryParser*)>(&MessageEnd::Read)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageEnd*), "Read", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::__BinaryParser*>()});
  }
};
// Writing MetadataGetter for method: MessageEnd::Dump
// Il2CppName: Dump
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageEnd::*)()>(&MessageEnd::Dump)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageEnd*), "Dump", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MessageEnd::Dump
// Il2CppName: Dump
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageEnd::*)(System::IO::Stream*)>(&MessageEnd::Dump)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageEnd*), "Dump", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>()});
  }
};
// Writing MetadataGetter for method: MessageEnd::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageEnd::*)()>(&MessageEnd::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageEnd*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MessageEnd::*)()>(&MessageEnd::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MessageEnd*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.Formatters.Binary.ObjectMap
#include "System/Runtime/Serialization/Formatters/Binary/ObjectMap.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.ReadObjectInfo
#include "System/Runtime/Serialization/Formatters/Binary/ReadObjectInfo.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.ObjectReader
#include "System/Runtime/Serialization/Formatters/Binary/ObjectReader.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.BinaryAssemblyInfo
#include "System/Runtime/Serialization/Formatters/Binary/BinaryAssemblyInfo.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.SizedArray
#include "System/Runtime/Serialization/Formatters/Binary/SizedArray.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.ObjectMap.CreateObjectInfo
System::Runtime::Serialization::Formatters::Binary::ReadObjectInfo* System::Runtime::Serialization::Formatters::Binary::ObjectMap::CreateObjectInfo(System::Runtime::Serialization::SerializationInfo*& si, ::Array<::Il2CppObject*>*& memberData) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::ObjectMap::CreateObjectInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateObjectInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(si), ::il2cpp_utils::ExtractType(memberData)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Serialization::Formatters::Binary::ReadObjectInfo*, false>(this, ___internal__method, si, memberData);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.ObjectMap.Create
System::Runtime::Serialization::Formatters::Binary::ObjectMap* System::Runtime::Serialization::Formatters::Binary::ObjectMap::Create(::Il2CppString* name, System::Type* objectType, ::Array<::Il2CppString*>* memberNames, System::Runtime::Serialization::Formatters::Binary::ObjectReader* objectReader, int objectId, System::Runtime::Serialization::Formatters::Binary::BinaryAssemblyInfo* assemblyInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::ObjectMap::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization.Formatters.Binary", "ObjectMap", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(objectType), ::il2cpp_utils::ExtractType(memberNames), ::il2cpp_utils::ExtractType(objectReader), ::il2cpp_utils::ExtractType(objectId), ::il2cpp_utils::ExtractType(assemblyInfo)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Serialization::Formatters::Binary::ObjectMap*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, objectType, memberNames, objectReader, objectId, assemblyInfo);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.ObjectMap.Create
System::Runtime::Serialization::Formatters::Binary::ObjectMap* System::Runtime::Serialization::Formatters::Binary::ObjectMap::Create(::Il2CppString* name, ::Array<::Il2CppString*>* memberNames, ::Array<System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum>* binaryTypeEnumA, ::Array<::Il2CppObject*>* typeInformationA, ::Array<int>* memberAssemIds, System::Runtime::Serialization::Formatters::Binary::ObjectReader* objectReader, int objectId, System::Runtime::Serialization::Formatters::Binary::BinaryAssemblyInfo* assemblyInfo, System::Runtime::Serialization::Formatters::Binary::SizedArray* assemIdToAssemblyTable) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::ObjectMap::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization.Formatters.Binary", "ObjectMap", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(memberNames), ::il2cpp_utils::ExtractType(binaryTypeEnumA), ::il2cpp_utils::ExtractType(typeInformationA), ::il2cpp_utils::ExtractType(memberAssemIds), ::il2cpp_utils::ExtractType(objectReader), ::il2cpp_utils::ExtractType(objectId), ::il2cpp_utils::ExtractType(assemblyInfo), ::il2cpp_utils::ExtractType(assemIdToAssemblyTable)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Serialization::Formatters::Binary::ObjectMap*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, memberNames, binaryTypeEnumA, typeInformationA, memberAssemIds, objectReader, objectId, assemblyInfo, assemIdToAssemblyTable);
}
// Writing MetadataGetter for method: ObjectMap::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectMap::*)(::Il2CppString*, System::Type*, ::Array<::Il2CppString*>*, System::Runtime::Serialization::Formatters::Binary::ObjectReader*, int, System::Runtime::Serialization::Formatters::Binary::BinaryAssemblyInfo*)>(&ObjectMap::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectMap*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Type*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::ObjectReader*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::BinaryAssemblyInfo*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectMap::*)(::Il2CppString*, System::Type*, ::Array<::Il2CppString*>*, System::Runtime::Serialization::Formatters::Binary::ObjectReader*, int, System::Runtime::Serialization::Formatters::Binary::BinaryAssemblyInfo*)>(&ObjectMap::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectMap*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Type*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::ObjectReader*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::BinaryAssemblyInfo*>()});
  }
};
// Writing MetadataGetter for method: ObjectMap::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectMap::*)(::Il2CppString*, ::Array<::Il2CppString*>*, ::Array<System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum>*, ::Array<::Il2CppObject*>*, ::Array<int>*, System::Runtime::Serialization::Formatters::Binary::ObjectReader*, int, System::Runtime::Serialization::Formatters::Binary::BinaryAssemblyInfo*, System::Runtime::Serialization::Formatters::Binary::SizedArray*)>(&ObjectMap::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectMap*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppObject*>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<int>*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::ObjectReader*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::BinaryAssemblyInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::SizedArray*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectMap::*)(::Il2CppString*, ::Array<::Il2CppString*>*, ::Array<System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum>*, ::Array<::Il2CppObject*>*, ::Array<int>*, System::Runtime::Serialization::Formatters::Binary::ObjectReader*, int, System::Runtime::Serialization::Formatters::Binary::BinaryAssemblyInfo*, System::Runtime::Serialization::Formatters::Binary::SizedArray*)>(&ObjectMap::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectMap*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppObject*>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<int>*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::ObjectReader*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::BinaryAssemblyInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::SizedArray*>()});
  }
};
// Writing MetadataGetter for method: ObjectMap::CreateObjectInfo
// Il2CppName: CreateObjectInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Serialization::Formatters::Binary::ReadObjectInfo* (ObjectMap::*)(System::Runtime::Serialization::SerializationInfo*&, ::Array<::Il2CppObject*>*&)>(&ObjectMap::CreateObjectInfo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectMap*), "CreateObjectInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*&>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppObject*>*&>()});
  }
};
// Writing MetadataGetter for method: ObjectMap::Create
// Il2CppName: Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Serialization::Formatters::Binary::ObjectMap* (*)(::Il2CppString*, System::Type*, ::Array<::Il2CppString*>*, System::Runtime::Serialization::Formatters::Binary::ObjectReader*, int, System::Runtime::Serialization::Formatters::Binary::BinaryAssemblyInfo*)>(&ObjectMap::Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectMap*), "Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Type*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::ObjectReader*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::BinaryAssemblyInfo*>()});
  }
};
// Writing MetadataGetter for method: ObjectMap::Create
// Il2CppName: Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Serialization::Formatters::Binary::ObjectMap* (*)(::Il2CppString*, ::Array<::Il2CppString*>*, ::Array<System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum>*, ::Array<::Il2CppObject*>*, ::Array<int>*, System::Runtime::Serialization::Formatters::Binary::ObjectReader*, int, System::Runtime::Serialization::Formatters::Binary::BinaryAssemblyInfo*, System::Runtime::Serialization::Formatters::Binary::SizedArray*)>(&ObjectMap::Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectMap*), "Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppObject*>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<int>*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::ObjectReader*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::BinaryAssemblyInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::SizedArray*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.Formatters.Binary.ObjectProgress
#include "System/Runtime/Serialization/Formatters/Binary/ObjectProgress.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Runtime.Serialization.Formatters.Binary.ParseRecord
#include "System/Runtime/Serialization/Formatters/Binary/ParseRecord.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int32 opRecordIdCount
int System::Runtime::Serialization::Formatters::Binary::ObjectProgress::_get_opRecordIdCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::ObjectProgress::_get_opRecordIdCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Runtime.Serialization.Formatters.Binary", "ObjectProgress", "opRecordIdCount"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 opRecordIdCount
void System::Runtime::Serialization::Formatters::Binary::ObjectProgress::_set_opRecordIdCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::ObjectProgress::_set_opRecordIdCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "ObjectProgress", "opRecordIdCount", value));
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.ObjectProgress.Init
void System::Runtime::Serialization::Formatters::Binary::ObjectProgress::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::ObjectProgress::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.ObjectProgress.ArrayCountIncrement
void System::Runtime::Serialization::Formatters::Binary::ObjectProgress::ArrayCountIncrement(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::ObjectProgress::ArrayCountIncrement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ArrayCountIncrement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.ObjectProgress.GetNext
bool System::Runtime::Serialization::Formatters::Binary::ObjectProgress::GetNext(System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum& outBinaryTypeEnum, ::Il2CppObject*& outTypeInformation) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::ObjectProgress::GetNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum&>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, outBinaryTypeEnum, outTypeInformation);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.ObjectProgress..cctor
void System::Runtime::Serialization::Formatters::Binary::ObjectProgress::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::ObjectProgress::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization.Formatters.Binary", "ObjectProgress", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: ObjectProgress::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectProgress::*)()>(&ObjectProgress::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectProgress*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ObjectProgress::ArrayCountIncrement
// Il2CppName: ArrayCountIncrement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectProgress::*)(int)>(&ObjectProgress::ArrayCountIncrement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectProgress*), "ArrayCountIncrement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ObjectProgress::GetNext
// Il2CppName: GetNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ObjectProgress::*)(System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum&, ::Il2CppObject*&)>(&ObjectProgress::GetNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectProgress*), "GetNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum&>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()});
  }
};
// Writing MetadataGetter for method: ObjectProgress::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&ObjectProgress::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectProgress*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ObjectProgress::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectProgress::*)()>(&ObjectProgress::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectProgress*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ObjectProgress::*)()>(&ObjectProgress::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ObjectProgress*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Runtime.Serialization.Formatters.Binary.Converter
#include "System/Runtime/Serialization/Formatters/Binary/Converter.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.Array
#include "System/Array.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 primitiveTypeEnumLength
int System::Runtime::Serialization::Formatters::Binary::Converter::_get_primitiveTypeEnumLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_primitiveTypeEnumLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Runtime.Serialization.Formatters.Binary", "Converter", "primitiveTypeEnumLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 primitiveTypeEnumLength
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_primitiveTypeEnumLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_primitiveTypeEnumLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "primitiveTypeEnumLength", value));
}
// Autogenerated static field getter
// Get static field: static private System.Type[] typeA
::Array<System::Type*>* System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeA() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<System::Type*>*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeA"));
}
// Autogenerated static field setter
// Set static field: static private System.Type[] typeA
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeA(::Array<System::Type*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeA", value));
}
// Autogenerated static field getter
// Get static field: static private System.Type[] arrayTypeA
::Array<System::Type*>* System::Runtime::Serialization::Formatters::Binary::Converter::_get_arrayTypeA() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_arrayTypeA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<System::Type*>*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "arrayTypeA"));
}
// Autogenerated static field setter
// Set static field: static private System.Type[] arrayTypeA
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_arrayTypeA(::Array<System::Type*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_arrayTypeA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "arrayTypeA", value));
}
// Autogenerated static field getter
// Get static field: static private System.String[] valueA
::Array<::Il2CppString*>* System::Runtime::Serialization::Formatters::Binary::Converter::_get_valueA() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_valueA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppString*>*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "valueA"));
}
// Autogenerated static field setter
// Set static field: static private System.String[] valueA
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_valueA(::Array<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_valueA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "valueA", value));
}
// Autogenerated static field getter
// Get static field: static private System.TypeCode[] typeCodeA
::Array<System::TypeCode>* System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeCodeA() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeCodeA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<System::TypeCode>*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeCodeA"));
}
// Autogenerated static field setter
// Set static field: static private System.TypeCode[] typeCodeA
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeCodeA(::Array<System::TypeCode>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeCodeA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeCodeA", value));
}
// Autogenerated static field getter
// Get static field: static private System.Runtime.Serialization.Formatters.Binary.InternalPrimitiveTypeE[] codeA
::Array<System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE>* System::Runtime::Serialization::Formatters::Binary::Converter::_get_codeA() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_codeA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE>*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "codeA"));
}
// Autogenerated static field setter
// Set static field: static private System.Runtime.Serialization.Formatters.Binary.InternalPrimitiveTypeE[] codeA
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_codeA(::Array<System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_codeA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "codeA", value));
}
// Autogenerated static field getter
// Get static field: static System.Type typeofISerializable
System::Type* System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofISerializable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofISerializable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofISerializable"));
}
// Autogenerated static field setter
// Set static field: static System.Type typeofISerializable
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofISerializable(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofISerializable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofISerializable", value));
}
// Autogenerated static field getter
// Get static field: static System.Type typeofString
System::Type* System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofString"));
}
// Autogenerated static field setter
// Set static field: static System.Type typeofString
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofString(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofString", value));
}
// Autogenerated static field getter
// Get static field: static System.Type typeofConverter
System::Type* System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofConverter() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofConverter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofConverter"));
}
// Autogenerated static field setter
// Set static field: static System.Type typeofConverter
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofConverter(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofConverter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofConverter", value));
}
// Autogenerated static field getter
// Get static field: static System.Type typeofBoolean
System::Type* System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofBoolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofBoolean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofBoolean"));
}
// Autogenerated static field setter
// Set static field: static System.Type typeofBoolean
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofBoolean(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofBoolean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofBoolean", value));
}
// Autogenerated static field getter
// Get static field: static System.Type typeofByte
System::Type* System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofByte");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofByte"));
}
// Autogenerated static field setter
// Set static field: static System.Type typeofByte
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofByte(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofByte");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofByte", value));
}
// Autogenerated static field getter
// Get static field: static System.Type typeofChar
System::Type* System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofChar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofChar"));
}
// Autogenerated static field setter
// Set static field: static System.Type typeofChar
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofChar(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofChar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofChar", value));
}
// Autogenerated static field getter
// Get static field: static System.Type typeofDecimal
System::Type* System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofDecimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofDecimal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofDecimal"));
}
// Autogenerated static field setter
// Set static field: static System.Type typeofDecimal
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofDecimal(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofDecimal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofDecimal", value));
}
// Autogenerated static field getter
// Get static field: static System.Type typeofDouble
System::Type* System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofDouble");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofDouble"));
}
// Autogenerated static field setter
// Set static field: static System.Type typeofDouble
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofDouble(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofDouble");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofDouble", value));
}
// Autogenerated static field getter
// Get static field: static System.Type typeofInt16
System::Type* System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofInt16() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofInt16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofInt16"));
}
// Autogenerated static field setter
// Set static field: static System.Type typeofInt16
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofInt16(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofInt16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofInt16", value));
}
// Autogenerated static field getter
// Get static field: static System.Type typeofInt32
System::Type* System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofInt32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofInt32"));
}
// Autogenerated static field setter
// Set static field: static System.Type typeofInt32
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofInt32(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofInt32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofInt32", value));
}
// Autogenerated static field getter
// Get static field: static System.Type typeofInt64
System::Type* System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofInt64() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofInt64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofInt64"));
}
// Autogenerated static field setter
// Set static field: static System.Type typeofInt64
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofInt64(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofInt64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofInt64", value));
}
// Autogenerated static field getter
// Get static field: static System.Type typeofSByte
System::Type* System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofSByte() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofSByte");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofSByte"));
}
// Autogenerated static field setter
// Set static field: static System.Type typeofSByte
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofSByte(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofSByte");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofSByte", value));
}
// Autogenerated static field getter
// Get static field: static System.Type typeofSingle
System::Type* System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofSingle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofSingle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofSingle"));
}
// Autogenerated static field setter
// Set static field: static System.Type typeofSingle
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofSingle(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofSingle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofSingle", value));
}
// Autogenerated static field getter
// Get static field: static System.Type typeofTimeSpan
System::Type* System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofTimeSpan() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofTimeSpan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofTimeSpan"));
}
// Autogenerated static field setter
// Set static field: static System.Type typeofTimeSpan
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofTimeSpan(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofTimeSpan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofTimeSpan", value));
}
// Autogenerated static field getter
// Get static field: static System.Type typeofDateTime
System::Type* System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofDateTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofDateTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofDateTime"));
}
// Autogenerated static field setter
// Set static field: static System.Type typeofDateTime
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofDateTime(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofDateTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofDateTime", value));
}
// Autogenerated static field getter
// Get static field: static System.Type typeofUInt16
System::Type* System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofUInt16() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofUInt16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofUInt16"));
}
// Autogenerated static field setter
// Set static field: static System.Type typeofUInt16
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofUInt16(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofUInt16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofUInt16", value));
}
// Autogenerated static field getter
// Get static field: static System.Type typeofUInt32
System::Type* System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofUInt32() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofUInt32");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofUInt32"));
}
// Autogenerated static field setter
// Set static field: static System.Type typeofUInt32
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofUInt32(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofUInt32");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofUInt32", value));
}
// Autogenerated static field getter
// Get static field: static System.Type typeofUInt64
System::Type* System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofUInt64() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofUInt64");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofUInt64"));
}
// Autogenerated static field setter
// Set static field: static System.Type typeofUInt64
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofUInt64(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofUInt64");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofUInt64", value));
}
// Autogenerated static field getter
// Get static field: static System.Type typeofObject
System::Type* System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofObject"));
}
// Autogenerated static field setter
// Set static field: static System.Type typeofObject
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofObject(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofObject", value));
}
// Autogenerated static field getter
// Get static field: static System.Type typeofSystemVoid
System::Type* System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofSystemVoid() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofSystemVoid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofSystemVoid"));
}
// Autogenerated static field setter
// Set static field: static System.Type typeofSystemVoid
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofSystemVoid(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofSystemVoid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofSystemVoid", value));
}
// Autogenerated static field getter
// Get static field: static System.Reflection.Assembly urtAssembly
System::Reflection::Assembly* System::Runtime::Serialization::Formatters::Binary::Converter::_get_urtAssembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_urtAssembly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Reflection::Assembly*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "urtAssembly"));
}
// Autogenerated static field setter
// Set static field: static System.Reflection.Assembly urtAssembly
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_urtAssembly(System::Reflection::Assembly* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_urtAssembly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "urtAssembly", value));
}
// Autogenerated static field getter
// Get static field: static System.String urtAssemblyString
::Il2CppString* System::Runtime::Serialization::Formatters::Binary::Converter::_get_urtAssemblyString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_urtAssemblyString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "urtAssemblyString"));
}
// Autogenerated static field setter
// Set static field: static System.String urtAssemblyString
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_urtAssemblyString(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_urtAssemblyString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "urtAssemblyString", value));
}
// Autogenerated static field getter
// Get static field: static System.Type typeofTypeArray
System::Type* System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofTypeArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofTypeArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofTypeArray"));
}
// Autogenerated static field setter
// Set static field: static System.Type typeofTypeArray
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofTypeArray(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofTypeArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofTypeArray", value));
}
// Autogenerated static field getter
// Get static field: static System.Type typeofObjectArray
System::Type* System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofObjectArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofObjectArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofObjectArray"));
}
// Autogenerated static field setter
// Set static field: static System.Type typeofObjectArray
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofObjectArray(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofObjectArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofObjectArray", value));
}
// Autogenerated static field getter
// Get static field: static System.Type typeofStringArray
System::Type* System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofStringArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofStringArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofStringArray"));
}
// Autogenerated static field setter
// Set static field: static System.Type typeofStringArray
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofStringArray(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofStringArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofStringArray", value));
}
// Autogenerated static field getter
// Get static field: static System.Type typeofBooleanArray
System::Type* System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofBooleanArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofBooleanArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofBooleanArray"));
}
// Autogenerated static field setter
// Set static field: static System.Type typeofBooleanArray
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofBooleanArray(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofBooleanArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofBooleanArray", value));
}
// Autogenerated static field getter
// Get static field: static System.Type typeofByteArray
System::Type* System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofByteArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofByteArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofByteArray"));
}
// Autogenerated static field setter
// Set static field: static System.Type typeofByteArray
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofByteArray(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofByteArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofByteArray", value));
}
// Autogenerated static field getter
// Get static field: static System.Type typeofCharArray
System::Type* System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofCharArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofCharArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofCharArray"));
}
// Autogenerated static field setter
// Set static field: static System.Type typeofCharArray
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofCharArray(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofCharArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofCharArray", value));
}
// Autogenerated static field getter
// Get static field: static System.Type typeofDecimalArray
System::Type* System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofDecimalArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofDecimalArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofDecimalArray"));
}
// Autogenerated static field setter
// Set static field: static System.Type typeofDecimalArray
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofDecimalArray(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofDecimalArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofDecimalArray", value));
}
// Autogenerated static field getter
// Get static field: static System.Type typeofDoubleArray
System::Type* System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofDoubleArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofDoubleArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofDoubleArray"));
}
// Autogenerated static field setter
// Set static field: static System.Type typeofDoubleArray
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofDoubleArray(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofDoubleArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofDoubleArray", value));
}
// Autogenerated static field getter
// Get static field: static System.Type typeofInt16Array
System::Type* System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofInt16Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofInt16Array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofInt16Array"));
}
// Autogenerated static field setter
// Set static field: static System.Type typeofInt16Array
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofInt16Array(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofInt16Array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofInt16Array", value));
}
// Autogenerated static field getter
// Get static field: static System.Type typeofInt32Array
System::Type* System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofInt32Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofInt32Array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofInt32Array"));
}
// Autogenerated static field setter
// Set static field: static System.Type typeofInt32Array
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofInt32Array(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofInt32Array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofInt32Array", value));
}
// Autogenerated static field getter
// Get static field: static System.Type typeofInt64Array
System::Type* System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofInt64Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofInt64Array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofInt64Array"));
}
// Autogenerated static field setter
// Set static field: static System.Type typeofInt64Array
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofInt64Array(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofInt64Array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofInt64Array", value));
}
// Autogenerated static field getter
// Get static field: static System.Type typeofSByteArray
System::Type* System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofSByteArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofSByteArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofSByteArray"));
}
// Autogenerated static field setter
// Set static field: static System.Type typeofSByteArray
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofSByteArray(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofSByteArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofSByteArray", value));
}
// Autogenerated static field getter
// Get static field: static System.Type typeofSingleArray
System::Type* System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofSingleArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofSingleArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofSingleArray"));
}
// Autogenerated static field setter
// Set static field: static System.Type typeofSingleArray
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofSingleArray(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofSingleArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofSingleArray", value));
}
// Autogenerated static field getter
// Get static field: static System.Type typeofTimeSpanArray
System::Type* System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofTimeSpanArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofTimeSpanArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofTimeSpanArray"));
}
// Autogenerated static field setter
// Set static field: static System.Type typeofTimeSpanArray
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofTimeSpanArray(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofTimeSpanArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofTimeSpanArray", value));
}
// Autogenerated static field getter
// Get static field: static System.Type typeofDateTimeArray
System::Type* System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofDateTimeArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofDateTimeArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofDateTimeArray"));
}
// Autogenerated static field setter
// Set static field: static System.Type typeofDateTimeArray
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofDateTimeArray(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofDateTimeArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofDateTimeArray", value));
}
// Autogenerated static field getter
// Get static field: static System.Type typeofUInt16Array
System::Type* System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofUInt16Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofUInt16Array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofUInt16Array"));
}
// Autogenerated static field setter
// Set static field: static System.Type typeofUInt16Array
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofUInt16Array(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofUInt16Array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofUInt16Array", value));
}
// Autogenerated static field getter
// Get static field: static System.Type typeofUInt32Array
System::Type* System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofUInt32Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofUInt32Array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofUInt32Array"));
}
// Autogenerated static field setter
// Set static field: static System.Type typeofUInt32Array
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofUInt32Array(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofUInt32Array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofUInt32Array", value));
}
// Autogenerated static field getter
// Get static field: static System.Type typeofUInt64Array
System::Type* System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofUInt64Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofUInt64Array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofUInt64Array"));
}
// Autogenerated static field setter
// Set static field: static System.Type typeofUInt64Array
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofUInt64Array(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofUInt64Array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofUInt64Array", value));
}
// Autogenerated static field getter
// Get static field: static System.Type typeofMarshalByRefObject
System::Type* System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofMarshalByRefObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_get_typeofMarshalByRefObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Type*>("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofMarshalByRefObject"));
}
// Autogenerated static field setter
// Set static field: static System.Type typeofMarshalByRefObject
void System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofMarshalByRefObject(System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::_set_typeofMarshalByRefObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "Converter", "typeofMarshalByRefObject", value));
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.Converter.ToCode
System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE System::Runtime::Serialization::Formatters::Binary::Converter::ToCode(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::ToCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization.Formatters.Binary", "Converter", "ToCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.Converter.IsWriteAsByteArray
bool System::Runtime::Serialization::Formatters::Binary::Converter::IsWriteAsByteArray(System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE code) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::IsWriteAsByteArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization.Formatters.Binary", "Converter", "IsWriteAsByteArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, code);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.Converter.TypeLength
int System::Runtime::Serialization::Formatters::Binary::Converter::TypeLength(System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE code) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::TypeLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization.Formatters.Binary", "Converter", "TypeLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, code);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.Converter.ToArrayType
System::Type* System::Runtime::Serialization::Formatters::Binary::Converter::ToArrayType(System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE code) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::ToArrayType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization.Formatters.Binary", "Converter", "ToArrayType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, code);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.Converter.InitTypeA
void System::Runtime::Serialization::Formatters::Binary::Converter::InitTypeA() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::InitTypeA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization.Formatters.Binary", "Converter", "InitTypeA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.Converter.InitArrayTypeA
void System::Runtime::Serialization::Formatters::Binary::Converter::InitArrayTypeA() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::InitArrayTypeA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization.Formatters.Binary", "Converter", "InitArrayTypeA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.Converter.ToType
System::Type* System::Runtime::Serialization::Formatters::Binary::Converter::ToType(System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE code) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::ToType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization.Formatters.Binary", "Converter", "ToType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, code);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.Converter.CreatePrimitiveArray
System::Array* System::Runtime::Serialization::Formatters::Binary::Converter::CreatePrimitiveArray(System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE code, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::CreatePrimitiveArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization.Formatters.Binary", "Converter", "CreatePrimitiveArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodThrow<System::Array*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, code, length);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.Converter.IsPrimitiveArray
bool System::Runtime::Serialization::Formatters::Binary::Converter::IsPrimitiveArray(System::Type* type, ::Il2CppObject*& typeInformation) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::IsPrimitiveArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization.Formatters.Binary", "Converter", "IsPrimitiveArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, typeInformation);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.Converter.InitValueA
void System::Runtime::Serialization::Formatters::Binary::Converter::InitValueA() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::InitValueA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization.Formatters.Binary", "Converter", "InitValueA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.Converter.ToComType
::Il2CppString* System::Runtime::Serialization::Formatters::Binary::Converter::ToComType(System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE code) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::ToComType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization.Formatters.Binary", "Converter", "ToComType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, code);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.Converter.InitTypeCodeA
void System::Runtime::Serialization::Formatters::Binary::Converter::InitTypeCodeA() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::InitTypeCodeA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization.Formatters.Binary", "Converter", "InitTypeCodeA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.Converter.ToTypeCode
System::TypeCode System::Runtime::Serialization::Formatters::Binary::Converter::ToTypeCode(System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE code) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::ToTypeCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization.Formatters.Binary", "Converter", "ToTypeCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodThrow<System::TypeCode, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, code);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.Converter.InitCodeA
void System::Runtime::Serialization::Formatters::Binary::Converter::InitCodeA() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::InitCodeA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization.Formatters.Binary", "Converter", "InitCodeA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.Converter.ToPrimitiveTypeEnum
System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE System::Runtime::Serialization::Formatters::Binary::Converter::ToPrimitiveTypeEnum(System::TypeCode typeCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::ToPrimitiveTypeEnum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization.Formatters.Binary", "Converter", "ToPrimitiveTypeEnum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeCode)})));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, typeCode);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.Converter.FromString
::Il2CppObject* System::Runtime::Serialization::Formatters::Binary::Converter::FromString(::Il2CppString* value, System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE code) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::FromString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization.Formatters.Binary", "Converter", "FromString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(code)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value, code);
}
// Autogenerated method: System.Runtime.Serialization.Formatters.Binary.Converter..cctor
void System::Runtime::Serialization::Formatters::Binary::Converter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::Converter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Runtime.Serialization.Formatters.Binary", "Converter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: Converter::ToCode
// Il2CppName: ToCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE (*)(System::Type*)>(&Converter::ToCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Converter*), "ToCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>()});
  }
};
// Writing MetadataGetter for method: Converter::IsWriteAsByteArray
// Il2CppName: IsWriteAsByteArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE)>(&Converter::IsWriteAsByteArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Converter*), "IsWriteAsByteArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE>()});
  }
};
// Writing MetadataGetter for method: Converter::TypeLength
// Il2CppName: TypeLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE)>(&Converter::TypeLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Converter*), "TypeLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE>()});
  }
};
// Writing MetadataGetter for method: Converter::ToArrayType
// Il2CppName: ToArrayType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Type* (*)(System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE)>(&Converter::ToArrayType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Converter*), "ToArrayType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE>()});
  }
};
// Writing MetadataGetter for method: Converter::InitTypeA
// Il2CppName: InitTypeA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Converter::InitTypeA)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Converter*), "InitTypeA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Converter::InitArrayTypeA
// Il2CppName: InitArrayTypeA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Converter::InitArrayTypeA)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Converter*), "InitArrayTypeA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Converter::ToType
// Il2CppName: ToType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Type* (*)(System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE)>(&Converter::ToType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Converter*), "ToType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE>()});
  }
};
// Writing MetadataGetter for method: Converter::CreatePrimitiveArray
// Il2CppName: CreatePrimitiveArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Array* (*)(System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE, int)>(&Converter::CreatePrimitiveArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Converter*), "CreatePrimitiveArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Converter::IsPrimitiveArray
// Il2CppName: IsPrimitiveArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::Type*, ::Il2CppObject*&)>(&Converter::IsPrimitiveArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Converter*), "IsPrimitiveArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Type*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()});
  }
};
// Writing MetadataGetter for method: Converter::InitValueA
// Il2CppName: InitValueA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Converter::InitValueA)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Converter*), "InitValueA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Converter::ToComType
// Il2CppName: ToComType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE)>(&Converter::ToComType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Converter*), "ToComType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE>()});
  }
};
// Writing MetadataGetter for method: Converter::InitTypeCodeA
// Il2CppName: InitTypeCodeA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Converter::InitTypeCodeA)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Converter*), "InitTypeCodeA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Converter::ToTypeCode
// Il2CppName: ToTypeCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::TypeCode (*)(System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE)>(&Converter::ToTypeCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Converter*), "ToTypeCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE>()});
  }
};
// Writing MetadataGetter for method: Converter::InitCodeA
// Il2CppName: InitCodeA
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Converter::InitCodeA)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Converter*), "InitCodeA", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Converter::ToPrimitiveTypeEnum
// Il2CppName: ToPrimitiveTypeEnum
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE (*)(System::TypeCode)>(&Converter::ToPrimitiveTypeEnum)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Converter*), "ToPrimitiveTypeEnum", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::TypeCode>()});
  }
};
// Writing MetadataGetter for method: Converter::FromString
// Il2CppName: FromString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)(::Il2CppString*, System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE)>(&Converter::FromString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Converter*), "FromString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::Formatters::Binary::InternalPrimitiveTypeE>()});
  }
};
// Writing MetadataGetter for method: Converter::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Converter::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Converter*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum
#include "System/Runtime/Serialization/Formatters/Binary/BinaryHeaderEnum.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum SerializedStreamHeader
System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_SerializedStreamHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_SerializedStreamHeader");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum>("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "SerializedStreamHeader"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum SerializedStreamHeader
void System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_SerializedStreamHeader(System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_SerializedStreamHeader");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "SerializedStreamHeader", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum Object
System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum>("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "Object"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum Object
void System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_Object(System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "Object", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum ObjectWithMap
System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_ObjectWithMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_ObjectWithMap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum>("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "ObjectWithMap"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum ObjectWithMap
void System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_ObjectWithMap(System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_ObjectWithMap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "ObjectWithMap", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum ObjectWithMapAssemId
System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_ObjectWithMapAssemId() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_ObjectWithMapAssemId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum>("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "ObjectWithMapAssemId"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum ObjectWithMapAssemId
void System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_ObjectWithMapAssemId(System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_ObjectWithMapAssemId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "ObjectWithMapAssemId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum ObjectWithMapTyped
System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_ObjectWithMapTyped() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_ObjectWithMapTyped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum>("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "ObjectWithMapTyped"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum ObjectWithMapTyped
void System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_ObjectWithMapTyped(System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_ObjectWithMapTyped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "ObjectWithMapTyped", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum ObjectWithMapTypedAssemId
System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_ObjectWithMapTypedAssemId() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_ObjectWithMapTypedAssemId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum>("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "ObjectWithMapTypedAssemId"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum ObjectWithMapTypedAssemId
void System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_ObjectWithMapTypedAssemId(System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_ObjectWithMapTypedAssemId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "ObjectWithMapTypedAssemId", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum ObjectString
System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_ObjectString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_ObjectString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum>("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "ObjectString"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum ObjectString
void System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_ObjectString(System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_ObjectString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "ObjectString", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum Array
System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_Array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum>("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "Array"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum Array
void System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_Array(System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_Array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "Array", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum MemberPrimitiveTyped
System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_MemberPrimitiveTyped() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_MemberPrimitiveTyped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum>("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "MemberPrimitiveTyped"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum MemberPrimitiveTyped
void System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_MemberPrimitiveTyped(System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_MemberPrimitiveTyped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "MemberPrimitiveTyped", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum MemberReference
System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_MemberReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_MemberReference");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum>("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "MemberReference"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum MemberReference
void System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_MemberReference(System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_MemberReference");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "MemberReference", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum ObjectNull
System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_ObjectNull() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_ObjectNull");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum>("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "ObjectNull"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum ObjectNull
void System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_ObjectNull(System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_ObjectNull");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "ObjectNull", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum MessageEnd
System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_MessageEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_MessageEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum>("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "MessageEnd"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum MessageEnd
void System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_MessageEnd(System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_MessageEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "MessageEnd", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum Assembly
System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_Assembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_Assembly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum>("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "Assembly"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum Assembly
void System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_Assembly(System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_Assembly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "Assembly", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum ObjectNullMultiple256
System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_ObjectNullMultiple256() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_ObjectNullMultiple256");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum>("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "ObjectNullMultiple256"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum ObjectNullMultiple256
void System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_ObjectNullMultiple256(System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_ObjectNullMultiple256");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "ObjectNullMultiple256", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum ObjectNullMultiple
System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_ObjectNullMultiple() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_ObjectNullMultiple");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum>("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "ObjectNullMultiple"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum ObjectNullMultiple
void System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_ObjectNullMultiple(System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_ObjectNullMultiple");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "ObjectNullMultiple", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum ArraySinglePrimitive
System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_ArraySinglePrimitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_ArraySinglePrimitive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum>("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "ArraySinglePrimitive"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum ArraySinglePrimitive
void System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_ArraySinglePrimitive(System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_ArraySinglePrimitive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "ArraySinglePrimitive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum ArraySingleObject
System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_ArraySingleObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_ArraySingleObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum>("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "ArraySingleObject"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum ArraySingleObject
void System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_ArraySingleObject(System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_ArraySingleObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "ArraySingleObject", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum ArraySingleString
System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_ArraySingleString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_ArraySingleString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum>("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "ArraySingleString"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum ArraySingleString
void System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_ArraySingleString(System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_ArraySingleString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "ArraySingleString", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum CrossAppDomainMap
System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_CrossAppDomainMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_CrossAppDomainMap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum>("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "CrossAppDomainMap"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum CrossAppDomainMap
void System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_CrossAppDomainMap(System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_CrossAppDomainMap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "CrossAppDomainMap", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum CrossAppDomainString
System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_CrossAppDomainString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_CrossAppDomainString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum>("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "CrossAppDomainString"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum CrossAppDomainString
void System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_CrossAppDomainString(System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_CrossAppDomainString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "CrossAppDomainString", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum CrossAppDomainAssembly
System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_CrossAppDomainAssembly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_CrossAppDomainAssembly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum>("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "CrossAppDomainAssembly"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum CrossAppDomainAssembly
void System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_CrossAppDomainAssembly(System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_CrossAppDomainAssembly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "CrossAppDomainAssembly", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum MethodCall
System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_MethodCall() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_MethodCall");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum>("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "MethodCall"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum MethodCall
void System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_MethodCall(System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_MethodCall");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "MethodCall", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum MethodReturn
System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_MethodReturn() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_get_MethodReturn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum>("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "MethodReturn"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryHeaderEnum MethodReturn
void System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_MethodReturn(System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryHeaderEnum::_set_MethodReturn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "BinaryHeaderEnum", "MethodReturn", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.Formatters.Binary.BinaryTypeEnum
#include "System/Runtime/Serialization/Formatters/Binary/BinaryTypeEnum.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryTypeEnum Primitive
System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum::_get_Primitive() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum::_get_Primitive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum>("System.Runtime.Serialization.Formatters.Binary", "BinaryTypeEnum", "Primitive"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryTypeEnum Primitive
void System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum::_set_Primitive(System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum::_set_Primitive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "BinaryTypeEnum", "Primitive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryTypeEnum String
System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum>("System.Runtime.Serialization.Formatters.Binary", "BinaryTypeEnum", "String"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryTypeEnum String
void System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum::_set_String(System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "BinaryTypeEnum", "String", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryTypeEnum Object
System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum>("System.Runtime.Serialization.Formatters.Binary", "BinaryTypeEnum", "Object"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryTypeEnum Object
void System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum::_set_Object(System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "BinaryTypeEnum", "Object", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryTypeEnum ObjectUrt
System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum::_get_ObjectUrt() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum::_get_ObjectUrt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum>("System.Runtime.Serialization.Formatters.Binary", "BinaryTypeEnum", "ObjectUrt"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryTypeEnum ObjectUrt
void System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum::_set_ObjectUrt(System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum::_set_ObjectUrt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "BinaryTypeEnum", "ObjectUrt", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryTypeEnum ObjectUser
System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum::_get_ObjectUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum::_get_ObjectUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum>("System.Runtime.Serialization.Formatters.Binary", "BinaryTypeEnum", "ObjectUser"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryTypeEnum ObjectUser
void System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum::_set_ObjectUser(System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum::_set_ObjectUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "BinaryTypeEnum", "ObjectUser", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryTypeEnum ObjectArray
System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum::_get_ObjectArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum::_get_ObjectArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum>("System.Runtime.Serialization.Formatters.Binary", "BinaryTypeEnum", "ObjectArray"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryTypeEnum ObjectArray
void System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum::_set_ObjectArray(System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum::_set_ObjectArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "BinaryTypeEnum", "ObjectArray", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryTypeEnum StringArray
System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum::_get_StringArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum::_get_StringArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum>("System.Runtime.Serialization.Formatters.Binary", "BinaryTypeEnum", "StringArray"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryTypeEnum StringArray
void System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum::_set_StringArray(System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum::_set_StringArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "BinaryTypeEnum", "StringArray", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryTypeEnum PrimitiveArray
System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum::_get_PrimitiveArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum::_get_PrimitiveArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum>("System.Runtime.Serialization.Formatters.Binary", "BinaryTypeEnum", "PrimitiveArray"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryTypeEnum PrimitiveArray
void System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum::_set_PrimitiveArray(System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryTypeEnum::_set_PrimitiveArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "BinaryTypeEnum", "PrimitiveArray", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.Formatters.Binary.BinaryArrayTypeEnum
#include "System/Runtime/Serialization/Formatters/Binary/BinaryArrayTypeEnum.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryArrayTypeEnum Single
System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum::_get_Single() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum::_get_Single");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum>("System.Runtime.Serialization.Formatters.Binary", "BinaryArrayTypeEnum", "Single"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryArrayTypeEnum Single
void System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum::_set_Single(System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum::_set_Single");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "BinaryArrayTypeEnum", "Single", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryArrayTypeEnum Jagged
System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum::_get_Jagged() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum::_get_Jagged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum>("System.Runtime.Serialization.Formatters.Binary", "BinaryArrayTypeEnum", "Jagged"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryArrayTypeEnum Jagged
void System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum::_set_Jagged(System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum::_set_Jagged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "BinaryArrayTypeEnum", "Jagged", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryArrayTypeEnum Rectangular
System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum::_get_Rectangular() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum::_get_Rectangular");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum>("System.Runtime.Serialization.Formatters.Binary", "BinaryArrayTypeEnum", "Rectangular"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryArrayTypeEnum Rectangular
void System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum::_set_Rectangular(System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum::_set_Rectangular");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "BinaryArrayTypeEnum", "Rectangular", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryArrayTypeEnum SingleOffset
System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum::_get_SingleOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum::_get_SingleOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum>("System.Runtime.Serialization.Formatters.Binary", "BinaryArrayTypeEnum", "SingleOffset"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryArrayTypeEnum SingleOffset
void System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum::_set_SingleOffset(System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum::_set_SingleOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "BinaryArrayTypeEnum", "SingleOffset", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryArrayTypeEnum JaggedOffset
System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum::_get_JaggedOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum::_get_JaggedOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum>("System.Runtime.Serialization.Formatters.Binary", "BinaryArrayTypeEnum", "JaggedOffset"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryArrayTypeEnum JaggedOffset
void System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum::_set_JaggedOffset(System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum::_set_JaggedOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "BinaryArrayTypeEnum", "JaggedOffset", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryArrayTypeEnum RectangularOffset
System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum::_get_RectangularOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum::_get_RectangularOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum>("System.Runtime.Serialization.Formatters.Binary", "BinaryArrayTypeEnum", "RectangularOffset"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.BinaryArrayTypeEnum RectangularOffset
void System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum::_set_RectangularOffset(System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::BinaryArrayTypeEnum::_set_RectangularOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "BinaryArrayTypeEnum", "RectangularOffset", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.Formatters.Binary.InternalSerializerTypeE
#include "System/Runtime/Serialization/Formatters/Binary/InternalSerializerTypeE.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.InternalSerializerTypeE Soap
System::Runtime::Serialization::Formatters::Binary::InternalSerializerTypeE System::Runtime::Serialization::Formatters::Binary::InternalSerializerTypeE::_get_Soap() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::InternalSerializerTypeE::_get_Soap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::InternalSerializerTypeE>("System.Runtime.Serialization.Formatters.Binary", "InternalSerializerTypeE", "Soap"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.InternalSerializerTypeE Soap
void System::Runtime::Serialization::Formatters::Binary::InternalSerializerTypeE::_set_Soap(System::Runtime::Serialization::Formatters::Binary::InternalSerializerTypeE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::InternalSerializerTypeE::_set_Soap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "InternalSerializerTypeE", "Soap", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.InternalSerializerTypeE Binary
System::Runtime::Serialization::Formatters::Binary::InternalSerializerTypeE System::Runtime::Serialization::Formatters::Binary::InternalSerializerTypeE::_get_Binary() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::InternalSerializerTypeE::_get_Binary");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::InternalSerializerTypeE>("System.Runtime.Serialization.Formatters.Binary", "InternalSerializerTypeE", "Binary"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.InternalSerializerTypeE Binary
void System::Runtime::Serialization::Formatters::Binary::InternalSerializerTypeE::_set_Binary(System::Runtime::Serialization::Formatters::Binary::InternalSerializerTypeE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::InternalSerializerTypeE::_set_Binary");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "InternalSerializerTypeE", "Binary", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Runtime.Serialization.Formatters.Binary.InternalParseTypeE
#include "System/Runtime/Serialization/Formatters/Binary/InternalParseTypeE.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.InternalParseTypeE Empty
System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE>("System.Runtime.Serialization.Formatters.Binary", "InternalParseTypeE", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.InternalParseTypeE Empty
void System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_set_Empty(System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "InternalParseTypeE", "Empty", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.InternalParseTypeE SerializedStreamHeader
System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_get_SerializedStreamHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_get_SerializedStreamHeader");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE>("System.Runtime.Serialization.Formatters.Binary", "InternalParseTypeE", "SerializedStreamHeader"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.InternalParseTypeE SerializedStreamHeader
void System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_set_SerializedStreamHeader(System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_set_SerializedStreamHeader");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "InternalParseTypeE", "SerializedStreamHeader", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.InternalParseTypeE Object
System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE>("System.Runtime.Serialization.Formatters.Binary", "InternalParseTypeE", "Object"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.InternalParseTypeE Object
void System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_set_Object(System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "InternalParseTypeE", "Object", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.InternalParseTypeE Member
System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_get_Member() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_get_Member");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE>("System.Runtime.Serialization.Formatters.Binary", "InternalParseTypeE", "Member"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.InternalParseTypeE Member
void System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_set_Member(System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_set_Member");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "InternalParseTypeE", "Member", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.InternalParseTypeE ObjectEnd
System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_get_ObjectEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_get_ObjectEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE>("System.Runtime.Serialization.Formatters.Binary", "InternalParseTypeE", "ObjectEnd"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.InternalParseTypeE ObjectEnd
void System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_set_ObjectEnd(System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_set_ObjectEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "InternalParseTypeE", "ObjectEnd", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.InternalParseTypeE MemberEnd
System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_get_MemberEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_get_MemberEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE>("System.Runtime.Serialization.Formatters.Binary", "InternalParseTypeE", "MemberEnd"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.InternalParseTypeE MemberEnd
void System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_set_MemberEnd(System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_set_MemberEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "InternalParseTypeE", "MemberEnd", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.InternalParseTypeE Headers
System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_get_Headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_get_Headers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE>("System.Runtime.Serialization.Formatters.Binary", "InternalParseTypeE", "Headers"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.InternalParseTypeE Headers
void System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_set_Headers(System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_set_Headers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "InternalParseTypeE", "Headers", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.InternalParseTypeE HeadersEnd
System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_get_HeadersEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_get_HeadersEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE>("System.Runtime.Serialization.Formatters.Binary", "InternalParseTypeE", "HeadersEnd"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.InternalParseTypeE HeadersEnd
void System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_set_HeadersEnd(System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_set_HeadersEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "InternalParseTypeE", "HeadersEnd", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.InternalParseTypeE SerializedStreamHeaderEnd
System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_get_SerializedStreamHeaderEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_get_SerializedStreamHeaderEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE>("System.Runtime.Serialization.Formatters.Binary", "InternalParseTypeE", "SerializedStreamHeaderEnd"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.InternalParseTypeE SerializedStreamHeaderEnd
void System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_set_SerializedStreamHeaderEnd(System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_set_SerializedStreamHeaderEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "InternalParseTypeE", "SerializedStreamHeaderEnd", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.InternalParseTypeE Envelope
System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_get_Envelope() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_get_Envelope");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE>("System.Runtime.Serialization.Formatters.Binary", "InternalParseTypeE", "Envelope"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.InternalParseTypeE Envelope
void System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_set_Envelope(System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_set_Envelope");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "InternalParseTypeE", "Envelope", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.InternalParseTypeE EnvelopeEnd
System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_get_EnvelopeEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_get_EnvelopeEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE>("System.Runtime.Serialization.Formatters.Binary", "InternalParseTypeE", "EnvelopeEnd"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.InternalParseTypeE EnvelopeEnd
void System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_set_EnvelopeEnd(System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_set_EnvelopeEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "InternalParseTypeE", "EnvelopeEnd", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.InternalParseTypeE Body
System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_get_Body() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_get_Body");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE>("System.Runtime.Serialization.Formatters.Binary", "InternalParseTypeE", "Body"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.InternalParseTypeE Body
void System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_set_Body(System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_set_Body");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "InternalParseTypeE", "Body", value));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.Serialization.Formatters.Binary.InternalParseTypeE BodyEnd
System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_get_BodyEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_get_BodyEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE>("System.Runtime.Serialization.Formatters.Binary", "InternalParseTypeE", "BodyEnd"));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.Serialization.Formatters.Binary.InternalParseTypeE BodyEnd
void System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_set_BodyEnd(System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Runtime::Serialization::Formatters::Binary::InternalParseTypeE::_set_BodyEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Runtime.Serialization.Formatters.Binary", "InternalParseTypeE", "BodyEnd", value));
}
