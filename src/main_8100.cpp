// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.WebConnectionStream/<>c__DisplayClass76_0
#include "System/Net/WebConnectionStream_--c__DisplayClass76_0.hpp"
// Including type: System.Net.SimpleAsyncResult
#include "System/Net/SimpleAsyncResult.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.WebConnectionStream/<>c__DisplayClass76_0.<SetHeadersAsync>b__0
void System::Net::WebConnectionStream::$$c__DisplayClass76_0::$SetHeadersAsync$b__0(System::IAsyncResult* r) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::$$c__DisplayClass76_0::<SetHeadersAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetHeadersAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, r);
}
// Writing MetadataGetter for method: WebConnectionStream::$$c__DisplayClass76_0::$SetHeadersAsync$b__0
// Il2CppName: <SetHeadersAsync>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WebConnectionStream::$$c__DisplayClass76_0::*)(System::IAsyncResult*)>(&WebConnectionStream::$$c__DisplayClass76_0::$SetHeadersAsync$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WebConnectionStream::$$c__DisplayClass76_0*), "<SetHeadersAsync>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Writing MetadataGetter for method: WebConnectionStream::$$c__DisplayClass76_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WebConnectionStream::$$c__DisplayClass76_0::*)()>(&WebConnectionStream::$$c__DisplayClass76_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WebConnectionStream::$$c__DisplayClass76_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WebConnectionStream::$$c__DisplayClass76_0::*)()>(&WebConnectionStream::$$c__DisplayClass76_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WebConnectionStream::$$c__DisplayClass76_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.WebConnectionStream/<>c__DisplayClass80_0
#include "System/Net/WebConnectionStream_--c__DisplayClass80_0.hpp"
// Including type: System.Net.SimpleAsyncResult
#include "System/Net/SimpleAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.WebConnectionStream/<>c__DisplayClass80_0.<WriteRequestAsync>b__0
void System::Net::WebConnectionStream::$$c__DisplayClass80_0::$WriteRequestAsync$b__0(System::Net::SimpleAsyncResult* inner) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::$$c__DisplayClass80_0::<WriteRequestAsync>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<WriteRequestAsync>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inner)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, inner);
}
// Autogenerated method: System.Net.WebConnectionStream/<>c__DisplayClass80_0.<WriteRequestAsync>b__1
void System::Net::WebConnectionStream::$$c__DisplayClass80_0::$WriteRequestAsync$b__1(System::IAsyncResult* r) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::WebConnectionStream::$$c__DisplayClass80_0::<WriteRequestAsync>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<WriteRequestAsync>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(r)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, r);
}
// Writing MetadataGetter for method: WebConnectionStream::$$c__DisplayClass80_0::$WriteRequestAsync$b__0
// Il2CppName: <WriteRequestAsync>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WebConnectionStream::$$c__DisplayClass80_0::*)(System::Net::SimpleAsyncResult*)>(&WebConnectionStream::$$c__DisplayClass80_0::$WriteRequestAsync$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WebConnectionStream::$$c__DisplayClass80_0*), "<WriteRequestAsync>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::SimpleAsyncResult*>()});
  }
};
// Writing MetadataGetter for method: WebConnectionStream::$$c__DisplayClass80_0::$WriteRequestAsync$b__1
// Il2CppName: <WriteRequestAsync>b__1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WebConnectionStream::$$c__DisplayClass80_0::*)(System::IAsyncResult*)>(&WebConnectionStream::$$c__DisplayClass80_0::$WriteRequestAsync$b__1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WebConnectionStream::$$c__DisplayClass80_0*), "<WriteRequestAsync>b__1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Writing MetadataGetter for method: WebConnectionStream::$$c__DisplayClass80_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WebConnectionStream::$$c__DisplayClass80_0::*)()>(&WebConnectionStream::$$c__DisplayClass80_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WebConnectionStream::$$c__DisplayClass80_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WebConnectionStream::$$c__DisplayClass80_0::*)()>(&WebConnectionStream::$$c__DisplayClass80_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WebConnectionStream::$$c__DisplayClass80_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Mail.MailAddress
#include "System/Net/Mail/MailAddress.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
// Including type: System.FormatException
#include "System/FormatException.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Mail.MailAddress.ParseAddress
void System::Net::Mail::MailAddress::ParseAddress(::Il2CppString* address) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Mail::MailAddress::ParseAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, address);
}
// Autogenerated method: System.Net.Mail.MailAddress.get_Address
::Il2CppString* System::Net::Mail::MailAddress::get_Address() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Mail::MailAddress::get_Address");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Address", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Mail.MailAddress.get_DisplayName
::Il2CppString* System::Net::Mail::MailAddress::get_DisplayName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Mail::MailAddress::get_DisplayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Mail.MailAddress.CreateFormatException
System::FormatException* System::Net::Mail::MailAddress::CreateFormatException() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Mail::MailAddress::CreateFormatException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Mail", "MailAddress", "CreateFormatException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::FormatException*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Mail.MailAddress.Equals
bool System::Net::Mail::MailAddress::Equals(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Mail::MailAddress::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Mail.MailAddress.GetHashCode
int System::Net::Mail::MailAddress::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Mail::MailAddress::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Mail.MailAddress.ToString
::Il2CppString* System::Net::Mail::MailAddress::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Mail::MailAddress::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MailAddress::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MailAddress::*)(::Il2CppString*)>(&MailAddress::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MailAddress*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MailAddress::*)(::Il2CppString*)>(&MailAddress::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MailAddress*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: MailAddress::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MailAddress::*)(::Il2CppString*, ::Il2CppString*)>(&MailAddress::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MailAddress*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MailAddress::*)(::Il2CppString*, ::Il2CppString*)>(&MailAddress::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MailAddress*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: MailAddress::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MailAddress::*)(::Il2CppString*, ::Il2CppString*, System::Text::Encoding*)>(&MailAddress::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MailAddress*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Text::Encoding*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MailAddress::*)(::Il2CppString*, ::Il2CppString*, System::Text::Encoding*)>(&MailAddress::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MailAddress*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Text::Encoding*>()});
  }
};
// Writing MetadataGetter for method: MailAddress::ParseAddress
// Il2CppName: ParseAddress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MailAddress::*)(::Il2CppString*)>(&MailAddress::ParseAddress)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MailAddress*), "ParseAddress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: MailAddress::get_Address
// Il2CppName: get_Address
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (MailAddress::*)()>(&MailAddress::get_Address)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MailAddress*), "get_Address", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MailAddress::get_DisplayName
// Il2CppName: get_DisplayName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (MailAddress::*)()>(&MailAddress::get_DisplayName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MailAddress*), "get_DisplayName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MailAddress::CreateFormatException
// Il2CppName: CreateFormatException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::FormatException* (*)()>(&MailAddress::CreateFormatException)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MailAddress*), "CreateFormatException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MailAddress::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MailAddress::*)(::Il2CppObject*)>(&MailAddress::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MailAddress*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: MailAddress::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MailAddress::*)()>(&MailAddress::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MailAddress*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MailAddress::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (MailAddress::*)()>(&MailAddress::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MailAddress*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Sockets.SocketException
#include "System/Net/Sockets/SocketException.hpp"
// Including type: System.Net.EndPoint
#include "System/Net/EndPoint.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Sockets.SocketException.WSAGetLastError_internal
int System::Net::Sockets::SocketException::WSAGetLastError_internal() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketException::WSAGetLastError_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "SocketException", "WSAGetLastError_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Sockets.SocketException.get_SocketErrorCode
System::Net::Sockets::SocketError System::Net::Sockets::SocketException::get_SocketErrorCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketException::get_SocketErrorCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SocketErrorCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Sockets::SocketError, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.SocketException.get_Message
::Il2CppString* System::Net::Sockets::SocketException::get_Message() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketException::get_Message");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: SocketException::WSAGetLastError_internal
// Il2CppName: WSAGetLastError_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&SocketException::WSAGetLastError_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketException*), "WSAGetLastError_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SocketException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketException::*)(System::Net::Sockets::SocketError)>(&SocketException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketError>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketException::*)(System::Net::Sockets::SocketError)>(&SocketException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketError>()});
  }
};
// Writing MetadataGetter for method: SocketException::get_SocketErrorCode
// Il2CppName: get_SocketErrorCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::Sockets::SocketError (SocketException::*)()>(&SocketException::get_SocketErrorCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketException*), "get_SocketErrorCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SocketException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketException::*)()>(&SocketException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketException::*)()>(&SocketException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SocketException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketException::*)(int, ::Il2CppString*)>(&SocketException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketException::*)(int, ::Il2CppString*)>(&SocketException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: SocketException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketException::*)(int)>(&SocketException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketException::*)(int)>(&SocketException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SocketException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketException::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&SocketException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketException::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&SocketException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: SocketException::get_Message
// Il2CppName: get_Message
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (SocketException::*)()>(&SocketException::get_Message)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketException*), "get_Message", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Sockets.AddressFamily
#include "System/Net/Sockets/AddressFamily.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.AddressFamily Unknown
System::Net::Sockets::AddressFamily System::Net::Sockets::AddressFamily::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::AddressFamily>("System.Net.Sockets", "AddressFamily", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.AddressFamily Unknown
void System::Net::Sockets::AddressFamily::_set_Unknown(System::Net::Sockets::AddressFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "AddressFamily", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.AddressFamily Unspecified
System::Net::Sockets::AddressFamily System::Net::Sockets::AddressFamily::_get_Unspecified() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_get_Unspecified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::AddressFamily>("System.Net.Sockets", "AddressFamily", "Unspecified"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.AddressFamily Unspecified
void System::Net::Sockets::AddressFamily::_set_Unspecified(System::Net::Sockets::AddressFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_set_Unspecified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "AddressFamily", "Unspecified", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.AddressFamily Unix
System::Net::Sockets::AddressFamily System::Net::Sockets::AddressFamily::_get_Unix() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_get_Unix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::AddressFamily>("System.Net.Sockets", "AddressFamily", "Unix"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.AddressFamily Unix
void System::Net::Sockets::AddressFamily::_set_Unix(System::Net::Sockets::AddressFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_set_Unix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "AddressFamily", "Unix", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.AddressFamily InterNetwork
System::Net::Sockets::AddressFamily System::Net::Sockets::AddressFamily::_get_InterNetwork() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_get_InterNetwork");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::AddressFamily>("System.Net.Sockets", "AddressFamily", "InterNetwork"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.AddressFamily InterNetwork
void System::Net::Sockets::AddressFamily::_set_InterNetwork(System::Net::Sockets::AddressFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_set_InterNetwork");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "AddressFamily", "InterNetwork", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.AddressFamily ImpLink
System::Net::Sockets::AddressFamily System::Net::Sockets::AddressFamily::_get_ImpLink() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_get_ImpLink");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::AddressFamily>("System.Net.Sockets", "AddressFamily", "ImpLink"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.AddressFamily ImpLink
void System::Net::Sockets::AddressFamily::_set_ImpLink(System::Net::Sockets::AddressFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_set_ImpLink");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "AddressFamily", "ImpLink", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.AddressFamily Pup
System::Net::Sockets::AddressFamily System::Net::Sockets::AddressFamily::_get_Pup() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_get_Pup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::AddressFamily>("System.Net.Sockets", "AddressFamily", "Pup"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.AddressFamily Pup
void System::Net::Sockets::AddressFamily::_set_Pup(System::Net::Sockets::AddressFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_set_Pup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "AddressFamily", "Pup", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.AddressFamily Chaos
System::Net::Sockets::AddressFamily System::Net::Sockets::AddressFamily::_get_Chaos() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_get_Chaos");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::AddressFamily>("System.Net.Sockets", "AddressFamily", "Chaos"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.AddressFamily Chaos
void System::Net::Sockets::AddressFamily::_set_Chaos(System::Net::Sockets::AddressFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_set_Chaos");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "AddressFamily", "Chaos", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.AddressFamily NS
System::Net::Sockets::AddressFamily System::Net::Sockets::AddressFamily::_get_NS() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_get_NS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::AddressFamily>("System.Net.Sockets", "AddressFamily", "NS"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.AddressFamily NS
void System::Net::Sockets::AddressFamily::_set_NS(System::Net::Sockets::AddressFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_set_NS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "AddressFamily", "NS", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.AddressFamily Ipx
System::Net::Sockets::AddressFamily System::Net::Sockets::AddressFamily::_get_Ipx() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_get_Ipx");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::AddressFamily>("System.Net.Sockets", "AddressFamily", "Ipx"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.AddressFamily Ipx
void System::Net::Sockets::AddressFamily::_set_Ipx(System::Net::Sockets::AddressFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_set_Ipx");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "AddressFamily", "Ipx", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.AddressFamily Iso
System::Net::Sockets::AddressFamily System::Net::Sockets::AddressFamily::_get_Iso() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_get_Iso");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::AddressFamily>("System.Net.Sockets", "AddressFamily", "Iso"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.AddressFamily Iso
void System::Net::Sockets::AddressFamily::_set_Iso(System::Net::Sockets::AddressFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_set_Iso");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "AddressFamily", "Iso", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.AddressFamily Osi
System::Net::Sockets::AddressFamily System::Net::Sockets::AddressFamily::_get_Osi() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_get_Osi");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::AddressFamily>("System.Net.Sockets", "AddressFamily", "Osi"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.AddressFamily Osi
void System::Net::Sockets::AddressFamily::_set_Osi(System::Net::Sockets::AddressFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_set_Osi");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "AddressFamily", "Osi", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.AddressFamily Ecma
System::Net::Sockets::AddressFamily System::Net::Sockets::AddressFamily::_get_Ecma() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_get_Ecma");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::AddressFamily>("System.Net.Sockets", "AddressFamily", "Ecma"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.AddressFamily Ecma
void System::Net::Sockets::AddressFamily::_set_Ecma(System::Net::Sockets::AddressFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_set_Ecma");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "AddressFamily", "Ecma", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.AddressFamily DataKit
System::Net::Sockets::AddressFamily System::Net::Sockets::AddressFamily::_get_DataKit() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_get_DataKit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::AddressFamily>("System.Net.Sockets", "AddressFamily", "DataKit"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.AddressFamily DataKit
void System::Net::Sockets::AddressFamily::_set_DataKit(System::Net::Sockets::AddressFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_set_DataKit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "AddressFamily", "DataKit", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.AddressFamily Ccitt
System::Net::Sockets::AddressFamily System::Net::Sockets::AddressFamily::_get_Ccitt() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_get_Ccitt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::AddressFamily>("System.Net.Sockets", "AddressFamily", "Ccitt"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.AddressFamily Ccitt
void System::Net::Sockets::AddressFamily::_set_Ccitt(System::Net::Sockets::AddressFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_set_Ccitt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "AddressFamily", "Ccitt", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.AddressFamily Sna
System::Net::Sockets::AddressFamily System::Net::Sockets::AddressFamily::_get_Sna() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_get_Sna");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::AddressFamily>("System.Net.Sockets", "AddressFamily", "Sna"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.AddressFamily Sna
void System::Net::Sockets::AddressFamily::_set_Sna(System::Net::Sockets::AddressFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_set_Sna");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "AddressFamily", "Sna", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.AddressFamily DecNet
System::Net::Sockets::AddressFamily System::Net::Sockets::AddressFamily::_get_DecNet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_get_DecNet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::AddressFamily>("System.Net.Sockets", "AddressFamily", "DecNet"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.AddressFamily DecNet
void System::Net::Sockets::AddressFamily::_set_DecNet(System::Net::Sockets::AddressFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_set_DecNet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "AddressFamily", "DecNet", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.AddressFamily DataLink
System::Net::Sockets::AddressFamily System::Net::Sockets::AddressFamily::_get_DataLink() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_get_DataLink");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::AddressFamily>("System.Net.Sockets", "AddressFamily", "DataLink"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.AddressFamily DataLink
void System::Net::Sockets::AddressFamily::_set_DataLink(System::Net::Sockets::AddressFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_set_DataLink");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "AddressFamily", "DataLink", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.AddressFamily Lat
System::Net::Sockets::AddressFamily System::Net::Sockets::AddressFamily::_get_Lat() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_get_Lat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::AddressFamily>("System.Net.Sockets", "AddressFamily", "Lat"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.AddressFamily Lat
void System::Net::Sockets::AddressFamily::_set_Lat(System::Net::Sockets::AddressFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_set_Lat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "AddressFamily", "Lat", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.AddressFamily HyperChannel
System::Net::Sockets::AddressFamily System::Net::Sockets::AddressFamily::_get_HyperChannel() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_get_HyperChannel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::AddressFamily>("System.Net.Sockets", "AddressFamily", "HyperChannel"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.AddressFamily HyperChannel
void System::Net::Sockets::AddressFamily::_set_HyperChannel(System::Net::Sockets::AddressFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_set_HyperChannel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "AddressFamily", "HyperChannel", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.AddressFamily AppleTalk
System::Net::Sockets::AddressFamily System::Net::Sockets::AddressFamily::_get_AppleTalk() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_get_AppleTalk");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::AddressFamily>("System.Net.Sockets", "AddressFamily", "AppleTalk"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.AddressFamily AppleTalk
void System::Net::Sockets::AddressFamily::_set_AppleTalk(System::Net::Sockets::AddressFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_set_AppleTalk");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "AddressFamily", "AppleTalk", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.AddressFamily NetBios
System::Net::Sockets::AddressFamily System::Net::Sockets::AddressFamily::_get_NetBios() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_get_NetBios");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::AddressFamily>("System.Net.Sockets", "AddressFamily", "NetBios"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.AddressFamily NetBios
void System::Net::Sockets::AddressFamily::_set_NetBios(System::Net::Sockets::AddressFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_set_NetBios");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "AddressFamily", "NetBios", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.AddressFamily VoiceView
System::Net::Sockets::AddressFamily System::Net::Sockets::AddressFamily::_get_VoiceView() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_get_VoiceView");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::AddressFamily>("System.Net.Sockets", "AddressFamily", "VoiceView"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.AddressFamily VoiceView
void System::Net::Sockets::AddressFamily::_set_VoiceView(System::Net::Sockets::AddressFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_set_VoiceView");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "AddressFamily", "VoiceView", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.AddressFamily FireFox
System::Net::Sockets::AddressFamily System::Net::Sockets::AddressFamily::_get_FireFox() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_get_FireFox");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::AddressFamily>("System.Net.Sockets", "AddressFamily", "FireFox"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.AddressFamily FireFox
void System::Net::Sockets::AddressFamily::_set_FireFox(System::Net::Sockets::AddressFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_set_FireFox");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "AddressFamily", "FireFox", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.AddressFamily Banyan
System::Net::Sockets::AddressFamily System::Net::Sockets::AddressFamily::_get_Banyan() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_get_Banyan");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::AddressFamily>("System.Net.Sockets", "AddressFamily", "Banyan"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.AddressFamily Banyan
void System::Net::Sockets::AddressFamily::_set_Banyan(System::Net::Sockets::AddressFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_set_Banyan");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "AddressFamily", "Banyan", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.AddressFamily Atm
System::Net::Sockets::AddressFamily System::Net::Sockets::AddressFamily::_get_Atm() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_get_Atm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::AddressFamily>("System.Net.Sockets", "AddressFamily", "Atm"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.AddressFamily Atm
void System::Net::Sockets::AddressFamily::_set_Atm(System::Net::Sockets::AddressFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_set_Atm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "AddressFamily", "Atm", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.AddressFamily InterNetworkV6
System::Net::Sockets::AddressFamily System::Net::Sockets::AddressFamily::_get_InterNetworkV6() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_get_InterNetworkV6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::AddressFamily>("System.Net.Sockets", "AddressFamily", "InterNetworkV6"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.AddressFamily InterNetworkV6
void System::Net::Sockets::AddressFamily::_set_InterNetworkV6(System::Net::Sockets::AddressFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_set_InterNetworkV6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "AddressFamily", "InterNetworkV6", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.AddressFamily Cluster
System::Net::Sockets::AddressFamily System::Net::Sockets::AddressFamily::_get_Cluster() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_get_Cluster");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::AddressFamily>("System.Net.Sockets", "AddressFamily", "Cluster"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.AddressFamily Cluster
void System::Net::Sockets::AddressFamily::_set_Cluster(System::Net::Sockets::AddressFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_set_Cluster");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "AddressFamily", "Cluster", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.AddressFamily Ieee12844
System::Net::Sockets::AddressFamily System::Net::Sockets::AddressFamily::_get_Ieee12844() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_get_Ieee12844");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::AddressFamily>("System.Net.Sockets", "AddressFamily", "Ieee12844"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.AddressFamily Ieee12844
void System::Net::Sockets::AddressFamily::_set_Ieee12844(System::Net::Sockets::AddressFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_set_Ieee12844");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "AddressFamily", "Ieee12844", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.AddressFamily Irda
System::Net::Sockets::AddressFamily System::Net::Sockets::AddressFamily::_get_Irda() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_get_Irda");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::AddressFamily>("System.Net.Sockets", "AddressFamily", "Irda"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.AddressFamily Irda
void System::Net::Sockets::AddressFamily::_set_Irda(System::Net::Sockets::AddressFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_set_Irda");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "AddressFamily", "Irda", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.AddressFamily NetworkDesigners
System::Net::Sockets::AddressFamily System::Net::Sockets::AddressFamily::_get_NetworkDesigners() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_get_NetworkDesigners");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::AddressFamily>("System.Net.Sockets", "AddressFamily", "NetworkDesigners"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.AddressFamily NetworkDesigners
void System::Net::Sockets::AddressFamily::_set_NetworkDesigners(System::Net::Sockets::AddressFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_set_NetworkDesigners");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "AddressFamily", "NetworkDesigners", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.AddressFamily Max
System::Net::Sockets::AddressFamily System::Net::Sockets::AddressFamily::_get_Max() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_get_Max");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::AddressFamily>("System.Net.Sockets", "AddressFamily", "Max"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.AddressFamily Max
void System::Net::Sockets::AddressFamily::_set_Max(System::Net::Sockets::AddressFamily value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::AddressFamily::_set_Max");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "AddressFamily", "Max", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Sockets.IOControlCode
#include "System/Net/Sockets/IOControlCode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.IOControlCode AsyncIO
System::Net::Sockets::IOControlCode System::Net::Sockets::IOControlCode::_get_AsyncIO() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_get_AsyncIO");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::IOControlCode>("System.Net.Sockets", "IOControlCode", "AsyncIO"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.IOControlCode AsyncIO
void System::Net::Sockets::IOControlCode::_set_AsyncIO(System::Net::Sockets::IOControlCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_set_AsyncIO");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "IOControlCode", "AsyncIO", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.IOControlCode NonBlockingIO
System::Net::Sockets::IOControlCode System::Net::Sockets::IOControlCode::_get_NonBlockingIO() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_get_NonBlockingIO");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::IOControlCode>("System.Net.Sockets", "IOControlCode", "NonBlockingIO"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.IOControlCode NonBlockingIO
void System::Net::Sockets::IOControlCode::_set_NonBlockingIO(System::Net::Sockets::IOControlCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_set_NonBlockingIO");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "IOControlCode", "NonBlockingIO", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.IOControlCode DataToRead
System::Net::Sockets::IOControlCode System::Net::Sockets::IOControlCode::_get_DataToRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_get_DataToRead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::IOControlCode>("System.Net.Sockets", "IOControlCode", "DataToRead"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.IOControlCode DataToRead
void System::Net::Sockets::IOControlCode::_set_DataToRead(System::Net::Sockets::IOControlCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_set_DataToRead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "IOControlCode", "DataToRead", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.IOControlCode OobDataRead
System::Net::Sockets::IOControlCode System::Net::Sockets::IOControlCode::_get_OobDataRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_get_OobDataRead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::IOControlCode>("System.Net.Sockets", "IOControlCode", "OobDataRead"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.IOControlCode OobDataRead
void System::Net::Sockets::IOControlCode::_set_OobDataRead(System::Net::Sockets::IOControlCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_set_OobDataRead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "IOControlCode", "OobDataRead", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.IOControlCode AssociateHandle
System::Net::Sockets::IOControlCode System::Net::Sockets::IOControlCode::_get_AssociateHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_get_AssociateHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::IOControlCode>("System.Net.Sockets", "IOControlCode", "AssociateHandle"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.IOControlCode AssociateHandle
void System::Net::Sockets::IOControlCode::_set_AssociateHandle(System::Net::Sockets::IOControlCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_set_AssociateHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "IOControlCode", "AssociateHandle", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.IOControlCode EnableCircularQueuing
System::Net::Sockets::IOControlCode System::Net::Sockets::IOControlCode::_get_EnableCircularQueuing() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_get_EnableCircularQueuing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::IOControlCode>("System.Net.Sockets", "IOControlCode", "EnableCircularQueuing"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.IOControlCode EnableCircularQueuing
void System::Net::Sockets::IOControlCode::_set_EnableCircularQueuing(System::Net::Sockets::IOControlCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_set_EnableCircularQueuing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "IOControlCode", "EnableCircularQueuing", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.IOControlCode Flush
System::Net::Sockets::IOControlCode System::Net::Sockets::IOControlCode::_get_Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_get_Flush");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::IOControlCode>("System.Net.Sockets", "IOControlCode", "Flush"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.IOControlCode Flush
void System::Net::Sockets::IOControlCode::_set_Flush(System::Net::Sockets::IOControlCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_set_Flush");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "IOControlCode", "Flush", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.IOControlCode GetBroadcastAddress
System::Net::Sockets::IOControlCode System::Net::Sockets::IOControlCode::_get_GetBroadcastAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_get_GetBroadcastAddress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::IOControlCode>("System.Net.Sockets", "IOControlCode", "GetBroadcastAddress"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.IOControlCode GetBroadcastAddress
void System::Net::Sockets::IOControlCode::_set_GetBroadcastAddress(System::Net::Sockets::IOControlCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_set_GetBroadcastAddress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "IOControlCode", "GetBroadcastAddress", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.IOControlCode GetExtensionFunctionPointer
System::Net::Sockets::IOControlCode System::Net::Sockets::IOControlCode::_get_GetExtensionFunctionPointer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_get_GetExtensionFunctionPointer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::IOControlCode>("System.Net.Sockets", "IOControlCode", "GetExtensionFunctionPointer"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.IOControlCode GetExtensionFunctionPointer
void System::Net::Sockets::IOControlCode::_set_GetExtensionFunctionPointer(System::Net::Sockets::IOControlCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_set_GetExtensionFunctionPointer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "IOControlCode", "GetExtensionFunctionPointer", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.IOControlCode GetQos
System::Net::Sockets::IOControlCode System::Net::Sockets::IOControlCode::_get_GetQos() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_get_GetQos");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::IOControlCode>("System.Net.Sockets", "IOControlCode", "GetQos"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.IOControlCode GetQos
void System::Net::Sockets::IOControlCode::_set_GetQos(System::Net::Sockets::IOControlCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_set_GetQos");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "IOControlCode", "GetQos", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.IOControlCode GetGroupQos
System::Net::Sockets::IOControlCode System::Net::Sockets::IOControlCode::_get_GetGroupQos() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_get_GetGroupQos");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::IOControlCode>("System.Net.Sockets", "IOControlCode", "GetGroupQos"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.IOControlCode GetGroupQos
void System::Net::Sockets::IOControlCode::_set_GetGroupQos(System::Net::Sockets::IOControlCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_set_GetGroupQos");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "IOControlCode", "GetGroupQos", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.IOControlCode MultipointLoopback
System::Net::Sockets::IOControlCode System::Net::Sockets::IOControlCode::_get_MultipointLoopback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_get_MultipointLoopback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::IOControlCode>("System.Net.Sockets", "IOControlCode", "MultipointLoopback"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.IOControlCode MultipointLoopback
void System::Net::Sockets::IOControlCode::_set_MultipointLoopback(System::Net::Sockets::IOControlCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_set_MultipointLoopback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "IOControlCode", "MultipointLoopback", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.IOControlCode MulticastScope
System::Net::Sockets::IOControlCode System::Net::Sockets::IOControlCode::_get_MulticastScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_get_MulticastScope");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::IOControlCode>("System.Net.Sockets", "IOControlCode", "MulticastScope"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.IOControlCode MulticastScope
void System::Net::Sockets::IOControlCode::_set_MulticastScope(System::Net::Sockets::IOControlCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_set_MulticastScope");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "IOControlCode", "MulticastScope", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.IOControlCode SetQos
System::Net::Sockets::IOControlCode System::Net::Sockets::IOControlCode::_get_SetQos() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_get_SetQos");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::IOControlCode>("System.Net.Sockets", "IOControlCode", "SetQos"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.IOControlCode SetQos
void System::Net::Sockets::IOControlCode::_set_SetQos(System::Net::Sockets::IOControlCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_set_SetQos");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "IOControlCode", "SetQos", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.IOControlCode SetGroupQos
System::Net::Sockets::IOControlCode System::Net::Sockets::IOControlCode::_get_SetGroupQos() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_get_SetGroupQos");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::IOControlCode>("System.Net.Sockets", "IOControlCode", "SetGroupQos"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.IOControlCode SetGroupQos
void System::Net::Sockets::IOControlCode::_set_SetGroupQos(System::Net::Sockets::IOControlCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_set_SetGroupQos");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "IOControlCode", "SetGroupQos", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.IOControlCode TranslateHandle
System::Net::Sockets::IOControlCode System::Net::Sockets::IOControlCode::_get_TranslateHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_get_TranslateHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::IOControlCode>("System.Net.Sockets", "IOControlCode", "TranslateHandle"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.IOControlCode TranslateHandle
void System::Net::Sockets::IOControlCode::_set_TranslateHandle(System::Net::Sockets::IOControlCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_set_TranslateHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "IOControlCode", "TranslateHandle", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.IOControlCode RoutingInterfaceQuery
System::Net::Sockets::IOControlCode System::Net::Sockets::IOControlCode::_get_RoutingInterfaceQuery() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_get_RoutingInterfaceQuery");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::IOControlCode>("System.Net.Sockets", "IOControlCode", "RoutingInterfaceQuery"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.IOControlCode RoutingInterfaceQuery
void System::Net::Sockets::IOControlCode::_set_RoutingInterfaceQuery(System::Net::Sockets::IOControlCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_set_RoutingInterfaceQuery");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "IOControlCode", "RoutingInterfaceQuery", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.IOControlCode RoutingInterfaceChange
System::Net::Sockets::IOControlCode System::Net::Sockets::IOControlCode::_get_RoutingInterfaceChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_get_RoutingInterfaceChange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::IOControlCode>("System.Net.Sockets", "IOControlCode", "RoutingInterfaceChange"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.IOControlCode RoutingInterfaceChange
void System::Net::Sockets::IOControlCode::_set_RoutingInterfaceChange(System::Net::Sockets::IOControlCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_set_RoutingInterfaceChange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "IOControlCode", "RoutingInterfaceChange", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.IOControlCode AddressListQuery
System::Net::Sockets::IOControlCode System::Net::Sockets::IOControlCode::_get_AddressListQuery() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_get_AddressListQuery");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::IOControlCode>("System.Net.Sockets", "IOControlCode", "AddressListQuery"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.IOControlCode AddressListQuery
void System::Net::Sockets::IOControlCode::_set_AddressListQuery(System::Net::Sockets::IOControlCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_set_AddressListQuery");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "IOControlCode", "AddressListQuery", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.IOControlCode AddressListChange
System::Net::Sockets::IOControlCode System::Net::Sockets::IOControlCode::_get_AddressListChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_get_AddressListChange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::IOControlCode>("System.Net.Sockets", "IOControlCode", "AddressListChange"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.IOControlCode AddressListChange
void System::Net::Sockets::IOControlCode::_set_AddressListChange(System::Net::Sockets::IOControlCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_set_AddressListChange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "IOControlCode", "AddressListChange", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.IOControlCode QueryTargetPnpHandle
System::Net::Sockets::IOControlCode System::Net::Sockets::IOControlCode::_get_QueryTargetPnpHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_get_QueryTargetPnpHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::IOControlCode>("System.Net.Sockets", "IOControlCode", "QueryTargetPnpHandle"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.IOControlCode QueryTargetPnpHandle
void System::Net::Sockets::IOControlCode::_set_QueryTargetPnpHandle(System::Net::Sockets::IOControlCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_set_QueryTargetPnpHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "IOControlCode", "QueryTargetPnpHandle", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.IOControlCode NamespaceChange
System::Net::Sockets::IOControlCode System::Net::Sockets::IOControlCode::_get_NamespaceChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_get_NamespaceChange");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::IOControlCode>("System.Net.Sockets", "IOControlCode", "NamespaceChange"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.IOControlCode NamespaceChange
void System::Net::Sockets::IOControlCode::_set_NamespaceChange(System::Net::Sockets::IOControlCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_set_NamespaceChange");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "IOControlCode", "NamespaceChange", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.IOControlCode AddressListSort
System::Net::Sockets::IOControlCode System::Net::Sockets::IOControlCode::_get_AddressListSort() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_get_AddressListSort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::IOControlCode>("System.Net.Sockets", "IOControlCode", "AddressListSort"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.IOControlCode AddressListSort
void System::Net::Sockets::IOControlCode::_set_AddressListSort(System::Net::Sockets::IOControlCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_set_AddressListSort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "IOControlCode", "AddressListSort", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.IOControlCode ReceiveAll
System::Net::Sockets::IOControlCode System::Net::Sockets::IOControlCode::_get_ReceiveAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_get_ReceiveAll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::IOControlCode>("System.Net.Sockets", "IOControlCode", "ReceiveAll"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.IOControlCode ReceiveAll
void System::Net::Sockets::IOControlCode::_set_ReceiveAll(System::Net::Sockets::IOControlCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_set_ReceiveAll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "IOControlCode", "ReceiveAll", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.IOControlCode ReceiveAllMulticast
System::Net::Sockets::IOControlCode System::Net::Sockets::IOControlCode::_get_ReceiveAllMulticast() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_get_ReceiveAllMulticast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::IOControlCode>("System.Net.Sockets", "IOControlCode", "ReceiveAllMulticast"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.IOControlCode ReceiveAllMulticast
void System::Net::Sockets::IOControlCode::_set_ReceiveAllMulticast(System::Net::Sockets::IOControlCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_set_ReceiveAllMulticast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "IOControlCode", "ReceiveAllMulticast", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.IOControlCode ReceiveAllIgmpMulticast
System::Net::Sockets::IOControlCode System::Net::Sockets::IOControlCode::_get_ReceiveAllIgmpMulticast() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_get_ReceiveAllIgmpMulticast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::IOControlCode>("System.Net.Sockets", "IOControlCode", "ReceiveAllIgmpMulticast"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.IOControlCode ReceiveAllIgmpMulticast
void System::Net::Sockets::IOControlCode::_set_ReceiveAllIgmpMulticast(System::Net::Sockets::IOControlCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_set_ReceiveAllIgmpMulticast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "IOControlCode", "ReceiveAllIgmpMulticast", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.IOControlCode KeepAliveValues
System::Net::Sockets::IOControlCode System::Net::Sockets::IOControlCode::_get_KeepAliveValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_get_KeepAliveValues");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::IOControlCode>("System.Net.Sockets", "IOControlCode", "KeepAliveValues"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.IOControlCode KeepAliveValues
void System::Net::Sockets::IOControlCode::_set_KeepAliveValues(System::Net::Sockets::IOControlCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_set_KeepAliveValues");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "IOControlCode", "KeepAliveValues", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.IOControlCode AbsorbRouterAlert
System::Net::Sockets::IOControlCode System::Net::Sockets::IOControlCode::_get_AbsorbRouterAlert() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_get_AbsorbRouterAlert");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::IOControlCode>("System.Net.Sockets", "IOControlCode", "AbsorbRouterAlert"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.IOControlCode AbsorbRouterAlert
void System::Net::Sockets::IOControlCode::_set_AbsorbRouterAlert(System::Net::Sockets::IOControlCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_set_AbsorbRouterAlert");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "IOControlCode", "AbsorbRouterAlert", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.IOControlCode UnicastInterface
System::Net::Sockets::IOControlCode System::Net::Sockets::IOControlCode::_get_UnicastInterface() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_get_UnicastInterface");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::IOControlCode>("System.Net.Sockets", "IOControlCode", "UnicastInterface"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.IOControlCode UnicastInterface
void System::Net::Sockets::IOControlCode::_set_UnicastInterface(System::Net::Sockets::IOControlCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_set_UnicastInterface");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "IOControlCode", "UnicastInterface", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.IOControlCode LimitBroadcasts
System::Net::Sockets::IOControlCode System::Net::Sockets::IOControlCode::_get_LimitBroadcasts() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_get_LimitBroadcasts");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::IOControlCode>("System.Net.Sockets", "IOControlCode", "LimitBroadcasts"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.IOControlCode LimitBroadcasts
void System::Net::Sockets::IOControlCode::_set_LimitBroadcasts(System::Net::Sockets::IOControlCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_set_LimitBroadcasts");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "IOControlCode", "LimitBroadcasts", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.IOControlCode BindToInterface
System::Net::Sockets::IOControlCode System::Net::Sockets::IOControlCode::_get_BindToInterface() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_get_BindToInterface");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::IOControlCode>("System.Net.Sockets", "IOControlCode", "BindToInterface"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.IOControlCode BindToInterface
void System::Net::Sockets::IOControlCode::_set_BindToInterface(System::Net::Sockets::IOControlCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_set_BindToInterface");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "IOControlCode", "BindToInterface", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.IOControlCode MulticastInterface
System::Net::Sockets::IOControlCode System::Net::Sockets::IOControlCode::_get_MulticastInterface() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_get_MulticastInterface");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::IOControlCode>("System.Net.Sockets", "IOControlCode", "MulticastInterface"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.IOControlCode MulticastInterface
void System::Net::Sockets::IOControlCode::_set_MulticastInterface(System::Net::Sockets::IOControlCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_set_MulticastInterface");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "IOControlCode", "MulticastInterface", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.IOControlCode AddMulticastGroupOnInterface
System::Net::Sockets::IOControlCode System::Net::Sockets::IOControlCode::_get_AddMulticastGroupOnInterface() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_get_AddMulticastGroupOnInterface");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::IOControlCode>("System.Net.Sockets", "IOControlCode", "AddMulticastGroupOnInterface"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.IOControlCode AddMulticastGroupOnInterface
void System::Net::Sockets::IOControlCode::_set_AddMulticastGroupOnInterface(System::Net::Sockets::IOControlCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_set_AddMulticastGroupOnInterface");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "IOControlCode", "AddMulticastGroupOnInterface", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.IOControlCode DeleteMulticastGroupFromInterface
System::Net::Sockets::IOControlCode System::Net::Sockets::IOControlCode::_get_DeleteMulticastGroupFromInterface() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_get_DeleteMulticastGroupFromInterface");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::IOControlCode>("System.Net.Sockets", "IOControlCode", "DeleteMulticastGroupFromInterface"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.IOControlCode DeleteMulticastGroupFromInterface
void System::Net::Sockets::IOControlCode::_set_DeleteMulticastGroupFromInterface(System::Net::Sockets::IOControlCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IOControlCode::_set_DeleteMulticastGroupFromInterface");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "IOControlCode", "DeleteMulticastGroupFromInterface", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Sockets.IPProtectionLevel
#include "System/Net/Sockets/IPProtectionLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.IPProtectionLevel Unspecified
System::Net::Sockets::IPProtectionLevel System::Net::Sockets::IPProtectionLevel::_get_Unspecified() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IPProtectionLevel::_get_Unspecified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::IPProtectionLevel>("System.Net.Sockets", "IPProtectionLevel", "Unspecified"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.IPProtectionLevel Unspecified
void System::Net::Sockets::IPProtectionLevel::_set_Unspecified(System::Net::Sockets::IPProtectionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IPProtectionLevel::_set_Unspecified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "IPProtectionLevel", "Unspecified", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.IPProtectionLevel Unrestricted
System::Net::Sockets::IPProtectionLevel System::Net::Sockets::IPProtectionLevel::_get_Unrestricted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IPProtectionLevel::_get_Unrestricted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::IPProtectionLevel>("System.Net.Sockets", "IPProtectionLevel", "Unrestricted"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.IPProtectionLevel Unrestricted
void System::Net::Sockets::IPProtectionLevel::_set_Unrestricted(System::Net::Sockets::IPProtectionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IPProtectionLevel::_set_Unrestricted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "IPProtectionLevel", "Unrestricted", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.IPProtectionLevel EdgeRestricted
System::Net::Sockets::IPProtectionLevel System::Net::Sockets::IPProtectionLevel::_get_EdgeRestricted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IPProtectionLevel::_get_EdgeRestricted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::IPProtectionLevel>("System.Net.Sockets", "IPProtectionLevel", "EdgeRestricted"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.IPProtectionLevel EdgeRestricted
void System::Net::Sockets::IPProtectionLevel::_set_EdgeRestricted(System::Net::Sockets::IPProtectionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IPProtectionLevel::_set_EdgeRestricted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "IPProtectionLevel", "EdgeRestricted", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.IPProtectionLevel Restricted
System::Net::Sockets::IPProtectionLevel System::Net::Sockets::IPProtectionLevel::_get_Restricted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IPProtectionLevel::_get_Restricted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::IPProtectionLevel>("System.Net.Sockets", "IPProtectionLevel", "Restricted"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.IPProtectionLevel Restricted
void System::Net::Sockets::IPProtectionLevel::_set_Restricted(System::Net::Sockets::IPProtectionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::IPProtectionLevel::_set_Restricted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "IPProtectionLevel", "Restricted", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Sockets.LingerOption
#include "System/Net/Sockets/LingerOption.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Sockets.LingerOption.set_Enabled
void System::Net::Sockets::LingerOption::set_Enabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::LingerOption::set_Enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Sockets.LingerOption.set_LingerTime
void System::Net::Sockets::LingerOption::set_LingerTime(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::LingerOption::set_LingerTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LingerTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: LingerOption::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LingerOption::*)(bool, int)>(&LingerOption::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LingerOption*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LingerOption::*)(bool, int)>(&LingerOption::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LingerOption*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: LingerOption::set_Enabled
// Il2CppName: set_Enabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LingerOption::*)(bool)>(&LingerOption::set_Enabled)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LingerOption*), "set_Enabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: LingerOption::set_LingerTime
// Il2CppName: set_LingerTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LingerOption::*)(int)>(&LingerOption::set_LingerTime)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LingerOption*), "set_LingerTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Sockets.NetworkStream
#include "System/Net/Sockets/NetworkStream.hpp"
// Including type: System.Net.Sockets.Socket
#include "System/Net/Sockets/Socket.hpp"
// Including type: System.IO.FileAccess
#include "System/IO/FileAccess.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Sockets.NetworkStream.get_DataAvailable
bool System::Net::Sockets::NetworkStream::get_DataAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::NetworkStream::get_DataAvailable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DataAvailable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.NetworkStream.InitNetworkStream
void System::Net::Sockets::NetworkStream::InitNetworkStream(System::Net::Sockets::Socket* socket, System::IO::FileAccess Access) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::NetworkStream::InitNetworkStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitNetworkStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(socket), ::il2cpp_utils::ExtractType(Access)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, socket, Access);
}
// Autogenerated method: System.Net.Sockets.NetworkStream.get_CanRead
bool System::Net::Sockets::NetworkStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::NetworkStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.NetworkStream.get_CanSeek
bool System::Net::Sockets::NetworkStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::NetworkStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanSeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.NetworkStream.get_CanWrite
bool System::Net::Sockets::NetworkStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::NetworkStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.NetworkStream.get_ReadTimeout
int System::Net::Sockets::NetworkStream::get_ReadTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::NetworkStream::get_ReadTimeout");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReadTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.NetworkStream.get_WriteTimeout
int System::Net::Sockets::NetworkStream::get_WriteTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::NetworkStream::get_WriteTimeout");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WriteTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.NetworkStream.get_Length
int64_t System::Net::Sockets::NetworkStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::NetworkStream::get_Length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.NetworkStream.get_Position
int64_t System::Net::Sockets::NetworkStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::NetworkStream::get_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.NetworkStream.set_Position
void System::Net::Sockets::NetworkStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::NetworkStream::set_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Sockets.NetworkStream.Seek
int64_t System::Net::Sockets::NetworkStream::Seek(int64_t offset, System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::NetworkStream::Seek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(origin)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: System.Net.Sockets.NetworkStream.Read
int System::Net::Sockets::NetworkStream::Read(::Array<uint8_t>*& buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::NetworkStream::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: System.Net.Sockets.NetworkStream.Write
void System::Net::Sockets::NetworkStream::Write(::Array<uint8_t>* buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::NetworkStream::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: System.Net.Sockets.NetworkStream.Dispose
void System::Net::Sockets::NetworkStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::NetworkStream::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Sockets.NetworkStream.Finalize
void System::Net::Sockets::NetworkStream::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::NetworkStream::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.NetworkStream.BeginRead
System::IAsyncResult* System::Net::Sockets::NetworkStream::BeginRead(::Array<uint8_t>* buffer, int offset, int size, System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::NetworkStream::BeginRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, size, callback, state);
}
// Autogenerated method: System.Net.Sockets.NetworkStream.EndRead
int System::Net::Sockets::NetworkStream::EndRead(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::NetworkStream::EndRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.Sockets.NetworkStream.BeginWrite
System::IAsyncResult* System::Net::Sockets::NetworkStream::BeginWrite(::Array<uint8_t>* buffer, int offset, int size, System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::NetworkStream::BeginWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, size, callback, state);
}
// Autogenerated method: System.Net.Sockets.NetworkStream.EndWrite
void System::Net::Sockets::NetworkStream::EndWrite(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::NetworkStream::EndWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.Sockets.NetworkStream.Flush
void System::Net::Sockets::NetworkStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::NetworkStream::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.NetworkStream.SetLength
void System::Net::Sockets::NetworkStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::NetworkStream::SetLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: NetworkStream::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkStream::*)(System::Net::Sockets::Socket*)>(&NetworkStream::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkStream*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::Socket*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkStream::*)(System::Net::Sockets::Socket*)>(&NetworkStream::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkStream*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::Socket*>()});
  }
};
// Writing MetadataGetter for method: NetworkStream::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkStream::*)(System::Net::Sockets::Socket*, bool)>(&NetworkStream::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkStream*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::Socket*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkStream::*)(System::Net::Sockets::Socket*, bool)>(&NetworkStream::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkStream*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::Socket*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: NetworkStream::get_DataAvailable
// Il2CppName: get_DataAvailable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (NetworkStream::*)()>(&NetworkStream::get_DataAvailable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkStream*), "get_DataAvailable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkStream::InitNetworkStream
// Il2CppName: InitNetworkStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkStream::*)(System::Net::Sockets::Socket*, System::IO::FileAccess)>(&NetworkStream::InitNetworkStream)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkStream*), "InitNetworkStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::Socket*>(), ::il2cpp_utils::ExtractIndependentType<System::IO::FileAccess>()});
  }
};
// Writing MetadataGetter for method: NetworkStream::get_CanRead
// Il2CppName: get_CanRead
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (NetworkStream::*)()>(&NetworkStream::get_CanRead)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkStream*), "get_CanRead", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkStream::get_CanSeek
// Il2CppName: get_CanSeek
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (NetworkStream::*)()>(&NetworkStream::get_CanSeek)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkStream*), "get_CanSeek", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkStream::get_CanWrite
// Il2CppName: get_CanWrite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (NetworkStream::*)()>(&NetworkStream::get_CanWrite)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkStream*), "get_CanWrite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkStream::get_ReadTimeout
// Il2CppName: get_ReadTimeout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (NetworkStream::*)()>(&NetworkStream::get_ReadTimeout)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkStream*), "get_ReadTimeout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkStream::get_WriteTimeout
// Il2CppName: get_WriteTimeout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (NetworkStream::*)()>(&NetworkStream::get_WriteTimeout)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkStream*), "get_WriteTimeout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkStream::get_Length
// Il2CppName: get_Length
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (NetworkStream::*)()>(&NetworkStream::get_Length)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkStream*), "get_Length", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkStream::get_Position
// Il2CppName: get_Position
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (NetworkStream::*)()>(&NetworkStream::get_Position)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkStream*), "get_Position", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkStream::set_Position
// Il2CppName: set_Position
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkStream::*)(int64_t)>(&NetworkStream::set_Position)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkStream*), "set_Position", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: NetworkStream::Seek
// Il2CppName: Seek
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (NetworkStream::*)(int64_t, System::IO::SeekOrigin)>(&NetworkStream::Seek)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkStream*), "Seek", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<System::IO::SeekOrigin>()});
  }
};
// Writing MetadataGetter for method: NetworkStream::Read
// Il2CppName: Read
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (NetworkStream::*)(::Array<uint8_t>*&, int, int)>(&NetworkStream::Read)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkStream*), "Read", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*&>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: NetworkStream::Write
// Il2CppName: Write
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkStream::*)(::Array<uint8_t>*, int, int)>(&NetworkStream::Write)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkStream*), "Write", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: NetworkStream::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkStream::*)(bool)>(&NetworkStream::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkStream*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: NetworkStream::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkStream::*)()>(&NetworkStream::Finalize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkStream*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkStream::BeginRead
// Il2CppName: BeginRead
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (NetworkStream::*)(::Array<uint8_t>*, int, int, System::AsyncCallback*, ::Il2CppObject*)>(&NetworkStream::BeginRead)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkStream*), "BeginRead", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: NetworkStream::EndRead
// Il2CppName: EndRead
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (NetworkStream::*)(System::IAsyncResult*)>(&NetworkStream::EndRead)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkStream*), "EndRead", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Writing MetadataGetter for method: NetworkStream::BeginWrite
// Il2CppName: BeginWrite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (NetworkStream::*)(::Array<uint8_t>*, int, int, System::AsyncCallback*, ::Il2CppObject*)>(&NetworkStream::BeginWrite)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkStream*), "BeginWrite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: NetworkStream::EndWrite
// Il2CppName: EndWrite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkStream::*)(System::IAsyncResult*)>(&NetworkStream::EndWrite)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkStream*), "EndWrite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Writing MetadataGetter for method: NetworkStream::Flush
// Il2CppName: Flush
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkStream::*)()>(&NetworkStream::Flush)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkStream*), "Flush", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkStream::SetLength
// Il2CppName: SetLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkStream::*)(int64_t)>(&NetworkStream::SetLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkStream*), "SetLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Sockets.ProtocolType
#include "System/Net/Sockets/ProtocolType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.ProtocolType IP
System::Net::Sockets::ProtocolType System::Net::Sockets::ProtocolType::_get_IP() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_get_IP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::ProtocolType>("System.Net.Sockets", "ProtocolType", "IP"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.ProtocolType IP
void System::Net::Sockets::ProtocolType::_set_IP(System::Net::Sockets::ProtocolType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_set_IP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "ProtocolType", "IP", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.ProtocolType IPv6HopByHopOptions
System::Net::Sockets::ProtocolType System::Net::Sockets::ProtocolType::_get_IPv6HopByHopOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_get_IPv6HopByHopOptions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::ProtocolType>("System.Net.Sockets", "ProtocolType", "IPv6HopByHopOptions"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.ProtocolType IPv6HopByHopOptions
void System::Net::Sockets::ProtocolType::_set_IPv6HopByHopOptions(System::Net::Sockets::ProtocolType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_set_IPv6HopByHopOptions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "ProtocolType", "IPv6HopByHopOptions", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.ProtocolType Icmp
System::Net::Sockets::ProtocolType System::Net::Sockets::ProtocolType::_get_Icmp() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_get_Icmp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::ProtocolType>("System.Net.Sockets", "ProtocolType", "Icmp"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.ProtocolType Icmp
void System::Net::Sockets::ProtocolType::_set_Icmp(System::Net::Sockets::ProtocolType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_set_Icmp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "ProtocolType", "Icmp", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.ProtocolType Igmp
System::Net::Sockets::ProtocolType System::Net::Sockets::ProtocolType::_get_Igmp() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_get_Igmp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::ProtocolType>("System.Net.Sockets", "ProtocolType", "Igmp"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.ProtocolType Igmp
void System::Net::Sockets::ProtocolType::_set_Igmp(System::Net::Sockets::ProtocolType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_set_Igmp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "ProtocolType", "Igmp", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.ProtocolType Ggp
System::Net::Sockets::ProtocolType System::Net::Sockets::ProtocolType::_get_Ggp() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_get_Ggp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::ProtocolType>("System.Net.Sockets", "ProtocolType", "Ggp"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.ProtocolType Ggp
void System::Net::Sockets::ProtocolType::_set_Ggp(System::Net::Sockets::ProtocolType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_set_Ggp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "ProtocolType", "Ggp", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.ProtocolType IPv4
System::Net::Sockets::ProtocolType System::Net::Sockets::ProtocolType::_get_IPv4() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_get_IPv4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::ProtocolType>("System.Net.Sockets", "ProtocolType", "IPv4"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.ProtocolType IPv4
void System::Net::Sockets::ProtocolType::_set_IPv4(System::Net::Sockets::ProtocolType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_set_IPv4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "ProtocolType", "IPv4", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.ProtocolType Tcp
System::Net::Sockets::ProtocolType System::Net::Sockets::ProtocolType::_get_Tcp() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_get_Tcp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::ProtocolType>("System.Net.Sockets", "ProtocolType", "Tcp"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.ProtocolType Tcp
void System::Net::Sockets::ProtocolType::_set_Tcp(System::Net::Sockets::ProtocolType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_set_Tcp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "ProtocolType", "Tcp", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.ProtocolType Pup
System::Net::Sockets::ProtocolType System::Net::Sockets::ProtocolType::_get_Pup() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_get_Pup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::ProtocolType>("System.Net.Sockets", "ProtocolType", "Pup"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.ProtocolType Pup
void System::Net::Sockets::ProtocolType::_set_Pup(System::Net::Sockets::ProtocolType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_set_Pup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "ProtocolType", "Pup", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.ProtocolType Udp
System::Net::Sockets::ProtocolType System::Net::Sockets::ProtocolType::_get_Udp() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_get_Udp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::ProtocolType>("System.Net.Sockets", "ProtocolType", "Udp"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.ProtocolType Udp
void System::Net::Sockets::ProtocolType::_set_Udp(System::Net::Sockets::ProtocolType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_set_Udp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "ProtocolType", "Udp", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.ProtocolType Idp
System::Net::Sockets::ProtocolType System::Net::Sockets::ProtocolType::_get_Idp() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_get_Idp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::ProtocolType>("System.Net.Sockets", "ProtocolType", "Idp"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.ProtocolType Idp
void System::Net::Sockets::ProtocolType::_set_Idp(System::Net::Sockets::ProtocolType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_set_Idp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "ProtocolType", "Idp", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.ProtocolType IPv6
System::Net::Sockets::ProtocolType System::Net::Sockets::ProtocolType::_get_IPv6() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_get_IPv6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::ProtocolType>("System.Net.Sockets", "ProtocolType", "IPv6"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.ProtocolType IPv6
void System::Net::Sockets::ProtocolType::_set_IPv6(System::Net::Sockets::ProtocolType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_set_IPv6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "ProtocolType", "IPv6", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.ProtocolType IPv6RoutingHeader
System::Net::Sockets::ProtocolType System::Net::Sockets::ProtocolType::_get_IPv6RoutingHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_get_IPv6RoutingHeader");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::ProtocolType>("System.Net.Sockets", "ProtocolType", "IPv6RoutingHeader"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.ProtocolType IPv6RoutingHeader
void System::Net::Sockets::ProtocolType::_set_IPv6RoutingHeader(System::Net::Sockets::ProtocolType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_set_IPv6RoutingHeader");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "ProtocolType", "IPv6RoutingHeader", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.ProtocolType IPv6FragmentHeader
System::Net::Sockets::ProtocolType System::Net::Sockets::ProtocolType::_get_IPv6FragmentHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_get_IPv6FragmentHeader");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::ProtocolType>("System.Net.Sockets", "ProtocolType", "IPv6FragmentHeader"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.ProtocolType IPv6FragmentHeader
void System::Net::Sockets::ProtocolType::_set_IPv6FragmentHeader(System::Net::Sockets::ProtocolType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_set_IPv6FragmentHeader");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "ProtocolType", "IPv6FragmentHeader", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.ProtocolType IPSecEncapsulatingSecurityPayload
System::Net::Sockets::ProtocolType System::Net::Sockets::ProtocolType::_get_IPSecEncapsulatingSecurityPayload() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_get_IPSecEncapsulatingSecurityPayload");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::ProtocolType>("System.Net.Sockets", "ProtocolType", "IPSecEncapsulatingSecurityPayload"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.ProtocolType IPSecEncapsulatingSecurityPayload
void System::Net::Sockets::ProtocolType::_set_IPSecEncapsulatingSecurityPayload(System::Net::Sockets::ProtocolType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_set_IPSecEncapsulatingSecurityPayload");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "ProtocolType", "IPSecEncapsulatingSecurityPayload", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.ProtocolType IPSecAuthenticationHeader
System::Net::Sockets::ProtocolType System::Net::Sockets::ProtocolType::_get_IPSecAuthenticationHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_get_IPSecAuthenticationHeader");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::ProtocolType>("System.Net.Sockets", "ProtocolType", "IPSecAuthenticationHeader"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.ProtocolType IPSecAuthenticationHeader
void System::Net::Sockets::ProtocolType::_set_IPSecAuthenticationHeader(System::Net::Sockets::ProtocolType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_set_IPSecAuthenticationHeader");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "ProtocolType", "IPSecAuthenticationHeader", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.ProtocolType IcmpV6
System::Net::Sockets::ProtocolType System::Net::Sockets::ProtocolType::_get_IcmpV6() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_get_IcmpV6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::ProtocolType>("System.Net.Sockets", "ProtocolType", "IcmpV6"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.ProtocolType IcmpV6
void System::Net::Sockets::ProtocolType::_set_IcmpV6(System::Net::Sockets::ProtocolType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_set_IcmpV6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "ProtocolType", "IcmpV6", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.ProtocolType IPv6NoNextHeader
System::Net::Sockets::ProtocolType System::Net::Sockets::ProtocolType::_get_IPv6NoNextHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_get_IPv6NoNextHeader");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::ProtocolType>("System.Net.Sockets", "ProtocolType", "IPv6NoNextHeader"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.ProtocolType IPv6NoNextHeader
void System::Net::Sockets::ProtocolType::_set_IPv6NoNextHeader(System::Net::Sockets::ProtocolType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_set_IPv6NoNextHeader");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "ProtocolType", "IPv6NoNextHeader", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.ProtocolType IPv6DestinationOptions
System::Net::Sockets::ProtocolType System::Net::Sockets::ProtocolType::_get_IPv6DestinationOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_get_IPv6DestinationOptions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::ProtocolType>("System.Net.Sockets", "ProtocolType", "IPv6DestinationOptions"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.ProtocolType IPv6DestinationOptions
void System::Net::Sockets::ProtocolType::_set_IPv6DestinationOptions(System::Net::Sockets::ProtocolType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_set_IPv6DestinationOptions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "ProtocolType", "IPv6DestinationOptions", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.ProtocolType ND
System::Net::Sockets::ProtocolType System::Net::Sockets::ProtocolType::_get_ND() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_get_ND");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::ProtocolType>("System.Net.Sockets", "ProtocolType", "ND"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.ProtocolType ND
void System::Net::Sockets::ProtocolType::_set_ND(System::Net::Sockets::ProtocolType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_set_ND");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "ProtocolType", "ND", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.ProtocolType Raw
System::Net::Sockets::ProtocolType System::Net::Sockets::ProtocolType::_get_Raw() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_get_Raw");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::ProtocolType>("System.Net.Sockets", "ProtocolType", "Raw"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.ProtocolType Raw
void System::Net::Sockets::ProtocolType::_set_Raw(System::Net::Sockets::ProtocolType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_set_Raw");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "ProtocolType", "Raw", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.ProtocolType Unspecified
System::Net::Sockets::ProtocolType System::Net::Sockets::ProtocolType::_get_Unspecified() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_get_Unspecified");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::ProtocolType>("System.Net.Sockets", "ProtocolType", "Unspecified"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.ProtocolType Unspecified
void System::Net::Sockets::ProtocolType::_set_Unspecified(System::Net::Sockets::ProtocolType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_set_Unspecified");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "ProtocolType", "Unspecified", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.ProtocolType Ipx
System::Net::Sockets::ProtocolType System::Net::Sockets::ProtocolType::_get_Ipx() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_get_Ipx");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::ProtocolType>("System.Net.Sockets", "ProtocolType", "Ipx"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.ProtocolType Ipx
void System::Net::Sockets::ProtocolType::_set_Ipx(System::Net::Sockets::ProtocolType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_set_Ipx");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "ProtocolType", "Ipx", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.ProtocolType Spx
System::Net::Sockets::ProtocolType System::Net::Sockets::ProtocolType::_get_Spx() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_get_Spx");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::ProtocolType>("System.Net.Sockets", "ProtocolType", "Spx"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.ProtocolType Spx
void System::Net::Sockets::ProtocolType::_set_Spx(System::Net::Sockets::ProtocolType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_set_Spx");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "ProtocolType", "Spx", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.ProtocolType SpxII
System::Net::Sockets::ProtocolType System::Net::Sockets::ProtocolType::_get_SpxII() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_get_SpxII");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::ProtocolType>("System.Net.Sockets", "ProtocolType", "SpxII"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.ProtocolType SpxII
void System::Net::Sockets::ProtocolType::_set_SpxII(System::Net::Sockets::ProtocolType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_set_SpxII");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "ProtocolType", "SpxII", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.ProtocolType Unknown
System::Net::Sockets::ProtocolType System::Net::Sockets::ProtocolType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::ProtocolType>("System.Net.Sockets", "ProtocolType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.ProtocolType Unknown
void System::Net::Sockets::ProtocolType::_set_Unknown(System::Net::Sockets::ProtocolType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::ProtocolType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "ProtocolType", "Unknown", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Sockets.SelectMode
#include "System/Net/Sockets/SelectMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SelectMode SelectRead
System::Net::Sockets::SelectMode System::Net::Sockets::SelectMode::_get_SelectRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SelectMode::_get_SelectRead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SelectMode>("System.Net.Sockets", "SelectMode", "SelectRead"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SelectMode SelectRead
void System::Net::Sockets::SelectMode::_set_SelectRead(System::Net::Sockets::SelectMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SelectMode::_set_SelectRead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SelectMode", "SelectRead", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SelectMode SelectWrite
System::Net::Sockets::SelectMode System::Net::Sockets::SelectMode::_get_SelectWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SelectMode::_get_SelectWrite");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SelectMode>("System.Net.Sockets", "SelectMode", "SelectWrite"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SelectMode SelectWrite
void System::Net::Sockets::SelectMode::_set_SelectWrite(System::Net::Sockets::SelectMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SelectMode::_set_SelectWrite");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SelectMode", "SelectWrite", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SelectMode SelectError
System::Net::Sockets::SelectMode System::Net::Sockets::SelectMode::_get_SelectError() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SelectMode::_get_SelectError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SelectMode>("System.Net.Sockets", "SelectMode", "SelectError"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SelectMode SelectError
void System::Net::Sockets::SelectMode::_set_SelectError(System::Net::Sockets::SelectMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SelectMode::_set_SelectError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SelectMode", "SelectError", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Sockets.Socket
#include "System/Net/Sockets/Socket.hpp"
// Including type: System.Net.Sockets.Socket/WSABUF
#include "System/Net/Sockets/Socket_WSABUF.hpp"
// Including type: System.Net.Sockets.Socket/<>c
#include "System/Net/Sockets/Socket_--c.hpp"
// Including type: System.Net.Sockets.Socket/<>c__DisplayClass242_0
#include "System/Net/Sockets/Socket_--c__DisplayClass242_0.hpp"
// Including type: System.Net.Sockets.Socket/<>c__DisplayClass298_0
#include "System/Net/Sockets/Socket_--c__DisplayClass298_0.hpp"
// Including type: System.Net.Sockets.SafeSocketHandle
#include "System/Net/Sockets/SafeSocketHandle.hpp"
// Including type: System.Net.EndPoint
#include "System/Net/EndPoint.hpp"
// Including type: System.Threading.SemaphoreSlim
#include "System/Threading/SemaphoreSlim.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.IOAsyncCallback
#include "System/IOAsyncCallback.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.Net.Sockets.SocketFlags
#include "System/Net/Sockets/SocketFlags.hpp"
// Including type: System.Net.Sockets.IOControlCode
#include "System/Net/Sockets/IOControlCode.hpp"
// Including type: System.Net.Sockets.IPProtectionLevel
#include "System/Net/Sockets/IPProtectionLevel.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.Net.Sockets.SocketShutdown
#include "System/Net/Sockets/SocketShutdown.hpp"
// Including type: System.Net.SocketAddress
#include "System/Net/SocketAddress.hpp"
// Including type: System.Net.Sockets.SelectMode
#include "System/Net/Sockets/SelectMode.hpp"
// Including type: System.Net.Sockets.SocketAsyncEventArgs
#include "System/Net/Sockets/SocketAsyncEventArgs.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.Net.Sockets.SocketAsyncResult
#include "System/Net/Sockets/SocketAsyncResult.hpp"
// Including type: System.Net.Sockets.SocketError
#include "System/Net/Sockets/SocketError.hpp"
// Including type: System.Net.Sockets.SocketOptionLevel
#include "System/Net/Sockets/SocketOptionLevel.hpp"
// Including type: System.Net.Sockets.SocketOptionName
#include "System/Net/Sockets/SocketOptionName.hpp"
// Including type: System.IOSelectorJob
#include "System/IOSelectorJob.hpp"
// Including type: System.Net.Sockets.SocketOperation
#include "System/Net/Sockets/SocketOperation.hpp"
// Including type: System.Net.Sockets.SocketAsyncOperation
#include "System/Net/Sockets/SocketAsyncOperation.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Threading.Thread
#include "System/Threading/Thread.hpp"
// Including type: System.Net.NetworkInformation.NetworkInterfaceComponent
#include "System/Net/NetworkInformation/NetworkInterfaceComponent.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Object s_InternalSyncObject
::Il2CppObject* System::Net::Sockets::Socket::_get_s_InternalSyncObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_get_s_InternalSyncObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Net.Sockets", "Socket", "s_InternalSyncObject"));
}
// Autogenerated static field setter
// Set static field: static private System.Object s_InternalSyncObject
void System::Net::Sockets::Socket::_set_s_InternalSyncObject(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_set_s_InternalSyncObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "Socket", "s_InternalSyncObject", value));
}
// Autogenerated static field getter
// Get static field: static System.Boolean s_SupportsIPv4
bool System::Net::Sockets::Socket::_get_s_SupportsIPv4() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_get_s_SupportsIPv4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Net.Sockets", "Socket", "s_SupportsIPv4"));
}
// Autogenerated static field setter
// Set static field: static System.Boolean s_SupportsIPv4
void System::Net::Sockets::Socket::_set_s_SupportsIPv4(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_set_s_SupportsIPv4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "Socket", "s_SupportsIPv4", value));
}
// Autogenerated static field getter
// Get static field: static System.Boolean s_SupportsIPv6
bool System::Net::Sockets::Socket::_get_s_SupportsIPv6() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_get_s_SupportsIPv6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Net.Sockets", "Socket", "s_SupportsIPv6"));
}
// Autogenerated static field setter
// Set static field: static System.Boolean s_SupportsIPv6
void System::Net::Sockets::Socket::_set_s_SupportsIPv6(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_set_s_SupportsIPv6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "Socket", "s_SupportsIPv6", value));
}
// Autogenerated static field getter
// Get static field: static System.Boolean s_OSSupportsIPv6
bool System::Net::Sockets::Socket::_get_s_OSSupportsIPv6() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_get_s_OSSupportsIPv6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Net.Sockets", "Socket", "s_OSSupportsIPv6"));
}
// Autogenerated static field setter
// Set static field: static System.Boolean s_OSSupportsIPv6
void System::Net::Sockets::Socket::_set_s_OSSupportsIPv6(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_set_s_OSSupportsIPv6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "Socket", "s_OSSupportsIPv6", value));
}
// Autogenerated static field getter
// Get static field: static System.Boolean s_Initialized
bool System::Net::Sockets::Socket::_get_s_Initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_get_s_Initialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Net.Sockets", "Socket", "s_Initialized"));
}
// Autogenerated static field setter
// Set static field: static System.Boolean s_Initialized
void System::Net::Sockets::Socket::_set_s_Initialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_set_s_Initialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "Socket", "s_Initialized", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean s_LoggingEnabled
bool System::Net::Sockets::Socket::_get_s_LoggingEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_get_s_LoggingEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Net.Sockets", "Socket", "s_LoggingEnabled"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean s_LoggingEnabled
void System::Net::Sockets::Socket::_set_s_LoggingEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_set_s_LoggingEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "Socket", "s_LoggingEnabled", value));
}
// Autogenerated static field getter
// Get static field: static System.Boolean s_PerfCountersEnabled
bool System::Net::Sockets::Socket::_get_s_PerfCountersEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_get_s_PerfCountersEnabled");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Net.Sockets", "Socket", "s_PerfCountersEnabled"));
}
// Autogenerated static field setter
// Set static field: static System.Boolean s_PerfCountersEnabled
void System::Net::Sockets::Socket::_set_s_PerfCountersEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_set_s_PerfCountersEnabled");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "Socket", "s_PerfCountersEnabled", value));
}
// Autogenerated static field getter
// Get static field: static System.Int32 DefaultCloseTimeout
int System::Net::Sockets::Socket::_get_DefaultCloseTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_get_DefaultCloseTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net.Sockets", "Socket", "DefaultCloseTimeout"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 DefaultCloseTimeout
void System::Net::Sockets::Socket::_set_DefaultCloseTimeout(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_set_DefaultCloseTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "Socket", "DefaultCloseTimeout", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 SOCKET_CLOSED_CODE
int System::Net::Sockets::Socket::_get_SOCKET_CLOSED_CODE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_get_SOCKET_CLOSED_CODE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net.Sockets", "Socket", "SOCKET_CLOSED_CODE"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SOCKET_CLOSED_CODE
void System::Net::Sockets::Socket::_set_SOCKET_CLOSED_CODE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_set_SOCKET_CLOSED_CODE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "Socket", "SOCKET_CLOSED_CODE", value));
}
// Autogenerated static field getter
// Get static field: static private System.String TIMEOUT_EXCEPTION_MSG
::Il2CppString* System::Net::Sockets::Socket::_get_TIMEOUT_EXCEPTION_MSG() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_get_TIMEOUT_EXCEPTION_MSG");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System.Net.Sockets", "Socket", "TIMEOUT_EXCEPTION_MSG"));
}
// Autogenerated static field setter
// Set static field: static private System.String TIMEOUT_EXCEPTION_MSG
void System::Net::Sockets::Socket::_set_TIMEOUT_EXCEPTION_MSG(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_set_TIMEOUT_EXCEPTION_MSG");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "Socket", "TIMEOUT_EXCEPTION_MSG", value));
}
// Autogenerated static field getter
// Get static field: static private System.AsyncCallback AcceptAsyncCallback
System::AsyncCallback* System::Net::Sockets::Socket::_get_AcceptAsyncCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_get_AcceptAsyncCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::AsyncCallback*>("System.Net.Sockets", "Socket", "AcceptAsyncCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.AsyncCallback AcceptAsyncCallback
void System::Net::Sockets::Socket::_set_AcceptAsyncCallback(System::AsyncCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_set_AcceptAsyncCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "Socket", "AcceptAsyncCallback", value));
}
// Autogenerated static field getter
// Get static field: static private System.IOAsyncCallback BeginAcceptCallback
System::IOAsyncCallback* System::Net::Sockets::Socket::_get_BeginAcceptCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_get_BeginAcceptCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IOAsyncCallback*>("System.Net.Sockets", "Socket", "BeginAcceptCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.IOAsyncCallback BeginAcceptCallback
void System::Net::Sockets::Socket::_set_BeginAcceptCallback(System::IOAsyncCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_set_BeginAcceptCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "Socket", "BeginAcceptCallback", value));
}
// Autogenerated static field getter
// Get static field: static private System.IOAsyncCallback BeginAcceptReceiveCallback
System::IOAsyncCallback* System::Net::Sockets::Socket::_get_BeginAcceptReceiveCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_get_BeginAcceptReceiveCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IOAsyncCallback*>("System.Net.Sockets", "Socket", "BeginAcceptReceiveCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.IOAsyncCallback BeginAcceptReceiveCallback
void System::Net::Sockets::Socket::_set_BeginAcceptReceiveCallback(System::IOAsyncCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_set_BeginAcceptReceiveCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "Socket", "BeginAcceptReceiveCallback", value));
}
// Autogenerated static field getter
// Get static field: static private System.AsyncCallback ConnectAsyncCallback
System::AsyncCallback* System::Net::Sockets::Socket::_get_ConnectAsyncCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_get_ConnectAsyncCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::AsyncCallback*>("System.Net.Sockets", "Socket", "ConnectAsyncCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.AsyncCallback ConnectAsyncCallback
void System::Net::Sockets::Socket::_set_ConnectAsyncCallback(System::AsyncCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_set_ConnectAsyncCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "Socket", "ConnectAsyncCallback", value));
}
// Autogenerated static field getter
// Get static field: static private System.IOAsyncCallback BeginConnectCallback
System::IOAsyncCallback* System::Net::Sockets::Socket::_get_BeginConnectCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_get_BeginConnectCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IOAsyncCallback*>("System.Net.Sockets", "Socket", "BeginConnectCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.IOAsyncCallback BeginConnectCallback
void System::Net::Sockets::Socket::_set_BeginConnectCallback(System::IOAsyncCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_set_BeginConnectCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "Socket", "BeginConnectCallback", value));
}
// Autogenerated static field getter
// Get static field: static private System.AsyncCallback DisconnectAsyncCallback
System::AsyncCallback* System::Net::Sockets::Socket::_get_DisconnectAsyncCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_get_DisconnectAsyncCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::AsyncCallback*>("System.Net.Sockets", "Socket", "DisconnectAsyncCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.AsyncCallback DisconnectAsyncCallback
void System::Net::Sockets::Socket::_set_DisconnectAsyncCallback(System::AsyncCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_set_DisconnectAsyncCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "Socket", "DisconnectAsyncCallback", value));
}
// Autogenerated static field getter
// Get static field: static private System.IOAsyncCallback BeginDisconnectCallback
System::IOAsyncCallback* System::Net::Sockets::Socket::_get_BeginDisconnectCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_get_BeginDisconnectCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IOAsyncCallback*>("System.Net.Sockets", "Socket", "BeginDisconnectCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.IOAsyncCallback BeginDisconnectCallback
void System::Net::Sockets::Socket::_set_BeginDisconnectCallback(System::IOAsyncCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_set_BeginDisconnectCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "Socket", "BeginDisconnectCallback", value));
}
// Autogenerated static field getter
// Get static field: static private System.AsyncCallback ReceiveAsyncCallback
System::AsyncCallback* System::Net::Sockets::Socket::_get_ReceiveAsyncCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_get_ReceiveAsyncCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::AsyncCallback*>("System.Net.Sockets", "Socket", "ReceiveAsyncCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.AsyncCallback ReceiveAsyncCallback
void System::Net::Sockets::Socket::_set_ReceiveAsyncCallback(System::AsyncCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_set_ReceiveAsyncCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "Socket", "ReceiveAsyncCallback", value));
}
// Autogenerated static field getter
// Get static field: static private System.IOAsyncCallback BeginReceiveCallback
System::IOAsyncCallback* System::Net::Sockets::Socket::_get_BeginReceiveCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_get_BeginReceiveCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IOAsyncCallback*>("System.Net.Sockets", "Socket", "BeginReceiveCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.IOAsyncCallback BeginReceiveCallback
void System::Net::Sockets::Socket::_set_BeginReceiveCallback(System::IOAsyncCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_set_BeginReceiveCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "Socket", "BeginReceiveCallback", value));
}
// Autogenerated static field getter
// Get static field: static private System.IOAsyncCallback BeginReceiveGenericCallback
System::IOAsyncCallback* System::Net::Sockets::Socket::_get_BeginReceiveGenericCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_get_BeginReceiveGenericCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IOAsyncCallback*>("System.Net.Sockets", "Socket", "BeginReceiveGenericCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.IOAsyncCallback BeginReceiveGenericCallback
void System::Net::Sockets::Socket::_set_BeginReceiveGenericCallback(System::IOAsyncCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_set_BeginReceiveGenericCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "Socket", "BeginReceiveGenericCallback", value));
}
// Autogenerated static field getter
// Get static field: static private System.AsyncCallback ReceiveFromAsyncCallback
System::AsyncCallback* System::Net::Sockets::Socket::_get_ReceiveFromAsyncCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_get_ReceiveFromAsyncCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::AsyncCallback*>("System.Net.Sockets", "Socket", "ReceiveFromAsyncCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.AsyncCallback ReceiveFromAsyncCallback
void System::Net::Sockets::Socket::_set_ReceiveFromAsyncCallback(System::AsyncCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_set_ReceiveFromAsyncCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "Socket", "ReceiveFromAsyncCallback", value));
}
// Autogenerated static field getter
// Get static field: static private System.IOAsyncCallback BeginReceiveFromCallback
System::IOAsyncCallback* System::Net::Sockets::Socket::_get_BeginReceiveFromCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_get_BeginReceiveFromCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IOAsyncCallback*>("System.Net.Sockets", "Socket", "BeginReceiveFromCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.IOAsyncCallback BeginReceiveFromCallback
void System::Net::Sockets::Socket::_set_BeginReceiveFromCallback(System::IOAsyncCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_set_BeginReceiveFromCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "Socket", "BeginReceiveFromCallback", value));
}
// Autogenerated static field getter
// Get static field: static private System.AsyncCallback SendAsyncCallback
System::AsyncCallback* System::Net::Sockets::Socket::_get_SendAsyncCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_get_SendAsyncCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::AsyncCallback*>("System.Net.Sockets", "Socket", "SendAsyncCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.AsyncCallback SendAsyncCallback
void System::Net::Sockets::Socket::_set_SendAsyncCallback(System::AsyncCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_set_SendAsyncCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "Socket", "SendAsyncCallback", value));
}
// Autogenerated static field getter
// Get static field: static private System.IOAsyncCallback BeginSendGenericCallback
System::IOAsyncCallback* System::Net::Sockets::Socket::_get_BeginSendGenericCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_get_BeginSendGenericCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IOAsyncCallback*>("System.Net.Sockets", "Socket", "BeginSendGenericCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.IOAsyncCallback BeginSendGenericCallback
void System::Net::Sockets::Socket::_set_BeginSendGenericCallback(System::IOAsyncCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_set_BeginSendGenericCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "Socket", "BeginSendGenericCallback", value));
}
// Autogenerated static field getter
// Get static field: static private System.AsyncCallback SendToAsyncCallback
System::AsyncCallback* System::Net::Sockets::Socket::_get_SendToAsyncCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_get_SendToAsyncCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::AsyncCallback*>("System.Net.Sockets", "Socket", "SendToAsyncCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.AsyncCallback SendToAsyncCallback
void System::Net::Sockets::Socket::_set_SendToAsyncCallback(System::AsyncCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::_set_SendToAsyncCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "Socket", "SendToAsyncCallback", value));
}
// Autogenerated method: System.Net.Sockets.Socket.get_SupportsIPv4
bool System::Net::Sockets::Socket::get_SupportsIPv4() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::get_SupportsIPv4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "get_SupportsIPv4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Sockets.Socket.get_OSSupportsIPv4
bool System::Net::Sockets::Socket::get_OSSupportsIPv4() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::get_OSSupportsIPv4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "get_OSSupportsIPv4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Sockets.Socket.get_SupportsIPv6
bool System::Net::Sockets::Socket::get_SupportsIPv6() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::get_SupportsIPv6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "get_SupportsIPv6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Sockets.Socket.get_OSSupportsIPv6
bool System::Net::Sockets::Socket::get_OSSupportsIPv6() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::get_OSSupportsIPv6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "get_OSSupportsIPv6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Sockets.Socket.get_Handle
System::IntPtr System::Net::Sockets::Socket::get_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::get_Handle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Handle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.Socket.get_AddressFamily
System::Net::Sockets::AddressFamily System::Net::Sockets::Socket::get_AddressFamily() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::get_AddressFamily");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AddressFamily", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Sockets::AddressFamily, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.Socket.get_SocketType
System::Net::Sockets::SocketType System::Net::Sockets::Socket::get_SocketType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::get_SocketType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SocketType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Sockets::SocketType, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.Socket.get_ProtocolType
System::Net::Sockets::ProtocolType System::Net::Sockets::Socket::get_ProtocolType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::get_ProtocolType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProtocolType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Sockets::ProtocolType, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.Socket.set_ExclusiveAddressUse
void System::Net::Sockets::Socket::set_ExclusiveAddressUse(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::set_ExclusiveAddressUse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ExclusiveAddressUse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Sockets.Socket.set_ReceiveBufferSize
void System::Net::Sockets::Socket::set_ReceiveBufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::set_ReceiveBufferSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReceiveBufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Sockets.Socket.set_SendBufferSize
void System::Net::Sockets::Socket::set_SendBufferSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::set_SendBufferSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SendBufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Sockets.Socket.set_ReceiveTimeout
void System::Net::Sockets::Socket::set_ReceiveTimeout(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::set_ReceiveTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReceiveTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Sockets.Socket.set_SendTimeout
void System::Net::Sockets::Socket::set_SendTimeout(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::set_SendTimeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SendTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Sockets.Socket.get_Ttl
int16_t System::Net::Sockets::Socket::get_Ttl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::get_Ttl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Ttl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int16_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.Socket.set_Ttl
void System::Net::Sockets::Socket::set_Ttl(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::set_Ttl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Ttl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Sockets.Socket.set_DontFragment
void System::Net::Sockets::Socket::set_DontFragment(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::set_DontFragment");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DontFragment", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Sockets.Socket.get_DualMode
bool System::Net::Sockets::Socket::get_DualMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::get_DualMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DualMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.Socket.set_DualMode
void System::Net::Sockets::Socket::set_DualMode(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::set_DualMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DualMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Sockets.Socket.get_IsDualMode
bool System::Net::Sockets::Socket::get_IsDualMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::get_IsDualMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDualMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.Socket.Send
int System::Net::Sockets::Socket::Send(System::Collections::Generic::IList_1<System::ArraySegment_1<uint8_t>>* buffers, System::Net::Sockets::SocketFlags socketFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Send");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Send", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffers), ::il2cpp_utils::ExtractType(socketFlags)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffers, socketFlags);
}
// Autogenerated method: System.Net.Sockets.Socket.Send
int System::Net::Sockets::Socket::Send(::Array<uint8_t>* buffer, int offset, int size, System::Net::Sockets::SocketFlags socketFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Send");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Send", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(socketFlags)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffer, offset, size, socketFlags);
}
// Autogenerated method: System.Net.Sockets.Socket.Receive
int System::Net::Sockets::Socket::Receive(::Array<uint8_t>* buffer, int offset, int size, System::Net::Sockets::SocketFlags socketFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Receive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Receive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(socketFlags)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffer, offset, size, socketFlags);
}
// Autogenerated method: System.Net.Sockets.Socket.Receive
int System::Net::Sockets::Socket::Receive(System::Collections::Generic::IList_1<System::ArraySegment_1<uint8_t>>* buffers, System::Net::Sockets::SocketFlags socketFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Receive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Receive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffers), ::il2cpp_utils::ExtractType(socketFlags)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffers, socketFlags);
}
// Autogenerated method: System.Net.Sockets.Socket.IOControl
int System::Net::Sockets::Socket::IOControl(System::Net::Sockets::IOControlCode ioControlCode, ::Array<uint8_t>* optionInValue, ::Array<uint8_t>* optionOutValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::IOControl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IOControl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ioControlCode), ::il2cpp_utils::ExtractType(optionInValue), ::il2cpp_utils::ExtractType(optionOutValue)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, ioControlCode, optionInValue, optionOutValue);
}
// Autogenerated method: System.Net.Sockets.Socket.SetIPProtectionLevel
void System::Net::Sockets::Socket::SetIPProtectionLevel(System::Net::Sockets::IPProtectionLevel level) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::SetIPProtectionLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIPProtectionLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, level);
}
// Autogenerated method: System.Net.Sockets.Socket.BeginSend
System::IAsyncResult* System::Net::Sockets::Socket::BeginSend(::Array<uint8_t>* buffer, int offset, int size, System::Net::Sockets::SocketFlags socketFlags, System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::BeginSend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginSend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(socketFlags), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, size, socketFlags, callback, state);
}
// Autogenerated method: System.Net.Sockets.Socket.EndSend
int System::Net::Sockets::Socket::EndSend(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::EndSend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndSend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.Sockets.Socket.BeginReceive
System::IAsyncResult* System::Net::Sockets::Socket::BeginReceive(::Array<uint8_t>* buffer, int offset, int size, System::Net::Sockets::SocketFlags socketFlags, System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::BeginReceive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginReceive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(socketFlags), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, size, socketFlags, callback, state);
}
// Autogenerated method: System.Net.Sockets.Socket.EndReceive
int System::Net::Sockets::Socket::EndReceive(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::EndReceive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndReceive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.Sockets.Socket.get_InternalSyncObject
::Il2CppObject* System::Net::Sockets::Socket::get_InternalSyncObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::get_InternalSyncObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "get_InternalSyncObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Sockets.Socket.get_CleanedUp
bool System::Net::Sockets::Socket::get_CleanedUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::get_CleanedUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CleanedUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.Socket.InitializeSockets
void System::Net::Sockets::Socket::InitializeSockets() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::InitializeSockets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "InitializeSockets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Sockets.Socket.Dispose
void System::Net::Sockets::Socket::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.Socket.InternalShutdown
void System::Net::Sockets::Socket::InternalShutdown(System::Net::Sockets::SocketShutdown how) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::InternalShutdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalShutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(how)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, how);
}
// Autogenerated method: System.Net.Sockets.Socket.SocketDefaults
void System::Net::Sockets::Socket::SocketDefaults() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::SocketDefaults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SocketDefaults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.Socket.Socket_internal
System::IntPtr System::Net::Sockets::Socket::Socket_internal(System::Net::Sockets::AddressFamily family, System::Net::Sockets::SocketType type, System::Net::Sockets::ProtocolType proto, int& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Socket_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Socket_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(family), ::il2cpp_utils::ExtractType(type), ::il2cpp_utils::ExtractType(proto), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method, family, type, proto, error);
}
// Autogenerated method: System.Net.Sockets.Socket.get_Available
int System::Net::Sockets::Socket::get_Available() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::get_Available");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Available", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.Socket.Available_internal
int System::Net::Sockets::Socket::Available_internal(System::Net::Sockets::SafeSocketHandle* safeHandle, int& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Available_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "Available_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, safeHandle, error);
}
// Autogenerated method: System.Net.Sockets.Socket.Available_internal
int System::Net::Sockets::Socket::Available_internal(System::IntPtr socket, int& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Available_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "Available_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(socket), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, socket, error);
}
// Autogenerated method: System.Net.Sockets.Socket.set_EnableBroadcast
void System::Net::Sockets::Socket::set_EnableBroadcast(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::set_EnableBroadcast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_EnableBroadcast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Sockets.Socket.get_IsBound
bool System::Net::Sockets::Socket::get_IsBound() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::get_IsBound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsBound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.Socket.get_LocalEndPoint
System::Net::EndPoint* System::Net::Sockets::Socket::get_LocalEndPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::get_LocalEndPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::EndPoint*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.Socket.LocalEndPoint_internal
System::Net::SocketAddress* System::Net::Sockets::Socket::LocalEndPoint_internal(System::Net::Sockets::SafeSocketHandle* safeHandle, int family, int& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::LocalEndPoint_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "LocalEndPoint_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractType(family), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::SocketAddress*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, safeHandle, family, error);
}
// Autogenerated method: System.Net.Sockets.Socket.LocalEndPoint_internal
System::Net::SocketAddress* System::Net::Sockets::Socket::LocalEndPoint_internal(System::IntPtr socket, int family, int& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::LocalEndPoint_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "LocalEndPoint_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(socket), ::il2cpp_utils::ExtractType(family), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::SocketAddress*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, socket, family, error);
}
// Autogenerated method: System.Net.Sockets.Socket.get_Blocking
bool System::Net::Sockets::Socket::get_Blocking() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::get_Blocking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Blocking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.Socket.set_Blocking
void System::Net::Sockets::Socket::set_Blocking(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::set_Blocking");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Blocking", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Sockets.Socket.Blocking_internal
void System::Net::Sockets::Socket::Blocking_internal(System::Net::Sockets::SafeSocketHandle* safeHandle, bool block, int& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Blocking_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "Blocking_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractType(block), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, safeHandle, block, error);
}
// Autogenerated method: System.Net.Sockets.Socket.Blocking_internal
void System::Net::Sockets::Socket::Blocking_internal(System::IntPtr socket, bool block, int& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Blocking_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "Blocking_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(socket), ::il2cpp_utils::ExtractType(block), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, socket, block, error);
}
// Autogenerated method: System.Net.Sockets.Socket.get_Connected
bool System::Net::Sockets::Socket::get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::get_Connected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Connected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.Socket.set_NoDelay
void System::Net::Sockets::Socket::set_NoDelay(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::set_NoDelay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NoDelay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Sockets.Socket.Poll
bool System::Net::Sockets::Socket::Poll(int microSeconds, System::Net::Sockets::SelectMode mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Poll");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Poll", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(microSeconds), ::il2cpp_utils::ExtractType(mode)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, microSeconds, mode);
}
// Autogenerated method: System.Net.Sockets.Socket.Poll_internal
bool System::Net::Sockets::Socket::Poll_internal(System::Net::Sockets::SafeSocketHandle* safeHandle, System::Net::Sockets::SelectMode mode, int timeout, int& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Poll_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "Poll_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(timeout), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, safeHandle, mode, timeout, error);
}
// Autogenerated method: System.Net.Sockets.Socket.Poll_internal
bool System::Net::Sockets::Socket::Poll_internal(System::IntPtr socket, System::Net::Sockets::SelectMode mode, int timeout, int& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Poll_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "Poll_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(socket), ::il2cpp_utils::ExtractType(mode), ::il2cpp_utils::ExtractType(timeout), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, socket, mode, timeout, error);
}
// Autogenerated method: System.Net.Sockets.Socket.Accept
System::Net::Sockets::Socket* System::Net::Sockets::Socket::Accept() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Accept");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Sockets::Socket*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.Socket.Accept
void System::Net::Sockets::Socket::Accept(System::Net::Sockets::Socket* acceptSocket) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Accept");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Accept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(acceptSocket)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, acceptSocket);
}
// Autogenerated method: System.Net.Sockets.Socket.AcceptAsync
bool System::Net::Sockets::Socket::AcceptAsync(System::Net::Sockets::SocketAsyncEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::AcceptAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AcceptAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Net.Sockets.Socket.BeginAccept
System::IAsyncResult* System::Net::Sockets::Socket::BeginAccept(System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::BeginAccept");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginAccept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, callback, state);
}
// Autogenerated method: System.Net.Sockets.Socket.EndAccept
System::Net::Sockets::Socket* System::Net::Sockets::Socket::EndAccept(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::EndAccept");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndAccept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Sockets::Socket*, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.Sockets.Socket.EndAccept
System::Net::Sockets::Socket* System::Net::Sockets::Socket::EndAccept(::Array<uint8_t>*& buffer, int& bytesTransferred, System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::EndAccept");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndAccept", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Sockets::Socket*, false>(this, ___internal__method, buffer, bytesTransferred, asyncResult);
}
// Autogenerated method: System.Net.Sockets.Socket.Accept_internal
System::Net::Sockets::SafeSocketHandle* System::Net::Sockets::Socket::Accept_internal(System::Net::Sockets::SafeSocketHandle* safeHandle, int& error, bool blocking) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Accept_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "Accept_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(blocking)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Sockets::SafeSocketHandle*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, safeHandle, error, blocking);
}
// Autogenerated method: System.Net.Sockets.Socket.Accept_internal
System::IntPtr System::Net::Sockets::Socket::Accept_internal(System::IntPtr sock, int& error, bool blocking) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Accept_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "Accept_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sock), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(blocking)})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sock, error, blocking);
}
// Autogenerated method: System.Net.Sockets.Socket.Bind
void System::Net::Sockets::Socket::Bind(System::Net::EndPoint* localEP) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Bind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Bind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localEP)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, localEP);
}
// Autogenerated method: System.Net.Sockets.Socket.Bind_internal
void System::Net::Sockets::Socket::Bind_internal(System::Net::Sockets::SafeSocketHandle* safeHandle, System::Net::SocketAddress* sa, int& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Bind_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "Bind_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractType(sa), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, safeHandle, sa, error);
}
// Autogenerated method: System.Net.Sockets.Socket.Bind_internal
void System::Net::Sockets::Socket::Bind_internal(System::IntPtr sock, System::Net::SocketAddress* sa, int& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Bind_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "Bind_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sock), ::il2cpp_utils::ExtractType(sa), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sock, sa, error);
}
// Autogenerated method: System.Net.Sockets.Socket.Listen
void System::Net::Sockets::Socket::Listen(int backlog) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Listen");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Listen", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(backlog)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, backlog);
}
// Autogenerated method: System.Net.Sockets.Socket.Listen_internal
void System::Net::Sockets::Socket::Listen_internal(System::Net::Sockets::SafeSocketHandle* safeHandle, int backlog, int& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Listen_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "Listen_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractType(backlog), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, safeHandle, backlog, error);
}
// Autogenerated method: System.Net.Sockets.Socket.Listen_internal
void System::Net::Sockets::Socket::Listen_internal(System::IntPtr sock, int backlog, int& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Listen_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "Listen_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sock), ::il2cpp_utils::ExtractType(backlog), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sock, backlog, error);
}
// Autogenerated method: System.Net.Sockets.Socket.Connect
void System::Net::Sockets::Socket::Connect(System::Net::EndPoint* remoteEP) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Connect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Connect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(remoteEP)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, remoteEP);
}
// Autogenerated method: System.Net.Sockets.Socket.BeginConnect
System::IAsyncResult* System::Net::Sockets::Socket::BeginConnect(::Il2CppString* host, int port, System::AsyncCallback* requestCallback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::BeginConnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginConnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host), ::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(requestCallback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, host, port, requestCallback, state);
}
// Autogenerated method: System.Net.Sockets.Socket.BeginConnect
System::IAsyncResult* System::Net::Sockets::Socket::BeginConnect(::Array<System::Net::IPAddress*>* addresses, int port, System::AsyncCallback* requestCallback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::BeginConnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginConnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(addresses), ::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(requestCallback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, addresses, port, requestCallback, state);
}
// Autogenerated method: System.Net.Sockets.Socket.BeginMConnect
void System::Net::Sockets::Socket::BeginMConnect(System::Net::Sockets::SocketAsyncResult* sockares) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::BeginMConnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "BeginMConnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sockares)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sockares);
}
// Autogenerated method: System.Net.Sockets.Socket.BeginSConnect
void System::Net::Sockets::Socket::BeginSConnect(System::Net::Sockets::SocketAsyncResult* sockares) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::BeginSConnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "BeginSConnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sockares)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sockares);
}
// Autogenerated method: System.Net.Sockets.Socket.EndConnect
void System::Net::Sockets::Socket::EndConnect(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::EndConnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndConnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.Sockets.Socket.Connect_internal
void System::Net::Sockets::Socket::Connect_internal(System::Net::Sockets::SafeSocketHandle* safeHandle, System::Net::SocketAddress* sa, int& error, bool blocking) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Connect_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "Connect_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractType(sa), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(blocking)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, safeHandle, sa, error, blocking);
}
// Autogenerated method: System.Net.Sockets.Socket.Connect_internal
void System::Net::Sockets::Socket::Connect_internal(System::IntPtr sock, System::Net::SocketAddress* sa, int& error, bool blocking) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Connect_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "Connect_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sock), ::il2cpp_utils::ExtractType(sa), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(blocking)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sock, sa, error, blocking);
}
// Autogenerated method: System.Net.Sockets.Socket.Disconnect
void System::Net::Sockets::Socket::Disconnect(bool reuseSocket) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Disconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reuseSocket)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reuseSocket);
}
// Autogenerated method: System.Net.Sockets.Socket.EndDisconnect
void System::Net::Sockets::Socket::EndDisconnect(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::EndDisconnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndDisconnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.Sockets.Socket.Disconnect_internal
void System::Net::Sockets::Socket::Disconnect_internal(System::Net::Sockets::SafeSocketHandle* safeHandle, bool reuse, int& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Disconnect_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "Disconnect_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractType(reuse), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, safeHandle, reuse, error);
}
// Autogenerated method: System.Net.Sockets.Socket.Disconnect_internal
void System::Net::Sockets::Socket::Disconnect_internal(System::IntPtr sock, bool reuse, int& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Disconnect_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "Disconnect_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sock), ::il2cpp_utils::ExtractType(reuse), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sock, reuse, error);
}
// Autogenerated method: System.Net.Sockets.Socket.Receive
int System::Net::Sockets::Socket::Receive(::Array<uint8_t>* buffer, int offset, int size, System::Net::Sockets::SocketFlags socketFlags, System::Net::Sockets::SocketError& errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Receive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Receive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(socketFlags), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketError&>()})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffer, offset, size, socketFlags, errorCode);
}
// Autogenerated method: System.Net.Sockets.Socket.Receive
int System::Net::Sockets::Socket::Receive(System::Collections::Generic::IList_1<System::ArraySegment_1<uint8_t>>* buffers, System::Net::Sockets::SocketFlags socketFlags, System::Net::Sockets::SocketError& errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Receive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Receive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffers), ::il2cpp_utils::ExtractType(socketFlags), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketError&>()})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffers, socketFlags, errorCode);
}
// Autogenerated method: System.Net.Sockets.Socket.BeginReceive
System::IAsyncResult* System::Net::Sockets::Socket::BeginReceive(::Array<uint8_t>* buffer, int offset, int size, System::Net::Sockets::SocketFlags socketFlags, System::Net::Sockets::SocketError& errorCode, System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::BeginReceive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginReceive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(socketFlags), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketError&>(), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, size, socketFlags, errorCode, callback, state);
}
// Autogenerated method: System.Net.Sockets.Socket.EndReceive
int System::Net::Sockets::Socket::EndReceive(System::IAsyncResult* asyncResult, System::Net::Sockets::SocketError& errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::EndReceive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndReceive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketError&>()})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, asyncResult, errorCode);
}
// Autogenerated method: System.Net.Sockets.Socket.Receive_internal
int System::Net::Sockets::Socket::Receive_internal(System::Net::Sockets::SafeSocketHandle* safeHandle, System::Net::Sockets::Socket::WSABUF* bufarray, int count, System::Net::Sockets::SocketFlags flags, int& error, bool blocking) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Receive_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "Receive_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractType(bufarray), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(blocking)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, safeHandle, bufarray, count, flags, error, blocking);
}
// Autogenerated method: System.Net.Sockets.Socket.Receive_internal
int System::Net::Sockets::Socket::Receive_internal(System::IntPtr sock, System::Net::Sockets::Socket::WSABUF* bufarray, int count, System::Net::Sockets::SocketFlags flags, int& error, bool blocking) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Receive_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "Receive_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sock), ::il2cpp_utils::ExtractType(bufarray), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(blocking)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sock, bufarray, count, flags, error, blocking);
}
// Autogenerated method: System.Net.Sockets.Socket.Receive_internal
int System::Net::Sockets::Socket::Receive_internal(System::Net::Sockets::SafeSocketHandle* safeHandle, uint8_t* buffer, int count, System::Net::Sockets::SocketFlags flags, int& error, bool blocking) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Receive_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "Receive_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(blocking)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, safeHandle, buffer, count, flags, error, blocking);
}
// Autogenerated method: System.Net.Sockets.Socket.Receive_internal
int System::Net::Sockets::Socket::Receive_internal(System::IntPtr sock, uint8_t* buffer, int count, System::Net::Sockets::SocketFlags flags, int& error, bool blocking) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Receive_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "Receive_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sock), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(blocking)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sock, buffer, count, flags, error, blocking);
}
// Autogenerated method: System.Net.Sockets.Socket.ReceiveFrom
int System::Net::Sockets::Socket::ReceiveFrom(::Array<uint8_t>* buffer, int offset, int size, System::Net::Sockets::SocketFlags socketFlags, System::Net::EndPoint*& remoteEP) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::ReceiveFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceiveFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(socketFlags), ::il2cpp_utils::ExtractType(remoteEP)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffer, offset, size, socketFlags, remoteEP);
}
// Autogenerated method: System.Net.Sockets.Socket.ReceiveFrom
int System::Net::Sockets::Socket::ReceiveFrom(::Array<uint8_t>* buffer, int offset, int size, System::Net::Sockets::SocketFlags socketFlags, System::Net::EndPoint*& remoteEP, System::Net::Sockets::SocketError& errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::ReceiveFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReceiveFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(socketFlags), ::il2cpp_utils::ExtractType(remoteEP), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketError&>()})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffer, offset, size, socketFlags, remoteEP, errorCode);
}
// Autogenerated method: System.Net.Sockets.Socket.EndReceiveFrom
int System::Net::Sockets::Socket::EndReceiveFrom(System::IAsyncResult* asyncResult, System::Net::EndPoint*& endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::EndReceiveFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndReceiveFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult), ::il2cpp_utils::ExtractType(endPoint)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, asyncResult, endPoint);
}
// Autogenerated method: System.Net.Sockets.Socket.ReceiveFrom_internal
int System::Net::Sockets::Socket::ReceiveFrom_internal(System::Net::Sockets::SafeSocketHandle* safeHandle, uint8_t* buffer, int count, System::Net::Sockets::SocketFlags flags, System::Net::SocketAddress*& sockaddr, int& error, bool blocking) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::ReceiveFrom_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "ReceiveFrom_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(sockaddr), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(blocking)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, safeHandle, buffer, count, flags, sockaddr, error, blocking);
}
// Autogenerated method: System.Net.Sockets.Socket.ReceiveFrom_internal
int System::Net::Sockets::Socket::ReceiveFrom_internal(System::IntPtr sock, uint8_t* buffer, int count, System::Net::Sockets::SocketFlags flags, System::Net::SocketAddress*& sockaddr, int& error, bool blocking) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::ReceiveFrom_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "ReceiveFrom_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sock), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(sockaddr), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(blocking)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sock, buffer, count, flags, sockaddr, error, blocking);
}
// Autogenerated method: System.Net.Sockets.Socket.Send
int System::Net::Sockets::Socket::Send(::Array<uint8_t>* buffer, int offset, int size, System::Net::Sockets::SocketFlags socketFlags, System::Net::Sockets::SocketError& errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Send");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Send", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(socketFlags), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketError&>()})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffer, offset, size, socketFlags, errorCode);
}
// Autogenerated method: System.Net.Sockets.Socket.Send
int System::Net::Sockets::Socket::Send(System::Collections::Generic::IList_1<System::ArraySegment_1<uint8_t>>* buffers, System::Net::Sockets::SocketFlags socketFlags, System::Net::Sockets::SocketError& errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Send");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Send", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffers), ::il2cpp_utils::ExtractType(socketFlags), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketError&>()})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffers, socketFlags, errorCode);
}
// Autogenerated method: System.Net.Sockets.Socket.BeginSend
System::IAsyncResult* System::Net::Sockets::Socket::BeginSend(::Array<uint8_t>* buffer, int offset, int size, System::Net::Sockets::SocketFlags socketFlags, System::Net::Sockets::SocketError& errorCode, System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::BeginSend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginSend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(socketFlags), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketError&>(), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, size, socketFlags, errorCode, callback, state);
}
// Autogenerated method: System.Net.Sockets.Socket.BeginSendCallback
void System::Net::Sockets::Socket::BeginSendCallback(System::Net::Sockets::SocketAsyncResult* sockares, int sent_so_far) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::BeginSendCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "BeginSendCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sockares), ::il2cpp_utils::ExtractType(sent_so_far)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sockares, sent_so_far);
}
// Autogenerated method: System.Net.Sockets.Socket.EndSend
int System::Net::Sockets::Socket::EndSend(System::IAsyncResult* asyncResult, System::Net::Sockets::SocketError& errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::EndSend");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndSend", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketError&>()})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, asyncResult, errorCode);
}
// Autogenerated method: System.Net.Sockets.Socket.Send_internal
int System::Net::Sockets::Socket::Send_internal(System::Net::Sockets::SafeSocketHandle* safeHandle, System::Net::Sockets::Socket::WSABUF* bufarray, int count, System::Net::Sockets::SocketFlags flags, int& error, bool blocking) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Send_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "Send_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractType(bufarray), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(blocking)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, safeHandle, bufarray, count, flags, error, blocking);
}
// Autogenerated method: System.Net.Sockets.Socket.Send_internal
int System::Net::Sockets::Socket::Send_internal(System::IntPtr sock, System::Net::Sockets::Socket::WSABUF* bufarray, int count, System::Net::Sockets::SocketFlags flags, int& error, bool blocking) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Send_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "Send_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sock), ::il2cpp_utils::ExtractType(bufarray), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(blocking)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sock, bufarray, count, flags, error, blocking);
}
// Autogenerated method: System.Net.Sockets.Socket.Send_internal
int System::Net::Sockets::Socket::Send_internal(System::Net::Sockets::SafeSocketHandle* safeHandle, uint8_t* buffer, int count, System::Net::Sockets::SocketFlags flags, int& error, bool blocking) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Send_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "Send_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(blocking)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, safeHandle, buffer, count, flags, error, blocking);
}
// Autogenerated method: System.Net.Sockets.Socket.Send_internal
int System::Net::Sockets::Socket::Send_internal(System::IntPtr sock, uint8_t* buffer, int count, System::Net::Sockets::SocketFlags flags, int& error, bool blocking) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Send_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "Send_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sock), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(blocking)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sock, buffer, count, flags, error, blocking);
}
// Autogenerated method: System.Net.Sockets.Socket.SendTo
int System::Net::Sockets::Socket::SendTo(::Array<uint8_t>* buffer, int offset, int size, System::Net::Sockets::SocketFlags socketFlags, System::Net::EndPoint* remoteEP) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::SendTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size), ::il2cpp_utils::ExtractType(socketFlags), ::il2cpp_utils::ExtractType(remoteEP)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffer, offset, size, socketFlags, remoteEP);
}
// Autogenerated method: System.Net.Sockets.Socket.EndSendTo
int System::Net::Sockets::Socket::EndSendTo(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::EndSendTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndSendTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.Sockets.Socket.SendTo_internal
int System::Net::Sockets::Socket::SendTo_internal(System::Net::Sockets::SafeSocketHandle* safeHandle, uint8_t* buffer, int count, System::Net::Sockets::SocketFlags flags, System::Net::SocketAddress* sa, int& error, bool blocking) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::SendTo_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "SendTo_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(sa), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(blocking)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, safeHandle, buffer, count, flags, sa, error, blocking);
}
// Autogenerated method: System.Net.Sockets.Socket.SendTo_internal
int System::Net::Sockets::Socket::SendTo_internal(System::IntPtr sock, uint8_t* buffer, int count, System::Net::Sockets::SocketFlags flags, System::Net::SocketAddress* sa, int& error, bool blocking) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::SendTo_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "SendTo_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sock), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(sa), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(blocking)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sock, buffer, count, flags, sa, error, blocking);
}
// Autogenerated method: System.Net.Sockets.Socket.GetSocketOption
::Il2CppObject* System::Net::Sockets::Socket::GetSocketOption(System::Net::Sockets::SocketOptionLevel optionLevel, System::Net::Sockets::SocketOptionName optionName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::GetSocketOption");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSocketOption", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(optionLevel), ::il2cpp_utils::ExtractType(optionName)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, optionLevel, optionName);
}
// Autogenerated method: System.Net.Sockets.Socket.GetSocketOption_obj_internal
void System::Net::Sockets::Socket::GetSocketOption_obj_internal(System::Net::Sockets::SafeSocketHandle* safeHandle, System::Net::Sockets::SocketOptionLevel level, System::Net::Sockets::SocketOptionName name, ::Il2CppObject*& obj_val, int& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::GetSocketOption_obj_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "GetSocketOption_obj_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, safeHandle, level, name, obj_val, error);
}
// Autogenerated method: System.Net.Sockets.Socket.GetSocketOption_obj_internal
void System::Net::Sockets::Socket::GetSocketOption_obj_internal(System::IntPtr socket, System::Net::Sockets::SocketOptionLevel level, System::Net::Sockets::SocketOptionName name, ::Il2CppObject*& obj_val, int& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::GetSocketOption_obj_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "GetSocketOption_obj_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(socket), ::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, socket, level, name, obj_val, error);
}
// Autogenerated method: System.Net.Sockets.Socket.SetSocketOption
void System::Net::Sockets::Socket::SetSocketOption(System::Net::Sockets::SocketOptionLevel optionLevel, System::Net::Sockets::SocketOptionName optionName, bool optionValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::SetSocketOption");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSocketOption", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(optionLevel), ::il2cpp_utils::ExtractType(optionName), ::il2cpp_utils::ExtractType(optionValue)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, optionLevel, optionName, optionValue);
}
// Autogenerated method: System.Net.Sockets.Socket.SetSocketOption
void System::Net::Sockets::Socket::SetSocketOption(System::Net::Sockets::SocketOptionLevel optionLevel, System::Net::Sockets::SocketOptionName optionName, int optionValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::SetSocketOption");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSocketOption", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(optionLevel), ::il2cpp_utils::ExtractType(optionName), ::il2cpp_utils::ExtractType(optionValue)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, optionLevel, optionName, optionValue);
}
// Autogenerated method: System.Net.Sockets.Socket.SetSocketOption_internal
void System::Net::Sockets::Socket::SetSocketOption_internal(System::Net::Sockets::SafeSocketHandle* safeHandle, System::Net::Sockets::SocketOptionLevel level, System::Net::Sockets::SocketOptionName name, ::Il2CppObject* obj_val, ::Array<uint8_t>* byte_val, int int_val, int& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::SetSocketOption_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "SetSocketOption_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(obj_val), ::il2cpp_utils::ExtractType(byte_val), ::il2cpp_utils::ExtractType(int_val), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, safeHandle, level, name, obj_val, byte_val, int_val, error);
}
// Autogenerated method: System.Net.Sockets.Socket.SetSocketOption_internal
void System::Net::Sockets::Socket::SetSocketOption_internal(System::IntPtr socket, System::Net::Sockets::SocketOptionLevel level, System::Net::Sockets::SocketOptionName name, ::Il2CppObject* obj_val, ::Array<uint8_t>* byte_val, int int_val, int& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::SetSocketOption_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "SetSocketOption_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(socket), ::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(obj_val), ::il2cpp_utils::ExtractType(byte_val), ::il2cpp_utils::ExtractType(int_val), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, socket, level, name, obj_val, byte_val, int_val, error);
}
// Autogenerated method: System.Net.Sockets.Socket.IOControl
int System::Net::Sockets::Socket::IOControl(int ioControlCode, ::Array<uint8_t>* optionInValue, ::Array<uint8_t>* optionOutValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::IOControl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IOControl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ioControlCode), ::il2cpp_utils::ExtractType(optionInValue), ::il2cpp_utils::ExtractType(optionOutValue)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, ioControlCode, optionInValue, optionOutValue);
}
// Autogenerated method: System.Net.Sockets.Socket.IOControl_internal
int System::Net::Sockets::Socket::IOControl_internal(System::Net::Sockets::SafeSocketHandle* safeHandle, int ioctl_code, ::Array<uint8_t>* input, ::Array<uint8_t>* output, int& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::IOControl_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "IOControl_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractType(ioctl_code), ::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, safeHandle, ioctl_code, input, output, error);
}
// Autogenerated method: System.Net.Sockets.Socket.IOControl_internal
int System::Net::Sockets::Socket::IOControl_internal(System::IntPtr sock, int ioctl_code, ::Array<uint8_t>* input, ::Array<uint8_t>* output, int& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::IOControl_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "IOControl_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sock), ::il2cpp_utils::ExtractType(ioctl_code), ::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(output), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, sock, ioctl_code, input, output, error);
}
// Autogenerated method: System.Net.Sockets.Socket.Close
void System::Net::Sockets::Socket::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.Socket.Close
void System::Net::Sockets::Socket::Close(int timeout) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(timeout)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, timeout);
}
// Autogenerated method: System.Net.Sockets.Socket.Close_internal
void System::Net::Sockets::Socket::Close_internal(System::IntPtr socket, int& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Close_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "Close_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(socket), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, socket, error);
}
// Autogenerated method: System.Net.Sockets.Socket.Shutdown
void System::Net::Sockets::Socket::Shutdown(System::Net::Sockets::SocketShutdown how) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Shutdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Shutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(how)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, how);
}
// Autogenerated method: System.Net.Sockets.Socket.Shutdown_internal
void System::Net::Sockets::Socket::Shutdown_internal(System::Net::Sockets::SafeSocketHandle* safeHandle, System::Net::Sockets::SocketShutdown how, int& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Shutdown_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "Shutdown_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(safeHandle), ::il2cpp_utils::ExtractType(how), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, safeHandle, how, error);
}
// Autogenerated method: System.Net.Sockets.Socket.Shutdown_internal
void System::Net::Sockets::Socket::Shutdown_internal(System::IntPtr socket, System::Net::Sockets::SocketShutdown how, int& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Shutdown_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "Shutdown_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(socket), ::il2cpp_utils::ExtractType(how), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, socket, how, error);
}
// Autogenerated method: System.Net.Sockets.Socket.Dispose
void System::Net::Sockets::Socket::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Sockets.Socket.Linger
void System::Net::Sockets::Socket::Linger(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Linger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Linger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, handle);
}
// Autogenerated method: System.Net.Sockets.Socket.ThrowIfDisposedAndClosed
void System::Net::Sockets::Socket::ThrowIfDisposedAndClosed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::ThrowIfDisposedAndClosed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfDisposedAndClosed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.Socket.ThrowIfBufferNull
void System::Net::Sockets::Socket::ThrowIfBufferNull(::Array<uint8_t>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::ThrowIfBufferNull");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfBufferNull", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer);
}
// Autogenerated method: System.Net.Sockets.Socket.ThrowIfBufferOutOfRange
void System::Net::Sockets::Socket::ThrowIfBufferOutOfRange(::Array<uint8_t>* buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::ThrowIfBufferOutOfRange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfBufferOutOfRange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: System.Net.Sockets.Socket.ThrowIfUdp
void System::Net::Sockets::Socket::ThrowIfUdp() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::ThrowIfUdp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ThrowIfUdp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.Socket.ValidateEndIAsyncResult
System::Net::Sockets::SocketAsyncResult* System::Net::Sockets::Socket::ValidateEndIAsyncResult(System::IAsyncResult* ares, ::Il2CppString* methodName, ::Il2CppString* argName) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::ValidateEndIAsyncResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ValidateEndIAsyncResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ares), ::il2cpp_utils::ExtractType(methodName), ::il2cpp_utils::ExtractType(argName)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Sockets::SocketAsyncResult*, false>(this, ___internal__method, ares, methodName, argName);
}
// Autogenerated method: System.Net.Sockets.Socket.QueueIOSelectorJob
void System::Net::Sockets::Socket::QueueIOSelectorJob(System::Threading::SemaphoreSlim* sem, System::IntPtr handle, System::IOSelectorJob* job) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::QueueIOSelectorJob");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "QueueIOSelectorJob", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sem), ::il2cpp_utils::ExtractType(handle), ::il2cpp_utils::ExtractType(job)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sem, handle, job);
}
// Autogenerated method: System.Net.Sockets.Socket.InitSocketAsyncEventArgs
void System::Net::Sockets::Socket::InitSocketAsyncEventArgs(System::Net::Sockets::SocketAsyncEventArgs* e, System::AsyncCallback* callback, ::Il2CppObject* state, System::Net::Sockets::SocketOperation operation) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::InitSocketAsyncEventArgs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitSocketAsyncEventArgs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(operation)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, e, callback, state, operation);
}
// Autogenerated method: System.Net.Sockets.Socket.SocketOperationToSocketAsyncOperation
System::Net::Sockets::SocketAsyncOperation System::Net::Sockets::Socket::SocketOperationToSocketAsyncOperation(System::Net::Sockets::SocketOperation op) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::SocketOperationToSocketAsyncOperation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SocketOperationToSocketAsyncOperation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Sockets::SocketAsyncOperation, false>(this, ___internal__method, op);
}
// Autogenerated method: System.Net.Sockets.Socket.RemapIPEndPoint
System::Net::IPEndPoint* System::Net::Sockets::Socket::RemapIPEndPoint(System::Net::IPEndPoint* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::RemapIPEndPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemapIPEndPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::IPEndPoint*, false>(this, ___internal__method, input);
}
// Autogenerated method: System.Net.Sockets.Socket.cancel_blocking_socket_operation
void System::Net::Sockets::Socket::cancel_blocking_socket_operation(System::Threading::Thread* thread) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::cancel_blocking_socket_operation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "cancel_blocking_socket_operation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thread)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, thread);
}
// Autogenerated method: System.Net.Sockets.Socket.get_FamilyHint
int System::Net::Sockets::Socket::get_FamilyHint() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::get_FamilyHint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "get_FamilyHint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Sockets.Socket.IsProtocolSupported_internal
bool System::Net::Sockets::Socket::IsProtocolSupported_internal(System::Net::NetworkInformation::NetworkInterfaceComponent networkInterface) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::IsProtocolSupported_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "IsProtocolSupported_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(networkInterface)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, networkInterface);
}
// Autogenerated method: System.Net.Sockets.Socket.IsProtocolSupported
bool System::Net::Sockets::Socket::IsProtocolSupported(System::Net::NetworkInformation::NetworkInterfaceComponent networkInterface) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::IsProtocolSupported");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", "IsProtocolSupported", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(networkInterface)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, networkInterface);
}
// Autogenerated method: System.Net.Sockets.Socket..cctor
void System::Net::Sockets::Socket::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Sockets.Socket.Finalize
void System::Net::Sockets::Socket::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: Socket::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::*)(System::Net::Sockets::AddressFamily, System::Net::Sockets::SocketType, System::Net::Sockets::ProtocolType)>(&Socket::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::AddressFamily>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketType>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::ProtocolType>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::*)(System::Net::Sockets::AddressFamily, System::Net::Sockets::SocketType, System::Net::Sockets::ProtocolType)>(&Socket::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::AddressFamily>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketType>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::ProtocolType>()});
  }
};
// Writing MetadataGetter for method: Socket::get_SupportsIPv4
// Il2CppName: get_SupportsIPv4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Socket::get_SupportsIPv4)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "get_SupportsIPv4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Socket::get_OSSupportsIPv4
// Il2CppName: get_OSSupportsIPv4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Socket::get_OSSupportsIPv4)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "get_OSSupportsIPv4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Socket::get_SupportsIPv6
// Il2CppName: get_SupportsIPv6
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Socket::get_SupportsIPv6)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "get_SupportsIPv6", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Socket::get_OSSupportsIPv6
// Il2CppName: get_OSSupportsIPv6
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&Socket::get_OSSupportsIPv6)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "get_OSSupportsIPv6", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Socket::get_Handle
// Il2CppName: get_Handle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (Socket::*)()>(&Socket::get_Handle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "get_Handle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Socket::get_AddressFamily
// Il2CppName: get_AddressFamily
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::Sockets::AddressFamily (Socket::*)()>(&Socket::get_AddressFamily)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "get_AddressFamily", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Socket::get_SocketType
// Il2CppName: get_SocketType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::Sockets::SocketType (Socket::*)()>(&Socket::get_SocketType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "get_SocketType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Socket::get_ProtocolType
// Il2CppName: get_ProtocolType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::Sockets::ProtocolType (Socket::*)()>(&Socket::get_ProtocolType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "get_ProtocolType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Socket::set_ExclusiveAddressUse
// Il2CppName: set_ExclusiveAddressUse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::*)(bool)>(&Socket::set_ExclusiveAddressUse)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "set_ExclusiveAddressUse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Socket::set_ReceiveBufferSize
// Il2CppName: set_ReceiveBufferSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::*)(int)>(&Socket::set_ReceiveBufferSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "set_ReceiveBufferSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Socket::set_SendBufferSize
// Il2CppName: set_SendBufferSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::*)(int)>(&Socket::set_SendBufferSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "set_SendBufferSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Socket::set_ReceiveTimeout
// Il2CppName: set_ReceiveTimeout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::*)(int)>(&Socket::set_ReceiveTimeout)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "set_ReceiveTimeout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Socket::set_SendTimeout
// Il2CppName: set_SendTimeout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::*)(int)>(&Socket::set_SendTimeout)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "set_SendTimeout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Socket::get_Ttl
// Il2CppName: get_Ttl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int16_t (Socket::*)()>(&Socket::get_Ttl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "get_Ttl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Socket::set_Ttl
// Il2CppName: set_Ttl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::*)(int16_t)>(&Socket::set_Ttl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "set_Ttl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int16_t>()});
  }
};
// Writing MetadataGetter for method: Socket::set_DontFragment
// Il2CppName: set_DontFragment
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::*)(bool)>(&Socket::set_DontFragment)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "set_DontFragment", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Socket::get_DualMode
// Il2CppName: get_DualMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Socket::*)()>(&Socket::get_DualMode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "get_DualMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Socket::set_DualMode
// Il2CppName: set_DualMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::*)(bool)>(&Socket::set_DualMode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "set_DualMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Socket::get_IsDualMode
// Il2CppName: get_IsDualMode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Socket::*)()>(&Socket::get_IsDualMode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "get_IsDualMode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Socket::Send
// Il2CppName: Send
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Socket::*)(System::Collections::Generic::IList_1<System::ArraySegment_1<uint8_t>>*, System::Net::Sockets::SocketFlags)>(&Socket::Send)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Send", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::IList_1<System::ArraySegment_1<uint8_t>>*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketFlags>()});
  }
};
// Writing MetadataGetter for method: Socket::Send
// Il2CppName: Send
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Socket::*)(::Array<uint8_t>*, int, int, System::Net::Sockets::SocketFlags)>(&Socket::Send)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Send", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketFlags>()});
  }
};
// Writing MetadataGetter for method: Socket::Receive
// Il2CppName: Receive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Socket::*)(::Array<uint8_t>*, int, int, System::Net::Sockets::SocketFlags)>(&Socket::Receive)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Receive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketFlags>()});
  }
};
// Writing MetadataGetter for method: Socket::Receive
// Il2CppName: Receive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Socket::*)(System::Collections::Generic::IList_1<System::ArraySegment_1<uint8_t>>*, System::Net::Sockets::SocketFlags)>(&Socket::Receive)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Receive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::IList_1<System::ArraySegment_1<uint8_t>>*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketFlags>()});
  }
};
// Writing MetadataGetter for method: Socket::IOControl
// Il2CppName: IOControl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Socket::*)(System::Net::Sockets::IOControlCode, ::Array<uint8_t>*, ::Array<uint8_t>*)>(&Socket::IOControl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "IOControl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::IOControlCode>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: Socket::SetIPProtectionLevel
// Il2CppName: SetIPProtectionLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::*)(System::Net::Sockets::IPProtectionLevel)>(&Socket::SetIPProtectionLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "SetIPProtectionLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::IPProtectionLevel>()});
  }
};
// Writing MetadataGetter for method: Socket::BeginSend
// Il2CppName: BeginSend
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (Socket::*)(::Array<uint8_t>*, int, int, System::Net::Sockets::SocketFlags, System::AsyncCallback*, ::Il2CppObject*)>(&Socket::BeginSend)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "BeginSend", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketFlags>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: Socket::EndSend
// Il2CppName: EndSend
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Socket::*)(System::IAsyncResult*)>(&Socket::EndSend)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "EndSend", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Writing MetadataGetter for method: Socket::BeginReceive
// Il2CppName: BeginReceive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (Socket::*)(::Array<uint8_t>*, int, int, System::Net::Sockets::SocketFlags, System::AsyncCallback*, ::Il2CppObject*)>(&Socket::BeginReceive)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "BeginReceive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketFlags>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: Socket::EndReceive
// Il2CppName: EndReceive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Socket::*)(System::IAsyncResult*)>(&Socket::EndReceive)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "EndReceive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Writing MetadataGetter for method: Socket::get_InternalSyncObject
// Il2CppName: get_InternalSyncObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)()>(&Socket::get_InternalSyncObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "get_InternalSyncObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Socket::get_CleanedUp
// Il2CppName: get_CleanedUp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Socket::*)()>(&Socket::get_CleanedUp)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "get_CleanedUp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Socket::InitializeSockets
// Il2CppName: InitializeSockets
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Socket::InitializeSockets)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "InitializeSockets", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Socket::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::*)()>(&Socket::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Socket::InternalShutdown
// Il2CppName: InternalShutdown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::*)(System::Net::Sockets::SocketShutdown)>(&Socket::InternalShutdown)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "InternalShutdown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketShutdown>()});
  }
};
// Writing MetadataGetter for method: Socket::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::*)(System::Net::Sockets::AddressFamily, System::Net::Sockets::SocketType, System::Net::Sockets::ProtocolType, System::Net::Sockets::SafeSocketHandle*)>(&Socket::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::AddressFamily>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketType>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::ProtocolType>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SafeSocketHandle*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::*)(System::Net::Sockets::AddressFamily, System::Net::Sockets::SocketType, System::Net::Sockets::ProtocolType, System::Net::Sockets::SafeSocketHandle*)>(&Socket::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::AddressFamily>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketType>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::ProtocolType>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SafeSocketHandle*>()});
  }
};
// Writing MetadataGetter for method: Socket::SocketDefaults
// Il2CppName: SocketDefaults
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::*)()>(&Socket::SocketDefaults)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "SocketDefaults", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Socket::Socket_internal
// Il2CppName: Socket_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (Socket::*)(System::Net::Sockets::AddressFamily, System::Net::Sockets::SocketType, System::Net::Sockets::ProtocolType, int&)>(&Socket::Socket_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Socket_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::AddressFamily>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketType>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::ProtocolType>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: Socket::get_Available
// Il2CppName: get_Available
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Socket::*)()>(&Socket::get_Available)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "get_Available", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Socket::Available_internal
// Il2CppName: Available_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::Net::Sockets::SafeSocketHandle*, int&)>(&Socket::Available_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Available_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SafeSocketHandle*>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: Socket::Available_internal
// Il2CppName: Available_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::IntPtr, int&)>(&Socket::Available_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Available_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: Socket::set_EnableBroadcast
// Il2CppName: set_EnableBroadcast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::*)(bool)>(&Socket::set_EnableBroadcast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "set_EnableBroadcast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Socket::get_IsBound
// Il2CppName: get_IsBound
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Socket::*)()>(&Socket::get_IsBound)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "get_IsBound", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Socket::get_LocalEndPoint
// Il2CppName: get_LocalEndPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::EndPoint* (Socket::*)()>(&Socket::get_LocalEndPoint)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "get_LocalEndPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Socket::LocalEndPoint_internal
// Il2CppName: LocalEndPoint_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::SocketAddress* (*)(System::Net::Sockets::SafeSocketHandle*, int, int&)>(&Socket::LocalEndPoint_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "LocalEndPoint_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SafeSocketHandle*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: Socket::LocalEndPoint_internal
// Il2CppName: LocalEndPoint_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::SocketAddress* (*)(System::IntPtr, int, int&)>(&Socket::LocalEndPoint_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "LocalEndPoint_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: Socket::get_Blocking
// Il2CppName: get_Blocking
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Socket::*)()>(&Socket::get_Blocking)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "get_Blocking", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Socket::set_Blocking
// Il2CppName: set_Blocking
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::*)(bool)>(&Socket::set_Blocking)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "set_Blocking", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Socket::Blocking_internal
// Il2CppName: Blocking_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Net::Sockets::SafeSocketHandle*, bool, int&)>(&Socket::Blocking_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Blocking_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SafeSocketHandle*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: Socket::Blocking_internal
// Il2CppName: Blocking_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, bool, int&)>(&Socket::Blocking_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Blocking_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: Socket::get_Connected
// Il2CppName: get_Connected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Socket::*)()>(&Socket::get_Connected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "get_Connected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Socket::set_NoDelay
// Il2CppName: set_NoDelay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::*)(bool)>(&Socket::set_NoDelay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "set_NoDelay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Socket::Poll
// Il2CppName: Poll
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Socket::*)(int, System::Net::Sockets::SelectMode)>(&Socket::Poll)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Poll", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SelectMode>()});
  }
};
// Writing MetadataGetter for method: Socket::Poll_internal
// Il2CppName: Poll_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::Net::Sockets::SafeSocketHandle*, System::Net::Sockets::SelectMode, int, int&)>(&Socket::Poll_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Poll_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SafeSocketHandle*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SelectMode>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: Socket::Poll_internal
// Il2CppName: Poll_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::IntPtr, System::Net::Sockets::SelectMode, int, int&)>(&Socket::Poll_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Poll_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SelectMode>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: Socket::Accept
// Il2CppName: Accept
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::Sockets::Socket* (Socket::*)()>(&Socket::Accept)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Accept", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Socket::Accept
// Il2CppName: Accept
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::*)(System::Net::Sockets::Socket*)>(&Socket::Accept)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Accept", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::Socket*>()});
  }
};
// Writing MetadataGetter for method: Socket::AcceptAsync
// Il2CppName: AcceptAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (Socket::*)(System::Net::Sockets::SocketAsyncEventArgs*)>(&Socket::AcceptAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "AcceptAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketAsyncEventArgs*>()});
  }
};
// Writing MetadataGetter for method: Socket::BeginAccept
// Il2CppName: BeginAccept
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (Socket::*)(System::AsyncCallback*, ::Il2CppObject*)>(&Socket::BeginAccept)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "BeginAccept", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: Socket::EndAccept
// Il2CppName: EndAccept
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::Sockets::Socket* (Socket::*)(System::IAsyncResult*)>(&Socket::EndAccept)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "EndAccept", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Writing MetadataGetter for method: Socket::EndAccept
// Il2CppName: EndAccept
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::Sockets::Socket* (Socket::*)(::Array<uint8_t>*&, int&, System::IAsyncResult*)>(&Socket::EndAccept)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "EndAccept", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Writing MetadataGetter for method: Socket::Accept_internal
// Il2CppName: Accept_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::Sockets::SafeSocketHandle* (*)(System::Net::Sockets::SafeSocketHandle*, int&, bool)>(&Socket::Accept_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Accept_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SafeSocketHandle*>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Socket::Accept_internal
// Il2CppName: Accept_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (*)(System::IntPtr, int&, bool)>(&Socket::Accept_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Accept_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Socket::Bind
// Il2CppName: Bind
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::*)(System::Net::EndPoint*)>(&Socket::Bind)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Bind", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::EndPoint*>()});
  }
};
// Writing MetadataGetter for method: Socket::Bind_internal
// Il2CppName: Bind_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Net::Sockets::SafeSocketHandle*, System::Net::SocketAddress*, int&)>(&Socket::Bind_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Bind_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SafeSocketHandle*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::SocketAddress*>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: Socket::Bind_internal
// Il2CppName: Bind_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, System::Net::SocketAddress*, int&)>(&Socket::Bind_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Bind_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::Net::SocketAddress*>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: Socket::Listen
// Il2CppName: Listen
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::*)(int)>(&Socket::Listen)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Listen", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Socket::Listen_internal
// Il2CppName: Listen_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Net::Sockets::SafeSocketHandle*, int, int&)>(&Socket::Listen_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Listen_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SafeSocketHandle*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: Socket::Listen_internal
// Il2CppName: Listen_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, int, int&)>(&Socket::Listen_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Listen_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: Socket::Connect
// Il2CppName: Connect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::*)(System::Net::EndPoint*)>(&Socket::Connect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Connect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::EndPoint*>()});
  }
};
// Writing MetadataGetter for method: Socket::BeginConnect
// Il2CppName: BeginConnect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (Socket::*)(::Il2CppString*, int, System::AsyncCallback*, ::Il2CppObject*)>(&Socket::BeginConnect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "BeginConnect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: Socket::BeginConnect
// Il2CppName: BeginConnect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (Socket::*)(::Array<System::Net::IPAddress*>*, int, System::AsyncCallback*, ::Il2CppObject*)>(&Socket::BeginConnect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "BeginConnect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<System::Net::IPAddress*>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: Socket::BeginMConnect
// Il2CppName: BeginMConnect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Net::Sockets::SocketAsyncResult*)>(&Socket::BeginMConnect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "BeginMConnect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketAsyncResult*>()});
  }
};
// Writing MetadataGetter for method: Socket::BeginSConnect
// Il2CppName: BeginSConnect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Net::Sockets::SocketAsyncResult*)>(&Socket::BeginSConnect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "BeginSConnect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketAsyncResult*>()});
  }
};
// Writing MetadataGetter for method: Socket::EndConnect
// Il2CppName: EndConnect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::*)(System::IAsyncResult*)>(&Socket::EndConnect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "EndConnect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Writing MetadataGetter for method: Socket::Connect_internal
// Il2CppName: Connect_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Net::Sockets::SafeSocketHandle*, System::Net::SocketAddress*, int&, bool)>(&Socket::Connect_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Connect_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SafeSocketHandle*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::SocketAddress*>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Socket::Connect_internal
// Il2CppName: Connect_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, System::Net::SocketAddress*, int&, bool)>(&Socket::Connect_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Connect_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::Net::SocketAddress*>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Socket::Disconnect
// Il2CppName: Disconnect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::*)(bool)>(&Socket::Disconnect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Disconnect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Socket::EndDisconnect
// Il2CppName: EndDisconnect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::*)(System::IAsyncResult*)>(&Socket::EndDisconnect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "EndDisconnect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Writing MetadataGetter for method: Socket::Disconnect_internal
// Il2CppName: Disconnect_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Net::Sockets::SafeSocketHandle*, bool, int&)>(&Socket::Disconnect_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Disconnect_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SafeSocketHandle*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: Socket::Disconnect_internal
// Il2CppName: Disconnect_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, bool, int&)>(&Socket::Disconnect_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Disconnect_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: Socket::Receive
// Il2CppName: Receive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Socket::*)(::Array<uint8_t>*, int, int, System::Net::Sockets::SocketFlags, System::Net::Sockets::SocketError&)>(&Socket::Receive)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Receive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketFlags>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketError&>()});
  }
};
// Writing MetadataGetter for method: Socket::Receive
// Il2CppName: Receive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Socket::*)(System::Collections::Generic::IList_1<System::ArraySegment_1<uint8_t>>*, System::Net::Sockets::SocketFlags, System::Net::Sockets::SocketError&)>(&Socket::Receive)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Receive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::IList_1<System::ArraySegment_1<uint8_t>>*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketFlags>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketError&>()});
  }
};
// Writing MetadataGetter for method: Socket::BeginReceive
// Il2CppName: BeginReceive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (Socket::*)(::Array<uint8_t>*, int, int, System::Net::Sockets::SocketFlags, System::Net::Sockets::SocketError&, System::AsyncCallback*, ::Il2CppObject*)>(&Socket::BeginReceive)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "BeginReceive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketFlags>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketError&>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: Socket::EndReceive
// Il2CppName: EndReceive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Socket::*)(System::IAsyncResult*, System::Net::Sockets::SocketError&)>(&Socket::EndReceive)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "EndReceive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketError&>()});
  }
};
// Writing MetadataGetter for method: Socket::Receive_internal
// Il2CppName: Receive_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::Net::Sockets::SafeSocketHandle*, System::Net::Sockets::Socket::WSABUF*, int, System::Net::Sockets::SocketFlags, int&, bool)>(&Socket::Receive_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Receive_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SafeSocketHandle*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::Socket::WSABUF*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketFlags>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Socket::Receive_internal
// Il2CppName: Receive_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::IntPtr, System::Net::Sockets::Socket::WSABUF*, int, System::Net::Sockets::SocketFlags, int&, bool)>(&Socket::Receive_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Receive_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::Socket::WSABUF*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketFlags>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Socket::Receive_internal
// Il2CppName: Receive_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::Net::Sockets::SafeSocketHandle*, uint8_t*, int, System::Net::Sockets::SocketFlags, int&, bool)>(&Socket::Receive_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Receive_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SafeSocketHandle*>(), ::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketFlags>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Socket::Receive_internal
// Il2CppName: Receive_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::IntPtr, uint8_t*, int, System::Net::Sockets::SocketFlags, int&, bool)>(&Socket::Receive_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Receive_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketFlags>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Socket::ReceiveFrom
// Il2CppName: ReceiveFrom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Socket::*)(::Array<uint8_t>*, int, int, System::Net::Sockets::SocketFlags, System::Net::EndPoint*&)>(&Socket::ReceiveFrom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "ReceiveFrom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketFlags>(), ::il2cpp_utils::ExtractIndependentType<System::Net::EndPoint*&>()});
  }
};
// Writing MetadataGetter for method: Socket::ReceiveFrom
// Il2CppName: ReceiveFrom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Socket::*)(::Array<uint8_t>*, int, int, System::Net::Sockets::SocketFlags, System::Net::EndPoint*&, System::Net::Sockets::SocketError&)>(&Socket::ReceiveFrom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "ReceiveFrom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketFlags>(), ::il2cpp_utils::ExtractIndependentType<System::Net::EndPoint*&>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketError&>()});
  }
};
// Writing MetadataGetter for method: Socket::EndReceiveFrom
// Il2CppName: EndReceiveFrom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Socket::*)(System::IAsyncResult*, System::Net::EndPoint*&)>(&Socket::EndReceiveFrom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "EndReceiveFrom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::EndPoint*&>()});
  }
};
// Writing MetadataGetter for method: Socket::ReceiveFrom_internal
// Il2CppName: ReceiveFrom_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::Net::Sockets::SafeSocketHandle*, uint8_t*, int, System::Net::Sockets::SocketFlags, System::Net::SocketAddress*&, int&, bool)>(&Socket::ReceiveFrom_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "ReceiveFrom_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SafeSocketHandle*>(), ::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketFlags>(), ::il2cpp_utils::ExtractIndependentType<System::Net::SocketAddress*&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Socket::ReceiveFrom_internal
// Il2CppName: ReceiveFrom_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::IntPtr, uint8_t*, int, System::Net::Sockets::SocketFlags, System::Net::SocketAddress*&, int&, bool)>(&Socket::ReceiveFrom_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "ReceiveFrom_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketFlags>(), ::il2cpp_utils::ExtractIndependentType<System::Net::SocketAddress*&>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Socket::Send
// Il2CppName: Send
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Socket::*)(::Array<uint8_t>*, int, int, System::Net::Sockets::SocketFlags, System::Net::Sockets::SocketError&)>(&Socket::Send)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Send", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketFlags>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketError&>()});
  }
};
// Writing MetadataGetter for method: Socket::Send
// Il2CppName: Send
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Socket::*)(System::Collections::Generic::IList_1<System::ArraySegment_1<uint8_t>>*, System::Net::Sockets::SocketFlags, System::Net::Sockets::SocketError&)>(&Socket::Send)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Send", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::IList_1<System::ArraySegment_1<uint8_t>>*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketFlags>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketError&>()});
  }
};
// Writing MetadataGetter for method: Socket::BeginSend
// Il2CppName: BeginSend
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (Socket::*)(::Array<uint8_t>*, int, int, System::Net::Sockets::SocketFlags, System::Net::Sockets::SocketError&, System::AsyncCallback*, ::Il2CppObject*)>(&Socket::BeginSend)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "BeginSend", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketFlags>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketError&>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: Socket::BeginSendCallback
// Il2CppName: BeginSendCallback
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Net::Sockets::SocketAsyncResult*, int)>(&Socket::BeginSendCallback)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "BeginSendCallback", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketAsyncResult*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Socket::EndSend
// Il2CppName: EndSend
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Socket::*)(System::IAsyncResult*, System::Net::Sockets::SocketError&)>(&Socket::EndSend)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "EndSend", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketError&>()});
  }
};
// Writing MetadataGetter for method: Socket::Send_internal
// Il2CppName: Send_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::Net::Sockets::SafeSocketHandle*, System::Net::Sockets::Socket::WSABUF*, int, System::Net::Sockets::SocketFlags, int&, bool)>(&Socket::Send_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Send_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SafeSocketHandle*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::Socket::WSABUF*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketFlags>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Socket::Send_internal
// Il2CppName: Send_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::IntPtr, System::Net::Sockets::Socket::WSABUF*, int, System::Net::Sockets::SocketFlags, int&, bool)>(&Socket::Send_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Send_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::Socket::WSABUF*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketFlags>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Socket::Send_internal
// Il2CppName: Send_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::Net::Sockets::SafeSocketHandle*, uint8_t*, int, System::Net::Sockets::SocketFlags, int&, bool)>(&Socket::Send_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Send_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SafeSocketHandle*>(), ::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketFlags>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Socket::Send_internal
// Il2CppName: Send_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::IntPtr, uint8_t*, int, System::Net::Sockets::SocketFlags, int&, bool)>(&Socket::Send_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Send_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketFlags>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Socket::SendTo
// Il2CppName: SendTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Socket::*)(::Array<uint8_t>*, int, int, System::Net::Sockets::SocketFlags, System::Net::EndPoint*)>(&Socket::SendTo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "SendTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketFlags>(), ::il2cpp_utils::ExtractIndependentType<System::Net::EndPoint*>()});
  }
};
// Writing MetadataGetter for method: Socket::EndSendTo
// Il2CppName: EndSendTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Socket::*)(System::IAsyncResult*)>(&Socket::EndSendTo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "EndSendTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Writing MetadataGetter for method: Socket::SendTo_internal
// Il2CppName: SendTo_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::Net::Sockets::SafeSocketHandle*, uint8_t*, int, System::Net::Sockets::SocketFlags, System::Net::SocketAddress*, int&, bool)>(&Socket::SendTo_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "SendTo_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SafeSocketHandle*>(), ::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketFlags>(), ::il2cpp_utils::ExtractIndependentType<System::Net::SocketAddress*>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Socket::SendTo_internal
// Il2CppName: SendTo_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::IntPtr, uint8_t*, int, System::Net::Sockets::SocketFlags, System::Net::SocketAddress*, int&, bool)>(&Socket::SendTo_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "SendTo_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<uint8_t*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketFlags>(), ::il2cpp_utils::ExtractIndependentType<System::Net::SocketAddress*>(), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Socket::GetSocketOption
// Il2CppName: GetSocketOption
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (Socket::*)(System::Net::Sockets::SocketOptionLevel, System::Net::Sockets::SocketOptionName)>(&Socket::GetSocketOption)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "GetSocketOption", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketOptionLevel>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketOptionName>()});
  }
};
// Writing MetadataGetter for method: Socket::GetSocketOption_obj_internal
// Il2CppName: GetSocketOption_obj_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Net::Sockets::SafeSocketHandle*, System::Net::Sockets::SocketOptionLevel, System::Net::Sockets::SocketOptionName, ::Il2CppObject*&, int&)>(&Socket::GetSocketOption_obj_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "GetSocketOption_obj_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SafeSocketHandle*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketOptionLevel>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketOptionName>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: Socket::GetSocketOption_obj_internal
// Il2CppName: GetSocketOption_obj_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, System::Net::Sockets::SocketOptionLevel, System::Net::Sockets::SocketOptionName, ::Il2CppObject*&, int&)>(&Socket::GetSocketOption_obj_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "GetSocketOption_obj_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketOptionLevel>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketOptionName>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: Socket::SetSocketOption
// Il2CppName: SetSocketOption
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::*)(System::Net::Sockets::SocketOptionLevel, System::Net::Sockets::SocketOptionName, bool)>(&Socket::SetSocketOption)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "SetSocketOption", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketOptionLevel>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketOptionName>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Socket::SetSocketOption
// Il2CppName: SetSocketOption
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::*)(System::Net::Sockets::SocketOptionLevel, System::Net::Sockets::SocketOptionName, int)>(&Socket::SetSocketOption)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "SetSocketOption", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketOptionLevel>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketOptionName>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Socket::SetSocketOption_internal
// Il2CppName: SetSocketOption_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Net::Sockets::SafeSocketHandle*, System::Net::Sockets::SocketOptionLevel, System::Net::Sockets::SocketOptionName, ::Il2CppObject*, ::Array<uint8_t>*, int, int&)>(&Socket::SetSocketOption_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "SetSocketOption_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SafeSocketHandle*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketOptionLevel>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketOptionName>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: Socket::SetSocketOption_internal
// Il2CppName: SetSocketOption_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, System::Net::Sockets::SocketOptionLevel, System::Net::Sockets::SocketOptionName, ::Il2CppObject*, ::Array<uint8_t>*, int, int&)>(&Socket::SetSocketOption_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "SetSocketOption_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketOptionLevel>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketOptionName>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: Socket::IOControl
// Il2CppName: IOControl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Socket::*)(int, ::Array<uint8_t>*, ::Array<uint8_t>*)>(&Socket::IOControl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "IOControl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: Socket::IOControl_internal
// Il2CppName: IOControl_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::Net::Sockets::SafeSocketHandle*, int, ::Array<uint8_t>*, ::Array<uint8_t>*, int&)>(&Socket::IOControl_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "IOControl_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SafeSocketHandle*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: Socket::IOControl_internal
// Il2CppName: IOControl_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::IntPtr, int, ::Array<uint8_t>*, ::Array<uint8_t>*, int&)>(&Socket::IOControl_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "IOControl_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: Socket::Close
// Il2CppName: Close
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::*)()>(&Socket::Close)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Close", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Socket::Close
// Il2CppName: Close
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::*)(int)>(&Socket::Close)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Close", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Socket::Close_internal
// Il2CppName: Close_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, int&)>(&Socket::Close_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Close_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: Socket::Shutdown
// Il2CppName: Shutdown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::*)(System::Net::Sockets::SocketShutdown)>(&Socket::Shutdown)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Shutdown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketShutdown>()});
  }
};
// Writing MetadataGetter for method: Socket::Shutdown_internal
// Il2CppName: Shutdown_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Net::Sockets::SafeSocketHandle*, System::Net::Sockets::SocketShutdown, int&)>(&Socket::Shutdown_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Shutdown_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SafeSocketHandle*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketShutdown>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: Socket::Shutdown_internal
// Il2CppName: Shutdown_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr, System::Net::Sockets::SocketShutdown, int&)>(&Socket::Shutdown_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Shutdown_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketShutdown>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: Socket::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::*)(bool)>(&Socket::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: Socket::Linger
// Il2CppName: Linger
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::*)(System::IntPtr)>(&Socket::Linger)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Linger", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: Socket::ThrowIfDisposedAndClosed
// Il2CppName: ThrowIfDisposedAndClosed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::*)()>(&Socket::ThrowIfDisposedAndClosed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "ThrowIfDisposedAndClosed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Socket::ThrowIfBufferNull
// Il2CppName: ThrowIfBufferNull
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::*)(::Array<uint8_t>*)>(&Socket::ThrowIfBufferNull)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "ThrowIfBufferNull", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: Socket::ThrowIfBufferOutOfRange
// Il2CppName: ThrowIfBufferOutOfRange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::*)(::Array<uint8_t>*, int, int)>(&Socket::ThrowIfBufferOutOfRange)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "ThrowIfBufferOutOfRange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Socket::ThrowIfUdp
// Il2CppName: ThrowIfUdp
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::*)()>(&Socket::ThrowIfUdp)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "ThrowIfUdp", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Socket::ValidateEndIAsyncResult
// Il2CppName: ValidateEndIAsyncResult
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::Sockets::SocketAsyncResult* (Socket::*)(System::IAsyncResult*, ::Il2CppString*, ::Il2CppString*)>(&Socket::ValidateEndIAsyncResult)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "ValidateEndIAsyncResult", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: Socket::QueueIOSelectorJob
// Il2CppName: QueueIOSelectorJob
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::*)(System::Threading::SemaphoreSlim*, System::IntPtr, System::IOSelectorJob*)>(&Socket::QueueIOSelectorJob)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "QueueIOSelectorJob", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Threading::SemaphoreSlim*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IOSelectorJob*>()});
  }
};
// Writing MetadataGetter for method: Socket::InitSocketAsyncEventArgs
// Il2CppName: InitSocketAsyncEventArgs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::*)(System::Net::Sockets::SocketAsyncEventArgs*, System::AsyncCallback*, ::Il2CppObject*, System::Net::Sockets::SocketOperation)>(&Socket::InitSocketAsyncEventArgs)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "InitSocketAsyncEventArgs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketAsyncEventArgs*>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketOperation>()});
  }
};
// Writing MetadataGetter for method: Socket::SocketOperationToSocketAsyncOperation
// Il2CppName: SocketOperationToSocketAsyncOperation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::Sockets::SocketAsyncOperation (Socket::*)(System::Net::Sockets::SocketOperation)>(&Socket::SocketOperationToSocketAsyncOperation)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "SocketOperationToSocketAsyncOperation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketOperation>()});
  }
};
// Writing MetadataGetter for method: Socket::RemapIPEndPoint
// Il2CppName: RemapIPEndPoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::IPEndPoint* (Socket::*)(System::Net::IPEndPoint*)>(&Socket::RemapIPEndPoint)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "RemapIPEndPoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::IPEndPoint*>()});
  }
};
// Writing MetadataGetter for method: Socket::cancel_blocking_socket_operation
// Il2CppName: cancel_blocking_socket_operation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::Threading::Thread*)>(&Socket::cancel_blocking_socket_operation)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "cancel_blocking_socket_operation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Threading::Thread*>()});
  }
};
// Writing MetadataGetter for method: Socket::get_FamilyHint
// Il2CppName: get_FamilyHint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)()>(&Socket::get_FamilyHint)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "get_FamilyHint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Socket::IsProtocolSupported_internal
// Il2CppName: IsProtocolSupported_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::Net::NetworkInformation::NetworkInterfaceComponent)>(&Socket::IsProtocolSupported_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "IsProtocolSupported_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::NetworkInformation::NetworkInterfaceComponent>()});
  }
};
// Writing MetadataGetter for method: Socket::IsProtocolSupported
// Il2CppName: IsProtocolSupported
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::Net::NetworkInformation::NetworkInterfaceComponent)>(&Socket::IsProtocolSupported)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "IsProtocolSupported", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::NetworkInformation::NetworkInterfaceComponent>()});
  }
};
// Writing MetadataGetter for method: Socket::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Socket::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Socket::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::*)()>(&Socket::Finalize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Sockets.Socket/<>c
#include "System/Net/Sockets/Socket_--c.hpp"
// Including type: System.IOAsyncCallback
#include "System/IOAsyncCallback.hpp"
// Including type: System.IOAsyncResult
#include "System/IOAsyncResult.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Net.Sockets.Socket/<>c <>9
System::Net::Sockets::Socket::$$c* System::Net::Sockets::Socket::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Net::Sockets::Socket::$$c*>("System.Net.Sockets", "Socket/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Net.Sockets.Socket/<>c <>9
void System::Net::Sockets::Socket::$$c::_set_$$9(System::Net::Sockets::Socket::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Sockets", "Socket/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.IOAsyncCallback <>9__241_0
System::IOAsyncCallback* System::Net::Sockets::Socket::$$c::_get_$$9__241_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::$$c::_get_$$9__241_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::IOAsyncCallback*>("System.Net.Sockets", "Socket/<>c", "<>9__241_0")));
}
// Autogenerated static field setter
// Set static field: static public System.IOAsyncCallback <>9__241_0
void System::Net::Sockets::Socket::$$c::_set_$$9__241_0(System::IOAsyncCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::$$c::_set_$$9__241_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Sockets", "Socket/<>c", "<>9__241_0", value)));
}
// Autogenerated method: System.Net.Sockets.Socket/<>c..cctor
void System::Net::Sockets::Socket::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "Socket/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Sockets.Socket/<>c.<BeginSend>b__241_0
void System::Net::Sockets::Socket::$$c::$BeginSend$b__241_0(System::IOAsyncResult* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::$$c::<BeginSend>b__241_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginSend>b__241_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Net.Sockets.Socket/<>c.<.cctor>b__309_0
void System::Net::Sockets::Socket::$$c::$_cctor$b__309_0(System::IAsyncResult* ares) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::$$c::<.cctor>b__309_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__309_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ares)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ares);
}
// Autogenerated method: System.Net.Sockets.Socket/<>c.<.cctor>b__309_1
void System::Net::Sockets::Socket::$$c::$_cctor$b__309_1(System::IOAsyncResult* ares) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::$$c::<.cctor>b__309_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__309_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ares)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ares);
}
// Autogenerated method: System.Net.Sockets.Socket/<>c.<.cctor>b__309_2
void System::Net::Sockets::Socket::$$c::$_cctor$b__309_2(System::IOAsyncResult* ares) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::$$c::<.cctor>b__309_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__309_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ares)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ares);
}
// Autogenerated method: System.Net.Sockets.Socket/<>c.<.cctor>b__309_3
void System::Net::Sockets::Socket::$$c::$_cctor$b__309_3(System::IAsyncResult* ares) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::$$c::<.cctor>b__309_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__309_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ares)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ares);
}
// Autogenerated method: System.Net.Sockets.Socket/<>c.<.cctor>b__309_4
void System::Net::Sockets::Socket::$$c::$_cctor$b__309_4(System::IOAsyncResult* ares) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::$$c::<.cctor>b__309_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__309_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ares)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ares);
}
// Autogenerated method: System.Net.Sockets.Socket/<>c.<.cctor>b__309_5
void System::Net::Sockets::Socket::$$c::$_cctor$b__309_5(System::IAsyncResult* ares) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::$$c::<.cctor>b__309_5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__309_5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ares)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ares);
}
// Autogenerated method: System.Net.Sockets.Socket/<>c.<.cctor>b__309_6
void System::Net::Sockets::Socket::$$c::$_cctor$b__309_6(System::IOAsyncResult* ares) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::$$c::<.cctor>b__309_6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__309_6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ares)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ares);
}
// Autogenerated method: System.Net.Sockets.Socket/<>c.<.cctor>b__309_7
void System::Net::Sockets::Socket::$$c::$_cctor$b__309_7(System::IAsyncResult* ares) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::$$c::<.cctor>b__309_7");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__309_7", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ares)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ares);
}
// Autogenerated method: System.Net.Sockets.Socket/<>c.<.cctor>b__309_8
void System::Net::Sockets::Socket::$$c::$_cctor$b__309_8(System::IOAsyncResult* ares) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::$$c::<.cctor>b__309_8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__309_8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ares)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ares);
}
// Autogenerated method: System.Net.Sockets.Socket/<>c.<.cctor>b__309_9
void System::Net::Sockets::Socket::$$c::$_cctor$b__309_9(System::IOAsyncResult* ares) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::$$c::<.cctor>b__309_9");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__309_9", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ares)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ares);
}
// Autogenerated method: System.Net.Sockets.Socket/<>c.<.cctor>b__309_10
void System::Net::Sockets::Socket::$$c::$_cctor$b__309_10(System::IAsyncResult* ares) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::$$c::<.cctor>b__309_10");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__309_10", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ares)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ares);
}
// Autogenerated method: System.Net.Sockets.Socket/<>c.<.cctor>b__309_11
void System::Net::Sockets::Socket::$$c::$_cctor$b__309_11(System::IOAsyncResult* ares) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::$$c::<.cctor>b__309_11");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__309_11", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ares)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ares);
}
// Autogenerated method: System.Net.Sockets.Socket/<>c.<.cctor>b__309_12
void System::Net::Sockets::Socket::$$c::$_cctor$b__309_12(System::IAsyncResult* ares) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::$$c::<.cctor>b__309_12");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__309_12", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ares)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ares);
}
// Autogenerated method: System.Net.Sockets.Socket/<>c.<.cctor>b__309_13
void System::Net::Sockets::Socket::$$c::$_cctor$b__309_13(System::IOAsyncResult* ares) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::$$c::<.cctor>b__309_13");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__309_13", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ares)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ares);
}
// Autogenerated method: System.Net.Sockets.Socket/<>c.<.cctor>b__309_14
void System::Net::Sockets::Socket::$$c::$_cctor$b__309_14(System::IAsyncResult* ares) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::$$c::<.cctor>b__309_14");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<.cctor>b__309_14", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ares)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ares);
}
// Writing MetadataGetter for method: Socket::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Socket::$$c::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Socket::$$c::$BeginSend$b__241_0
// Il2CppName: <BeginSend>b__241_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::$$c::*)(System::IOAsyncResult*)>(&Socket::$$c::$BeginSend$b__241_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket::$$c*), "<BeginSend>b__241_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IOAsyncResult*>()});
  }
};
// Writing MetadataGetter for method: Socket::$$c::$_cctor$b__309_0
// Il2CppName: <.cctor>b__309_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::$$c::*)(System::IAsyncResult*)>(&Socket::$$c::$_cctor$b__309_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket::$$c*), "<.cctor>b__309_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Writing MetadataGetter for method: Socket::$$c::$_cctor$b__309_1
// Il2CppName: <.cctor>b__309_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::$$c::*)(System::IOAsyncResult*)>(&Socket::$$c::$_cctor$b__309_1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket::$$c*), "<.cctor>b__309_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IOAsyncResult*>()});
  }
};
// Writing MetadataGetter for method: Socket::$$c::$_cctor$b__309_2
// Il2CppName: <.cctor>b__309_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::$$c::*)(System::IOAsyncResult*)>(&Socket::$$c::$_cctor$b__309_2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket::$$c*), "<.cctor>b__309_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IOAsyncResult*>()});
  }
};
// Writing MetadataGetter for method: Socket::$$c::$_cctor$b__309_3
// Il2CppName: <.cctor>b__309_3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::$$c::*)(System::IAsyncResult*)>(&Socket::$$c::$_cctor$b__309_3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket::$$c*), "<.cctor>b__309_3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Writing MetadataGetter for method: Socket::$$c::$_cctor$b__309_4
// Il2CppName: <.cctor>b__309_4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::$$c::*)(System::IOAsyncResult*)>(&Socket::$$c::$_cctor$b__309_4)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket::$$c*), "<.cctor>b__309_4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IOAsyncResult*>()});
  }
};
// Writing MetadataGetter for method: Socket::$$c::$_cctor$b__309_5
// Il2CppName: <.cctor>b__309_5
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::$$c::*)(System::IAsyncResult*)>(&Socket::$$c::$_cctor$b__309_5)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket::$$c*), "<.cctor>b__309_5", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Writing MetadataGetter for method: Socket::$$c::$_cctor$b__309_6
// Il2CppName: <.cctor>b__309_6
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::$$c::*)(System::IOAsyncResult*)>(&Socket::$$c::$_cctor$b__309_6)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket::$$c*), "<.cctor>b__309_6", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IOAsyncResult*>()});
  }
};
// Writing MetadataGetter for method: Socket::$$c::$_cctor$b__309_7
// Il2CppName: <.cctor>b__309_7
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::$$c::*)(System::IAsyncResult*)>(&Socket::$$c::$_cctor$b__309_7)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket::$$c*), "<.cctor>b__309_7", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Writing MetadataGetter for method: Socket::$$c::$_cctor$b__309_8
// Il2CppName: <.cctor>b__309_8
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::$$c::*)(System::IOAsyncResult*)>(&Socket::$$c::$_cctor$b__309_8)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket::$$c*), "<.cctor>b__309_8", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IOAsyncResult*>()});
  }
};
// Writing MetadataGetter for method: Socket::$$c::$_cctor$b__309_9
// Il2CppName: <.cctor>b__309_9
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::$$c::*)(System::IOAsyncResult*)>(&Socket::$$c::$_cctor$b__309_9)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket::$$c*), "<.cctor>b__309_9", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IOAsyncResult*>()});
  }
};
// Writing MetadataGetter for method: Socket::$$c::$_cctor$b__309_10
// Il2CppName: <.cctor>b__309_10
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::$$c::*)(System::IAsyncResult*)>(&Socket::$$c::$_cctor$b__309_10)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket::$$c*), "<.cctor>b__309_10", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Writing MetadataGetter for method: Socket::$$c::$_cctor$b__309_11
// Il2CppName: <.cctor>b__309_11
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::$$c::*)(System::IOAsyncResult*)>(&Socket::$$c::$_cctor$b__309_11)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket::$$c*), "<.cctor>b__309_11", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IOAsyncResult*>()});
  }
};
// Writing MetadataGetter for method: Socket::$$c::$_cctor$b__309_12
// Il2CppName: <.cctor>b__309_12
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::$$c::*)(System::IAsyncResult*)>(&Socket::$$c::$_cctor$b__309_12)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket::$$c*), "<.cctor>b__309_12", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Writing MetadataGetter for method: Socket::$$c::$_cctor$b__309_13
// Il2CppName: <.cctor>b__309_13
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::$$c::*)(System::IOAsyncResult*)>(&Socket::$$c::$_cctor$b__309_13)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket::$$c*), "<.cctor>b__309_13", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IOAsyncResult*>()});
  }
};
// Writing MetadataGetter for method: Socket::$$c::$_cctor$b__309_14
// Il2CppName: <.cctor>b__309_14
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::$$c::*)(System::IAsyncResult*)>(&Socket::$$c::$_cctor$b__309_14)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket::$$c*), "<.cctor>b__309_14", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Writing MetadataGetter for method: Socket::$$c::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::$$c::*)()>(&Socket::$$c::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::$$c::*)()>(&Socket::$$c::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Sockets.Socket/<>c__DisplayClass242_0
#include "System/Net/Sockets/Socket_--c__DisplayClass242_0.hpp"
// Including type: System.IOAsyncResult
#include "System/IOAsyncResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Sockets.Socket/<>c__DisplayClass242_0.<BeginSendCallback>b__0
void System::Net::Sockets::Socket::$$c__DisplayClass242_0::$BeginSendCallback$b__0(System::IOAsyncResult* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::$$c__DisplayClass242_0::<BeginSendCallback>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<BeginSendCallback>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, s);
}
// Writing MetadataGetter for method: Socket::$$c__DisplayClass242_0::$BeginSendCallback$b__0
// Il2CppName: <BeginSendCallback>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::$$c__DisplayClass242_0::*)(System::IOAsyncResult*)>(&Socket::$$c__DisplayClass242_0::$BeginSendCallback$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket::$$c__DisplayClass242_0*), "<BeginSendCallback>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IOAsyncResult*>()});
  }
};
// Writing MetadataGetter for method: Socket::$$c__DisplayClass242_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::$$c__DisplayClass242_0::*)()>(&Socket::$$c__DisplayClass242_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket::$$c__DisplayClass242_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::$$c__DisplayClass242_0::*)()>(&Socket::$$c__DisplayClass242_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket::$$c__DisplayClass242_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Sockets.Socket/<>c__DisplayClass298_0
#include "System/Net/Sockets/Socket_--c__DisplayClass298_0.hpp"
// Including type: System.IOSelectorJob
#include "System/IOSelectorJob.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Sockets.Socket/<>c__DisplayClass298_0.<QueueIOSelectorJob>b__0
void System::Net::Sockets::Socket::$$c__DisplayClass298_0::$QueueIOSelectorJob$b__0(System::Threading::Tasks::Task* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::Socket::$$c__DisplayClass298_0::<QueueIOSelectorJob>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<QueueIOSelectorJob>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, t);
}
// Writing MetadataGetter for method: Socket::$$c__DisplayClass298_0::$QueueIOSelectorJob$b__0
// Il2CppName: <QueueIOSelectorJob>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::$$c__DisplayClass298_0::*)(System::Threading::Tasks::Task*)>(&Socket::$$c__DisplayClass298_0::$QueueIOSelectorJob$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket::$$c__DisplayClass298_0*), "<QueueIOSelectorJob>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Threading::Tasks::Task*>()});
  }
};
// Writing MetadataGetter for method: Socket::$$c__DisplayClass298_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::$$c__DisplayClass298_0::*)()>(&Socket::$$c__DisplayClass298_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket::$$c__DisplayClass298_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Socket::$$c__DisplayClass298_0::*)()>(&Socket::$$c__DisplayClass298_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Socket::$$c__DisplayClass298_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Sockets.SocketAsyncOperation
#include "System/Net/Sockets/SocketAsyncOperation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketAsyncOperation None
System::Net::Sockets::SocketAsyncOperation System::Net::Sockets::SocketAsyncOperation::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncOperation::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketAsyncOperation>("System.Net.Sockets", "SocketAsyncOperation", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketAsyncOperation None
void System::Net::Sockets::SocketAsyncOperation::_set_None(System::Net::Sockets::SocketAsyncOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncOperation::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketAsyncOperation", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketAsyncOperation Accept
System::Net::Sockets::SocketAsyncOperation System::Net::Sockets::SocketAsyncOperation::_get_Accept() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncOperation::_get_Accept");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketAsyncOperation>("System.Net.Sockets", "SocketAsyncOperation", "Accept"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketAsyncOperation Accept
void System::Net::Sockets::SocketAsyncOperation::_set_Accept(System::Net::Sockets::SocketAsyncOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncOperation::_set_Accept");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketAsyncOperation", "Accept", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketAsyncOperation Connect
System::Net::Sockets::SocketAsyncOperation System::Net::Sockets::SocketAsyncOperation::_get_Connect() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncOperation::_get_Connect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketAsyncOperation>("System.Net.Sockets", "SocketAsyncOperation", "Connect"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketAsyncOperation Connect
void System::Net::Sockets::SocketAsyncOperation::_set_Connect(System::Net::Sockets::SocketAsyncOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncOperation::_set_Connect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketAsyncOperation", "Connect", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketAsyncOperation Disconnect
System::Net::Sockets::SocketAsyncOperation System::Net::Sockets::SocketAsyncOperation::_get_Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncOperation::_get_Disconnect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketAsyncOperation>("System.Net.Sockets", "SocketAsyncOperation", "Disconnect"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketAsyncOperation Disconnect
void System::Net::Sockets::SocketAsyncOperation::_set_Disconnect(System::Net::Sockets::SocketAsyncOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncOperation::_set_Disconnect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketAsyncOperation", "Disconnect", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketAsyncOperation Receive
System::Net::Sockets::SocketAsyncOperation System::Net::Sockets::SocketAsyncOperation::_get_Receive() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncOperation::_get_Receive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketAsyncOperation>("System.Net.Sockets", "SocketAsyncOperation", "Receive"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketAsyncOperation Receive
void System::Net::Sockets::SocketAsyncOperation::_set_Receive(System::Net::Sockets::SocketAsyncOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncOperation::_set_Receive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketAsyncOperation", "Receive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketAsyncOperation ReceiveFrom
System::Net::Sockets::SocketAsyncOperation System::Net::Sockets::SocketAsyncOperation::_get_ReceiveFrom() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncOperation::_get_ReceiveFrom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketAsyncOperation>("System.Net.Sockets", "SocketAsyncOperation", "ReceiveFrom"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketAsyncOperation ReceiveFrom
void System::Net::Sockets::SocketAsyncOperation::_set_ReceiveFrom(System::Net::Sockets::SocketAsyncOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncOperation::_set_ReceiveFrom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketAsyncOperation", "ReceiveFrom", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketAsyncOperation ReceiveMessageFrom
System::Net::Sockets::SocketAsyncOperation System::Net::Sockets::SocketAsyncOperation::_get_ReceiveMessageFrom() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncOperation::_get_ReceiveMessageFrom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketAsyncOperation>("System.Net.Sockets", "SocketAsyncOperation", "ReceiveMessageFrom"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketAsyncOperation ReceiveMessageFrom
void System::Net::Sockets::SocketAsyncOperation::_set_ReceiveMessageFrom(System::Net::Sockets::SocketAsyncOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncOperation::_set_ReceiveMessageFrom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketAsyncOperation", "ReceiveMessageFrom", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketAsyncOperation Send
System::Net::Sockets::SocketAsyncOperation System::Net::Sockets::SocketAsyncOperation::_get_Send() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncOperation::_get_Send");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketAsyncOperation>("System.Net.Sockets", "SocketAsyncOperation", "Send"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketAsyncOperation Send
void System::Net::Sockets::SocketAsyncOperation::_set_Send(System::Net::Sockets::SocketAsyncOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncOperation::_set_Send");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketAsyncOperation", "Send", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketAsyncOperation SendPackets
System::Net::Sockets::SocketAsyncOperation System::Net::Sockets::SocketAsyncOperation::_get_SendPackets() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncOperation::_get_SendPackets");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketAsyncOperation>("System.Net.Sockets", "SocketAsyncOperation", "SendPackets"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketAsyncOperation SendPackets
void System::Net::Sockets::SocketAsyncOperation::_set_SendPackets(System::Net::Sockets::SocketAsyncOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncOperation::_set_SendPackets");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketAsyncOperation", "SendPackets", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketAsyncOperation SendTo
System::Net::Sockets::SocketAsyncOperation System::Net::Sockets::SocketAsyncOperation::_get_SendTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncOperation::_get_SendTo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketAsyncOperation>("System.Net.Sockets", "SocketAsyncOperation", "SendTo"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketAsyncOperation SendTo
void System::Net::Sockets::SocketAsyncOperation::_set_SendTo(System::Net::Sockets::SocketAsyncOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncOperation::_set_SendTo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketAsyncOperation", "SendTo", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Sockets.SocketError
#include "System/Net/Sockets/SocketError.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError Success
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "Success"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError Success
void System::Net::Sockets::SocketError::_set_Success(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError SocketError
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_SocketError() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_SocketError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "SocketError"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError SocketError
void System::Net::Sockets::SocketError::_set_SocketError(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_SocketError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "SocketError", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError Interrupted
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_Interrupted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_Interrupted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "Interrupted"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError Interrupted
void System::Net::Sockets::SocketError::_set_Interrupted(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_Interrupted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "Interrupted", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError AccessDenied
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_AccessDenied() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_AccessDenied");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "AccessDenied"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError AccessDenied
void System::Net::Sockets::SocketError::_set_AccessDenied(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_AccessDenied");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "AccessDenied", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError Fault
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_Fault() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_Fault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "Fault"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError Fault
void System::Net::Sockets::SocketError::_set_Fault(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_Fault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "Fault", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError InvalidArgument
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_InvalidArgument() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_InvalidArgument");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "InvalidArgument"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError InvalidArgument
void System::Net::Sockets::SocketError::_set_InvalidArgument(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_InvalidArgument");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "InvalidArgument", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError TooManyOpenSockets
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_TooManyOpenSockets() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_TooManyOpenSockets");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "TooManyOpenSockets"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError TooManyOpenSockets
void System::Net::Sockets::SocketError::_set_TooManyOpenSockets(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_TooManyOpenSockets");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "TooManyOpenSockets", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError WouldBlock
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_WouldBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_WouldBlock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "WouldBlock"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError WouldBlock
void System::Net::Sockets::SocketError::_set_WouldBlock(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_WouldBlock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "WouldBlock", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError InProgress
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_InProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_InProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "InProgress"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError InProgress
void System::Net::Sockets::SocketError::_set_InProgress(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_InProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "InProgress", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError AlreadyInProgress
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_AlreadyInProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_AlreadyInProgress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "AlreadyInProgress"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError AlreadyInProgress
void System::Net::Sockets::SocketError::_set_AlreadyInProgress(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_AlreadyInProgress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "AlreadyInProgress", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError NotSocket
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_NotSocket() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_NotSocket");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "NotSocket"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError NotSocket
void System::Net::Sockets::SocketError::_set_NotSocket(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_NotSocket");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "NotSocket", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError DestinationAddressRequired
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_DestinationAddressRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_DestinationAddressRequired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "DestinationAddressRequired"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError DestinationAddressRequired
void System::Net::Sockets::SocketError::_set_DestinationAddressRequired(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_DestinationAddressRequired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "DestinationAddressRequired", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError MessageSize
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_MessageSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_MessageSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "MessageSize"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError MessageSize
void System::Net::Sockets::SocketError::_set_MessageSize(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_MessageSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "MessageSize", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError ProtocolType
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_ProtocolType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_ProtocolType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "ProtocolType"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError ProtocolType
void System::Net::Sockets::SocketError::_set_ProtocolType(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_ProtocolType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "ProtocolType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError ProtocolOption
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_ProtocolOption() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_ProtocolOption");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "ProtocolOption"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError ProtocolOption
void System::Net::Sockets::SocketError::_set_ProtocolOption(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_ProtocolOption");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "ProtocolOption", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError ProtocolNotSupported
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_ProtocolNotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_ProtocolNotSupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "ProtocolNotSupported"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError ProtocolNotSupported
void System::Net::Sockets::SocketError::_set_ProtocolNotSupported(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_ProtocolNotSupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "ProtocolNotSupported", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError SocketNotSupported
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_SocketNotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_SocketNotSupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "SocketNotSupported"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError SocketNotSupported
void System::Net::Sockets::SocketError::_set_SocketNotSupported(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_SocketNotSupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "SocketNotSupported", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError OperationNotSupported
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_OperationNotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_OperationNotSupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "OperationNotSupported"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError OperationNotSupported
void System::Net::Sockets::SocketError::_set_OperationNotSupported(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_OperationNotSupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "OperationNotSupported", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError ProtocolFamilyNotSupported
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_ProtocolFamilyNotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_ProtocolFamilyNotSupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "ProtocolFamilyNotSupported"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError ProtocolFamilyNotSupported
void System::Net::Sockets::SocketError::_set_ProtocolFamilyNotSupported(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_ProtocolFamilyNotSupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "ProtocolFamilyNotSupported", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError AddressFamilyNotSupported
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_AddressFamilyNotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_AddressFamilyNotSupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "AddressFamilyNotSupported"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError AddressFamilyNotSupported
void System::Net::Sockets::SocketError::_set_AddressFamilyNotSupported(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_AddressFamilyNotSupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "AddressFamilyNotSupported", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError AddressAlreadyInUse
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_AddressAlreadyInUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_AddressAlreadyInUse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "AddressAlreadyInUse"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError AddressAlreadyInUse
void System::Net::Sockets::SocketError::_set_AddressAlreadyInUse(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_AddressAlreadyInUse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "AddressAlreadyInUse", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError AddressNotAvailable
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_AddressNotAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_AddressNotAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "AddressNotAvailable"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError AddressNotAvailable
void System::Net::Sockets::SocketError::_set_AddressNotAvailable(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_AddressNotAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "AddressNotAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError NetworkDown
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_NetworkDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_NetworkDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "NetworkDown"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError NetworkDown
void System::Net::Sockets::SocketError::_set_NetworkDown(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_NetworkDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "NetworkDown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError NetworkUnreachable
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_NetworkUnreachable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_NetworkUnreachable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "NetworkUnreachable"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError NetworkUnreachable
void System::Net::Sockets::SocketError::_set_NetworkUnreachable(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_NetworkUnreachable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "NetworkUnreachable", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError NetworkReset
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_NetworkReset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_NetworkReset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "NetworkReset"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError NetworkReset
void System::Net::Sockets::SocketError::_set_NetworkReset(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_NetworkReset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "NetworkReset", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError ConnectionAborted
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_ConnectionAborted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_ConnectionAborted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "ConnectionAborted"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError ConnectionAborted
void System::Net::Sockets::SocketError::_set_ConnectionAborted(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_ConnectionAborted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "ConnectionAborted", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError ConnectionReset
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_ConnectionReset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_ConnectionReset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "ConnectionReset"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError ConnectionReset
void System::Net::Sockets::SocketError::_set_ConnectionReset(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_ConnectionReset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "ConnectionReset", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError NoBufferSpaceAvailable
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_NoBufferSpaceAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_NoBufferSpaceAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "NoBufferSpaceAvailable"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError NoBufferSpaceAvailable
void System::Net::Sockets::SocketError::_set_NoBufferSpaceAvailable(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_NoBufferSpaceAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "NoBufferSpaceAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError IsConnected
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_IsConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_IsConnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "IsConnected"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError IsConnected
void System::Net::Sockets::SocketError::_set_IsConnected(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_IsConnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "IsConnected", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError NotConnected
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_NotConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_NotConnected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "NotConnected"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError NotConnected
void System::Net::Sockets::SocketError::_set_NotConnected(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_NotConnected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "NotConnected", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError Shutdown
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_Shutdown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "Shutdown"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError Shutdown
void System::Net::Sockets::SocketError::_set_Shutdown(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_Shutdown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "Shutdown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError TimedOut
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_TimedOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_TimedOut");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "TimedOut"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError TimedOut
void System::Net::Sockets::SocketError::_set_TimedOut(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_TimedOut");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "TimedOut", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError ConnectionRefused
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_ConnectionRefused() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_ConnectionRefused");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "ConnectionRefused"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError ConnectionRefused
void System::Net::Sockets::SocketError::_set_ConnectionRefused(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_ConnectionRefused");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "ConnectionRefused", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError HostDown
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_HostDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_HostDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "HostDown"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError HostDown
void System::Net::Sockets::SocketError::_set_HostDown(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_HostDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "HostDown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError HostUnreachable
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_HostUnreachable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_HostUnreachable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "HostUnreachable"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError HostUnreachable
void System::Net::Sockets::SocketError::_set_HostUnreachable(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_HostUnreachable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "HostUnreachable", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError ProcessLimit
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_ProcessLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_ProcessLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "ProcessLimit"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError ProcessLimit
void System::Net::Sockets::SocketError::_set_ProcessLimit(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_ProcessLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "ProcessLimit", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError SystemNotReady
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_SystemNotReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_SystemNotReady");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "SystemNotReady"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError SystemNotReady
void System::Net::Sockets::SocketError::_set_SystemNotReady(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_SystemNotReady");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "SystemNotReady", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError VersionNotSupported
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_VersionNotSupported() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_VersionNotSupported");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "VersionNotSupported"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError VersionNotSupported
void System::Net::Sockets::SocketError::_set_VersionNotSupported(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_VersionNotSupported");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "VersionNotSupported", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError NotInitialized
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_NotInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_NotInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "NotInitialized"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError NotInitialized
void System::Net::Sockets::SocketError::_set_NotInitialized(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_NotInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "NotInitialized", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError Disconnecting
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_Disconnecting() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_Disconnecting");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "Disconnecting"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError Disconnecting
void System::Net::Sockets::SocketError::_set_Disconnecting(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_Disconnecting");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "Disconnecting", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError TypeNotFound
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_TypeNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_TypeNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "TypeNotFound"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError TypeNotFound
void System::Net::Sockets::SocketError::_set_TypeNotFound(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_TypeNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "TypeNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError HostNotFound
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_HostNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_HostNotFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "HostNotFound"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError HostNotFound
void System::Net::Sockets::SocketError::_set_HostNotFound(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_HostNotFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "HostNotFound", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError TryAgain
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_TryAgain() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_TryAgain");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "TryAgain"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError TryAgain
void System::Net::Sockets::SocketError::_set_TryAgain(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_TryAgain");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "TryAgain", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError NoRecovery
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_NoRecovery() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_NoRecovery");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "NoRecovery"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError NoRecovery
void System::Net::Sockets::SocketError::_set_NoRecovery(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_NoRecovery");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "NoRecovery", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError NoData
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_NoData() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_NoData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "NoData"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError NoData
void System::Net::Sockets::SocketError::_set_NoData(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_NoData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "NoData", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError IOPending
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_IOPending() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_IOPending");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "IOPending"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError IOPending
void System::Net::Sockets::SocketError::_set_IOPending(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_IOPending");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "IOPending", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketError OperationAborted
System::Net::Sockets::SocketError System::Net::Sockets::SocketError::_get_OperationAborted() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_get_OperationAborted");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketError>("System.Net.Sockets", "SocketError", "OperationAborted"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketError OperationAborted
void System::Net::Sockets::SocketError::_set_OperationAborted(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketError::_set_OperationAborted");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketError", "OperationAborted", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Sockets.SocketFlags
#include "System/Net/Sockets/SocketFlags.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketFlags None
System::Net::Sockets::SocketFlags System::Net::Sockets::SocketFlags::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketFlags::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketFlags>("System.Net.Sockets", "SocketFlags", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketFlags None
void System::Net::Sockets::SocketFlags::_set_None(System::Net::Sockets::SocketFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketFlags::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketFlags", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketFlags OutOfBand
System::Net::Sockets::SocketFlags System::Net::Sockets::SocketFlags::_get_OutOfBand() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketFlags::_get_OutOfBand");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketFlags>("System.Net.Sockets", "SocketFlags", "OutOfBand"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketFlags OutOfBand
void System::Net::Sockets::SocketFlags::_set_OutOfBand(System::Net::Sockets::SocketFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketFlags::_set_OutOfBand");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketFlags", "OutOfBand", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketFlags Peek
System::Net::Sockets::SocketFlags System::Net::Sockets::SocketFlags::_get_Peek() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketFlags::_get_Peek");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketFlags>("System.Net.Sockets", "SocketFlags", "Peek"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketFlags Peek
void System::Net::Sockets::SocketFlags::_set_Peek(System::Net::Sockets::SocketFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketFlags::_set_Peek");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketFlags", "Peek", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketFlags DontRoute
System::Net::Sockets::SocketFlags System::Net::Sockets::SocketFlags::_get_DontRoute() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketFlags::_get_DontRoute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketFlags>("System.Net.Sockets", "SocketFlags", "DontRoute"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketFlags DontRoute
void System::Net::Sockets::SocketFlags::_set_DontRoute(System::Net::Sockets::SocketFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketFlags::_set_DontRoute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketFlags", "DontRoute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketFlags MaxIOVectorLength
System::Net::Sockets::SocketFlags System::Net::Sockets::SocketFlags::_get_MaxIOVectorLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketFlags::_get_MaxIOVectorLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketFlags>("System.Net.Sockets", "SocketFlags", "MaxIOVectorLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketFlags MaxIOVectorLength
void System::Net::Sockets::SocketFlags::_set_MaxIOVectorLength(System::Net::Sockets::SocketFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketFlags::_set_MaxIOVectorLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketFlags", "MaxIOVectorLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketFlags Truncated
System::Net::Sockets::SocketFlags System::Net::Sockets::SocketFlags::_get_Truncated() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketFlags::_get_Truncated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketFlags>("System.Net.Sockets", "SocketFlags", "Truncated"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketFlags Truncated
void System::Net::Sockets::SocketFlags::_set_Truncated(System::Net::Sockets::SocketFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketFlags::_set_Truncated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketFlags", "Truncated", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketFlags ControlDataTruncated
System::Net::Sockets::SocketFlags System::Net::Sockets::SocketFlags::_get_ControlDataTruncated() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketFlags::_get_ControlDataTruncated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketFlags>("System.Net.Sockets", "SocketFlags", "ControlDataTruncated"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketFlags ControlDataTruncated
void System::Net::Sockets::SocketFlags::_set_ControlDataTruncated(System::Net::Sockets::SocketFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketFlags::_set_ControlDataTruncated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketFlags", "ControlDataTruncated", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketFlags Broadcast
System::Net::Sockets::SocketFlags System::Net::Sockets::SocketFlags::_get_Broadcast() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketFlags::_get_Broadcast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketFlags>("System.Net.Sockets", "SocketFlags", "Broadcast"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketFlags Broadcast
void System::Net::Sockets::SocketFlags::_set_Broadcast(System::Net::Sockets::SocketFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketFlags::_set_Broadcast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketFlags", "Broadcast", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketFlags Multicast
System::Net::Sockets::SocketFlags System::Net::Sockets::SocketFlags::_get_Multicast() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketFlags::_get_Multicast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketFlags>("System.Net.Sockets", "SocketFlags", "Multicast"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketFlags Multicast
void System::Net::Sockets::SocketFlags::_set_Multicast(System::Net::Sockets::SocketFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketFlags::_set_Multicast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketFlags", "Multicast", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketFlags Partial
System::Net::Sockets::SocketFlags System::Net::Sockets::SocketFlags::_get_Partial() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketFlags::_get_Partial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketFlags>("System.Net.Sockets", "SocketFlags", "Partial"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketFlags Partial
void System::Net::Sockets::SocketFlags::_set_Partial(System::Net::Sockets::SocketFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketFlags::_set_Partial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketFlags", "Partial", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Sockets.SocketOptionLevel
#include "System/Net/Sockets/SocketOptionLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionLevel Socket
System::Net::Sockets::SocketOptionLevel System::Net::Sockets::SocketOptionLevel::_get_Socket() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionLevel::_get_Socket");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionLevel>("System.Net.Sockets", "SocketOptionLevel", "Socket"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionLevel Socket
void System::Net::Sockets::SocketOptionLevel::_set_Socket(System::Net::Sockets::SocketOptionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionLevel::_set_Socket");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionLevel", "Socket", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionLevel IP
System::Net::Sockets::SocketOptionLevel System::Net::Sockets::SocketOptionLevel::_get_IP() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionLevel::_get_IP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionLevel>("System.Net.Sockets", "SocketOptionLevel", "IP"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionLevel IP
void System::Net::Sockets::SocketOptionLevel::_set_IP(System::Net::Sockets::SocketOptionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionLevel::_set_IP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionLevel", "IP", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionLevel IPv6
System::Net::Sockets::SocketOptionLevel System::Net::Sockets::SocketOptionLevel::_get_IPv6() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionLevel::_get_IPv6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionLevel>("System.Net.Sockets", "SocketOptionLevel", "IPv6"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionLevel IPv6
void System::Net::Sockets::SocketOptionLevel::_set_IPv6(System::Net::Sockets::SocketOptionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionLevel::_set_IPv6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionLevel", "IPv6", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionLevel Tcp
System::Net::Sockets::SocketOptionLevel System::Net::Sockets::SocketOptionLevel::_get_Tcp() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionLevel::_get_Tcp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionLevel>("System.Net.Sockets", "SocketOptionLevel", "Tcp"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionLevel Tcp
void System::Net::Sockets::SocketOptionLevel::_set_Tcp(System::Net::Sockets::SocketOptionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionLevel::_set_Tcp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionLevel", "Tcp", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionLevel Udp
System::Net::Sockets::SocketOptionLevel System::Net::Sockets::SocketOptionLevel::_get_Udp() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionLevel::_get_Udp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionLevel>("System.Net.Sockets", "SocketOptionLevel", "Udp"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionLevel Udp
void System::Net::Sockets::SocketOptionLevel::_set_Udp(System::Net::Sockets::SocketOptionLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionLevel::_set_Udp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionLevel", "Udp", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Sockets.SocketOptionName
#include "System/Net/Sockets/SocketOptionName.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName Debug
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_Debug() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_Debug");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "Debug"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName Debug
void System::Net::Sockets::SocketOptionName::_set_Debug(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_Debug");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "Debug", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName AcceptConnection
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_AcceptConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_AcceptConnection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "AcceptConnection"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName AcceptConnection
void System::Net::Sockets::SocketOptionName::_set_AcceptConnection(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_AcceptConnection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "AcceptConnection", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName ReuseAddress
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_ReuseAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_ReuseAddress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "ReuseAddress"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName ReuseAddress
void System::Net::Sockets::SocketOptionName::_set_ReuseAddress(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_ReuseAddress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "ReuseAddress", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName KeepAlive
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_KeepAlive() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_KeepAlive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "KeepAlive"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName KeepAlive
void System::Net::Sockets::SocketOptionName::_set_KeepAlive(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_KeepAlive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "KeepAlive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName DontRoute
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_DontRoute() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_DontRoute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "DontRoute"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName DontRoute
void System::Net::Sockets::SocketOptionName::_set_DontRoute(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_DontRoute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "DontRoute", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName Broadcast
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_Broadcast() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_Broadcast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "Broadcast"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName Broadcast
void System::Net::Sockets::SocketOptionName::_set_Broadcast(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_Broadcast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "Broadcast", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName UseLoopback
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_UseLoopback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_UseLoopback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "UseLoopback"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName UseLoopback
void System::Net::Sockets::SocketOptionName::_set_UseLoopback(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_UseLoopback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "UseLoopback", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName Linger
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_Linger() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_Linger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "Linger"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName Linger
void System::Net::Sockets::SocketOptionName::_set_Linger(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_Linger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "Linger", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName OutOfBandInline
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_OutOfBandInline() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_OutOfBandInline");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "OutOfBandInline"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName OutOfBandInline
void System::Net::Sockets::SocketOptionName::_set_OutOfBandInline(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_OutOfBandInline");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "OutOfBandInline", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName DontLinger
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_DontLinger() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_DontLinger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "DontLinger"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName DontLinger
void System::Net::Sockets::SocketOptionName::_set_DontLinger(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_DontLinger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "DontLinger", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName ExclusiveAddressUse
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_ExclusiveAddressUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_ExclusiveAddressUse");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "ExclusiveAddressUse"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName ExclusiveAddressUse
void System::Net::Sockets::SocketOptionName::_set_ExclusiveAddressUse(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_ExclusiveAddressUse");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "ExclusiveAddressUse", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName SendBuffer
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_SendBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_SendBuffer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "SendBuffer"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName SendBuffer
void System::Net::Sockets::SocketOptionName::_set_SendBuffer(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_SendBuffer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "SendBuffer", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName ReceiveBuffer
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_ReceiveBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_ReceiveBuffer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "ReceiveBuffer"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName ReceiveBuffer
void System::Net::Sockets::SocketOptionName::_set_ReceiveBuffer(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_ReceiveBuffer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "ReceiveBuffer", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName SendLowWater
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_SendLowWater() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_SendLowWater");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "SendLowWater"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName SendLowWater
void System::Net::Sockets::SocketOptionName::_set_SendLowWater(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_SendLowWater");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "SendLowWater", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName ReceiveLowWater
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_ReceiveLowWater() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_ReceiveLowWater");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "ReceiveLowWater"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName ReceiveLowWater
void System::Net::Sockets::SocketOptionName::_set_ReceiveLowWater(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_ReceiveLowWater");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "ReceiveLowWater", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName SendTimeout
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_SendTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_SendTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "SendTimeout"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName SendTimeout
void System::Net::Sockets::SocketOptionName::_set_SendTimeout(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_SendTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "SendTimeout", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName ReceiveTimeout
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_ReceiveTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_ReceiveTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "ReceiveTimeout"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName ReceiveTimeout
void System::Net::Sockets::SocketOptionName::_set_ReceiveTimeout(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_ReceiveTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "ReceiveTimeout", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName Error
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "Error"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName Error
void System::Net::Sockets::SocketOptionName::_set_Error(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName Type
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_Type");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "Type"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName Type
void System::Net::Sockets::SocketOptionName::_set_Type(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_Type");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "Type", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName ReuseUnicastPort
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_ReuseUnicastPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_ReuseUnicastPort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "ReuseUnicastPort"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName ReuseUnicastPort
void System::Net::Sockets::SocketOptionName::_set_ReuseUnicastPort(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_ReuseUnicastPort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "ReuseUnicastPort", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName MaxConnections
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_MaxConnections() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_MaxConnections");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "MaxConnections"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName MaxConnections
void System::Net::Sockets::SocketOptionName::_set_MaxConnections(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_MaxConnections");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "MaxConnections", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName IPOptions
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_IPOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_IPOptions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "IPOptions"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName IPOptions
void System::Net::Sockets::SocketOptionName::_set_IPOptions(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_IPOptions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "IPOptions", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName HeaderIncluded
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_HeaderIncluded() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_HeaderIncluded");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "HeaderIncluded"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName HeaderIncluded
void System::Net::Sockets::SocketOptionName::_set_HeaderIncluded(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_HeaderIncluded");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "HeaderIncluded", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName TypeOfService
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_TypeOfService() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_TypeOfService");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "TypeOfService"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName TypeOfService
void System::Net::Sockets::SocketOptionName::_set_TypeOfService(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_TypeOfService");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "TypeOfService", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName IpTimeToLive
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_IpTimeToLive() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_IpTimeToLive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "IpTimeToLive"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName IpTimeToLive
void System::Net::Sockets::SocketOptionName::_set_IpTimeToLive(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_IpTimeToLive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "IpTimeToLive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName MulticastInterface
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_MulticastInterface() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_MulticastInterface");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "MulticastInterface"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName MulticastInterface
void System::Net::Sockets::SocketOptionName::_set_MulticastInterface(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_MulticastInterface");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "MulticastInterface", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName MulticastTimeToLive
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_MulticastTimeToLive() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_MulticastTimeToLive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "MulticastTimeToLive"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName MulticastTimeToLive
void System::Net::Sockets::SocketOptionName::_set_MulticastTimeToLive(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_MulticastTimeToLive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "MulticastTimeToLive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName MulticastLoopback
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_MulticastLoopback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_MulticastLoopback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "MulticastLoopback"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName MulticastLoopback
void System::Net::Sockets::SocketOptionName::_set_MulticastLoopback(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_MulticastLoopback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "MulticastLoopback", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName AddMembership
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_AddMembership() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_AddMembership");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "AddMembership"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName AddMembership
void System::Net::Sockets::SocketOptionName::_set_AddMembership(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_AddMembership");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "AddMembership", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName DropMembership
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_DropMembership() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_DropMembership");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "DropMembership"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName DropMembership
void System::Net::Sockets::SocketOptionName::_set_DropMembership(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_DropMembership");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "DropMembership", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName DontFragment
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_DontFragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_DontFragment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "DontFragment"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName DontFragment
void System::Net::Sockets::SocketOptionName::_set_DontFragment(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_DontFragment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "DontFragment", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName AddSourceMembership
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_AddSourceMembership() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_AddSourceMembership");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "AddSourceMembership"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName AddSourceMembership
void System::Net::Sockets::SocketOptionName::_set_AddSourceMembership(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_AddSourceMembership");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "AddSourceMembership", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName DropSourceMembership
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_DropSourceMembership() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_DropSourceMembership");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "DropSourceMembership"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName DropSourceMembership
void System::Net::Sockets::SocketOptionName::_set_DropSourceMembership(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_DropSourceMembership");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "DropSourceMembership", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName BlockSource
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_BlockSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_BlockSource");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "BlockSource"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName BlockSource
void System::Net::Sockets::SocketOptionName::_set_BlockSource(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_BlockSource");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "BlockSource", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName UnblockSource
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_UnblockSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_UnblockSource");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "UnblockSource"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName UnblockSource
void System::Net::Sockets::SocketOptionName::_set_UnblockSource(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_UnblockSource");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "UnblockSource", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName PacketInformation
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_PacketInformation() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_PacketInformation");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "PacketInformation"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName PacketInformation
void System::Net::Sockets::SocketOptionName::_set_PacketInformation(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_PacketInformation");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "PacketInformation", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName HopLimit
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_HopLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_HopLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "HopLimit"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName HopLimit
void System::Net::Sockets::SocketOptionName::_set_HopLimit(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_HopLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "HopLimit", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName IPProtectionLevel
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_IPProtectionLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_IPProtectionLevel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "IPProtectionLevel"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName IPProtectionLevel
void System::Net::Sockets::SocketOptionName::_set_IPProtectionLevel(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_IPProtectionLevel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "IPProtectionLevel", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName IPv6Only
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_IPv6Only() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_IPv6Only");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "IPv6Only"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName IPv6Only
void System::Net::Sockets::SocketOptionName::_set_IPv6Only(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_IPv6Only");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "IPv6Only", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName NoDelay
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_NoDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_NoDelay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "NoDelay"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName NoDelay
void System::Net::Sockets::SocketOptionName::_set_NoDelay(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_NoDelay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "NoDelay", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName BsdUrgent
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_BsdUrgent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_BsdUrgent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "BsdUrgent"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName BsdUrgent
void System::Net::Sockets::SocketOptionName::_set_BsdUrgent(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_BsdUrgent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "BsdUrgent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName Expedited
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_Expedited() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_Expedited");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "Expedited"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName Expedited
void System::Net::Sockets::SocketOptionName::_set_Expedited(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_Expedited");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "Expedited", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName NoChecksum
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_NoChecksum() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_NoChecksum");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "NoChecksum"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName NoChecksum
void System::Net::Sockets::SocketOptionName::_set_NoChecksum(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_NoChecksum");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "NoChecksum", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName ChecksumCoverage
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_ChecksumCoverage() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_ChecksumCoverage");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "ChecksumCoverage"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName ChecksumCoverage
void System::Net::Sockets::SocketOptionName::_set_ChecksumCoverage(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_ChecksumCoverage");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "ChecksumCoverage", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName UpdateAcceptContext
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_UpdateAcceptContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_UpdateAcceptContext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "UpdateAcceptContext"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName UpdateAcceptContext
void System::Net::Sockets::SocketOptionName::_set_UpdateAcceptContext(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_UpdateAcceptContext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "UpdateAcceptContext", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOptionName UpdateConnectContext
System::Net::Sockets::SocketOptionName System::Net::Sockets::SocketOptionName::_get_UpdateConnectContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_get_UpdateConnectContext");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOptionName>("System.Net.Sockets", "SocketOptionName", "UpdateConnectContext"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOptionName UpdateConnectContext
void System::Net::Sockets::SocketOptionName::_set_UpdateConnectContext(System::Net::Sockets::SocketOptionName value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOptionName::_set_UpdateConnectContext");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOptionName", "UpdateConnectContext", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Sockets.SocketShutdown
#include "System/Net/Sockets/SocketShutdown.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketShutdown Receive
System::Net::Sockets::SocketShutdown System::Net::Sockets::SocketShutdown::_get_Receive() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketShutdown::_get_Receive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketShutdown>("System.Net.Sockets", "SocketShutdown", "Receive"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketShutdown Receive
void System::Net::Sockets::SocketShutdown::_set_Receive(System::Net::Sockets::SocketShutdown value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketShutdown::_set_Receive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketShutdown", "Receive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketShutdown Send
System::Net::Sockets::SocketShutdown System::Net::Sockets::SocketShutdown::_get_Send() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketShutdown::_get_Send");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketShutdown>("System.Net.Sockets", "SocketShutdown", "Send"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketShutdown Send
void System::Net::Sockets::SocketShutdown::_set_Send(System::Net::Sockets::SocketShutdown value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketShutdown::_set_Send");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketShutdown", "Send", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketShutdown Both
System::Net::Sockets::SocketShutdown System::Net::Sockets::SocketShutdown::_get_Both() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketShutdown::_get_Both");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketShutdown>("System.Net.Sockets", "SocketShutdown", "Both"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketShutdown Both
void System::Net::Sockets::SocketShutdown::_set_Both(System::Net::Sockets::SocketShutdown value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketShutdown::_set_Both");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketShutdown", "Both", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Sockets.SocketType
#include "System/Net/Sockets/SocketType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketType Stream
System::Net::Sockets::SocketType System::Net::Sockets::SocketType::_get_Stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketType::_get_Stream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketType>("System.Net.Sockets", "SocketType", "Stream"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketType Stream
void System::Net::Sockets::SocketType::_set_Stream(System::Net::Sockets::SocketType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketType::_set_Stream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketType", "Stream", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketType Dgram
System::Net::Sockets::SocketType System::Net::Sockets::SocketType::_get_Dgram() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketType::_get_Dgram");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketType>("System.Net.Sockets", "SocketType", "Dgram"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketType Dgram
void System::Net::Sockets::SocketType::_set_Dgram(System::Net::Sockets::SocketType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketType::_set_Dgram");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketType", "Dgram", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketType Raw
System::Net::Sockets::SocketType System::Net::Sockets::SocketType::_get_Raw() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketType::_get_Raw");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketType>("System.Net.Sockets", "SocketType", "Raw"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketType Raw
void System::Net::Sockets::SocketType::_set_Raw(System::Net::Sockets::SocketType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketType::_set_Raw");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketType", "Raw", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketType Rdm
System::Net::Sockets::SocketType System::Net::Sockets::SocketType::_get_Rdm() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketType::_get_Rdm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketType>("System.Net.Sockets", "SocketType", "Rdm"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketType Rdm
void System::Net::Sockets::SocketType::_set_Rdm(System::Net::Sockets::SocketType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketType::_set_Rdm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketType", "Rdm", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketType Seqpacket
System::Net::Sockets::SocketType System::Net::Sockets::SocketType::_get_Seqpacket() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketType::_get_Seqpacket");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketType>("System.Net.Sockets", "SocketType", "Seqpacket"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketType Seqpacket
void System::Net::Sockets::SocketType::_set_Seqpacket(System::Net::Sockets::SocketType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketType::_set_Seqpacket");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketType", "Seqpacket", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketType Unknown
System::Net::Sockets::SocketType System::Net::Sockets::SocketType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketType>("System.Net.Sockets", "SocketType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketType Unknown
void System::Net::Sockets::SocketType::_set_Unknown(System::Net::Sockets::SocketType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketType", "Unknown", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Sockets.TcpClient
#include "System/Net/Sockets/TcpClient.hpp"
// Including type: System.Net.Sockets.Socket
#include "System/Net/Sockets/Socket.hpp"
// Including type: System.Net.Sockets.NetworkStream
#include "System/Net/Sockets/NetworkStream.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Sockets.TcpClient.get_Client
System::Net::Sockets::Socket* System::Net::Sockets::TcpClient::get_Client() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::TcpClient::get_Client");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Client", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Sockets::Socket*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.TcpClient.set_Client
void System::Net::Sockets::TcpClient::set_Client(System::Net::Sockets::Socket* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::TcpClient::set_Client");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Client", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Sockets.TcpClient.get_Connected
bool System::Net::Sockets::TcpClient::get_Connected() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::TcpClient::get_Connected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Connected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.TcpClient.BeginConnect
System::IAsyncResult* System::Net::Sockets::TcpClient::BeginConnect(::Il2CppString* host, int port, System::AsyncCallback* requestCallback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::TcpClient::BeginConnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginConnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(host), ::il2cpp_utils::ExtractType(port), ::il2cpp_utils::ExtractType(requestCallback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, host, port, requestCallback, state);
}
// Autogenerated method: System.Net.Sockets.TcpClient.EndConnect
void System::Net::Sockets::TcpClient::EndConnect(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::TcpClient::EndConnect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndConnect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.Sockets.TcpClient.GetStream
System::Net::Sockets::NetworkStream* System::Net::Sockets::TcpClient::GetStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::TcpClient::GetStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Sockets::NetworkStream*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.TcpClient.Close
void System::Net::Sockets::TcpClient::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::TcpClient::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.TcpClient.Dispose
void System::Net::Sockets::TcpClient::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::TcpClient::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Sockets.TcpClient.Dispose
void System::Net::Sockets::TcpClient::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::TcpClient::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.TcpClient.initialize
void System::Net::Sockets::TcpClient::initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::TcpClient::initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.TcpClient.Finalize
void System::Net::Sockets::TcpClient::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::TcpClient::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: TcpClient::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TcpClient::*)(System::Net::Sockets::AddressFamily)>(&TcpClient::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TcpClient*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::AddressFamily>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TcpClient::*)(System::Net::Sockets::AddressFamily)>(&TcpClient::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TcpClient*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::AddressFamily>()});
  }
};
// Writing MetadataGetter for method: TcpClient::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TcpClient::*)(System::Net::Sockets::Socket*)>(&TcpClient::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TcpClient*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::Socket*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TcpClient::*)(System::Net::Sockets::Socket*)>(&TcpClient::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TcpClient*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::Socket*>()});
  }
};
// Writing MetadataGetter for method: TcpClient::get_Client
// Il2CppName: get_Client
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::Sockets::Socket* (TcpClient::*)()>(&TcpClient::get_Client)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TcpClient*), "get_Client", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TcpClient::set_Client
// Il2CppName: set_Client
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TcpClient::*)(System::Net::Sockets::Socket*)>(&TcpClient::set_Client)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TcpClient*), "set_Client", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::Socket*>()});
  }
};
// Writing MetadataGetter for method: TcpClient::get_Connected
// Il2CppName: get_Connected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (TcpClient::*)()>(&TcpClient::get_Connected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TcpClient*), "get_Connected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TcpClient::BeginConnect
// Il2CppName: BeginConnect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (TcpClient::*)(::Il2CppString*, int, System::AsyncCallback*, ::Il2CppObject*)>(&TcpClient::BeginConnect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TcpClient*), "BeginConnect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: TcpClient::EndConnect
// Il2CppName: EndConnect
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TcpClient::*)(System::IAsyncResult*)>(&TcpClient::EndConnect)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TcpClient*), "EndConnect", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Writing MetadataGetter for method: TcpClient::GetStream
// Il2CppName: GetStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::Sockets::NetworkStream* (TcpClient::*)()>(&TcpClient::GetStream)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TcpClient*), "GetStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TcpClient::Close
// Il2CppName: Close
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TcpClient::*)()>(&TcpClient::Close)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TcpClient*), "Close", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TcpClient::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TcpClient::*)(bool)>(&TcpClient::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TcpClient*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: TcpClient::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TcpClient::*)()>(&TcpClient::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TcpClient*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TcpClient::initialize
// Il2CppName: initialize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TcpClient::*)()>(&TcpClient::initialize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TcpClient*), "initialize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TcpClient::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TcpClient::*)()>(&TcpClient::Finalize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TcpClient*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Sockets.TcpListener
#include "System/Net/Sockets/TcpListener.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: System.Net.Sockets.Socket
#include "System/Net/Sockets/Socket.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.Net.EndPoint
#include "System/Net/EndPoint.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Net.Sockets.TcpClient
#include "System/Net/Sockets/TcpClient.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Sockets.TcpListener.get_LocalEndpoint
System::Net::EndPoint* System::Net::Sockets::TcpListener::get_LocalEndpoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::TcpListener::get_LocalEndpoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LocalEndpoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::EndPoint*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.TcpListener.Start
void System::Net::Sockets::TcpListener::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::TcpListener::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.TcpListener.Start
void System::Net::Sockets::TcpListener::Start(int backlog) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::TcpListener::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(backlog)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, backlog);
}
// Autogenerated method: System.Net.Sockets.TcpListener.Stop
void System::Net::Sockets::TcpListener::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::TcpListener::Stop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.TcpListener.BeginAcceptTcpClient
System::IAsyncResult* System::Net::Sockets::TcpListener::BeginAcceptTcpClient(System::AsyncCallback* callback, ::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::TcpListener::BeginAcceptTcpClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginAcceptTcpClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, callback, state);
}
// Autogenerated method: System.Net.Sockets.TcpListener.EndAcceptTcpClient
System::Net::Sockets::TcpClient* System::Net::Sockets::TcpListener::EndAcceptTcpClient(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::TcpListener::EndAcceptTcpClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndAcceptTcpClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Sockets::TcpClient*, false>(this, ___internal__method, asyncResult);
}
// Writing MetadataGetter for method: TcpListener::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TcpListener::*)(System::Net::IPAddress*, int)>(&TcpListener::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TcpListener*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::IPAddress*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TcpListener::*)(System::Net::IPAddress*, int)>(&TcpListener::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TcpListener*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::IPAddress*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: TcpListener::get_LocalEndpoint
// Il2CppName: get_LocalEndpoint
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::EndPoint* (TcpListener::*)()>(&TcpListener::get_LocalEndpoint)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TcpListener*), "get_LocalEndpoint", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TcpListener::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TcpListener::*)()>(&TcpListener::Start)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TcpListener*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TcpListener::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TcpListener::*)(int)>(&TcpListener::Start)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TcpListener*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: TcpListener::Stop
// Il2CppName: Stop
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TcpListener::*)()>(&TcpListener::Stop)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TcpListener*), "Stop", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TcpListener::BeginAcceptTcpClient
// Il2CppName: BeginAcceptTcpClient
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (TcpListener::*)(System::AsyncCallback*, ::Il2CppObject*)>(&TcpListener::BeginAcceptTcpClient)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TcpListener*), "BeginAcceptTcpClient", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: TcpListener::EndAcceptTcpClient
// Il2CppName: EndAcceptTcpClient
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::Sockets::TcpClient* (TcpListener::*)(System::IAsyncResult*)>(&TcpListener::EndAcceptTcpClient)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TcpListener*), "EndAcceptTcpClient", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Sockets.SafeSocketHandle
#include "System/Net/Sockets/SafeSocketHandle.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Threading.Thread
#include "System/Threading/Thread.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Diagnostics.StackTrace
#include "System/Diagnostics/StackTrace.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 SOCKET_CLOSED
int System::Net::Sockets::SafeSocketHandle::_get_SOCKET_CLOSED() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SafeSocketHandle::_get_SOCKET_CLOSED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net.Sockets", "SafeSocketHandle", "SOCKET_CLOSED"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 SOCKET_CLOSED
void System::Net::Sockets::SafeSocketHandle::_set_SOCKET_CLOSED(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SafeSocketHandle::_set_SOCKET_CLOSED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SafeSocketHandle", "SOCKET_CLOSED", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 ABORT_RETRIES
int System::Net::Sockets::SafeSocketHandle::_get_ABORT_RETRIES() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SafeSocketHandle::_get_ABORT_RETRIES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("System.Net.Sockets", "SafeSocketHandle", "ABORT_RETRIES"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 ABORT_RETRIES
void System::Net::Sockets::SafeSocketHandle::_set_ABORT_RETRIES(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SafeSocketHandle::_set_ABORT_RETRIES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SafeSocketHandle", "ABORT_RETRIES", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean THROW_ON_ABORT_RETRIES
bool System::Net::Sockets::SafeSocketHandle::_get_THROW_ON_ABORT_RETRIES() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SafeSocketHandle::_get_THROW_ON_ABORT_RETRIES");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Net.Sockets", "SafeSocketHandle", "THROW_ON_ABORT_RETRIES"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean THROW_ON_ABORT_RETRIES
void System::Net::Sockets::SafeSocketHandle::_set_THROW_ON_ABORT_RETRIES(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SafeSocketHandle::_set_THROW_ON_ABORT_RETRIES");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SafeSocketHandle", "THROW_ON_ABORT_RETRIES", value));
}
// Autogenerated method: System.Net.Sockets.SafeSocketHandle.RegisterForBlockingSyscall
void System::Net::Sockets::SafeSocketHandle::RegisterForBlockingSyscall() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SafeSocketHandle::RegisterForBlockingSyscall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterForBlockingSyscall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.SafeSocketHandle.UnRegisterForBlockingSyscall
void System::Net::Sockets::SafeSocketHandle::UnRegisterForBlockingSyscall() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SafeSocketHandle::UnRegisterForBlockingSyscall");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnRegisterForBlockingSyscall", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.SafeSocketHandle..cctor
void System::Net::Sockets::SafeSocketHandle::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SafeSocketHandle::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "SafeSocketHandle", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Sockets.SafeSocketHandle.ReleaseHandle
bool System::Net::Sockets::SafeSocketHandle::ReleaseHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SafeSocketHandle::ReleaseHandle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReleaseHandle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: SafeSocketHandle::RegisterForBlockingSyscall
// Il2CppName: RegisterForBlockingSyscall
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SafeSocketHandle::*)()>(&SafeSocketHandle::RegisterForBlockingSyscall)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SafeSocketHandle*), "RegisterForBlockingSyscall", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SafeSocketHandle::UnRegisterForBlockingSyscall
// Il2CppName: UnRegisterForBlockingSyscall
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SafeSocketHandle::*)()>(&SafeSocketHandle::UnRegisterForBlockingSyscall)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SafeSocketHandle*), "UnRegisterForBlockingSyscall", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SafeSocketHandle::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&SafeSocketHandle::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SafeSocketHandle*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SafeSocketHandle::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SafeSocketHandle::*)(System::IntPtr, bool)>(&SafeSocketHandle::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SafeSocketHandle*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SafeSocketHandle::*)(System::IntPtr, bool)>(&SafeSocketHandle::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SafeSocketHandle*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: SafeSocketHandle::ReleaseHandle
// Il2CppName: ReleaseHandle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (SafeSocketHandle::*)()>(&SafeSocketHandle::ReleaseHandle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SafeSocketHandle*), "ReleaseHandle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Sockets.SocketAsyncEventArgs
#include "System/Net/Sockets/SocketAsyncEventArgs.hpp"
// Including type: System.Net.EndPoint
#include "System/Net/EndPoint.hpp"
// Including type: System.Net.Sockets.Socket
#include "System/Net/Sockets/Socket.hpp"
// Including type: System.Net.Sockets.SocketAsyncResult
#include "System/Net/Sockets/SocketAsyncResult.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.EventHandler`1
#include "System/EventHandler_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Sockets.SocketAsyncEventArgs.get_AcceptSocket
System::Net::Sockets::Socket* System::Net::Sockets::SocketAsyncEventArgs::get_AcceptSocket() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncEventArgs::get_AcceptSocket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AcceptSocket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Sockets::Socket*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncEventArgs.set_AcceptSocket
void System::Net::Sockets::SocketAsyncEventArgs::set_AcceptSocket(System::Net::Sockets::Socket* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncEventArgs::set_AcceptSocket");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AcceptSocket", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncEventArgs.get_BufferList
System::Collections::Generic::IList_1<System::ArraySegment_1<uint8_t>>* System::Net::Sockets::SocketAsyncEventArgs::get_BufferList() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncEventArgs::get_BufferList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BufferList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IList_1<System::ArraySegment_1<uint8_t>>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncEventArgs.set_BytesTransferred
void System::Net::Sockets::SocketAsyncEventArgs::set_BytesTransferred(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncEventArgs::set_BytesTransferred");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BytesTransferred", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncEventArgs.get_Count
int System::Net::Sockets::SocketAsyncEventArgs::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncEventArgs::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncEventArgs.set_LastOperation
void System::Net::Sockets::SocketAsyncEventArgs::set_LastOperation(System::Net::Sockets::SocketAsyncOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncEventArgs::set_LastOperation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LastOperation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncEventArgs.set_SendPacketsSendSize
void System::Net::Sockets::SocketAsyncEventArgs::set_SendPacketsSendSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncEventArgs::set_SendPacketsSendSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SendPacketsSendSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncEventArgs.get_SocketError
System::Net::Sockets::SocketError System::Net::Sockets::SocketAsyncEventArgs::get_SocketError() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncEventArgs::get_SocketError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SocketError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Sockets::SocketError, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncEventArgs.set_SocketError
void System::Net::Sockets::SocketAsyncEventArgs::set_SocketError(System::Net::Sockets::SocketError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncEventArgs::set_SocketError");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SocketError", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncEventArgs.get_UserToken
::Il2CppObject* System::Net::Sockets::SocketAsyncEventArgs::get_UserToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncEventArgs::get_UserToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncEventArgs.set_UserToken
void System::Net::Sockets::SocketAsyncEventArgs::set_UserToken(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncEventArgs::set_UserToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UserToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncEventArgs.add_Completed
void System::Net::Sockets::SocketAsyncEventArgs::add_Completed(System::EventHandler_1<System::Net::Sockets::SocketAsyncEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncEventArgs::add_Completed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_Completed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncEventArgs.remove_Completed
void System::Net::Sockets::SocketAsyncEventArgs::remove_Completed(System::EventHandler_1<System::Net::Sockets::SocketAsyncEventArgs*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncEventArgs::remove_Completed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_Completed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncEventArgs.Dispose
void System::Net::Sockets::SocketAsyncEventArgs::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncEventArgs::Dispose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncEventArgs.Dispose
void System::Net::Sockets::SocketAsyncEventArgs::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncEventArgs::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncEventArgs.SetLastOperation
void System::Net::Sockets::SocketAsyncEventArgs::SetLastOperation(System::Net::Sockets::SocketAsyncOperation op) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncEventArgs::SetLastOperation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLastOperation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(op)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, op);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncEventArgs.Complete
void System::Net::Sockets::SocketAsyncEventArgs::Complete() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncEventArgs::Complete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Complete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncEventArgs.OnCompleted
void System::Net::Sockets::SocketAsyncEventArgs::OnCompleted(System::Net::Sockets::SocketAsyncEventArgs* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncEventArgs::OnCompleted");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCompleted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncEventArgs.Finalize
void System::Net::Sockets::SocketAsyncEventArgs::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncEventArgs::Finalize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: SocketAsyncEventArgs::get_AcceptSocket
// Il2CppName: get_AcceptSocket
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::Sockets::Socket* (SocketAsyncEventArgs::*)()>(&SocketAsyncEventArgs::get_AcceptSocket)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketAsyncEventArgs*), "get_AcceptSocket", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SocketAsyncEventArgs::set_AcceptSocket
// Il2CppName: set_AcceptSocket
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketAsyncEventArgs::*)(System::Net::Sockets::Socket*)>(&SocketAsyncEventArgs::set_AcceptSocket)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketAsyncEventArgs*), "set_AcceptSocket", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::Socket*>()});
  }
};
// Writing MetadataGetter for method: SocketAsyncEventArgs::get_BufferList
// Il2CppName: get_BufferList
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IList_1<System::ArraySegment_1<uint8_t>>* (SocketAsyncEventArgs::*)()>(&SocketAsyncEventArgs::get_BufferList)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketAsyncEventArgs*), "get_BufferList", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SocketAsyncEventArgs::set_BytesTransferred
// Il2CppName: set_BytesTransferred
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketAsyncEventArgs::*)(int)>(&SocketAsyncEventArgs::set_BytesTransferred)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketAsyncEventArgs*), "set_BytesTransferred", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SocketAsyncEventArgs::get_Count
// Il2CppName: get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (SocketAsyncEventArgs::*)()>(&SocketAsyncEventArgs::get_Count)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketAsyncEventArgs*), "get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SocketAsyncEventArgs::set_LastOperation
// Il2CppName: set_LastOperation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketAsyncEventArgs::*)(System::Net::Sockets::SocketAsyncOperation)>(&SocketAsyncEventArgs::set_LastOperation)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketAsyncEventArgs*), "set_LastOperation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketAsyncOperation>()});
  }
};
// Writing MetadataGetter for method: SocketAsyncEventArgs::set_SendPacketsSendSize
// Il2CppName: set_SendPacketsSendSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketAsyncEventArgs::*)(int)>(&SocketAsyncEventArgs::set_SendPacketsSendSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketAsyncEventArgs*), "set_SendPacketsSendSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SocketAsyncEventArgs::get_SocketError
// Il2CppName: get_SocketError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::Sockets::SocketError (SocketAsyncEventArgs::*)()>(&SocketAsyncEventArgs::get_SocketError)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketAsyncEventArgs*), "get_SocketError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SocketAsyncEventArgs::set_SocketError
// Il2CppName: set_SocketError
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketAsyncEventArgs::*)(System::Net::Sockets::SocketError)>(&SocketAsyncEventArgs::set_SocketError)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketAsyncEventArgs*), "set_SocketError", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketError>()});
  }
};
// Writing MetadataGetter for method: SocketAsyncEventArgs::get_UserToken
// Il2CppName: get_UserToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (SocketAsyncEventArgs::*)()>(&SocketAsyncEventArgs::get_UserToken)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketAsyncEventArgs*), "get_UserToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SocketAsyncEventArgs::set_UserToken
// Il2CppName: set_UserToken
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketAsyncEventArgs::*)(::Il2CppObject*)>(&SocketAsyncEventArgs::set_UserToken)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketAsyncEventArgs*), "set_UserToken", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: SocketAsyncEventArgs::add_Completed
// Il2CppName: add_Completed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketAsyncEventArgs::*)(System::EventHandler_1<System::Net::Sockets::SocketAsyncEventArgs*>*)>(&SocketAsyncEventArgs::add_Completed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketAsyncEventArgs*), "add_Completed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::EventHandler_1<System::Net::Sockets::SocketAsyncEventArgs*>*>()});
  }
};
// Writing MetadataGetter for method: SocketAsyncEventArgs::remove_Completed
// Il2CppName: remove_Completed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketAsyncEventArgs::*)(System::EventHandler_1<System::Net::Sockets::SocketAsyncEventArgs*>*)>(&SocketAsyncEventArgs::remove_Completed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketAsyncEventArgs*), "remove_Completed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::EventHandler_1<System::Net::Sockets::SocketAsyncEventArgs*>*>()});
  }
};
// Writing MetadataGetter for method: SocketAsyncEventArgs::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketAsyncEventArgs::*)(bool)>(&SocketAsyncEventArgs::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketAsyncEventArgs*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: SocketAsyncEventArgs::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketAsyncEventArgs::*)()>(&SocketAsyncEventArgs::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketAsyncEventArgs*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SocketAsyncEventArgs::SetLastOperation
// Il2CppName: SetLastOperation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketAsyncEventArgs::*)(System::Net::Sockets::SocketAsyncOperation)>(&SocketAsyncEventArgs::SetLastOperation)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketAsyncEventArgs*), "SetLastOperation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketAsyncOperation>()});
  }
};
// Writing MetadataGetter for method: SocketAsyncEventArgs::Complete
// Il2CppName: Complete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketAsyncEventArgs::*)()>(&SocketAsyncEventArgs::Complete)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketAsyncEventArgs*), "Complete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SocketAsyncEventArgs::OnCompleted
// Il2CppName: OnCompleted
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketAsyncEventArgs::*)(System::Net::Sockets::SocketAsyncEventArgs*)>(&SocketAsyncEventArgs::OnCompleted)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketAsyncEventArgs*), "OnCompleted", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketAsyncEventArgs*>()});
  }
};
// Writing MetadataGetter for method: SocketAsyncEventArgs::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketAsyncEventArgs::*)()>(&SocketAsyncEventArgs::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketAsyncEventArgs*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketAsyncEventArgs::*)()>(&SocketAsyncEventArgs::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketAsyncEventArgs*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SocketAsyncEventArgs::Finalize
// Il2CppName: Finalize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketAsyncEventArgs::*)()>(&SocketAsyncEventArgs::Finalize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketAsyncEventArgs*), "Finalize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Sockets.SocketAsyncResult
#include "System/Net/Sockets/SocketAsyncResult.hpp"
// Including type: System.Net.Sockets.SocketAsyncResult/<>c
#include "System/Net/Sockets/SocketAsyncResult_--c.hpp"
// Including type: System.Net.Sockets.Socket
#include "System/Net/Sockets/Socket.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Net.EndPoint
#include "System/Net/EndPoint.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.Net.Sockets.SocketError
#include "System/Net/Sockets/SocketError.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Sockets.SocketAsyncResult.get_Handle
System::IntPtr System::Net::Sockets::SocketAsyncResult::get_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncResult::get_Handle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Handle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncResult.Init
void System::Net::Sockets::SocketAsyncResult::Init(System::Net::Sockets::Socket* socket, System::AsyncCallback* callback, ::Il2CppObject* state, System::Net::Sockets::SocketOperation operation) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncResult::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(socket), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(state), ::il2cpp_utils::ExtractType(operation)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, socket, callback, state, operation);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncResult.get_ErrorCode
System::Net::Sockets::SocketError System::Net::Sockets::SocketAsyncResult::get_ErrorCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncResult::get_ErrorCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ErrorCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Sockets::SocketError, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncResult.CheckIfThrowDelayedException
void System::Net::Sockets::SocketAsyncResult::CheckIfThrowDelayedException() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncResult::CheckIfThrowDelayedException");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckIfThrowDelayedException", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncResult.Complete
void System::Net::Sockets::SocketAsyncResult::Complete() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncResult::Complete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Complete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncResult.Complete
void System::Net::Sockets::SocketAsyncResult::Complete(bool synch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncResult::Complete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Complete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(synch)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, synch);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncResult.Complete
void System::Net::Sockets::SocketAsyncResult::Complete(int total) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncResult::Complete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Complete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(total)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, total);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncResult.Complete
void System::Net::Sockets::SocketAsyncResult::Complete(System::Exception* e, bool synch) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncResult::Complete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Complete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e), ::il2cpp_utils::ExtractType(synch)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, e, synch);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncResult.Complete
void System::Net::Sockets::SocketAsyncResult::Complete(System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncResult::Complete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Complete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(e)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, e);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncResult.Complete
void System::Net::Sockets::SocketAsyncResult::Complete(System::Net::Sockets::Socket* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncResult::Complete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Complete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, s);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncResult.Complete
void System::Net::Sockets::SocketAsyncResult::Complete(System::Net::Sockets::Socket* s, int total) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncResult::Complete");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Complete", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s), ::il2cpp_utils::ExtractType(total)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, s, total);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncResult.CompleteDisposed
void System::Net::Sockets::SocketAsyncResult::CompleteDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncResult::CompleteDisposed");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CompleteDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: SocketAsyncResult::get_Handle
// Il2CppName: get_Handle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IntPtr (SocketAsyncResult::*)()>(&SocketAsyncResult::get_Handle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketAsyncResult*), "get_Handle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SocketAsyncResult::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketAsyncResult::*)(System::Net::Sockets::Socket*, System::AsyncCallback*, ::Il2CppObject*, System::Net::Sockets::SocketOperation)>(&SocketAsyncResult::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketAsyncResult*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::Socket*>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketOperation>()});
  }
};
// Writing MetadataGetter for method: SocketAsyncResult::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketAsyncResult::*)(System::Net::Sockets::Socket*, System::AsyncCallback*, ::Il2CppObject*, System::Net::Sockets::SocketOperation)>(&SocketAsyncResult::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketAsyncResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::Socket*>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketOperation>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketAsyncResult::*)(System::Net::Sockets::Socket*, System::AsyncCallback*, ::Il2CppObject*, System::Net::Sockets::SocketOperation)>(&SocketAsyncResult::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketAsyncResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::Socket*>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::SocketOperation>()});
  }
};
// Writing MetadataGetter for method: SocketAsyncResult::get_ErrorCode
// Il2CppName: get_ErrorCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::Sockets::SocketError (SocketAsyncResult::*)()>(&SocketAsyncResult::get_ErrorCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketAsyncResult*), "get_ErrorCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SocketAsyncResult::CheckIfThrowDelayedException
// Il2CppName: CheckIfThrowDelayedException
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketAsyncResult::*)()>(&SocketAsyncResult::CheckIfThrowDelayedException)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketAsyncResult*), "CheckIfThrowDelayedException", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SocketAsyncResult::Complete
// Il2CppName: Complete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketAsyncResult::*)()>(&SocketAsyncResult::Complete)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketAsyncResult*), "Complete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SocketAsyncResult::Complete
// Il2CppName: Complete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketAsyncResult::*)(bool)>(&SocketAsyncResult::Complete)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketAsyncResult*), "Complete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: SocketAsyncResult::Complete
// Il2CppName: Complete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketAsyncResult::*)(int)>(&SocketAsyncResult::Complete)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketAsyncResult*), "Complete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SocketAsyncResult::Complete
// Il2CppName: Complete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketAsyncResult::*)(System::Exception*, bool)>(&SocketAsyncResult::Complete)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketAsyncResult*), "Complete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Exception*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: SocketAsyncResult::Complete
// Il2CppName: Complete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketAsyncResult::*)(System::Exception*)>(&SocketAsyncResult::Complete)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketAsyncResult*), "Complete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Exception*>()});
  }
};
// Writing MetadataGetter for method: SocketAsyncResult::Complete
// Il2CppName: Complete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketAsyncResult::*)(System::Net::Sockets::Socket*)>(&SocketAsyncResult::Complete)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketAsyncResult*), "Complete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::Socket*>()});
  }
};
// Writing MetadataGetter for method: SocketAsyncResult::Complete
// Il2CppName: Complete
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketAsyncResult::*)(System::Net::Sockets::Socket*, int)>(&SocketAsyncResult::Complete)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketAsyncResult*), "Complete", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::Socket*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SocketAsyncResult::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketAsyncResult::*)()>(&SocketAsyncResult::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketAsyncResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketAsyncResult::*)()>(&SocketAsyncResult::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketAsyncResult*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SocketAsyncResult::CompleteDisposed
// Il2CppName: CompleteDisposed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketAsyncResult::*)()>(&SocketAsyncResult::CompleteDisposed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketAsyncResult*), "CompleteDisposed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Sockets.SocketAsyncResult/<>c
#include "System/Net/Sockets/SocketAsyncResult_--c.hpp"
// Including type: System.Threading.WaitCallback
#include "System/Threading/WaitCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Net.Sockets.SocketAsyncResult/<>c <>9
System::Net::Sockets::SocketAsyncResult::$$c* System::Net::Sockets::SocketAsyncResult::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncResult::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketAsyncResult::$$c*>("System.Net.Sockets", "SocketAsyncResult/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Net.Sockets.SocketAsyncResult/<>c <>9
void System::Net::Sockets::SocketAsyncResult::$$c::_set_$$9(System::Net::Sockets::SocketAsyncResult::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncResult::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketAsyncResult/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Threading.WaitCallback <>9__27_0
System::Threading::WaitCallback* System::Net::Sockets::SocketAsyncResult::$$c::_get_$$9__27_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncResult::$$c::_get_$$9__27_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Threading::WaitCallback*>("System.Net.Sockets", "SocketAsyncResult/<>c", "<>9__27_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Threading.WaitCallback <>9__27_0
void System::Net::Sockets::SocketAsyncResult::$$c::_set_$$9__27_0(System::Threading::WaitCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncResult::$$c::_set_$$9__27_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketAsyncResult/<>c", "<>9__27_0", value)));
}
// Autogenerated method: System.Net.Sockets.SocketAsyncResult/<>c..cctor
void System::Net::Sockets::SocketAsyncResult::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncResult::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Sockets", "SocketAsyncResult/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Sockets.SocketAsyncResult/<>c.<Complete>b__27_0
void System::Net::Sockets::SocketAsyncResult::$$c::$Complete$b__27_0(::Il2CppObject* state) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketAsyncResult::$$c::<Complete>b__27_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Complete>b__27_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state);
}
// Writing MetadataGetter for method: SocketAsyncResult::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&SocketAsyncResult::$$c::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketAsyncResult::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SocketAsyncResult::$$c::$Complete$b__27_0
// Il2CppName: <Complete>b__27_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketAsyncResult::$$c::*)(::Il2CppObject*)>(&SocketAsyncResult::$$c::$Complete$b__27_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketAsyncResult::$$c*), "<Complete>b__27_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: SocketAsyncResult::$$c::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketAsyncResult::$$c::*)()>(&SocketAsyncResult::$$c::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketAsyncResult::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketAsyncResult::$$c::*)()>(&SocketAsyncResult::$$c::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketAsyncResult::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Sockets.SocketOperation
#include "System/Net/Sockets/SocketOperation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOperation Accept
System::Net::Sockets::SocketOperation System::Net::Sockets::SocketOperation::_get_Accept() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOperation::_get_Accept");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOperation>("System.Net.Sockets", "SocketOperation", "Accept"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOperation Accept
void System::Net::Sockets::SocketOperation::_set_Accept(System::Net::Sockets::SocketOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOperation::_set_Accept");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOperation", "Accept", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOperation Connect
System::Net::Sockets::SocketOperation System::Net::Sockets::SocketOperation::_get_Connect() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOperation::_get_Connect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOperation>("System.Net.Sockets", "SocketOperation", "Connect"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOperation Connect
void System::Net::Sockets::SocketOperation::_set_Connect(System::Net::Sockets::SocketOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOperation::_set_Connect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOperation", "Connect", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOperation Receive
System::Net::Sockets::SocketOperation System::Net::Sockets::SocketOperation::_get_Receive() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOperation::_get_Receive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOperation>("System.Net.Sockets", "SocketOperation", "Receive"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOperation Receive
void System::Net::Sockets::SocketOperation::_set_Receive(System::Net::Sockets::SocketOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOperation::_set_Receive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOperation", "Receive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOperation ReceiveFrom
System::Net::Sockets::SocketOperation System::Net::Sockets::SocketOperation::_get_ReceiveFrom() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOperation::_get_ReceiveFrom");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOperation>("System.Net.Sockets", "SocketOperation", "ReceiveFrom"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOperation ReceiveFrom
void System::Net::Sockets::SocketOperation::_set_ReceiveFrom(System::Net::Sockets::SocketOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOperation::_set_ReceiveFrom");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOperation", "ReceiveFrom", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOperation Send
System::Net::Sockets::SocketOperation System::Net::Sockets::SocketOperation::_get_Send() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOperation::_get_Send");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOperation>("System.Net.Sockets", "SocketOperation", "Send"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOperation Send
void System::Net::Sockets::SocketOperation::_set_Send(System::Net::Sockets::SocketOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOperation::_set_Send");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOperation", "Send", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOperation SendTo
System::Net::Sockets::SocketOperation System::Net::Sockets::SocketOperation::_get_SendTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOperation::_get_SendTo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOperation>("System.Net.Sockets", "SocketOperation", "SendTo"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOperation SendTo
void System::Net::Sockets::SocketOperation::_set_SendTo(System::Net::Sockets::SocketOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOperation::_set_SendTo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOperation", "SendTo", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOperation RecvJustCallback
System::Net::Sockets::SocketOperation System::Net::Sockets::SocketOperation::_get_RecvJustCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOperation::_get_RecvJustCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOperation>("System.Net.Sockets", "SocketOperation", "RecvJustCallback"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOperation RecvJustCallback
void System::Net::Sockets::SocketOperation::_set_RecvJustCallback(System::Net::Sockets::SocketOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOperation::_set_RecvJustCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOperation", "RecvJustCallback", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOperation SendJustCallback
System::Net::Sockets::SocketOperation System::Net::Sockets::SocketOperation::_get_SendJustCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOperation::_get_SendJustCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOperation>("System.Net.Sockets", "SocketOperation", "SendJustCallback"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOperation SendJustCallback
void System::Net::Sockets::SocketOperation::_set_SendJustCallback(System::Net::Sockets::SocketOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOperation::_set_SendJustCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOperation", "SendJustCallback", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOperation Disconnect
System::Net::Sockets::SocketOperation System::Net::Sockets::SocketOperation::_get_Disconnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOperation::_get_Disconnect");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOperation>("System.Net.Sockets", "SocketOperation", "Disconnect"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOperation Disconnect
void System::Net::Sockets::SocketOperation::_set_Disconnect(System::Net::Sockets::SocketOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOperation::_set_Disconnect");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOperation", "Disconnect", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOperation AcceptReceive
System::Net::Sockets::SocketOperation System::Net::Sockets::SocketOperation::_get_AcceptReceive() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOperation::_get_AcceptReceive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOperation>("System.Net.Sockets", "SocketOperation", "AcceptReceive"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOperation AcceptReceive
void System::Net::Sockets::SocketOperation::_set_AcceptReceive(System::Net::Sockets::SocketOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOperation::_set_AcceptReceive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOperation", "AcceptReceive", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOperation ReceiveGeneric
System::Net::Sockets::SocketOperation System::Net::Sockets::SocketOperation::_get_ReceiveGeneric() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOperation::_get_ReceiveGeneric");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOperation>("System.Net.Sockets", "SocketOperation", "ReceiveGeneric"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOperation ReceiveGeneric
void System::Net::Sockets::SocketOperation::_set_ReceiveGeneric(System::Net::Sockets::SocketOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOperation::_set_ReceiveGeneric");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOperation", "ReceiveGeneric", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Sockets.SocketOperation SendGeneric
System::Net::Sockets::SocketOperation System::Net::Sockets::SocketOperation::_get_SendGeneric() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOperation::_get_SendGeneric");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Sockets::SocketOperation>("System.Net.Sockets", "SocketOperation", "SendGeneric"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Sockets.SocketOperation SendGeneric
void System::Net::Sockets::SocketOperation::_set_SendGeneric(System::Net::Sockets::SocketOperation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Sockets::SocketOperation::_set_SendGeneric");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Sockets", "SocketOperation", "SendGeneric", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Security.AuthenticatedStream
#include "System/Net/Security/AuthenticatedStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Security.AuthenticatedStream.get_InnerStream
System::IO::Stream* System::Net::Security::AuthenticatedStream::get_InnerStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::AuthenticatedStream::get_InnerStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InnerStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::IO::Stream*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.AuthenticatedStream.get_IsAuthenticated
bool System::Net::Security::AuthenticatedStream::get_IsAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::AuthenticatedStream::get_IsAuthenticated");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsAuthenticated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.AuthenticatedStream.Dispose
void System::Net::Security::AuthenticatedStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::AuthenticatedStream::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Writing MetadataGetter for method: AuthenticatedStream::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AuthenticatedStream::*)(System::IO::Stream*, bool)>(&AuthenticatedStream::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AuthenticatedStream*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AuthenticatedStream::*)(System::IO::Stream*, bool)>(&AuthenticatedStream::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AuthenticatedStream*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: AuthenticatedStream::get_InnerStream
// Il2CppName: get_InnerStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IO::Stream* (AuthenticatedStream::*)()>(&AuthenticatedStream::get_InnerStream)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AuthenticatedStream*), "get_InnerStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AuthenticatedStream::get_IsAuthenticated
// Il2CppName: get_IsAuthenticated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (AuthenticatedStream::*)()>(&AuthenticatedStream::get_IsAuthenticated)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AuthenticatedStream*), "get_IsAuthenticated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AuthenticatedStream::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AuthenticatedStream::*)(bool)>(&AuthenticatedStream::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AuthenticatedStream*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Security.AuthenticationLevel
#include "System/Net/Security/AuthenticationLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Security.AuthenticationLevel None
System::Net::Security::AuthenticationLevel System::Net::Security::AuthenticationLevel::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::AuthenticationLevel::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Security::AuthenticationLevel>("System.Net.Security", "AuthenticationLevel", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.AuthenticationLevel None
void System::Net::Security::AuthenticationLevel::_set_None(System::Net::Security::AuthenticationLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::AuthenticationLevel::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "AuthenticationLevel", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Security.AuthenticationLevel MutualAuthRequested
System::Net::Security::AuthenticationLevel System::Net::Security::AuthenticationLevel::_get_MutualAuthRequested() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::AuthenticationLevel::_get_MutualAuthRequested");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Security::AuthenticationLevel>("System.Net.Security", "AuthenticationLevel", "MutualAuthRequested"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.AuthenticationLevel MutualAuthRequested
void System::Net::Security::AuthenticationLevel::_set_MutualAuthRequested(System::Net::Security::AuthenticationLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::AuthenticationLevel::_set_MutualAuthRequested");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "AuthenticationLevel", "MutualAuthRequested", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Security.AuthenticationLevel MutualAuthRequired
System::Net::Security::AuthenticationLevel System::Net::Security::AuthenticationLevel::_get_MutualAuthRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::AuthenticationLevel::_get_MutualAuthRequired");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Security::AuthenticationLevel>("System.Net.Security", "AuthenticationLevel", "MutualAuthRequired"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.AuthenticationLevel MutualAuthRequired
void System::Net::Security::AuthenticationLevel::_set_MutualAuthRequired(System::Net::Security::AuthenticationLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::AuthenticationLevel::_set_MutualAuthRequired");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "AuthenticationLevel", "MutualAuthRequired", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Security.RemoteCertificateValidationCallback
#include "System/Net/Security/RemoteCertificateValidationCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
// Including type: System.Net.Security.SslPolicyErrors
#include "System/Net/Security/SslPolicyErrors.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Security.RemoteCertificateValidationCallback.Invoke
bool System::Net::Security::RemoteCertificateValidationCallback::Invoke(::Il2CppObject* sender, System::Security::Cryptography::X509Certificates::X509Certificate* certificate, System::Security::Cryptography::X509Certificates::X509Chain* chain, System::Net::Security::SslPolicyErrors sslPolicyErrors) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::RemoteCertificateValidationCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(sslPolicyErrors)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, sender, certificate, chain, sslPolicyErrors);
}
// Autogenerated method: System.Net.Security.RemoteCertificateValidationCallback.BeginInvoke
System::IAsyncResult* System::Net::Security::RemoteCertificateValidationCallback::BeginInvoke(::Il2CppObject* sender, System::Security::Cryptography::X509Certificates::X509Certificate* certificate, System::Security::Cryptography::X509Certificates::X509Chain* chain, System::Net::Security::SslPolicyErrors sslPolicyErrors, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::RemoteCertificateValidationCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender), ::il2cpp_utils::ExtractType(certificate), ::il2cpp_utils::ExtractType(chain), ::il2cpp_utils::ExtractType(sslPolicyErrors), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, sender, certificate, chain, sslPolicyErrors, callback, object);
}
// Autogenerated method: System.Net.Security.RemoteCertificateValidationCallback.EndInvoke
bool System::Net::Security::RemoteCertificateValidationCallback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::RemoteCertificateValidationCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, result);
}
// Writing MetadataGetter for method: RemoteCertificateValidationCallback::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RemoteCertificateValidationCallback::*)(::Il2CppObject*, System::IntPtr)>(&RemoteCertificateValidationCallback::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteCertificateValidationCallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RemoteCertificateValidationCallback::*)(::Il2CppObject*, System::IntPtr)>(&RemoteCertificateValidationCallback::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteCertificateValidationCallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: RemoteCertificateValidationCallback::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (RemoteCertificateValidationCallback::*)(::Il2CppObject*, System::Security::Cryptography::X509Certificates::X509Certificate*, System::Security::Cryptography::X509Certificates::X509Chain*, System::Net::Security::SslPolicyErrors)>(&RemoteCertificateValidationCallback::Invoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteCertificateValidationCallback*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509Certificate*>(), ::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509Chain*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Security::SslPolicyErrors>()});
  }
};
// Writing MetadataGetter for method: RemoteCertificateValidationCallback::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (RemoteCertificateValidationCallback::*)(::Il2CppObject*, System::Security::Cryptography::X509Certificates::X509Certificate*, System::Security::Cryptography::X509Certificates::X509Chain*, System::Net::Security::SslPolicyErrors, System::AsyncCallback*, ::Il2CppObject*)>(&RemoteCertificateValidationCallback::BeginInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteCertificateValidationCallback*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509Certificate*>(), ::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509Chain*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Security::SslPolicyErrors>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: RemoteCertificateValidationCallback::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (RemoteCertificateValidationCallback::*)(System::IAsyncResult*)>(&RemoteCertificateValidationCallback::EndInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RemoteCertificateValidationCallback*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Security.SslPolicyErrors
#include "System/Net/Security/SslPolicyErrors.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Security.SslPolicyErrors None
System::Net::Security::SslPolicyErrors System::Net::Security::SslPolicyErrors::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::SslPolicyErrors::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Security::SslPolicyErrors>("System.Net.Security", "SslPolicyErrors", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.SslPolicyErrors None
void System::Net::Security::SslPolicyErrors::_set_None(System::Net::Security::SslPolicyErrors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::SslPolicyErrors::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "SslPolicyErrors", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Security.SslPolicyErrors RemoteCertificateNotAvailable
System::Net::Security::SslPolicyErrors System::Net::Security::SslPolicyErrors::_get_RemoteCertificateNotAvailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::SslPolicyErrors::_get_RemoteCertificateNotAvailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Security::SslPolicyErrors>("System.Net.Security", "SslPolicyErrors", "RemoteCertificateNotAvailable"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.SslPolicyErrors RemoteCertificateNotAvailable
void System::Net::Security::SslPolicyErrors::_set_RemoteCertificateNotAvailable(System::Net::Security::SslPolicyErrors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::SslPolicyErrors::_set_RemoteCertificateNotAvailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "SslPolicyErrors", "RemoteCertificateNotAvailable", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Security.SslPolicyErrors RemoteCertificateNameMismatch
System::Net::Security::SslPolicyErrors System::Net::Security::SslPolicyErrors::_get_RemoteCertificateNameMismatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::SslPolicyErrors::_get_RemoteCertificateNameMismatch");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Security::SslPolicyErrors>("System.Net.Security", "SslPolicyErrors", "RemoteCertificateNameMismatch"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.SslPolicyErrors RemoteCertificateNameMismatch
void System::Net::Security::SslPolicyErrors::_set_RemoteCertificateNameMismatch(System::Net::Security::SslPolicyErrors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::SslPolicyErrors::_set_RemoteCertificateNameMismatch");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "SslPolicyErrors", "RemoteCertificateNameMismatch", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Security.SslPolicyErrors RemoteCertificateChainErrors
System::Net::Security::SslPolicyErrors System::Net::Security::SslPolicyErrors::_get_RemoteCertificateChainErrors() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::SslPolicyErrors::_get_RemoteCertificateChainErrors");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Security::SslPolicyErrors>("System.Net.Security", "SslPolicyErrors", "RemoteCertificateChainErrors"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Security.SslPolicyErrors RemoteCertificateChainErrors
void System::Net::Security::SslPolicyErrors::_set_RemoteCertificateChainErrors(System::Net::Security::SslPolicyErrors value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::SslPolicyErrors::_set_RemoteCertificateChainErrors");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Security", "SslPolicyErrors", "RemoteCertificateChainErrors", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Security.LocalCertSelectionCallback
#include "System/Net/Security/LocalCertSelectionCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Security.LocalCertSelectionCallback.Invoke
System::Security::Cryptography::X509Certificates::X509Certificate* System::Net::Security::LocalCertSelectionCallback::Invoke(::Il2CppString* targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection* localCertificates, System::Security::Cryptography::X509Certificates::X509Certificate* remoteCertificate, ::Array<::Il2CppString*>* acceptableIssuers) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::LocalCertSelectionCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetHost), ::il2cpp_utils::ExtractType(localCertificates), ::il2cpp_utils::ExtractType(remoteCertificate), ::il2cpp_utils::ExtractType(acceptableIssuers)})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method, targetHost, localCertificates, remoteCertificate, acceptableIssuers);
}
// Autogenerated method: System.Net.Security.LocalCertSelectionCallback.BeginInvoke
System::IAsyncResult* System::Net::Security::LocalCertSelectionCallback::BeginInvoke(::Il2CppString* targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection* localCertificates, System::Security::Cryptography::X509Certificates::X509Certificate* remoteCertificate, ::Array<::Il2CppString*>* acceptableIssuers, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::LocalCertSelectionCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(targetHost), ::il2cpp_utils::ExtractType(localCertificates), ::il2cpp_utils::ExtractType(remoteCertificate), ::il2cpp_utils::ExtractType(acceptableIssuers), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, targetHost, localCertificates, remoteCertificate, acceptableIssuers, callback, object);
}
// Autogenerated method: System.Net.Security.LocalCertSelectionCallback.EndInvoke
System::Security::Cryptography::X509Certificates::X509Certificate* System::Net::Security::LocalCertSelectionCallback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::LocalCertSelectionCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method, result);
}
// Writing MetadataGetter for method: LocalCertSelectionCallback::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LocalCertSelectionCallback::*)(::Il2CppObject*, System::IntPtr)>(&LocalCertSelectionCallback::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LocalCertSelectionCallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LocalCertSelectionCallback::*)(::Il2CppObject*, System::IntPtr)>(&LocalCertSelectionCallback::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LocalCertSelectionCallback*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: LocalCertSelectionCallback::Invoke
// Il2CppName: Invoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::X509Certificates::X509Certificate* (LocalCertSelectionCallback::*)(::Il2CppString*, System::Security::Cryptography::X509Certificates::X509CertificateCollection*, System::Security::Cryptography::X509Certificates::X509Certificate*, ::Array<::Il2CppString*>*)>(&LocalCertSelectionCallback::Invoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LocalCertSelectionCallback*), "Invoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509CertificateCollection*>(), ::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509Certificate*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: LocalCertSelectionCallback::BeginInvoke
// Il2CppName: BeginInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (LocalCertSelectionCallback::*)(::Il2CppString*, System::Security::Cryptography::X509Certificates::X509CertificateCollection*, System::Security::Cryptography::X509Certificates::X509Certificate*, ::Array<::Il2CppString*>*, System::AsyncCallback*, ::Il2CppObject*)>(&LocalCertSelectionCallback::BeginInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LocalCertSelectionCallback*), "BeginInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509CertificateCollection*>(), ::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509Certificate*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: LocalCertSelectionCallback::EndInvoke
// Il2CppName: EndInvoke
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Security::Cryptography::X509Certificates::X509Certificate* (LocalCertSelectionCallback::*)(System::IAsyncResult*)>(&LocalCertSelectionCallback::EndInvoke)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LocalCertSelectionCallback*), "EndInvoke", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Security.SslStream
#include "System/Net/Security/SslStream.hpp"
// Including type: Mono.Security.Interface.MonoTlsProvider
#include "Mono/Security/Interface/MonoTlsProvider.hpp"
// Including type: Mono.Security.Interface.IMonoSslStream
#include "Mono/Security/Interface/IMonoSslStream.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Authentication.SslProtocols
#include "System/Security/Authentication/SslProtocols.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Security.SslStream.get_Impl
Mono::Security::Interface::IMonoSslStream* System::Net::Security::SslStream::get_Impl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::SslStream::get_Impl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Impl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::IMonoSslStream*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.CreateMonoSslStream
Mono::Security::Interface::IMonoSslStream* System::Net::Security::SslStream::CreateMonoSslStream(System::IO::Stream* innerStream, bool leaveInnerStreamOpen, Mono::Security::Interface::MonoTlsProvider* provider, Mono::Security::Interface::MonoTlsSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::SslStream::CreateMonoSslStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Security", "SslStream", "CreateMonoSslStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(innerStream), ::il2cpp_utils::ExtractType(leaveInnerStreamOpen), ::il2cpp_utils::ExtractType(provider), ::il2cpp_utils::ExtractType(settings)})));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::IMonoSslStream*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, innerStream, leaveInnerStreamOpen, provider, settings);
}
// Autogenerated method: System.Net.Security.SslStream.AuthenticateAsServer
void System::Net::Security::SslStream::AuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate* serverCertificate, bool clientCertificateRequired, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::SslStream::AuthenticateAsServer");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AuthenticateAsServer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverCertificate), ::il2cpp_utils::ExtractType(clientCertificateRequired), ::il2cpp_utils::ExtractType(enabledSslProtocols), ::il2cpp_utils::ExtractType(checkCertificateRevocation)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serverCertificate, clientCertificateRequired, enabledSslProtocols, checkCertificateRevocation);
}
// Autogenerated method: System.Net.Security.SslStream.CheckDisposed
void System::Net::Security::SslStream::CheckDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::SslStream::CheckDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.get_IsAuthenticated
bool System::Net::Security::SslStream::get_IsAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::SslStream::get_IsAuthenticated");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsAuthenticated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.get_CanSeek
bool System::Net::Security::SslStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::SslStream::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanSeek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.get_CanRead
bool System::Net::Security::SslStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::SslStream::get_CanRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.get_CanWrite
bool System::Net::Security::SslStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::SslStream::get_CanWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.get_ReadTimeout
int System::Net::Security::SslStream::get_ReadTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::SslStream::get_ReadTimeout");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReadTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.get_WriteTimeout
int System::Net::Security::SslStream::get_WriteTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::SslStream::get_WriteTimeout");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WriteTimeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.get_Length
int64_t System::Net::Security::SslStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::SslStream::get_Length");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.get_Position
int64_t System::Net::Security::SslStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::SslStream::get_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.set_Position
void System::Net::Security::SslStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::SslStream::set_Position");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Security.SslStream.SetLength
void System::Net::Security::SslStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::SslStream::SetLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Security.SslStream.Seek
int64_t System::Net::Security::SslStream::Seek(int64_t offset, System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::SslStream::Seek");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Seek", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(origin)})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: System.Net.Security.SslStream.Flush
void System::Net::Security::SslStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::SslStream::Flush");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Security.SslStream.Dispose
void System::Net::Security::SslStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::SslStream::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Security.SslStream.Read
int System::Net::Security::SslStream::Read(::Array<uint8_t>* buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::SslStream::Read");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.Net.Security.SslStream.Write
void System::Net::Security::SslStream::Write(::Array<uint8_t>* buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::SslStream::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: System.Net.Security.SslStream.BeginRead
System::IAsyncResult* System::Net::Security::SslStream::BeginRead(::Array<uint8_t>* buffer, int offset, int count, System::AsyncCallback* asyncCallback, ::Il2CppObject* asyncState) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::SslStream::BeginRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(asyncCallback), ::il2cpp_utils::ExtractType(asyncState)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, asyncCallback, asyncState);
}
// Autogenerated method: System.Net.Security.SslStream.EndRead
int System::Net::Security::SslStream::EndRead(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::SslStream::EndRead");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: System.Net.Security.SslStream.BeginWrite
System::IAsyncResult* System::Net::Security::SslStream::BeginWrite(::Array<uint8_t>* buffer, int offset, int count, System::AsyncCallback* asyncCallback, ::Il2CppObject* asyncState) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::SslStream::BeginWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count), ::il2cpp_utils::ExtractType(asyncCallback), ::il2cpp_utils::ExtractType(asyncState)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, asyncCallback, asyncState);
}
// Autogenerated method: System.Net.Security.SslStream.EndWrite
void System::Net::Security::SslStream::EndWrite(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Security::SslStream::EndWrite");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndWrite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asyncResult)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, asyncResult);
}
// Writing MetadataGetter for method: SslStream::get_Impl
// Il2CppName: get_Impl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::Interface::IMonoSslStream* (SslStream::*)()>(&SslStream::get_Impl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SslStream*), "get_Impl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SslStream::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SslStream::*)(System::IO::Stream*, bool, Mono::Security::Interface::MonoTlsProvider*, Mono::Security::Interface::MonoTlsSettings*)>(&SslStream::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SslStream*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Mono::Security::Interface::MonoTlsProvider*>(), ::il2cpp_utils::ExtractIndependentType<Mono::Security::Interface::MonoTlsSettings*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SslStream::*)(System::IO::Stream*, bool, Mono::Security::Interface::MonoTlsProvider*, Mono::Security::Interface::MonoTlsSettings*)>(&SslStream::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SslStream*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Mono::Security::Interface::MonoTlsProvider*>(), ::il2cpp_utils::ExtractIndependentType<Mono::Security::Interface::MonoTlsSettings*>()});
  }
};
// Writing MetadataGetter for method: SslStream::CreateMonoSslStream
// Il2CppName: CreateMonoSslStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<Mono::Security::Interface::IMonoSslStream* (*)(System::IO::Stream*, bool, Mono::Security::Interface::MonoTlsProvider*, Mono::Security::Interface::MonoTlsSettings*)>(&SslStream::CreateMonoSslStream)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SslStream*), "CreateMonoSslStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<Mono::Security::Interface::MonoTlsProvider*>(), ::il2cpp_utils::ExtractIndependentType<Mono::Security::Interface::MonoTlsSettings*>()});
  }
};
// Writing MetadataGetter for method: SslStream::AuthenticateAsServer
// Il2CppName: AuthenticateAsServer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SslStream::*)(System::Security::Cryptography::X509Certificates::X509Certificate*, bool, System::Security::Authentication::SslProtocols, bool)>(&SslStream::AuthenticateAsServer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SslStream*), "AuthenticateAsServer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Security::Cryptography::X509Certificates::X509Certificate*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<System::Security::Authentication::SslProtocols>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: SslStream::CheckDisposed
// Il2CppName: CheckDisposed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SslStream::*)()>(&SslStream::CheckDisposed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SslStream*), "CheckDisposed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SslStream::get_IsAuthenticated
// Il2CppName: get_IsAuthenticated
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (SslStream::*)()>(&SslStream::get_IsAuthenticated)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SslStream*), "get_IsAuthenticated", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SslStream::get_CanSeek
// Il2CppName: get_CanSeek
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (SslStream::*)()>(&SslStream::get_CanSeek)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SslStream*), "get_CanSeek", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SslStream::get_CanRead
// Il2CppName: get_CanRead
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (SslStream::*)()>(&SslStream::get_CanRead)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SslStream*), "get_CanRead", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SslStream::get_CanWrite
// Il2CppName: get_CanWrite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (SslStream::*)()>(&SslStream::get_CanWrite)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SslStream*), "get_CanWrite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SslStream::get_ReadTimeout
// Il2CppName: get_ReadTimeout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (SslStream::*)()>(&SslStream::get_ReadTimeout)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SslStream*), "get_ReadTimeout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SslStream::get_WriteTimeout
// Il2CppName: get_WriteTimeout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (SslStream::*)()>(&SslStream::get_WriteTimeout)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SslStream*), "get_WriteTimeout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SslStream::get_Length
// Il2CppName: get_Length
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (SslStream::*)()>(&SslStream::get_Length)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SslStream*), "get_Length", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SslStream::get_Position
// Il2CppName: get_Position
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (SslStream::*)()>(&SslStream::get_Position)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SslStream*), "get_Position", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SslStream::set_Position
// Il2CppName: set_Position
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SslStream::*)(int64_t)>(&SslStream::set_Position)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SslStream*), "set_Position", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: SslStream::SetLength
// Il2CppName: SetLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SslStream::*)(int64_t)>(&SslStream::SetLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SslStream*), "SetLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: SslStream::Seek
// Il2CppName: Seek
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (SslStream::*)(int64_t, System::IO::SeekOrigin)>(&SslStream::Seek)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SslStream*), "Seek", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>(), ::il2cpp_utils::ExtractIndependentType<System::IO::SeekOrigin>()});
  }
};
// Writing MetadataGetter for method: SslStream::Flush
// Il2CppName: Flush
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SslStream::*)()>(&SslStream::Flush)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SslStream*), "Flush", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SslStream::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SslStream::*)(bool)>(&SslStream::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SslStream*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: SslStream::Read
// Il2CppName: Read
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (SslStream::*)(::Array<uint8_t>*, int, int)>(&SslStream::Read)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SslStream*), "Read", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SslStream::Write
// Il2CppName: Write
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SslStream::*)(::Array<uint8_t>*, int, int)>(&SslStream::Write)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SslStream*), "Write", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: SslStream::BeginRead
// Il2CppName: BeginRead
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (SslStream::*)(::Array<uint8_t>*, int, int, System::AsyncCallback*, ::Il2CppObject*)>(&SslStream::BeginRead)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SslStream*), "BeginRead", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: SslStream::EndRead
// Il2CppName: EndRead
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (SslStream::*)(System::IAsyncResult*)>(&SslStream::EndRead)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SslStream*), "EndRead", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Writing MetadataGetter for method: SslStream::BeginWrite
// Il2CppName: BeginWrite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::IAsyncResult* (SslStream::*)(::Array<uint8_t>*, int, int, System::AsyncCallback*, ::Il2CppObject*)>(&SslStream::BeginWrite)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SslStream*), "BeginWrite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::AsyncCallback*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: SslStream::EndWrite
// Il2CppName: EndWrite
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SslStream::*)(System::IAsyncResult*)>(&SslStream::EndWrite)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SslStream*), "EndWrite", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IAsyncResult*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.DuplicateAddressDetectionState
#include "System/Net/NetworkInformation/DuplicateAddressDetectionState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.DuplicateAddressDetectionState Invalid
System::Net::NetworkInformation::DuplicateAddressDetectionState System::Net::NetworkInformation::DuplicateAddressDetectionState::_get_Invalid() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::DuplicateAddressDetectionState::_get_Invalid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::DuplicateAddressDetectionState>("System.Net.NetworkInformation", "DuplicateAddressDetectionState", "Invalid"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.DuplicateAddressDetectionState Invalid
void System::Net::NetworkInformation::DuplicateAddressDetectionState::_set_Invalid(System::Net::NetworkInformation::DuplicateAddressDetectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::DuplicateAddressDetectionState::_set_Invalid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "DuplicateAddressDetectionState", "Invalid", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.DuplicateAddressDetectionState Tentative
System::Net::NetworkInformation::DuplicateAddressDetectionState System::Net::NetworkInformation::DuplicateAddressDetectionState::_get_Tentative() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::DuplicateAddressDetectionState::_get_Tentative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::DuplicateAddressDetectionState>("System.Net.NetworkInformation", "DuplicateAddressDetectionState", "Tentative"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.DuplicateAddressDetectionState Tentative
void System::Net::NetworkInformation::DuplicateAddressDetectionState::_set_Tentative(System::Net::NetworkInformation::DuplicateAddressDetectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::DuplicateAddressDetectionState::_set_Tentative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "DuplicateAddressDetectionState", "Tentative", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.DuplicateAddressDetectionState Duplicate
System::Net::NetworkInformation::DuplicateAddressDetectionState System::Net::NetworkInformation::DuplicateAddressDetectionState::_get_Duplicate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::DuplicateAddressDetectionState::_get_Duplicate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::DuplicateAddressDetectionState>("System.Net.NetworkInformation", "DuplicateAddressDetectionState", "Duplicate"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.DuplicateAddressDetectionState Duplicate
void System::Net::NetworkInformation::DuplicateAddressDetectionState::_set_Duplicate(System::Net::NetworkInformation::DuplicateAddressDetectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::DuplicateAddressDetectionState::_set_Duplicate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "DuplicateAddressDetectionState", "Duplicate", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.DuplicateAddressDetectionState Deprecated
System::Net::NetworkInformation::DuplicateAddressDetectionState System::Net::NetworkInformation::DuplicateAddressDetectionState::_get_Deprecated() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::DuplicateAddressDetectionState::_get_Deprecated");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::DuplicateAddressDetectionState>("System.Net.NetworkInformation", "DuplicateAddressDetectionState", "Deprecated"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.DuplicateAddressDetectionState Deprecated
void System::Net::NetworkInformation::DuplicateAddressDetectionState::_set_Deprecated(System::Net::NetworkInformation::DuplicateAddressDetectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::DuplicateAddressDetectionState::_set_Deprecated");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "DuplicateAddressDetectionState", "Deprecated", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.DuplicateAddressDetectionState Preferred
System::Net::NetworkInformation::DuplicateAddressDetectionState System::Net::NetworkInformation::DuplicateAddressDetectionState::_get_Preferred() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::DuplicateAddressDetectionState::_get_Preferred");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::DuplicateAddressDetectionState>("System.Net.NetworkInformation", "DuplicateAddressDetectionState", "Preferred"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.DuplicateAddressDetectionState Preferred
void System::Net::NetworkInformation::DuplicateAddressDetectionState::_set_Preferred(System::Net::NetworkInformation::DuplicateAddressDetectionState value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::DuplicateAddressDetectionState::_set_Preferred");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "DuplicateAddressDetectionState", "Preferred", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.GatewayIPAddressInformation
#include "System/Net/NetworkInformation/GatewayIPAddressInformation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: GatewayIPAddressInformation::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GatewayIPAddressInformation::*)()>(&GatewayIPAddressInformation::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GatewayIPAddressInformation*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GatewayIPAddressInformation::*)()>(&GatewayIPAddressInformation::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GatewayIPAddressInformation*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.NetworkInformation.GatewayIPAddressInformationCollection
#include "System/Net/NetworkInformation/GatewayIPAddressInformationCollection.hpp"
// Including type: System.Net.NetworkInformation.GatewayIPAddressInformation
#include "System/Net/NetworkInformation/GatewayIPAddressInformation.hpp"
// Including type: System.Collections.ObjectModel.Collection`1
#include "System/Collections/ObjectModel/Collection_1.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.CopyTo
void System::Net::NetworkInformation::GatewayIPAddressInformationCollection::CopyTo(::Array<System::Net::NetworkInformation::GatewayIPAddressInformation*>* array, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::GatewayIPAddressInformationCollection::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, array, offset);
}
// Autogenerated method: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.get_Count
int System::Net::NetworkInformation::GatewayIPAddressInformationCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::GatewayIPAddressInformationCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.get_IsReadOnly
bool System::Net::NetworkInformation::GatewayIPAddressInformationCollection::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::GatewayIPAddressInformationCollection::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Add
void System::Net::NetworkInformation::GatewayIPAddressInformationCollection::Add(System::Net::NetworkInformation::GatewayIPAddressInformation* address) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::GatewayIPAddressInformationCollection::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, address);
}
// Autogenerated method: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.InternalAdd
void System::Net::NetworkInformation::GatewayIPAddressInformationCollection::InternalAdd(System::Net::NetworkInformation::GatewayIPAddressInformation* address) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::GatewayIPAddressInformationCollection::InternalAdd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalAdd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, address);
}
// Autogenerated method: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Contains
bool System::Net::NetworkInformation::GatewayIPAddressInformationCollection::Contains(System::Net::NetworkInformation::GatewayIPAddressInformation* address) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::GatewayIPAddressInformationCollection::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, address);
}
// Autogenerated method: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.GetEnumerator
System::Collections::Generic::IEnumerator_1<System::Net::NetworkInformation::GatewayIPAddressInformation*>* System::Net::NetworkInformation::GatewayIPAddressInformationCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::GatewayIPAddressInformationCollection::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<System::Net::NetworkInformation::GatewayIPAddressInformation*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* System::Net::NetworkInformation::GatewayIPAddressInformationCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::GatewayIPAddressInformationCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Remove
bool System::Net::NetworkInformation::GatewayIPAddressInformationCollection::Remove(System::Net::NetworkInformation::GatewayIPAddressInformation* address) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::GatewayIPAddressInformationCollection::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, address);
}
// Autogenerated method: System.Net.NetworkInformation.GatewayIPAddressInformationCollection.Clear
void System::Net::NetworkInformation::GatewayIPAddressInformationCollection::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::GatewayIPAddressInformationCollection::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: GatewayIPAddressInformationCollection::CopyTo
// Il2CppName: CopyTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GatewayIPAddressInformationCollection::*)(::Array<System::Net::NetworkInformation::GatewayIPAddressInformation*>*, int)>(&GatewayIPAddressInformationCollection::CopyTo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GatewayIPAddressInformationCollection*), "CopyTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<System::Net::NetworkInformation::GatewayIPAddressInformation*>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: GatewayIPAddressInformationCollection::get_Count
// Il2CppName: get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GatewayIPAddressInformationCollection::*)()>(&GatewayIPAddressInformationCollection::get_Count)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GatewayIPAddressInformationCollection*), "get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GatewayIPAddressInformationCollection::get_IsReadOnly
// Il2CppName: get_IsReadOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GatewayIPAddressInformationCollection::*)()>(&GatewayIPAddressInformationCollection::get_IsReadOnly)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GatewayIPAddressInformationCollection*), "get_IsReadOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GatewayIPAddressInformationCollection::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GatewayIPAddressInformationCollection::*)(System::Net::NetworkInformation::GatewayIPAddressInformation*)>(&GatewayIPAddressInformationCollection::Add)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GatewayIPAddressInformationCollection*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::NetworkInformation::GatewayIPAddressInformation*>()});
  }
};
// Writing MetadataGetter for method: GatewayIPAddressInformationCollection::InternalAdd
// Il2CppName: InternalAdd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GatewayIPAddressInformationCollection::*)(System::Net::NetworkInformation::GatewayIPAddressInformation*)>(&GatewayIPAddressInformationCollection::InternalAdd)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GatewayIPAddressInformationCollection*), "InternalAdd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::NetworkInformation::GatewayIPAddressInformation*>()});
  }
};
// Writing MetadataGetter for method: GatewayIPAddressInformationCollection::Contains
// Il2CppName: Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GatewayIPAddressInformationCollection::*)(System::Net::NetworkInformation::GatewayIPAddressInformation*)>(&GatewayIPAddressInformationCollection::Contains)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GatewayIPAddressInformationCollection*), "Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::NetworkInformation::GatewayIPAddressInformation*>()});
  }
};
// Writing MetadataGetter for method: GatewayIPAddressInformationCollection::GetEnumerator
// Il2CppName: GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IEnumerator_1<System::Net::NetworkInformation::GatewayIPAddressInformation*>* (GatewayIPAddressInformationCollection::*)()>(&GatewayIPAddressInformationCollection::GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GatewayIPAddressInformationCollection*), "GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GatewayIPAddressInformationCollection::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (GatewayIPAddressInformationCollection::*)()>(&GatewayIPAddressInformationCollection::System_Collections_IEnumerable_GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GatewayIPAddressInformationCollection*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GatewayIPAddressInformationCollection::Remove
// Il2CppName: Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GatewayIPAddressInformationCollection::*)(System::Net::NetworkInformation::GatewayIPAddressInformation*)>(&GatewayIPAddressInformationCollection::Remove)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GatewayIPAddressInformationCollection*), "Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::NetworkInformation::GatewayIPAddressInformation*>()});
  }
};
// Writing MetadataGetter for method: GatewayIPAddressInformationCollection::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GatewayIPAddressInformationCollection::*)()>(&GatewayIPAddressInformationCollection::Clear)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GatewayIPAddressInformationCollection*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GatewayIPAddressInformationCollection::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GatewayIPAddressInformationCollection::*)()>(&GatewayIPAddressInformationCollection::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GatewayIPAddressInformationCollection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GatewayIPAddressInformationCollection::*)()>(&GatewayIPAddressInformationCollection::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GatewayIPAddressInformationCollection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.NetworkInformation.IPAddressCollection
#include "System/Net/NetworkInformation/IPAddressCollection.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.Collections.ObjectModel.Collection`1
#include "System/Collections/ObjectModel/Collection_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.IPAddressCollection.CopyTo
void System::Net::NetworkInformation::IPAddressCollection::CopyTo(::Array<System::Net::IPAddress*>* array, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::IPAddressCollection::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, array, offset);
}
// Autogenerated method: System.Net.NetworkInformation.IPAddressCollection.get_Count
int System::Net::NetworkInformation::IPAddressCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::IPAddressCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.IPAddressCollection.get_IsReadOnly
bool System::Net::NetworkInformation::IPAddressCollection::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::IPAddressCollection::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.IPAddressCollection.Add
void System::Net::NetworkInformation::IPAddressCollection::Add(System::Net::IPAddress* address) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::IPAddressCollection::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, address);
}
// Autogenerated method: System.Net.NetworkInformation.IPAddressCollection.InternalAdd
void System::Net::NetworkInformation::IPAddressCollection::InternalAdd(System::Net::IPAddress* address) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::IPAddressCollection::InternalAdd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalAdd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, address);
}
// Autogenerated method: System.Net.NetworkInformation.IPAddressCollection.Contains
bool System::Net::NetworkInformation::IPAddressCollection::Contains(System::Net::IPAddress* address) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::IPAddressCollection::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, address);
}
// Autogenerated method: System.Net.NetworkInformation.IPAddressCollection.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* System::Net::NetworkInformation::IPAddressCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::IPAddressCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.IPAddressCollection.GetEnumerator
System::Collections::Generic::IEnumerator_1<System::Net::IPAddress*>* System::Net::NetworkInformation::IPAddressCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::IPAddressCollection::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<System::Net::IPAddress*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.IPAddressCollection.Remove
bool System::Net::NetworkInformation::IPAddressCollection::Remove(System::Net::IPAddress* address) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::IPAddressCollection::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, address);
}
// Autogenerated method: System.Net.NetworkInformation.IPAddressCollection.Clear
void System::Net::NetworkInformation::IPAddressCollection::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::IPAddressCollection::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: IPAddressCollection::CopyTo
// Il2CppName: CopyTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IPAddressCollection::*)(::Array<System::Net::IPAddress*>*, int)>(&IPAddressCollection::CopyTo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IPAddressCollection*), "CopyTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<System::Net::IPAddress*>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: IPAddressCollection::get_Count
// Il2CppName: get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (IPAddressCollection::*)()>(&IPAddressCollection::get_Count)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IPAddressCollection*), "get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IPAddressCollection::get_IsReadOnly
// Il2CppName: get_IsReadOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (IPAddressCollection::*)()>(&IPAddressCollection::get_IsReadOnly)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IPAddressCollection*), "get_IsReadOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IPAddressCollection::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IPAddressCollection::*)(System::Net::IPAddress*)>(&IPAddressCollection::Add)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IPAddressCollection*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::IPAddress*>()});
  }
};
// Writing MetadataGetter for method: IPAddressCollection::InternalAdd
// Il2CppName: InternalAdd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IPAddressCollection::*)(System::Net::IPAddress*)>(&IPAddressCollection::InternalAdd)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IPAddressCollection*), "InternalAdd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::IPAddress*>()});
  }
};
// Writing MetadataGetter for method: IPAddressCollection::Contains
// Il2CppName: Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (IPAddressCollection::*)(System::Net::IPAddress*)>(&IPAddressCollection::Contains)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IPAddressCollection*), "Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::IPAddress*>()});
  }
};
// Writing MetadataGetter for method: IPAddressCollection::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (IPAddressCollection::*)()>(&IPAddressCollection::System_Collections_IEnumerable_GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IPAddressCollection*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IPAddressCollection::GetEnumerator
// Il2CppName: GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IEnumerator_1<System::Net::IPAddress*>* (IPAddressCollection::*)()>(&IPAddressCollection::GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IPAddressCollection*), "GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IPAddressCollection::Remove
// Il2CppName: Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (IPAddressCollection::*)(System::Net::IPAddress*)>(&IPAddressCollection::Remove)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IPAddressCollection*), "Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::IPAddress*>()});
  }
};
// Writing MetadataGetter for method: IPAddressCollection::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IPAddressCollection::*)()>(&IPAddressCollection::Clear)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IPAddressCollection*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IPAddressCollection::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IPAddressCollection::*)()>(&IPAddressCollection::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IPAddressCollection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IPAddressCollection::*)()>(&IPAddressCollection::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IPAddressCollection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.IPAddressInformation
#include "System/Net/NetworkInformation/IPAddressInformation.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.IPAddressInformation.get_Address
System::Net::IPAddress* System::Net::NetworkInformation::IPAddressInformation::get_Address() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::IPAddressInformation::get_Address");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Address", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::IPAddress*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: IPAddressInformation::get_Address
// Il2CppName: get_Address
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::IPAddress* (IPAddressInformation::*)()>(&IPAddressInformation::get_Address)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IPAddressInformation*), "get_Address", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IPAddressInformation::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IPAddressInformation::*)()>(&IPAddressInformation::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IPAddressInformation*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IPAddressInformation::*)()>(&IPAddressInformation::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IPAddressInformation*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.NetworkInformation.IPGlobalProperties
#include "System/Net/NetworkInformation/IPGlobalProperties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [CompilerGeneratedAttribute] Offset: 0xD88A34
// Autogenerated static field getter
// Get static field: static private readonly System.Boolean <PlatformNeedsLibCWorkaround>k__BackingField
bool System::Net::NetworkInformation::IPGlobalProperties::_get_$PlatformNeedsLibCWorkaround$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::IPGlobalProperties::_get_$PlatformNeedsLibCWorkaround$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<bool>("System.Net.NetworkInformation", "IPGlobalProperties", "<PlatformNeedsLibCWorkaround>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Boolean <PlatformNeedsLibCWorkaround>k__BackingField
void System::Net::NetworkInformation::IPGlobalProperties::_set_$PlatformNeedsLibCWorkaround$k__BackingField(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::IPGlobalProperties::_set_$PlatformNeedsLibCWorkaround$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "IPGlobalProperties", "<PlatformNeedsLibCWorkaround>k__BackingField", value));
}
// Autogenerated method: System.Net.NetworkInformation.IPGlobalProperties.get_PlatformNeedsLibCWorkaround
bool System::Net::NetworkInformation::IPGlobalProperties::get_PlatformNeedsLibCWorkaround() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::IPGlobalProperties::get_PlatformNeedsLibCWorkaround");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "IPGlobalProperties", "get_PlatformNeedsLibCWorkaround", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.IPGlobalProperties.GetIPGlobalProperties
System::Net::NetworkInformation::IPGlobalProperties* System::Net::NetworkInformation::IPGlobalProperties::GetIPGlobalProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::IPGlobalProperties::GetIPGlobalProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "IPGlobalProperties", "GetIPGlobalProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::NetworkInformation::IPGlobalProperties*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.IPGlobalProperties.InternalGetIPGlobalProperties
System::Net::NetworkInformation::IPGlobalProperties* System::Net::NetworkInformation::IPGlobalProperties::InternalGetIPGlobalProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::IPGlobalProperties::InternalGetIPGlobalProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "IPGlobalProperties", "InternalGetIPGlobalProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::NetworkInformation::IPGlobalProperties*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.IPGlobalProperties.get_DomainName
::Il2CppString* System::Net::NetworkInformation::IPGlobalProperties::get_DomainName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::IPGlobalProperties::get_DomainName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DomainName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: IPGlobalProperties::get_PlatformNeedsLibCWorkaround
// Il2CppName: get_PlatformNeedsLibCWorkaround
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)()>(&IPGlobalProperties::get_PlatformNeedsLibCWorkaround)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IPGlobalProperties*), "get_PlatformNeedsLibCWorkaround", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IPGlobalProperties::GetIPGlobalProperties
// Il2CppName: GetIPGlobalProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::NetworkInformation::IPGlobalProperties* (*)()>(&IPGlobalProperties::GetIPGlobalProperties)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IPGlobalProperties*), "GetIPGlobalProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IPGlobalProperties::InternalGetIPGlobalProperties
// Il2CppName: InternalGetIPGlobalProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::NetworkInformation::IPGlobalProperties* (*)()>(&IPGlobalProperties::InternalGetIPGlobalProperties)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IPGlobalProperties*), "InternalGetIPGlobalProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IPGlobalProperties::get_DomainName
// Il2CppName: get_DomainName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (IPGlobalProperties::*)()>(&IPGlobalProperties::get_DomainName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IPGlobalProperties*), "get_DomainName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IPGlobalProperties::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IPGlobalProperties::*)()>(&IPGlobalProperties::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IPGlobalProperties*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IPGlobalProperties::*)()>(&IPGlobalProperties::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IPGlobalProperties*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.IPInterfaceProperties
#include "System/Net/NetworkInformation/IPInterfaceProperties.hpp"
// Including type: System.Net.NetworkInformation.UnicastIPAddressInformationCollection
#include "System/Net/NetworkInformation/UnicastIPAddressInformationCollection.hpp"
// Including type: System.Net.NetworkInformation.GatewayIPAddressInformationCollection
#include "System/Net/NetworkInformation/GatewayIPAddressInformationCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.IPInterfaceProperties.get_UnicastAddresses
System::Net::NetworkInformation::UnicastIPAddressInformationCollection* System::Net::NetworkInformation::IPInterfaceProperties::get_UnicastAddresses() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::IPInterfaceProperties::get_UnicastAddresses");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnicastAddresses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::NetworkInformation::UnicastIPAddressInformationCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.IPInterfaceProperties.get_GatewayAddresses
System::Net::NetworkInformation::GatewayIPAddressInformationCollection* System::Net::NetworkInformation::IPInterfaceProperties::get_GatewayAddresses() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::IPInterfaceProperties::get_GatewayAddresses");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GatewayAddresses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::NetworkInformation::GatewayIPAddressInformationCollection*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: IPInterfaceProperties::get_UnicastAddresses
// Il2CppName: get_UnicastAddresses
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::NetworkInformation::UnicastIPAddressInformationCollection* (IPInterfaceProperties::*)()>(&IPInterfaceProperties::get_UnicastAddresses)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IPInterfaceProperties*), "get_UnicastAddresses", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IPInterfaceProperties::get_GatewayAddresses
// Il2CppName: get_GatewayAddresses
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::NetworkInformation::GatewayIPAddressInformationCollection* (IPInterfaceProperties::*)()>(&IPInterfaceProperties::get_GatewayAddresses)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IPInterfaceProperties*), "get_GatewayAddresses", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: IPInterfaceProperties::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IPInterfaceProperties::*)()>(&IPInterfaceProperties::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IPInterfaceProperties*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IPInterfaceProperties::*)()>(&IPInterfaceProperties::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IPInterfaceProperties*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.IPv4InterfaceStatistics
#include "System/Net/NetworkInformation/IPv4InterfaceStatistics.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: IPv4InterfaceStatistics::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IPv4InterfaceStatistics::*)()>(&IPv4InterfaceStatistics::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IPv4InterfaceStatistics*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (IPv4InterfaceStatistics::*)()>(&IPv4InterfaceStatistics::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(IPv4InterfaceStatistics*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.NetworkInformationException
#include "System/Net/NetworkInformation/NetworkInformationException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: NetworkInformationException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkInformationException::*)()>(&NetworkInformationException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkInformationException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkInformationException::*)()>(&NetworkInformationException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkInformationException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkInformationException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkInformationException::*)(int)>(&NetworkInformationException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkInformationException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkInformationException::*)(int)>(&NetworkInformationException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkInformationException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: NetworkInformationException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkInformationException::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&NetworkInformationException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkInformationException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkInformationException::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&NetworkInformationException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkInformationException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.NetworkInformation.NetworkInterface
#include "System/Net/NetworkInformation/NetworkInterface.hpp"
// Including type: System.Net.NetworkInformation.IPInterfaceProperties
#include "System/Net/NetworkInformation/IPInterfaceProperties.hpp"
// Including type: System.Net.NetworkInformation.OperationalStatus
#include "System/Net/NetworkInformation/OperationalStatus.hpp"
// Including type: System.Net.NetworkInformation.NetworkInterfaceType
#include "System/Net/NetworkInformation/NetworkInterfaceType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.NetworkInterface.GetAllNetworkInterfaces
::Array<System::Net::NetworkInformation::NetworkInterface*>* System::Net::NetworkInformation::NetworkInterface::GetAllNetworkInterfaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterface::GetAllNetworkInterfaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "NetworkInterface", "GetAllNetworkInterfaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Net::NetworkInformation::NetworkInterface*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.NetworkInterface.get_Name
::Il2CppString* System::Net::NetworkInformation::NetworkInterface::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterface::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.NetworkInterface.GetIPProperties
System::Net::NetworkInformation::IPInterfaceProperties* System::Net::NetworkInformation::NetworkInterface::GetIPProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterface::GetIPProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIPProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::NetworkInformation::IPInterfaceProperties*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.NetworkInterface.get_OperationalStatus
System::Net::NetworkInformation::OperationalStatus System::Net::NetworkInformation::NetworkInterface::get_OperationalStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterface::get_OperationalStatus");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OperationalStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::NetworkInformation::OperationalStatus, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.NetworkInterface.get_NetworkInterfaceType
System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterface::get_NetworkInterfaceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterface::get_NetworkInterfaceType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NetworkInterfaceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::NetworkInformation::NetworkInterfaceType, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: NetworkInterface::GetAllNetworkInterfaces
// Il2CppName: GetAllNetworkInterfaces
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<System::Net::NetworkInformation::NetworkInterface*>* (*)()>(&NetworkInterface::GetAllNetworkInterfaces)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkInterface*), "GetAllNetworkInterfaces", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkInterface::get_Name
// Il2CppName: get_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (NetworkInterface::*)()>(&NetworkInterface::get_Name)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkInterface*), "get_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkInterface::GetIPProperties
// Il2CppName: GetIPProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::NetworkInformation::IPInterfaceProperties* (NetworkInterface::*)()>(&NetworkInterface::GetIPProperties)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkInterface*), "GetIPProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkInterface::get_OperationalStatus
// Il2CppName: get_OperationalStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::NetworkInformation::OperationalStatus (NetworkInterface::*)()>(&NetworkInterface::get_OperationalStatus)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkInterface*), "get_OperationalStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkInterface::get_NetworkInterfaceType
// Il2CppName: get_NetworkInterfaceType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::NetworkInformation::NetworkInterfaceType (NetworkInterface::*)()>(&NetworkInterface::get_NetworkInterfaceType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkInterface*), "get_NetworkInterfaceType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkInterface::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkInterface::*)()>(&NetworkInterface::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkInterface*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkInterface::*)()>(&NetworkInterface::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkInterface*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.NetworkInterfaceComponent
#include "System/Net/NetworkInformation/NetworkInterfaceComponent.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceComponent IPv4
System::Net::NetworkInformation::NetworkInterfaceComponent System::Net::NetworkInformation::NetworkInterfaceComponent::_get_IPv4() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceComponent::_get_IPv4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::NetworkInterfaceComponent>("System.Net.NetworkInformation", "NetworkInterfaceComponent", "IPv4"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceComponent IPv4
void System::Net::NetworkInformation::NetworkInterfaceComponent::_set_IPv4(System::Net::NetworkInformation::NetworkInterfaceComponent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceComponent::_set_IPv4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceComponent", "IPv4", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceComponent IPv6
System::Net::NetworkInformation::NetworkInterfaceComponent System::Net::NetworkInformation::NetworkInterfaceComponent::_get_IPv6() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceComponent::_get_IPv6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::NetworkInterfaceComponent>("System.Net.NetworkInformation", "NetworkInterfaceComponent", "IPv6"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceComponent IPv6
void System::Net::NetworkInformation::NetworkInterfaceComponent::_set_IPv6(System::Net::NetworkInformation::NetworkInterfaceComponent value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceComponent::_set_IPv6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceComponent", "IPv6", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.OperationalStatus
#include "System/Net/NetworkInformation/OperationalStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.OperationalStatus Up
System::Net::NetworkInformation::OperationalStatus System::Net::NetworkInformation::OperationalStatus::_get_Up() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::OperationalStatus::_get_Up");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::OperationalStatus>("System.Net.NetworkInformation", "OperationalStatus", "Up"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.OperationalStatus Up
void System::Net::NetworkInformation::OperationalStatus::_set_Up(System::Net::NetworkInformation::OperationalStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::OperationalStatus::_set_Up");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "OperationalStatus", "Up", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.OperationalStatus Down
System::Net::NetworkInformation::OperationalStatus System::Net::NetworkInformation::OperationalStatus::_get_Down() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::OperationalStatus::_get_Down");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::OperationalStatus>("System.Net.NetworkInformation", "OperationalStatus", "Down"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.OperationalStatus Down
void System::Net::NetworkInformation::OperationalStatus::_set_Down(System::Net::NetworkInformation::OperationalStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::OperationalStatus::_set_Down");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "OperationalStatus", "Down", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.OperationalStatus Testing
System::Net::NetworkInformation::OperationalStatus System::Net::NetworkInformation::OperationalStatus::_get_Testing() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::OperationalStatus::_get_Testing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::OperationalStatus>("System.Net.NetworkInformation", "OperationalStatus", "Testing"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.OperationalStatus Testing
void System::Net::NetworkInformation::OperationalStatus::_set_Testing(System::Net::NetworkInformation::OperationalStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::OperationalStatus::_set_Testing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "OperationalStatus", "Testing", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.OperationalStatus Unknown
System::Net::NetworkInformation::OperationalStatus System::Net::NetworkInformation::OperationalStatus::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::OperationalStatus::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::OperationalStatus>("System.Net.NetworkInformation", "OperationalStatus", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.OperationalStatus Unknown
void System::Net::NetworkInformation::OperationalStatus::_set_Unknown(System::Net::NetworkInformation::OperationalStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::OperationalStatus::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "OperationalStatus", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.OperationalStatus Dormant
System::Net::NetworkInformation::OperationalStatus System::Net::NetworkInformation::OperationalStatus::_get_Dormant() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::OperationalStatus::_get_Dormant");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::OperationalStatus>("System.Net.NetworkInformation", "OperationalStatus", "Dormant"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.OperationalStatus Dormant
void System::Net::NetworkInformation::OperationalStatus::_set_Dormant(System::Net::NetworkInformation::OperationalStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::OperationalStatus::_set_Dormant");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "OperationalStatus", "Dormant", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.OperationalStatus NotPresent
System::Net::NetworkInformation::OperationalStatus System::Net::NetworkInformation::OperationalStatus::_get_NotPresent() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::OperationalStatus::_get_NotPresent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::OperationalStatus>("System.Net.NetworkInformation", "OperationalStatus", "NotPresent"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.OperationalStatus NotPresent
void System::Net::NetworkInformation::OperationalStatus::_set_NotPresent(System::Net::NetworkInformation::OperationalStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::OperationalStatus::_set_NotPresent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "OperationalStatus", "NotPresent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.OperationalStatus LowerLayerDown
System::Net::NetworkInformation::OperationalStatus System::Net::NetworkInformation::OperationalStatus::_get_LowerLayerDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::OperationalStatus::_get_LowerLayerDown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::OperationalStatus>("System.Net.NetworkInformation", "OperationalStatus", "LowerLayerDown"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.OperationalStatus LowerLayerDown
void System::Net::NetworkInformation::OperationalStatus::_set_LowerLayerDown(System::Net::NetworkInformation::OperationalStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::OperationalStatus::_set_LowerLayerDown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "OperationalStatus", "LowerLayerDown", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.PrefixOrigin
#include "System/Net/NetworkInformation/PrefixOrigin.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.PrefixOrigin Other
System::Net::NetworkInformation::PrefixOrigin System::Net::NetworkInformation::PrefixOrigin::_get_Other() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::PrefixOrigin::_get_Other");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::PrefixOrigin>("System.Net.NetworkInformation", "PrefixOrigin", "Other"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.PrefixOrigin Other
void System::Net::NetworkInformation::PrefixOrigin::_set_Other(System::Net::NetworkInformation::PrefixOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::PrefixOrigin::_set_Other");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "PrefixOrigin", "Other", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.PrefixOrigin Manual
System::Net::NetworkInformation::PrefixOrigin System::Net::NetworkInformation::PrefixOrigin::_get_Manual() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::PrefixOrigin::_get_Manual");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::PrefixOrigin>("System.Net.NetworkInformation", "PrefixOrigin", "Manual"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.PrefixOrigin Manual
void System::Net::NetworkInformation::PrefixOrigin::_set_Manual(System::Net::NetworkInformation::PrefixOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::PrefixOrigin::_set_Manual");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "PrefixOrigin", "Manual", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.PrefixOrigin WellKnown
System::Net::NetworkInformation::PrefixOrigin System::Net::NetworkInformation::PrefixOrigin::_get_WellKnown() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::PrefixOrigin::_get_WellKnown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::PrefixOrigin>("System.Net.NetworkInformation", "PrefixOrigin", "WellKnown"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.PrefixOrigin WellKnown
void System::Net::NetworkInformation::PrefixOrigin::_set_WellKnown(System::Net::NetworkInformation::PrefixOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::PrefixOrigin::_set_WellKnown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "PrefixOrigin", "WellKnown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.PrefixOrigin Dhcp
System::Net::NetworkInformation::PrefixOrigin System::Net::NetworkInformation::PrefixOrigin::_get_Dhcp() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::PrefixOrigin::_get_Dhcp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::PrefixOrigin>("System.Net.NetworkInformation", "PrefixOrigin", "Dhcp"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.PrefixOrigin Dhcp
void System::Net::NetworkInformation::PrefixOrigin::_set_Dhcp(System::Net::NetworkInformation::PrefixOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::PrefixOrigin::_set_Dhcp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "PrefixOrigin", "Dhcp", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.PrefixOrigin RouterAdvertisement
System::Net::NetworkInformation::PrefixOrigin System::Net::NetworkInformation::PrefixOrigin::_get_RouterAdvertisement() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::PrefixOrigin::_get_RouterAdvertisement");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::PrefixOrigin>("System.Net.NetworkInformation", "PrefixOrigin", "RouterAdvertisement"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.PrefixOrigin RouterAdvertisement
void System::Net::NetworkInformation::PrefixOrigin::_set_RouterAdvertisement(System::Net::NetworkInformation::PrefixOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::PrefixOrigin::_set_RouterAdvertisement");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "PrefixOrigin", "RouterAdvertisement", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.SuffixOrigin
#include "System/Net/NetworkInformation/SuffixOrigin.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.SuffixOrigin Other
System::Net::NetworkInformation::SuffixOrigin System::Net::NetworkInformation::SuffixOrigin::_get_Other() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::SuffixOrigin::_get_Other");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::SuffixOrigin>("System.Net.NetworkInformation", "SuffixOrigin", "Other"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.SuffixOrigin Other
void System::Net::NetworkInformation::SuffixOrigin::_set_Other(System::Net::NetworkInformation::SuffixOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::SuffixOrigin::_set_Other");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "SuffixOrigin", "Other", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.SuffixOrigin Manual
System::Net::NetworkInformation::SuffixOrigin System::Net::NetworkInformation::SuffixOrigin::_get_Manual() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::SuffixOrigin::_get_Manual");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::SuffixOrigin>("System.Net.NetworkInformation", "SuffixOrigin", "Manual"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.SuffixOrigin Manual
void System::Net::NetworkInformation::SuffixOrigin::_set_Manual(System::Net::NetworkInformation::SuffixOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::SuffixOrigin::_set_Manual");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "SuffixOrigin", "Manual", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.SuffixOrigin WellKnown
System::Net::NetworkInformation::SuffixOrigin System::Net::NetworkInformation::SuffixOrigin::_get_WellKnown() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::SuffixOrigin::_get_WellKnown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::SuffixOrigin>("System.Net.NetworkInformation", "SuffixOrigin", "WellKnown"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.SuffixOrigin WellKnown
void System::Net::NetworkInformation::SuffixOrigin::_set_WellKnown(System::Net::NetworkInformation::SuffixOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::SuffixOrigin::_set_WellKnown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "SuffixOrigin", "WellKnown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.SuffixOrigin OriginDhcp
System::Net::NetworkInformation::SuffixOrigin System::Net::NetworkInformation::SuffixOrigin::_get_OriginDhcp() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::SuffixOrigin::_get_OriginDhcp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::SuffixOrigin>("System.Net.NetworkInformation", "SuffixOrigin", "OriginDhcp"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.SuffixOrigin OriginDhcp
void System::Net::NetworkInformation::SuffixOrigin::_set_OriginDhcp(System::Net::NetworkInformation::SuffixOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::SuffixOrigin::_set_OriginDhcp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "SuffixOrigin", "OriginDhcp", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.SuffixOrigin LinkLayerAddress
System::Net::NetworkInformation::SuffixOrigin System::Net::NetworkInformation::SuffixOrigin::_get_LinkLayerAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::SuffixOrigin::_get_LinkLayerAddress");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::SuffixOrigin>("System.Net.NetworkInformation", "SuffixOrigin", "LinkLayerAddress"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.SuffixOrigin LinkLayerAddress
void System::Net::NetworkInformation::SuffixOrigin::_set_LinkLayerAddress(System::Net::NetworkInformation::SuffixOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::SuffixOrigin::_set_LinkLayerAddress");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "SuffixOrigin", "LinkLayerAddress", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.SuffixOrigin Random
System::Net::NetworkInformation::SuffixOrigin System::Net::NetworkInformation::SuffixOrigin::_get_Random() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::SuffixOrigin::_get_Random");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::SuffixOrigin>("System.Net.NetworkInformation", "SuffixOrigin", "Random"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.SuffixOrigin Random
void System::Net::NetworkInformation::SuffixOrigin::_set_Random(System::Net::NetworkInformation::SuffixOrigin value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::SuffixOrigin::_set_Random");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "SuffixOrigin", "Random", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.SystemGatewayIPAddressInformation
#include "System/Net/NetworkInformation/SystemGatewayIPAddressInformation.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.Net.NetworkInformation.GatewayIPAddressInformationCollection
#include "System/Net/NetworkInformation/GatewayIPAddressInformationCollection.hpp"
// Including type: System.Net.NetworkInformation.IPAddressCollection
#include "System/Net/NetworkInformation/IPAddressCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.SystemGatewayIPAddressInformation.ToGatewayIpAddressInformationCollection
System::Net::NetworkInformation::GatewayIPAddressInformationCollection* System::Net::NetworkInformation::SystemGatewayIPAddressInformation::ToGatewayIpAddressInformationCollection(System::Net::NetworkInformation::IPAddressCollection* addresses) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::SystemGatewayIPAddressInformation::ToGatewayIpAddressInformationCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "SystemGatewayIPAddressInformation", "ToGatewayIpAddressInformationCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(addresses)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::NetworkInformation::GatewayIPAddressInformationCollection*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, addresses);
}
// Writing MetadataGetter for method: SystemGatewayIPAddressInformation::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SystemGatewayIPAddressInformation::*)(System::Net::IPAddress*)>(&SystemGatewayIPAddressInformation::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SystemGatewayIPAddressInformation*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::IPAddress*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SystemGatewayIPAddressInformation::*)(System::Net::IPAddress*)>(&SystemGatewayIPAddressInformation::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SystemGatewayIPAddressInformation*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::IPAddress*>()});
  }
};
// Writing MetadataGetter for method: SystemGatewayIPAddressInformation::ToGatewayIpAddressInformationCollection
// Il2CppName: ToGatewayIpAddressInformationCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::NetworkInformation::GatewayIPAddressInformationCollection* (*)(System::Net::NetworkInformation::IPAddressCollection*)>(&SystemGatewayIPAddressInformation::ToGatewayIpAddressInformationCollection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SystemGatewayIPAddressInformation*), "ToGatewayIpAddressInformationCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::NetworkInformation::IPAddressCollection*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.UnicastIPAddressInformation
#include "System/Net/NetworkInformation/UnicastIPAddressInformation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: UnicastIPAddressInformation::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnicastIPAddressInformation::*)()>(&UnicastIPAddressInformation::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicastIPAddressInformation*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnicastIPAddressInformation::*)()>(&UnicastIPAddressInformation::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicastIPAddressInformation*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.NetworkInformation.UnicastIPAddressInformationCollection
#include "System/Net/NetworkInformation/UnicastIPAddressInformationCollection.hpp"
// Including type: System.Net.NetworkInformation.UnicastIPAddressInformation
#include "System/Net/NetworkInformation/UnicastIPAddressInformation.hpp"
// Including type: System.Collections.ObjectModel.Collection`1
#include "System/Collections/ObjectModel/Collection_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.CopyTo
void System::Net::NetworkInformation::UnicastIPAddressInformationCollection::CopyTo(::Array<System::Net::NetworkInformation::UnicastIPAddressInformation*>* array, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::UnicastIPAddressInformationCollection::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(offset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, array, offset);
}
// Autogenerated method: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.get_Count
int System::Net::NetworkInformation::UnicastIPAddressInformationCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::UnicastIPAddressInformationCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.get_IsReadOnly
bool System::Net::NetworkInformation::UnicastIPAddressInformationCollection::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::UnicastIPAddressInformationCollection::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Add
void System::Net::NetworkInformation::UnicastIPAddressInformationCollection::Add(System::Net::NetworkInformation::UnicastIPAddressInformation* address) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::UnicastIPAddressInformationCollection::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, address);
}
// Autogenerated method: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.InternalAdd
void System::Net::NetworkInformation::UnicastIPAddressInformationCollection::InternalAdd(System::Net::NetworkInformation::UnicastIPAddressInformation* address) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::UnicastIPAddressInformationCollection::InternalAdd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalAdd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, address);
}
// Autogenerated method: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Contains
bool System::Net::NetworkInformation::UnicastIPAddressInformationCollection::Contains(System::Net::NetworkInformation::UnicastIPAddressInformation* address) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::UnicastIPAddressInformationCollection::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, address);
}
// Autogenerated method: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* System::Net::NetworkInformation::UnicastIPAddressInformationCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::UnicastIPAddressInformationCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.GetEnumerator
System::Collections::Generic::IEnumerator_1<System::Net::NetworkInformation::UnicastIPAddressInformation*>* System::Net::NetworkInformation::UnicastIPAddressInformationCollection::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::UnicastIPAddressInformationCollection::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<System::Net::NetworkInformation::UnicastIPAddressInformation*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Remove
bool System::Net::NetworkInformation::UnicastIPAddressInformationCollection::Remove(System::Net::NetworkInformation::UnicastIPAddressInformation* address) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::UnicastIPAddressInformationCollection::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, address);
}
// Autogenerated method: System.Net.NetworkInformation.UnicastIPAddressInformationCollection.Clear
void System::Net::NetworkInformation::UnicastIPAddressInformationCollection::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::UnicastIPAddressInformationCollection::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: UnicastIPAddressInformationCollection::CopyTo
// Il2CppName: CopyTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnicastIPAddressInformationCollection::*)(::Array<System::Net::NetworkInformation::UnicastIPAddressInformation*>*, int)>(&UnicastIPAddressInformationCollection::CopyTo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicastIPAddressInformationCollection*), "CopyTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<System::Net::NetworkInformation::UnicastIPAddressInformation*>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: UnicastIPAddressInformationCollection::get_Count
// Il2CppName: get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (UnicastIPAddressInformationCollection::*)()>(&UnicastIPAddressInformationCollection::get_Count)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicastIPAddressInformationCollection*), "get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnicastIPAddressInformationCollection::get_IsReadOnly
// Il2CppName: get_IsReadOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnicastIPAddressInformationCollection::*)()>(&UnicastIPAddressInformationCollection::get_IsReadOnly)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicastIPAddressInformationCollection*), "get_IsReadOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnicastIPAddressInformationCollection::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnicastIPAddressInformationCollection::*)(System::Net::NetworkInformation::UnicastIPAddressInformation*)>(&UnicastIPAddressInformationCollection::Add)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicastIPAddressInformationCollection*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::NetworkInformation::UnicastIPAddressInformation*>()});
  }
};
// Writing MetadataGetter for method: UnicastIPAddressInformationCollection::InternalAdd
// Il2CppName: InternalAdd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnicastIPAddressInformationCollection::*)(System::Net::NetworkInformation::UnicastIPAddressInformation*)>(&UnicastIPAddressInformationCollection::InternalAdd)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicastIPAddressInformationCollection*), "InternalAdd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::NetworkInformation::UnicastIPAddressInformation*>()});
  }
};
// Writing MetadataGetter for method: UnicastIPAddressInformationCollection::Contains
// Il2CppName: Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnicastIPAddressInformationCollection::*)(System::Net::NetworkInformation::UnicastIPAddressInformation*)>(&UnicastIPAddressInformationCollection::Contains)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicastIPAddressInformationCollection*), "Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::NetworkInformation::UnicastIPAddressInformation*>()});
  }
};
// Writing MetadataGetter for method: UnicastIPAddressInformationCollection::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (UnicastIPAddressInformationCollection::*)()>(&UnicastIPAddressInformationCollection::System_Collections_IEnumerable_GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicastIPAddressInformationCollection*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnicastIPAddressInformationCollection::GetEnumerator
// Il2CppName: GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IEnumerator_1<System::Net::NetworkInformation::UnicastIPAddressInformation*>* (UnicastIPAddressInformationCollection::*)()>(&UnicastIPAddressInformationCollection::GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicastIPAddressInformationCollection*), "GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnicastIPAddressInformationCollection::Remove
// Il2CppName: Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (UnicastIPAddressInformationCollection::*)(System::Net::NetworkInformation::UnicastIPAddressInformation*)>(&UnicastIPAddressInformationCollection::Remove)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicastIPAddressInformationCollection*), "Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::NetworkInformation::UnicastIPAddressInformation*>()});
  }
};
// Writing MetadataGetter for method: UnicastIPAddressInformationCollection::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnicastIPAddressInformationCollection::*)()>(&UnicastIPAddressInformationCollection::Clear)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicastIPAddressInformationCollection*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnicastIPAddressInformationCollection::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnicastIPAddressInformationCollection::*)()>(&UnicastIPAddressInformationCollection::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicastIPAddressInformationCollection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnicastIPAddressInformationCollection::*)()>(&UnicastIPAddressInformationCollection::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnicastIPAddressInformationCollection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.NetworkInterfaceType
#include "System/Net/NetworkInformation/NetworkInterfaceType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType Unknown
System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType Unknown
void System::Net::NetworkInformation::NetworkInterfaceType::_set_Unknown(System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType Ethernet
System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_Ethernet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_get_Ethernet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "Ethernet"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType Ethernet
void System::Net::NetworkInformation::NetworkInterfaceType::_set_Ethernet(System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_set_Ethernet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "Ethernet", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType TokenRing
System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_TokenRing() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_get_TokenRing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "TokenRing"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType TokenRing
void System::Net::NetworkInformation::NetworkInterfaceType::_set_TokenRing(System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_set_TokenRing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "TokenRing", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType Fddi
System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_Fddi() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_get_Fddi");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "Fddi"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType Fddi
void System::Net::NetworkInformation::NetworkInterfaceType::_set_Fddi(System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_set_Fddi");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "Fddi", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType BasicIsdn
System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_BasicIsdn() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_get_BasicIsdn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "BasicIsdn"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType BasicIsdn
void System::Net::NetworkInformation::NetworkInterfaceType::_set_BasicIsdn(System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_set_BasicIsdn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "BasicIsdn", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType PrimaryIsdn
System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_PrimaryIsdn() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_get_PrimaryIsdn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "PrimaryIsdn"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType PrimaryIsdn
void System::Net::NetworkInformation::NetworkInterfaceType::_set_PrimaryIsdn(System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_set_PrimaryIsdn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "PrimaryIsdn", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType Ppp
System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_Ppp() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_get_Ppp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "Ppp"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType Ppp
void System::Net::NetworkInformation::NetworkInterfaceType::_set_Ppp(System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_set_Ppp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "Ppp", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType Loopback
System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_Loopback() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_get_Loopback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "Loopback"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType Loopback
void System::Net::NetworkInformation::NetworkInterfaceType::_set_Loopback(System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_set_Loopback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "Loopback", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType Ethernet3Megabit
System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_Ethernet3Megabit() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_get_Ethernet3Megabit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "Ethernet3Megabit"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType Ethernet3Megabit
void System::Net::NetworkInformation::NetworkInterfaceType::_set_Ethernet3Megabit(System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_set_Ethernet3Megabit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "Ethernet3Megabit", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType Slip
System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_Slip() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_get_Slip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "Slip"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType Slip
void System::Net::NetworkInformation::NetworkInterfaceType::_set_Slip(System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_set_Slip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "Slip", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType Atm
System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_Atm() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_get_Atm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "Atm"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType Atm
void System::Net::NetworkInformation::NetworkInterfaceType::_set_Atm(System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_set_Atm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "Atm", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType GenericModem
System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_GenericModem() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_get_GenericModem");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "GenericModem"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType GenericModem
void System::Net::NetworkInformation::NetworkInterfaceType::_set_GenericModem(System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_set_GenericModem");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "GenericModem", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType FastEthernetT
System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_FastEthernetT() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_get_FastEthernetT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "FastEthernetT"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType FastEthernetT
void System::Net::NetworkInformation::NetworkInterfaceType::_set_FastEthernetT(System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_set_FastEthernetT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "FastEthernetT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType Isdn
System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_Isdn() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_get_Isdn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "Isdn"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType Isdn
void System::Net::NetworkInformation::NetworkInterfaceType::_set_Isdn(System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_set_Isdn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "Isdn", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType FastEthernetFx
System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_FastEthernetFx() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_get_FastEthernetFx");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "FastEthernetFx"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType FastEthernetFx
void System::Net::NetworkInformation::NetworkInterfaceType::_set_FastEthernetFx(System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_set_FastEthernetFx");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "FastEthernetFx", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType Wireless80211
System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_Wireless80211() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_get_Wireless80211");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "Wireless80211"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType Wireless80211
void System::Net::NetworkInformation::NetworkInterfaceType::_set_Wireless80211(System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_set_Wireless80211");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "Wireless80211", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType AsymmetricDsl
System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_AsymmetricDsl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_get_AsymmetricDsl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "AsymmetricDsl"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType AsymmetricDsl
void System::Net::NetworkInformation::NetworkInterfaceType::_set_AsymmetricDsl(System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_set_AsymmetricDsl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "AsymmetricDsl", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType RateAdaptDsl
System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_RateAdaptDsl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_get_RateAdaptDsl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "RateAdaptDsl"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType RateAdaptDsl
void System::Net::NetworkInformation::NetworkInterfaceType::_set_RateAdaptDsl(System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_set_RateAdaptDsl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "RateAdaptDsl", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType SymmetricDsl
System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_SymmetricDsl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_get_SymmetricDsl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "SymmetricDsl"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType SymmetricDsl
void System::Net::NetworkInformation::NetworkInterfaceType::_set_SymmetricDsl(System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_set_SymmetricDsl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "SymmetricDsl", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType VeryHighSpeedDsl
System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_VeryHighSpeedDsl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_get_VeryHighSpeedDsl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "VeryHighSpeedDsl"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType VeryHighSpeedDsl
void System::Net::NetworkInformation::NetworkInterfaceType::_set_VeryHighSpeedDsl(System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_set_VeryHighSpeedDsl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "VeryHighSpeedDsl", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType IPOverAtm
System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_IPOverAtm() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_get_IPOverAtm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "IPOverAtm"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType IPOverAtm
void System::Net::NetworkInformation::NetworkInterfaceType::_set_IPOverAtm(System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_set_IPOverAtm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "IPOverAtm", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType GigabitEthernet
System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_GigabitEthernet() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_get_GigabitEthernet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "GigabitEthernet"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType GigabitEthernet
void System::Net::NetworkInformation::NetworkInterfaceType::_set_GigabitEthernet(System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_set_GigabitEthernet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "GigabitEthernet", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType Tunnel
System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_Tunnel() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_get_Tunnel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "Tunnel"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType Tunnel
void System::Net::NetworkInformation::NetworkInterfaceType::_set_Tunnel(System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_set_Tunnel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "Tunnel", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType MultiRateSymmetricDsl
System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_MultiRateSymmetricDsl() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_get_MultiRateSymmetricDsl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "MultiRateSymmetricDsl"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType MultiRateSymmetricDsl
void System::Net::NetworkInformation::NetworkInterfaceType::_set_MultiRateSymmetricDsl(System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_set_MultiRateSymmetricDsl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "MultiRateSymmetricDsl", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType HighPerformanceSerialBus
System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_HighPerformanceSerialBus() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_get_HighPerformanceSerialBus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "HighPerformanceSerialBus"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType HighPerformanceSerialBus
void System::Net::NetworkInformation::NetworkInterfaceType::_set_HighPerformanceSerialBus(System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_set_HighPerformanceSerialBus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "HighPerformanceSerialBus", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType Wman
System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_Wman() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_get_Wman");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "Wman"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType Wman
void System::Net::NetworkInformation::NetworkInterfaceType::_set_Wman(System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_set_Wman");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "Wman", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType Wwanpp
System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_Wwanpp() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_get_Wwanpp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "Wwanpp"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType Wwanpp
void System::Net::NetworkInformation::NetworkInterfaceType::_set_Wwanpp(System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_set_Wwanpp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "Wwanpp", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetworkInterfaceType Wwanpp2
System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::NetworkInterfaceType::_get_Wwanpp2() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_get_Wwanpp2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::NetworkInterfaceType>("System.Net.NetworkInformation", "NetworkInterfaceType", "Wwanpp2"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetworkInterfaceType Wwanpp2
void System::Net::NetworkInformation::NetworkInterfaceType::_set_Wwanpp2(System::Net::NetworkInformation::NetworkInterfaceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceType::_set_Wwanpp2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetworkInterfaceType", "Wwanpp2", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.NetBiosNodeType
#include "System/Net/NetworkInformation/NetBiosNodeType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetBiosNodeType Unknown
System::Net::NetworkInformation::NetBiosNodeType System::Net::NetworkInformation::NetBiosNodeType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetBiosNodeType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::NetBiosNodeType>("System.Net.NetworkInformation", "NetBiosNodeType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetBiosNodeType Unknown
void System::Net::NetworkInformation::NetBiosNodeType::_set_Unknown(System::Net::NetworkInformation::NetBiosNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetBiosNodeType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetBiosNodeType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetBiosNodeType Broadcast
System::Net::NetworkInformation::NetBiosNodeType System::Net::NetworkInformation::NetBiosNodeType::_get_Broadcast() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetBiosNodeType::_get_Broadcast");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::NetBiosNodeType>("System.Net.NetworkInformation", "NetBiosNodeType", "Broadcast"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetBiosNodeType Broadcast
void System::Net::NetworkInformation::NetBiosNodeType::_set_Broadcast(System::Net::NetworkInformation::NetBiosNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetBiosNodeType::_set_Broadcast");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetBiosNodeType", "Broadcast", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetBiosNodeType Peer2Peer
System::Net::NetworkInformation::NetBiosNodeType System::Net::NetworkInformation::NetBiosNodeType::_get_Peer2Peer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetBiosNodeType::_get_Peer2Peer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::NetBiosNodeType>("System.Net.NetworkInformation", "NetBiosNodeType", "Peer2Peer"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetBiosNodeType Peer2Peer
void System::Net::NetworkInformation::NetBiosNodeType::_set_Peer2Peer(System::Net::NetworkInformation::NetBiosNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetBiosNodeType::_set_Peer2Peer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetBiosNodeType", "Peer2Peer", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetBiosNodeType Mixed
System::Net::NetworkInformation::NetBiosNodeType System::Net::NetworkInformation::NetBiosNodeType::_get_Mixed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetBiosNodeType::_get_Mixed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::NetBiosNodeType>("System.Net.NetworkInformation", "NetBiosNodeType", "Mixed"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetBiosNodeType Mixed
void System::Net::NetworkInformation::NetBiosNodeType::_set_Mixed(System::Net::NetworkInformation::NetBiosNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetBiosNodeType::_set_Mixed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetBiosNodeType", "Mixed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.NetBiosNodeType Hybrid
System::Net::NetworkInformation::NetBiosNodeType System::Net::NetworkInformation::NetBiosNodeType::_get_Hybrid() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetBiosNodeType::_get_Hybrid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::NetBiosNodeType>("System.Net.NetworkInformation", "NetBiosNodeType", "Hybrid"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.NetBiosNodeType Hybrid
void System::Net::NetworkInformation::NetBiosNodeType::_set_Hybrid(System::Net::NetworkInformation::NetBiosNodeType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetBiosNodeType::_set_Hybrid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "NetBiosNodeType", "Hybrid", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.NetworkInformation.CommonUnixIPGlobalProperties
#include "System/Net/NetworkInformation/CommonUnixIPGlobalProperties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.CommonUnixIPGlobalProperties.getdomainname
int System::Net::NetworkInformation::CommonUnixIPGlobalProperties::getdomainname(::Array<uint8_t>* name, int len) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::CommonUnixIPGlobalProperties::getdomainname");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "CommonUnixIPGlobalProperties", "getdomainname", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(len)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, len);
}
// Autogenerated method: System.Net.NetworkInformation.CommonUnixIPGlobalProperties.get_DomainName
::Il2CppString* System::Net::NetworkInformation::CommonUnixIPGlobalProperties::get_DomainName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::CommonUnixIPGlobalProperties::get_DomainName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DomainName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CommonUnixIPGlobalProperties::getdomainname
// Il2CppName: getdomainname
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Array<uint8_t>*, int)>(&CommonUnixIPGlobalProperties::getdomainname)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CommonUnixIPGlobalProperties*), "getdomainname", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: CommonUnixIPGlobalProperties::get_DomainName
// Il2CppName: get_DomainName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (CommonUnixIPGlobalProperties::*)()>(&CommonUnixIPGlobalProperties::get_DomainName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CommonUnixIPGlobalProperties*), "get_DomainName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CommonUnixIPGlobalProperties::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CommonUnixIPGlobalProperties::*)()>(&CommonUnixIPGlobalProperties::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CommonUnixIPGlobalProperties*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CommonUnixIPGlobalProperties::*)()>(&CommonUnixIPGlobalProperties::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CommonUnixIPGlobalProperties*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.UnixIPGlobalProperties
#include "System/Net/NetworkInformation/UnixIPGlobalProperties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: UnixIPGlobalProperties::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnixIPGlobalProperties::*)()>(&UnixIPGlobalProperties::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnixIPGlobalProperties*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnixIPGlobalProperties::*)()>(&UnixIPGlobalProperties::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnixIPGlobalProperties*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.NetworkInformation.UnixNoLibCIPGlobalProperties
#include "System/Net/NetworkInformation/UnixNoLibCIPGlobalProperties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.UnixNoLibCIPGlobalProperties.get_DomainName
::Il2CppString* System::Net::NetworkInformation::UnixNoLibCIPGlobalProperties::get_DomainName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::UnixNoLibCIPGlobalProperties::get_DomainName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DomainName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: UnixNoLibCIPGlobalProperties::get_DomainName
// Il2CppName: get_DomainName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (UnixNoLibCIPGlobalProperties::*)()>(&UnixNoLibCIPGlobalProperties::get_DomainName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnixNoLibCIPGlobalProperties*), "get_DomainName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnixNoLibCIPGlobalProperties::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnixNoLibCIPGlobalProperties::*)()>(&UnixNoLibCIPGlobalProperties::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnixNoLibCIPGlobalProperties*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnixNoLibCIPGlobalProperties::*)()>(&UnixNoLibCIPGlobalProperties::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnixNoLibCIPGlobalProperties*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.NetworkInformation.MibIPGlobalProperties
#include "System/Net/NetworkInformation/MibIPGlobalProperties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] wsChars
::Array<::Il2CppChar>* System::Net::NetworkInformation::MibIPGlobalProperties::_get_wsChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::MibIPGlobalProperties::_get_wsChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System.Net.NetworkInformation", "MibIPGlobalProperties", "wsChars"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] wsChars
void System::Net::NetworkInformation::MibIPGlobalProperties::_set_wsChars(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::MibIPGlobalProperties::_set_wsChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "MibIPGlobalProperties", "wsChars", value));
}
// Autogenerated method: System.Net.NetworkInformation.MibIPGlobalProperties..cctor
void System::Net::NetworkInformation::MibIPGlobalProperties::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::MibIPGlobalProperties::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "MibIPGlobalProperties", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: MibIPGlobalProperties::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MibIPGlobalProperties::*)(::Il2CppString*)>(&MibIPGlobalProperties::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MibIPGlobalProperties*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MibIPGlobalProperties::*)(::Il2CppString*)>(&MibIPGlobalProperties::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MibIPGlobalProperties*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: MibIPGlobalProperties::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&MibIPGlobalProperties::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MibIPGlobalProperties*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.NetworkInformation.Win32IPGlobalProperties
#include "System/Net/NetworkInformation/Win32IPGlobalProperties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.Win32IPGlobalProperties.get_DomainName
::Il2CppString* System::Net::NetworkInformation::Win32IPGlobalProperties::get_DomainName() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::Win32IPGlobalProperties::get_DomainName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DomainName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: Win32IPGlobalProperties::get_DomainName
// Il2CppName: get_DomainName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Win32IPGlobalProperties::*)()>(&Win32IPGlobalProperties::get_DomainName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Win32IPGlobalProperties*), "get_DomainName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Win32IPGlobalProperties::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Win32IPGlobalProperties::*)()>(&Win32IPGlobalProperties::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Win32IPGlobalProperties*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Win32IPGlobalProperties::*)()>(&Win32IPGlobalProperties::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Win32IPGlobalProperties*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.UnixIPInterfaceProperties
#include "System/Net/NetworkInformation/UnixIPInterfaceProperties.hpp"
// Including type: System.Net.NetworkInformation.UnixNetworkInterface
#include "System/Net/NetworkInformation/UnixNetworkInterface.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: System.Net.NetworkInformation.UnicastIPAddressInformationCollection
#include "System/Net/NetworkInformation/UnicastIPAddressInformationCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Text.RegularExpressions.Regex ns
System::Text::RegularExpressions::Regex* System::Net::NetworkInformation::UnixIPInterfaceProperties::_get_ns() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::UnixIPInterfaceProperties::_get_ns");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Text::RegularExpressions::Regex*>("System.Net.NetworkInformation", "UnixIPInterfaceProperties", "ns"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.RegularExpressions.Regex ns
void System::Net::NetworkInformation::UnixIPInterfaceProperties::_set_ns(System::Text::RegularExpressions::Regex* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::UnixIPInterfaceProperties::_set_ns");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "UnixIPInterfaceProperties", "ns", value));
}
// Autogenerated static field getter
// Get static field: static private System.Text.RegularExpressions.Regex search
System::Text::RegularExpressions::Regex* System::Net::NetworkInformation::UnixIPInterfaceProperties::_get_search() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::UnixIPInterfaceProperties::_get_search");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Text::RegularExpressions::Regex*>("System.Net.NetworkInformation", "UnixIPInterfaceProperties", "search"));
}
// Autogenerated static field setter
// Set static field: static private System.Text.RegularExpressions.Regex search
void System::Net::NetworkInformation::UnixIPInterfaceProperties::_set_search(System::Text::RegularExpressions::Regex* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::UnixIPInterfaceProperties::_set_search");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "UnixIPInterfaceProperties", "search", value));
}
// Autogenerated method: System.Net.NetworkInformation.UnixIPInterfaceProperties..cctor
void System::Net::NetworkInformation::UnixIPInterfaceProperties::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::UnixIPInterfaceProperties::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "UnixIPInterfaceProperties", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.UnixIPInterfaceProperties.get_UnicastAddresses
System::Net::NetworkInformation::UnicastIPAddressInformationCollection* System::Net::NetworkInformation::UnixIPInterfaceProperties::get_UnicastAddresses() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::UnixIPInterfaceProperties::get_UnicastAddresses");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnicastAddresses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::NetworkInformation::UnicastIPAddressInformationCollection*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: UnixIPInterfaceProperties::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnixIPInterfaceProperties::*)(System::Net::NetworkInformation::UnixNetworkInterface*, System::Collections::Generic::List_1<System::Net::IPAddress*>*)>(&UnixIPInterfaceProperties::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnixIPInterfaceProperties*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::NetworkInformation::UnixNetworkInterface*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<System::Net::IPAddress*>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnixIPInterfaceProperties::*)(System::Net::NetworkInformation::UnixNetworkInterface*, System::Collections::Generic::List_1<System::Net::IPAddress*>*)>(&UnixIPInterfaceProperties::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnixIPInterfaceProperties*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::NetworkInformation::UnixNetworkInterface*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<System::Net::IPAddress*>*>()});
  }
};
// Writing MetadataGetter for method: UnixIPInterfaceProperties::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&UnixIPInterfaceProperties::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnixIPInterfaceProperties*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnixIPInterfaceProperties::get_UnicastAddresses
// Il2CppName: get_UnicastAddresses
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::NetworkInformation::UnicastIPAddressInformationCollection* (UnixIPInterfaceProperties::*)()>(&UnixIPInterfaceProperties::get_UnicastAddresses)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnixIPInterfaceProperties*), "get_UnicastAddresses", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.NetworkInformation.LinuxIPInterfaceProperties
#include "System/Net/NetworkInformation/LinuxIPInterfaceProperties.hpp"
// Including type: System.Net.NetworkInformation.LinuxNetworkInterface
#include "System/Net/NetworkInformation/LinuxNetworkInterface.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.Net.NetworkInformation.IPAddressCollection
#include "System/Net/NetworkInformation/IPAddressCollection.hpp"
// Including type: System.Net.NetworkInformation.GatewayIPAddressInformationCollection
#include "System/Net/NetworkInformation/GatewayIPAddressInformationCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.LinuxIPInterfaceProperties.ParseRouteInfo
System::Net::NetworkInformation::IPAddressCollection* System::Net::NetworkInformation::LinuxIPInterfaceProperties::ParseRouteInfo(::Il2CppString* iface) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::LinuxIPInterfaceProperties::ParseRouteInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParseRouteInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(iface)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::NetworkInformation::IPAddressCollection*, false>(this, ___internal__method, iface);
}
// Autogenerated method: System.Net.NetworkInformation.LinuxIPInterfaceProperties.get_GatewayAddresses
System::Net::NetworkInformation::GatewayIPAddressInformationCollection* System::Net::NetworkInformation::LinuxIPInterfaceProperties::get_GatewayAddresses() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::LinuxIPInterfaceProperties::get_GatewayAddresses");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GatewayAddresses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::NetworkInformation::GatewayIPAddressInformationCollection*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: LinuxIPInterfaceProperties::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LinuxIPInterfaceProperties::*)(System::Net::NetworkInformation::LinuxNetworkInterface*, System::Collections::Generic::List_1<System::Net::IPAddress*>*)>(&LinuxIPInterfaceProperties::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LinuxIPInterfaceProperties*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::NetworkInformation::LinuxNetworkInterface*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<System::Net::IPAddress*>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LinuxIPInterfaceProperties::*)(System::Net::NetworkInformation::LinuxNetworkInterface*, System::Collections::Generic::List_1<System::Net::IPAddress*>*)>(&LinuxIPInterfaceProperties::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LinuxIPInterfaceProperties*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::NetworkInformation::LinuxNetworkInterface*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<System::Net::IPAddress*>*>()});
  }
};
// Writing MetadataGetter for method: LinuxIPInterfaceProperties::ParseRouteInfo
// Il2CppName: ParseRouteInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::NetworkInformation::IPAddressCollection* (LinuxIPInterfaceProperties::*)(::Il2CppString*)>(&LinuxIPInterfaceProperties::ParseRouteInfo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LinuxIPInterfaceProperties*), "ParseRouteInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: LinuxIPInterfaceProperties::get_GatewayAddresses
// Il2CppName: get_GatewayAddresses
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::NetworkInformation::GatewayIPAddressInformationCollection* (LinuxIPInterfaceProperties::*)()>(&LinuxIPInterfaceProperties::get_GatewayAddresses)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LinuxIPInterfaceProperties*), "get_GatewayAddresses", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.NetworkInformation.MacOsIPInterfaceProperties
#include "System/Net/NetworkInformation/MacOsIPInterfaceProperties.hpp"
// Including type: System.Net.NetworkInformation.MacOsNetworkInterface
#include "System/Net/NetworkInformation/MacOsNetworkInterface.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.Net.NetworkInformation.GatewayIPAddressInformationCollection
#include "System/Net/NetworkInformation/GatewayIPAddressInformationCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.MacOsIPInterfaceProperties.ParseRouteInfo_internal
bool System::Net::NetworkInformation::MacOsIPInterfaceProperties::ParseRouteInfo_internal(::Il2CppString* iface, ::Array<::Il2CppString*>*& gw_addr_list) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::MacOsIPInterfaceProperties::ParseRouteInfo_internal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "MacOsIPInterfaceProperties", "ParseRouteInfo_internal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(iface), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, iface, gw_addr_list);
}
// Autogenerated method: System.Net.NetworkInformation.MacOsIPInterfaceProperties.get_GatewayAddresses
System::Net::NetworkInformation::GatewayIPAddressInformationCollection* System::Net::NetworkInformation::MacOsIPInterfaceProperties::get_GatewayAddresses() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::MacOsIPInterfaceProperties::get_GatewayAddresses");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GatewayAddresses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::NetworkInformation::GatewayIPAddressInformationCollection*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MacOsIPInterfaceProperties::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MacOsIPInterfaceProperties::*)(System::Net::NetworkInformation::MacOsNetworkInterface*, System::Collections::Generic::List_1<System::Net::IPAddress*>*)>(&MacOsIPInterfaceProperties::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MacOsIPInterfaceProperties*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::NetworkInformation::MacOsNetworkInterface*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<System::Net::IPAddress*>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MacOsIPInterfaceProperties::*)(System::Net::NetworkInformation::MacOsNetworkInterface*, System::Collections::Generic::List_1<System::Net::IPAddress*>*)>(&MacOsIPInterfaceProperties::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MacOsIPInterfaceProperties*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::NetworkInformation::MacOsNetworkInterface*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<System::Net::IPAddress*>*>()});
  }
};
// Writing MetadataGetter for method: MacOsIPInterfaceProperties::ParseRouteInfo_internal
// Il2CppName: ParseRouteInfo_internal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppString*, ::Array<::Il2CppString*>*&)>(&MacOsIPInterfaceProperties::ParseRouteInfo_internal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MacOsIPInterfaceProperties*), "ParseRouteInfo_internal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*&>()});
  }
};
// Writing MetadataGetter for method: MacOsIPInterfaceProperties::get_GatewayAddresses
// Il2CppName: get_GatewayAddresses
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::NetworkInformation::GatewayIPAddressInformationCollection* (MacOsIPInterfaceProperties::*)()>(&MacOsIPInterfaceProperties::get_GatewayAddresses)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MacOsIPInterfaceProperties*), "get_GatewayAddresses", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.Win32IPInterfaceProperties2
#include "System/Net/NetworkInformation/Win32IPInterfaceProperties2.hpp"
// Including type: System.Net.NetworkInformation.UnicastIPAddressInformationCollection
#include "System/Net/NetworkInformation/UnicastIPAddressInformationCollection.hpp"
// Including type: System.Net.NetworkInformation.GatewayIPAddressInformationCollection
#include "System/Net/NetworkInformation/GatewayIPAddressInformationCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.Win32IPInterfaceProperties2.Win32FromUnicast
System::Net::NetworkInformation::UnicastIPAddressInformationCollection* System::Net::NetworkInformation::Win32IPInterfaceProperties2::Win32FromUnicast(System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::Win32IPInterfaceProperties2::Win32FromUnicast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "Win32IPInterfaceProperties2", "Win32FromUnicast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::NetworkInformation::UnicastIPAddressInformationCollection*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ptr);
}
// Autogenerated method: System.Net.NetworkInformation.Win32IPInterfaceProperties2.get_GatewayAddresses
System::Net::NetworkInformation::GatewayIPAddressInformationCollection* System::Net::NetworkInformation::Win32IPInterfaceProperties2::get_GatewayAddresses() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::Win32IPInterfaceProperties2::get_GatewayAddresses");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GatewayAddresses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::NetworkInformation::GatewayIPAddressInformationCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.Win32IPInterfaceProperties2.get_UnicastAddresses
System::Net::NetworkInformation::UnicastIPAddressInformationCollection* System::Net::NetworkInformation::Win32IPInterfaceProperties2::get_UnicastAddresses() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::Win32IPInterfaceProperties2::get_UnicastAddresses");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnicastAddresses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::NetworkInformation::UnicastIPAddressInformationCollection*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: Win32IPInterfaceProperties2::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Win32IPInterfaceProperties2::*)(System::Net::NetworkInformation::Win32_IP_ADAPTER_ADDRESSES, System::Net::NetworkInformation::Win32_MIB_IFROW, System::Net::NetworkInformation::Win32_MIB_IFROW)>(&Win32IPInterfaceProperties2::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Win32IPInterfaceProperties2*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::NetworkInformation::Win32_IP_ADAPTER_ADDRESSES>(), ::il2cpp_utils::ExtractIndependentType<System::Net::NetworkInformation::Win32_MIB_IFROW>(), ::il2cpp_utils::ExtractIndependentType<System::Net::NetworkInformation::Win32_MIB_IFROW>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Win32IPInterfaceProperties2::*)(System::Net::NetworkInformation::Win32_IP_ADAPTER_ADDRESSES, System::Net::NetworkInformation::Win32_MIB_IFROW, System::Net::NetworkInformation::Win32_MIB_IFROW)>(&Win32IPInterfaceProperties2::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Win32IPInterfaceProperties2*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::NetworkInformation::Win32_IP_ADAPTER_ADDRESSES>(), ::il2cpp_utils::ExtractIndependentType<System::Net::NetworkInformation::Win32_MIB_IFROW>(), ::il2cpp_utils::ExtractIndependentType<System::Net::NetworkInformation::Win32_MIB_IFROW>()});
  }
};
// Writing MetadataGetter for method: Win32IPInterfaceProperties2::Win32FromUnicast
// Il2CppName: Win32FromUnicast
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::NetworkInformation::UnicastIPAddressInformationCollection* (*)(System::IntPtr)>(&Win32IPInterfaceProperties2::Win32FromUnicast)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Win32IPInterfaceProperties2*), "Win32FromUnicast", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: Win32IPInterfaceProperties2::get_GatewayAddresses
// Il2CppName: get_GatewayAddresses
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::NetworkInformation::GatewayIPAddressInformationCollection* (Win32IPInterfaceProperties2::*)()>(&Win32IPInterfaceProperties2::get_GatewayAddresses)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Win32IPInterfaceProperties2*), "get_GatewayAddresses", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Win32IPInterfaceProperties2::get_UnicastAddresses
// Il2CppName: get_UnicastAddresses
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::NetworkInformation::UnicastIPAddressInformationCollection* (Win32IPInterfaceProperties2::*)()>(&Win32IPInterfaceProperties2::get_UnicastAddresses)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Win32IPInterfaceProperties2*), "get_UnicastAddresses", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.Win32IPv4InterfaceStatistics
#include "System/Net/NetworkInformation/Win32IPv4InterfaceStatistics.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: Win32IPv4InterfaceStatistics::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Win32IPv4InterfaceStatistics::*)(System::Net::NetworkInformation::Win32_MIB_IFROW)>(&Win32IPv4InterfaceStatistics::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Win32IPv4InterfaceStatistics*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::NetworkInformation::Win32_MIB_IFROW>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Win32IPv4InterfaceStatistics::*)(System::Net::NetworkInformation::Win32_MIB_IFROW)>(&Win32IPv4InterfaceStatistics::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Win32IPv4InterfaceStatistics*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::NetworkInformation::Win32_MIB_IFROW>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.LinuxArpHardware
#include "System/Net/NetworkInformation/LinuxArpHardware.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.LinuxArpHardware ETHER
System::Net::NetworkInformation::LinuxArpHardware System::Net::NetworkInformation::LinuxArpHardware::_get_ETHER() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::LinuxArpHardware::_get_ETHER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::LinuxArpHardware>("System.Net.NetworkInformation", "LinuxArpHardware", "ETHER"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.LinuxArpHardware ETHER
void System::Net::NetworkInformation::LinuxArpHardware::_set_ETHER(System::Net::NetworkInformation::LinuxArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::LinuxArpHardware::_set_ETHER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "LinuxArpHardware", "ETHER", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.LinuxArpHardware EETHER
System::Net::NetworkInformation::LinuxArpHardware System::Net::NetworkInformation::LinuxArpHardware::_get_EETHER() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::LinuxArpHardware::_get_EETHER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::LinuxArpHardware>("System.Net.NetworkInformation", "LinuxArpHardware", "EETHER"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.LinuxArpHardware EETHER
void System::Net::NetworkInformation::LinuxArpHardware::_set_EETHER(System::Net::NetworkInformation::LinuxArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::LinuxArpHardware::_set_EETHER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "LinuxArpHardware", "EETHER", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.LinuxArpHardware PRONET
System::Net::NetworkInformation::LinuxArpHardware System::Net::NetworkInformation::LinuxArpHardware::_get_PRONET() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::LinuxArpHardware::_get_PRONET");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::LinuxArpHardware>("System.Net.NetworkInformation", "LinuxArpHardware", "PRONET"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.LinuxArpHardware PRONET
void System::Net::NetworkInformation::LinuxArpHardware::_set_PRONET(System::Net::NetworkInformation::LinuxArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::LinuxArpHardware::_set_PRONET");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "LinuxArpHardware", "PRONET", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.LinuxArpHardware ATM
System::Net::NetworkInformation::LinuxArpHardware System::Net::NetworkInformation::LinuxArpHardware::_get_ATM() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::LinuxArpHardware::_get_ATM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::LinuxArpHardware>("System.Net.NetworkInformation", "LinuxArpHardware", "ATM"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.LinuxArpHardware ATM
void System::Net::NetworkInformation::LinuxArpHardware::_set_ATM(System::Net::NetworkInformation::LinuxArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::LinuxArpHardware::_set_ATM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "LinuxArpHardware", "ATM", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.LinuxArpHardware SLIP
System::Net::NetworkInformation::LinuxArpHardware System::Net::NetworkInformation::LinuxArpHardware::_get_SLIP() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::LinuxArpHardware::_get_SLIP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::LinuxArpHardware>("System.Net.NetworkInformation", "LinuxArpHardware", "SLIP"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.LinuxArpHardware SLIP
void System::Net::NetworkInformation::LinuxArpHardware::_set_SLIP(System::Net::NetworkInformation::LinuxArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::LinuxArpHardware::_set_SLIP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "LinuxArpHardware", "SLIP", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.LinuxArpHardware CSLIP
System::Net::NetworkInformation::LinuxArpHardware System::Net::NetworkInformation::LinuxArpHardware::_get_CSLIP() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::LinuxArpHardware::_get_CSLIP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::LinuxArpHardware>("System.Net.NetworkInformation", "LinuxArpHardware", "CSLIP"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.LinuxArpHardware CSLIP
void System::Net::NetworkInformation::LinuxArpHardware::_set_CSLIP(System::Net::NetworkInformation::LinuxArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::LinuxArpHardware::_set_CSLIP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "LinuxArpHardware", "CSLIP", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.LinuxArpHardware SLIP6
System::Net::NetworkInformation::LinuxArpHardware System::Net::NetworkInformation::LinuxArpHardware::_get_SLIP6() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::LinuxArpHardware::_get_SLIP6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::LinuxArpHardware>("System.Net.NetworkInformation", "LinuxArpHardware", "SLIP6"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.LinuxArpHardware SLIP6
void System::Net::NetworkInformation::LinuxArpHardware::_set_SLIP6(System::Net::NetworkInformation::LinuxArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::LinuxArpHardware::_set_SLIP6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "LinuxArpHardware", "SLIP6", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.LinuxArpHardware CSLIP6
System::Net::NetworkInformation::LinuxArpHardware System::Net::NetworkInformation::LinuxArpHardware::_get_CSLIP6() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::LinuxArpHardware::_get_CSLIP6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::LinuxArpHardware>("System.Net.NetworkInformation", "LinuxArpHardware", "CSLIP6"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.LinuxArpHardware CSLIP6
void System::Net::NetworkInformation::LinuxArpHardware::_set_CSLIP6(System::Net::NetworkInformation::LinuxArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::LinuxArpHardware::_set_CSLIP6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "LinuxArpHardware", "CSLIP6", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.LinuxArpHardware PPP
System::Net::NetworkInformation::LinuxArpHardware System::Net::NetworkInformation::LinuxArpHardware::_get_PPP() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::LinuxArpHardware::_get_PPP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::LinuxArpHardware>("System.Net.NetworkInformation", "LinuxArpHardware", "PPP"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.LinuxArpHardware PPP
void System::Net::NetworkInformation::LinuxArpHardware::_set_PPP(System::Net::NetworkInformation::LinuxArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::LinuxArpHardware::_set_PPP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "LinuxArpHardware", "PPP", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.LinuxArpHardware LOOPBACK
System::Net::NetworkInformation::LinuxArpHardware System::Net::NetworkInformation::LinuxArpHardware::_get_LOOPBACK() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::LinuxArpHardware::_get_LOOPBACK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::LinuxArpHardware>("System.Net.NetworkInformation", "LinuxArpHardware", "LOOPBACK"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.LinuxArpHardware LOOPBACK
void System::Net::NetworkInformation::LinuxArpHardware::_set_LOOPBACK(System::Net::NetworkInformation::LinuxArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::LinuxArpHardware::_set_LOOPBACK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "LinuxArpHardware", "LOOPBACK", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.LinuxArpHardware FDDI
System::Net::NetworkInformation::LinuxArpHardware System::Net::NetworkInformation::LinuxArpHardware::_get_FDDI() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::LinuxArpHardware::_get_FDDI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::LinuxArpHardware>("System.Net.NetworkInformation", "LinuxArpHardware", "FDDI"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.LinuxArpHardware FDDI
void System::Net::NetworkInformation::LinuxArpHardware::_set_FDDI(System::Net::NetworkInformation::LinuxArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::LinuxArpHardware::_set_FDDI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "LinuxArpHardware", "FDDI", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.LinuxArpHardware TUNNEL
System::Net::NetworkInformation::LinuxArpHardware System::Net::NetworkInformation::LinuxArpHardware::_get_TUNNEL() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::LinuxArpHardware::_get_TUNNEL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::LinuxArpHardware>("System.Net.NetworkInformation", "LinuxArpHardware", "TUNNEL"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.LinuxArpHardware TUNNEL
void System::Net::NetworkInformation::LinuxArpHardware::_set_TUNNEL(System::Net::NetworkInformation::LinuxArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::LinuxArpHardware::_set_TUNNEL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "LinuxArpHardware", "TUNNEL", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.LinuxArpHardware TUNNEL6
System::Net::NetworkInformation::LinuxArpHardware System::Net::NetworkInformation::LinuxArpHardware::_get_TUNNEL6() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::LinuxArpHardware::_get_TUNNEL6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::LinuxArpHardware>("System.Net.NetworkInformation", "LinuxArpHardware", "TUNNEL6"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.LinuxArpHardware TUNNEL6
void System::Net::NetworkInformation::LinuxArpHardware::_set_TUNNEL6(System::Net::NetworkInformation::LinuxArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::LinuxArpHardware::_set_TUNNEL6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "LinuxArpHardware", "TUNNEL6", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.LinuxArpHardware SIT
System::Net::NetworkInformation::LinuxArpHardware System::Net::NetworkInformation::LinuxArpHardware::_get_SIT() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::LinuxArpHardware::_get_SIT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::LinuxArpHardware>("System.Net.NetworkInformation", "LinuxArpHardware", "SIT"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.LinuxArpHardware SIT
void System::Net::NetworkInformation::LinuxArpHardware::_set_SIT(System::Net::NetworkInformation::LinuxArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::LinuxArpHardware::_set_SIT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "LinuxArpHardware", "SIT", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.LinuxArpHardware IPDDP
System::Net::NetworkInformation::LinuxArpHardware System::Net::NetworkInformation::LinuxArpHardware::_get_IPDDP() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::LinuxArpHardware::_get_IPDDP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::LinuxArpHardware>("System.Net.NetworkInformation", "LinuxArpHardware", "IPDDP"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.LinuxArpHardware IPDDP
void System::Net::NetworkInformation::LinuxArpHardware::_set_IPDDP(System::Net::NetworkInformation::LinuxArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::LinuxArpHardware::_set_IPDDP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "LinuxArpHardware", "IPDDP", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.LinuxArpHardware IPGRE
System::Net::NetworkInformation::LinuxArpHardware System::Net::NetworkInformation::LinuxArpHardware::_get_IPGRE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::LinuxArpHardware::_get_IPGRE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::LinuxArpHardware>("System.Net.NetworkInformation", "LinuxArpHardware", "IPGRE"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.LinuxArpHardware IPGRE
void System::Net::NetworkInformation::LinuxArpHardware::_set_IPGRE(System::Net::NetworkInformation::LinuxArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::LinuxArpHardware::_set_IPGRE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "LinuxArpHardware", "IPGRE", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.LinuxArpHardware IP6GRE
System::Net::NetworkInformation::LinuxArpHardware System::Net::NetworkInformation::LinuxArpHardware::_get_IP6GRE() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::LinuxArpHardware::_get_IP6GRE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::LinuxArpHardware>("System.Net.NetworkInformation", "LinuxArpHardware", "IP6GRE"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.LinuxArpHardware IP6GRE
void System::Net::NetworkInformation::LinuxArpHardware::_set_IP6GRE(System::Net::NetworkInformation::LinuxArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::LinuxArpHardware::_set_IP6GRE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "LinuxArpHardware", "IP6GRE", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.MacOsArpHardware
#include "System/Net/NetworkInformation/MacOsArpHardware.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.MacOsArpHardware ETHER
System::Net::NetworkInformation::MacOsArpHardware System::Net::NetworkInformation::MacOsArpHardware::_get_ETHER() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::MacOsArpHardware::_get_ETHER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::MacOsArpHardware>("System.Net.NetworkInformation", "MacOsArpHardware", "ETHER"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.MacOsArpHardware ETHER
void System::Net::NetworkInformation::MacOsArpHardware::_set_ETHER(System::Net::NetworkInformation::MacOsArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::MacOsArpHardware::_set_ETHER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "MacOsArpHardware", "ETHER", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.MacOsArpHardware ATM
System::Net::NetworkInformation::MacOsArpHardware System::Net::NetworkInformation::MacOsArpHardware::_get_ATM() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::MacOsArpHardware::_get_ATM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::MacOsArpHardware>("System.Net.NetworkInformation", "MacOsArpHardware", "ATM"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.MacOsArpHardware ATM
void System::Net::NetworkInformation::MacOsArpHardware::_set_ATM(System::Net::NetworkInformation::MacOsArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::MacOsArpHardware::_set_ATM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "MacOsArpHardware", "ATM", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.MacOsArpHardware SLIP
System::Net::NetworkInformation::MacOsArpHardware System::Net::NetworkInformation::MacOsArpHardware::_get_SLIP() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::MacOsArpHardware::_get_SLIP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::MacOsArpHardware>("System.Net.NetworkInformation", "MacOsArpHardware", "SLIP"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.MacOsArpHardware SLIP
void System::Net::NetworkInformation::MacOsArpHardware::_set_SLIP(System::Net::NetworkInformation::MacOsArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::MacOsArpHardware::_set_SLIP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "MacOsArpHardware", "SLIP", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.MacOsArpHardware PPP
System::Net::NetworkInformation::MacOsArpHardware System::Net::NetworkInformation::MacOsArpHardware::_get_PPP() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::MacOsArpHardware::_get_PPP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::MacOsArpHardware>("System.Net.NetworkInformation", "MacOsArpHardware", "PPP"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.MacOsArpHardware PPP
void System::Net::NetworkInformation::MacOsArpHardware::_set_PPP(System::Net::NetworkInformation::MacOsArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::MacOsArpHardware::_set_PPP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "MacOsArpHardware", "PPP", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.MacOsArpHardware LOOPBACK
System::Net::NetworkInformation::MacOsArpHardware System::Net::NetworkInformation::MacOsArpHardware::_get_LOOPBACK() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::MacOsArpHardware::_get_LOOPBACK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::MacOsArpHardware>("System.Net.NetworkInformation", "MacOsArpHardware", "LOOPBACK"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.MacOsArpHardware LOOPBACK
void System::Net::NetworkInformation::MacOsArpHardware::_set_LOOPBACK(System::Net::NetworkInformation::MacOsArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::MacOsArpHardware::_set_LOOPBACK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "MacOsArpHardware", "LOOPBACK", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.NetworkInformation.MacOsArpHardware FDDI
System::Net::NetworkInformation::MacOsArpHardware System::Net::NetworkInformation::MacOsArpHardware::_get_FDDI() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::MacOsArpHardware::_get_FDDI");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::MacOsArpHardware>("System.Net.NetworkInformation", "MacOsArpHardware", "FDDI"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.NetworkInformation.MacOsArpHardware FDDI
void System::Net::NetworkInformation::MacOsArpHardware::_set_FDDI(System::Net::NetworkInformation::MacOsArpHardware value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::MacOsArpHardware::_set_FDDI");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "MacOsArpHardware", "FDDI", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.NetworkInformation.SystemNetworkInterface
#include "System/Net/NetworkInformation/SystemNetworkInterface.hpp"
// Including type: System.Net.NetworkInformation.NetworkInterfaceFactory
#include "System/Net/NetworkInformation/NetworkInterfaceFactory.hpp"
// Including type: System.Net.NetworkInformation.NetworkInterface
#include "System/Net/NetworkInformation/NetworkInterface.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Net.NetworkInformation.NetworkInterfaceFactory nif
System::Net::NetworkInformation::NetworkInterfaceFactory* System::Net::NetworkInformation::SystemNetworkInterface::_get_nif() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::SystemNetworkInterface::_get_nif");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::NetworkInterfaceFactory*>("System.Net.NetworkInformation", "SystemNetworkInterface", "nif"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.NetworkInformation.NetworkInterfaceFactory nif
void System::Net::NetworkInformation::SystemNetworkInterface::_set_nif(System::Net::NetworkInformation::NetworkInterfaceFactory* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::SystemNetworkInterface::_set_nif");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "SystemNetworkInterface", "nif", value));
}
// Autogenerated method: System.Net.NetworkInformation.SystemNetworkInterface.GetNetworkInterfaces
::Array<System::Net::NetworkInformation::NetworkInterface*>* System::Net::NetworkInformation::SystemNetworkInterface::GetNetworkInterfaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::SystemNetworkInterface::GetNetworkInterfaces");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "SystemNetworkInterface", "GetNetworkInterfaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Net::NetworkInformation::NetworkInterface*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.SystemNetworkInterface..cctor
void System::Net::NetworkInformation::SystemNetworkInterface::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::SystemNetworkInterface::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "SystemNetworkInterface", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: SystemNetworkInterface::GetNetworkInterfaces
// Il2CppName: GetNetworkInterfaces
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<System::Net::NetworkInformation::NetworkInterface*>* (*)()>(&SystemNetworkInterface::GetNetworkInterfaces)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SystemNetworkInterface*), "GetNetworkInterfaces", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SystemNetworkInterface::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&SystemNetworkInterface::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SystemNetworkInterface*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.NetworkInformation.NetworkInterfaceFactory
#include "System/Net/NetworkInformation/NetworkInterfaceFactory.hpp"
// Including type: System.Net.NetworkInformation.NetworkInterfaceFactory/UnixNetworkInterfaceAPI
#include "System/Net/NetworkInformation/NetworkInterfaceFactory_UnixNetworkInterfaceAPI.hpp"
// Including type: System.Net.NetworkInformation.NetworkInterfaceFactory/MacOsNetworkInterfaceAPI
#include "System/Net/NetworkInformation/NetworkInterfaceFactory_MacOsNetworkInterfaceAPI.hpp"
// Including type: System.Net.NetworkInformation.NetworkInterfaceFactory/LinuxNetworkInterfaceAPI
#include "System/Net/NetworkInformation/NetworkInterfaceFactory_LinuxNetworkInterfaceAPI.hpp"
// Including type: System.Net.NetworkInformation.NetworkInterfaceFactory/Win32NetworkInterfaceAPI
#include "System/Net/NetworkInformation/NetworkInterfaceFactory_Win32NetworkInterfaceAPI.hpp"
// Including type: System.Net.NetworkInformation.NetworkInterface
#include "System/Net/NetworkInformation/NetworkInterface.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.NetworkInterfaceFactory.GetAllNetworkInterfaces
::Array<System::Net::NetworkInformation::NetworkInterface*>* System::Net::NetworkInformation::NetworkInterfaceFactory::GetAllNetworkInterfaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceFactory::GetAllNetworkInterfaces");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllNetworkInterfaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Net::NetworkInformation::NetworkInterface*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.NetworkInterfaceFactory.Create
System::Net::NetworkInformation::NetworkInterfaceFactory* System::Net::NetworkInformation::NetworkInterfaceFactory::Create() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceFactory::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "NetworkInterfaceFactory", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::NetworkInformation::NetworkInterfaceFactory*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: NetworkInterfaceFactory::GetAllNetworkInterfaces
// Il2CppName: GetAllNetworkInterfaces
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<System::Net::NetworkInformation::NetworkInterface*>* (NetworkInterfaceFactory::*)()>(&NetworkInterfaceFactory::GetAllNetworkInterfaces)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkInterfaceFactory*), "GetAllNetworkInterfaces", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkInterfaceFactory::Create
// Il2CppName: Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::NetworkInformation::NetworkInterfaceFactory* (*)()>(&NetworkInterfaceFactory::Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkInterfaceFactory*), "Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkInterfaceFactory::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkInterfaceFactory::*)()>(&NetworkInterfaceFactory::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkInterfaceFactory*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkInterfaceFactory::*)()>(&NetworkInterfaceFactory::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkInterfaceFactory*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.NetworkInterfaceFactory/UnixNetworkInterfaceAPI
#include "System/Net/NetworkInformation/NetworkInterfaceFactory_UnixNetworkInterfaceAPI.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.NetworkInterfaceFactory/UnixNetworkInterfaceAPI.getifaddrs
int System::Net::NetworkInformation::NetworkInterfaceFactory::UnixNetworkInterfaceAPI::getifaddrs(System::IntPtr& ifap) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceFactory::UnixNetworkInterfaceAPI::getifaddrs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "NetworkInterfaceFactory/UnixNetworkInterfaceAPI", "getifaddrs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ifap);
}
// Autogenerated method: System.Net.NetworkInformation.NetworkInterfaceFactory/UnixNetworkInterfaceAPI.freeifaddrs
void System::Net::NetworkInformation::NetworkInterfaceFactory::UnixNetworkInterfaceAPI::freeifaddrs(System::IntPtr ifap) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceFactory::UnixNetworkInterfaceAPI::freeifaddrs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "NetworkInterfaceFactory/UnixNetworkInterfaceAPI", "freeifaddrs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ifap)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ifap);
}
// Writing MetadataGetter for method: NetworkInterfaceFactory::UnixNetworkInterfaceAPI::getifaddrs
// Il2CppName: getifaddrs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::IntPtr&)>(&NetworkInterfaceFactory::UnixNetworkInterfaceAPI::getifaddrs)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkInterfaceFactory::UnixNetworkInterfaceAPI*), "getifaddrs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr&>()});
  }
};
// Writing MetadataGetter for method: NetworkInterfaceFactory::UnixNetworkInterfaceAPI::freeifaddrs
// Il2CppName: freeifaddrs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr)>(&NetworkInterfaceFactory::UnixNetworkInterfaceAPI::freeifaddrs)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkInterfaceFactory::UnixNetworkInterfaceAPI*), "freeifaddrs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: NetworkInterfaceFactory::UnixNetworkInterfaceAPI::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkInterfaceFactory::UnixNetworkInterfaceAPI::*)()>(&NetworkInterfaceFactory::UnixNetworkInterfaceAPI::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkInterfaceFactory::UnixNetworkInterfaceAPI*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkInterfaceFactory::UnixNetworkInterfaceAPI::*)()>(&NetworkInterfaceFactory::UnixNetworkInterfaceAPI::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkInterfaceFactory::UnixNetworkInterfaceAPI*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.NetworkInformation.NetworkInterfaceFactory/MacOsNetworkInterfaceAPI
#include "System/Net/NetworkInformation/NetworkInterfaceFactory_MacOsNetworkInterfaceAPI.hpp"
// Including type: System.Net.NetworkInformation.NetworkInterface
#include "System/Net/NetworkInformation/NetworkInterface.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.NetworkInterfaceFactory/MacOsNetworkInterfaceAPI.GetAllNetworkInterfaces
::Array<System::Net::NetworkInformation::NetworkInterface*>* System::Net::NetworkInformation::NetworkInterfaceFactory::MacOsNetworkInterfaceAPI::GetAllNetworkInterfaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceFactory::MacOsNetworkInterfaceAPI::GetAllNetworkInterfaces");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllNetworkInterfaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Net::NetworkInformation::NetworkInterface*>*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: NetworkInterfaceFactory::MacOsNetworkInterfaceAPI::GetAllNetworkInterfaces
// Il2CppName: GetAllNetworkInterfaces
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<System::Net::NetworkInformation::NetworkInterface*>* (NetworkInterfaceFactory::MacOsNetworkInterfaceAPI::*)()>(&NetworkInterfaceFactory::MacOsNetworkInterfaceAPI::GetAllNetworkInterfaces)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkInterfaceFactory::MacOsNetworkInterfaceAPI*), "GetAllNetworkInterfaces", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkInterfaceFactory::MacOsNetworkInterfaceAPI::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkInterfaceFactory::MacOsNetworkInterfaceAPI::*)()>(&NetworkInterfaceFactory::MacOsNetworkInterfaceAPI::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkInterfaceFactory::MacOsNetworkInterfaceAPI*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkInterfaceFactory::MacOsNetworkInterfaceAPI::*)()>(&NetworkInterfaceFactory::MacOsNetworkInterfaceAPI::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkInterfaceFactory::MacOsNetworkInterfaceAPI*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.NetworkInformation.NetworkInterfaceFactory/LinuxNetworkInterfaceAPI
#include "System/Net/NetworkInformation/NetworkInterfaceFactory_LinuxNetworkInterfaceAPI.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Net.NetworkInformation.NetworkInterface
#include "System/Net/NetworkInformation/NetworkInterface.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.NetworkInterfaceFactory/LinuxNetworkInterfaceAPI.FreeInterfaceAddresses
void System::Net::NetworkInformation::NetworkInterfaceFactory::LinuxNetworkInterfaceAPI::FreeInterfaceAddresses(System::IntPtr ifap) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceFactory::LinuxNetworkInterfaceAPI::FreeInterfaceAddresses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "NetworkInterfaceFactory/LinuxNetworkInterfaceAPI", "FreeInterfaceAddresses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ifap)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ifap);
}
// Autogenerated method: System.Net.NetworkInformation.NetworkInterfaceFactory/LinuxNetworkInterfaceAPI.GetInterfaceAddresses
int System::Net::NetworkInformation::NetworkInterfaceFactory::LinuxNetworkInterfaceAPI::GetInterfaceAddresses(System::IntPtr& ifap) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceFactory::LinuxNetworkInterfaceAPI::GetInterfaceAddresses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "NetworkInterfaceFactory/LinuxNetworkInterfaceAPI", "GetInterfaceAddresses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr&>()})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ifap);
}
// Autogenerated method: System.Net.NetworkInformation.NetworkInterfaceFactory/LinuxNetworkInterfaceAPI.GetAllNetworkInterfaces
::Array<System::Net::NetworkInformation::NetworkInterface*>* System::Net::NetworkInformation::NetworkInterfaceFactory::LinuxNetworkInterfaceAPI::GetAllNetworkInterfaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceFactory::LinuxNetworkInterfaceAPI::GetAllNetworkInterfaces");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllNetworkInterfaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Net::NetworkInformation::NetworkInterface*>*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: NetworkInterfaceFactory::LinuxNetworkInterfaceAPI::FreeInterfaceAddresses
// Il2CppName: FreeInterfaceAddresses
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)(System::IntPtr)>(&NetworkInterfaceFactory::LinuxNetworkInterfaceAPI::FreeInterfaceAddresses)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkInterfaceFactory::LinuxNetworkInterfaceAPI*), "FreeInterfaceAddresses", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Writing MetadataGetter for method: NetworkInterfaceFactory::LinuxNetworkInterfaceAPI::GetInterfaceAddresses
// Il2CppName: GetInterfaceAddresses
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::IntPtr&)>(&NetworkInterfaceFactory::LinuxNetworkInterfaceAPI::GetInterfaceAddresses)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkInterfaceFactory::LinuxNetworkInterfaceAPI*), "GetInterfaceAddresses", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr&>()});
  }
};
// Writing MetadataGetter for method: NetworkInterfaceFactory::LinuxNetworkInterfaceAPI::GetAllNetworkInterfaces
// Il2CppName: GetAllNetworkInterfaces
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<System::Net::NetworkInformation::NetworkInterface*>* (NetworkInterfaceFactory::LinuxNetworkInterfaceAPI::*)()>(&NetworkInterfaceFactory::LinuxNetworkInterfaceAPI::GetAllNetworkInterfaces)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkInterfaceFactory::LinuxNetworkInterfaceAPI*), "GetAllNetworkInterfaces", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkInterfaceFactory::LinuxNetworkInterfaceAPI::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkInterfaceFactory::LinuxNetworkInterfaceAPI::*)()>(&NetworkInterfaceFactory::LinuxNetworkInterfaceAPI::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkInterfaceFactory::LinuxNetworkInterfaceAPI*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkInterfaceFactory::LinuxNetworkInterfaceAPI::*)()>(&NetworkInterfaceFactory::LinuxNetworkInterfaceAPI::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkInterfaceFactory::LinuxNetworkInterfaceAPI*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.NetworkInformation.NetworkInterfaceFactory/Win32NetworkInterfaceAPI
#include "System/Net/NetworkInformation/NetworkInterfaceFactory_Win32NetworkInterfaceAPI.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: System.Net.NetworkInformation.NetworkInterface
#include "System/Net/NetworkInformation/NetworkInterface.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.NetworkInterfaceFactory/Win32NetworkInterfaceAPI.GetAdaptersAddresses
int System::Net::NetworkInformation::NetworkInterfaceFactory::Win32NetworkInterfaceAPI::GetAdaptersAddresses(uint family, uint flags, System::IntPtr reserved, System::IntPtr info, int& size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceFactory::Win32NetworkInterfaceAPI::GetAdaptersAddresses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "NetworkInterfaceFactory/Win32NetworkInterfaceAPI", "GetAdaptersAddresses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(family), ::il2cpp_utils::ExtractType(flags), ::il2cpp_utils::ExtractType(reserved), ::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, family, flags, reserved, info, size);
}
// Autogenerated method: System.Net.NetworkInformation.NetworkInterfaceFactory/Win32NetworkInterfaceAPI.GetAdaptersAddresses
::Array<System::Net::NetworkInformation::Win32_IP_ADAPTER_ADDRESSES>* System::Net::NetworkInformation::NetworkInterfaceFactory::Win32NetworkInterfaceAPI::GetAdaptersAddresses() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceFactory::Win32NetworkInterfaceAPI::GetAdaptersAddresses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "NetworkInterfaceFactory/Win32NetworkInterfaceAPI", "GetAdaptersAddresses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Net::NetworkInformation::Win32_IP_ADAPTER_ADDRESSES>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.NetworkInterfaceFactory/Win32NetworkInterfaceAPI.GetAllNetworkInterfaces
::Array<System::Net::NetworkInformation::NetworkInterface*>* System::Net::NetworkInformation::NetworkInterfaceFactory::Win32NetworkInterfaceAPI::GetAllNetworkInterfaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::NetworkInterfaceFactory::Win32NetworkInterfaceAPI::GetAllNetworkInterfaces");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllNetworkInterfaces", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Net::NetworkInformation::NetworkInterface*>*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: NetworkInterfaceFactory::Win32NetworkInterfaceAPI::GetAdaptersAddresses
// Il2CppName: GetAdaptersAddresses
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(uint, uint, System::IntPtr, System::IntPtr, int&)>(&NetworkInterfaceFactory::Win32NetworkInterfaceAPI::GetAdaptersAddresses)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkInterfaceFactory::Win32NetworkInterfaceAPI*), "GetAdaptersAddresses", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: NetworkInterfaceFactory::Win32NetworkInterfaceAPI::GetAdaptersAddresses
// Il2CppName: GetAdaptersAddresses
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<System::Net::NetworkInformation::Win32_IP_ADAPTER_ADDRESSES>* (*)()>(&NetworkInterfaceFactory::Win32NetworkInterfaceAPI::GetAdaptersAddresses)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkInterfaceFactory::Win32NetworkInterfaceAPI*), "GetAdaptersAddresses", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkInterfaceFactory::Win32NetworkInterfaceAPI::GetAllNetworkInterfaces
// Il2CppName: GetAllNetworkInterfaces
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<System::Net::NetworkInformation::NetworkInterface*>* (NetworkInterfaceFactory::Win32NetworkInterfaceAPI::*)()>(&NetworkInterfaceFactory::Win32NetworkInterfaceAPI::GetAllNetworkInterfaces)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkInterfaceFactory::Win32NetworkInterfaceAPI*), "GetAllNetworkInterfaces", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkInterfaceFactory::Win32NetworkInterfaceAPI::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkInterfaceFactory::Win32NetworkInterfaceAPI::*)()>(&NetworkInterfaceFactory::Win32NetworkInterfaceAPI::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkInterfaceFactory::Win32NetworkInterfaceAPI*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkInterfaceFactory::Win32NetworkInterfaceAPI::*)()>(&NetworkInterfaceFactory::Win32NetworkInterfaceAPI::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkInterfaceFactory::Win32NetworkInterfaceAPI*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.NetworkInformation.UnixNetworkInterface
#include "System/Net/NetworkInformation/UnixNetworkInterface.hpp"
// Including type: System.Net.NetworkInformation.IPInterfaceProperties
#include "System/Net/NetworkInformation/IPInterfaceProperties.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.UnixNetworkInterface.AddAddress
void System::Net::NetworkInformation::UnixNetworkInterface::AddAddress(System::Net::IPAddress* address) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::UnixNetworkInterface::AddAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(address)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, address);
}
// Autogenerated method: System.Net.NetworkInformation.UnixNetworkInterface.SetLinkLayerInfo
void System::Net::NetworkInformation::UnixNetworkInterface::SetLinkLayerInfo(int index, ::Array<uint8_t>* macAddress, System::Net::NetworkInformation::NetworkInterfaceType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::UnixNetworkInterface::SetLinkLayerInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLinkLayerInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(macAddress), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, macAddress, type);
}
// Autogenerated method: System.Net.NetworkInformation.UnixNetworkInterface.get_Name
::Il2CppString* System::Net::NetworkInformation::UnixNetworkInterface::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::UnixNetworkInterface::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.UnixNetworkInterface.get_NetworkInterfaceType
System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::UnixNetworkInterface::get_NetworkInterfaceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::UnixNetworkInterface::get_NetworkInterfaceType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NetworkInterfaceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::NetworkInformation::NetworkInterfaceType, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: UnixNetworkInterface::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnixNetworkInterface::*)(::Il2CppString*)>(&UnixNetworkInterface::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnixNetworkInterface*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnixNetworkInterface::*)(::Il2CppString*)>(&UnixNetworkInterface::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnixNetworkInterface*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: UnixNetworkInterface::AddAddress
// Il2CppName: AddAddress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnixNetworkInterface::*)(System::Net::IPAddress*)>(&UnixNetworkInterface::AddAddress)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnixNetworkInterface*), "AddAddress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::IPAddress*>()});
  }
};
// Writing MetadataGetter for method: UnixNetworkInterface::SetLinkLayerInfo
// Il2CppName: SetLinkLayerInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (UnixNetworkInterface::*)(int, ::Array<uint8_t>*, System::Net::NetworkInformation::NetworkInterfaceType)>(&UnixNetworkInterface::SetLinkLayerInfo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnixNetworkInterface*), "SetLinkLayerInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::NetworkInformation::NetworkInterfaceType>()});
  }
};
// Writing MetadataGetter for method: UnixNetworkInterface::get_Name
// Il2CppName: get_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (UnixNetworkInterface::*)()>(&UnixNetworkInterface::get_Name)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnixNetworkInterface*), "get_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: UnixNetworkInterface::get_NetworkInterfaceType
// Il2CppName: get_NetworkInterfaceType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::NetworkInformation::NetworkInterfaceType (UnixNetworkInterface::*)()>(&UnixNetworkInterface::get_NetworkInterfaceType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(UnixNetworkInterface*), "get_NetworkInterfaceType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.NetworkInformation.LinuxNetworkInterface
#include "System/Net/NetworkInformation/LinuxNetworkInterface.hpp"
// Including type: System.Net.NetworkInformation.IPInterfaceProperties
#include "System/Net/NetworkInformation/IPInterfaceProperties.hpp"
// Including type: System.Net.NetworkInformation.OperationalStatus
#include "System/Net/NetworkInformation/OperationalStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.LinuxNetworkInterface.get_IfacePath
::Il2CppString* System::Net::NetworkInformation::LinuxNetworkInterface::get_IfacePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::LinuxNetworkInterface::get_IfacePath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IfacePath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.LinuxNetworkInterface.ReadLine
::Il2CppString* System::Net::NetworkInformation::LinuxNetworkInterface::ReadLine(::Il2CppString* path) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::LinuxNetworkInterface::ReadLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "LinuxNetworkInterface", "ReadLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(path)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path);
}
// Autogenerated method: System.Net.NetworkInformation.LinuxNetworkInterface.GetIPProperties
System::Net::NetworkInformation::IPInterfaceProperties* System::Net::NetworkInformation::LinuxNetworkInterface::GetIPProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::LinuxNetworkInterface::GetIPProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIPProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::NetworkInformation::IPInterfaceProperties*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.LinuxNetworkInterface.get_OperationalStatus
System::Net::NetworkInformation::OperationalStatus System::Net::NetworkInformation::LinuxNetworkInterface::get_OperationalStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::LinuxNetworkInterface::get_OperationalStatus");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OperationalStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::NetworkInformation::OperationalStatus, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: LinuxNetworkInterface::get_IfacePath
// Il2CppName: get_IfacePath
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (LinuxNetworkInterface::*)()>(&LinuxNetworkInterface::get_IfacePath)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LinuxNetworkInterface*), "get_IfacePath", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LinuxNetworkInterface::ReadLine
// Il2CppName: ReadLine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(::Il2CppString*)>(&LinuxNetworkInterface::ReadLine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LinuxNetworkInterface*), "ReadLine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: LinuxNetworkInterface::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LinuxNetworkInterface::*)(::Il2CppString*)>(&LinuxNetworkInterface::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LinuxNetworkInterface*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LinuxNetworkInterface::*)(::Il2CppString*)>(&LinuxNetworkInterface::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LinuxNetworkInterface*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: LinuxNetworkInterface::GetIPProperties
// Il2CppName: GetIPProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::NetworkInformation::IPInterfaceProperties* (LinuxNetworkInterface::*)()>(&LinuxNetworkInterface::GetIPProperties)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LinuxNetworkInterface*), "GetIPProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LinuxNetworkInterface::get_OperationalStatus
// Il2CppName: get_OperationalStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::NetworkInformation::OperationalStatus (LinuxNetworkInterface::*)()>(&LinuxNetworkInterface::get_OperationalStatus)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LinuxNetworkInterface*), "get_OperationalStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.NetworkInformation.MacOsNetworkInterface
#include "System/Net/NetworkInformation/MacOsNetworkInterface.hpp"
// Including type: System.Net.NetworkInformation.IPInterfaceProperties
#include "System/Net/NetworkInformation/IPInterfaceProperties.hpp"
// Including type: System.Net.NetworkInformation.OperationalStatus
#include "System/Net/NetworkInformation/OperationalStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.MacOsNetworkInterface.GetIPProperties
System::Net::NetworkInformation::IPInterfaceProperties* System::Net::NetworkInformation::MacOsNetworkInterface::GetIPProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::MacOsNetworkInterface::GetIPProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIPProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::NetworkInformation::IPInterfaceProperties*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.MacOsNetworkInterface.get_OperationalStatus
System::Net::NetworkInformation::OperationalStatus System::Net::NetworkInformation::MacOsNetworkInterface::get_OperationalStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::MacOsNetworkInterface::get_OperationalStatus");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OperationalStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::NetworkInformation::OperationalStatus, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MacOsNetworkInterface::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MacOsNetworkInterface::*)(::Il2CppString*, uint)>(&MacOsNetworkInterface::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MacOsNetworkInterface*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MacOsNetworkInterface::*)(::Il2CppString*, uint)>(&MacOsNetworkInterface::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MacOsNetworkInterface*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: MacOsNetworkInterface::GetIPProperties
// Il2CppName: GetIPProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::NetworkInformation::IPInterfaceProperties* (MacOsNetworkInterface::*)()>(&MacOsNetworkInterface::GetIPProperties)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MacOsNetworkInterface*), "GetIPProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MacOsNetworkInterface::get_OperationalStatus
// Il2CppName: get_OperationalStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::NetworkInformation::OperationalStatus (MacOsNetworkInterface::*)()>(&MacOsNetworkInterface::get_OperationalStatus)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MacOsNetworkInterface*), "get_OperationalStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.NetworkInformation.Win32NetworkInterface2
#include "System/Net/NetworkInformation/Win32NetworkInterface2.hpp"
// Including type: System.Net.NetworkInformation.Win32IPv4InterfaceStatistics
#include "System/Net/NetworkInformation/Win32IPv4InterfaceStatistics.hpp"
// Including type: System.Net.NetworkInformation.IPInterfaceProperties
#include "System/Net/NetworkInformation/IPInterfaceProperties.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.Win32NetworkInterface2.GetIfEntry
int System::Net::NetworkInformation::Win32NetworkInterface2::GetIfEntry(System::Net::NetworkInformation::Win32_MIB_IFROW& row) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::Win32NetworkInterface2::GetIfEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "Win32NetworkInterface2", "GetIfEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, row);
}
// Autogenerated method: System.Net.NetworkInformation.Win32NetworkInterface2.GetIPProperties
System::Net::NetworkInformation::IPInterfaceProperties* System::Net::NetworkInformation::Win32NetworkInterface2::GetIPProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::Win32NetworkInterface2::GetIPProperties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIPProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::NetworkInformation::IPInterfaceProperties*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.Win32NetworkInterface2.get_Name
::Il2CppString* System::Net::NetworkInformation::Win32NetworkInterface2::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::Win32NetworkInterface2::get_Name");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.Win32NetworkInterface2.get_NetworkInterfaceType
System::Net::NetworkInformation::NetworkInterfaceType System::Net::NetworkInformation::Win32NetworkInterface2::get_NetworkInterfaceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::Win32NetworkInterface2::get_NetworkInterfaceType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NetworkInterfaceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::NetworkInformation::NetworkInterfaceType, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.NetworkInformation.Win32NetworkInterface2.get_OperationalStatus
System::Net::NetworkInformation::OperationalStatus System::Net::NetworkInformation::Win32NetworkInterface2::get_OperationalStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::Win32NetworkInterface2::get_OperationalStatus");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OperationalStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::NetworkInformation::OperationalStatus, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: Win32NetworkInterface2::GetIfEntry
// Il2CppName: GetIfEntry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::Net::NetworkInformation::Win32_MIB_IFROW&)>(&Win32NetworkInterface2::GetIfEntry)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Win32NetworkInterface2*), "GetIfEntry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::NetworkInformation::Win32_MIB_IFROW&>()});
  }
};
// Writing MetadataGetter for method: Win32NetworkInterface2::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Win32NetworkInterface2::*)(System::Net::NetworkInformation::Win32_IP_ADAPTER_ADDRESSES)>(&Win32NetworkInterface2::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Win32NetworkInterface2*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::NetworkInformation::Win32_IP_ADAPTER_ADDRESSES>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Win32NetworkInterface2::*)(System::Net::NetworkInformation::Win32_IP_ADAPTER_ADDRESSES)>(&Win32NetworkInterface2::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Win32NetworkInterface2*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::NetworkInformation::Win32_IP_ADAPTER_ADDRESSES>()});
  }
};
// Writing MetadataGetter for method: Win32NetworkInterface2::GetIPProperties
// Il2CppName: GetIPProperties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::NetworkInformation::IPInterfaceProperties* (Win32NetworkInterface2::*)()>(&Win32NetworkInterface2::GetIPProperties)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Win32NetworkInterface2*), "GetIPProperties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Win32NetworkInterface2::get_Name
// Il2CppName: get_Name
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Win32NetworkInterface2::*)()>(&Win32NetworkInterface2::get_Name)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Win32NetworkInterface2*), "get_Name", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Win32NetworkInterface2::get_NetworkInterfaceType
// Il2CppName: get_NetworkInterfaceType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::NetworkInformation::NetworkInterfaceType (Win32NetworkInterface2::*)()>(&Win32NetworkInterface2::get_NetworkInterfaceType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Win32NetworkInterface2*), "get_NetworkInterfaceType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Win32NetworkInterface2::get_OperationalStatus
// Il2CppName: get_OperationalStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::NetworkInformation::OperationalStatus (Win32NetworkInterface2::*)()>(&Win32NetworkInterface2::get_OperationalStatus)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Win32NetworkInterface2*), "get_OperationalStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.Win32UnicastIPAddressInformation
#include "System/Net/NetworkInformation/Win32UnicastIPAddressInformation.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
// Including type: System.Net.Sockets.AddressFamily
#include "System/Net/Sockets/AddressFamily.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.Win32UnicastIPAddressInformation.PrefixLengthToSubnetMask
System::Net::IPAddress* System::Net::NetworkInformation::Win32UnicastIPAddressInformation::PrefixLengthToSubnetMask(uint8_t prefixLength, System::Net::Sockets::AddressFamily family) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::Win32UnicastIPAddressInformation::PrefixLengthToSubnetMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "Win32UnicastIPAddressInformation", "PrefixLengthToSubnetMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prefixLength), ::il2cpp_utils::ExtractType(family)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::IPAddress*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, prefixLength, family);
}
// Autogenerated method: System.Net.NetworkInformation.Win32UnicastIPAddressInformation.get_Address
System::Net::IPAddress* System::Net::NetworkInformation::Win32UnicastIPAddressInformation::get_Address() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::Win32UnicastIPAddressInformation::get_Address");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Address", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::IPAddress*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: Win32UnicastIPAddressInformation::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Win32UnicastIPAddressInformation::*)(System::Net::NetworkInformation::Win32_IP_ADAPTER_UNICAST_ADDRESS)>(&Win32UnicastIPAddressInformation::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Win32UnicastIPAddressInformation*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::NetworkInformation::Win32_IP_ADAPTER_UNICAST_ADDRESS>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Win32UnicastIPAddressInformation::*)(System::Net::NetworkInformation::Win32_IP_ADAPTER_UNICAST_ADDRESS)>(&Win32UnicastIPAddressInformation::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Win32UnicastIPAddressInformation*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::NetworkInformation::Win32_IP_ADAPTER_UNICAST_ADDRESS>()});
  }
};
// Writing MetadataGetter for method: Win32UnicastIPAddressInformation::PrefixLengthToSubnetMask
// Il2CppName: PrefixLengthToSubnetMask
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::IPAddress* (*)(uint8_t, System::Net::Sockets::AddressFamily)>(&Win32UnicastIPAddressInformation::PrefixLengthToSubnetMask)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Win32UnicastIPAddressInformation*), "PrefixLengthToSubnetMask", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Sockets::AddressFamily>()});
  }
};
// Writing MetadataGetter for method: Win32UnicastIPAddressInformation::get_Address
// Il2CppName: get_Address
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::IPAddress* (Win32UnicastIPAddressInformation::*)()>(&Win32UnicastIPAddressInformation::get_Address)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Win32UnicastIPAddressInformation*), "get_Address", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.LinuxUnicastIPAddressInformation
#include "System/Net/NetworkInformation/LinuxUnicastIPAddressInformation.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.LinuxUnicastIPAddressInformation.get_Address
System::Net::IPAddress* System::Net::NetworkInformation::LinuxUnicastIPAddressInformation::get_Address() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::LinuxUnicastIPAddressInformation::get_Address");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Address", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::IPAddress*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: LinuxUnicastIPAddressInformation::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LinuxUnicastIPAddressInformation::*)(System::Net::IPAddress*)>(&LinuxUnicastIPAddressInformation::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LinuxUnicastIPAddressInformation*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::IPAddress*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LinuxUnicastIPAddressInformation::*)(System::Net::IPAddress*)>(&LinuxUnicastIPAddressInformation::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LinuxUnicastIPAddressInformation*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::IPAddress*>()});
  }
};
// Writing MetadataGetter for method: LinuxUnicastIPAddressInformation::get_Address
// Il2CppName: get_Address
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::IPAddress* (LinuxUnicastIPAddressInformation::*)()>(&LinuxUnicastIPAddressInformation::get_Address)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LinuxUnicastIPAddressInformation*), "get_Address", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.Win32NetworkInterface
#include "System/Net/NetworkInformation/Win32NetworkInterface.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Net.NetworkInformation.Win32_FIXED_INFO fixedInfo
System::Net::NetworkInformation::Win32_FIXED_INFO System::Net::NetworkInformation::Win32NetworkInterface::_get_fixedInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::Win32NetworkInterface::_get_fixedInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::NetworkInformation::Win32_FIXED_INFO>("System.Net.NetworkInformation", "Win32NetworkInterface", "fixedInfo"));
}
// Autogenerated static field setter
// Set static field: static private System.Net.NetworkInformation.Win32_FIXED_INFO fixedInfo
void System::Net::NetworkInformation::Win32NetworkInterface::_set_fixedInfo(System::Net::NetworkInformation::Win32_FIXED_INFO value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::Win32NetworkInterface::_set_fixedInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "Win32NetworkInterface", "fixedInfo", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean initialized
bool System::Net::NetworkInformation::Win32NetworkInterface::_get_initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::Win32NetworkInterface::_get_initialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System.Net.NetworkInformation", "Win32NetworkInterface", "initialized"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean initialized
void System::Net::NetworkInformation::Win32NetworkInterface::_set_initialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::Win32NetworkInterface::_set_initialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.NetworkInformation", "Win32NetworkInterface", "initialized", value));
}
// Autogenerated method: System.Net.NetworkInformation.Win32NetworkInterface.GetNetworkParams
int System::Net::NetworkInformation::Win32NetworkInterface::GetNetworkParams(System::IntPtr ptr, int& size) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::Win32NetworkInterface::GetNetworkParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "Win32NetworkInterface", "GetNetworkParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr), ::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ptr, size);
}
// Autogenerated method: System.Net.NetworkInformation.Win32NetworkInterface.get_FixedInfo
System::Net::NetworkInformation::Win32_FIXED_INFO System::Net::NetworkInformation::Win32NetworkInterface::get_FixedInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::Win32NetworkInterface::get_FixedInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.NetworkInformation", "Win32NetworkInterface", "get_FixedInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::NetworkInformation::Win32_FIXED_INFO, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: Win32NetworkInterface::GetNetworkParams
// Il2CppName: GetNetworkParams
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(System::IntPtr, int&)>(&Win32NetworkInterface::GetNetworkParams)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Win32NetworkInterface*), "GetNetworkParams", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: Win32NetworkInterface::get_FixedInfo
// Il2CppName: get_FixedInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::NetworkInformation::Win32_FIXED_INFO (*)()>(&Win32NetworkInterface::get_FixedInfo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Win32NetworkInterface*), "get_FixedInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.NetworkInformation.Win32_SOCKET_ADDRESS
#include "System/Net/NetworkInformation/Win32_SOCKET_ADDRESS.hpp"
// Including type: System.Net.IPAddress
#include "System/Net/IPAddress.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.Win32_SOCKET_ADDRESS.GetIPAddress
System::Net::IPAddress* System::Net::NetworkInformation::Win32_SOCKET_ADDRESS::GetIPAddress() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::Win32_SOCKET_ADDRESS::GetIPAddress");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetIPAddress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::IPAddress*, false>(*this, ___internal__method);
}
// Writing MetadataGetter for method: Win32_SOCKET_ADDRESS::GetIPAddress
// Il2CppName: GetIPAddress
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::IPAddress* (Win32_SOCKET_ADDRESS::*)()>(&Win32_SOCKET_ADDRESS::GetIPAddress)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Win32_SOCKET_ADDRESS), "GetIPAddress", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.NetworkInformation.MacOsStructs.sockaddr_dl
#include "System/Net/NetworkInformation/MacOsStructs/sockaddr_dl.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.NetworkInformation.MacOsStructs.sockaddr_dl.Read
void System::Net::NetworkInformation::MacOsStructs::sockaddr_dl::Read(System::IntPtr ptr) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::NetworkInformation::MacOsStructs::sockaddr_dl::Read");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ptr)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, ptr);
}
// Writing MetadataGetter for method: sockaddr_dl::Read
// Il2CppName: Read
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (sockaddr_dl::*)(System::IntPtr)>(&sockaddr_dl::Read)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(sockaddr_dl), "Read", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IntPtr>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Configuration.DefaultProxySectionInternal
#include "System/Net/Configuration/DefaultProxySectionInternal.hpp"
// Including type: System.Net.IWebProxy
#include "System/Net/IWebProxy.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Object classSyncObject
::Il2CppObject* System::Net::Configuration::DefaultProxySectionInternal::_get_classSyncObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::DefaultProxySectionInternal::_get_classSyncObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System.Net.Configuration", "DefaultProxySectionInternal", "classSyncObject"));
}
// Autogenerated static field setter
// Set static field: static private System.Object classSyncObject
void System::Net::Configuration::DefaultProxySectionInternal::_set_classSyncObject(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::DefaultProxySectionInternal::_set_classSyncObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Configuration", "DefaultProxySectionInternal", "classSyncObject", value));
}
// Autogenerated method: System.Net.Configuration.DefaultProxySectionInternal.GetDefaultProxy_UsingOldMonoCode
System::Net::IWebProxy* System::Net::Configuration::DefaultProxySectionInternal::GetDefaultProxy_UsingOldMonoCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::DefaultProxySectionInternal::GetDefaultProxy_UsingOldMonoCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Configuration", "DefaultProxySectionInternal", "GetDefaultProxy_UsingOldMonoCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::IWebProxy*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Configuration.DefaultProxySectionInternal.GetSystemWebProxy
System::Net::IWebProxy* System::Net::Configuration::DefaultProxySectionInternal::GetSystemWebProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::DefaultProxySectionInternal::GetSystemWebProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Configuration", "DefaultProxySectionInternal", "GetSystemWebProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::IWebProxy*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Configuration.DefaultProxySectionInternal.get_ClassSyncObject
::Il2CppObject* System::Net::Configuration::DefaultProxySectionInternal::get_ClassSyncObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::DefaultProxySectionInternal::get_ClassSyncObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Configuration", "DefaultProxySectionInternal", "get_ClassSyncObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Configuration.DefaultProxySectionInternal.GetSection
System::Net::Configuration::DefaultProxySectionInternal* System::Net::Configuration::DefaultProxySectionInternal::GetSection() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::DefaultProxySectionInternal::GetSection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Configuration", "DefaultProxySectionInternal", "GetSection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Configuration::DefaultProxySectionInternal*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Configuration.DefaultProxySectionInternal.get_WebProxy
System::Net::IWebProxy* System::Net::Configuration::DefaultProxySectionInternal::get_WebProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::DefaultProxySectionInternal::get_WebProxy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_WebProxy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::IWebProxy*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: DefaultProxySectionInternal::GetDefaultProxy_UsingOldMonoCode
// Il2CppName: GetDefaultProxy_UsingOldMonoCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::IWebProxy* (*)()>(&DefaultProxySectionInternal::GetDefaultProxy_UsingOldMonoCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultProxySectionInternal*), "GetDefaultProxy_UsingOldMonoCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DefaultProxySectionInternal::GetSystemWebProxy
// Il2CppName: GetSystemWebProxy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::IWebProxy* (*)()>(&DefaultProxySectionInternal::GetSystemWebProxy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultProxySectionInternal*), "GetSystemWebProxy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DefaultProxySectionInternal::get_ClassSyncObject
// Il2CppName: get_ClassSyncObject
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (*)()>(&DefaultProxySectionInternal::get_ClassSyncObject)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultProxySectionInternal*), "get_ClassSyncObject", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DefaultProxySectionInternal::GetSection
// Il2CppName: GetSection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::Configuration::DefaultProxySectionInternal* (*)()>(&DefaultProxySectionInternal::GetSection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultProxySectionInternal*), "GetSection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DefaultProxySectionInternal::get_WebProxy
// Il2CppName: get_WebProxy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::IWebProxy* (DefaultProxySectionInternal::*)()>(&DefaultProxySectionInternal::get_WebProxy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultProxySectionInternal*), "get_WebProxy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DefaultProxySectionInternal::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DefaultProxySectionInternal::*)()>(&DefaultProxySectionInternal::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultProxySectionInternal*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DefaultProxySectionInternal::*)()>(&DefaultProxySectionInternal::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultProxySectionInternal*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.UnicodeDecodingConformance
#include "System/Net/Configuration/UnicodeDecodingConformance.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Configuration.UnicodeDecodingConformance Auto
System::Net::Configuration::UnicodeDecodingConformance System::Net::Configuration::UnicodeDecodingConformance::_get_Auto() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::UnicodeDecodingConformance::_get_Auto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Configuration::UnicodeDecodingConformance>("System.Net.Configuration", "UnicodeDecodingConformance", "Auto"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Configuration.UnicodeDecodingConformance Auto
void System::Net::Configuration::UnicodeDecodingConformance::_set_Auto(System::Net::Configuration::UnicodeDecodingConformance value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::UnicodeDecodingConformance::_set_Auto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Configuration", "UnicodeDecodingConformance", "Auto", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Configuration.UnicodeDecodingConformance Strict
System::Net::Configuration::UnicodeDecodingConformance System::Net::Configuration::UnicodeDecodingConformance::_get_Strict() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::UnicodeDecodingConformance::_get_Strict");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Configuration::UnicodeDecodingConformance>("System.Net.Configuration", "UnicodeDecodingConformance", "Strict"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Configuration.UnicodeDecodingConformance Strict
void System::Net::Configuration::UnicodeDecodingConformance::_set_Strict(System::Net::Configuration::UnicodeDecodingConformance value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::UnicodeDecodingConformance::_set_Strict");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Configuration", "UnicodeDecodingConformance", "Strict", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Configuration.UnicodeDecodingConformance Compat
System::Net::Configuration::UnicodeDecodingConformance System::Net::Configuration::UnicodeDecodingConformance::_get_Compat() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::UnicodeDecodingConformance::_get_Compat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Configuration::UnicodeDecodingConformance>("System.Net.Configuration", "UnicodeDecodingConformance", "Compat"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Configuration.UnicodeDecodingConformance Compat
void System::Net::Configuration::UnicodeDecodingConformance::_set_Compat(System::Net::Configuration::UnicodeDecodingConformance value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::UnicodeDecodingConformance::_set_Compat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Configuration", "UnicodeDecodingConformance", "Compat", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Configuration.UnicodeDecodingConformance Loose
System::Net::Configuration::UnicodeDecodingConformance System::Net::Configuration::UnicodeDecodingConformance::_get_Loose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::UnicodeDecodingConformance::_get_Loose");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Configuration::UnicodeDecodingConformance>("System.Net.Configuration", "UnicodeDecodingConformance", "Loose"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Configuration.UnicodeDecodingConformance Loose
void System::Net::Configuration::UnicodeDecodingConformance::_set_Loose(System::Net::Configuration::UnicodeDecodingConformance value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::UnicodeDecodingConformance::_set_Loose");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Configuration", "UnicodeDecodingConformance", "Loose", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.UnicodeEncodingConformance
#include "System/Net/Configuration/UnicodeEncodingConformance.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Configuration.UnicodeEncodingConformance Auto
System::Net::Configuration::UnicodeEncodingConformance System::Net::Configuration::UnicodeEncodingConformance::_get_Auto() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::UnicodeEncodingConformance::_get_Auto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Configuration::UnicodeEncodingConformance>("System.Net.Configuration", "UnicodeEncodingConformance", "Auto"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Configuration.UnicodeEncodingConformance Auto
void System::Net::Configuration::UnicodeEncodingConformance::_set_Auto(System::Net::Configuration::UnicodeEncodingConformance value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::UnicodeEncodingConformance::_set_Auto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Configuration", "UnicodeEncodingConformance", "Auto", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Configuration.UnicodeEncodingConformance Strict
System::Net::Configuration::UnicodeEncodingConformance System::Net::Configuration::UnicodeEncodingConformance::_get_Strict() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::UnicodeEncodingConformance::_get_Strict");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Configuration::UnicodeEncodingConformance>("System.Net.Configuration", "UnicodeEncodingConformance", "Strict"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Configuration.UnicodeEncodingConformance Strict
void System::Net::Configuration::UnicodeEncodingConformance::_set_Strict(System::Net::Configuration::UnicodeEncodingConformance value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::UnicodeEncodingConformance::_set_Strict");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Configuration", "UnicodeEncodingConformance", "Strict", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Configuration.UnicodeEncodingConformance Compat
System::Net::Configuration::UnicodeEncodingConformance System::Net::Configuration::UnicodeEncodingConformance::_get_Compat() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::UnicodeEncodingConformance::_get_Compat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Configuration::UnicodeEncodingConformance>("System.Net.Configuration", "UnicodeEncodingConformance", "Compat"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Configuration.UnicodeEncodingConformance Compat
void System::Net::Configuration::UnicodeEncodingConformance::_set_Compat(System::Net::Configuration::UnicodeEncodingConformance value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::UnicodeEncodingConformance::_set_Compat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Configuration", "UnicodeEncodingConformance", "Compat", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.SettingsSectionInternal
#include "System/Net/Configuration/SettingsSectionInternal.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Configuration.SettingsSectionInternal instance
System::Net::Configuration::SettingsSectionInternal* System::Net::Configuration::SettingsSectionInternal::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::SettingsSectionInternal::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Configuration::SettingsSectionInternal*>("System.Net.Configuration", "SettingsSectionInternal", "instance"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Configuration.SettingsSectionInternal instance
void System::Net::Configuration::SettingsSectionInternal::_set_instance(System::Net::Configuration::SettingsSectionInternal* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::SettingsSectionInternal::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Configuration", "SettingsSectionInternal", "instance", value));
}
// Autogenerated method: System.Net.Configuration.SettingsSectionInternal.get_Section
System::Net::Configuration::SettingsSectionInternal* System::Net::Configuration::SettingsSectionInternal::get_Section() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::SettingsSectionInternal::get_Section");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Configuration", "SettingsSectionInternal", "get_Section", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Configuration::SettingsSectionInternal*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Configuration.SettingsSectionInternal.get_Ipv6Enabled
bool System::Net::Configuration::SettingsSectionInternal::get_Ipv6Enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::SettingsSectionInternal::get_Ipv6Enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Ipv6Enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Configuration.SettingsSectionInternal..cctor
void System::Net::Configuration::SettingsSectionInternal::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::SettingsSectionInternal::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Configuration", "SettingsSectionInternal", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: SettingsSectionInternal::get_Section
// Il2CppName: get_Section
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::Configuration::SettingsSectionInternal* (*)()>(&SettingsSectionInternal::get_Section)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SettingsSectionInternal*), "get_Section", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SettingsSectionInternal::get_Ipv6Enabled
// Il2CppName: get_Ipv6Enabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (SettingsSectionInternal::*)()>(&SettingsSectionInternal::get_Ipv6Enabled)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SettingsSectionInternal*), "get_Ipv6Enabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SettingsSectionInternal::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&SettingsSectionInternal::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SettingsSectionInternal*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SettingsSectionInternal::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SettingsSectionInternal::*)()>(&SettingsSectionInternal::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SettingsSectionInternal*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SettingsSectionInternal::*)()>(&SettingsSectionInternal::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SettingsSectionInternal*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.HybridDictionary
#include "System/Collections/Specialized/HybridDictionary.hpp"
// Including type: System.Collections.Specialized.ListDictionary
#include "System/Collections/Specialized/ListDictionary.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Specialized.HybridDictionary.get_Item
::Il2CppObject* System::Collections::Specialized::HybridDictionary::get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::HybridDictionary::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.set_Item
void System::Collections::Specialized::HybridDictionary::set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::HybridDictionary::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.get_List
System::Collections::Specialized::ListDictionary* System::Collections::Specialized::HybridDictionary::get_List() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::HybridDictionary::get_List");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_List", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Specialized::ListDictionary*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.ChangeOver
void System::Collections::Specialized::HybridDictionary::ChangeOver() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::HybridDictionary::ChangeOver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeOver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.get_Count
int System::Collections::Specialized::HybridDictionary::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::HybridDictionary::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.get_Keys
System::Collections::ICollection* System::Collections::Specialized::HybridDictionary::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::HybridDictionary::get_Keys");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Keys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.get_Values
System::Collections::ICollection* System::Collections::Specialized::HybridDictionary::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::HybridDictionary::get_Values");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.Add
void System::Collections::Specialized::HybridDictionary::Add(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::HybridDictionary::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.Contains
bool System::Collections::Specialized::HybridDictionary::Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::HybridDictionary::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.CopyTo
void System::Collections::Specialized::HybridDictionary::CopyTo(System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::HybridDictionary::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.GetEnumerator
System::Collections::IDictionaryEnumerator* System::Collections::Specialized::HybridDictionary::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::HybridDictionary::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.HybridDictionary.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* System::Collections::Specialized::HybridDictionary::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::HybridDictionary::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: HybridDictionary::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (HybridDictionary::*)(::Il2CppObject*)>(&HybridDictionary::get_Item)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HybridDictionary*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: HybridDictionary::set_Item
// Il2CppName: set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HybridDictionary::*)(::Il2CppObject*, ::Il2CppObject*)>(&HybridDictionary::set_Item)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HybridDictionary*), "set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: HybridDictionary::get_List
// Il2CppName: get_List
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Specialized::ListDictionary* (HybridDictionary::*)()>(&HybridDictionary::get_List)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HybridDictionary*), "get_List", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HybridDictionary::ChangeOver
// Il2CppName: ChangeOver
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HybridDictionary::*)()>(&HybridDictionary::ChangeOver)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HybridDictionary*), "ChangeOver", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HybridDictionary::get_Count
// Il2CppName: get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (HybridDictionary::*)()>(&HybridDictionary::get_Count)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HybridDictionary*), "get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HybridDictionary::get_Keys
// Il2CppName: get_Keys
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::ICollection* (HybridDictionary::*)()>(&HybridDictionary::get_Keys)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HybridDictionary*), "get_Keys", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HybridDictionary::get_Values
// Il2CppName: get_Values
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::ICollection* (HybridDictionary::*)()>(&HybridDictionary::get_Values)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HybridDictionary*), "get_Values", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HybridDictionary::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HybridDictionary::*)(::Il2CppObject*, ::Il2CppObject*)>(&HybridDictionary::Add)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HybridDictionary*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: HybridDictionary::Contains
// Il2CppName: Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HybridDictionary::*)(::Il2CppObject*)>(&HybridDictionary::Contains)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HybridDictionary*), "Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: HybridDictionary::CopyTo
// Il2CppName: CopyTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HybridDictionary::*)(System::Array*, int)>(&HybridDictionary::CopyTo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HybridDictionary*), "CopyTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Array*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: HybridDictionary::GetEnumerator
// Il2CppName: GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IDictionaryEnumerator* (HybridDictionary::*)()>(&HybridDictionary::GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HybridDictionary*), "GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HybridDictionary::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (HybridDictionary::*)()>(&HybridDictionary::System_Collections_IEnumerable_GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HybridDictionary*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HybridDictionary::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HybridDictionary::*)()>(&HybridDictionary::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HybridDictionary*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HybridDictionary::*)()>(&HybridDictionary::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HybridDictionary*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.ListDictionary
#include "System/Collections/Specialized/ListDictionary.hpp"
// Including type: System.Collections.Specialized.ListDictionary/NodeEnumerator
#include "System/Collections/Specialized/ListDictionary_NodeEnumerator.hpp"
// Including type: System.Collections.Specialized.ListDictionary/NodeKeyValueCollection
#include "System/Collections/Specialized/ListDictionary_NodeKeyValueCollection.hpp"
// Including type: System.Collections.Specialized.ListDictionary/DictionaryNode
#include "System/Collections/Specialized/ListDictionary_DictionaryNode.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
// Including type: System.Collections.ICollection
#include "System/Collections/ICollection.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Specialized.ListDictionary.get_Item
::Il2CppObject* System::Collections::Specialized::ListDictionary::get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary.set_Item
void System::Collections::Specialized::ListDictionary::set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary.get_Count
int System::Collections::Specialized::ListDictionary::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary.get_Keys
System::Collections::ICollection* System::Collections::Specialized::ListDictionary::get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::get_Keys");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Keys", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary.get_Values
System::Collections::ICollection* System::Collections::Specialized::ListDictionary::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::get_Values");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary.Add
void System::Collections::Specialized::ListDictionary::Add(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary.Contains
bool System::Collections::Specialized::ListDictionary::Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary.CopyTo
void System::Collections::Specialized::ListDictionary::CopyTo(System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary.GetEnumerator
System::Collections::IDictionaryEnumerator* System::Collections::Specialized::ListDictionary::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* System::Collections::Specialized::ListDictionary::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: ListDictionary::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ListDictionary::*)(System::Collections::IComparer*)>(&ListDictionary::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListDictionary*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::IComparer*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ListDictionary::*)(System::Collections::IComparer*)>(&ListDictionary::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListDictionary*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::IComparer*>()});
  }
};
// Writing MetadataGetter for method: ListDictionary::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ListDictionary::*)(::Il2CppObject*)>(&ListDictionary::get_Item)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListDictionary*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: ListDictionary::set_Item
// Il2CppName: set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ListDictionary::*)(::Il2CppObject*, ::Il2CppObject*)>(&ListDictionary::set_Item)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListDictionary*), "set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: ListDictionary::get_Count
// Il2CppName: get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ListDictionary::*)()>(&ListDictionary::get_Count)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListDictionary*), "get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ListDictionary::get_Keys
// Il2CppName: get_Keys
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::ICollection* (ListDictionary::*)()>(&ListDictionary::get_Keys)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListDictionary*), "get_Keys", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ListDictionary::get_Values
// Il2CppName: get_Values
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::ICollection* (ListDictionary::*)()>(&ListDictionary::get_Values)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListDictionary*), "get_Values", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ListDictionary::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ListDictionary::*)(::Il2CppObject*, ::Il2CppObject*)>(&ListDictionary::Add)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListDictionary*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: ListDictionary::Contains
// Il2CppName: Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ListDictionary::*)(::Il2CppObject*)>(&ListDictionary::Contains)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListDictionary*), "Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: ListDictionary::CopyTo
// Il2CppName: CopyTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ListDictionary::*)(System::Array*, int)>(&ListDictionary::CopyTo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListDictionary*), "CopyTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Array*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ListDictionary::GetEnumerator
// Il2CppName: GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IDictionaryEnumerator* (ListDictionary::*)()>(&ListDictionary::GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListDictionary*), "GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ListDictionary::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (ListDictionary::*)()>(&ListDictionary::System_Collections_IEnumerable_GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListDictionary*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ListDictionary::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ListDictionary::*)()>(&ListDictionary::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListDictionary*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ListDictionary::*)()>(&ListDictionary::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListDictionary*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.ListDictionary/NodeEnumerator
#include "System/Collections/Specialized/ListDictionary_NodeEnumerator.hpp"
// Including type: System.Collections.DictionaryEntry
#include "System/Collections/DictionaryEntry.hpp"
// Including type: System.Collections.Specialized.ListDictionary/DictionaryNode
#include "System/Collections/Specialized/ListDictionary_DictionaryNode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Specialized.ListDictionary/NodeEnumerator.get_Current
::Il2CppObject* System::Collections::Specialized::ListDictionary::NodeEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::NodeEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary/NodeEnumerator.get_Entry
System::Collections::DictionaryEntry System::Collections::Specialized::ListDictionary::NodeEnumerator::get_Entry() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::NodeEnumerator::get_Entry");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Entry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::DictionaryEntry, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary/NodeEnumerator.get_Key
::Il2CppObject* System::Collections::Specialized::ListDictionary::NodeEnumerator::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::NodeEnumerator::get_Key");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Key", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary/NodeEnumerator.get_Value
::Il2CppObject* System::Collections::Specialized::ListDictionary::NodeEnumerator::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::NodeEnumerator::get_Value");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary/NodeEnumerator.MoveNext
bool System::Collections::Specialized::ListDictionary::NodeEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::NodeEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary/NodeEnumerator.Reset
void System::Collections::Specialized::ListDictionary::NodeEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::NodeEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: ListDictionary::NodeEnumerator::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ListDictionary::NodeEnumerator::*)(System::Collections::Specialized::ListDictionary*)>(&ListDictionary::NodeEnumerator::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListDictionary::NodeEnumerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Specialized::ListDictionary*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ListDictionary::NodeEnumerator::*)(System::Collections::Specialized::ListDictionary*)>(&ListDictionary::NodeEnumerator::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListDictionary::NodeEnumerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Specialized::ListDictionary*>()});
  }
};
// Writing MetadataGetter for method: ListDictionary::NodeEnumerator::get_Current
// Il2CppName: get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ListDictionary::NodeEnumerator::*)()>(&ListDictionary::NodeEnumerator::get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListDictionary::NodeEnumerator*), "get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ListDictionary::NodeEnumerator::get_Entry
// Il2CppName: get_Entry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::DictionaryEntry (ListDictionary::NodeEnumerator::*)()>(&ListDictionary::NodeEnumerator::get_Entry)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListDictionary::NodeEnumerator*), "get_Entry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ListDictionary::NodeEnumerator::get_Key
// Il2CppName: get_Key
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ListDictionary::NodeEnumerator::*)()>(&ListDictionary::NodeEnumerator::get_Key)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListDictionary::NodeEnumerator*), "get_Key", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ListDictionary::NodeEnumerator::get_Value
// Il2CppName: get_Value
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ListDictionary::NodeEnumerator::*)()>(&ListDictionary::NodeEnumerator::get_Value)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListDictionary::NodeEnumerator*), "get_Value", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ListDictionary::NodeEnumerator::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ListDictionary::NodeEnumerator::*)()>(&ListDictionary::NodeEnumerator::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListDictionary::NodeEnumerator*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ListDictionary::NodeEnumerator::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ListDictionary::NodeEnumerator::*)()>(&ListDictionary::NodeEnumerator::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListDictionary::NodeEnumerator*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Specialized.ListDictionary/NodeKeyValueCollection
#include "System/Collections/Specialized/ListDictionary_NodeKeyValueCollection.hpp"
// Including type: System.Collections.Specialized.ListDictionary/NodeKeyValueCollection/NodeKeyValueEnumerator
#include "System/Collections/Specialized/ListDictionary_NodeKeyValueCollection_NodeKeyValueEnumerator.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Specialized.ListDictionary/NodeKeyValueCollection.System.Collections.ICollection.CopyTo
void System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::System_Collections_ICollection_CopyTo(System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary/NodeKeyValueCollection.System.Collections.ICollection.get_Count
int System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::System_Collections_ICollection_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::System.Collections.ICollection.get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary/NodeKeyValueCollection.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: ListDictionary::NodeKeyValueCollection::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ListDictionary::NodeKeyValueCollection::*)(System::Collections::Specialized::ListDictionary*, bool)>(&ListDictionary::NodeKeyValueCollection::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListDictionary::NodeKeyValueCollection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Specialized::ListDictionary*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ListDictionary::NodeKeyValueCollection::*)(System::Collections::Specialized::ListDictionary*, bool)>(&ListDictionary::NodeKeyValueCollection::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListDictionary::NodeKeyValueCollection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Specialized::ListDictionary*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ListDictionary::NodeKeyValueCollection::System_Collections_ICollection_CopyTo
// Il2CppName: System.Collections.ICollection.CopyTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ListDictionary::NodeKeyValueCollection::*)(System::Array*, int)>(&ListDictionary::NodeKeyValueCollection::System_Collections_ICollection_CopyTo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListDictionary::NodeKeyValueCollection*), "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Array*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ListDictionary::NodeKeyValueCollection::System_Collections_ICollection_get_Count
// Il2CppName: System.Collections.ICollection.get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ListDictionary::NodeKeyValueCollection::*)()>(&ListDictionary::NodeKeyValueCollection::System_Collections_ICollection_get_Count)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListDictionary::NodeKeyValueCollection*), "System.Collections.ICollection.get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ListDictionary::NodeKeyValueCollection::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (ListDictionary::NodeKeyValueCollection::*)()>(&ListDictionary::NodeKeyValueCollection::System_Collections_IEnumerable_GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListDictionary::NodeKeyValueCollection*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.ListDictionary/NodeKeyValueCollection/NodeKeyValueEnumerator
#include "System/Collections/Specialized/ListDictionary_NodeKeyValueCollection_NodeKeyValueEnumerator.hpp"
// Including type: System.Collections.Specialized.ListDictionary/DictionaryNode
#include "System/Collections/Specialized/ListDictionary_DictionaryNode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Specialized.ListDictionary/NodeKeyValueCollection/NodeKeyValueEnumerator.get_Current
::Il2CppObject* System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary/NodeKeyValueCollection/NodeKeyValueEnumerator.MoveNext
bool System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.ListDictionary/NodeKeyValueCollection/NodeKeyValueEnumerator.Reset
void System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::*)(System::Collections::Specialized::ListDictionary*, bool)>(&ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Specialized::ListDictionary*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::*)(System::Collections::Specialized::ListDictionary*, bool)>(&ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Specialized::ListDictionary*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::get_Current
// Il2CppName: get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::*)()>(&ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator*), "get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::*)()>(&ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::*)()>(&ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListDictionary::NodeKeyValueCollection::NodeKeyValueEnumerator*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.ListDictionary/DictionaryNode
#include "System/Collections/Specialized/ListDictionary_DictionaryNode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: ListDictionary::DictionaryNode::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ListDictionary::DictionaryNode::*)()>(&ListDictionary::DictionaryNode::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListDictionary::DictionaryNode*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ListDictionary::DictionaryNode::*)()>(&ListDictionary::DictionaryNode::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ListDictionary::DictionaryNode*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.NameObjectCollectionBase
#include "System/Collections/Specialized/NameObjectCollectionBase.hpp"
// Including type: System.Collections.Specialized.NameObjectCollectionBase/NameObjectEntry
#include "System/Collections/Specialized/NameObjectCollectionBase_NameObjectEntry.hpp"
// Including type: System.Collections.Specialized.NameObjectCollectionBase/NameObjectKeysEnumerator
#include "System/Collections/Specialized/NameObjectCollectionBase_NameObjectKeysEnumerator.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Collections.IEqualityComparer
#include "System/Collections/IEqualityComparer.hpp"
// Including type: System.Collections.Hashtable
#include "System/Collections/Hashtable.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.StringComparer
#include "System/StringComparer.hpp"
// Including type: System.DBNull
#include "System/DBNull.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Array
#include "System/Array.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.StringComparer defaultComparer
System::StringComparer* System::Collections::Specialized::NameObjectCollectionBase::_get_defaultComparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::_get_defaultComparer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::StringComparer*>("System.Collections.Specialized", "NameObjectCollectionBase", "defaultComparer"));
}
// Autogenerated static field setter
// Set static field: static private System.StringComparer defaultComparer
void System::Collections::Specialized::NameObjectCollectionBase::_set_defaultComparer(System::StringComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::_set_defaultComparer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Specialized", "NameObjectCollectionBase", "defaultComparer", value));
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.GetObjectData
void System::Collections::Specialized::NameObjectCollectionBase::GetObjectData(System::Runtime::Serialization::SerializationInfo* info, System::Runtime::Serialization::StreamingContext context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::GetObjectData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info), ::il2cpp_utils::ExtractType(context)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, info, context);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.OnDeserialization
void System::Collections::Specialized::NameObjectCollectionBase::OnDeserialization(::Il2CppObject* sender) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::OnDeserialization");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDeserialization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sender)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sender);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.Reset
void System::Collections::Specialized::NameObjectCollectionBase::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.Reset
void System::Collections::Specialized::NameObjectCollectionBase::Reset(int capacity) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(capacity)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, capacity);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.FindEntry
System::Collections::Specialized::NameObjectCollectionBase::NameObjectEntry* System::Collections::Specialized::NameObjectCollectionBase::FindEntry(::Il2CppString* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::FindEntry");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindEntry", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Specialized::NameObjectCollectionBase::NameObjectEntry*, false>(this, ___internal__method, key);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.get_IsReadOnly
bool System::Collections::Specialized::NameObjectCollectionBase::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::get_IsReadOnly");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd
void System::Collections::Specialized::NameObjectCollectionBase::BaseAdd(::Il2CppString* name, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::BaseAdd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BaseAdd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove
void System::Collections::Specialized::NameObjectCollectionBase::BaseRemove(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::BaseRemove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BaseRemove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.BaseGet
::Il2CppObject* System::Collections::Specialized::NameObjectCollectionBase::BaseGet(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::BaseGet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BaseGet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.BaseSet
void System::Collections::Specialized::NameObjectCollectionBase::BaseSet(::Il2CppString* name, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::BaseSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BaseSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.BaseGet
::Il2CppObject* System::Collections::Specialized::NameObjectCollectionBase::BaseGet(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::BaseGet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BaseGet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey
::Il2CppString* System::Collections::Specialized::NameObjectCollectionBase::BaseGetKey(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::BaseGetKey");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BaseGetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator
System::Collections::IEnumerator* System::Collections::Specialized::NameObjectCollectionBase::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.get_Count
int System::Collections::Specialized::NameObjectCollectionBase::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.CopyTo
void System::Collections::Specialized::NameObjectCollectionBase::System_Collections_ICollection_CopyTo(System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase..cctor
void System::Collections::Specialized::NameObjectCollectionBase::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Specialized", "NameObjectCollectionBase", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: NameObjectCollectionBase::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NameObjectCollectionBase::*)(System::Collections::IEqualityComparer*)>(&NameObjectCollectionBase::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameObjectCollectionBase*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::IEqualityComparer*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NameObjectCollectionBase::*)(System::Collections::IEqualityComparer*)>(&NameObjectCollectionBase::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameObjectCollectionBase*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::IEqualityComparer*>()});
  }
};
// Writing MetadataGetter for method: NameObjectCollectionBase::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NameObjectCollectionBase::*)(int, System::Collections::IEqualityComparer*)>(&NameObjectCollectionBase::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameObjectCollectionBase*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::IEqualityComparer*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NameObjectCollectionBase::*)(int, System::Collections::IEqualityComparer*)>(&NameObjectCollectionBase::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameObjectCollectionBase*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::IEqualityComparer*>()});
  }
};
// Writing MetadataGetter for method: NameObjectCollectionBase::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NameObjectCollectionBase::*)(int)>(&NameObjectCollectionBase::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameObjectCollectionBase*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NameObjectCollectionBase::*)(int)>(&NameObjectCollectionBase::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameObjectCollectionBase*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: NameObjectCollectionBase::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NameObjectCollectionBase::*)(System::DBNull*)>(&NameObjectCollectionBase::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameObjectCollectionBase*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::DBNull*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NameObjectCollectionBase::*)(System::DBNull*)>(&NameObjectCollectionBase::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameObjectCollectionBase*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::DBNull*>()});
  }
};
// Writing MetadataGetter for method: NameObjectCollectionBase::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NameObjectCollectionBase::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&NameObjectCollectionBase::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameObjectCollectionBase*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NameObjectCollectionBase::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&NameObjectCollectionBase::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameObjectCollectionBase*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: NameObjectCollectionBase::GetObjectData
// Il2CppName: GetObjectData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NameObjectCollectionBase::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&NameObjectCollectionBase::GetObjectData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameObjectCollectionBase*), "GetObjectData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Writing MetadataGetter for method: NameObjectCollectionBase::OnDeserialization
// Il2CppName: OnDeserialization
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NameObjectCollectionBase::*)(::Il2CppObject*)>(&NameObjectCollectionBase::OnDeserialization)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameObjectCollectionBase*), "OnDeserialization", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: NameObjectCollectionBase::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NameObjectCollectionBase::*)()>(&NameObjectCollectionBase::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameObjectCollectionBase*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NameObjectCollectionBase::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NameObjectCollectionBase::*)(int)>(&NameObjectCollectionBase::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameObjectCollectionBase*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: NameObjectCollectionBase::FindEntry
// Il2CppName: FindEntry
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Specialized::NameObjectCollectionBase::NameObjectEntry* (NameObjectCollectionBase::*)(::Il2CppString*)>(&NameObjectCollectionBase::FindEntry)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameObjectCollectionBase*), "FindEntry", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: NameObjectCollectionBase::get_IsReadOnly
// Il2CppName: get_IsReadOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (NameObjectCollectionBase::*)()>(&NameObjectCollectionBase::get_IsReadOnly)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameObjectCollectionBase*), "get_IsReadOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NameObjectCollectionBase::BaseAdd
// Il2CppName: BaseAdd
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NameObjectCollectionBase::*)(::Il2CppString*, ::Il2CppObject*)>(&NameObjectCollectionBase::BaseAdd)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameObjectCollectionBase*), "BaseAdd", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: NameObjectCollectionBase::BaseRemove
// Il2CppName: BaseRemove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NameObjectCollectionBase::*)(::Il2CppString*)>(&NameObjectCollectionBase::BaseRemove)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameObjectCollectionBase*), "BaseRemove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: NameObjectCollectionBase::BaseGet
// Il2CppName: BaseGet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (NameObjectCollectionBase::*)(::Il2CppString*)>(&NameObjectCollectionBase::BaseGet)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameObjectCollectionBase*), "BaseGet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: NameObjectCollectionBase::BaseSet
// Il2CppName: BaseSet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NameObjectCollectionBase::*)(::Il2CppString*, ::Il2CppObject*)>(&NameObjectCollectionBase::BaseSet)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameObjectCollectionBase*), "BaseSet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: NameObjectCollectionBase::BaseGet
// Il2CppName: BaseGet
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (NameObjectCollectionBase::*)(int)>(&NameObjectCollectionBase::BaseGet)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameObjectCollectionBase*), "BaseGet", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: NameObjectCollectionBase::BaseGetKey
// Il2CppName: BaseGetKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (NameObjectCollectionBase::*)(int)>(&NameObjectCollectionBase::BaseGetKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameObjectCollectionBase*), "BaseGetKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: NameObjectCollectionBase::GetEnumerator
// Il2CppName: GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (NameObjectCollectionBase::*)()>(&NameObjectCollectionBase::GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameObjectCollectionBase*), "GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NameObjectCollectionBase::get_Count
// Il2CppName: get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (NameObjectCollectionBase::*)()>(&NameObjectCollectionBase::get_Count)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameObjectCollectionBase*), "get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NameObjectCollectionBase::System_Collections_ICollection_CopyTo
// Il2CppName: System.Collections.ICollection.CopyTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NameObjectCollectionBase::*)(System::Array*, int)>(&NameObjectCollectionBase::System_Collections_ICollection_CopyTo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameObjectCollectionBase*), "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Array*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: NameObjectCollectionBase::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&NameObjectCollectionBase::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameObjectCollectionBase*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NameObjectCollectionBase::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NameObjectCollectionBase::*)()>(&NameObjectCollectionBase::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameObjectCollectionBase*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NameObjectCollectionBase::*)()>(&NameObjectCollectionBase::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameObjectCollectionBase*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.NameObjectCollectionBase/NameObjectEntry
#include "System/Collections/Specialized/NameObjectCollectionBase_NameObjectEntry.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: NameObjectCollectionBase::NameObjectEntry::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NameObjectCollectionBase::NameObjectEntry::*)(::Il2CppString*, ::Il2CppObject*)>(&NameObjectCollectionBase::NameObjectEntry::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameObjectCollectionBase::NameObjectEntry*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NameObjectCollectionBase::NameObjectEntry::*)(::Il2CppString*, ::Il2CppObject*)>(&NameObjectCollectionBase::NameObjectEntry::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameObjectCollectionBase::NameObjectEntry*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.NameObjectCollectionBase/NameObjectKeysEnumerator
#include "System/Collections/Specialized/NameObjectCollectionBase_NameObjectKeysEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase/NameObjectKeysEnumerator.MoveNext
bool System::Collections::Specialized::NameObjectCollectionBase::NameObjectKeysEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::NameObjectKeysEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase/NameObjectKeysEnumerator.Reset
void System::Collections::Specialized::NameObjectCollectionBase::NameObjectKeysEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::NameObjectKeysEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.NameObjectCollectionBase/NameObjectKeysEnumerator.get_Current
::Il2CppObject* System::Collections::Specialized::NameObjectCollectionBase::NameObjectKeysEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameObjectCollectionBase::NameObjectKeysEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: NameObjectCollectionBase::NameObjectKeysEnumerator::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NameObjectCollectionBase::NameObjectKeysEnumerator::*)(System::Collections::Specialized::NameObjectCollectionBase*)>(&NameObjectCollectionBase::NameObjectKeysEnumerator::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameObjectCollectionBase::NameObjectKeysEnumerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Specialized::NameObjectCollectionBase*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NameObjectCollectionBase::NameObjectKeysEnumerator::*)(System::Collections::Specialized::NameObjectCollectionBase*)>(&NameObjectCollectionBase::NameObjectKeysEnumerator::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameObjectCollectionBase::NameObjectKeysEnumerator*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Specialized::NameObjectCollectionBase*>()});
  }
};
// Writing MetadataGetter for method: NameObjectCollectionBase::NameObjectKeysEnumerator::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (NameObjectCollectionBase::NameObjectKeysEnumerator::*)()>(&NameObjectCollectionBase::NameObjectKeysEnumerator::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameObjectCollectionBase::NameObjectKeysEnumerator*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NameObjectCollectionBase::NameObjectKeysEnumerator::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NameObjectCollectionBase::NameObjectKeysEnumerator::*)()>(&NameObjectCollectionBase::NameObjectKeysEnumerator::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameObjectCollectionBase::NameObjectKeysEnumerator*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NameObjectCollectionBase::NameObjectKeysEnumerator::get_Current
// Il2CppName: get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (NameObjectCollectionBase::NameObjectKeysEnumerator::*)()>(&NameObjectCollectionBase::NameObjectKeysEnumerator::get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameObjectCollectionBase::NameObjectKeysEnumerator*), "get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.CompatibleComparer
#include "System/Collections/Specialized/CompatibleComparer.hpp"
// Including type: System.Collections.IComparer
#include "System/Collections/IComparer.hpp"
// Including type: System.Collections.IHashCodeProvider
#include "System/Collections/IHashCodeProvider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.IComparer defaultComparer
System::Collections::IComparer* System::Collections::Specialized::CompatibleComparer::_get_defaultComparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::CompatibleComparer::_get_defaultComparer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::IComparer*>("System.Collections.Specialized", "CompatibleComparer", "defaultComparer"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.IComparer defaultComparer
void System::Collections::Specialized::CompatibleComparer::_set_defaultComparer(System::Collections::IComparer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::CompatibleComparer::_set_defaultComparer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Specialized", "CompatibleComparer", "defaultComparer", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.IHashCodeProvider defaultHashProvider
System::Collections::IHashCodeProvider* System::Collections::Specialized::CompatibleComparer::_get_defaultHashProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::CompatibleComparer::_get_defaultHashProvider");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::IHashCodeProvider*>("System.Collections.Specialized", "CompatibleComparer", "defaultHashProvider"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.IHashCodeProvider defaultHashProvider
void System::Collections::Specialized::CompatibleComparer::_set_defaultHashProvider(System::Collections::IHashCodeProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::CompatibleComparer::_set_defaultHashProvider");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Specialized", "CompatibleComparer", "defaultHashProvider", value));
}
// Autogenerated method: System.Collections.Specialized.CompatibleComparer.Equals
bool System::Collections::Specialized::CompatibleComparer::Equals(::Il2CppObject* a, ::Il2CppObject* b) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::CompatibleComparer::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, a, b);
}
// Autogenerated method: System.Collections.Specialized.CompatibleComparer.GetHashCode
int System::Collections::Specialized::CompatibleComparer::GetHashCode(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::CompatibleComparer::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Collections.Specialized.CompatibleComparer.get_Comparer
System::Collections::IComparer* System::Collections::Specialized::CompatibleComparer::get_Comparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::CompatibleComparer::get_Comparer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Comparer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IComparer*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.CompatibleComparer.get_HashCodeProvider
System::Collections::IHashCodeProvider* System::Collections::Specialized::CompatibleComparer::get_HashCodeProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::CompatibleComparer::get_HashCodeProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HashCodeProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IHashCodeProvider*, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.CompatibleComparer.get_DefaultComparer
System::Collections::IComparer* System::Collections::Specialized::CompatibleComparer::get_DefaultComparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::CompatibleComparer::get_DefaultComparer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Specialized", "CompatibleComparer", "get_DefaultComparer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IComparer*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.CompatibleComparer.get_DefaultHashCodeProvider
System::Collections::IHashCodeProvider* System::Collections::Specialized::CompatibleComparer::get_DefaultHashCodeProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::CompatibleComparer::get_DefaultHashCodeProvider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Specialized", "CompatibleComparer", "get_DefaultHashCodeProvider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IHashCodeProvider*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: CompatibleComparer::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CompatibleComparer::*)(System::Collections::IComparer*, System::Collections::IHashCodeProvider*)>(&CompatibleComparer::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompatibleComparer*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::IComparer*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::IHashCodeProvider*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CompatibleComparer::*)(System::Collections::IComparer*, System::Collections::IHashCodeProvider*)>(&CompatibleComparer::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompatibleComparer*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::IComparer*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::IHashCodeProvider*>()});
  }
};
// Writing MetadataGetter for method: CompatibleComparer::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CompatibleComparer::*)(::Il2CppObject*, ::Il2CppObject*)>(&CompatibleComparer::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompatibleComparer*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: CompatibleComparer::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (CompatibleComparer::*)(::Il2CppObject*)>(&CompatibleComparer::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompatibleComparer*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: CompatibleComparer::get_Comparer
// Il2CppName: get_Comparer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IComparer* (CompatibleComparer::*)()>(&CompatibleComparer::get_Comparer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompatibleComparer*), "get_Comparer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CompatibleComparer::get_HashCodeProvider
// Il2CppName: get_HashCodeProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IHashCodeProvider* (CompatibleComparer::*)()>(&CompatibleComparer::get_HashCodeProvider)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompatibleComparer*), "get_HashCodeProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CompatibleComparer::get_DefaultComparer
// Il2CppName: get_DefaultComparer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IComparer* (*)()>(&CompatibleComparer::get_DefaultComparer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompatibleComparer*), "get_DefaultComparer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CompatibleComparer::get_DefaultHashCodeProvider
// Il2CppName: get_DefaultHashCodeProvider
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IHashCodeProvider* (*)()>(&CompatibleComparer::get_DefaultHashCodeProvider)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CompatibleComparer*), "get_DefaultHashCodeProvider", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.NameValueCollection
#include "System/Collections/Specialized/NameValueCollection.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Collections.IEqualityComparer
#include "System/Collections/IEqualityComparer.hpp"
// Including type: System.DBNull
#include "System/DBNull.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Specialized.NameValueCollection.InvalidateCachedArrays
void System::Collections::Specialized::NameValueCollection::InvalidateCachedArrays() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameValueCollection::InvalidateCachedArrays");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InvalidateCachedArrays", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.NameValueCollection.GetAsOneString
::Il2CppString* System::Collections::Specialized::NameValueCollection::GetAsOneString(System::Collections::ArrayList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameValueCollection::GetAsOneString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Specialized", "NameValueCollection", "GetAsOneString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, list);
}
// Autogenerated method: System.Collections.Specialized.NameValueCollection.GetAsStringArray
::Array<::Il2CppString*>* System::Collections::Specialized::NameValueCollection::GetAsStringArray(System::Collections::ArrayList* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameValueCollection::GetAsStringArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Collections.Specialized", "NameValueCollection", "GetAsStringArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(list)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, list);
}
// Autogenerated method: System.Collections.Specialized.NameValueCollection.Add
void System::Collections::Specialized::NameValueCollection::Add(::Il2CppString* name, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameValueCollection::Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: System.Collections.Specialized.NameValueCollection.Get
::Il2CppString* System::Collections::Specialized::NameValueCollection::Get(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameValueCollection::Get");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Collections.Specialized.NameValueCollection.GetValues
::Array<::Il2CppString*>* System::Collections::Specialized::NameValueCollection::GetValues(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameValueCollection::GetValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Collections.Specialized.NameValueCollection.Set
void System::Collections::Specialized::NameValueCollection::Set(::Il2CppString* name, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameValueCollection::Set");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: System.Collections.Specialized.NameValueCollection.Remove
void System::Collections::Specialized::NameValueCollection::Remove(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameValueCollection::Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Collections.Specialized.NameValueCollection.get_Item
::Il2CppString* System::Collections::Specialized::NameValueCollection::get_Item(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameValueCollection::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, name);
}
// Autogenerated method: System.Collections.Specialized.NameValueCollection.set_Item
void System::Collections::Specialized::NameValueCollection::set_Item(::Il2CppString* name, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameValueCollection::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, name, value);
}
// Autogenerated method: System.Collections.Specialized.NameValueCollection.Get
::Il2CppString* System::Collections::Specialized::NameValueCollection::Get(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameValueCollection::Get");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.Specialized.NameValueCollection.GetValues
::Array<::Il2CppString*>* System::Collections::Specialized::NameValueCollection::GetValues(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameValueCollection::GetValues");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppString*>*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.Specialized.NameValueCollection.GetKey
::Il2CppString* System::Collections::Specialized::NameValueCollection::GetKey(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::NameValueCollection::GetKey");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetKey", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, index);
}
// Writing MetadataGetter for method: NameValueCollection::InvalidateCachedArrays
// Il2CppName: InvalidateCachedArrays
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NameValueCollection::*)()>(&NameValueCollection::InvalidateCachedArrays)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameValueCollection*), "InvalidateCachedArrays", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NameValueCollection::GetAsOneString
// Il2CppName: GetAsOneString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(System::Collections::ArrayList*)>(&NameValueCollection::GetAsOneString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameValueCollection*), "GetAsOneString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::ArrayList*>()});
  }
};
// Writing MetadataGetter for method: NameValueCollection::GetAsStringArray
// Il2CppName: GetAsStringArray
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppString*>* (*)(System::Collections::ArrayList*)>(&NameValueCollection::GetAsStringArray)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameValueCollection*), "GetAsStringArray", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::ArrayList*>()});
  }
};
// Writing MetadataGetter for method: NameValueCollection::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NameValueCollection::*)(::Il2CppString*, ::Il2CppString*)>(&NameValueCollection::Add)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameValueCollection*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: NameValueCollection::Get
// Il2CppName: Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (NameValueCollection::*)(::Il2CppString*)>(&NameValueCollection::Get)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameValueCollection*), "Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: NameValueCollection::GetValues
// Il2CppName: GetValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppString*>* (NameValueCollection::*)(::Il2CppString*)>(&NameValueCollection::GetValues)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameValueCollection*), "GetValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: NameValueCollection::Set
// Il2CppName: Set
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NameValueCollection::*)(::Il2CppString*, ::Il2CppString*)>(&NameValueCollection::Set)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameValueCollection*), "Set", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: NameValueCollection::Remove
// Il2CppName: Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NameValueCollection::*)(::Il2CppString*)>(&NameValueCollection::Remove)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameValueCollection*), "Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: NameValueCollection::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (NameValueCollection::*)(::Il2CppString*)>(&NameValueCollection::get_Item)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameValueCollection*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: NameValueCollection::set_Item
// Il2CppName: set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NameValueCollection::*)(::Il2CppString*, ::Il2CppString*)>(&NameValueCollection::set_Item)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameValueCollection*), "set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: NameValueCollection::Get
// Il2CppName: Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (NameValueCollection::*)(int)>(&NameValueCollection::Get)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameValueCollection*), "Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: NameValueCollection::GetValues
// Il2CppName: GetValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Array<::Il2CppString*>* (NameValueCollection::*)(int)>(&NameValueCollection::GetValues)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameValueCollection*), "GetValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: NameValueCollection::GetKey
// Il2CppName: GetKey
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (NameValueCollection::*)(int)>(&NameValueCollection::GetKey)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameValueCollection*), "GetKey", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: NameValueCollection::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NameValueCollection::*)()>(&NameValueCollection::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameValueCollection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NameValueCollection::*)()>(&NameValueCollection::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameValueCollection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NameValueCollection::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NameValueCollection::*)(int)>(&NameValueCollection::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameValueCollection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NameValueCollection::*)(int)>(&NameValueCollection::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameValueCollection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: NameValueCollection::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NameValueCollection::*)(int, System::Collections::IEqualityComparer*)>(&NameValueCollection::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameValueCollection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::IEqualityComparer*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NameValueCollection::*)(int, System::Collections::IEqualityComparer*)>(&NameValueCollection::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameValueCollection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::IEqualityComparer*>()});
  }
};
// Writing MetadataGetter for method: NameValueCollection::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NameValueCollection::*)(System::DBNull*)>(&NameValueCollection::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameValueCollection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::DBNull*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NameValueCollection::*)(System::DBNull*)>(&NameValueCollection::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameValueCollection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::DBNull*>()});
  }
};
// Writing MetadataGetter for method: NameValueCollection::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NameValueCollection::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&NameValueCollection::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameValueCollection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NameValueCollection::*)(System::Runtime::Serialization::SerializationInfo*, System::Runtime::Serialization::StreamingContext)>(&NameValueCollection::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NameValueCollection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::SerializationInfo*>(), ::il2cpp_utils::ExtractIndependentType<System::Runtime::Serialization::StreamingContext>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Collections.Specialized.StringCollection
#include "System/Collections/Specialized/StringCollection.hpp"
// Including type: System.Collections.ArrayList
#include "System/Collections/ArrayList.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Collections.Specialized.StringCollection.get_Item
::Il2CppString* System::Collections::Specialized::StringCollection::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.set_Item
void System::Collections::Specialized::StringCollection::set_Item(int index, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.get_Count
int System::Collections::Specialized::StringCollection::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::get_Count");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.get_IsReadOnly
bool System::Collections::Specialized::StringCollection::System_Collections_IList_get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::System.Collections.IList.get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_IsReadOnly", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.Add
int System::Collections::Specialized::StringCollection::Add(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.Clear
void System::Collections::Specialized::StringCollection::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::Clear");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.Contains
bool System::Collections::Specialized::StringCollection::Contains(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::Contains");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.CopyTo
void System::Collections::Specialized::StringCollection::CopyTo(::Array<::Il2CppString*>* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.IndexOf
int System::Collections::Specialized::StringCollection::IndexOf(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::IndexOf");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.Insert
void System::Collections::Specialized::StringCollection::Insert(int index, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::Insert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.Remove
void System::Collections::Specialized::StringCollection::Remove(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::Remove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.RemoveAt
void System::Collections::Specialized::StringCollection::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::RemoveAt");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.get_Item
::Il2CppObject* System::Collections::Specialized::StringCollection::System_Collections_IList_get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::System.Collections.IList.get_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.set_Item
void System::Collections::Specialized::StringCollection::System_Collections_IList_set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::System.Collections.IList.set_Item");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.Add
int System::Collections::Specialized::StringCollection::System_Collections_IList_Add(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::System.Collections.IList.Add");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.Contains
bool System::Collections::Specialized::StringCollection::System_Collections_IList_Contains(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::System.Collections.IList.Contains");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Contains", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.IndexOf
int System::Collections::Specialized::StringCollection::System_Collections_IList_IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::System.Collections.IList.IndexOf");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.IndexOf", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.Insert
void System::Collections::Specialized::StringCollection::System_Collections_IList_Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::System.Collections.IList.Insert");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Insert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IList.Remove
void System::Collections::Specialized::StringCollection::System_Collections_IList_Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::System.Collections.IList.Remove");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IList.Remove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.ICollection.CopyTo
void System::Collections::Specialized::StringCollection::System_Collections_ICollection_CopyTo(System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: System.Collections.Specialized.StringCollection.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* System::Collections::Specialized::StringCollection::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Specialized::StringCollection::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: StringCollection::get_Item
// Il2CppName: get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (StringCollection::*)(int)>(&StringCollection::get_Item)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringCollection*), "get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: StringCollection::set_Item
// Il2CppName: set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StringCollection::*)(int, ::Il2CppString*)>(&StringCollection::set_Item)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringCollection*), "set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: StringCollection::get_Count
// Il2CppName: get_Count
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (StringCollection::*)()>(&StringCollection::get_Count)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringCollection*), "get_Count", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StringCollection::System_Collections_IList_get_IsReadOnly
// Il2CppName: System.Collections.IList.get_IsReadOnly
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (StringCollection::*)()>(&StringCollection::System_Collections_IList_get_IsReadOnly)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringCollection*), "System.Collections.IList.get_IsReadOnly", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StringCollection::Add
// Il2CppName: Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (StringCollection::*)(::Il2CppString*)>(&StringCollection::Add)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringCollection*), "Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: StringCollection::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StringCollection::*)()>(&StringCollection::Clear)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringCollection*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StringCollection::Contains
// Il2CppName: Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (StringCollection::*)(::Il2CppString*)>(&StringCollection::Contains)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringCollection*), "Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: StringCollection::CopyTo
// Il2CppName: CopyTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StringCollection::*)(::Array<::Il2CppString*>*, int)>(&StringCollection::CopyTo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringCollection*), "CopyTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<::Il2CppString*>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: StringCollection::IndexOf
// Il2CppName: IndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (StringCollection::*)(::Il2CppString*)>(&StringCollection::IndexOf)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringCollection*), "IndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: StringCollection::Insert
// Il2CppName: Insert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StringCollection::*)(int, ::Il2CppString*)>(&StringCollection::Insert)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringCollection*), "Insert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: StringCollection::Remove
// Il2CppName: Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StringCollection::*)(::Il2CppString*)>(&StringCollection::Remove)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringCollection*), "Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: StringCollection::RemoveAt
// Il2CppName: RemoveAt
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StringCollection::*)(int)>(&StringCollection::RemoveAt)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringCollection*), "RemoveAt", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: StringCollection::System_Collections_IList_get_Item
// Il2CppName: System.Collections.IList.get_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (StringCollection::*)(int)>(&StringCollection::System_Collections_IList_get_Item)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringCollection*), "System.Collections.IList.get_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: StringCollection::System_Collections_IList_set_Item
// Il2CppName: System.Collections.IList.set_Item
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StringCollection::*)(int, ::Il2CppObject*)>(&StringCollection::System_Collections_IList_set_Item)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringCollection*), "System.Collections.IList.set_Item", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: StringCollection::System_Collections_IList_Add
// Il2CppName: System.Collections.IList.Add
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (StringCollection::*)(::Il2CppObject*)>(&StringCollection::System_Collections_IList_Add)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringCollection*), "System.Collections.IList.Add", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: StringCollection::System_Collections_IList_Contains
// Il2CppName: System.Collections.IList.Contains
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (StringCollection::*)(::Il2CppObject*)>(&StringCollection::System_Collections_IList_Contains)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringCollection*), "System.Collections.IList.Contains", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: StringCollection::System_Collections_IList_IndexOf
// Il2CppName: System.Collections.IList.IndexOf
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (StringCollection::*)(::Il2CppObject*)>(&StringCollection::System_Collections_IList_IndexOf)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringCollection*), "System.Collections.IList.IndexOf", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: StringCollection::System_Collections_IList_Insert
// Il2CppName: System.Collections.IList.Insert
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StringCollection::*)(int, ::Il2CppObject*)>(&StringCollection::System_Collections_IList_Insert)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringCollection*), "System.Collections.IList.Insert", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: StringCollection::System_Collections_IList_Remove
// Il2CppName: System.Collections.IList.Remove
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StringCollection::*)(::Il2CppObject*)>(&StringCollection::System_Collections_IList_Remove)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringCollection*), "System.Collections.IList.Remove", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: StringCollection::System_Collections_ICollection_CopyTo
// Il2CppName: System.Collections.ICollection.CopyTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StringCollection::*)(System::Array*, int)>(&StringCollection::System_Collections_ICollection_CopyTo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringCollection*), "System.Collections.ICollection.CopyTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Array*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: StringCollection::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (StringCollection::*)()>(&StringCollection::System_Collections_IEnumerable_GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringCollection*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StringCollection::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StringCollection::*)()>(&StringCollection::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringCollection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StringCollection::*)()>(&StringCollection::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StringCollection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Generic.NodeColor
#include "System/Collections/Generic/NodeColor.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.NodeColor Black
System::Collections::Generic::NodeColor System::Collections::Generic::NodeColor::_get_Black() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::NodeColor::_get_Black");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::NodeColor>("System.Collections.Generic", "NodeColor", "Black"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.NodeColor Black
void System::Collections::Generic::NodeColor::_set_Black(System::Collections::Generic::NodeColor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::NodeColor::_set_Black");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "NodeColor", "Black", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.NodeColor Red
System::Collections::Generic::NodeColor System::Collections::Generic::NodeColor::_get_Red() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::NodeColor::_get_Red");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::NodeColor>("System.Collections.Generic", "NodeColor", "Red"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.NodeColor Red
void System::Collections::Generic::NodeColor::_set_Red(System::Collections::Generic::NodeColor value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::NodeColor::_set_Red");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "NodeColor", "Red", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Collections.Generic.TreeRotation
#include "System/Collections/Generic/TreeRotation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.TreeRotation Left
System::Collections::Generic::TreeRotation System::Collections::Generic::TreeRotation::_get_Left() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::TreeRotation::_get_Left");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::TreeRotation>("System.Collections.Generic", "TreeRotation", "Left"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.TreeRotation Left
void System::Collections::Generic::TreeRotation::_set_Left(System::Collections::Generic::TreeRotation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::TreeRotation::_set_Left");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "TreeRotation", "Left", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.TreeRotation LeftRight
System::Collections::Generic::TreeRotation System::Collections::Generic::TreeRotation::_get_LeftRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::TreeRotation::_get_LeftRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::TreeRotation>("System.Collections.Generic", "TreeRotation", "LeftRight"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.TreeRotation LeftRight
void System::Collections::Generic::TreeRotation::_set_LeftRight(System::Collections::Generic::TreeRotation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::TreeRotation::_set_LeftRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "TreeRotation", "LeftRight", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.TreeRotation Right
System::Collections::Generic::TreeRotation System::Collections::Generic::TreeRotation::_get_Right() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::TreeRotation::_get_Right");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::TreeRotation>("System.Collections.Generic", "TreeRotation", "Right"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.TreeRotation Right
void System::Collections::Generic::TreeRotation::_set_Right(System::Collections::Generic::TreeRotation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::TreeRotation::_set_Right");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "TreeRotation", "Right", value));
}
// Autogenerated static field getter
// Get static field: static public System.Collections.Generic.TreeRotation RightLeft
System::Collections::Generic::TreeRotation System::Collections::Generic::TreeRotation::_get_RightLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::TreeRotation::_get_RightLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::TreeRotation>("System.Collections.Generic", "TreeRotation", "RightLeft"));
}
// Autogenerated static field setter
// Set static field: static public System.Collections.Generic.TreeRotation RightLeft
void System::Collections::Generic::TreeRotation::_set_RightLeft(System::Collections::Generic::TreeRotation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Collections::Generic::TreeRotation::_set_RightLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Collections.Generic", "TreeRotation", "RightLeft", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.BypassElementCollection
#include "System/Net/Configuration/BypassElementCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: BypassElementCollection::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BypassElementCollection::*)()>(&BypassElementCollection::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BypassElementCollection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BypassElementCollection::*)()>(&BypassElementCollection::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BypassElementCollection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.ConnectionManagementElementCollection
#include "System/Net/Configuration/ConnectionManagementElementCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: ConnectionManagementElementCollection::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ConnectionManagementElementCollection::*)()>(&ConnectionManagementElementCollection::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ConnectionManagementElementCollection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ConnectionManagementElementCollection::*)()>(&ConnectionManagementElementCollection::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ConnectionManagementElementCollection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.ConnectionManagementSection
#include "System/Net/Configuration/ConnectionManagementSection.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.ConnectionManagementSection.get_Properties
System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::ConnectionManagementSection::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::ConnectionManagementSection::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: ConnectionManagementSection::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ConnectionManagementSection::*)()>(&ConnectionManagementSection::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ConnectionManagementSection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ConnectionManagementSection::*)()>(&ConnectionManagementSection::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ConnectionManagementSection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ConnectionManagementSection::get_Properties
// Il2CppName: get_Properties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Configuration::ConfigurationPropertyCollection* (ConnectionManagementSection::*)()>(&ConnectionManagementSection::get_Properties)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ConnectionManagementSection*), "get_Properties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.DefaultProxySection
#include "System/Net/Configuration/DefaultProxySection.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.DefaultProxySection.get_Properties
System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::DefaultProxySection::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::DefaultProxySection::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Configuration.DefaultProxySection.Reset
void System::Net::Configuration::DefaultProxySection::Reset(System::Configuration::ConfigurationElement* parentElement) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::DefaultProxySection::Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parentElement)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, parentElement);
}
// Writing MetadataGetter for method: DefaultProxySection::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DefaultProxySection::*)()>(&DefaultProxySection::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultProxySection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DefaultProxySection::*)()>(&DefaultProxySection::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultProxySection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DefaultProxySection::get_Properties
// Il2CppName: get_Properties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Configuration::ConfigurationPropertyCollection* (DefaultProxySection::*)()>(&DefaultProxySection::get_Properties)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultProxySection*), "get_Properties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DefaultProxySection::Reset
// Il2CppName: Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DefaultProxySection::*)(System::Configuration::ConfigurationElement*)>(&DefaultProxySection::Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DefaultProxySection*), "Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Configuration::ConfigurationElement*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.ProxyElement
#include "System/Net/Configuration/ProxyElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.ProxyElement.get_Properties
System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::ProxyElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::ProxyElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: ProxyElement::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ProxyElement::*)()>(&ProxyElement::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ProxyElement*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ProxyElement::*)()>(&ProxyElement::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ProxyElement*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ProxyElement::get_Properties
// Il2CppName: get_Properties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Configuration::ConfigurationPropertyCollection* (ProxyElement::*)()>(&ProxyElement::get_Properties)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ProxyElement*), "get_Properties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.HttpWebRequestElement
#include "System/Net/Configuration/HttpWebRequestElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.HttpWebRequestElement.get_Properties
System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::HttpWebRequestElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::HttpWebRequestElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: HttpWebRequestElement::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpWebRequestElement::*)()>(&HttpWebRequestElement::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpWebRequestElement*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpWebRequestElement::*)()>(&HttpWebRequestElement::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpWebRequestElement*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpWebRequestElement::get_Properties
// Il2CppName: get_Properties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Configuration::ConfigurationPropertyCollection* (HttpWebRequestElement::*)()>(&HttpWebRequestElement::get_Properties)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpWebRequestElement*), "get_Properties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.Ipv6Element
#include "System/Net/Configuration/Ipv6Element.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.Ipv6Element.get_Properties
System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::Ipv6Element::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::Ipv6Element::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: Ipv6Element::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Ipv6Element::*)()>(&Ipv6Element::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Ipv6Element*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Ipv6Element::*)()>(&Ipv6Element::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Ipv6Element*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Ipv6Element::get_Properties
// Il2CppName: get_Properties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Configuration::ConfigurationPropertyCollection* (Ipv6Element::*)()>(&Ipv6Element::get_Properties)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Ipv6Element*), "get_Properties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.NetSectionGroup
#include "System/Net/Configuration/NetSectionGroup.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: NetSectionGroup::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetSectionGroup::*)()>(&NetSectionGroup::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetSectionGroup*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetSectionGroup::*)()>(&NetSectionGroup::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetSectionGroup*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.SettingsSection
#include "System/Net/Configuration/SettingsSection.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.SettingsSection.get_Properties
System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::SettingsSection::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::SettingsSection::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: SettingsSection::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SettingsSection::*)()>(&SettingsSection::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SettingsSection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SettingsSection::*)()>(&SettingsSection::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SettingsSection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SettingsSection::get_Properties
// Il2CppName: get_Properties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Configuration::ConfigurationPropertyCollection* (SettingsSection::*)()>(&SettingsSection::get_Properties)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SettingsSection*), "get_Properties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.PerformanceCountersElement
#include "System/Net/Configuration/PerformanceCountersElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.PerformanceCountersElement.get_Properties
System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::PerformanceCountersElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::PerformanceCountersElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: PerformanceCountersElement::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PerformanceCountersElement::*)()>(&PerformanceCountersElement::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PerformanceCountersElement*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PerformanceCountersElement::*)()>(&PerformanceCountersElement::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PerformanceCountersElement*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PerformanceCountersElement::get_Properties
// Il2CppName: get_Properties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Configuration::ConfigurationPropertyCollection* (PerformanceCountersElement::*)()>(&PerformanceCountersElement::get_Properties)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PerformanceCountersElement*), "get_Properties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.ServicePointManagerElement
#include "System/Net/Configuration/ServicePointManagerElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.ServicePointManagerElement.get_Properties
System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::ServicePointManagerElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::ServicePointManagerElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: ServicePointManagerElement::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServicePointManagerElement::*)()>(&ServicePointManagerElement::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServicePointManagerElement*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServicePointManagerElement::*)()>(&ServicePointManagerElement::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServicePointManagerElement*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ServicePointManagerElement::get_Properties
// Il2CppName: get_Properties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Configuration::ConfigurationPropertyCollection* (ServicePointManagerElement::*)()>(&ServicePointManagerElement::get_Properties)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServicePointManagerElement*), "get_Properties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.SocketElement
#include "System/Net/Configuration/SocketElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.SocketElement.get_Properties
System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::SocketElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::SocketElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: SocketElement::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketElement::*)()>(&SocketElement::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketElement*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SocketElement::*)()>(&SocketElement::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketElement*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SocketElement::get_Properties
// Il2CppName: get_Properties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Configuration::ConfigurationPropertyCollection* (SocketElement::*)()>(&SocketElement::get_Properties)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SocketElement*), "get_Properties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.WebProxyScriptElement
#include "System/Net/Configuration/WebProxyScriptElement.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.WebProxyScriptElement.get_Properties
System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::WebProxyScriptElement::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::WebProxyScriptElement::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: WebProxyScriptElement::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WebProxyScriptElement::*)()>(&WebProxyScriptElement::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WebProxyScriptElement*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WebProxyScriptElement::*)()>(&WebProxyScriptElement::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WebProxyScriptElement*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: WebProxyScriptElement::get_Properties
// Il2CppName: get_Properties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Configuration::ConfigurationPropertyCollection* (WebProxyScriptElement::*)()>(&WebProxyScriptElement::get_Properties)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WebProxyScriptElement*), "get_Properties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.WebRequestModulesSection
#include "System/Net/Configuration/WebRequestModulesSection.hpp"
// Including type: System.Configuration.ConfigurationPropertyCollection
#include "System/Configuration/ConfigurationPropertyCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Configuration.WebRequestModulesSection.get_Properties
System::Configuration::ConfigurationPropertyCollection* System::Net::Configuration::WebRequestModulesSection::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Configuration::WebRequestModulesSection::get_Properties");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Configuration::ConfigurationPropertyCollection*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: WebRequestModulesSection::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WebRequestModulesSection::*)()>(&WebRequestModulesSection::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WebRequestModulesSection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WebRequestModulesSection::*)()>(&WebRequestModulesSection::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WebRequestModulesSection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: WebRequestModulesSection::get_Properties
// Il2CppName: get_Properties
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Configuration::ConfigurationPropertyCollection* (WebRequestModulesSection::*)()>(&WebRequestModulesSection::get_Properties)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WebRequestModulesSection*), "get_Properties", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Configuration.WebRequestModuleElementCollection
#include "System/Net/Configuration/WebRequestModuleElementCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: WebRequestModuleElementCollection::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WebRequestModuleElementCollection::*)()>(&WebRequestModuleElementCollection::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WebRequestModuleElementCollection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (WebRequestModuleElementCollection::*)()>(&WebRequestModuleElementCollection::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(WebRequestModuleElementCollection*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Diagnostics.DiagnosticsConfigurationHandler
#include "System/Diagnostics/DiagnosticsConfigurationHandler.hpp"
// Including type: System.Xml.XmlNode
#include "System/Xml/XmlNode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Diagnostics.DiagnosticsConfigurationHandler.Create
::Il2CppObject* System::Diagnostics::DiagnosticsConfigurationHandler::Create(::Il2CppObject* parent, ::Il2CppObject* configContext, System::Xml::XmlNode* section) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Diagnostics::DiagnosticsConfigurationHandler::Create");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(configContext), ::il2cpp_utils::ExtractType(section)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, parent, configContext, section);
}
// Writing MetadataGetter for method: DiagnosticsConfigurationHandler::Create
// Il2CppName: Create
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (DiagnosticsConfigurationHandler::*)(::Il2CppObject*, ::Il2CppObject*, System::Xml::XmlNode*)>(&DiagnosticsConfigurationHandler::Create)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DiagnosticsConfigurationHandler*), "Create", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Xml::XmlNode*>()});
  }
};
// Writing MetadataGetter for method: DiagnosticsConfigurationHandler::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DiagnosticsConfigurationHandler::*)()>(&DiagnosticsConfigurationHandler::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DiagnosticsConfigurationHandler*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DiagnosticsConfigurationHandler::*)()>(&DiagnosticsConfigurationHandler::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DiagnosticsConfigurationHandler*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.HttpClient
#include "System/Net/Http/HttpClient.hpp"
// Including type: System.Net.Http.HttpClient/<SendAsyncWorker>d__47
#include "System/Net/Http/HttpClient_-SendAsyncWorker-d__47.hpp"
// Including type: System.Net.Http.HttpClient/<GetStringAsync>d__52
#include "System/Net/Http/HttpClient_-GetStringAsync-d__52.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: System.Net.Http.Headers.HttpRequestHeaders
#include "System/Net/Http/Headers/HttpRequestHeaders.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Net.Http.HttpResponseMessage
#include "System/Net/Http/HttpResponseMessage.hpp"
// Including type: System.Net.Http.HttpCompletionOption
#include "System/Net/Http/HttpCompletionOption.hpp"
// Including type: System.Net.Http.HttpRequestMessage
#include "System/Net/Http/HttpRequestMessage.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Net.Http.HttpMessageHandler
#include "System/Net/Http/HttpMessageHandler.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.TimeSpan TimeoutDefault
System::TimeSpan System::Net::Http::HttpClient::_get_TimeoutDefault() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::_get_TimeoutDefault");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::TimeSpan>("System.Net.Http", "HttpClient", "TimeoutDefault"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.TimeSpan TimeoutDefault
void System::Net::Http::HttpClient::_set_TimeoutDefault(System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::_set_TimeoutDefault");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpClient", "TimeoutDefault", value));
}
// Autogenerated method: System.Net.Http.HttpClient.get_MaxResponseContentBufferSize
int64_t System::Net::Http::HttpClient::get_MaxResponseContentBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::get_MaxResponseContentBufferSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxResponseContentBufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpClient.set_Timeout
void System::Net::Http::HttpClient::set_Timeout(System::TimeSpan value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::set_Timeout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Timeout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpClient.GetAsync
System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpClient::GetAsync(::Il2CppString* requestUri, System::Net::Http::HttpCompletionOption completionOption) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::GetAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestUri), ::il2cpp_utils::ExtractType(completionOption)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, requestUri, completionOption);
}
// Autogenerated method: System.Net.Http.HttpClient.SendAsync
System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpClient::SendAsync(System::Net::Http::HttpRequestMessage* request, System::Net::Http::HttpCompletionOption completionOption) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::SendAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(completionOption)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, request, completionOption);
}
// Autogenerated method: System.Net.Http.HttpClient.SendAsync
System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpClient::SendAsync(System::Net::Http::HttpRequestMessage* request, System::Net::Http::HttpCompletionOption completionOption, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::SendAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(completionOption), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, request, completionOption, cancellationToken);
}
// Autogenerated method: System.Net.Http.HttpClient.SendAsyncWorker
System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpClient::SendAsyncWorker(System::Net::Http::HttpRequestMessage* request, System::Net::Http::HttpCompletionOption completionOption, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::SendAsyncWorker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAsyncWorker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(completionOption), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, request, completionOption, cancellationToken);
}
// Autogenerated method: System.Net.Http.HttpClient.GetStringAsync
System::Threading::Tasks::Task_1<::Il2CppString*>* System::Net::Http::HttpClient::GetStringAsync(::Il2CppString* requestUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::GetStringAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStringAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requestUri)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<::Il2CppString*>*, false>(this, ___internal__method, requestUri);
}
// Autogenerated method: System.Net.Http.HttpClient..cctor
void System::Net::Http::HttpClient::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpClient", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpClient.<>n__0
System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpClient::$$n__0(System::Net::Http::HttpRequestMessage* request, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::<>n__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>n__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, request, cancellationToken);
}
// Autogenerated method: System.Net.Http.HttpClient.Dispose
void System::Net::Http::HttpClient::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Http.HttpClient.SendAsync
System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpClient::SendAsync(System::Net::Http::HttpRequestMessage* request, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::SendAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, request, cancellationToken);
}
// Writing MetadataGetter for method: HttpClient::get_MaxResponseContentBufferSize
// Il2CppName: get_MaxResponseContentBufferSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (HttpClient::*)()>(&HttpClient::get_MaxResponseContentBufferSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpClient*), "get_MaxResponseContentBufferSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpClient::set_Timeout
// Il2CppName: set_Timeout
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpClient::*)(System::TimeSpan)>(&HttpClient::set_Timeout)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpClient*), "set_Timeout", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::TimeSpan>()});
  }
};
// Writing MetadataGetter for method: HttpClient::GetAsync
// Il2CppName: GetAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>* (HttpClient::*)(::Il2CppString*, System::Net::Http::HttpCompletionOption)>(&HttpClient::GetAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpClient*), "GetAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::HttpCompletionOption>()});
  }
};
// Writing MetadataGetter for method: HttpClient::SendAsync
// Il2CppName: SendAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>* (HttpClient::*)(System::Net::Http::HttpRequestMessage*, System::Net::Http::HttpCompletionOption)>(&HttpClient::SendAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpClient*), "SendAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Http::HttpRequestMessage*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::HttpCompletionOption>()});
  }
};
// Writing MetadataGetter for method: HttpClient::SendAsync
// Il2CppName: SendAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>* (HttpClient::*)(System::Net::Http::HttpRequestMessage*, System::Net::Http::HttpCompletionOption, System::Threading::CancellationToken)>(&HttpClient::SendAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpClient*), "SendAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Http::HttpRequestMessage*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::HttpCompletionOption>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: HttpClient::SendAsyncWorker
// Il2CppName: SendAsyncWorker
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>* (HttpClient::*)(System::Net::Http::HttpRequestMessage*, System::Net::Http::HttpCompletionOption, System::Threading::CancellationToken)>(&HttpClient::SendAsyncWorker)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpClient*), "SendAsyncWorker", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Http::HttpRequestMessage*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::HttpCompletionOption>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: HttpClient::GetStringAsync
// Il2CppName: GetStringAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<::Il2CppString*>* (HttpClient::*)(::Il2CppString*)>(&HttpClient::GetStringAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpClient*), "GetStringAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: HttpClient::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&HttpClient::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpClient*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpClient::$$n__0
// Il2CppName: <>n__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>* (HttpClient::*)(System::Net::Http::HttpRequestMessage*, System::Threading::CancellationToken)>(&HttpClient::$$n__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpClient*), "<>n__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Http::HttpRequestMessage*>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: HttpClient::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpClient::*)()>(&HttpClient::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpClient*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpClient::*)()>(&HttpClient::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpClient*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpClient::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpClient::*)(System::Net::Http::HttpMessageHandler*, bool)>(&HttpClient::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpClient*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Http::HttpMessageHandler*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpClient::*)(System::Net::Http::HttpMessageHandler*, bool)>(&HttpClient::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpClient*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Http::HttpMessageHandler*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: HttpClient::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpClient::*)(bool)>(&HttpClient::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpClient*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: HttpClient::SendAsync
// Il2CppName: SendAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>* (HttpClient::*)(System::Net::Http::HttpRequestMessage*, System::Threading::CancellationToken)>(&HttpClient::SendAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpClient*), "SendAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Http::HttpRequestMessage*>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpClient/<SendAsyncWorker>d__47
#include "System/Net/Http/HttpClient_-SendAsyncWorker-d__47.hpp"
// Including type: System.Net.Http.HttpResponseMessage
#include "System/Net/Http/HttpResponseMessage.hpp"
// Including type: System.Net.Http.HttpRequestMessage
#include "System/Net/Http/HttpRequestMessage.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.HttpClient/<SendAsyncWorker>d__47.MoveNext
void System::Net::Http::HttpClient::$SendAsyncWorker$d__47::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::$SendAsyncWorker$d__47::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpClient/<SendAsyncWorker>d__47.SetStateMachine
void System::Net::Http::HttpClient::$SendAsyncWorker$d__47::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::$SendAsyncWorker$d__47::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: HttpClient::$SendAsyncWorker$d__47::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpClient::$SendAsyncWorker$d__47::*)()>(&HttpClient::$SendAsyncWorker$d__47::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpClient::$SendAsyncWorker$d__47), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpClient::$SendAsyncWorker$d__47::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpClient::$SendAsyncWorker$d__47::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&HttpClient::$SendAsyncWorker$d__47::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpClient::$SendAsyncWorker$d__47), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.HttpClient/<GetStringAsync>d__52
#include "System/Net/Http/HttpClient_-GetStringAsync-d__52.hpp"
// Including type: System.Net.Http.HttpResponseMessage
#include "System/Net/Http/HttpResponseMessage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.HttpClient/<GetStringAsync>d__52.MoveNext
void System::Net::Http::HttpClient::$GetStringAsync$d__52::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::$GetStringAsync$d__52::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpClient/<GetStringAsync>d__52.SetStateMachine
void System::Net::Http::HttpClient::$GetStringAsync$d__52::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClient::$GetStringAsync$d__52::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: HttpClient::$GetStringAsync$d__52::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpClient::$GetStringAsync$d__52::*)()>(&HttpClient::$GetStringAsync$d__52::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpClient::$GetStringAsync$d__52), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpClient::$GetStringAsync$d__52::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpClient::$GetStringAsync$d__52::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&HttpClient::$GetStringAsync$d__52::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpClient::$GetStringAsync$d__52), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.HttpClientHandler
#include "System/Net/Http/HttpClientHandler.hpp"
// Including type: System.Net.Http.HttpClientHandler/<>c
#include "System/Net/Http/HttpClientHandler_--c.hpp"
// Including type: System.Net.Http.HttpClientHandler/<SendAsync>d__64
#include "System/Net/Http/HttpClientHandler_-SendAsync-d__64.hpp"
// Including type: System.Net.CookieContainer
#include "System/Net/CookieContainer.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
// Including type: System.Net.IWebProxy
#include "System/Net/IWebProxy.hpp"
// Including type: System.Net.HttpWebRequest
#include "System/Net/HttpWebRequest.hpp"
// Including type: System.Net.Http.HttpRequestMessage
#include "System/Net/Http/HttpRequestMessage.hpp"
// Including type: System.Net.Http.HttpResponseMessage
#include "System/Net/Http/HttpResponseMessage.hpp"
// Including type: System.Net.HttpWebResponse
#include "System/Net/HttpWebResponse.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Net.Http.HttpMethod
#include "System/Net/Http/HttpMethod.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int64 groupCounter
int64_t System::Net::Http::HttpClientHandler::_get_groupCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::_get_groupCounter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("System.Net.Http", "HttpClientHandler", "groupCounter"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 groupCounter
void System::Net::Http::HttpClientHandler::_set_groupCounter(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::_set_groupCounter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpClientHandler", "groupCounter", value));
}
// Autogenerated method: System.Net.Http.HttpClientHandler.get_CookieContainer
System::Net::CookieContainer* System::Net::Http::HttpClientHandler::get_CookieContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::get_CookieContainer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CookieContainer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::CookieContainer*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpClientHandler.get_MaxRequestContentBufferSize
int64_t System::Net::Http::HttpClientHandler::get_MaxRequestContentBufferSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::get_MaxRequestContentBufferSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxRequestContentBufferSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpClientHandler.CreateWebRequest
System::Net::HttpWebRequest* System::Net::Http::HttpClientHandler::CreateWebRequest(System::Net::Http::HttpRequestMessage* request) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::CreateWebRequest");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateWebRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::HttpWebRequest*, false>(this, ___internal__method, request);
}
// Autogenerated method: System.Net.Http.HttpClientHandler.CreateResponseMessage
System::Net::Http::HttpResponseMessage* System::Net::Http::HttpClientHandler::CreateResponseMessage(System::Net::HttpWebResponse* wr, System::Net::Http::HttpRequestMessage* requestMessage, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::CreateResponseMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateResponseMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wr), ::il2cpp_utils::ExtractType(requestMessage), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Http::HttpResponseMessage*, false>(this, ___internal__method, wr, requestMessage, cancellationToken);
}
// Autogenerated method: System.Net.Http.HttpClientHandler.MethodHasBody
bool System::Net::Http::HttpClientHandler::MethodHasBody(System::Net::Http::HttpMethod* method) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::MethodHasBody");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpClientHandler", "MethodHasBody", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(method)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, method);
}
// Autogenerated method: System.Net.Http.HttpClientHandler.Dispose
void System::Net::Http::HttpClientHandler::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Http.HttpClientHandler.SendAsync
System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpClientHandler::SendAsync(System::Net::Http::HttpRequestMessage* request, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::SendAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, request, cancellationToken);
}
// Writing MetadataGetter for method: HttpClientHandler::get_CookieContainer
// Il2CppName: get_CookieContainer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::CookieContainer* (HttpClientHandler::*)()>(&HttpClientHandler::get_CookieContainer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpClientHandler*), "get_CookieContainer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpClientHandler::get_MaxRequestContentBufferSize
// Il2CppName: get_MaxRequestContentBufferSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int64_t (HttpClientHandler::*)()>(&HttpClientHandler::get_MaxRequestContentBufferSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpClientHandler*), "get_MaxRequestContentBufferSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpClientHandler::CreateWebRequest
// Il2CppName: CreateWebRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::HttpWebRequest* (HttpClientHandler::*)(System::Net::Http::HttpRequestMessage*)>(&HttpClientHandler::CreateWebRequest)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpClientHandler*), "CreateWebRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Http::HttpRequestMessage*>()});
  }
};
// Writing MetadataGetter for method: HttpClientHandler::CreateResponseMessage
// Il2CppName: CreateResponseMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::Http::HttpResponseMessage* (HttpClientHandler::*)(System::Net::HttpWebResponse*, System::Net::Http::HttpRequestMessage*, System::Threading::CancellationToken)>(&HttpClientHandler::CreateResponseMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpClientHandler*), "CreateResponseMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::HttpWebResponse*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::HttpRequestMessage*>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: HttpClientHandler::MethodHasBody
// Il2CppName: MethodHasBody
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::Net::Http::HttpMethod*)>(&HttpClientHandler::MethodHasBody)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpClientHandler*), "MethodHasBody", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Http::HttpMethod*>()});
  }
};
// Writing MetadataGetter for method: HttpClientHandler::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpClientHandler::*)()>(&HttpClientHandler::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpClientHandler*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpClientHandler::*)()>(&HttpClientHandler::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpClientHandler*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpClientHandler::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpClientHandler::*)(bool)>(&HttpClientHandler::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpClientHandler*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: HttpClientHandler::SendAsync
// Il2CppName: SendAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>* (HttpClientHandler::*)(System::Net::Http::HttpRequestMessage*, System::Threading::CancellationToken)>(&HttpClientHandler::SendAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpClientHandler*), "SendAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Http::HttpRequestMessage*>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.HttpClientHandler/<>c
#include "System/Net/Http/HttpClientHandler_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Net.Http.HttpClientHandler/<>c <>9
System::Net::Http::HttpClientHandler::$$c* System::Net::Http::HttpClientHandler::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Net::Http::HttpClientHandler::$$c*>("System.Net.Http", "HttpClientHandler/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Net.Http.HttpClientHandler/<>c <>9
void System::Net::Http::HttpClientHandler::$$c::_set_$$9(System::Net::Http::HttpClientHandler::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http", "HttpClientHandler/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<System.String,System.Boolean> <>9__61_0
System::Func_2<::Il2CppString*, bool>* System::Net::Http::HttpClientHandler::$$c::_get_$$9__61_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::$$c::_get_$$9__61_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<::Il2CppString*, bool>*>("System.Net.Http", "HttpClientHandler/<>c", "<>9__61_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<System.String,System.Boolean> <>9__61_0
void System::Net::Http::HttpClientHandler::$$c::_set_$$9__61_0(System::Func_2<::Il2CppString*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::$$c::_set_$$9__61_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http", "HttpClientHandler/<>c", "<>9__61_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<System.Object> <>9__64_0
System::Action_1<::Il2CppObject*>* System::Net::Http::HttpClientHandler::$$c::_get_$$9__64_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::$$c::_get_$$9__64_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Action_1<::Il2CppObject*>*>("System.Net.Http", "HttpClientHandler/<>c", "<>9__64_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<System.Object> <>9__64_0
void System::Net::Http::HttpClientHandler::$$c::_set_$$9__64_0(System::Action_1<::Il2CppObject*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::$$c::_set_$$9__64_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http", "HttpClientHandler/<>c", "<>9__64_0", value)));
}
// Autogenerated method: System.Net.Http.HttpClientHandler/<>c..cctor
void System::Net::Http::HttpClientHandler::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpClientHandler/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpClientHandler/<>c.<CreateWebRequest>b__61_0
bool System::Net::Http::HttpClientHandler::$$c::$CreateWebRequest$b__61_0(::Il2CppString* l) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::$$c::<CreateWebRequest>b__61_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateWebRequest>b__61_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, l);
}
// Autogenerated method: System.Net.Http.HttpClientHandler/<>c.<SendAsync>b__64_0
void System::Net::Http::HttpClientHandler::$$c::$SendAsync$b__64_0(::Il2CppObject* l) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::$$c::<SendAsync>b__64_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SendAsync>b__64_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, l);
}
// Writing MetadataGetter for method: HttpClientHandler::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&HttpClientHandler::$$c::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpClientHandler::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpClientHandler::$$c::$CreateWebRequest$b__61_0
// Il2CppName: <CreateWebRequest>b__61_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HttpClientHandler::$$c::*)(::Il2CppString*)>(&HttpClientHandler::$$c::$CreateWebRequest$b__61_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpClientHandler::$$c*), "<CreateWebRequest>b__61_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: HttpClientHandler::$$c::$SendAsync$b__64_0
// Il2CppName: <SendAsync>b__64_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpClientHandler::$$c::*)(::Il2CppObject*)>(&HttpClientHandler::$$c::$SendAsync$b__64_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpClientHandler::$$c*), "<SendAsync>b__64_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: HttpClientHandler::$$c::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpClientHandler::$$c::*)()>(&HttpClientHandler::$$c::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpClientHandler::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpClientHandler::$$c::*)()>(&HttpClientHandler::$$c::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpClientHandler::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpClientHandler/<SendAsync>d__64
#include "System/Net/Http/HttpClientHandler_-SendAsync-d__64.hpp"
// Including type: System.Net.Http.HttpResponseMessage
#include "System/Net/Http/HttpResponseMessage.hpp"
// Including type: System.Net.Http.HttpRequestMessage
#include "System/Net/Http/HttpRequestMessage.hpp"
// Including type: System.Net.HttpWebRequest
#include "System/Net/HttpWebRequest.hpp"
// Including type: System.Net.Http.HttpContent
#include "System/Net/Http/HttpContent.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Net.HttpWebResponse
#include "System/Net/HttpWebResponse.hpp"
// Including type: System.Net.WebResponse
#include "System/Net/WebResponse.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.HttpClientHandler/<SendAsync>d__64.MoveNext
void System::Net::Http::HttpClientHandler::$SendAsync$d__64::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::$SendAsync$d__64::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpClientHandler/<SendAsync>d__64.SetStateMachine
void System::Net::Http::HttpClientHandler::$SendAsync$d__64::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpClientHandler::$SendAsync$d__64::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: HttpClientHandler::$SendAsync$d__64::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpClientHandler::$SendAsync$d__64::*)()>(&HttpClientHandler::$SendAsync$d__64::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpClientHandler::$SendAsync$d__64), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpClientHandler::$SendAsync$d__64::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpClientHandler::$SendAsync$d__64::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&HttpClientHandler::$SendAsync$d__64::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpClientHandler::$SendAsync$d__64), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpCompletionOption
#include "System/Net/Http/HttpCompletionOption.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Http.HttpCompletionOption ResponseContentRead
System::Net::Http::HttpCompletionOption System::Net::Http::HttpCompletionOption::_get_ResponseContentRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpCompletionOption::_get_ResponseContentRead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::HttpCompletionOption>("System.Net.Http", "HttpCompletionOption", "ResponseContentRead"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.HttpCompletionOption ResponseContentRead
void System::Net::Http::HttpCompletionOption::_set_ResponseContentRead(System::Net::Http::HttpCompletionOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpCompletionOption::_set_ResponseContentRead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpCompletionOption", "ResponseContentRead", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.HttpCompletionOption ResponseHeadersRead
System::Net::Http::HttpCompletionOption System::Net::Http::HttpCompletionOption::_get_ResponseHeadersRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpCompletionOption::_get_ResponseHeadersRead");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::HttpCompletionOption>("System.Net.Http", "HttpCompletionOption", "ResponseHeadersRead"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.HttpCompletionOption ResponseHeadersRead
void System::Net::Http::HttpCompletionOption::_set_ResponseHeadersRead(System::Net::Http::HttpCompletionOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpCompletionOption::_set_ResponseHeadersRead");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpCompletionOption", "ResponseHeadersRead", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.HttpContent
#include "System/Net/Http/HttpContent.hpp"
// Including type: System.Net.Http.HttpContent/FixedMemoryStream
#include "System/Net/Http/HttpContent_FixedMemoryStream.hpp"
// Including type: System.Net.Http.HttpContent/<LoadIntoBufferAsync>d__17
#include "System/Net/Http/HttpContent_-LoadIntoBufferAsync-d__17.hpp"
// Including type: System.Net.Http.HttpContent/<ReadAsStringAsync>d__20
#include "System/Net/Http/HttpContent_-ReadAsStringAsync-d__20.hpp"
// Including type: System.Net.Http.Headers.HttpContentHeaders
#include "System/Net/Http/Headers/HttpContentHeaders.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Net.TransportContext
#include "System/Net/TransportContext.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Text.Encoding
#include "System/Text/Encoding.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.HttpContent.get_Headers
System::Net::Http::Headers::HttpContentHeaders* System::Net::Http::HttpContent::get_Headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::get_Headers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Headers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Http::Headers::HttpContentHeaders*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpContent.get_LoadedBufferLength
System::Nullable_1<int64_t> System::Net::Http::HttpContent::get_LoadedBufferLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::get_LoadedBufferLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LoadedBufferLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpContent.CopyTo
void System::Net::Http::HttpContent::CopyTo(System::IO::Stream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::CopyTo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: System.Net.Http.HttpContent.CopyToAsync
System::Threading::Tasks::Task* System::Net::Http::HttpContent::CopyToAsync(System::IO::Stream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::CopyToAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyToAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, stream);
}
// Autogenerated method: System.Net.Http.HttpContent.CopyToAsync
System::Threading::Tasks::Task* System::Net::Http::HttpContent::CopyToAsync(System::IO::Stream* stream, System::Net::TransportContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::CopyToAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyToAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: System.Net.Http.HttpContent.CreateFixedMemoryStream
System::Net::Http::HttpContent::FixedMemoryStream* System::Net::Http::HttpContent::CreateFixedMemoryStream(int64_t maxBufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::CreateFixedMemoryStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpContent", "CreateFixedMemoryStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxBufferSize)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Http::HttpContent::FixedMemoryStream*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, maxBufferSize);
}
// Autogenerated method: System.Net.Http.HttpContent.Dispose
void System::Net::Http::HttpContent::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpContent.Dispose
void System::Net::Http::HttpContent::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Http.HttpContent.LoadIntoBufferAsync
System::Threading::Tasks::Task* System::Net::Http::HttpContent::LoadIntoBufferAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::LoadIntoBufferAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadIntoBufferAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpContent.LoadIntoBufferAsync
System::Threading::Tasks::Task* System::Net::Http::HttpContent::LoadIntoBufferAsync(int64_t maxBufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::LoadIntoBufferAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadIntoBufferAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxBufferSize)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, maxBufferSize);
}
// Autogenerated method: System.Net.Http.HttpContent.ReadAsStringAsync
System::Threading::Tasks::Task_1<::Il2CppString*>* System::Net::Http::HttpContent::ReadAsStringAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::ReadAsStringAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadAsStringAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpContent.GetEncodingFromBuffer
System::Text::Encoding* System::Net::Http::HttpContent::GetEncodingFromBuffer(::Array<uint8_t>* buffer, int length, int& preambleLength) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::GetEncodingFromBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpContent", "GetEncodingFromBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(preambleLength)})));
  return ::il2cpp_utils::RunMethodThrow<System::Text::Encoding*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, buffer, length, preambleLength);
}
// Autogenerated method: System.Net.Http.HttpContent.StartsWith
int System::Net::Http::HttpContent::StartsWith(::Array<uint8_t>* array, int length, ::Array<uint8_t>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::StartsWith");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpContent", "StartsWith", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array), ::il2cpp_utils::ExtractType(length), ::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, array, length, value);
}
// Autogenerated method: System.Net.Http.HttpContent.SerializeToStreamAsync
System::Threading::Tasks::Task* System::Net::Http::HttpContent::SerializeToStreamAsync(System::IO::Stream* stream, System::Net::TransportContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::SerializeToStreamAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeToStreamAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: System.Net.Http.HttpContent.TryComputeLength
bool System::Net::Http::HttpContent::TryComputeLength(int64_t& length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::TryComputeLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryComputeLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, length);
}
// Writing MetadataGetter for method: HttpContent::get_Headers
// Il2CppName: get_Headers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::Http::Headers::HttpContentHeaders* (HttpContent::*)()>(&HttpContent::get_Headers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpContent*), "get_Headers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpContent::get_LoadedBufferLength
// Il2CppName: get_LoadedBufferLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Nullable_1<int64_t> (HttpContent::*)()>(&HttpContent::get_LoadedBufferLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpContent*), "get_LoadedBufferLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpContent::CopyTo
// Il2CppName: CopyTo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpContent::*)(System::IO::Stream*)>(&HttpContent::CopyTo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpContent*), "CopyTo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>()});
  }
};
// Writing MetadataGetter for method: HttpContent::CopyToAsync
// Il2CppName: CopyToAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task* (HttpContent::*)(System::IO::Stream*)>(&HttpContent::CopyToAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpContent*), "CopyToAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>()});
  }
};
// Writing MetadataGetter for method: HttpContent::CopyToAsync
// Il2CppName: CopyToAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task* (HttpContent::*)(System::IO::Stream*, System::Net::TransportContext*)>(&HttpContent::CopyToAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpContent*), "CopyToAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::TransportContext*>()});
  }
};
// Writing MetadataGetter for method: HttpContent::CreateFixedMemoryStream
// Il2CppName: CreateFixedMemoryStream
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::Http::HttpContent::FixedMemoryStream* (*)(int64_t)>(&HttpContent::CreateFixedMemoryStream)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpContent*), "CreateFixedMemoryStream", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: HttpContent::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpContent::*)()>(&HttpContent::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpContent*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpContent::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpContent::*)(bool)>(&HttpContent::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpContent*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: HttpContent::LoadIntoBufferAsync
// Il2CppName: LoadIntoBufferAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task* (HttpContent::*)()>(&HttpContent::LoadIntoBufferAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpContent*), "LoadIntoBufferAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpContent::LoadIntoBufferAsync
// Il2CppName: LoadIntoBufferAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task* (HttpContent::*)(int64_t)>(&HttpContent::LoadIntoBufferAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpContent*), "LoadIntoBufferAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: HttpContent::ReadAsStringAsync
// Il2CppName: ReadAsStringAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<::Il2CppString*>* (HttpContent::*)()>(&HttpContent::ReadAsStringAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpContent*), "ReadAsStringAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpContent::GetEncodingFromBuffer
// Il2CppName: GetEncodingFromBuffer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Text::Encoding* (*)(::Array<uint8_t>*, int, int&)>(&HttpContent::GetEncodingFromBuffer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpContent*), "GetEncodingFromBuffer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int&>()});
  }
};
// Writing MetadataGetter for method: HttpContent::StartsWith
// Il2CppName: StartsWith
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (*)(::Array<uint8_t>*, int, ::Array<uint8_t>*)>(&HttpContent::StartsWith)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpContent*), "StartsWith", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>()});
  }
};
// Writing MetadataGetter for method: HttpContent::SerializeToStreamAsync
// Il2CppName: SerializeToStreamAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task* (HttpContent::*)(System::IO::Stream*, System::Net::TransportContext*)>(&HttpContent::SerializeToStreamAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpContent*), "SerializeToStreamAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::TransportContext*>()});
  }
};
// Writing MetadataGetter for method: HttpContent::TryComputeLength
// Il2CppName: TryComputeLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HttpContent::*)(int64_t&)>(&HttpContent::TryComputeLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpContent*), "TryComputeLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t&>()});
  }
};
// Writing MetadataGetter for method: HttpContent::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpContent::*)()>(&HttpContent::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpContent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpContent::*)()>(&HttpContent::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpContent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.HttpContent/FixedMemoryStream
#include "System/Net/Http/HttpContent_FixedMemoryStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.HttpContent/FixedMemoryStream.CheckOverflow
void System::Net::Http::HttpContent::FixedMemoryStream::CheckOverflow(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::FixedMemoryStream::CheckOverflow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckOverflow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, count);
}
// Autogenerated method: System.Net.Http.HttpContent/FixedMemoryStream.WriteByte
void System::Net::Http::HttpContent::FixedMemoryStream::WriteByte(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::FixedMemoryStream::WriteByte");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteByte", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpContent/FixedMemoryStream.Write
void System::Net::Http::HttpContent::FixedMemoryStream::Write(::Array<uint8_t>* buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::FixedMemoryStream::Write");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Writing MetadataGetter for method: HttpContent::FixedMemoryStream::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpContent::FixedMemoryStream::*)(int64_t)>(&HttpContent::FixedMemoryStream::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpContent::FixedMemoryStream*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpContent::FixedMemoryStream::*)(int64_t)>(&HttpContent::FixedMemoryStream::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpContent::FixedMemoryStream*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t>()});
  }
};
// Writing MetadataGetter for method: HttpContent::FixedMemoryStream::CheckOverflow
// Il2CppName: CheckOverflow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpContent::FixedMemoryStream::*)(int)>(&HttpContent::FixedMemoryStream::CheckOverflow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpContent::FixedMemoryStream*), "CheckOverflow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: HttpContent::FixedMemoryStream::WriteByte
// Il2CppName: WriteByte
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpContent::FixedMemoryStream::*)(uint8_t)>(&HttpContent::FixedMemoryStream::WriteByte)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpContent::FixedMemoryStream*), "WriteByte", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<uint8_t>()});
  }
};
// Writing MetadataGetter for method: HttpContent::FixedMemoryStream::Write
// Il2CppName: Write
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpContent::FixedMemoryStream::*)(::Array<uint8_t>*, int, int)>(&HttpContent::FixedMemoryStream::Write)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpContent::FixedMemoryStream*), "Write", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<uint8_t>*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpContent/<LoadIntoBufferAsync>d__17
#include "System/Net/Http/HttpContent_-LoadIntoBufferAsync-d__17.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.HttpContent/<LoadIntoBufferAsync>d__17.MoveNext
void System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpContent/<LoadIntoBufferAsync>d__17.SetStateMachine
void System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::$LoadIntoBufferAsync$d__17::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: HttpContent::$LoadIntoBufferAsync$d__17::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpContent::$LoadIntoBufferAsync$d__17::*)()>(&HttpContent::$LoadIntoBufferAsync$d__17::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpContent::$LoadIntoBufferAsync$d__17), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpContent::$LoadIntoBufferAsync$d__17::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpContent::$LoadIntoBufferAsync$d__17::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&HttpContent::$LoadIntoBufferAsync$d__17::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpContent::$LoadIntoBufferAsync$d__17), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.HttpContent/<ReadAsStringAsync>d__20
#include "System/Net/Http/HttpContent_-ReadAsStringAsync-d__20.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.HttpContent/<ReadAsStringAsync>d__20.MoveNext
void System::Net::Http::HttpContent::$ReadAsStringAsync$d__20::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::$ReadAsStringAsync$d__20::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpContent/<ReadAsStringAsync>d__20.SetStateMachine
void System::Net::Http::HttpContent::$ReadAsStringAsync$d__20::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpContent::$ReadAsStringAsync$d__20::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: HttpContent::$ReadAsStringAsync$d__20::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpContent::$ReadAsStringAsync$d__20::*)()>(&HttpContent::$ReadAsStringAsync$d__20::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpContent::$ReadAsStringAsync$d__20), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpContent::$ReadAsStringAsync$d__20::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpContent::$ReadAsStringAsync$d__20::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&HttpContent::$ReadAsStringAsync$d__20::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpContent::$ReadAsStringAsync$d__20), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpMessageHandler
#include "System/Net/Http/HttpMessageHandler.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Net.Http.HttpResponseMessage
#include "System/Net/Http/HttpResponseMessage.hpp"
// Including type: System.Net.Http.HttpRequestMessage
#include "System/Net/Http/HttpRequestMessage.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.HttpMessageHandler.Dispose
void System::Net::Http::HttpMessageHandler::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMessageHandler::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpMessageHandler.Dispose
void System::Net::Http::HttpMessageHandler::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMessageHandler::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Http.HttpMessageHandler.SendAsync
System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpMessageHandler::SendAsync(System::Net::Http::HttpRequestMessage* request, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMessageHandler::SendAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, request, cancellationToken);
}
// Writing MetadataGetter for method: HttpMessageHandler::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpMessageHandler::*)()>(&HttpMessageHandler::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpMessageHandler*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpMessageHandler::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpMessageHandler::*)(bool)>(&HttpMessageHandler::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpMessageHandler*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: HttpMessageHandler::SendAsync
// Il2CppName: SendAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>* (HttpMessageHandler::*)(System::Net::Http::HttpRequestMessage*, System::Threading::CancellationToken)>(&HttpMessageHandler::SendAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpMessageHandler*), "SendAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Http::HttpRequestMessage*>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: HttpMessageHandler::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpMessageHandler::*)()>(&HttpMessageHandler::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpMessageHandler*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpMessageHandler::*)()>(&HttpMessageHandler::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpMessageHandler*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.HttpMessageInvoker
#include "System/Net/Http/HttpMessageInvoker.hpp"
// Including type: System.Net.Http.HttpMessageHandler
#include "System/Net/Http/HttpMessageHandler.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Net.Http.HttpResponseMessage
#include "System/Net/Http/HttpResponseMessage.hpp"
// Including type: System.Net.Http.HttpRequestMessage
#include "System/Net/Http/HttpRequestMessage.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.HttpMessageInvoker.Dispose
void System::Net::Http::HttpMessageInvoker::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMessageInvoker::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpMessageInvoker.Dispose
void System::Net::Http::HttpMessageInvoker::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMessageInvoker::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Http.HttpMessageInvoker.SendAsync
System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>* System::Net::Http::HttpMessageInvoker::SendAsync(System::Net::Http::HttpRequestMessage* request, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMessageInvoker::SendAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(request), ::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>*, false>(this, ___internal__method, request, cancellationToken);
}
// Writing MetadataGetter for method: HttpMessageInvoker::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpMessageInvoker::*)(System::Net::Http::HttpMessageHandler*, bool)>(&HttpMessageInvoker::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpMessageInvoker*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Http::HttpMessageHandler*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpMessageInvoker::*)(System::Net::Http::HttpMessageHandler*, bool)>(&HttpMessageInvoker::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpMessageInvoker*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Http::HttpMessageHandler*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: HttpMessageInvoker::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpMessageInvoker::*)()>(&HttpMessageInvoker::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpMessageInvoker*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpMessageInvoker::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpMessageInvoker::*)(bool)>(&HttpMessageInvoker::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpMessageInvoker*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: HttpMessageInvoker::SendAsync
// Il2CppName: SendAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task_1<System::Net::Http::HttpResponseMessage*>* (HttpMessageInvoker::*)(System::Net::Http::HttpRequestMessage*, System::Threading::CancellationToken)>(&HttpMessageInvoker::SendAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpMessageInvoker*), "SendAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Http::HttpRequestMessage*>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.HttpMethod
#include "System/Net/Http/HttpMethod.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Http.HttpMethod delete_method
System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::_get_delete_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::_get_delete_method");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::HttpMethod*>("System.Net.Http", "HttpMethod", "delete_method"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Http.HttpMethod delete_method
void System::Net::Http::HttpMethod::_set_delete_method(System::Net::Http::HttpMethod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::_set_delete_method");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpMethod", "delete_method", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Http.HttpMethod get_method
System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::_get_get_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::_get_get_method");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::HttpMethod*>("System.Net.Http", "HttpMethod", "get_method"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Http.HttpMethod get_method
void System::Net::Http::HttpMethod::_set_get_method(System::Net::Http::HttpMethod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::_set_get_method");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpMethod", "get_method", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Http.HttpMethod head_method
System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::_get_head_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::_get_head_method");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::HttpMethod*>("System.Net.Http", "HttpMethod", "head_method"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Http.HttpMethod head_method
void System::Net::Http::HttpMethod::_set_head_method(System::Net::Http::HttpMethod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::_set_head_method");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpMethod", "head_method", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Http.HttpMethod options_method
System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::_get_options_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::_get_options_method");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::HttpMethod*>("System.Net.Http", "HttpMethod", "options_method"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Http.HttpMethod options_method
void System::Net::Http::HttpMethod::_set_options_method(System::Net::Http::HttpMethod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::_set_options_method");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpMethod", "options_method", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Http.HttpMethod post_method
System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::_get_post_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::_get_post_method");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::HttpMethod*>("System.Net.Http", "HttpMethod", "post_method"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Http.HttpMethod post_method
void System::Net::Http::HttpMethod::_set_post_method(System::Net::Http::HttpMethod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::_set_post_method");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpMethod", "post_method", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Http.HttpMethod put_method
System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::_get_put_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::_get_put_method");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::HttpMethod*>("System.Net.Http", "HttpMethod", "put_method"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Http.HttpMethod put_method
void System::Net::Http::HttpMethod::_set_put_method(System::Net::Http::HttpMethod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::_set_put_method");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpMethod", "put_method", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Http.HttpMethod trace_method
System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::_get_trace_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::_get_trace_method");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::HttpMethod*>("System.Net.Http", "HttpMethod", "trace_method"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Http.HttpMethod trace_method
void System::Net::Http::HttpMethod::_set_trace_method(System::Net::Http::HttpMethod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::_set_trace_method");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http", "HttpMethod", "trace_method", value));
}
// Autogenerated method: System.Net.Http.HttpMethod.get_Get
System::Net::Http::HttpMethod* System::Net::Http::HttpMethod::get_Get() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::get_Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpMethod", "get_Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Http::HttpMethod*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpMethod.get_Method
::Il2CppString* System::Net::Http::HttpMethod::get_Method() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::get_Method");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpMethod.Equals
bool System::Net::Http::HttpMethod::Equals(System::Net::Http::HttpMethod* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: System.Net.Http.HttpMethod..cctor
void System::Net::Http::HttpMethod::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpMethod", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpMethod.Equals
bool System::Net::Http::HttpMethod::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.HttpMethod.GetHashCode
int System::Net::Http::HttpMethod::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpMethod.ToString
::Il2CppString* System::Net::Http::HttpMethod::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpMethod.op_Equality
bool System::Net::Http::operator ==(System::Net::Http::HttpMethod* left, System::Net::Http::HttpMethod& right) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpMethod::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpMethod", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(left), ::il2cpp_utils::ExtractType(&right)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, left, &right);
}
// Writing MetadataGetter for method: HttpMethod::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpMethod::*)(::Il2CppString*)>(&HttpMethod::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpMethod*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpMethod::*)(::Il2CppString*)>(&HttpMethod::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpMethod*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: HttpMethod::get_Get
// Il2CppName: get_Get
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::Http::HttpMethod* (*)()>(&HttpMethod::get_Get)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpMethod*), "get_Get", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpMethod::get_Method
// Il2CppName: get_Method
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (HttpMethod::*)()>(&HttpMethod::get_Method)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpMethod*), "get_Method", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpMethod::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HttpMethod::*)(System::Net::Http::HttpMethod*)>(&HttpMethod::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpMethod*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Http::HttpMethod*>()});
  }
};
// Writing MetadataGetter for method: HttpMethod::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&HttpMethod::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpMethod*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpMethod::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HttpMethod::*)(::Il2CppObject*)>(&HttpMethod::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpMethod*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: HttpMethod::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (HttpMethod::*)()>(&HttpMethod::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpMethod*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpMethod::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (HttpMethod::*)()>(&HttpMethod::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpMethod*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpMethod::operator ==
// Il2CppName: op_Equality
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::Net::Http::HttpMethod*, System::Net::Http::HttpMethod&)>(&HttpMethod::operator ==)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpMethod*), "op_Equality", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Http::HttpMethod*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::HttpMethod&>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.HttpRequestException
#include "System/Net/Http/HttpRequestException.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: HttpRequestException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpRequestException::*)()>(&HttpRequestException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpRequestException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpRequestException::*)()>(&HttpRequestException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpRequestException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpRequestException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpRequestException::*)(::Il2CppString*)>(&HttpRequestException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpRequestException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpRequestException::*)(::Il2CppString*)>(&HttpRequestException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpRequestException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: HttpRequestException::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpRequestException::*)(::Il2CppString*, System::Exception*)>(&HttpRequestException::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpRequestException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Exception*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpRequestException::*)(::Il2CppString*, System::Exception*)>(&HttpRequestException::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpRequestException*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Exception*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.HttpRequestMessage
#include "System/Net/Http/HttpRequestMessage.hpp"
// Including type: System.Net.Http.Headers.HttpRequestHeaders
#include "System/Net/Http/Headers/HttpRequestHeaders.hpp"
// Including type: System.Net.Http.HttpMethod
#include "System/Net/Http/HttpMethod.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Net.Http.HttpContent
#include "System/Net/Http/HttpContent.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.HttpRequestMessage.get_Content
System::Net::Http::HttpContent* System::Net::Http::HttpRequestMessage::get_Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpRequestMessage::get_Content");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Content", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Http::HttpContent*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.get_Headers
System::Net::Http::Headers::HttpRequestHeaders* System::Net::Http::HttpRequestMessage::get_Headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpRequestMessage::get_Headers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Headers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Http::Headers::HttpRequestHeaders*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.get_Method
System::Net::Http::HttpMethod* System::Net::Http::HttpRequestMessage::get_Method() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpRequestMessage::get_Method");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Http::HttpMethod*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.set_Method
void System::Net::Http::HttpRequestMessage::set_Method(System::Net::Http::HttpMethod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpRequestMessage::set_Method");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.get_RequestUri
System::Uri* System::Net::Http::HttpRequestMessage::get_RequestUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpRequestMessage::get_RequestUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RequestUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.set_RequestUri
void System::Net::Http::HttpRequestMessage::set_RequestUri(System::Uri* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpRequestMessage::set_RequestUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RequestUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.IsAllowedAbsoluteUri
bool System::Net::Http::HttpRequestMessage::IsAllowedAbsoluteUri(System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpRequestMessage::IsAllowedAbsoluteUri");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http", "HttpRequestMessage", "IsAllowedAbsoluteUri", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(uri)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, uri);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.get_Version
System::Version* System::Net::Http::HttpRequestMessage::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpRequestMessage::get_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Version*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.Dispose
void System::Net::Http::HttpRequestMessage::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpRequestMessage::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.Dispose
void System::Net::Http::HttpRequestMessage::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpRequestMessage::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.SetIsUsed
bool System::Net::Http::HttpRequestMessage::SetIsUsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpRequestMessage::SetIsUsed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsUsed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpRequestMessage.ToString
::Il2CppString* System::Net::Http::HttpRequestMessage::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpRequestMessage::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: HttpRequestMessage::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpRequestMessage::*)(System::Net::Http::HttpMethod*, ::Il2CppString*)>(&HttpRequestMessage::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpRequestMessage*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Http::HttpMethod*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpRequestMessage::*)(System::Net::Http::HttpMethod*, ::Il2CppString*)>(&HttpRequestMessage::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpRequestMessage*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Http::HttpMethod*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: HttpRequestMessage::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpRequestMessage::*)(System::Net::Http::HttpMethod*, System::Uri*)>(&HttpRequestMessage::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpRequestMessage*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Http::HttpMethod*>(), ::il2cpp_utils::ExtractIndependentType<System::Uri*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpRequestMessage::*)(System::Net::Http::HttpMethod*, System::Uri*)>(&HttpRequestMessage::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpRequestMessage*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Http::HttpMethod*>(), ::il2cpp_utils::ExtractIndependentType<System::Uri*>()});
  }
};
// Writing MetadataGetter for method: HttpRequestMessage::get_Content
// Il2CppName: get_Content
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::Http::HttpContent* (HttpRequestMessage::*)()>(&HttpRequestMessage::get_Content)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpRequestMessage*), "get_Content", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpRequestMessage::get_Headers
// Il2CppName: get_Headers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::Http::Headers::HttpRequestHeaders* (HttpRequestMessage::*)()>(&HttpRequestMessage::get_Headers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpRequestMessage*), "get_Headers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpRequestMessage::get_Method
// Il2CppName: get_Method
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::Http::HttpMethod* (HttpRequestMessage::*)()>(&HttpRequestMessage::get_Method)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpRequestMessage*), "get_Method", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpRequestMessage::set_Method
// Il2CppName: set_Method
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpRequestMessage::*)(System::Net::Http::HttpMethod*)>(&HttpRequestMessage::set_Method)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpRequestMessage*), "set_Method", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Http::HttpMethod*>()});
  }
};
// Writing MetadataGetter for method: HttpRequestMessage::get_RequestUri
// Il2CppName: get_RequestUri
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Uri* (HttpRequestMessage::*)()>(&HttpRequestMessage::get_RequestUri)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpRequestMessage*), "get_RequestUri", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpRequestMessage::set_RequestUri
// Il2CppName: set_RequestUri
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpRequestMessage::*)(System::Uri*)>(&HttpRequestMessage::set_RequestUri)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpRequestMessage*), "set_RequestUri", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Uri*>()});
  }
};
// Writing MetadataGetter for method: HttpRequestMessage::IsAllowedAbsoluteUri
// Il2CppName: IsAllowedAbsoluteUri
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::Uri*)>(&HttpRequestMessage::IsAllowedAbsoluteUri)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpRequestMessage*), "IsAllowedAbsoluteUri", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Uri*>()});
  }
};
// Writing MetadataGetter for method: HttpRequestMessage::get_Version
// Il2CppName: get_Version
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Version* (HttpRequestMessage::*)()>(&HttpRequestMessage::get_Version)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpRequestMessage*), "get_Version", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpRequestMessage::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpRequestMessage::*)()>(&HttpRequestMessage::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpRequestMessage*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpRequestMessage::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpRequestMessage::*)(bool)>(&HttpRequestMessage::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpRequestMessage*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: HttpRequestMessage::SetIsUsed
// Il2CppName: SetIsUsed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HttpRequestMessage::*)()>(&HttpRequestMessage::SetIsUsed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpRequestMessage*), "SetIsUsed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpRequestMessage::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (HttpRequestMessage::*)()>(&HttpRequestMessage::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpRequestMessage*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.HttpResponseMessage
#include "System/Net/Http/HttpResponseMessage.hpp"
// Including type: System.Net.Http.Headers.HttpResponseHeaders
#include "System/Net/Http/Headers/HttpResponseHeaders.hpp"
// Including type: System.Version
#include "System/Version.hpp"
// Including type: System.Net.Http.HttpContent
#include "System/Net/Http/HttpContent.hpp"
// Including type: System.Net.Http.HttpRequestMessage
#include "System/Net/Http/HttpRequestMessage.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.HttpResponseMessage.get_Content
System::Net::Http::HttpContent* System::Net::Http::HttpResponseMessage::get_Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpResponseMessage::get_Content");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Content", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Http::HttpContent*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.set_Content
void System::Net::Http::HttpResponseMessage::set_Content(System::Net::Http::HttpContent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpResponseMessage::set_Content");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Content", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.get_Headers
System::Net::Http::Headers::HttpResponseHeaders* System::Net::Http::HttpResponseMessage::get_Headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpResponseMessage::get_Headers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Headers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Http::Headers::HttpResponseHeaders*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.get_IsSuccessStatusCode
bool System::Net::Http::HttpResponseMessage::get_IsSuccessStatusCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpResponseMessage::get_IsSuccessStatusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsSuccessStatusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.get_ReasonPhrase
::Il2CppString* System::Net::Http::HttpResponseMessage::get_ReasonPhrase() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpResponseMessage::get_ReasonPhrase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReasonPhrase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.set_ReasonPhrase
void System::Net::Http::HttpResponseMessage::set_ReasonPhrase(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpResponseMessage::set_ReasonPhrase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReasonPhrase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.set_RequestMessage
void System::Net::Http::HttpResponseMessage::set_RequestMessage(System::Net::Http::HttpRequestMessage* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpResponseMessage::set_RequestMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RequestMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.get_StatusCode
System::Net::HttpStatusCode System::Net::Http::HttpResponseMessage::get_StatusCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpResponseMessage::get_StatusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StatusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::HttpStatusCode, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.set_StatusCode
void System::Net::Http::HttpResponseMessage::set_StatusCode(System::Net::HttpStatusCode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpResponseMessage::set_StatusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StatusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.get_Version
System::Version* System::Net::Http::HttpResponseMessage::get_Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpResponseMessage::get_Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Version*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.Dispose
void System::Net::Http::HttpResponseMessage::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpResponseMessage::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.Dispose
void System::Net::Http::HttpResponseMessage::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpResponseMessage::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode
System::Net::Http::HttpResponseMessage* System::Net::Http::HttpResponseMessage::EnsureSuccessStatusCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpResponseMessage::EnsureSuccessStatusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureSuccessStatusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Http::HttpResponseMessage*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.HttpResponseMessage.ToString
::Il2CppString* System::Net::Http::HttpResponseMessage::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::HttpResponseMessage::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: HttpResponseMessage::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpResponseMessage::*)(System::Net::HttpStatusCode)>(&HttpResponseMessage::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpResponseMessage*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::HttpStatusCode>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpResponseMessage::*)(System::Net::HttpStatusCode)>(&HttpResponseMessage::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpResponseMessage*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::HttpStatusCode>()});
  }
};
// Writing MetadataGetter for method: HttpResponseMessage::get_Content
// Il2CppName: get_Content
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::Http::HttpContent* (HttpResponseMessage::*)()>(&HttpResponseMessage::get_Content)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpResponseMessage*), "get_Content", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpResponseMessage::set_Content
// Il2CppName: set_Content
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpResponseMessage::*)(System::Net::Http::HttpContent*)>(&HttpResponseMessage::set_Content)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpResponseMessage*), "set_Content", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Http::HttpContent*>()});
  }
};
// Writing MetadataGetter for method: HttpResponseMessage::get_Headers
// Il2CppName: get_Headers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::Http::Headers::HttpResponseHeaders* (HttpResponseMessage::*)()>(&HttpResponseMessage::get_Headers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpResponseMessage*), "get_Headers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpResponseMessage::get_IsSuccessStatusCode
// Il2CppName: get_IsSuccessStatusCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HttpResponseMessage::*)()>(&HttpResponseMessage::get_IsSuccessStatusCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpResponseMessage*), "get_IsSuccessStatusCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpResponseMessage::get_ReasonPhrase
// Il2CppName: get_ReasonPhrase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (HttpResponseMessage::*)()>(&HttpResponseMessage::get_ReasonPhrase)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpResponseMessage*), "get_ReasonPhrase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpResponseMessage::set_ReasonPhrase
// Il2CppName: set_ReasonPhrase
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpResponseMessage::*)(::Il2CppString*)>(&HttpResponseMessage::set_ReasonPhrase)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpResponseMessage*), "set_ReasonPhrase", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: HttpResponseMessage::set_RequestMessage
// Il2CppName: set_RequestMessage
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpResponseMessage::*)(System::Net::Http::HttpRequestMessage*)>(&HttpResponseMessage::set_RequestMessage)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpResponseMessage*), "set_RequestMessage", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Http::HttpRequestMessage*>()});
  }
};
// Writing MetadataGetter for method: HttpResponseMessage::get_StatusCode
// Il2CppName: get_StatusCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::HttpStatusCode (HttpResponseMessage::*)()>(&HttpResponseMessage::get_StatusCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpResponseMessage*), "get_StatusCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpResponseMessage::set_StatusCode
// Il2CppName: set_StatusCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpResponseMessage::*)(System::Net::HttpStatusCode)>(&HttpResponseMessage::set_StatusCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpResponseMessage*), "set_StatusCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::HttpStatusCode>()});
  }
};
// Writing MetadataGetter for method: HttpResponseMessage::get_Version
// Il2CppName: get_Version
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Version* (HttpResponseMessage::*)()>(&HttpResponseMessage::get_Version)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpResponseMessage*), "get_Version", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpResponseMessage::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpResponseMessage::*)()>(&HttpResponseMessage::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpResponseMessage*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpResponseMessage::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpResponseMessage::*)(bool)>(&HttpResponseMessage::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpResponseMessage*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: HttpResponseMessage::EnsureSuccessStatusCode
// Il2CppName: EnsureSuccessStatusCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::Http::HttpResponseMessage* (HttpResponseMessage::*)()>(&HttpResponseMessage::EnsureSuccessStatusCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpResponseMessage*), "EnsureSuccessStatusCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpResponseMessage::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (HttpResponseMessage::*)()>(&HttpResponseMessage::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpResponseMessage*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.StreamContent
#include "System/Net/Http/StreamContent.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Net.TransportContext
#include "System/Net/TransportContext.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.StreamContent.Dispose
void System::Net::Http::StreamContent::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::StreamContent::Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(disposing)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: System.Net.Http.StreamContent.SerializeToStreamAsync
System::Threading::Tasks::Task* System::Net::Http::StreamContent::SerializeToStreamAsync(System::IO::Stream* stream, System::Net::TransportContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::StreamContent::SerializeToStreamAsync");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SerializeToStreamAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(context)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, stream, context);
}
// Autogenerated method: System.Net.Http.StreamContent.TryComputeLength
bool System::Net::Http::StreamContent::TryComputeLength(int64_t& length) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::StreamContent::TryComputeLength");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryComputeLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, length);
}
// Writing MetadataGetter for method: StreamContent::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StreamContent::*)(System::IO::Stream*)>(&StreamContent::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StreamContent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StreamContent::*)(System::IO::Stream*)>(&StreamContent::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StreamContent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>()});
  }
};
// Writing MetadataGetter for method: StreamContent::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StreamContent::*)(System::IO::Stream*, int)>(&StreamContent::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StreamContent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StreamContent::*)(System::IO::Stream*, int)>(&StreamContent::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StreamContent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: StreamContent::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StreamContent::*)(System::IO::Stream*, System::Threading::CancellationToken)>(&StreamContent::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StreamContent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StreamContent::*)(System::IO::Stream*, System::Threading::CancellationToken)>(&StreamContent::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StreamContent*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>(), ::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: StreamContent::Dispose
// Il2CppName: Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StreamContent::*)(bool)>(&StreamContent::Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StreamContent*), "Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: StreamContent::SerializeToStreamAsync
// Il2CppName: SerializeToStreamAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task* (StreamContent::*)(System::IO::Stream*, System::Net::TransportContext*)>(&StreamContent::SerializeToStreamAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StreamContent*), "SerializeToStreamAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::IO::Stream*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::TransportContext*>()});
  }
};
// Writing MetadataGetter for method: StreamContent::TryComputeLength
// Il2CppName: TryComputeLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (StreamContent::*)(int64_t&)>(&StreamContent::TryComputeLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StreamContent*), "TryComputeLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int64_t&>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.AuthenticationHeaderValue
#include "System/Net/Http/Headers/AuthenticationHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.get_Parameter
::Il2CppString* System::Net::Http::Headers::AuthenticationHeaderValue::get_Parameter() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::AuthenticationHeaderValue::get_Parameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.set_Parameter
void System::Net::Http::Headers::AuthenticationHeaderValue::set_Parameter(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::AuthenticationHeaderValue::set_Parameter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Parameter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.get_Scheme
::Il2CppString* System::Net::Http::Headers::AuthenticationHeaderValue::get_Scheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::AuthenticationHeaderValue::get_Scheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Scheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.set_Scheme
void System::Net::Http::Headers::AuthenticationHeaderValue::set_Scheme(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::AuthenticationHeaderValue::set_Scheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Scheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::AuthenticationHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::AuthenticationHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.TryParse
bool System::Net::Http::Headers::AuthenticationHeaderValue::TryParse(::Il2CppString* input, System::Net::Http::Headers::AuthenticationHeaderValue*& parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::AuthenticationHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "AuthenticationHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::AuthenticationHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, parsedValue);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.TryParse
bool System::Net::Http::Headers::AuthenticationHeaderValue::TryParse(::Il2CppString* input, int minimalCount, System::Collections::Generic::List_1<System::Net::Http::Headers::AuthenticationHeaderValue*>*& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::AuthenticationHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "AuthenticationHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<System::Net::Http::Headers::AuthenticationHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, minimalCount, result);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.TryParseElement
bool System::Net::Http::Headers::AuthenticationHeaderValue::TryParseElement(System::Net::Http::Headers::Lexer* lexer, System::Net::Http::Headers::AuthenticationHeaderValue*& parsedValue, System::Net::Http::Headers::Token& t) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::AuthenticationHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "AuthenticationHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::AuthenticationHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lexer, parsedValue, t);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.Equals
bool System::Net::Http::Headers::AuthenticationHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::AuthenticationHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.GetHashCode
int System::Net::Http::Headers::AuthenticationHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::AuthenticationHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.AuthenticationHeaderValue.ToString
::Il2CppString* System::Net::Http::Headers::AuthenticationHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::AuthenticationHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: AuthenticationHeaderValue::get_Parameter
// Il2CppName: get_Parameter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (AuthenticationHeaderValue::*)()>(&AuthenticationHeaderValue::get_Parameter)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AuthenticationHeaderValue*), "get_Parameter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AuthenticationHeaderValue::set_Parameter
// Il2CppName: set_Parameter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AuthenticationHeaderValue::*)(::Il2CppString*)>(&AuthenticationHeaderValue::set_Parameter)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AuthenticationHeaderValue*), "set_Parameter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: AuthenticationHeaderValue::get_Scheme
// Il2CppName: get_Scheme
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (AuthenticationHeaderValue::*)()>(&AuthenticationHeaderValue::get_Scheme)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AuthenticationHeaderValue*), "get_Scheme", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AuthenticationHeaderValue::set_Scheme
// Il2CppName: set_Scheme
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AuthenticationHeaderValue::*)(::Il2CppString*)>(&AuthenticationHeaderValue::set_Scheme)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AuthenticationHeaderValue*), "set_Scheme", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: AuthenticationHeaderValue::System_ICloneable_Clone
// Il2CppName: System.ICloneable.Clone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (AuthenticationHeaderValue::*)()>(&AuthenticationHeaderValue::System_ICloneable_Clone)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AuthenticationHeaderValue*), "System.ICloneable.Clone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AuthenticationHeaderValue::TryParse
// Il2CppName: TryParse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppString*, System::Net::Http::Headers::AuthenticationHeaderValue*&)>(&AuthenticationHeaderValue::TryParse)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AuthenticationHeaderValue*), "TryParse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::AuthenticationHeaderValue*&>()});
  }
};
// Writing MetadataGetter for method: AuthenticationHeaderValue::TryParse
// Il2CppName: TryParse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppString*, int, System::Collections::Generic::List_1<System::Net::Http::Headers::AuthenticationHeaderValue*>*&)>(&AuthenticationHeaderValue::TryParse)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AuthenticationHeaderValue*), "TryParse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<System::Net::Http::Headers::AuthenticationHeaderValue*>*&>()});
  }
};
// Writing MetadataGetter for method: AuthenticationHeaderValue::TryParseElement
// Il2CppName: TryParseElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::Net::Http::Headers::Lexer*, System::Net::Http::Headers::AuthenticationHeaderValue*&, System::Net::Http::Headers::Token&)>(&AuthenticationHeaderValue::TryParseElement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AuthenticationHeaderValue*), "TryParseElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::Lexer*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::AuthenticationHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::Token&>()});
  }
};
// Writing MetadataGetter for method: AuthenticationHeaderValue::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AuthenticationHeaderValue::*)()>(&AuthenticationHeaderValue::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AuthenticationHeaderValue*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AuthenticationHeaderValue::*)()>(&AuthenticationHeaderValue::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AuthenticationHeaderValue*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AuthenticationHeaderValue::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (AuthenticationHeaderValue::*)(::Il2CppObject*)>(&AuthenticationHeaderValue::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AuthenticationHeaderValue*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: AuthenticationHeaderValue::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (AuthenticationHeaderValue::*)()>(&AuthenticationHeaderValue::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AuthenticationHeaderValue*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AuthenticationHeaderValue::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (AuthenticationHeaderValue::*)()>(&AuthenticationHeaderValue::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AuthenticationHeaderValue*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.CacheControlHeaderValue
#include "System/Net/Http/Headers/CacheControlHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.NameValueHeaderValue
#include "System/Net/Http/Headers/NameValueHeaderValue.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_Extensions
System::Collections::Generic::ICollection_1<System::Net::Http::Headers::NameValueHeaderValue*>* System::Net::Http::Headers::CacheControlHeaderValue::get_Extensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::get_Extensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Extensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::ICollection_1<System::Net::Http::Headers::NameValueHeaderValue*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_MaxAge
System::Nullable_1<System::TimeSpan> System::Net::Http::Headers::CacheControlHeaderValue::get_MaxAge() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::get_MaxAge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxAge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<System::TimeSpan>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_MaxAge
void System::Net::Http::Headers::CacheControlHeaderValue::set_MaxAge(System::Nullable_1<System::TimeSpan> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::set_MaxAge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxAge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_MaxStale
bool System::Net::Http::Headers::CacheControlHeaderValue::get_MaxStale() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::get_MaxStale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxStale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_MaxStale
void System::Net::Http::Headers::CacheControlHeaderValue::set_MaxStale(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::set_MaxStale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxStale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_MaxStaleLimit
System::Nullable_1<System::TimeSpan> System::Net::Http::Headers::CacheControlHeaderValue::get_MaxStaleLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::get_MaxStaleLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxStaleLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<System::TimeSpan>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_MaxStaleLimit
void System::Net::Http::Headers::CacheControlHeaderValue::set_MaxStaleLimit(System::Nullable_1<System::TimeSpan> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::set_MaxStaleLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxStaleLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_MinFresh
System::Nullable_1<System::TimeSpan> System::Net::Http::Headers::CacheControlHeaderValue::get_MinFresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::get_MinFresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MinFresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<System::TimeSpan>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_MinFresh
void System::Net::Http::Headers::CacheControlHeaderValue::set_MinFresh(System::Nullable_1<System::TimeSpan> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::set_MinFresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MinFresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_MustRevalidate
bool System::Net::Http::Headers::CacheControlHeaderValue::get_MustRevalidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::get_MustRevalidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MustRevalidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_MustRevalidate
void System::Net::Http::Headers::CacheControlHeaderValue::set_MustRevalidate(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::set_MustRevalidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MustRevalidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_NoCache
bool System::Net::Http::Headers::CacheControlHeaderValue::get_NoCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::get_NoCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NoCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_NoCache
void System::Net::Http::Headers::CacheControlHeaderValue::set_NoCache(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::set_NoCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NoCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_NoCacheHeaders
System::Collections::Generic::ICollection_1<::Il2CppString*>* System::Net::Http::Headers::CacheControlHeaderValue::get_NoCacheHeaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::get_NoCacheHeaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NoCacheHeaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::ICollection_1<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_NoStore
bool System::Net::Http::Headers::CacheControlHeaderValue::get_NoStore() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::get_NoStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NoStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_NoStore
void System::Net::Http::Headers::CacheControlHeaderValue::set_NoStore(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::set_NoStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NoStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_NoTransform
bool System::Net::Http::Headers::CacheControlHeaderValue::get_NoTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::get_NoTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NoTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_NoTransform
void System::Net::Http::Headers::CacheControlHeaderValue::set_NoTransform(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::set_NoTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NoTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_OnlyIfCached
bool System::Net::Http::Headers::CacheControlHeaderValue::get_OnlyIfCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::get_OnlyIfCached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnlyIfCached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_OnlyIfCached
void System::Net::Http::Headers::CacheControlHeaderValue::set_OnlyIfCached(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::set_OnlyIfCached");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OnlyIfCached", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_Private
bool System::Net::Http::Headers::CacheControlHeaderValue::get_Private() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::get_Private");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Private", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_Private
void System::Net::Http::Headers::CacheControlHeaderValue::set_Private(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::set_Private");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Private", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_PrivateHeaders
System::Collections::Generic::ICollection_1<::Il2CppString*>* System::Net::Http::Headers::CacheControlHeaderValue::get_PrivateHeaders() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::get_PrivateHeaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PrivateHeaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::ICollection_1<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_ProxyRevalidate
bool System::Net::Http::Headers::CacheControlHeaderValue::get_ProxyRevalidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::get_ProxyRevalidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProxyRevalidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_ProxyRevalidate
void System::Net::Http::Headers::CacheControlHeaderValue::set_ProxyRevalidate(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::set_ProxyRevalidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ProxyRevalidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_Public
bool System::Net::Http::Headers::CacheControlHeaderValue::get_Public() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::get_Public");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Public", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_Public
void System::Net::Http::Headers::CacheControlHeaderValue::set_Public(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::set_Public");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Public", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.get_SharedMaxAge
System::Nullable_1<System::TimeSpan> System::Net::Http::Headers::CacheControlHeaderValue::get_SharedMaxAge() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::get_SharedMaxAge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SharedMaxAge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<System::TimeSpan>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.set_SharedMaxAge
void System::Net::Http::Headers::CacheControlHeaderValue::set_SharedMaxAge(System::Nullable_1<System::TimeSpan> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::set_SharedMaxAge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SharedMaxAge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::CacheControlHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.TryParse
bool System::Net::Http::Headers::CacheControlHeaderValue::TryParse(::Il2CppString* input, System::Net::Http::Headers::CacheControlHeaderValue*& parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "CacheControlHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::CacheControlHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, parsedValue);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.Equals
bool System::Net::Http::Headers::CacheControlHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode
int System::Net::Http::Headers::CacheControlHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.CacheControlHeaderValue.ToString
::Il2CppString* System::Net::Http::Headers::CacheControlHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CacheControlHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: CacheControlHeaderValue::get_Extensions
// Il2CppName: get_Extensions
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::ICollection_1<System::Net::Http::Headers::NameValueHeaderValue*>* (CacheControlHeaderValue::*)()>(&CacheControlHeaderValue::get_Extensions)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CacheControlHeaderValue*), "get_Extensions", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CacheControlHeaderValue::get_MaxAge
// Il2CppName: get_MaxAge
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Nullable_1<System::TimeSpan> (CacheControlHeaderValue::*)()>(&CacheControlHeaderValue::get_MaxAge)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CacheControlHeaderValue*), "get_MaxAge", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CacheControlHeaderValue::set_MaxAge
// Il2CppName: set_MaxAge
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CacheControlHeaderValue::*)(System::Nullable_1<System::TimeSpan>)>(&CacheControlHeaderValue::set_MaxAge)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CacheControlHeaderValue*), "set_MaxAge", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Nullable_1<System::TimeSpan>>()});
  }
};
// Writing MetadataGetter for method: CacheControlHeaderValue::get_MaxStale
// Il2CppName: get_MaxStale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CacheControlHeaderValue::*)()>(&CacheControlHeaderValue::get_MaxStale)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CacheControlHeaderValue*), "get_MaxStale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CacheControlHeaderValue::set_MaxStale
// Il2CppName: set_MaxStale
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CacheControlHeaderValue::*)(bool)>(&CacheControlHeaderValue::set_MaxStale)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CacheControlHeaderValue*), "set_MaxStale", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CacheControlHeaderValue::get_MaxStaleLimit
// Il2CppName: get_MaxStaleLimit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Nullable_1<System::TimeSpan> (CacheControlHeaderValue::*)()>(&CacheControlHeaderValue::get_MaxStaleLimit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CacheControlHeaderValue*), "get_MaxStaleLimit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CacheControlHeaderValue::set_MaxStaleLimit
// Il2CppName: set_MaxStaleLimit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CacheControlHeaderValue::*)(System::Nullable_1<System::TimeSpan>)>(&CacheControlHeaderValue::set_MaxStaleLimit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CacheControlHeaderValue*), "set_MaxStaleLimit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Nullable_1<System::TimeSpan>>()});
  }
};
// Writing MetadataGetter for method: CacheControlHeaderValue::get_MinFresh
// Il2CppName: get_MinFresh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Nullable_1<System::TimeSpan> (CacheControlHeaderValue::*)()>(&CacheControlHeaderValue::get_MinFresh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CacheControlHeaderValue*), "get_MinFresh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CacheControlHeaderValue::set_MinFresh
// Il2CppName: set_MinFresh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CacheControlHeaderValue::*)(System::Nullable_1<System::TimeSpan>)>(&CacheControlHeaderValue::set_MinFresh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CacheControlHeaderValue*), "set_MinFresh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Nullable_1<System::TimeSpan>>()});
  }
};
// Writing MetadataGetter for method: CacheControlHeaderValue::get_MustRevalidate
// Il2CppName: get_MustRevalidate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CacheControlHeaderValue::*)()>(&CacheControlHeaderValue::get_MustRevalidate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CacheControlHeaderValue*), "get_MustRevalidate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CacheControlHeaderValue::set_MustRevalidate
// Il2CppName: set_MustRevalidate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CacheControlHeaderValue::*)(bool)>(&CacheControlHeaderValue::set_MustRevalidate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CacheControlHeaderValue*), "set_MustRevalidate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CacheControlHeaderValue::get_NoCache
// Il2CppName: get_NoCache
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CacheControlHeaderValue::*)()>(&CacheControlHeaderValue::get_NoCache)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CacheControlHeaderValue*), "get_NoCache", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CacheControlHeaderValue::set_NoCache
// Il2CppName: set_NoCache
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CacheControlHeaderValue::*)(bool)>(&CacheControlHeaderValue::set_NoCache)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CacheControlHeaderValue*), "set_NoCache", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CacheControlHeaderValue::get_NoCacheHeaders
// Il2CppName: get_NoCacheHeaders
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::ICollection_1<::Il2CppString*>* (CacheControlHeaderValue::*)()>(&CacheControlHeaderValue::get_NoCacheHeaders)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CacheControlHeaderValue*), "get_NoCacheHeaders", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CacheControlHeaderValue::get_NoStore
// Il2CppName: get_NoStore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CacheControlHeaderValue::*)()>(&CacheControlHeaderValue::get_NoStore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CacheControlHeaderValue*), "get_NoStore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CacheControlHeaderValue::set_NoStore
// Il2CppName: set_NoStore
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CacheControlHeaderValue::*)(bool)>(&CacheControlHeaderValue::set_NoStore)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CacheControlHeaderValue*), "set_NoStore", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CacheControlHeaderValue::get_NoTransform
// Il2CppName: get_NoTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CacheControlHeaderValue::*)()>(&CacheControlHeaderValue::get_NoTransform)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CacheControlHeaderValue*), "get_NoTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CacheControlHeaderValue::set_NoTransform
// Il2CppName: set_NoTransform
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CacheControlHeaderValue::*)(bool)>(&CacheControlHeaderValue::set_NoTransform)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CacheControlHeaderValue*), "set_NoTransform", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CacheControlHeaderValue::get_OnlyIfCached
// Il2CppName: get_OnlyIfCached
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CacheControlHeaderValue::*)()>(&CacheControlHeaderValue::get_OnlyIfCached)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CacheControlHeaderValue*), "get_OnlyIfCached", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CacheControlHeaderValue::set_OnlyIfCached
// Il2CppName: set_OnlyIfCached
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CacheControlHeaderValue::*)(bool)>(&CacheControlHeaderValue::set_OnlyIfCached)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CacheControlHeaderValue*), "set_OnlyIfCached", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CacheControlHeaderValue::get_Private
// Il2CppName: get_Private
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CacheControlHeaderValue::*)()>(&CacheControlHeaderValue::get_Private)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CacheControlHeaderValue*), "get_Private", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CacheControlHeaderValue::set_Private
// Il2CppName: set_Private
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CacheControlHeaderValue::*)(bool)>(&CacheControlHeaderValue::set_Private)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CacheControlHeaderValue*), "set_Private", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CacheControlHeaderValue::get_PrivateHeaders
// Il2CppName: get_PrivateHeaders
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::ICollection_1<::Il2CppString*>* (CacheControlHeaderValue::*)()>(&CacheControlHeaderValue::get_PrivateHeaders)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CacheControlHeaderValue*), "get_PrivateHeaders", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CacheControlHeaderValue::get_ProxyRevalidate
// Il2CppName: get_ProxyRevalidate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CacheControlHeaderValue::*)()>(&CacheControlHeaderValue::get_ProxyRevalidate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CacheControlHeaderValue*), "get_ProxyRevalidate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CacheControlHeaderValue::set_ProxyRevalidate
// Il2CppName: set_ProxyRevalidate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CacheControlHeaderValue::*)(bool)>(&CacheControlHeaderValue::set_ProxyRevalidate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CacheControlHeaderValue*), "set_ProxyRevalidate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CacheControlHeaderValue::get_Public
// Il2CppName: get_Public
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CacheControlHeaderValue::*)()>(&CacheControlHeaderValue::get_Public)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CacheControlHeaderValue*), "get_Public", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CacheControlHeaderValue::set_Public
// Il2CppName: set_Public
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CacheControlHeaderValue::*)(bool)>(&CacheControlHeaderValue::set_Public)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CacheControlHeaderValue*), "set_Public", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CacheControlHeaderValue::get_SharedMaxAge
// Il2CppName: get_SharedMaxAge
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Nullable_1<System::TimeSpan> (CacheControlHeaderValue::*)()>(&CacheControlHeaderValue::get_SharedMaxAge)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CacheControlHeaderValue*), "get_SharedMaxAge", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CacheControlHeaderValue::set_SharedMaxAge
// Il2CppName: set_SharedMaxAge
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CacheControlHeaderValue::*)(System::Nullable_1<System::TimeSpan>)>(&CacheControlHeaderValue::set_SharedMaxAge)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CacheControlHeaderValue*), "set_SharedMaxAge", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Nullable_1<System::TimeSpan>>()});
  }
};
// Writing MetadataGetter for method: CacheControlHeaderValue::System_ICloneable_Clone
// Il2CppName: System.ICloneable.Clone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (CacheControlHeaderValue::*)()>(&CacheControlHeaderValue::System_ICloneable_Clone)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CacheControlHeaderValue*), "System.ICloneable.Clone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CacheControlHeaderValue::TryParse
// Il2CppName: TryParse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppString*, System::Net::Http::Headers::CacheControlHeaderValue*&)>(&CacheControlHeaderValue::TryParse)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CacheControlHeaderValue*), "TryParse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::CacheControlHeaderValue*&>()});
  }
};
// Writing MetadataGetter for method: CacheControlHeaderValue::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CacheControlHeaderValue::*)(::Il2CppObject*)>(&CacheControlHeaderValue::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CacheControlHeaderValue*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: CacheControlHeaderValue::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (CacheControlHeaderValue::*)()>(&CacheControlHeaderValue::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CacheControlHeaderValue*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CacheControlHeaderValue::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (CacheControlHeaderValue::*)()>(&CacheControlHeaderValue::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CacheControlHeaderValue*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CacheControlHeaderValue::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CacheControlHeaderValue::*)()>(&CacheControlHeaderValue::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CacheControlHeaderValue*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CacheControlHeaderValue::*)()>(&CacheControlHeaderValue::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CacheControlHeaderValue*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.CollectionExtensions
#include "System/Net/Http/Headers/CollectionExtensions.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: CollectionExtensions::SequenceEqual
// Il2CppName: SequenceEqual
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: CollectionExtensions::ToString
// Il2CppName: ToString
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: CollectionExtensions::ToStringBuilder
// Il2CppName: ToStringBuilder
// Cannot write MetadataGetter for generic methods!
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.CollectionParser
#include "System/Net/Http/Headers/CollectionParser.hpp"
// Including type: System.Net.Http.Headers.ElementTryParser`1
#include "System/Net/Http/Headers/ElementTryParser_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.CollectionParser.TryParse
bool System::Net::Http::Headers::CollectionParser::TryParse(::Il2CppString* input, int minimalCount, System::Collections::Generic::List_1<::Il2CppString*>*& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CollectionParser::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "CollectionParser", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<::Il2CppString*>*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, minimalCount, result);
}
// Autogenerated method: System.Net.Http.Headers.CollectionParser.TryParseStringElement
bool System::Net::Http::Headers::CollectionParser::TryParseStringElement(System::Net::Http::Headers::Lexer* lexer, ::Il2CppString*& parsedValue, System::Net::Http::Headers::Token& t) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::CollectionParser::TryParseStringElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "CollectionParser", "TryParseStringElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lexer, parsedValue, t);
}
// Writing MetadataGetter for method: CollectionParser::TryParse
// Il2CppName: TryParse
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: CollectionParser::TryParse
// Il2CppName: TryParse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppString*, int, System::Collections::Generic::List_1<::Il2CppString*>*&)>(&CollectionParser::TryParse)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CollectionParser*), "TryParse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<::Il2CppString*>*&>()});
  }
};
// Writing MetadataGetter for method: CollectionParser::TryParseStringElement
// Il2CppName: TryParseStringElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::Net::Http::Headers::Lexer*, ::Il2CppString*&, System::Net::Http::Headers::Token&)>(&CollectionParser::TryParseStringElement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CollectionParser*), "TryParseStringElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::Lexer*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*&>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::Token&>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.ContentDispositionHeaderValue
#include "System/Net/Http/Headers/ContentDispositionHeaderValue.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.NameValueHeaderValue
#include "System/Net/Http/Headers/NameValueHeaderValue.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.ContentDispositionHeaderValue.get_Parameters
System::Collections::Generic::ICollection_1<System::Net::Http::Headers::NameValueHeaderValue*>* System::Net::Http::Headers::ContentDispositionHeaderValue::get_Parameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentDispositionHeaderValue::get_Parameters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Parameters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::ICollection_1<System::Net::Http::Headers::NameValueHeaderValue*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentDispositionHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::ContentDispositionHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentDispositionHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentDispositionHeaderValue.TryParse
bool System::Net::Http::Headers::ContentDispositionHeaderValue::TryParse(::Il2CppString* input, System::Net::Http::Headers::ContentDispositionHeaderValue*& parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentDispositionHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "ContentDispositionHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::ContentDispositionHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, parsedValue);
}
// Autogenerated method: System.Net.Http.Headers.ContentDispositionHeaderValue.Equals
bool System::Net::Http::Headers::ContentDispositionHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentDispositionHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.ContentDispositionHeaderValue.GetHashCode
int System::Net::Http::Headers::ContentDispositionHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentDispositionHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentDispositionHeaderValue.ToString
::Il2CppString* System::Net::Http::Headers::ContentDispositionHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentDispositionHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: ContentDispositionHeaderValue::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ContentDispositionHeaderValue::*)(System::Net::Http::Headers::ContentDispositionHeaderValue*)>(&ContentDispositionHeaderValue::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ContentDispositionHeaderValue*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::ContentDispositionHeaderValue*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ContentDispositionHeaderValue::*)(System::Net::Http::Headers::ContentDispositionHeaderValue*)>(&ContentDispositionHeaderValue::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ContentDispositionHeaderValue*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::ContentDispositionHeaderValue*>()});
  }
};
// Writing MetadataGetter for method: ContentDispositionHeaderValue::get_Parameters
// Il2CppName: get_Parameters
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::ICollection_1<System::Net::Http::Headers::NameValueHeaderValue*>* (ContentDispositionHeaderValue::*)()>(&ContentDispositionHeaderValue::get_Parameters)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ContentDispositionHeaderValue*), "get_Parameters", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ContentDispositionHeaderValue::System_ICloneable_Clone
// Il2CppName: System.ICloneable.Clone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ContentDispositionHeaderValue::*)()>(&ContentDispositionHeaderValue::System_ICloneable_Clone)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ContentDispositionHeaderValue*), "System.ICloneable.Clone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ContentDispositionHeaderValue::TryParse
// Il2CppName: TryParse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppString*, System::Net::Http::Headers::ContentDispositionHeaderValue*&)>(&ContentDispositionHeaderValue::TryParse)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ContentDispositionHeaderValue*), "TryParse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::ContentDispositionHeaderValue*&>()});
  }
};
// Writing MetadataGetter for method: ContentDispositionHeaderValue::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ContentDispositionHeaderValue::*)()>(&ContentDispositionHeaderValue::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ContentDispositionHeaderValue*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ContentDispositionHeaderValue::*)()>(&ContentDispositionHeaderValue::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ContentDispositionHeaderValue*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ContentDispositionHeaderValue::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ContentDispositionHeaderValue::*)(::Il2CppObject*)>(&ContentDispositionHeaderValue::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ContentDispositionHeaderValue*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: ContentDispositionHeaderValue::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ContentDispositionHeaderValue::*)()>(&ContentDispositionHeaderValue::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ContentDispositionHeaderValue*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ContentDispositionHeaderValue::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (ContentDispositionHeaderValue::*)()>(&ContentDispositionHeaderValue::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ContentDispositionHeaderValue*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.ContentRangeHeaderValue
#include "System/Net/Http/Headers/ContentRangeHeaderValue.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.get_From
System::Nullable_1<int64_t> System::Net::Http::Headers::ContentRangeHeaderValue::get_From() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentRangeHeaderValue::get_From");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_From", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.set_From
void System::Net::Http::Headers::ContentRangeHeaderValue::set_From(System::Nullable_1<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentRangeHeaderValue::set_From");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_From", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.get_Length
System::Nullable_1<int64_t> System::Net::Http::Headers::ContentRangeHeaderValue::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentRangeHeaderValue::get_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.set_Length
void System::Net::Http::Headers::ContentRangeHeaderValue::set_Length(System::Nullable_1<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentRangeHeaderValue::set_Length");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Length", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.get_To
System::Nullable_1<int64_t> System::Net::Http::Headers::ContentRangeHeaderValue::get_To() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentRangeHeaderValue::get_To");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_To", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.set_To
void System::Net::Http::Headers::ContentRangeHeaderValue::set_To(System::Nullable_1<int64_t> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentRangeHeaderValue::set_To");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_To", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.get_Unit
::Il2CppString* System::Net::Http::Headers::ContentRangeHeaderValue::get_Unit() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentRangeHeaderValue::get_Unit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Unit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::ContentRangeHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentRangeHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.TryParse
bool System::Net::Http::Headers::ContentRangeHeaderValue::TryParse(::Il2CppString* input, System::Net::Http::Headers::ContentRangeHeaderValue*& parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentRangeHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "ContentRangeHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::ContentRangeHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, parsedValue);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.Equals
bool System::Net::Http::Headers::ContentRangeHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentRangeHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.GetHashCode
int System::Net::Http::Headers::ContentRangeHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentRangeHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.ContentRangeHeaderValue.ToString
::Il2CppString* System::Net::Http::Headers::ContentRangeHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::ContentRangeHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: ContentRangeHeaderValue::get_From
// Il2CppName: get_From
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Nullable_1<int64_t> (ContentRangeHeaderValue::*)()>(&ContentRangeHeaderValue::get_From)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ContentRangeHeaderValue*), "get_From", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ContentRangeHeaderValue::set_From
// Il2CppName: set_From
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ContentRangeHeaderValue::*)(System::Nullable_1<int64_t>)>(&ContentRangeHeaderValue::set_From)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ContentRangeHeaderValue*), "set_From", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Nullable_1<int64_t>>()});
  }
};
// Writing MetadataGetter for method: ContentRangeHeaderValue::get_Length
// Il2CppName: get_Length
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Nullable_1<int64_t> (ContentRangeHeaderValue::*)()>(&ContentRangeHeaderValue::get_Length)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ContentRangeHeaderValue*), "get_Length", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ContentRangeHeaderValue::set_Length
// Il2CppName: set_Length
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ContentRangeHeaderValue::*)(System::Nullable_1<int64_t>)>(&ContentRangeHeaderValue::set_Length)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ContentRangeHeaderValue*), "set_Length", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Nullable_1<int64_t>>()});
  }
};
// Writing MetadataGetter for method: ContentRangeHeaderValue::get_To
// Il2CppName: get_To
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Nullable_1<int64_t> (ContentRangeHeaderValue::*)()>(&ContentRangeHeaderValue::get_To)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ContentRangeHeaderValue*), "get_To", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ContentRangeHeaderValue::set_To
// Il2CppName: set_To
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ContentRangeHeaderValue::*)(System::Nullable_1<int64_t>)>(&ContentRangeHeaderValue::set_To)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ContentRangeHeaderValue*), "set_To", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Nullable_1<int64_t>>()});
  }
};
// Writing MetadataGetter for method: ContentRangeHeaderValue::get_Unit
// Il2CppName: get_Unit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (ContentRangeHeaderValue::*)()>(&ContentRangeHeaderValue::get_Unit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ContentRangeHeaderValue*), "get_Unit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ContentRangeHeaderValue::System_ICloneable_Clone
// Il2CppName: System.ICloneable.Clone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ContentRangeHeaderValue::*)()>(&ContentRangeHeaderValue::System_ICloneable_Clone)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ContentRangeHeaderValue*), "System.ICloneable.Clone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ContentRangeHeaderValue::TryParse
// Il2CppName: TryParse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppString*, System::Net::Http::Headers::ContentRangeHeaderValue*&)>(&ContentRangeHeaderValue::TryParse)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ContentRangeHeaderValue*), "TryParse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::ContentRangeHeaderValue*&>()});
  }
};
// Writing MetadataGetter for method: ContentRangeHeaderValue::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ContentRangeHeaderValue::*)()>(&ContentRangeHeaderValue::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ContentRangeHeaderValue*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ContentRangeHeaderValue::*)()>(&ContentRangeHeaderValue::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ContentRangeHeaderValue*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ContentRangeHeaderValue::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ContentRangeHeaderValue::*)(::Il2CppObject*)>(&ContentRangeHeaderValue::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ContentRangeHeaderValue*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: ContentRangeHeaderValue::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (ContentRangeHeaderValue::*)()>(&ContentRangeHeaderValue::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ContentRangeHeaderValue*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ContentRangeHeaderValue::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (ContentRangeHeaderValue::*)()>(&ContentRangeHeaderValue::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ContentRangeHeaderValue*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.EntityTagHeaderValue
#include "System/Net/Http/Headers/EntityTagHeaderValue.hpp"
// Including type: System.Net.Http.Headers.Lexer
#include "System/Net/Http/Headers/Lexer.hpp"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Net.Http.Headers.EntityTagHeaderValue any
System::Net::Http::Headers::EntityTagHeaderValue* System::Net::Http::Headers::EntityTagHeaderValue::_get_any() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::EntityTagHeaderValue::_get_any");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::Headers::EntityTagHeaderValue*>("System.Net.Http.Headers", "EntityTagHeaderValue", "any"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Net.Http.Headers.EntityTagHeaderValue any
void System::Net::Http::Headers::EntityTagHeaderValue::_set_any(System::Net::Http::Headers::EntityTagHeaderValue* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::EntityTagHeaderValue::_set_any");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "EntityTagHeaderValue", "any", value));
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.get_IsWeak
bool System::Net::Http::Headers::EntityTagHeaderValue::get_IsWeak() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::EntityTagHeaderValue::get_IsWeak");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsWeak", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.set_IsWeak
void System::Net::Http::Headers::EntityTagHeaderValue::set_IsWeak(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::EntityTagHeaderValue::set_IsWeak");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsWeak", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.get_Tag
::Il2CppString* System::Net::Http::Headers::EntityTagHeaderValue::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::EntityTagHeaderValue::get_Tag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.set_Tag
void System::Net::Http::Headers::EntityTagHeaderValue::set_Tag(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::EntityTagHeaderValue::set_Tag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.System.ICloneable.Clone
::Il2CppObject* System::Net::Http::Headers::EntityTagHeaderValue::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::EntityTagHeaderValue::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.ICloneable.Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.TryParse
bool System::Net::Http::Headers::EntityTagHeaderValue::TryParse(::Il2CppString* input, System::Net::Http::Headers::EntityTagHeaderValue*& parsedValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::EntityTagHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "EntityTagHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::EntityTagHeaderValue*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, parsedValue);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.TryParseElement
bool System::Net::Http::Headers::EntityTagHeaderValue::TryParseElement(System::Net::Http::Headers::Lexer* lexer, System::Net::Http::Headers::EntityTagHeaderValue*& parsedValue, System::Net::Http::Headers::Token& t) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::EntityTagHeaderValue::TryParseElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "EntityTagHeaderValue", "TryParseElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lexer), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::EntityTagHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::Token&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lexer, parsedValue, t);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.TryParse
bool System::Net::Http::Headers::EntityTagHeaderValue::TryParse(::Il2CppString* input, int minimalCount, System::Collections::Generic::List_1<System::Net::Http::Headers::EntityTagHeaderValue*>*& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::EntityTagHeaderValue::TryParse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "EntityTagHeaderValue", "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input), ::il2cpp_utils::ExtractType(minimalCount), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<System::Net::Http::Headers::EntityTagHeaderValue*>*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, minimalCount, result);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue..cctor
void System::Net::Http::Headers::EntityTagHeaderValue::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::EntityTagHeaderValue::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "EntityTagHeaderValue", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.Equals
bool System::Net::Http::Headers::EntityTagHeaderValue::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::EntityTagHeaderValue::Equals");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.GetHashCode
int System::Net::Http::Headers::EntityTagHeaderValue::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::EntityTagHeaderValue::GetHashCode");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.EntityTagHeaderValue.ToString
::Il2CppString* System::Net::Http::Headers::EntityTagHeaderValue::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::EntityTagHeaderValue::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: EntityTagHeaderValue::get_IsWeak
// Il2CppName: get_IsWeak
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (EntityTagHeaderValue::*)()>(&EntityTagHeaderValue::get_IsWeak)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EntityTagHeaderValue*), "get_IsWeak", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EntityTagHeaderValue::set_IsWeak
// Il2CppName: set_IsWeak
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EntityTagHeaderValue::*)(bool)>(&EntityTagHeaderValue::set_IsWeak)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EntityTagHeaderValue*), "set_IsWeak", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: EntityTagHeaderValue::get_Tag
// Il2CppName: get_Tag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (EntityTagHeaderValue::*)()>(&EntityTagHeaderValue::get_Tag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EntityTagHeaderValue*), "get_Tag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EntityTagHeaderValue::set_Tag
// Il2CppName: set_Tag
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EntityTagHeaderValue::*)(::Il2CppString*)>(&EntityTagHeaderValue::set_Tag)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EntityTagHeaderValue*), "set_Tag", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: EntityTagHeaderValue::System_ICloneable_Clone
// Il2CppName: System.ICloneable.Clone
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (EntityTagHeaderValue::*)()>(&EntityTagHeaderValue::System_ICloneable_Clone)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EntityTagHeaderValue*), "System.ICloneable.Clone", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EntityTagHeaderValue::TryParse
// Il2CppName: TryParse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppString*, System::Net::Http::Headers::EntityTagHeaderValue*&)>(&EntityTagHeaderValue::TryParse)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EntityTagHeaderValue*), "TryParse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::EntityTagHeaderValue*&>()});
  }
};
// Writing MetadataGetter for method: EntityTagHeaderValue::TryParseElement
// Il2CppName: TryParseElement
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(System::Net::Http::Headers::Lexer*, System::Net::Http::Headers::EntityTagHeaderValue*&, System::Net::Http::Headers::Token&)>(&EntityTagHeaderValue::TryParseElement)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EntityTagHeaderValue*), "TryParseElement", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::Lexer*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::EntityTagHeaderValue*&>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::Token&>()});
  }
};
// Writing MetadataGetter for method: EntityTagHeaderValue::TryParse
// Il2CppName: TryParse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (*)(::Il2CppString*, int, System::Collections::Generic::List_1<System::Net::Http::Headers::EntityTagHeaderValue*>*&)>(&EntityTagHeaderValue::TryParse)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EntityTagHeaderValue*), "TryParse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<System::Net::Http::Headers::EntityTagHeaderValue*>*&>()});
  }
};
// Writing MetadataGetter for method: EntityTagHeaderValue::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&EntityTagHeaderValue::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EntityTagHeaderValue*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EntityTagHeaderValue::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EntityTagHeaderValue::*)()>(&EntityTagHeaderValue::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EntityTagHeaderValue*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EntityTagHeaderValue::*)()>(&EntityTagHeaderValue::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EntityTagHeaderValue*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EntityTagHeaderValue::Equals
// Il2CppName: Equals
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (EntityTagHeaderValue::*)(::Il2CppObject*)>(&EntityTagHeaderValue::Equals)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EntityTagHeaderValue*), "Equals", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: EntityTagHeaderValue::GetHashCode
// Il2CppName: GetHashCode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (EntityTagHeaderValue::*)()>(&EntityTagHeaderValue::GetHashCode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EntityTagHeaderValue*), "GetHashCode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EntityTagHeaderValue::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (EntityTagHeaderValue::*)()>(&EntityTagHeaderValue::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EntityTagHeaderValue*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.HashCodeCalculator
#include "System/Net/Http/Headers/HashCodeCalculator.hpp"
// Including type: System.Collections.Generic.ICollection`1
#include "System/Collections/Generic/ICollection_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: HashCodeCalculator::Calculate
// Il2CppName: Calculate
// Cannot write MetadataGetter for generic methods!
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.HeaderInfo
#include "System/Net/Http/Headers/HeaderInfo.hpp"
// Including type: System.Net.Http.Headers.HeaderInfo/HeaderTypeInfo`2
#include "System/Net/Http/Headers/HeaderInfo_HeaderTypeInfo_2.hpp"
// Including type: System.Net.Http.Headers.HeaderInfo/CollectionHeaderTypeInfo`2
#include "System/Net/Http/Headers/HeaderInfo_CollectionHeaderTypeInfo_2.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Net.Http.Headers.TryParseDelegate`1
#include "System/Net/Http/Headers/TryParseDelegate_1.hpp"
// Including type: System.Net.Http.Headers.TryParseListDelegate`1
#include "System/Net/Http/Headers/TryParseListDelegate_1.hpp"
// Including type: System.Net.Http.Headers.HttpHeaders
#include "System/Net/Http/Headers/HttpHeaders.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.HeaderInfo.CreateCollection
::Il2CppObject* System::Net::Http::Headers::HeaderInfo::CreateCollection(System::Net::Http::Headers::HttpHeaders* headers) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HeaderInfo::CreateCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headers)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, headers);
}
// Autogenerated method: System.Net.Http.Headers.HeaderInfo.get_CustomToString
System::Func_2<::Il2CppObject*, ::Il2CppString*>* System::Net::Http::Headers::HeaderInfo::get_CustomToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HeaderInfo::get_CustomToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_CustomToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Func_2<::Il2CppObject*, ::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HeaderInfo.set_CustomToString
void System::Net::Http::Headers::HeaderInfo::set_CustomToString(System::Func_2<::Il2CppObject*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HeaderInfo::set_CustomToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_CustomToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.HeaderInfo.get_Separator
::Il2CppString* System::Net::Http::Headers::HeaderInfo::get_Separator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HeaderInfo::get_Separator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Separator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HeaderInfo.AddToCollection
void System::Net::Http::Headers::HeaderInfo::AddToCollection(::Il2CppObject* collection, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HeaderInfo::AddToCollection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddToCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collection), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, collection, value);
}
// Autogenerated method: System.Net.Http.Headers.HeaderInfo.CreateCollection
::Il2CppObject* System::Net::Http::Headers::HeaderInfo::CreateCollection(System::Net::Http::Headers::HttpHeaders* headers, System::Net::Http::Headers::HeaderInfo* headerInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HeaderInfo::CreateCollection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headers), ::il2cpp_utils::ExtractType(headerInfo)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method, headers, headerInfo);
}
// Autogenerated method: System.Net.Http.Headers.HeaderInfo.ToStringCollection
System::Collections::Generic::List_1<::Il2CppString*>* System::Net::Http::Headers::HeaderInfo::ToStringCollection(::Il2CppObject* collection) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HeaderInfo::ToStringCollection");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToStringCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collection)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<::Il2CppString*>*, false>(this, ___internal__method, collection);
}
// Autogenerated method: System.Net.Http.Headers.HeaderInfo.TryParse
bool System::Net::Http::Headers::HeaderInfo::TryParse(::Il2CppString* value, ::Il2CppObject*& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HeaderInfo::TryParse");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryParse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, value, result);
}
// Writing MetadataGetter for method: HeaderInfo::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HeaderInfo::*)(::Il2CppString*, System::Net::Http::Headers::HttpHeaderKind)>(&HeaderInfo::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HeaderInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::HttpHeaderKind>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HeaderInfo::*)(::Il2CppString*, System::Net::Http::Headers::HttpHeaderKind)>(&HeaderInfo::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HeaderInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::HttpHeaderKind>()});
  }
};
// Writing MetadataGetter for method: HeaderInfo::CreateSingle
// Il2CppName: CreateSingle
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: HeaderInfo::CreateMulti
// Il2CppName: CreateMulti
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: HeaderInfo::CreateCollection
// Il2CppName: CreateCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (HeaderInfo::*)(System::Net::Http::Headers::HttpHeaders*)>(&HeaderInfo::CreateCollection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HeaderInfo*), "CreateCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::HttpHeaders*>()});
  }
};
// Writing MetadataGetter for method: HeaderInfo::get_CustomToString
// Il2CppName: get_CustomToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Func_2<::Il2CppObject*, ::Il2CppString*>* (HeaderInfo::*)()>(&HeaderInfo::get_CustomToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HeaderInfo*), "get_CustomToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HeaderInfo::set_CustomToString
// Il2CppName: set_CustomToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HeaderInfo::*)(System::Func_2<::Il2CppObject*, ::Il2CppString*>*)>(&HeaderInfo::set_CustomToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HeaderInfo*), "set_CustomToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Func_2<::Il2CppObject*, ::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: HeaderInfo::get_Separator
// Il2CppName: get_Separator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (HeaderInfo::*)()>(&HeaderInfo::get_Separator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HeaderInfo*), "get_Separator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HeaderInfo::AddToCollection
// Il2CppName: AddToCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HeaderInfo::*)(::Il2CppObject*, ::Il2CppObject*)>(&HeaderInfo::AddToCollection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HeaderInfo*), "AddToCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: HeaderInfo::CreateCollection
// Il2CppName: CreateCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (HeaderInfo::*)(System::Net::Http::Headers::HttpHeaders*, System::Net::Http::Headers::HeaderInfo*)>(&HeaderInfo::CreateCollection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HeaderInfo*), "CreateCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::HttpHeaders*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::HeaderInfo*>()});
  }
};
// Writing MetadataGetter for method: HeaderInfo::ToStringCollection
// Il2CppName: ToStringCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<::Il2CppString*>* (HeaderInfo::*)(::Il2CppObject*)>(&HeaderInfo::ToStringCollection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HeaderInfo*), "ToStringCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>()});
  }
};
// Writing MetadataGetter for method: HeaderInfo::TryParse
// Il2CppName: TryParse
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HeaderInfo::*)(::Il2CppString*, ::Il2CppObject*&)>(&HeaderInfo::TryParse)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HeaderInfo*), "TryParse", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppObject*&>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.HttpContentHeaders
#include "System/Net/Http/Headers/HttpContentHeaders.hpp"
// Including type: System.Net.Http.HttpContent
#include "System/Net/Http/HttpContent.hpp"
// Including type: System.Nullable`1
#include "System/Nullable_1.hpp"
// Including type: System.Net.Http.Headers.MediaTypeHeaderValue
#include "System/Net/Http/Headers/MediaTypeHeaderValue.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.HttpContentHeaders.get_ContentLength
System::Nullable_1<int64_t> System::Net::Http::Headers::HttpContentHeaders::get_ContentLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpContentHeaders::get_ContentLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContentLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<int64_t>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpContentHeaders.get_ContentType
System::Net::Http::Headers::MediaTypeHeaderValue* System::Net::Http::Headers::HttpContentHeaders::get_ContentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpContentHeaders::get_ContentType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ContentType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Http::Headers::MediaTypeHeaderValue*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: HttpContentHeaders::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpContentHeaders::*)(System::Net::Http::HttpContent*)>(&HttpContentHeaders::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpContentHeaders*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Http::HttpContent*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpContentHeaders::*)(System::Net::Http::HttpContent*)>(&HttpContentHeaders::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpContentHeaders*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Http::HttpContent*>()});
  }
};
// Writing MetadataGetter for method: HttpContentHeaders::get_ContentLength
// Il2CppName: get_ContentLength
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Nullable_1<int64_t> (HttpContentHeaders::*)()>(&HttpContentHeaders::get_ContentLength)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpContentHeaders*), "get_ContentLength", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpContentHeaders::get_ContentType
// Il2CppName: get_ContentType
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::Http::Headers::MediaTypeHeaderValue* (HttpContentHeaders::*)()>(&HttpContentHeaders::get_ContentType)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpContentHeaders*), "get_ContentType", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.HttpHeaderKind
#include "System/Net/Http/Headers/HttpHeaderKind.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.HttpHeaderKind None
System::Net::Http::Headers::HttpHeaderKind System::Net::Http::Headers::HttpHeaderKind::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaderKind::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::Headers::HttpHeaderKind>("System.Net.Http.Headers", "HttpHeaderKind", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.HttpHeaderKind None
void System::Net::Http::Headers::HttpHeaderKind::_set_None(System::Net::Http::Headers::HttpHeaderKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaderKind::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpHeaderKind", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.HttpHeaderKind Request
System::Net::Http::Headers::HttpHeaderKind System::Net::Http::Headers::HttpHeaderKind::_get_Request() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaderKind::_get_Request");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::Headers::HttpHeaderKind>("System.Net.Http.Headers", "HttpHeaderKind", "Request"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.HttpHeaderKind Request
void System::Net::Http::Headers::HttpHeaderKind::_set_Request(System::Net::Http::Headers::HttpHeaderKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaderKind::_set_Request");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpHeaderKind", "Request", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.HttpHeaderKind Response
System::Net::Http::Headers::HttpHeaderKind System::Net::Http::Headers::HttpHeaderKind::_get_Response() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaderKind::_get_Response");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::Headers::HttpHeaderKind>("System.Net.Http.Headers", "HttpHeaderKind", "Response"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.HttpHeaderKind Response
void System::Net::Http::Headers::HttpHeaderKind::_set_Response(System::Net::Http::Headers::HttpHeaderKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaderKind::_set_Response");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpHeaderKind", "Response", value));
}
// Autogenerated static field getter
// Get static field: static public System.Net.Http.Headers.HttpHeaderKind Content
System::Net::Http::Headers::HttpHeaderKind System::Net::Http::Headers::HttpHeaderKind::_get_Content() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaderKind::_get_Content");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::Headers::HttpHeaderKind>("System.Net.Http.Headers", "HttpHeaderKind", "Content"));
}
// Autogenerated static field setter
// Set static field: static public System.Net.Http.Headers.HttpHeaderKind Content
void System::Net::Http::Headers::HttpHeaderKind::_set_Content(System::Net::Http::Headers::HttpHeaderKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaderKind::_set_Content");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpHeaderKind", "Content", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.HttpHeaders
#include "System/Net/Http/Headers/HttpHeaders.hpp"
// Including type: System.Net.Http.Headers.HttpHeaders/HeaderBucket
#include "System/Net/Http/Headers/HttpHeaders_HeaderBucket.hpp"
// Including type: System.Net.Http.Headers.HttpHeaders/<GetEnumerator>d__19
#include "System/Net/Http/Headers/HttpHeaders_-GetEnumerator-d__19.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Net.Http.Headers.HeaderInfo
#include "System/Net/Http/Headers/HeaderInfo.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Net.Http.Headers.HttpHeaderValueCollection`1
#include "System/Net/Http/Headers/HttpHeaderValueCollection_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.Net.Http.Headers.HeaderInfo> known_headers
System::Collections::Generic::Dictionary_2<::Il2CppString*, System::Net::Http::Headers::HeaderInfo*>* System::Net::Http::Headers::HttpHeaders::_get_known_headers() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::_get_known_headers");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<::Il2CppString*, System::Net::Http::Headers::HeaderInfo*>*>("System.Net.Http.Headers", "HttpHeaders", "known_headers")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.Net.Http.Headers.HeaderInfo> known_headers
void System::Net::Http::Headers::HttpHeaders::_set_known_headers(System::Collections::Generic::Dictionary_2<::Il2CppString*, System::Net::Http::Headers::HeaderInfo*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::_set_known_headers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpHeaders", "known_headers", value));
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders..cctor
void System::Net::Http::Headers::HttpHeaders::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "HttpHeaders", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.AddInternal
bool System::Net::Http::Headers::HttpHeaders::AddInternal(::Il2CppString* name, System::Collections::Generic::IEnumerable_1<::Il2CppString*>* values, System::Net::Http::Headers::HeaderInfo* headerInfo, bool ignoreInvalid) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::AddInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values), ::il2cpp_utils::ExtractType(headerInfo), ::il2cpp_utils::ExtractType(ignoreInvalid)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, name, values, headerInfo, ignoreInvalid);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation
bool System::Net::Http::Headers::HttpHeaders::TryAddWithoutValidation(::Il2CppString* name, System::Collections::Generic::IEnumerable_1<::Il2CppString*>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::TryAddWithoutValidation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryAddWithoutValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(values)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, name, values);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.TryCheckName
bool System::Net::Http::Headers::HttpHeaders::TryCheckName(::Il2CppString* name, System::Net::Http::Headers::HeaderInfo*& headerInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::TryCheckName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryCheckName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::HeaderInfo*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, name, headerInfo);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.GetEnumerator
System::Collections::Generic::IEnumerator_1<System::Collections::Generic::KeyValuePair_2<::Il2CppString*, System::Collections::Generic::IEnumerable_1<::Il2CppString*>*>>* System::Net::Http::Headers::HttpHeaders::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerator_1<System::Collections::Generic::KeyValuePair_2<::Il2CppString*, System::Collections::Generic::IEnumerable_1<::Il2CppString*>*>>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.System.Collections.IEnumerable.GetEnumerator
System::Collections::IEnumerator* System::Net::Http::Headers::HttpHeaders::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.GetSingleHeaderString
::Il2CppString* System::Net::Http::Headers::HttpHeaders::GetSingleHeaderString(::Il2CppString* key, System::Collections::Generic::IEnumerable_1<::Il2CppString*>* values) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::GetSingleHeaderString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "HttpHeaders", "GetSingleHeaderString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(key), ::il2cpp_utils::ExtractType(values)})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, key, values);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.GetAllHeaderValues
System::Collections::Generic::List_1<::Il2CppString*>* System::Net::Http::Headers::HttpHeaders::GetAllHeaderValues(System::Net::Http::Headers::HttpHeaders::HeaderBucket* bucket, System::Net::Http::Headers::HeaderInfo* headerInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::GetAllHeaderValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAllHeaderValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bucket), ::il2cpp_utils::ExtractType(headerInfo)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<::Il2CppString*>*, false>(this, ___internal__method, bucket, headerInfo);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.GetKnownHeaderKind
System::Net::Http::Headers::HttpHeaderKind System::Net::Http::Headers::HttpHeaders::GetKnownHeaderKind(::Il2CppString* name) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::GetKnownHeaderKind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "HttpHeaders", "GetKnownHeaderKind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Http::Headers::HttpHeaderKind, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders.ToString
::Il2CppString* System::Net::Http::Headers::HttpHeaders::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: HttpHeaders::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&HttpHeaders::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpHeaders*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpHeaders::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpHeaders::*)(System::Net::Http::Headers::HttpHeaderKind)>(&HttpHeaders::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpHeaders*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::HttpHeaderKind>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpHeaders::*)(System::Net::Http::Headers::HttpHeaderKind)>(&HttpHeaders::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpHeaders*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::HttpHeaderKind>()});
  }
};
// Writing MetadataGetter for method: HttpHeaders::AddInternal
// Il2CppName: AddInternal
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HttpHeaders::*)(::Il2CppString*, System::Collections::Generic::IEnumerable_1<::Il2CppString*>*, System::Net::Http::Headers::HeaderInfo*, bool)>(&HttpHeaders::AddInternal)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpHeaders*), "AddInternal", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::IEnumerable_1<::Il2CppString*>*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::HeaderInfo*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: HttpHeaders::TryAddWithoutValidation
// Il2CppName: TryAddWithoutValidation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HttpHeaders::*)(::Il2CppString*, System::Collections::Generic::IEnumerable_1<::Il2CppString*>*)>(&HttpHeaders::TryAddWithoutValidation)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpHeaders*), "TryAddWithoutValidation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::IEnumerable_1<::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: HttpHeaders::TryCheckName
// Il2CppName: TryCheckName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HttpHeaders::*)(::Il2CppString*, System::Net::Http::Headers::HeaderInfo*&)>(&HttpHeaders::TryCheckName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpHeaders*), "TryCheckName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::HeaderInfo*&>()});
  }
};
// Writing MetadataGetter for method: HttpHeaders::GetEnumerator
// Il2CppName: GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::IEnumerator_1<System::Collections::Generic::KeyValuePair_2<::Il2CppString*, System::Collections::Generic::IEnumerable_1<::Il2CppString*>*>>* (HttpHeaders::*)()>(&HttpHeaders::GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpHeaders*), "GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpHeaders::System_Collections_IEnumerable_GetEnumerator
// Il2CppName: System.Collections.IEnumerable.GetEnumerator
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (HttpHeaders::*)()>(&HttpHeaders::System_Collections_IEnumerable_GetEnumerator)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpHeaders*), "System.Collections.IEnumerable.GetEnumerator", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpHeaders::GetSingleHeaderString
// Il2CppName: GetSingleHeaderString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (*)(::Il2CppString*, System::Collections::Generic::IEnumerable_1<::Il2CppString*>*)>(&HttpHeaders::GetSingleHeaderString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpHeaders*), "GetSingleHeaderString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::IEnumerable_1<::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: HttpHeaders::GetAllHeaderValues
// Il2CppName: GetAllHeaderValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<::Il2CppString*>* (HttpHeaders::*)(System::Net::Http::Headers::HttpHeaders::HeaderBucket*, System::Net::Http::Headers::HeaderInfo*)>(&HttpHeaders::GetAllHeaderValues)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpHeaders*), "GetAllHeaderValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::HttpHeaders::HeaderBucket*>(), ::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::HeaderInfo*>()});
  }
};
// Writing MetadataGetter for method: HttpHeaders::GetKnownHeaderKind
// Il2CppName: GetKnownHeaderKind
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::Http::Headers::HttpHeaderKind (*)(::Il2CppString*)>(&HttpHeaders::GetKnownHeaderKind)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpHeaders*), "GetKnownHeaderKind", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: HttpHeaders::GetValue
// Il2CppName: GetValue
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: HttpHeaders::GetValues
// Il2CppName: GetValues
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: HttpHeaders::SetValue
// Il2CppName: SetValue
// Cannot write MetadataGetter for generic methods!
// Writing MetadataGetter for method: HttpHeaders::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpHeaders::*)()>(&HttpHeaders::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpHeaders*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpHeaders::*)()>(&HttpHeaders::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpHeaders*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpHeaders::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (HttpHeaders::*)()>(&HttpHeaders::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpHeaders*), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.HttpHeaders/HeaderBucket
#include "System/Net/Http/Headers/HttpHeaders_HeaderBucket.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/HeaderBucket.get_HasStringValues
bool System::Net::Http::Headers::HttpHeaders::HeaderBucket::get_HasStringValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::HeaderBucket::get_HasStringValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasStringValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/HeaderBucket.get_Values
System::Collections::Generic::List_1<::Il2CppString*>* System::Net::Http::Headers::HttpHeaders::HeaderBucket::get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::HeaderBucket::get_Values");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/HeaderBucket.set_Values
void System::Net::Http::Headers::HttpHeaders::HeaderBucket::set_Values(System::Collections::Generic::List_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::HeaderBucket::set_Values");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Values", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/HeaderBucket.ParsedToString
::Il2CppString* System::Net::Http::Headers::HttpHeaders::HeaderBucket::ParsedToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::HeaderBucket::ParsedToString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ParsedToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: HttpHeaders::HeaderBucket::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpHeaders::HeaderBucket::*)(::Il2CppObject*, System::Func_2<::Il2CppObject*, ::Il2CppString*>*)>(&HttpHeaders::HeaderBucket::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpHeaders::HeaderBucket*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Func_2<::Il2CppObject*, ::Il2CppString*>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpHeaders::HeaderBucket::*)(::Il2CppObject*, System::Func_2<::Il2CppObject*, ::Il2CppString*>*)>(&HttpHeaders::HeaderBucket::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpHeaders::HeaderBucket*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppObject*>(), ::il2cpp_utils::ExtractIndependentType<System::Func_2<::Il2CppObject*, ::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: HttpHeaders::HeaderBucket::get_HasStringValues
// Il2CppName: get_HasStringValues
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HttpHeaders::HeaderBucket::*)()>(&HttpHeaders::HeaderBucket::get_HasStringValues)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpHeaders::HeaderBucket*), "get_HasStringValues", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpHeaders::HeaderBucket::get_Values
// Il2CppName: get_Values
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::List_1<::Il2CppString*>* (HttpHeaders::HeaderBucket::*)()>(&HttpHeaders::HeaderBucket::get_Values)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpHeaders::HeaderBucket*), "get_Values", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpHeaders::HeaderBucket::set_Values
// Il2CppName: set_Values
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpHeaders::HeaderBucket::*)(System::Collections::Generic::List_1<::Il2CppString*>*)>(&HttpHeaders::HeaderBucket::set_Values)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpHeaders::HeaderBucket*), "set_Values", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: HttpHeaders::HeaderBucket::ParsedToString
// Il2CppName: ParsedToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (HttpHeaders::HeaderBucket::*)()>(&HttpHeaders::HeaderBucket::ParsedToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpHeaders::HeaderBucket*), "ParsedToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.HttpHeaders/<GetEnumerator>d__19
#include "System/Net/Http/Headers/HttpHeaders_-GetEnumerator-d__19.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Net.Http.Headers.HttpHeaders/HeaderBucket
#include "System/Net/Http/Headers/HttpHeaders_HeaderBucket.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/<GetEnumerator>d__19.System.IDisposable.Dispose
void System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/<GetEnumerator>d__19.MoveNext
bool System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/<GetEnumerator>d__19.<>m__Finally1
void System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/<GetEnumerator>d__19.System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Collections.Generic.IEnumerable<System.String>>>.get_Current
System::Collections::Generic::KeyValuePair_2<::Il2CppString*, System::Collections::Generic::IEnumerable_1<::Il2CppString*>*> System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::System_Collections_Generic_IEnumerator$System_Collections_Generic_KeyValuePair$System_String_System_Collections_Generic_IEnumerable$System_String$$$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Collections.Generic.IEnumerable<System.String>>>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Collections.Generic.IEnumerable<System.String>>>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::KeyValuePair_2<::Il2CppString*, System::Collections::Generic::IEnumerable_1<::Il2CppString*>*>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/<GetEnumerator>d__19.System.Collections.IEnumerator.Reset
void System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpHeaders/<GetEnumerator>d__19.System.Collections.IEnumerator.get_Current
::Il2CppObject* System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpHeaders::$GetEnumerator$d__19::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: HttpHeaders::$GetEnumerator$d__19::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpHeaders::$GetEnumerator$d__19::*)(int)>(&HttpHeaders::$GetEnumerator$d__19::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpHeaders::$GetEnumerator$d__19*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpHeaders::$GetEnumerator$d__19::*)(int)>(&HttpHeaders::$GetEnumerator$d__19::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpHeaders::$GetEnumerator$d__19*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: HttpHeaders::$GetEnumerator$d__19::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpHeaders::$GetEnumerator$d__19::*)()>(&HttpHeaders::$GetEnumerator$d__19::System_IDisposable_Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpHeaders::$GetEnumerator$d__19*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpHeaders::$GetEnumerator$d__19::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HttpHeaders::$GetEnumerator$d__19::*)()>(&HttpHeaders::$GetEnumerator$d__19::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpHeaders::$GetEnumerator$d__19*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpHeaders::$GetEnumerator$d__19::$$m__Finally1
// Il2CppName: <>m__Finally1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpHeaders::$GetEnumerator$d__19::*)()>(&HttpHeaders::$GetEnumerator$d__19::$$m__Finally1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpHeaders::$GetEnumerator$d__19*), "<>m__Finally1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpHeaders::$GetEnumerator$d__19::System_Collections_Generic_IEnumerator$System_Collections_Generic_KeyValuePair$System_String_System_Collections_Generic_IEnumerable$System_String$$$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Collections.Generic.IEnumerable<System.String>>>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::Generic::KeyValuePair_2<::Il2CppString*, System::Collections::Generic::IEnumerable_1<::Il2CppString*>*> (HttpHeaders::$GetEnumerator$d__19::*)()>(&HttpHeaders::$GetEnumerator$d__19::System_Collections_Generic_IEnumerator$System_Collections_Generic_KeyValuePair$System_String_System_Collections_Generic_IEnumerable$System_String$$$_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpHeaders::$GetEnumerator$d__19*), "System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Collections.Generic.IEnumerable<System.String>>>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpHeaders::$GetEnumerator$d__19::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpHeaders::$GetEnumerator$d__19::*)()>(&HttpHeaders::$GetEnumerator$d__19::System_Collections_IEnumerator_Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpHeaders::$GetEnumerator$d__19*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpHeaders::$GetEnumerator$d__19::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (HttpHeaders::$GetEnumerator$d__19::*)()>(&HttpHeaders::$GetEnumerator$d__19::System_Collections_IEnumerator_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpHeaders::$GetEnumerator$d__19*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.HttpRequestHeaders
#include "System/Net/Http/Headers/HttpRequestHeaders.hpp"
// Including type: System.Net.Http.Headers.HttpRequestHeaders/<>c
#include "System/Net/Http/Headers/HttpRequestHeaders_--c.hpp"
// Including type: System.Net.Http.Headers.HttpHeaderValueCollection`1
#include "System/Net/Http/Headers/HttpHeaderValueCollection_1.hpp"
// Including type: System.Net.Http.Headers.TransferCodingHeaderValue
#include "System/Net/Http/Headers/TransferCodingHeaderValue.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders.get_Connection
System::Net::Http::Headers::HttpHeaderValueCollection_1<::Il2CppString*>* System::Net::Http::Headers::HttpRequestHeaders::get_Connection() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::get_Connection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Connection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Http::Headers::HttpHeaderValueCollection_1<::Il2CppString*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders.get_ConnectionClose
System::Nullable_1<bool> System::Net::Http::Headers::HttpRequestHeaders::get_ConnectionClose() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::get_ConnectionClose");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConnectionClose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<bool>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders.get_ConnectionKeepAlive
bool System::Net::Http::Headers::HttpRequestHeaders::get_ConnectionKeepAlive() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::get_ConnectionKeepAlive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ConnectionKeepAlive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders.get_ExpectContinue
System::Nullable_1<bool> System::Net::Http::Headers::HttpRequestHeaders::get_ExpectContinue() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::get_ExpectContinue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ExpectContinue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<bool>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders.get_Host
::Il2CppString* System::Net::Http::Headers::HttpRequestHeaders::get_Host() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::get_Host");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Host", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders.get_TransferEncoding
System::Net::Http::Headers::HttpHeaderValueCollection_1<System::Net::Http::Headers::TransferCodingHeaderValue*>* System::Net::Http::Headers::HttpRequestHeaders::get_TransferEncoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::get_TransferEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TransferEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Http::Headers::HttpHeaderValueCollection_1<System::Net::Http::Headers::TransferCodingHeaderValue*>*, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders.get_TransferEncodingChunked
System::Nullable_1<bool> System::Net::Http::Headers::HttpRequestHeaders::get_TransferEncodingChunked() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::get_TransferEncodingChunked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TransferEncodingChunked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Nullable_1<bool>, false>(this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders.AddHeaders
void System::Net::Http::Headers::HttpRequestHeaders::AddHeaders(System::Net::Http::Headers::HttpRequestHeaders* headers) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::AddHeaders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddHeaders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(headers)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, headers);
}
// Writing MetadataGetter for method: HttpRequestHeaders::get_Connection
// Il2CppName: get_Connection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::Http::Headers::HttpHeaderValueCollection_1<::Il2CppString*>* (HttpRequestHeaders::*)()>(&HttpRequestHeaders::get_Connection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpRequestHeaders*), "get_Connection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpRequestHeaders::get_ConnectionClose
// Il2CppName: get_ConnectionClose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Nullable_1<bool> (HttpRequestHeaders::*)()>(&HttpRequestHeaders::get_ConnectionClose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpRequestHeaders*), "get_ConnectionClose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpRequestHeaders::get_ConnectionKeepAlive
// Il2CppName: get_ConnectionKeepAlive
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HttpRequestHeaders::*)()>(&HttpRequestHeaders::get_ConnectionKeepAlive)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpRequestHeaders*), "get_ConnectionKeepAlive", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpRequestHeaders::get_ExpectContinue
// Il2CppName: get_ExpectContinue
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Nullable_1<bool> (HttpRequestHeaders::*)()>(&HttpRequestHeaders::get_ExpectContinue)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpRequestHeaders*), "get_ExpectContinue", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpRequestHeaders::get_Host
// Il2CppName: get_Host
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (HttpRequestHeaders::*)()>(&HttpRequestHeaders::get_Host)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpRequestHeaders*), "get_Host", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpRequestHeaders::get_TransferEncoding
// Il2CppName: get_TransferEncoding
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::Http::Headers::HttpHeaderValueCollection_1<System::Net::Http::Headers::TransferCodingHeaderValue*>* (HttpRequestHeaders::*)()>(&HttpRequestHeaders::get_TransferEncoding)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpRequestHeaders*), "get_TransferEncoding", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpRequestHeaders::get_TransferEncodingChunked
// Il2CppName: get_TransferEncodingChunked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Nullable_1<bool> (HttpRequestHeaders::*)()>(&HttpRequestHeaders::get_TransferEncodingChunked)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpRequestHeaders*), "get_TransferEncodingChunked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpRequestHeaders::AddHeaders
// Il2CppName: AddHeaders
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpRequestHeaders::*)(System::Net::Http::Headers::HttpRequestHeaders*)>(&HttpRequestHeaders::AddHeaders)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpRequestHeaders*), "AddHeaders", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::HttpRequestHeaders*>()});
  }
};
// Writing MetadataGetter for method: HttpRequestHeaders::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpRequestHeaders::*)()>(&HttpRequestHeaders::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpRequestHeaders*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpRequestHeaders::*)()>(&HttpRequestHeaders::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpRequestHeaders*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.HttpRequestHeaders/<>c
#include "System/Net/Http/Headers/HttpRequestHeaders_--c.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
// Including type: System.Net.Http.Headers.TransferCodingHeaderValue
#include "System/Net/Http/Headers/TransferCodingHeaderValue.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Net.Http.Headers.HttpRequestHeaders/<>c <>9
System::Net::Http::Headers::HttpRequestHeaders::$$c* System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Net::Http::Headers::HttpRequestHeaders::$$c*>("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Net.Http.Headers.HttpRequestHeaders/<>c <>9
void System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9(System::Net::Http::Headers::HttpRequestHeaders::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<System.String> <>9__19_0
System::Predicate_1<::Il2CppString*>* System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9__19_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9__19_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Predicate_1<::Il2CppString*>*>("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9__19_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<System.String> <>9__19_0
void System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9__19_0(System::Predicate_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9__19_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9__19_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<System.String> <>9__22_0
System::Predicate_1<::Il2CppString*>* System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9__22_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9__22_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Predicate_1<::Il2CppString*>*>("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9__22_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<System.String> <>9__22_0
void System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9__22_0(System::Predicate_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9__22_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9__22_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<System.Net.Http.Headers.TransferCodingHeaderValue> <>9__29_0
System::Predicate_1<System::Net::Http::Headers::TransferCodingHeaderValue*>* System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9__29_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9__29_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Predicate_1<System::Net::Http::Headers::TransferCodingHeaderValue*>*>("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9__29_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<System.Net.Http.Headers.TransferCodingHeaderValue> <>9__29_0
void System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9__29_0(System::Predicate_1<System::Net::Http::Headers::TransferCodingHeaderValue*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9__29_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9__29_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<System.Net.Http.Headers.TransferCodingHeaderValue> <>9__71_0
System::Predicate_1<System::Net::Http::Headers::TransferCodingHeaderValue*>* System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9__71_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::$$c::_get_$$9__71_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Predicate_1<System::Net::Http::Headers::TransferCodingHeaderValue*>*>("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9__71_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<System.Net.Http.Headers.TransferCodingHeaderValue> <>9__71_0
void System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9__71_0(System::Predicate_1<System::Net::Http::Headers::TransferCodingHeaderValue*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::$$c::_set_$$9__71_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "HttpRequestHeaders/<>c", "<>9__71_0", value)));
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders/<>c..cctor
void System::Net::Http::Headers::HttpRequestHeaders::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "HttpRequestHeaders/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders/<>c.<get_ConnectionClose>b__19_0
bool System::Net::Http::Headers::HttpRequestHeaders::$$c::$get_ConnectionClose$b__19_0(::Il2CppString* l) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::$$c::<get_ConnectionClose>b__19_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_ConnectionClose>b__19_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, l);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders/<>c.<get_ConnectionKeepAlive>b__22_0
bool System::Net::Http::Headers::HttpRequestHeaders::$$c::$get_ConnectionKeepAlive$b__22_0(::Il2CppString* l) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::$$c::<get_ConnectionKeepAlive>b__22_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_ConnectionKeepAlive>b__22_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, l);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders/<>c.<get_ExpectContinue>b__29_0
bool System::Net::Http::Headers::HttpRequestHeaders::$$c::$get_ExpectContinue$b__29_0(System::Net::Http::Headers::TransferCodingHeaderValue* l) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::$$c::<get_ExpectContinue>b__29_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_ExpectContinue>b__29_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, l);
}
// Autogenerated method: System.Net.Http.Headers.HttpRequestHeaders/<>c.<get_TransferEncodingChunked>b__71_0
bool System::Net::Http::Headers::HttpRequestHeaders::$$c::$get_TransferEncodingChunked$b__71_0(System::Net::Http::Headers::TransferCodingHeaderValue* l) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::HttpRequestHeaders::$$c::<get_TransferEncodingChunked>b__71_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_TransferEncodingChunked>b__71_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(l)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, l);
}
// Writing MetadataGetter for method: HttpRequestHeaders::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&HttpRequestHeaders::$$c::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpRequestHeaders::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HttpRequestHeaders::$$c::$get_ConnectionClose$b__19_0
// Il2CppName: <get_ConnectionClose>b__19_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HttpRequestHeaders::$$c::*)(::Il2CppString*)>(&HttpRequestHeaders::$$c::$get_ConnectionClose$b__19_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpRequestHeaders::$$c*), "<get_ConnectionClose>b__19_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: HttpRequestHeaders::$$c::$get_ConnectionKeepAlive$b__22_0
// Il2CppName: <get_ConnectionKeepAlive>b__22_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HttpRequestHeaders::$$c::*)(::Il2CppString*)>(&HttpRequestHeaders::$$c::$get_ConnectionKeepAlive$b__22_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpRequestHeaders::$$c*), "<get_ConnectionKeepAlive>b__22_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: HttpRequestHeaders::$$c::$get_ExpectContinue$b__29_0
// Il2CppName: <get_ExpectContinue>b__29_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HttpRequestHeaders::$$c::*)(System::Net::Http::Headers::TransferCodingHeaderValue*)>(&HttpRequestHeaders::$$c::$get_ExpectContinue$b__29_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpRequestHeaders::$$c*), "<get_ExpectContinue>b__29_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::TransferCodingHeaderValue*>()});
  }
};
// Writing MetadataGetter for method: HttpRequestHeaders::$$c::$get_TransferEncodingChunked$b__71_0
// Il2CppName: <get_TransferEncodingChunked>b__71_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (HttpRequestHeaders::$$c::*)(System::Net::Http::Headers::TransferCodingHeaderValue*)>(&HttpRequestHeaders::$$c::$get_TransferEncodingChunked$b__71_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpRequestHeaders::$$c*), "<get_TransferEncodingChunked>b__71_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::TransferCodingHeaderValue*>()});
  }
};
// Writing MetadataGetter for method: HttpRequestHeaders::$$c::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpRequestHeaders::$$c::*)()>(&HttpRequestHeaders::$$c::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpRequestHeaders::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpRequestHeaders::$$c::*)()>(&HttpRequestHeaders::$$c::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpRequestHeaders::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Net.Http.Headers.HttpResponseHeaders
#include "System/Net/Http/Headers/HttpResponseHeaders.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: HttpResponseHeaders::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpResponseHeaders::*)()>(&HttpResponseHeaders::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpResponseHeaders*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HttpResponseHeaders::*)()>(&HttpResponseHeaders::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HttpResponseHeaders*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Net.Http.Headers.Token
#include "System/Net/Http/Headers/Token.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Net.Http.Headers.Token Empty
System::Net::Http::Headers::Token System::Net::Http::Headers::Token::_get_Empty() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::_get_Empty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Net::Http::Headers::Token>("System.Net.Http.Headers", "Token", "Empty"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Net.Http.Headers.Token Empty
void System::Net::Http::Headers::Token::_set_Empty(System::Net::Http::Headers::Token value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::_set_Empty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System.Net.Http.Headers", "Token", "Empty", value));
}
// Autogenerated method: System.Net.Http.Headers.Token.get_StartPosition
int System::Net::Http::Headers::Token::get_StartPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::get_StartPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_StartPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Token.set_StartPosition
void System::Net::Http::Headers::Token::set_StartPosition(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::set_StartPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_StartPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.Token.get_EndPosition
int System::Net::Http::Headers::Token::get_EndPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::get_EndPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_EndPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(*this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Token.set_EndPosition
void System::Net::Http::Headers::Token::set_EndPosition(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::set_EndPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_EndPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: System.Net.Http.Headers.Token.get_Kind
System::Net::Http::Headers::Token::Type System::Net::Http::Headers::Token::get_Kind() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::get_Kind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Kind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Http::Headers::Token::Type, false>(*this, ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Token..cctor
void System::Net::Http::Headers::Token::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("System.Net.Http.Headers", "Token", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Net.Http.Headers.Token.ToString
::Il2CppString* System::Net::Http::Headers::Token::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("System::Net::Http::Headers::Token::ToString");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Writing MetadataGetter for method: Token::Token
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Token::*)(System::Net::Http::Headers::Token::Type, int, int)>(&Token::Token<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Token), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::Token::Type>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Token::*)(System::Net::Http::Headers::Token::Type, int, int)>(&Token::Token<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Token), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Net::Http::Headers::Token::Type>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Token::get_StartPosition
// Il2CppName: get_StartPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Token::*)()>(&Token::get_StartPosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Token), "get_StartPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Token::set_StartPosition
// Il2CppName: set_StartPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Token::*)(int)>(&Token::set_StartPosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Token), "set_StartPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Token::get_EndPosition
// Il2CppName: get_EndPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (Token::*)()>(&Token::get_EndPosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Token), "get_EndPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Token::set_EndPosition
// Il2CppName: set_EndPosition
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (Token::*)(int)>(&Token::set_EndPosition)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Token), "set_EndPosition", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: Token::get_Kind
// Il2CppName: get_Kind
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Net::Http::Headers::Token::Type (Token::*)()>(&Token::get_Kind)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Token), "get_Kind", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Token::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&Token::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Token), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: Token::ToString
// Il2CppName: ToString
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (Token::*)()>(&Token::ToString)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(Token), "ToString", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
