// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: IMultiplayerSpectatingSpot
#include "GlobalNamespace/IMultiplayerSpectatingSpot.hpp"
// Including type: IMultiplayerObservable
#include "GlobalNamespace/IMultiplayerObservable.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IMultiplayerSpectatingSpot.get_isMain
bool GlobalNamespace::IMultiplayerSpectatingSpot::get_isMain() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSpectatingSpot::get_isMain");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isMain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IMultiplayerSpectatingSpot.get_observable
GlobalNamespace::IMultiplayerObservable* GlobalNamespace::IMultiplayerSpectatingSpot::get_observable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSpectatingSpot::get_observable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_observable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IMultiplayerObservable*, false>(this, ___internal__method);
}
// Autogenerated method: IMultiplayerSpectatingSpot.get_transform
UnityEngine::Transform* GlobalNamespace::IMultiplayerSpectatingSpot::get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSpectatingSpot::get_transform");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: IMultiplayerSpectatingSpot.get_spotName
::Il2CppString* GlobalNamespace::IMultiplayerSpectatingSpot::get_spotName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSpectatingSpot::get_spotName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spotName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: IMultiplayerSpectatingSpot.add_hasBeenRemovedEvent
void GlobalNamespace::IMultiplayerSpectatingSpot::add_hasBeenRemovedEvent(System::Action_1<GlobalNamespace::IMultiplayerSpectatingSpot*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSpectatingSpot::add_hasBeenRemovedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_hasBeenRemovedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMultiplayerSpectatingSpot.remove_hasBeenRemovedEvent
void GlobalNamespace::IMultiplayerSpectatingSpot::remove_hasBeenRemovedEvent(System::Action_1<GlobalNamespace::IMultiplayerSpectatingSpot*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSpectatingSpot::remove_hasBeenRemovedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_hasBeenRemovedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IMultiplayerSpectatingSpot.SetIsObserved
void GlobalNamespace::IMultiplayerSpectatingSpot::SetIsObserved(bool isObserved) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IMultiplayerSpectatingSpot::SetIsObserved");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsObserved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isObserved)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isObserved);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerConnectedPlayerSpectatingSpot
#include "GlobalNamespace/MultiplayerConnectedPlayerSpectatingSpot.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: IMultiplayerSessionManager
#include "GlobalNamespace/IMultiplayerSessionManager.hpp"
// Including type: MultiplayerSpectatingSpotManager
#include "GlobalNamespace/MultiplayerSpectatingSpotManager.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: IMultiplayerObservable
#include "GlobalNamespace/IMultiplayerObservable.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly IConnectedPlayer _connectedPlayer
GlobalNamespace::IConnectedPlayer*& GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::dyn__connectedPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::dyn__connectedPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_connectedPlayer"))->offset;
  return *reinterpret_cast<GlobalNamespace::IConnectedPlayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IMultiplayerSessionManager _multiplayerSessionManager
GlobalNamespace::IMultiplayerSessionManager*& GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::dyn__multiplayerSessionManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::dyn__multiplayerSessionManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerSessionManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::IMultiplayerSessionManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerSpectatingSpotManager _spectatingSpotManager
GlobalNamespace::MultiplayerSpectatingSpotManager*& GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::dyn__spectatingSpotManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::dyn__spectatingSpotManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spectatingSpotManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerSpectatingSpotManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<IMultiplayerSpectatingSpot> hasBeenRemovedEvent
System::Action_1<GlobalNamespace::IMultiplayerSpectatingSpot*>*& GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::dyn_hasBeenRemovedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::dyn_hasBeenRemovedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasBeenRemovedEvent"))->offset;
  return *reinterpret_cast<System::Action_1<GlobalNamespace::IMultiplayerSpectatingSpot*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Boolean> isObservedChangedEvent
System::Action_1<bool>*& GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::dyn_isObservedChangedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::dyn_isObservedChangedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isObservedChangedEvent"))->offset;
  return *reinterpret_cast<System::Action_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IMultiplayerObservable <observable>k__BackingField
GlobalNamespace::IMultiplayerObservable*& GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::dyn_$observable$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::dyn_$observable$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<observable>k__BackingField"))->offset;
  return *reinterpret_cast<GlobalNamespace::IMultiplayerObservable**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _playerFailed
bool& GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::dyn__playerFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::dyn__playerFailed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerFailed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerConnectedPlayerSpectatingSpot.get_observable
GlobalNamespace::IMultiplayerObservable* GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::get_observable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::get_observable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_observable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IMultiplayerObservable*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerConnectedPlayerSpectatingSpot.set_observable
void GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::set_observable(GlobalNamespace::IMultiplayerObservable* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::set_observable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_observable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerConnectedPlayerSpectatingSpot.get_spotName
::Il2CppString* GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::get_spotName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::get_spotName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spotName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerConnectedPlayerSpectatingSpot.get_isMain
bool GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::get_isMain() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::get_isMain");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isMain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerConnectedPlayerSpectatingSpot.IMultiplayerSpectatingSpot.get_transform
UnityEngine::Transform* GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::IMultiplayerSpectatingSpot_get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::IMultiplayerSpectatingSpot.get_transform");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IMultiplayerSpectatingSpot.get_transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerConnectedPlayerSpectatingSpot.add_hasBeenRemovedEvent
void GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::add_hasBeenRemovedEvent(System::Action_1<GlobalNamespace::IMultiplayerSpectatingSpot*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::add_hasBeenRemovedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_hasBeenRemovedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerConnectedPlayerSpectatingSpot.remove_hasBeenRemovedEvent
void GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::remove_hasBeenRemovedEvent(System::Action_1<GlobalNamespace::IMultiplayerSpectatingSpot*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::remove_hasBeenRemovedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_hasBeenRemovedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerConnectedPlayerSpectatingSpot.add_isObservedChangedEvent
void GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::add_isObservedChangedEvent(System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::add_isObservedChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_isObservedChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerConnectedPlayerSpectatingSpot.remove_isObservedChangedEvent
void GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::remove_isObservedChangedEvent(System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::remove_isObservedChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_isObservedChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerConnectedPlayerSpectatingSpot.Start
void GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerConnectedPlayerSpectatingSpot.OnDestroy
void GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerConnectedPlayerSpectatingSpot.SetIsObserved
void GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::SetIsObserved(bool isObserved) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::SetIsObserved");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsObserved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isObserved)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isObserved);
}
// Autogenerated method: MultiplayerConnectedPlayerSpectatingSpot.ReloadBasedOnPlayerCurrentState
void GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::ReloadBasedOnPlayerCurrentState(GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::ReloadBasedOnPlayerCurrentState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReloadBasedOnPlayerCurrentState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, connectedPlayer);
}
// Autogenerated method: MultiplayerConnectedPlayerSpectatingSpot.HandlePlayerStateChanged
void GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::HandlePlayerStateChanged(GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::HandlePlayerStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlayerStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, connectedPlayer);
}
// Autogenerated method: MultiplayerConnectedPlayerSpectatingSpot.HandlePlayerDisconnected
void GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::HandlePlayerDisconnected(GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerConnectedPlayerSpectatingSpot::HandlePlayerDisconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlayerDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, connectedPlayer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerEnvironmentSpectatingSpot
#include "GlobalNamespace/MultiplayerEnvironmentSpectatingSpot.hpp"
// Including type: MultiplayerSpectatingSpotManager
#include "GlobalNamespace/MultiplayerSpectatingSpotManager.hpp"
// Including type: MultiplayerActivePlayersTimeOffsetAverage
#include "GlobalNamespace/MultiplayerActivePlayersTimeOffsetAverage.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: IMultiplayerObservable
#include "GlobalNamespace/IMultiplayerObservable.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _preferredSpectatingSpot
bool& GlobalNamespace::MultiplayerEnvironmentSpectatingSpot::dyn__preferredSpectatingSpot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerEnvironmentSpectatingSpot::dyn__preferredSpectatingSpot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_preferredSpectatingSpot"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _displaySpotNumber
bool& GlobalNamespace::MultiplayerEnvironmentSpectatingSpot::dyn__displaySpotNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerEnvironmentSpectatingSpot::dyn__displaySpotNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_displaySpotNumber"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _spotNumber
int& GlobalNamespace::MultiplayerEnvironmentSpectatingSpot::dyn__spotNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerEnvironmentSpectatingSpot::dyn__spotNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spotNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerSpectatingSpotManager _spectatingSpotManager
GlobalNamespace::MultiplayerSpectatingSpotManager*& GlobalNamespace::MultiplayerEnvironmentSpectatingSpot::dyn__spectatingSpotManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerEnvironmentSpectatingSpot::dyn__spectatingSpotManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spectatingSpotManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerSpectatingSpotManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerActivePlayersTimeOffsetAverage _activePlayersTimeOffsetAverage
GlobalNamespace::MultiplayerActivePlayersTimeOffsetAverage*& GlobalNamespace::MultiplayerEnvironmentSpectatingSpot::dyn__activePlayersTimeOffsetAverage() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerEnvironmentSpectatingSpot::dyn__activePlayersTimeOffsetAverage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activePlayersTimeOffsetAverage"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerActivePlayersTimeOffsetAverage**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<IMultiplayerSpectatingSpot> hasBeenRemovedEvent
System::Action_1<GlobalNamespace::IMultiplayerSpectatingSpot*>*& GlobalNamespace::MultiplayerEnvironmentSpectatingSpot::dyn_hasBeenRemovedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerEnvironmentSpectatingSpot::dyn_hasBeenRemovedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasBeenRemovedEvent"))->offset;
  return *reinterpret_cast<System::Action_1<GlobalNamespace::IMultiplayerSpectatingSpot*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerEnvironmentSpectatingSpot.get_observable
GlobalNamespace::IMultiplayerObservable* GlobalNamespace::MultiplayerEnvironmentSpectatingSpot::get_observable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerEnvironmentSpectatingSpot::get_observable");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_observable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IMultiplayerObservable*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerEnvironmentSpectatingSpot.get_spotName
::Il2CppString* GlobalNamespace::MultiplayerEnvironmentSpectatingSpot::get_spotName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerEnvironmentSpectatingSpot::get_spotName");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spotName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerEnvironmentSpectatingSpot.get_isMain
bool GlobalNamespace::MultiplayerEnvironmentSpectatingSpot::get_isMain() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerEnvironmentSpectatingSpot::get_isMain");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isMain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerEnvironmentSpectatingSpot.IMultiplayerSpectatingSpot.get_transform
UnityEngine::Transform* GlobalNamespace::MultiplayerEnvironmentSpectatingSpot::IMultiplayerSpectatingSpot_get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerEnvironmentSpectatingSpot::IMultiplayerSpectatingSpot.get_transform");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IMultiplayerSpectatingSpot.get_transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerEnvironmentSpectatingSpot.add_hasBeenRemovedEvent
void GlobalNamespace::MultiplayerEnvironmentSpectatingSpot::add_hasBeenRemovedEvent(System::Action_1<GlobalNamespace::IMultiplayerSpectatingSpot*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerEnvironmentSpectatingSpot::add_hasBeenRemovedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_hasBeenRemovedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerEnvironmentSpectatingSpot.remove_hasBeenRemovedEvent
void GlobalNamespace::MultiplayerEnvironmentSpectatingSpot::remove_hasBeenRemovedEvent(System::Action_1<GlobalNamespace::IMultiplayerSpectatingSpot*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerEnvironmentSpectatingSpot::remove_hasBeenRemovedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_hasBeenRemovedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerEnvironmentSpectatingSpot.Start
void GlobalNamespace::MultiplayerEnvironmentSpectatingSpot::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerEnvironmentSpectatingSpot::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerEnvironmentSpectatingSpot.OnDisable
void GlobalNamespace::MultiplayerEnvironmentSpectatingSpot::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerEnvironmentSpectatingSpot::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerEnvironmentSpectatingSpot.SetIsObserved
void GlobalNamespace::MultiplayerEnvironmentSpectatingSpot::SetIsObserved(bool isObserved) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerEnvironmentSpectatingSpot::SetIsObserved");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetIsObserved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isObserved)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isObserved);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerSpectatingSpotManager
#include "GlobalNamespace/MultiplayerSpectatingSpotManager.hpp"
// Including type: MultiplayerSpectatingSpotManager/<>c
#include "GlobalNamespace/MultiplayerSpectatingSpotManager_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: IMultiplayerSpectatingSpot
#include "GlobalNamespace/IMultiplayerSpectatingSpot.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<IMultiplayerSpectatingSpot> _spectatingSpots
System::Collections::Generic::List_1<GlobalNamespace::IMultiplayerSpectatingSpot*>*& GlobalNamespace::MultiplayerSpectatingSpotManager::dyn__spectatingSpots() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatingSpotManager::dyn__spectatingSpots");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spectatingSpots"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::IMultiplayerSpectatingSpot*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.Dictionary`2<IMultiplayerSpectatingSpot,System.Int32> _spotIndexBySpot
System::Collections::Generic::Dictionary_2<GlobalNamespace::IMultiplayerSpectatingSpot*, int>*& GlobalNamespace::MultiplayerSpectatingSpotManager::dyn__spotIndexBySpot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatingSpotManager::dyn__spotIndexBySpot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spotIndexBySpot"))->offset;
  return *reinterpret_cast<System::Collections::Generic::Dictionary_2<GlobalNamespace::IMultiplayerSpectatingSpot*, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerSpectatingSpotManager.get_spectatingSpots
System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::IMultiplayerSpectatingSpot*>* GlobalNamespace::MultiplayerSpectatingSpotManager::get_spectatingSpots() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatingSpotManager::get_spectatingSpots");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_spectatingSpots", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::IMultiplayerSpectatingSpot*>*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSpectatingSpotManager.get_defaultSpot
GlobalNamespace::IMultiplayerSpectatingSpot* GlobalNamespace::MultiplayerSpectatingSpotManager::get_defaultSpot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatingSpotManager::get_defaultSpot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_defaultSpot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IMultiplayerSpectatingSpot*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSpectatingSpotManager.RegisterSpectatingSpot
void GlobalNamespace::MultiplayerSpectatingSpotManager::RegisterSpectatingSpot(GlobalNamespace::IMultiplayerSpectatingSpot* spectatingSpot) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatingSpotManager::RegisterSpectatingSpot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RegisterSpectatingSpot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spectatingSpot)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, spectatingSpot);
}
// Autogenerated method: MultiplayerSpectatingSpotManager.GetAdjacentSpot
GlobalNamespace::IMultiplayerSpectatingSpot* GlobalNamespace::MultiplayerSpectatingSpotManager::GetAdjacentSpot(GlobalNamespace::IMultiplayerSpectatingSpot* spectatingSpot, int offset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatingSpotManager::GetAdjacentSpot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAdjacentSpot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spectatingSpot), ::il2cpp_utils::ExtractType(offset)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IMultiplayerSpectatingSpot*, false>(this, ___internal__method, spectatingSpot, offset);
}
// Autogenerated method: MultiplayerSpectatingSpotManager.GetIndexBySpot
int GlobalNamespace::MultiplayerSpectatingSpotManager::GetIndexBySpot(GlobalNamespace::IMultiplayerSpectatingSpot* spectatingSpot) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatingSpotManager::GetIndexBySpot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetIndexBySpot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spectatingSpot)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, spectatingSpot);
}
// Autogenerated method: MultiplayerSpectatingSpotManager.UpdateIndexBySpotDictionary
void GlobalNamespace::MultiplayerSpectatingSpotManager::UpdateIndexBySpotDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatingSpotManager::UpdateIndexBySpotDictionary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateIndexBySpotDictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSpectatingSpotManager.SpotOnHasBeenRemoved
void GlobalNamespace::MultiplayerSpectatingSpotManager::SpotOnHasBeenRemoved(GlobalNamespace::IMultiplayerSpectatingSpot* spectatingSpot) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatingSpotManager::SpotOnHasBeenRemoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpotOnHasBeenRemoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spectatingSpot)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, spectatingSpot);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerSpectatingSpotManager/<>c
#include "GlobalNamespace/MultiplayerSpectatingSpotManager_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: IMultiplayerSpectatingSpot
#include "GlobalNamespace/IMultiplayerSpectatingSpot.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly MultiplayerSpectatingSpotManager/<>c <>9
GlobalNamespace::MultiplayerSpectatingSpotManager::$$c* GlobalNamespace::MultiplayerSpectatingSpotManager::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatingSpotManager::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerSpectatingSpotManager::$$c*>("", "MultiplayerSpectatingSpotManager/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly MultiplayerSpectatingSpotManager/<>c <>9
void GlobalNamespace::MultiplayerSpectatingSpotManager::$$c::_set_$$9(GlobalNamespace::MultiplayerSpectatingSpotManager::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatingSpotManager::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "MultiplayerSpectatingSpotManager/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<IMultiplayerSpectatingSpot,System.Boolean> <>9__3_0
System::Func_2<GlobalNamespace::IMultiplayerSpectatingSpot*, bool>* GlobalNamespace::MultiplayerSpectatingSpotManager::$$c::_get_$$9__3_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatingSpotManager::$$c::_get_$$9__3_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<GlobalNamespace::IMultiplayerSpectatingSpot*, bool>*>("", "MultiplayerSpectatingSpotManager/<>c", "<>9__3_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<IMultiplayerSpectatingSpot,System.Boolean> <>9__3_0
void GlobalNamespace::MultiplayerSpectatingSpotManager::$$c::_set_$$9__3_0(System::Func_2<GlobalNamespace::IMultiplayerSpectatingSpot*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatingSpotManager::$$c::_set_$$9__3_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "MultiplayerSpectatingSpotManager/<>c", "<>9__3_0", value)));
}
// Autogenerated method: MultiplayerSpectatingSpotManager/<>c..cctor
void GlobalNamespace::MultiplayerSpectatingSpotManager::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatingSpotManager::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "MultiplayerSpectatingSpotManager/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: MultiplayerSpectatingSpotManager/<>c.<get_defaultSpot>b__3_0
bool GlobalNamespace::MultiplayerSpectatingSpotManager::$$c::$get_defaultSpot$b__3_0(GlobalNamespace::IMultiplayerSpectatingSpot* s) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatingSpotManager::$$c::<get_defaultSpot>b__3_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_defaultSpot>b__3_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(s)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, s);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerSpectatorController
#include "GlobalNamespace/MultiplayerSpectatorController.hpp"
// Including type: MultiplayerSpectatorController/<SwitchToDefaultSpotWithFadeCoroutine>d__17
#include "GlobalNamespace/MultiplayerSpectatorController_-SwitchToDefaultSpotWithFadeCoroutine-d__17.hpp"
// Including type: MultiplayerSpectatorController/<SwitchToDefaultSpotCoroutine>d__18
#include "GlobalNamespace/MultiplayerSpectatorController_-SwitchToDefaultSpotCoroutine-d__18.hpp"
// Including type: MultiplayerSpectatingSpotManager
#include "GlobalNamespace/MultiplayerSpectatingSpotManager.hpp"
// Including type: MultiplayerLocalInactivePlayerSongSyncController
#include "GlobalNamespace/MultiplayerLocalInactivePlayerSongSyncController.hpp"
// Including type: MultiplayerController/State
#include "GlobalNamespace/MultiplayerController.hpp"
// Including type: FadeInOutController
#include "GlobalNamespace/FadeInOutController.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: IMultiplayerSpectatingSpot
#include "GlobalNamespace/IMultiplayerSpectatingSpot.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerSpectatingSpotManager _spotManager
GlobalNamespace::MultiplayerSpectatingSpotManager*& GlobalNamespace::MultiplayerSpectatorController::dyn__spotManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatorController::dyn__spotManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spotManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerSpectatingSpotManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerLocalInactivePlayerSongSyncController _songController
GlobalNamespace::MultiplayerLocalInactivePlayerSongSyncController*& GlobalNamespace::MultiplayerSpectatorController::dyn__songController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatorController::dyn__songController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songController"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerLocalInactivePlayerSongSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplayerController _multiplayerController
GlobalNamespace::MultiplayerController*& GlobalNamespace::MultiplayerSpectatorController::dyn__multiplayerController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatorController::dyn__multiplayerController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplayerController"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly FadeInOutController _fadeInOutController
GlobalNamespace::FadeInOutController*& GlobalNamespace::MultiplayerSpectatorController::dyn__fadeInOutController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatorController::dyn__fadeInOutController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeInOutController"))->offset;
  return *reinterpret_cast<GlobalNamespace::FadeInOutController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<IMultiplayerSpectatingSpot> spectatingSpotDidChangeEvent
System::Action_1<GlobalNamespace::IMultiplayerSpectatingSpot*>*& GlobalNamespace::MultiplayerSpectatorController::dyn_spectatingSpotDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatorController::dyn_spectatingSpotDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spectatingSpotDidChangeEvent"))->offset;
  return *reinterpret_cast<System::Action_1<GlobalNamespace::IMultiplayerSpectatingSpot*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _transform
UnityEngine::Transform*& GlobalNamespace::MultiplayerSpectatorController::dyn__transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatorController::dyn__transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IMultiplayerSpectatingSpot _currentSpot
GlobalNamespace::IMultiplayerSpectatingSpot*& GlobalNamespace::MultiplayerSpectatorController::dyn__currentSpot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatorController::dyn__currentSpot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentSpot"))->offset;
  return *reinterpret_cast<GlobalNamespace::IMultiplayerSpectatingSpot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerSpectatorController.get_currentSpot
GlobalNamespace::IMultiplayerSpectatingSpot* GlobalNamespace::MultiplayerSpectatorController::get_currentSpot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatorController::get_currentSpot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentSpot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IMultiplayerSpectatingSpot*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSpectatorController.add_spectatingSpotDidChangeEvent
void GlobalNamespace::MultiplayerSpectatorController::add_spectatingSpotDidChangeEvent(System::Action_1<GlobalNamespace::IMultiplayerSpectatingSpot*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatorController::add_spectatingSpotDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_spectatingSpotDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSpectatorController.remove_spectatingSpotDidChangeEvent
void GlobalNamespace::MultiplayerSpectatorController::remove_spectatingSpotDidChangeEvent(System::Action_1<GlobalNamespace::IMultiplayerSpectatingSpot*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatorController::remove_spectatingSpotDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_spectatingSpotDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerSpectatorController.Awake
void GlobalNamespace::MultiplayerSpectatorController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatorController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSpectatorController.Start
void GlobalNamespace::MultiplayerSpectatorController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatorController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSpectatorController.OnDestroy
void GlobalNamespace::MultiplayerSpectatorController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatorController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSpectatorController.SwitchToDefaultSpot
void GlobalNamespace::MultiplayerSpectatorController::SwitchToDefaultSpot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatorController::SwitchToDefaultSpot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwitchToDefaultSpot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSpectatorController.SwitchToPrev
void GlobalNamespace::MultiplayerSpectatorController::SwitchToPrev() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatorController::SwitchToPrev");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwitchToPrev", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSpectatorController.SwitchToNext
void GlobalNamespace::MultiplayerSpectatorController::SwitchToNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatorController::SwitchToNext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwitchToNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSpectatorController.SwitchToDefaultSpotWithFadeCoroutine
System::Collections::IEnumerator* GlobalNamespace::MultiplayerSpectatorController::SwitchToDefaultSpotWithFadeCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatorController::SwitchToDefaultSpotWithFadeCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwitchToDefaultSpotWithFadeCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSpectatorController.SwitchToDefaultSpotCoroutine
System::Collections::IEnumerator* GlobalNamespace::MultiplayerSpectatorController::SwitchToDefaultSpotCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatorController::SwitchToDefaultSpotCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwitchToDefaultSpotCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSpectatorController.SwitchToSpectatingSpot
void GlobalNamespace::MultiplayerSpectatorController::SwitchToSpectatingSpot(GlobalNamespace::IMultiplayerSpectatingSpot* spectatingSpot) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatorController::SwitchToSpectatingSpot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwitchToSpectatingSpot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(spectatingSpot)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, spectatingSpot);
}
// Autogenerated method: MultiplayerSpectatorController.HandleStateChanged
void GlobalNamespace::MultiplayerSpectatorController::HandleStateChanged(GlobalNamespace::MultiplayerController::State state) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatorController::HandleStateChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleStateChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, state);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerSpectatorController/<SwitchToDefaultSpotWithFadeCoroutine>d__17
#include "GlobalNamespace/MultiplayerSpectatorController_-SwitchToDefaultSpotWithFadeCoroutine-d__17.hpp"
// Including type: IMultiplayerSpectatingSpot
#include "GlobalNamespace/IMultiplayerSpectatingSpot.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::MultiplayerSpectatorController::$SwitchToDefaultSpotWithFadeCoroutine$d__17::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatorController::$SwitchToDefaultSpotWithFadeCoroutine$d__17::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::MultiplayerSpectatorController::$SwitchToDefaultSpotWithFadeCoroutine$d__17::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatorController::$SwitchToDefaultSpotWithFadeCoroutine$d__17::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MultiplayerSpectatorController <>4__this
GlobalNamespace::MultiplayerSpectatorController*& GlobalNamespace::MultiplayerSpectatorController::$SwitchToDefaultSpotWithFadeCoroutine$d__17::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatorController::$SwitchToDefaultSpotWithFadeCoroutine$d__17::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerSpectatorController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IMultiplayerSpectatingSpot <defaultSpot>5__2
GlobalNamespace::IMultiplayerSpectatingSpot*& GlobalNamespace::MultiplayerSpectatorController::$SwitchToDefaultSpotWithFadeCoroutine$d__17::dyn_$defaultSpot$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatorController::$SwitchToDefaultSpotWithFadeCoroutine$d__17::dyn_$defaultSpot$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<defaultSpot>5__2"))->offset;
  return *reinterpret_cast<GlobalNamespace::IMultiplayerSpectatingSpot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerSpectatorController/<SwitchToDefaultSpotWithFadeCoroutine>d__17.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerSpectatorController::$SwitchToDefaultSpotWithFadeCoroutine$d__17::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatorController::$SwitchToDefaultSpotWithFadeCoroutine$d__17::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSpectatorController/<SwitchToDefaultSpotWithFadeCoroutine>d__17.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerSpectatorController::$SwitchToDefaultSpotWithFadeCoroutine$d__17::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatorController::$SwitchToDefaultSpotWithFadeCoroutine$d__17::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSpectatorController/<SwitchToDefaultSpotWithFadeCoroutine>d__17.System.IDisposable.Dispose
void GlobalNamespace::MultiplayerSpectatorController::$SwitchToDefaultSpotWithFadeCoroutine$d__17::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatorController::$SwitchToDefaultSpotWithFadeCoroutine$d__17::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSpectatorController/<SwitchToDefaultSpotWithFadeCoroutine>d__17.MoveNext
bool GlobalNamespace::MultiplayerSpectatorController::$SwitchToDefaultSpotWithFadeCoroutine$d__17::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatorController::$SwitchToDefaultSpotWithFadeCoroutine$d__17::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSpectatorController/<SwitchToDefaultSpotWithFadeCoroutine>d__17.System.Collections.IEnumerator.Reset
void GlobalNamespace::MultiplayerSpectatorController::$SwitchToDefaultSpotWithFadeCoroutine$d__17::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatorController::$SwitchToDefaultSpotWithFadeCoroutine$d__17::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerSpectatorController/<SwitchToDefaultSpotCoroutine>d__18
#include "GlobalNamespace/MultiplayerSpectatorController_-SwitchToDefaultSpotCoroutine-d__18.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::MultiplayerSpectatorController::$SwitchToDefaultSpotCoroutine$d__18::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatorController::$SwitchToDefaultSpotCoroutine$d__18::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::MultiplayerSpectatorController::$SwitchToDefaultSpotCoroutine$d__18::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatorController::$SwitchToDefaultSpotCoroutine$d__18::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MultiplayerSpectatorController <>4__this
GlobalNamespace::MultiplayerSpectatorController*& GlobalNamespace::MultiplayerSpectatorController::$SwitchToDefaultSpotCoroutine$d__18::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatorController::$SwitchToDefaultSpotCoroutine$d__18::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplayerSpectatorController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplayerSpectatorController/<SwitchToDefaultSpotCoroutine>d__18.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerSpectatorController::$SwitchToDefaultSpotCoroutine$d__18::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatorController::$SwitchToDefaultSpotCoroutine$d__18::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSpectatorController/<SwitchToDefaultSpotCoroutine>d__18.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerSpectatorController::$SwitchToDefaultSpotCoroutine$d__18::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatorController::$SwitchToDefaultSpotCoroutine$d__18::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSpectatorController/<SwitchToDefaultSpotCoroutine>d__18.System.IDisposable.Dispose
void GlobalNamespace::MultiplayerSpectatorController::$SwitchToDefaultSpotCoroutine$d__18::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatorController::$SwitchToDefaultSpotCoroutine$d__18::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSpectatorController/<SwitchToDefaultSpotCoroutine>d__18.MoveNext
bool GlobalNamespace::MultiplayerSpectatorController::$SwitchToDefaultSpotCoroutine$d__18::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatorController::$SwitchToDefaultSpotCoroutine$d__18::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerSpectatorController/<SwitchToDefaultSpotCoroutine>d__18.System.Collections.IEnumerator.Reset
void GlobalNamespace::MultiplayerSpectatorController::$SwitchToDefaultSpotCoroutine$d__18::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerSpectatorController::$SwitchToDefaultSpotCoroutine$d__18::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameEnergyCounter
#include "GlobalNamespace/GameEnergyCounter.hpp"
// Including type: GameEnergyCounter/InitData
#include "GlobalNamespace/GameEnergyCounter_InitData.hpp"
// Including type: SaberClashChecker
#include "GlobalNamespace/SaberClashChecker.hpp"
// Including type: BeatmapObjectManager
#include "GlobalNamespace/BeatmapObjectManager.hpp"
// Including type: PlayerHeadAndObstacleInteraction
#include "GlobalNamespace/PlayerHeadAndObstacleInteraction.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _badNoteEnergyDrain
float& GlobalNamespace::GameEnergyCounter::dyn__badNoteEnergyDrain() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::dyn__badNoteEnergyDrain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_badNoteEnergyDrain"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _missNoteEnergyDrain
float& GlobalNamespace::GameEnergyCounter::dyn__missNoteEnergyDrain() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::dyn__missNoteEnergyDrain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missNoteEnergyDrain"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _hitBombEnergyDrain
float& GlobalNamespace::GameEnergyCounter::dyn__hitBombEnergyDrain() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::dyn__hitBombEnergyDrain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hitBombEnergyDrain"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _goodNoteEnergyCharge
float& GlobalNamespace::GameEnergyCounter::dyn__goodNoteEnergyCharge() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::dyn__goodNoteEnergyCharge");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_goodNoteEnergyCharge"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _obstacleEnergyDrainPerSecond
float& GlobalNamespace::GameEnergyCounter::dyn__obstacleEnergyDrainPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::dyn__obstacleEnergyDrainPerSecond");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_obstacleEnergyDrainPerSecond"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _batteryLives
int& GlobalNamespace::GameEnergyCounter::dyn__batteryLives() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::dyn__batteryLives");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_batteryLives"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameEnergyCounter/InitData _initData
GlobalNamespace::GameEnergyCounter::InitData*& GlobalNamespace::GameEnergyCounter::dyn__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::dyn__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameEnergyCounter::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SaberClashChecker _saberClashChecker
GlobalNamespace::SaberClashChecker*& GlobalNamespace::GameEnergyCounter::dyn__saberClashChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::dyn__saberClashChecker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberClashChecker"))->offset;
  return *reinterpret_cast<GlobalNamespace::SaberClashChecker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapObjectManager _beatmapObjectManager
GlobalNamespace::BeatmapObjectManager*& GlobalNamespace::GameEnergyCounter::dyn__beatmapObjectManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::dyn__beatmapObjectManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapObjectManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerHeadAndObstacleInteraction _playerHeadAndObstacleInteraction
GlobalNamespace::PlayerHeadAndObstacleInteraction*& GlobalNamespace::GameEnergyCounter::dyn__playerHeadAndObstacleInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::dyn__playerHeadAndObstacleInteraction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerHeadAndObstacleInteraction"))->offset;
  return *reinterpret_cast<GlobalNamespace::PlayerHeadAndObstacleInteraction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action didInitEvent
System::Action*& GlobalNamespace::GameEnergyCounter::dyn_didInitEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::dyn_didInitEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didInitEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action gameEnergyDidReach0Event
System::Action*& GlobalNamespace::GameEnergyCounter::dyn_gameEnergyDidReach0Event() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::dyn_gameEnergyDidReach0Event");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameEnergyDidReach0Event"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Single> gameEnergyDidChangeEvent
System::Action_1<float>*& GlobalNamespace::GameEnergyCounter::dyn_gameEnergyDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::dyn_gameEnergyDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gameEnergyDidChangeEvent"))->offset;
  return *reinterpret_cast<System::Action_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <energy>k__BackingField
float& GlobalNamespace::GameEnergyCounter::dyn_$energy$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::dyn_$energy$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<energy>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifiers/EnergyType <energyType>k__BackingField
GlobalNamespace::GameplayModifiers::EnergyType& GlobalNamespace::GameEnergyCounter::dyn_$energyType$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::dyn_$energyType$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<energyType>k__BackingField"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameplayModifiers::EnergyType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <noFail>k__BackingField
bool& GlobalNamespace::GameEnergyCounter::dyn_$noFail$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::dyn_$noFail$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<noFail>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <instaFail>k__BackingField
bool& GlobalNamespace::GameEnergyCounter::dyn_$instaFail$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::dyn_$instaFail$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<instaFail>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <failOnSaberClash>k__BackingField
bool& GlobalNamespace::GameEnergyCounter::dyn_$failOnSaberClash$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::dyn_$failOnSaberClash$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<failOnSaberClash>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isInitialized
bool& GlobalNamespace::GameEnergyCounter::dyn__isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::dyn__isInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _didReach0Energy
bool& GlobalNamespace::GameEnergyCounter::dyn__didReach0Energy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::dyn__didReach0Energy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_didReach0Energy"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _nextFrameEnergyChange
float& GlobalNamespace::GameEnergyCounter::dyn__nextFrameEnergyChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::dyn__nextFrameEnergyChange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nextFrameEnergyChange"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameEnergyCounter.get_isInitialized
bool GlobalNamespace::GameEnergyCounter::get_isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::get_isInitialized");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GameEnergyCounter.get_energy
float GlobalNamespace::GameEnergyCounter::get_energy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::get_energy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_energy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: GameEnergyCounter.set_energy
void GlobalNamespace::GameEnergyCounter::set_energy(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::set_energy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_energy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameEnergyCounter.get_batteryEnergy
int GlobalNamespace::GameEnergyCounter::get_batteryEnergy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::get_batteryEnergy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_batteryEnergy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: GameEnergyCounter.get_batteryLives
int GlobalNamespace::GameEnergyCounter::get_batteryLives() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::get_batteryLives");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_batteryLives", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: GameEnergyCounter.get_energyType
GlobalNamespace::GameplayModifiers::EnergyType GlobalNamespace::GameEnergyCounter::get_energyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::get_energyType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_energyType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayModifiers::EnergyType, false>(this, ___internal__method);
}
// Autogenerated method: GameEnergyCounter.set_energyType
void GlobalNamespace::GameEnergyCounter::set_energyType(GlobalNamespace::GameplayModifiers::EnergyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::set_energyType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_energyType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameEnergyCounter.get_noFail
bool GlobalNamespace::GameEnergyCounter::get_noFail() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::get_noFail");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noFail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GameEnergyCounter.set_noFail
void GlobalNamespace::GameEnergyCounter::set_noFail(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::set_noFail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_noFail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameEnergyCounter.get_instaFail
bool GlobalNamespace::GameEnergyCounter::get_instaFail() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::get_instaFail");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_instaFail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GameEnergyCounter.set_instaFail
void GlobalNamespace::GameEnergyCounter::set_instaFail(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::set_instaFail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_instaFail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameEnergyCounter.get_failOnSaberClash
bool GlobalNamespace::GameEnergyCounter::get_failOnSaberClash() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::get_failOnSaberClash");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_failOnSaberClash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GameEnergyCounter.set_failOnSaberClash
void GlobalNamespace::GameEnergyCounter::set_failOnSaberClash(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::set_failOnSaberClash");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_failOnSaberClash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameEnergyCounter.add_didInitEvent
void GlobalNamespace::GameEnergyCounter::add_didInitEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::add_didInitEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didInitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameEnergyCounter.remove_didInitEvent
void GlobalNamespace::GameEnergyCounter::remove_didInitEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::remove_didInitEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didInitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameEnergyCounter.add_gameEnergyDidReach0Event
void GlobalNamespace::GameEnergyCounter::add_gameEnergyDidReach0Event(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::add_gameEnergyDidReach0Event");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_gameEnergyDidReach0Event", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameEnergyCounter.remove_gameEnergyDidReach0Event
void GlobalNamespace::GameEnergyCounter::remove_gameEnergyDidReach0Event(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::remove_gameEnergyDidReach0Event");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_gameEnergyDidReach0Event", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameEnergyCounter.add_gameEnergyDidChangeEvent
void GlobalNamespace::GameEnergyCounter::add_gameEnergyDidChangeEvent(System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::add_gameEnergyDidChangeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_gameEnergyDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameEnergyCounter.remove_gameEnergyDidChangeEvent
void GlobalNamespace::GameEnergyCounter::remove_gameEnergyDidChangeEvent(System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::remove_gameEnergyDidChangeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_gameEnergyDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameEnergyCounter.Start
void GlobalNamespace::GameEnergyCounter::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameEnergyCounter.OnDestroy
void GlobalNamespace::GameEnergyCounter::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameEnergyCounter.LateUpdate
void GlobalNamespace::GameEnergyCounter::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameEnergyCounter.HandleNoteWasCut
void GlobalNamespace::GameEnergyCounter::HandleNoteWasCut(GlobalNamespace::NoteController* noteController, ByRef<GlobalNamespace::NoteCutInfo> noteCutInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::HandleNoteWasCut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteWasCut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController), ::il2cpp_utils::ExtractType(noteCutInfo)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteController, byref(noteCutInfo));
}
// Autogenerated method: GameEnergyCounter.HandleNoteWasMissed
void GlobalNamespace::GameEnergyCounter::HandleNoteWasMissed(GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::HandleNoteWasMissed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteWasMissed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated method: GameEnergyCounter.ProcessEnergyChange
void GlobalNamespace::GameEnergyCounter::ProcessEnergyChange(float energyChange) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::ProcessEnergyChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessEnergyChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(energyChange)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, energyChange);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameEnergyCounter/InitData
#include "GlobalNamespace/GameEnergyCounter_InitData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly GameplayModifiers/EnergyType energyType
GlobalNamespace::GameplayModifiers::EnergyType& GlobalNamespace::GameEnergyCounter::InitData::dyn_energyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::InitData::dyn_energyType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "energyType"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameplayModifiers::EnergyType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean noFail
bool& GlobalNamespace::GameEnergyCounter::InitData::dyn_noFail() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::InitData::dyn_noFail");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noFail"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean instaFail
bool& GlobalNamespace::GameEnergyCounter::InitData::dyn_instaFail() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::InitData::dyn_instaFail");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "instaFail"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean failOnSaberClash
bool& GlobalNamespace::GameEnergyCounter::InitData::dyn_failOnSaberClash() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameEnergyCounter::InitData::dyn_failOnSaberClash");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "failOnSaberClash"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IGameEnergyCounter
#include "GlobalNamespace/IGameEnergyCounter.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: GameplayModifiers/EnergyType
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IGameEnergyCounter.get_isInitialized
bool GlobalNamespace::IGameEnergyCounter::get_isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameEnergyCounter::get_isInitialized");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IGameEnergyCounter.get_energy
float GlobalNamespace::IGameEnergyCounter::get_energy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameEnergyCounter::get_energy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_energy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IGameEnergyCounter.get_batteryEnergy
int GlobalNamespace::IGameEnergyCounter::get_batteryEnergy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameEnergyCounter::get_batteryEnergy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_batteryEnergy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: IGameEnergyCounter.get_batteryLives
int GlobalNamespace::IGameEnergyCounter::get_batteryLives() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameEnergyCounter::get_batteryLives");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_batteryLives", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: IGameEnergyCounter.get_energyType
GlobalNamespace::GameplayModifiers::EnergyType GlobalNamespace::IGameEnergyCounter::get_energyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameEnergyCounter::get_energyType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_energyType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayModifiers::EnergyType, false>(this, ___internal__method);
}
// Autogenerated method: IGameEnergyCounter.get_noFail
bool GlobalNamespace::IGameEnergyCounter::get_noFail() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameEnergyCounter::get_noFail");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_noFail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IGameEnergyCounter.get_instaFail
bool GlobalNamespace::IGameEnergyCounter::get_instaFail() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameEnergyCounter::get_instaFail");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_instaFail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IGameEnergyCounter.get_failOnSaberClash
bool GlobalNamespace::IGameEnergyCounter::get_failOnSaberClash() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameEnergyCounter::get_failOnSaberClash");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_failOnSaberClash", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IGameEnergyCounter.add_didInitEvent
void GlobalNamespace::IGameEnergyCounter::add_didInitEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameEnergyCounter::add_didInitEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didInitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGameEnergyCounter.remove_didInitEvent
void GlobalNamespace::IGameEnergyCounter::remove_didInitEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameEnergyCounter::remove_didInitEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didInitEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGameEnergyCounter.add_gameEnergyDidReach0Event
void GlobalNamespace::IGameEnergyCounter::add_gameEnergyDidReach0Event(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameEnergyCounter::add_gameEnergyDidReach0Event");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_gameEnergyDidReach0Event", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGameEnergyCounter.remove_gameEnergyDidReach0Event
void GlobalNamespace::IGameEnergyCounter::remove_gameEnergyDidReach0Event(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameEnergyCounter::remove_gameEnergyDidReach0Event");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_gameEnergyDidReach0Event", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGameEnergyCounter.add_gameEnergyDidChangeEvent
void GlobalNamespace::IGameEnergyCounter::add_gameEnergyDidChangeEvent(System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameEnergyCounter::add_gameEnergyDidChangeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_gameEnergyDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IGameEnergyCounter.remove_gameEnergyDidChangeEvent
void GlobalNamespace::IGameEnergyCounter::remove_gameEnergyDidChangeEvent(System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IGameEnergyCounter::remove_gameEnergyDidChangeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_gameEnergyDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MoveBackWall
#include "GlobalNamespace/MoveBackWall.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: PlayerTransforms
#include "GlobalNamespace/PlayerTransforms.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _fadeInRegion
float& GlobalNamespace::MoveBackWall::dyn__fadeInRegion() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MoveBackWall::dyn__fadeInRegion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeInRegion"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer _meshRenderer
UnityEngine::MeshRenderer*& GlobalNamespace::MoveBackWall::dyn__meshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MoveBackWall::dyn__meshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshRenderer"))->offset;
  return *reinterpret_cast<UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerTransforms _playerTransforms
GlobalNamespace::PlayerTransforms*& GlobalNamespace::MoveBackWall::dyn__playerTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MoveBackWall::dyn__playerTransforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerTransforms"))->offset;
  return *reinterpret_cast<GlobalNamespace::PlayerTransforms**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _thisZ
float& GlobalNamespace::MoveBackWall::dyn__thisZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MoveBackWall::dyn__thisZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_thisZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isVisible
bool& GlobalNamespace::MoveBackWall::dyn__isVisible() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MoveBackWall::dyn__isVisible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isVisible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _material
UnityEngine::Material*& GlobalNamespace::MoveBackWall::dyn__material() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MoveBackWall::dyn__material");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_material"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MoveBackWall.Start
void GlobalNamespace::MoveBackWall::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MoveBackWall::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MoveBackWall.Update
void GlobalNamespace::MoveBackWall::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MoveBackWall::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplierValuesRecorder
#include "GlobalNamespace/MultiplierValuesRecorder.hpp"
// Including type: IScoreController
#include "GlobalNamespace/IScoreController.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private IScoreController _scoreController
GlobalNamespace::IScoreController*& GlobalNamespace::MultiplierValuesRecorder::dyn__scoreController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplierValuesRecorder::dyn__scoreController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoreController"))->offset;
  return *reinterpret_cast<GlobalNamespace::IScoreController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AudioTimeSyncController _audioTimeSyncController
GlobalNamespace::AudioTimeSyncController*& GlobalNamespace::MultiplierValuesRecorder::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplierValuesRecorder::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<MultiplierValuesRecorder/MultiplierValue> _multiplierValues
System::Collections::Generic::List_1<GlobalNamespace::MultiplierValuesRecorder::MultiplierValue>*& GlobalNamespace::MultiplierValuesRecorder::dyn__multiplierValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplierValuesRecorder::dyn__multiplierValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplierValues"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::MultiplierValuesRecorder::MultiplierValue>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplierValuesRecorder.get_multiplierValues
System::Collections::Generic::List_1<GlobalNamespace::MultiplierValuesRecorder::MultiplierValue>* GlobalNamespace::MultiplierValuesRecorder::get_multiplierValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplierValuesRecorder::get_multiplierValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplierValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<GlobalNamespace::MultiplierValuesRecorder::MultiplierValue>*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplierValuesRecorder.Start
void GlobalNamespace::MultiplierValuesRecorder::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplierValuesRecorder::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplierValuesRecorder.OnDestroy
void GlobalNamespace::MultiplierValuesRecorder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplierValuesRecorder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplierValuesRecorder.HandleScoreControllerMultiplierDidChange
void GlobalNamespace::MultiplierValuesRecorder::HandleScoreControllerMultiplierDidChange(int multiplier, float multiplierProgress) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplierValuesRecorder::HandleScoreControllerMultiplierDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleScoreControllerMultiplierDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiplier), ::il2cpp_utils::ExtractType(multiplierProgress)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, multiplier, multiplierProgress);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplierValuesRecorder/MultiplierValue
#include "GlobalNamespace/MultiplierValuesRecorder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 multiplier
int& GlobalNamespace::MultiplierValuesRecorder::MultiplierValue::dyn_multiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplierValuesRecorder::MultiplierValue::dyn_multiplier");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "multiplier"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Single time
float& GlobalNamespace::MultiplierValuesRecorder::MultiplierValue::dyn_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplierValuesRecorder::MultiplierValue::dyn_time");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MultiplierValuesRecorder/MultiplierValue..ctor
// ABORTED elsewhere.  GlobalNamespace::MultiplierValuesRecorder::MultiplierValue::MultiplierValue(int multiplier, float time)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerHeadAndObstacleInteraction
#include "GlobalNamespace/PlayerHeadAndObstacleInteraction.hpp"
// Including type: PlayerTransforms
#include "GlobalNamespace/PlayerTransforms.hpp"
// Including type: BeatmapObjectManager
#include "GlobalNamespace/BeatmapObjectManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: ObstacleController
#include "GlobalNamespace/ObstacleController.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly PlayerTransforms _playerTransforms
GlobalNamespace::PlayerTransforms*& GlobalNamespace::PlayerHeadAndObstacleInteraction::dyn__playerTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerHeadAndObstacleInteraction::dyn__playerTransforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerTransforms"))->offset;
  return *reinterpret_cast<GlobalNamespace::PlayerTransforms**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapObjectManager _beatmapObjectManager
GlobalNamespace::BeatmapObjectManager*& GlobalNamespace::PlayerHeadAndObstacleInteraction::dyn__beatmapObjectManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerHeadAndObstacleInteraction::dyn__beatmapObjectManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapObjectManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lastFrameNumCheck
int& GlobalNamespace::PlayerHeadAndObstacleInteraction::dyn__lastFrameNumCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerHeadAndObstacleInteraction::dyn__lastFrameNumCheck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastFrameNumCheck"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<ObstacleController> _intersectingObstacles
System::Collections::Generic::List_1<GlobalNamespace::ObstacleController*>*& GlobalNamespace::PlayerHeadAndObstacleInteraction::dyn__intersectingObstacles() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerHeadAndObstacleInteraction::dyn__intersectingObstacles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_intersectingObstacles"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::ObstacleController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayerHeadAndObstacleInteraction.get_intersectingObstacles
System::Collections::Generic::List_1<GlobalNamespace::ObstacleController*>* GlobalNamespace::PlayerHeadAndObstacleInteraction::get_intersectingObstacles() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerHeadAndObstacleInteraction::get_intersectingObstacles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_intersectingObstacles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<GlobalNamespace::ObstacleController*>*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerHeadAndObstacleInteraction.GetObstaclesContainingPoint
void GlobalNamespace::PlayerHeadAndObstacleInteraction::GetObstaclesContainingPoint(UnityEngine::Vector3 worldPos, System::Collections::Generic::List_1<GlobalNamespace::ObstacleController*>* obstacleControllers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerHeadAndObstacleInteraction::GetObstaclesContainingPoint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObstaclesContainingPoint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(worldPos), ::il2cpp_utils::ExtractType(obstacleControllers)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, worldPos, obstacleControllers);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PrepareLevelCompletionResults
#include "GlobalNamespace/PrepareLevelCompletionResults.hpp"
// Including type: GameplayModifiersModelSO
#include "GlobalNamespace/GameplayModifiersModelSO.hpp"
// Including type: SaberActivityCounter
#include "GlobalNamespace/SaberActivityCounter.hpp"
// Including type: BeatmapObjectExecutionRatingsRecorder
#include "GlobalNamespace/BeatmapObjectExecutionRatingsRecorder.hpp"
// Including type: MultiplierValuesRecorder
#include "GlobalNamespace/MultiplierValuesRecorder.hpp"
// Including type: IScoreController
#include "GlobalNamespace/IScoreController.hpp"
// Including type: GameEnergyCounter
#include "GlobalNamespace/GameEnergyCounter.hpp"
// Including type: GameSongController
#include "GlobalNamespace/GameSongController.hpp"
// Including type: IReadonlyBeatmapData
#include "GlobalNamespace/IReadonlyBeatmapData.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: LevelCompletionResults/LevelEndStateType
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: LevelCompletionResults/LevelEndAction
// Already included the same include: GlobalNamespace/LevelCompletionResults.hpp
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private GameplayModifiersModelSO _gameplayModifiersModelSO
GlobalNamespace::GameplayModifiersModelSO*& GlobalNamespace::PrepareLevelCompletionResults::dyn__gameplayModifiersModelSO() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PrepareLevelCompletionResults::dyn__gameplayModifiersModelSO");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifiersModelSO"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameplayModifiersModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SaberActivityCounter _saberActivityCounter
GlobalNamespace::SaberActivityCounter*& GlobalNamespace::PrepareLevelCompletionResults::dyn__saberActivityCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PrepareLevelCompletionResults::dyn__saberActivityCounter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberActivityCounter"))->offset;
  return *reinterpret_cast<GlobalNamespace::SaberActivityCounter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapObjectExecutionRatingsRecorder _beatmapObjectExecutionRatingsRecorder
GlobalNamespace::BeatmapObjectExecutionRatingsRecorder*& GlobalNamespace::PrepareLevelCompletionResults::dyn__beatmapObjectExecutionRatingsRecorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PrepareLevelCompletionResults::dyn__beatmapObjectExecutionRatingsRecorder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectExecutionRatingsRecorder"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapObjectExecutionRatingsRecorder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly MultiplierValuesRecorder _multiplierValuesRecorder
GlobalNamespace::MultiplierValuesRecorder*& GlobalNamespace::PrepareLevelCompletionResults::dyn__multiplierValuesRecorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PrepareLevelCompletionResults::dyn__multiplierValuesRecorder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplierValuesRecorder"))->offset;
  return *reinterpret_cast<GlobalNamespace::MultiplierValuesRecorder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IScoreController _scoreController
GlobalNamespace::IScoreController*& GlobalNamespace::PrepareLevelCompletionResults::dyn__scoreController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PrepareLevelCompletionResults::dyn__scoreController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_scoreController"))->offset;
  return *reinterpret_cast<GlobalNamespace::IScoreController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameEnergyCounter _gameEnergyCounter
GlobalNamespace::GameEnergyCounter*& GlobalNamespace::PrepareLevelCompletionResults::dyn__gameEnergyCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PrepareLevelCompletionResults::dyn__gameEnergyCounter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameEnergyCounter"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameEnergyCounter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameSongController _gameSongController
GlobalNamespace::GameSongController*& GlobalNamespace::PrepareLevelCompletionResults::dyn__gameSongController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PrepareLevelCompletionResults::dyn__gameSongController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameSongController"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameSongController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IReadonlyBeatmapData _beatmapData
GlobalNamespace::IReadonlyBeatmapData*& GlobalNamespace::PrepareLevelCompletionResults::dyn__beatmapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PrepareLevelCompletionResults::dyn__beatmapData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapData"))->offset;
  return *reinterpret_cast<GlobalNamespace::IReadonlyBeatmapData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AudioTimeSyncController _audioTimeSyncController
GlobalNamespace::AudioTimeSyncController*& GlobalNamespace::PrepareLevelCompletionResults::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PrepareLevelCompletionResults::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameplayModifiers _gameplayModifiers
GlobalNamespace::GameplayModifiers*& GlobalNamespace::PrepareLevelCompletionResults::dyn__gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PrepareLevelCompletionResults::dyn__gameplayModifiers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifiers"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameplayModifiers**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PrepareLevelCompletionResults.FillLevelCompletionResults
GlobalNamespace::LevelCompletionResults* GlobalNamespace::PrepareLevelCompletionResults::FillLevelCompletionResults(GlobalNamespace::LevelCompletionResults::LevelEndStateType levelEndStateType, GlobalNamespace::LevelCompletionResults::LevelEndAction levelEndAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PrepareLevelCompletionResults::FillLevelCompletionResults");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FillLevelCompletionResults", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelEndStateType), ::il2cpp_utils::ExtractType(levelEndAction)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::LevelCompletionResults*, false>(this, ___internal__method, levelEndStateType, levelEndAction);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ShowTextOnGameEventController
#include "GlobalNamespace/ShowTextOnGameEventController.hpp"
// Including type: ShowTextOnGameEventController/EventTextBinding
#include "GlobalNamespace/ShowTextOnGameEventController_EventTextBinding.hpp"
// Including type: TextFadeTransitions
#include "GlobalNamespace/TextFadeTransitions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TextFadeTransitions _textFadeTransitions
GlobalNamespace::TextFadeTransitions*& GlobalNamespace::ShowTextOnGameEventController::dyn__textFadeTransitions() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShowTextOnGameEventController::dyn__textFadeTransitions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textFadeTransitions"))->offset;
  return *reinterpret_cast<GlobalNamespace::TextFadeTransitions**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ShowTextOnGameEventController/EventTextBinding[] _eventTextBindings
::ArrayW<GlobalNamespace::ShowTextOnGameEventController::EventTextBinding*>& GlobalNamespace::ShowTextOnGameEventController::dyn__eventTextBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShowTextOnGameEventController::dyn__eventTextBindings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eventTextBindings"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::ShowTextOnGameEventController::EventTextBinding*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ShowTextOnGameEventController.Awake
void GlobalNamespace::ShowTextOnGameEventController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShowTextOnGameEventController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ShowTextOnGameEventController.OnDestroy
void GlobalNamespace::ShowTextOnGameEventController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShowTextOnGameEventController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ShowTextOnGameEventController/EventTextBinding
#include "GlobalNamespace/ShowTextOnGameEventController_EventTextBinding.hpp"
// Including type: Signal
#include "GlobalNamespace/Signal.hpp"
// Including type: TextFadeTransitions
#include "GlobalNamespace/TextFadeTransitions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Signal _signal
GlobalNamespace::Signal*& GlobalNamespace::ShowTextOnGameEventController::EventTextBinding::dyn__signal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShowTextOnGameEventController::EventTextBinding::dyn__signal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_signal"))->offset;
  return *reinterpret_cast<GlobalNamespace::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _text
::Il2CppString*& GlobalNamespace::ShowTextOnGameEventController::EventTextBinding::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShowTextOnGameEventController::EventTextBinding::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TextFadeTransitions _textFadeTransitions
GlobalNamespace::TextFadeTransitions*& GlobalNamespace::ShowTextOnGameEventController::EventTextBinding::dyn__textFadeTransitions() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShowTextOnGameEventController::EventTextBinding::dyn__textFadeTransitions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textFadeTransitions"))->offset;
  return *reinterpret_cast<GlobalNamespace::TextFadeTransitions**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ShowTextOnGameEventController/EventTextBinding.Init
void GlobalNamespace::ShowTextOnGameEventController::EventTextBinding::Init(GlobalNamespace::TextFadeTransitions* textFadeTransitions) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShowTextOnGameEventController::EventTextBinding::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textFadeTransitions)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, textFadeTransitions);
}
// Autogenerated method: ShowTextOnGameEventController/EventTextBinding.Deinit
void GlobalNamespace::ShowTextOnGameEventController::EventTextBinding::Deinit() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShowTextOnGameEventController::EventTextBinding::Deinit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Deinit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ShowTextOnGameEventController/EventTextBinding.HandleGameEvent
void GlobalNamespace::ShowTextOnGameEventController::EventTextBinding::HandleGameEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShowTextOnGameEventController::EventTextBinding::HandleGameEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SpawnRotationProcessor
#include "GlobalNamespace/SpawnRotationProcessor.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _rotation
float& GlobalNamespace::SpawnRotationProcessor::dyn__rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationProcessor::dyn__rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Single[] _rotations
::ArrayW<float>& GlobalNamespace::SpawnRotationProcessor::dyn__rotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationProcessor::dyn__rotations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotations"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SpawnRotationProcessor.get_rotation
float GlobalNamespace::SpawnRotationProcessor::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationProcessor::get_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SpawnRotationProcessor.ProcessBeatmapEventData
bool GlobalNamespace::SpawnRotationProcessor::ProcessBeatmapEventData(GlobalNamespace::BeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationProcessor::ProcessBeatmapEventData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBeatmapEventData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventData)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, beatmapEventData);
}
// Autogenerated method: SpawnRotationProcessor.RotationForEventValue
float GlobalNamespace::SpawnRotationProcessor::RotationForEventValue(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SpawnRotationProcessor::RotationForEventValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RotationForEventValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VariableBpmProcessor
#include "GlobalNamespace/VariableBpmProcessor.hpp"
// Including type: BeatmapEventData
#include "GlobalNamespace/BeatmapEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _currentBpm
float& GlobalNamespace::VariableBpmProcessor::dyn__currentBpm() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VariableBpmProcessor::dyn__currentBpm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentBpm"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VariableBpmProcessor.get_currentBpm
float GlobalNamespace::VariableBpmProcessor::get_currentBpm() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VariableBpmProcessor::get_currentBpm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentBpm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: VariableBpmProcessor.SetBpm
void GlobalNamespace::VariableBpmProcessor::SetBpm(float newBpm) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VariableBpmProcessor::SetBpm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBpm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newBpm)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newBpm);
}
// Autogenerated method: VariableBpmProcessor.ProcessBeatmapEventData
bool GlobalNamespace::VariableBpmProcessor::ProcessBeatmapEventData(GlobalNamespace::BeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VariableBpmProcessor::ProcessBeatmapEventData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessBeatmapEventData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventData)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, beatmapEventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerSpaceConvertor
#include "GlobalNamespace/PlayerSpaceConvertor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _worldToPlayerSpaceRotation
UnityEngine::Quaternion& GlobalNamespace::PlayerSpaceConvertor::dyn__worldToPlayerSpaceRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpaceConvertor::dyn__worldToPlayerSpaceRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_worldToPlayerSpaceRotation"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayerSpaceConvertor.get_worldToPlayerSpaceRotation
UnityEngine::Quaternion GlobalNamespace::PlayerSpaceConvertor::get_worldToPlayerSpaceRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpaceConvertor::get_worldToPlayerSpaceRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_worldToPlayerSpaceRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: PlayerSpaceConvertor.Start
void GlobalNamespace::PlayerSpaceConvertor::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerSpaceConvertor::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerTransforms
#include "GlobalNamespace/PlayerTransforms.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _headTransform
UnityEngine::Transform*& GlobalNamespace::PlayerTransforms::dyn__headTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerTransforms::dyn__headTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _originTransform
UnityEngine::Transform*& GlobalNamespace::PlayerTransforms::dyn__originTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerTransforms::dyn__originTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _leftHandTransform
UnityEngine::Transform*& GlobalNamespace::PlayerTransforms::dyn__leftHandTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerTransforms::dyn__leftHandTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHandTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _rightHandTransform
UnityEngine::Transform*& GlobalNamespace::PlayerTransforms::dyn__rightHandTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerTransforms::dyn__rightHandTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHandTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideHeadPos
bool& GlobalNamespace::PlayerTransforms::dyn__overrideHeadPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerTransforms::dyn__overrideHeadPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideHeadPos"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _overriddenHeadPos
UnityEngine::Vector3& GlobalNamespace::PlayerTransforms::dyn__overriddenHeadPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerTransforms::dyn__overriddenHeadPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overriddenHeadPos"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _headWorldPos
UnityEngine::Vector3& GlobalNamespace::PlayerTransforms::dyn__headWorldPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerTransforms::dyn__headWorldPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headWorldPos"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _headWorldRot
UnityEngine::Quaternion& GlobalNamespace::PlayerTransforms::dyn__headWorldRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerTransforms::dyn__headWorldRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headWorldRot"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _headPseudoLocalPos
UnityEngine::Vector3& GlobalNamespace::PlayerTransforms::dyn__headPseudoLocalPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerTransforms::dyn__headPseudoLocalPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headPseudoLocalPos"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _headPseudoLocalRot
UnityEngine::Quaternion& GlobalNamespace::PlayerTransforms::dyn__headPseudoLocalRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerTransforms::dyn__headPseudoLocalRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headPseudoLocalRot"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _leftHandPseudoLocalPos
UnityEngine::Vector3& GlobalNamespace::PlayerTransforms::dyn__leftHandPseudoLocalPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerTransforms::dyn__leftHandPseudoLocalPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHandPseudoLocalPos"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _leftHandPseudoLocalRot
UnityEngine::Quaternion& GlobalNamespace::PlayerTransforms::dyn__leftHandPseudoLocalRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerTransforms::dyn__leftHandPseudoLocalRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHandPseudoLocalRot"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _rightHandPseudoLocalPos
UnityEngine::Vector3& GlobalNamespace::PlayerTransforms::dyn__rightHandPseudoLocalPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerTransforms::dyn__rightHandPseudoLocalPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHandPseudoLocalPos"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _rightHandPseudoLocalRot
UnityEngine::Quaternion& GlobalNamespace::PlayerTransforms::dyn__rightHandPseudoLocalRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerTransforms::dyn__rightHandPseudoLocalRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHandPseudoLocalRot"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _originParentTransform
UnityEngine::Transform*& GlobalNamespace::PlayerTransforms::dyn__originParentTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerTransforms::dyn__originParentTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_originParentTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useOriginParentTransformForPseudoLocalCalculations
bool& GlobalNamespace::PlayerTransforms::dyn__useOriginParentTransformForPseudoLocalCalculations() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerTransforms::dyn__useOriginParentTransformForPseudoLocalCalculations");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useOriginParentTransformForPseudoLocalCalculations"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayerTransforms.get_headWorldPos
UnityEngine::Vector3 GlobalNamespace::PlayerTransforms::get_headWorldPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerTransforms::get_headWorldPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headWorldPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: PlayerTransforms.get_headWorldRot
UnityEngine::Quaternion GlobalNamespace::PlayerTransforms::get_headWorldRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerTransforms::get_headWorldRot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headWorldRot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: PlayerTransforms.get_headPseudoLocalPos
UnityEngine::Vector3 GlobalNamespace::PlayerTransforms::get_headPseudoLocalPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerTransforms::get_headPseudoLocalPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headPseudoLocalPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: PlayerTransforms.get_headPseudoLocalRot
UnityEngine::Quaternion GlobalNamespace::PlayerTransforms::get_headPseudoLocalRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerTransforms::get_headPseudoLocalRot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_headPseudoLocalRot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: PlayerTransforms.get_leftHandPseudoLocalPos
UnityEngine::Vector3 GlobalNamespace::PlayerTransforms::get_leftHandPseudoLocalPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerTransforms::get_leftHandPseudoLocalPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftHandPseudoLocalPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: PlayerTransforms.get_leftHandPseudoLocalRot
UnityEngine::Quaternion GlobalNamespace::PlayerTransforms::get_leftHandPseudoLocalRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerTransforms::get_leftHandPseudoLocalRot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftHandPseudoLocalRot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: PlayerTransforms.get_rightHandPseudoLocalPos
UnityEngine::Vector3 GlobalNamespace::PlayerTransforms::get_rightHandPseudoLocalPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerTransforms::get_rightHandPseudoLocalPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightHandPseudoLocalPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: PlayerTransforms.get_rightHandPseudoLocalRot
UnityEngine::Quaternion GlobalNamespace::PlayerTransforms::get_rightHandPseudoLocalRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerTransforms::get_rightHandPseudoLocalRot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightHandPseudoLocalRot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: PlayerTransforms.Awake
void GlobalNamespace::PlayerTransforms::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerTransforms::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerTransforms.OverrideHeadPos
void GlobalNamespace::PlayerTransforms::OverrideHeadPos(UnityEngine::Vector3 pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerTransforms::OverrideHeadPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OverrideHeadPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated method: PlayerTransforms.Update
void GlobalNamespace::PlayerTransforms::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerTransforms::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerTransforms.MoveTowardsHead
float GlobalNamespace::PlayerTransforms::MoveTowardsHead(float start, float end, UnityEngine::Quaternion noteInverseWorldRotation, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerTransforms::MoveTowardsHead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveTowardsHead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(noteInverseWorldRotation), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, start, end, noteInverseWorldRotation, t);
}
// Autogenerated method: PlayerTransforms.GetZPosOffsetByHeadPosAtTime
float GlobalNamespace::PlayerTransforms::GetZPosOffsetByHeadPosAtTime(float start, float end, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerTransforms::GetZPosOffsetByHeadPosAtTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetZPosOffsetByHeadPosAtTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, start, end, t);
}
// Autogenerated method: PlayerTransforms.GetZPos
float GlobalNamespace::PlayerTransforms::GetZPos(float start, float end, float headOffsetZ, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerTransforms::GetZPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetZPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(headOffsetZ), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, start, end, headOffsetZ, t);
}
// Autogenerated method: PlayerTransforms.HeadOffsetZ
float GlobalNamespace::PlayerTransforms::HeadOffsetZ(UnityEngine::Quaternion noteInverseWorldRotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerTransforms::HeadOffsetZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HeadOffsetZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteInverseWorldRotation)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, noteInverseWorldRotation);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerVRControllersManager
#include "GlobalNamespace/PlayerVRControllersManager.hpp"
// Including type: VRController
#include "GlobalNamespace/VRController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private VRController _leftHandVRController
GlobalNamespace::VRController*& GlobalNamespace::PlayerVRControllersManager::dyn__leftHandVRController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerVRControllersManager::dyn__leftHandVRController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHandVRController"))->offset;
  return *reinterpret_cast<GlobalNamespace::VRController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRController _rightHandVRController
GlobalNamespace::VRController*& GlobalNamespace::PlayerVRControllersManager::dyn__rightHandVRController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerVRControllersManager::dyn__rightHandVRController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHandVRController"))->offset;
  return *reinterpret_cast<GlobalNamespace::VRController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayerVRControllersManager.DisableAllVRControllers
void GlobalNamespace::PlayerVRControllersManager::DisableAllVRControllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerVRControllersManager::DisableAllVRControllers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableAllVRControllers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapObjectSpawnControllerPlayerHeightSetter
#include "GlobalNamespace/BeatmapObjectSpawnControllerPlayerHeightSetter.hpp"
// Including type: BeatmapObjectSpawnController
#include "GlobalNamespace/BeatmapObjectSpawnController.hpp"
// Including type: PlayerHeightDetector
#include "GlobalNamespace/PlayerHeightDetector.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapObjectSpawnController _beatmapObjectSpawnController
GlobalNamespace::BeatmapObjectSpawnController*& GlobalNamespace::BeatmapObjectSpawnControllerPlayerHeightSetter::dyn__beatmapObjectSpawnController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnControllerPlayerHeightSetter::dyn__beatmapObjectSpawnController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectSpawnController"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapObjectSpawnController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerHeightDetector _playerHeightDetector
GlobalNamespace::PlayerHeightDetector*& GlobalNamespace::BeatmapObjectSpawnControllerPlayerHeightSetter::dyn__playerHeightDetector() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnControllerPlayerHeightSetter::dyn__playerHeightDetector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerHeightDetector"))->offset;
  return *reinterpret_cast<GlobalNamespace::PlayerHeightDetector**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BeatmapObjectSpawnControllerPlayerHeightSetter.Start
void GlobalNamespace::BeatmapObjectSpawnControllerPlayerHeightSetter::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnControllerPlayerHeightSetter::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnControllerPlayerHeightSetter.OnDestroy
void GlobalNamespace::BeatmapObjectSpawnControllerPlayerHeightSetter::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnControllerPlayerHeightSetter::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapObjectSpawnControllerPlayerHeightSetter.HandlePlayerHeightDidChange
void GlobalNamespace::BeatmapObjectSpawnControllerPlayerHeightSetter::HandlePlayerHeightDidChange(float playerHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnControllerPlayerHeightSetter::HandlePlayerHeightDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlayerHeightDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerHeight)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playerHeight);
}
// Autogenerated method: BeatmapObjectSpawnControllerPlayerHeightSetter.JumpOffsetYForPlayerHeight
float GlobalNamespace::BeatmapObjectSpawnControllerPlayerHeightSetter::JumpOffsetYForPlayerHeight(float playerHeight) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapObjectSpawnControllerPlayerHeightSetter::JumpOffsetYForPlayerHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BeatmapObjectSpawnControllerPlayerHeightSetter", "JumpOffsetYForPlayerHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerHeight)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, playerHeight);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerHeightDetector
#include "GlobalNamespace/PlayerHeightDetector.hpp"
// Including type: PlayerHeightDetector/InitData
#include "GlobalNamespace/PlayerHeightDetector_InitData.hpp"
// Including type: PlayerTransforms
#include "GlobalNamespace/PlayerTransforms.hpp"
// Including type: IBeatmapObjectCallbackController
#include "GlobalNamespace/IBeatmapObjectCallbackController.hpp"
// Including type: IAudioTimeSource
#include "GlobalNamespace/IAudioTimeSource.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: BeatmapObjectCallbackData
#include "GlobalNamespace/BeatmapObjectCallbackData.hpp"
// Including type: BeatmapObjectData
#include "GlobalNamespace/BeatmapObjectData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly PlayerTransforms _playerTransforms
GlobalNamespace::PlayerTransforms*& GlobalNamespace::PlayerHeightDetector::dyn__playerTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerHeightDetector::dyn__playerTransforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerTransforms"))->offset;
  return *reinterpret_cast<GlobalNamespace::PlayerTransforms**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IBeatmapObjectCallbackController _beatmapObjectCallbackController
GlobalNamespace::IBeatmapObjectCallbackController*& GlobalNamespace::PlayerHeightDetector::dyn__beatmapObjectCallbackController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerHeightDetector::dyn__beatmapObjectCallbackController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectCallbackController"))->offset;
  return *reinterpret_cast<GlobalNamespace::IBeatmapObjectCallbackController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IAudioTimeSource _audioTimeSyncController
GlobalNamespace::IAudioTimeSource*& GlobalNamespace::PlayerHeightDetector::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerHeightDetector::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<GlobalNamespace::IAudioTimeSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerHeightDetector/InitData _initData
GlobalNamespace::PlayerHeightDetector::InitData*& GlobalNamespace::PlayerHeightDetector::dyn__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerHeightDetector::dyn__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<GlobalNamespace::PlayerHeightDetector::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Single> playerHeightDidChangeEvent
System::Action_1<float>*& GlobalNamespace::PlayerHeightDetector::dyn_playerHeightDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerHeightDetector::dyn_playerHeightDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerHeightDidChangeEvent"))->offset;
  return *reinterpret_cast<System::Action_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapObjectCallbackData _beatmapObjectCallbackData
GlobalNamespace::BeatmapObjectCallbackData*& GlobalNamespace::PlayerHeightDetector::dyn__beatmapObjectCallbackData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerHeightDetector::dyn__beatmapObjectCallbackData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectCallbackData"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapObjectCallbackData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _noTopObstaclesStartTime
float& GlobalNamespace::PlayerHeightDetector::dyn__noTopObstaclesStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerHeightDetector::dyn__noTopObstaclesStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noTopObstaclesStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _computedPlayerHeight
float& GlobalNamespace::PlayerHeightDetector::dyn__computedPlayerHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerHeightDetector::dyn__computedPlayerHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_computedPlayerHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _changeWeight
float& GlobalNamespace::PlayerHeightDetector::dyn__changeWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerHeightDetector::dyn__changeWeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_changeWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastReportedHeight
float& GlobalNamespace::PlayerHeightDetector::dyn__lastReportedHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerHeightDetector::dyn__lastReportedHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastReportedHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PlayerHeightDetector.get_playerHeight
float GlobalNamespace::PlayerHeightDetector::get_playerHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerHeightDetector::get_playerHeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playerHeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: PlayerHeightDetector.add_playerHeightDidChangeEvent
void GlobalNamespace::PlayerHeightDetector::add_playerHeightDidChangeEvent(System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerHeightDetector::add_playerHeightDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerHeightDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerHeightDetector.remove_playerHeightDidChangeEvent
void GlobalNamespace::PlayerHeightDetector::remove_playerHeightDidChangeEvent(System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerHeightDetector::remove_playerHeightDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerHeightDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PlayerHeightDetector.Start
void GlobalNamespace::PlayerHeightDetector::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerHeightDetector::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerHeightDetector.OnDestroy
void GlobalNamespace::PlayerHeightDetector::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerHeightDetector::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerHeightDetector.LateUpdate
void GlobalNamespace::PlayerHeightDetector::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerHeightDetector::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlayerHeightDetector.BeatmapObjectSpawnCallback
void GlobalNamespace::PlayerHeightDetector::BeatmapObjectSpawnCallback(GlobalNamespace::BeatmapObjectData* beatmapObjectData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerHeightDetector::BeatmapObjectSpawnCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeatmapObjectSpawnCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapObjectData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapObjectData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayerHeightDetector/InitData
#include "GlobalNamespace/PlayerHeightDetector_InitData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Single headPosToPlayerHeightOffset
float& GlobalNamespace::PlayerHeightDetector::InitData::dyn_headPosToPlayerHeightOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerHeightDetector::InitData::dyn_headPosToPlayerHeightOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headPosToPlayerHeightOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BlocksBlade
#include "GlobalNamespace/BlocksBlade.hpp"
// Including type: BlocksBlade/Element
#include "GlobalNamespace/BlocksBlade_Element.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.MaterialPropertyBlock
#include "UnityEngine/MaterialPropertyBlock.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF3FA94
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _positionPropertyID
int GlobalNamespace::BlocksBlade::_get__positionPropertyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlocksBlade::_get__positionPropertyID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BlocksBlade", "_positionPropertyID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _positionPropertyID
void GlobalNamespace::BlocksBlade::_set__positionPropertyID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlocksBlade::_set__positionPropertyID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BlocksBlade", "_positionPropertyID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF3FAA4
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _sizePropertyID
int GlobalNamespace::BlocksBlade::_get__sizePropertyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlocksBlade::_get__sizePropertyID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BlocksBlade", "_sizePropertyID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _sizePropertyID
void GlobalNamespace::BlocksBlade::_set__sizePropertyID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlocksBlade::_set__sizePropertyID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BlocksBlade", "_sizePropertyID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF3FAB4
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _colorPropertyID
int GlobalNamespace::BlocksBlade::_get__colorPropertyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlocksBlade::_get__colorPropertyID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BlocksBlade", "_colorPropertyID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _colorPropertyID
void GlobalNamespace::BlocksBlade::_set__colorPropertyID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlocksBlade::_set__colorPropertyID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BlocksBlade", "_colorPropertyID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xF3FAC4
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _zClipPropertyID
int GlobalNamespace::BlocksBlade::_get__zClipPropertyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlocksBlade::_get__zClipPropertyID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BlocksBlade", "_zClipPropertyID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _zClipPropertyID
void GlobalNamespace::BlocksBlade::_set__zClipPropertyID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlocksBlade::_set__zClipPropertyID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BlocksBlade", "_zClipPropertyID", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh _elementMesh
UnityEngine::Mesh*& GlobalNamespace::BlocksBlade::dyn__elementMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlocksBlade::dyn__elementMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elementMesh"))->offset;
  return *reinterpret_cast<UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _material
UnityEngine::Material*& GlobalNamespace::BlocksBlade::dyn__material() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlocksBlade::dyn__material");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_material"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _numberOfElements
int& GlobalNamespace::BlocksBlade::dyn__numberOfElements() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlocksBlade::dyn__numberOfElements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numberOfElements"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _radius
float& GlobalNamespace::BlocksBlade::dyn__radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlocksBlade::dyn__radius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_radius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _length
float& GlobalNamespace::BlocksBlade::dyn__length() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlocksBlade::dyn__length");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_length"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minVelocity
float& GlobalNamespace::BlocksBlade::dyn__minVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlocksBlade::dyn__minVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minVelocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxVelocity
float& GlobalNamespace::BlocksBlade::dyn__maxVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlocksBlade::dyn__maxVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxVelocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _elementWidth
float& GlobalNamespace::BlocksBlade::dyn__elementWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlocksBlade::dyn__elementWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elementWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minElementLength
float& GlobalNamespace::BlocksBlade::dyn__minElementLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlocksBlade::dyn__minElementLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minElementLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxElementLength
float& GlobalNamespace::BlocksBlade::dyn__maxElementLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlocksBlade::dyn__maxElementLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxElementLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color <color>k__BackingField
UnityEngine::Color& GlobalNamespace::BlocksBlade::dyn_$color$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlocksBlade::dyn_$color$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<color>k__BackingField"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<BlocksBlade/Element> _elements
System::Collections::Generic::List_1<GlobalNamespace::BlocksBlade::Element*>*& GlobalNamespace::BlocksBlade::dyn__elements() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlocksBlade::dyn__elements");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elements"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::BlocksBlade::Element*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector4[] _positions
::ArrayW<UnityEngine::Vector4>& GlobalNamespace::BlocksBlade::dyn__positions() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlocksBlade::dyn__positions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positions"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::Vector4>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector4[] _sizes
::ArrayW<UnityEngine::Vector4>& GlobalNamespace::BlocksBlade::dyn__sizes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlocksBlade::dyn__sizes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sizes"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::Vector4>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector4[] _colors
::ArrayW<UnityEngine::Vector4>& GlobalNamespace::BlocksBlade::dyn__colors() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlocksBlade::dyn__colors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colors"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::Vector4>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Matrix4x4[] _matrices
::ArrayW<UnityEngine::Matrix4x4>& GlobalNamespace::BlocksBlade::dyn__matrices() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlocksBlade::dyn__matrices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_matrices"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::Matrix4x4>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MaterialPropertyBlock _materialPropertyBlock
UnityEngine::MaterialPropertyBlock*& GlobalNamespace::BlocksBlade::dyn__materialPropertyBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlocksBlade::dyn__materialPropertyBlock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_materialPropertyBlock"))->offset;
  return *reinterpret_cast<UnityEngine::MaterialPropertyBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _layer
int& GlobalNamespace::BlocksBlade::dyn__layer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlocksBlade::dyn__layer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_layer"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BlocksBlade.get_color
UnityEngine::Color GlobalNamespace::BlocksBlade::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlocksBlade::get_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: BlocksBlade.set_color
void GlobalNamespace::BlocksBlade::set_color(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlocksBlade::set_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BlocksBlade.Start
void GlobalNamespace::BlocksBlade::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlocksBlade::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BlocksBlade.Update
void GlobalNamespace::BlocksBlade::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlocksBlade::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BlocksBlade.SetUpElement
void GlobalNamespace::BlocksBlade::SetUpElement(GlobalNamespace::BlocksBlade::Element* element, float velocity, UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlocksBlade::SetUpElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetUpElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(element), ::il2cpp_utils::ExtractType(velocity), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, element, velocity, color);
}
// Autogenerated method: BlocksBlade.RandomPointOnCircle
UnityEngine::Vector2 GlobalNamespace::BlocksBlade::RandomPointOnCircle(float radius) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlocksBlade::RandomPointOnCircle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RandomPointOnCircle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(radius)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method, radius);
}
// Autogenerated method: BlocksBlade..cctor
void GlobalNamespace::BlocksBlade::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlocksBlade::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "BlocksBlade", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BlocksBlade/Element
#include "GlobalNamespace/BlocksBlade_Element.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 idx
int& GlobalNamespace::BlocksBlade::Element::dyn_idx() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlocksBlade::Element::dyn_idx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "idx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single velocity
float& GlobalNamespace::BlocksBlade::Element::dyn_velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlocksBlade::Element::dyn_velocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "velocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BoxCuttableBySaber
#include "GlobalNamespace/BoxCuttableBySaber.hpp"
// Including type: UnityEngine.BoxCollider
#include "UnityEngine/BoxCollider.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: Saber
#include "GlobalNamespace/Saber.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.BoxCollider _collider
UnityEngine::BoxCollider*& GlobalNamespace::BoxCuttableBySaber::dyn__collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BoxCuttableBySaber::dyn__collider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_collider"))->offset;
  return *reinterpret_cast<UnityEngine::BoxCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _canBeCut
bool& GlobalNamespace::BoxCuttableBySaber::dyn__canBeCut() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BoxCuttableBySaber::dyn__canBeCut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canBeCut"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _radius
float& GlobalNamespace::BoxCuttableBySaber::dyn__radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BoxCuttableBySaber::dyn__radius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_radius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BoxCuttableBySaber.get_colliderSize
UnityEngine::Vector3 GlobalNamespace::BoxCuttableBySaber::get_colliderSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BoxCuttableBySaber::get_colliderSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_colliderSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: BoxCuttableBySaber.set_colliderSize
void GlobalNamespace::BoxCuttableBySaber::set_colliderSize(UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BoxCuttableBySaber::set_colliderSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_colliderSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BoxCuttableBySaber.Awake
void GlobalNamespace::BoxCuttableBySaber::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BoxCuttableBySaber::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoxCuttableBySaber.SetColliderCenterAndSize
void GlobalNamespace::BoxCuttableBySaber::SetColliderCenterAndSize(UnityEngine::Vector3 center, UnityEngine::Vector3 size) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BoxCuttableBySaber::SetColliderCenterAndSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColliderCenterAndSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(center), ::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, center, size);
}
// Autogenerated method: BoxCuttableBySaber.RefreshRadius
void GlobalNamespace::BoxCuttableBySaber::RefreshRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BoxCuttableBySaber::RefreshRadius");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshRadius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BoxCuttableBySaber.get_radius
float GlobalNamespace::BoxCuttableBySaber::get_radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BoxCuttableBySaber::get_radius");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BoxCuttableBySaber.get_canBeCut
bool GlobalNamespace::BoxCuttableBySaber::get_canBeCut() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BoxCuttableBySaber::get_canBeCut");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canBeCut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BoxCuttableBySaber.set_canBeCut
void GlobalNamespace::BoxCuttableBySaber::set_canBeCut(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BoxCuttableBySaber::set_canBeCut");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_canBeCut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BoxCuttableBySaber.Cut
void GlobalNamespace::BoxCuttableBySaber::Cut(GlobalNamespace::Saber* saber, UnityEngine::Vector3 cutPoint, UnityEngine::Quaternion orientation, UnityEngine::Vector3 cutDirVec) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BoxCuttableBySaber::Cut");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saber), ::il2cpp_utils::ExtractType(cutPoint), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(cutDirVec)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, saber, cutPoint, orientation, cutDirVec);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CuttableBySaber
#include "GlobalNamespace/CuttableBySaber.hpp"
// Including type: CuttableBySaber/WasCutBySaberDelegate
#include "GlobalNamespace/CuttableBySaber_WasCutBySaberDelegate.hpp"
// Including type: Saber
#include "GlobalNamespace/Saber.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private CuttableBySaber/WasCutBySaberDelegate wasCutBySaberEvent
GlobalNamespace::CuttableBySaber::WasCutBySaberDelegate*& GlobalNamespace::CuttableBySaber::dyn_wasCutBySaberEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CuttableBySaber::dyn_wasCutBySaberEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wasCutBySaberEvent"))->offset;
  return *reinterpret_cast<GlobalNamespace::CuttableBySaber::WasCutBySaberDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CuttableBySaber.get_canBeCut
bool GlobalNamespace::CuttableBySaber::get_canBeCut() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CuttableBySaber::get_canBeCut");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canBeCut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CuttableBySaber.set_canBeCut
void GlobalNamespace::CuttableBySaber::set_canBeCut(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CuttableBySaber::set_canBeCut");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_canBeCut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CuttableBySaber.get_radius
float GlobalNamespace::CuttableBySaber::get_radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CuttableBySaber::get_radius");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: CuttableBySaber.add_wasCutBySaberEvent
void GlobalNamespace::CuttableBySaber::add_wasCutBySaberEvent(GlobalNamespace::CuttableBySaber::WasCutBySaberDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CuttableBySaber::add_wasCutBySaberEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_wasCutBySaberEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CuttableBySaber.remove_wasCutBySaberEvent
void GlobalNamespace::CuttableBySaber::remove_wasCutBySaberEvent(GlobalNamespace::CuttableBySaber::WasCutBySaberDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CuttableBySaber::remove_wasCutBySaberEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_wasCutBySaberEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CuttableBySaber.CallWasCutBySaberEvent
void GlobalNamespace::CuttableBySaber::CallWasCutBySaberEvent(GlobalNamespace::Saber* saber, UnityEngine::Vector3 cutPoint, UnityEngine::Quaternion orientation, UnityEngine::Vector3 cutDirVec) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CuttableBySaber::CallWasCutBySaberEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CallWasCutBySaberEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saber), ::il2cpp_utils::ExtractType(cutPoint), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(cutDirVec)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, saber, cutPoint, orientation, cutDirVec);
}
// Autogenerated method: CuttableBySaber.Cut
void GlobalNamespace::CuttableBySaber::Cut(GlobalNamespace::Saber* saber, UnityEngine::Vector3 cutPoint, UnityEngine::Quaternion orientation, UnityEngine::Vector3 cutDirVec) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CuttableBySaber::Cut");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saber), ::il2cpp_utils::ExtractType(cutPoint), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(cutDirVec)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, saber, cutPoint, orientation, cutDirVec);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CuttableBySaber/WasCutBySaberDelegate
#include "GlobalNamespace/CuttableBySaber_WasCutBySaberDelegate.hpp"
// Including type: Saber
#include "GlobalNamespace/Saber.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CuttableBySaber/WasCutBySaberDelegate.Invoke
void GlobalNamespace::CuttableBySaber::WasCutBySaberDelegate::Invoke(GlobalNamespace::Saber* saber, UnityEngine::Vector3 cutPoint, UnityEngine::Quaternion orientation, UnityEngine::Vector3 cutDirVec) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CuttableBySaber::WasCutBySaberDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saber), ::il2cpp_utils::ExtractType(cutPoint), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(cutDirVec)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, saber, cutPoint, orientation, cutDirVec);
}
// Autogenerated method: CuttableBySaber/WasCutBySaberDelegate.BeginInvoke
System::IAsyncResult* GlobalNamespace::CuttableBySaber::WasCutBySaberDelegate::BeginInvoke(GlobalNamespace::Saber* saber, UnityEngine::Vector3 cutPoint, UnityEngine::Quaternion orientation, UnityEngine::Vector3 cutDirVec, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CuttableBySaber::WasCutBySaberDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saber), ::il2cpp_utils::ExtractType(cutPoint), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(cutDirVec), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, saber, cutPoint, orientation, cutDirVec, callback, object);
}
// Autogenerated method: CuttableBySaber/WasCutBySaberDelegate.EndInvoke
void GlobalNamespace::CuttableBySaber::WasCutBySaberDelegate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CuttableBySaber::WasCutBySaberDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CuttingManager
#include "GlobalNamespace/CuttingManager.hpp"
// Including type: SaberManager
#include "GlobalNamespace/SaberManager.hpp"
// Including type: NoteCutter
#include "GlobalNamespace/NoteCutter.hpp"
// Including type: Saber
#include "GlobalNamespace/Saber.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private SaberManager _saberManager
GlobalNamespace::SaberManager*& GlobalNamespace::CuttingManager::dyn__saberManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CuttingManager::dyn__saberManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::SaberManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly NoteCutter _noteCutter
GlobalNamespace::NoteCutter*& GlobalNamespace::CuttingManager::dyn__noteCutter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CuttingManager::dyn__noteCutter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteCutter"))->offset;
  return *reinterpret_cast<GlobalNamespace::NoteCutter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CuttingManager.OnEnable
void GlobalNamespace::CuttingManager::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CuttingManager::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CuttingManager.OnDisable
void GlobalNamespace::CuttingManager::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CuttingManager::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CuttingManager.HandleSaberManagerDidUpdateSaberPositions
void GlobalNamespace::CuttingManager::HandleSaberManagerDidUpdateSaberPositions(GlobalNamespace::Saber* leftSaber, GlobalNamespace::Saber* rightSaber) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CuttingManager::HandleSaberManagerDidUpdateSaberPositions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSaberManagerDidUpdateSaberPositions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leftSaber), ::il2cpp_utils::ExtractType(rightSaber)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, leftSaber, rightSaber);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MovementHistoryRecorder
#include "GlobalNamespace/MovementHistoryRecorder.hpp"
// Including type: AveragingValueRecorder
#include "GlobalNamespace/AveragingValueRecorder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private AveragingValueRecorder _averagingValueRecorer
GlobalNamespace::AveragingValueRecorder*& GlobalNamespace::MovementHistoryRecorder::dyn__averagingValueRecorer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MovementHistoryRecorder::dyn__averagingValueRecorer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_averagingValueRecorer"))->offset;
  return *reinterpret_cast<GlobalNamespace::AveragingValueRecorder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _increaseSpeed
float& GlobalNamespace::MovementHistoryRecorder::dyn__increaseSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MovementHistoryRecorder::dyn__increaseSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_increaseSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _decreaseSpeed
float& GlobalNamespace::MovementHistoryRecorder::dyn__decreaseSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MovementHistoryRecorder::dyn__decreaseSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_decreaseSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _accum
float& GlobalNamespace::MovementHistoryRecorder::dyn__accum() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MovementHistoryRecorder::dyn__accum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_accum"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MovementHistoryRecorder.get_averagingValueRecorer
GlobalNamespace::AveragingValueRecorder* GlobalNamespace::MovementHistoryRecorder::get_averagingValueRecorer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MovementHistoryRecorder::get_averagingValueRecorer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_averagingValueRecorer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::AveragingValueRecorder*, false>(this, ___internal__method);
}
// Autogenerated method: MovementHistoryRecorder.AddMovement
void GlobalNamespace::MovementHistoryRecorder::AddMovement(float distance) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MovementHistoryRecorder::AddMovement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddMovement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(distance)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, distance);
}
// Autogenerated method: MovementHistoryRecorder.ManualUpdate
void GlobalNamespace::MovementHistoryRecorder::ManualUpdate(float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MovementHistoryRecorder::ManualUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ManualUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deltaTime)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, deltaTime);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteCutter
#include "GlobalNamespace/NoteCutter.hpp"
// Including type: NoteCutter/CuttableBySaberSortParams
#include "GlobalNamespace/NoteCutter_CuttableBySaberSortParams.hpp"
// Including type: NoteCutter/CuttableBySaberSortParamsComparer
#include "GlobalNamespace/NoteCutter_CuttableBySaberSortParamsComparer.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: Saber
#include "GlobalNamespace/Saber.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxNumberOfColliders
int GlobalNamespace::NoteCutter::_get_kMaxNumberOfColliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutter::_get_kMaxNumberOfColliders");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "NoteCutter", "kMaxNumberOfColliders"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxNumberOfColliders
void GlobalNamespace::NoteCutter::_set_kMaxNumberOfColliders(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutter::_set_kMaxNumberOfColliders");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteCutter", "kMaxNumberOfColliders", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Collider[] _colliders
::ArrayW<UnityEngine::Collider*>& GlobalNamespace::NoteCutter::dyn__colliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutter::dyn__colliders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colliders"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::Collider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly NoteCutter/CuttableBySaberSortParams[] _cuttableBySaberSortParams
::ArrayW<GlobalNamespace::NoteCutter::CuttableBySaberSortParams*>& GlobalNamespace::NoteCutter::dyn__cuttableBySaberSortParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutter::dyn__cuttableBySaberSortParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cuttableBySaberSortParams"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::NoteCutter::CuttableBySaberSortParams*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly NoteCutter/CuttableBySaberSortParamsComparer _comparer
GlobalNamespace::NoteCutter::CuttableBySaberSortParamsComparer*& GlobalNamespace::NoteCutter::dyn__comparer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutter::dyn__comparer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_comparer"))->offset;
  return *reinterpret_cast<GlobalNamespace::NoteCutter::CuttableBySaberSortParamsComparer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NoteCutter.Cut
void GlobalNamespace::NoteCutter::Cut(GlobalNamespace::Saber* saber) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutter::Cut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saber)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, saber);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteCutter/CuttableBySaberSortParams
#include "GlobalNamespace/NoteCutter_CuttableBySaberSortParams.hpp"
// Including type: CuttableBySaber
#include "GlobalNamespace/CuttableBySaber.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public CuttableBySaber cuttableBySaber
GlobalNamespace::CuttableBySaber*& GlobalNamespace::NoteCutter::CuttableBySaberSortParams::dyn_cuttableBySaber() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutter::CuttableBySaberSortParams::dyn_cuttableBySaber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cuttableBySaber"))->offset;
  return *reinterpret_cast<GlobalNamespace::CuttableBySaber**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single distance
float& GlobalNamespace::NoteCutter::CuttableBySaberSortParams::dyn_distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutter::CuttableBySaberSortParams::dyn_distance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "distance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 pos
UnityEngine::Vector3& GlobalNamespace::NoteCutter::CuttableBySaberSortParams::dyn_pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutter::CuttableBySaberSortParams::dyn_pos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pos"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NoteCutter/CuttableBySaberSortParamsComparer
#include "GlobalNamespace/NoteCutter_CuttableBySaberSortParamsComparer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NoteCutter/CuttableBySaberSortParamsComparer.Compare
int GlobalNamespace::NoteCutter::CuttableBySaberSortParamsComparer::Compare(::Il2CppObject* p0, ::Il2CppObject* p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteCutter::CuttableBySaberSortParamsComparer::Compare");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Compare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, p0, p1);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Saber
#include "GlobalNamespace/Saber.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: SaberTypeObject
#include "GlobalNamespace/SaberTypeObject.hpp"
// Including type: SaberMovementData
#include "GlobalNamespace/SaberMovementData.hpp"
// Including type: SaberType
#include "GlobalNamespace/SaberType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _saberBladeTopTransform
UnityEngine::Transform*& GlobalNamespace::Saber::dyn__saberBladeTopTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Saber::dyn__saberBladeTopTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberBladeTopTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _saberBladeBottomTransform
UnityEngine::Transform*& GlobalNamespace::Saber::dyn__saberBladeBottomTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Saber::dyn__saberBladeBottomTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberBladeBottomTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _handleTransform
UnityEngine::Transform*& GlobalNamespace::Saber::dyn__handleTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Saber::dyn__handleTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handleTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SaberTypeObject _saberType
GlobalNamespace::SaberTypeObject*& GlobalNamespace::Saber::dyn__saberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Saber::dyn__saberType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberType"))->offset;
  return *reinterpret_cast<GlobalNamespace::SaberTypeObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <disableCutting>k__BackingField
bool& GlobalNamespace::Saber::dyn_$disableCutting$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Saber::dyn_$disableCutting$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<disableCutting>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SaberMovementData _movementData
GlobalNamespace::SaberMovementData*& GlobalNamespace::Saber::dyn__movementData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Saber::dyn__movementData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_movementData"))->offset;
  return *reinterpret_cast<GlobalNamespace::SaberMovementData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _saberBladeTopPos
UnityEngine::Vector3& GlobalNamespace::Saber::dyn__saberBladeTopPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Saber::dyn__saberBladeTopPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberBladeTopPos"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _saberBladeBottomPos
UnityEngine::Vector3& GlobalNamespace::Saber::dyn__saberBladeBottomPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Saber::dyn__saberBladeBottomPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberBladeBottomPos"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _handlePos
UnityEngine::Vector3& GlobalNamespace::Saber::dyn__handlePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Saber::dyn__handlePos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handlePos"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _handleRot
UnityEngine::Quaternion& GlobalNamespace::Saber::dyn__handleRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Saber::dyn__handleRot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handleRot"))->offset;
  return *reinterpret_cast<UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Saber.get_saberType
GlobalNamespace::SaberType GlobalNamespace::Saber::get_saberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Saber::get_saberType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_saberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SaberType, false>(this, ___internal__method);
}
// Autogenerated method: Saber.get_saberBladeTopPos
UnityEngine::Vector3 GlobalNamespace::Saber::get_saberBladeTopPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Saber::get_saberBladeTopPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_saberBladeTopPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Saber.get_saberBladeBottomPos
UnityEngine::Vector3 GlobalNamespace::Saber::get_saberBladeBottomPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Saber::get_saberBladeBottomPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_saberBladeBottomPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Saber.get_handlePos
UnityEngine::Vector3 GlobalNamespace::Saber::get_handlePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Saber::get_handlePos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_handlePos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: Saber.get_handleRot
UnityEngine::Quaternion GlobalNamespace::Saber::get_handleRot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Saber::get_handleRot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_handleRot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: Saber.get_bladeSpeed
float GlobalNamespace::Saber::get_bladeSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Saber::get_bladeSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bladeSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Saber.get_movementData
GlobalNamespace::SaberMovementData* GlobalNamespace::Saber::get_movementData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Saber::get_movementData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_movementData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SaberMovementData*, false>(this, ___internal__method);
}
// Autogenerated method: Saber.get_disableCutting
bool GlobalNamespace::Saber::get_disableCutting() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Saber::get_disableCutting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_disableCutting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Saber.set_disableCutting
void GlobalNamespace::Saber::set_disableCutting(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Saber::set_disableCutting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_disableCutting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Saber.ManualUpdate
void GlobalNamespace::Saber::ManualUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Saber::ManualUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ManualUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Saber.OverridePositionAndRotation
void GlobalNamespace::Saber::OverridePositionAndRotation(UnityEngine::Vector3 pos, UnityEngine::Quaternion rot) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::Saber::OverridePositionAndRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OverridePositionAndRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(rot)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pos, rot);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SaberActivityCounter
#include "GlobalNamespace/SaberActivityCounter.hpp"
// Including type: SaberManager
#include "GlobalNamespace/SaberManager.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Saber
#include "GlobalNamespace/Saber.hpp"
// Including type: MovementHistoryRecorder
#include "GlobalNamespace/MovementHistoryRecorder.hpp"
// Including type: AveragingValueRecorder
#include "GlobalNamespace/AveragingValueRecorder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _averageWindowDuration
float& GlobalNamespace::SaberActivityCounter::dyn__averageWindowDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberActivityCounter::dyn__averageWindowDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_averageWindowDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _valuesPerSecond
float& GlobalNamespace::SaberActivityCounter::dyn__valuesPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberActivityCounter::dyn__valuesPerSecond");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_valuesPerSecond"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _increaseSpeed
float& GlobalNamespace::SaberActivityCounter::dyn__increaseSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberActivityCounter::dyn__increaseSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_increaseSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _deceraseSpeed
float& GlobalNamespace::SaberActivityCounter::dyn__deceraseSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberActivityCounter::dyn__deceraseSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_deceraseSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _movementSensitivityThreshold
float& GlobalNamespace::SaberActivityCounter::dyn__movementSensitivityThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberActivityCounter::dyn__movementSensitivityThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_movementSensitivityThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SaberManager _saberManager
GlobalNamespace::SaberManager*& GlobalNamespace::SaberActivityCounter::dyn__saberManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberActivityCounter::dyn__saberManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::SaberManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Single> totalDistanceDidChangeEvent
System::Action_1<float>*& GlobalNamespace::SaberActivityCounter::dyn_totalDistanceDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberActivityCounter::dyn_totalDistanceDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "totalDistanceDidChangeEvent"))->offset;
  return *reinterpret_cast<System::Action_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Saber _leftSaber
GlobalNamespace::Saber*& GlobalNamespace::SaberActivityCounter::dyn__leftSaber() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberActivityCounter::dyn__leftSaber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftSaber"))->offset;
  return *reinterpret_cast<GlobalNamespace::Saber**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Saber _rightSaber
GlobalNamespace::Saber*& GlobalNamespace::SaberActivityCounter::dyn__rightSaber() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberActivityCounter::dyn__rightSaber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightSaber"))->offset;
  return *reinterpret_cast<GlobalNamespace::Saber**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _prevLeftSaberTipPos
UnityEngine::Vector3& GlobalNamespace::SaberActivityCounter::dyn__prevLeftSaberTipPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberActivityCounter::dyn__prevLeftSaberTipPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevLeftSaberTipPos"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _prevRightSaberTipPos
UnityEngine::Vector3& GlobalNamespace::SaberActivityCounter::dyn__prevRightSaberTipPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberActivityCounter::dyn__prevRightSaberTipPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevRightSaberTipPos"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _prevLeftHandPos
UnityEngine::Vector3& GlobalNamespace::SaberActivityCounter::dyn__prevLeftHandPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberActivityCounter::dyn__prevLeftHandPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevLeftHandPos"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _prevRightHandPos
UnityEngine::Vector3& GlobalNamespace::SaberActivityCounter::dyn__prevRightHandPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberActivityCounter::dyn__prevRightHandPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevRightHandPos"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasPrevPos
bool& GlobalNamespace::SaberActivityCounter::dyn__hasPrevPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberActivityCounter::dyn__hasPrevPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasPrevPos"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _leftSaberMovementDistance
float& GlobalNamespace::SaberActivityCounter::dyn__leftSaberMovementDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberActivityCounter::dyn__leftSaberMovementDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftSaberMovementDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rightSaberMovementDistance
float& GlobalNamespace::SaberActivityCounter::dyn__rightSaberMovementDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberActivityCounter::dyn__rightSaberMovementDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightSaberMovementDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _leftHandMovementDistance
float& GlobalNamespace::SaberActivityCounter::dyn__leftHandMovementDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberActivityCounter::dyn__leftHandMovementDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHandMovementDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rightHandMovementDistance
float& GlobalNamespace::SaberActivityCounter::dyn__rightHandMovementDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberActivityCounter::dyn__rightHandMovementDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHandMovementDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MovementHistoryRecorder _saberMovementHistoryRecorder
GlobalNamespace::MovementHistoryRecorder*& GlobalNamespace::SaberActivityCounter::dyn__saberMovementHistoryRecorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberActivityCounter::dyn__saberMovementHistoryRecorder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberMovementHistoryRecorder"))->offset;
  return *reinterpret_cast<GlobalNamespace::MovementHistoryRecorder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MovementHistoryRecorder _handMovementHistoryRecorder
GlobalNamespace::MovementHistoryRecorder*& GlobalNamespace::SaberActivityCounter::dyn__handMovementHistoryRecorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberActivityCounter::dyn__handMovementHistoryRecorder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_handMovementHistoryRecorder"))->offset;
  return *reinterpret_cast<GlobalNamespace::MovementHistoryRecorder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SaberActivityCounter.get_leftSaberMovementDistance
float GlobalNamespace::SaberActivityCounter::get_leftSaberMovementDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberActivityCounter::get_leftSaberMovementDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftSaberMovementDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SaberActivityCounter.get_rightSaberMovementDistance
float GlobalNamespace::SaberActivityCounter::get_rightSaberMovementDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberActivityCounter::get_rightSaberMovementDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightSaberMovementDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SaberActivityCounter.get_leftHandMovementDistance
float GlobalNamespace::SaberActivityCounter::get_leftHandMovementDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberActivityCounter::get_leftHandMovementDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftHandMovementDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SaberActivityCounter.get_rightHandMovementDistance
float GlobalNamespace::SaberActivityCounter::get_rightHandMovementDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberActivityCounter::get_rightHandMovementDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightHandMovementDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SaberActivityCounter.get_saberMovementAveragingValueRecorder
GlobalNamespace::AveragingValueRecorder* GlobalNamespace::SaberActivityCounter::get_saberMovementAveragingValueRecorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberActivityCounter::get_saberMovementAveragingValueRecorder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_saberMovementAveragingValueRecorder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::AveragingValueRecorder*, false>(this, ___internal__method);
}
// Autogenerated method: SaberActivityCounter.get_handMovementAveragingValueRecorder
GlobalNamespace::AveragingValueRecorder* GlobalNamespace::SaberActivityCounter::get_handMovementAveragingValueRecorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberActivityCounter::get_handMovementAveragingValueRecorder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_handMovementAveragingValueRecorder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::AveragingValueRecorder*, false>(this, ___internal__method);
}
// Autogenerated method: SaberActivityCounter.add_totalDistanceDidChangeEvent
void GlobalNamespace::SaberActivityCounter::add_totalDistanceDidChangeEvent(System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberActivityCounter::add_totalDistanceDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_totalDistanceDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SaberActivityCounter.remove_totalDistanceDidChangeEvent
void GlobalNamespace::SaberActivityCounter::remove_totalDistanceDidChangeEvent(System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberActivityCounter::remove_totalDistanceDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_totalDistanceDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SaberActivityCounter.Awake
void GlobalNamespace::SaberActivityCounter::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberActivityCounter::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberActivityCounter.Start
void GlobalNamespace::SaberActivityCounter::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberActivityCounter::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberActivityCounter.Update
void GlobalNamespace::SaberActivityCounter::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberActivityCounter::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SaberClashChecker
#include "GlobalNamespace/SaberClashChecker.hpp"
// Including type: Saber
#include "GlobalNamespace/Saber.hpp"
// Including type: SaberManager
#include "GlobalNamespace/SaberManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kMinDistanceToClash
float GlobalNamespace::SaberClashChecker::_get_kMinDistanceToClash() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberClashChecker::_get_kMinDistanceToClash");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberClashChecker", "kMinDistanceToClash"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kMinDistanceToClash
void GlobalNamespace::SaberClashChecker::_set_kMinDistanceToClash(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberClashChecker::_set_kMinDistanceToClash");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberClashChecker", "kMinDistanceToClash", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kIgnoredTime
float GlobalNamespace::SaberClashChecker::_get_kIgnoredTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberClashChecker::_get_kIgnoredTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberClashChecker", "kIgnoredTime"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kIgnoredTime
void GlobalNamespace::SaberClashChecker::_set_kIgnoredTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberClashChecker::_set_kIgnoredTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberClashChecker", "kIgnoredTime", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _sabersAreClashing
bool& GlobalNamespace::SaberClashChecker::dyn__sabersAreClashing() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberClashChecker::dyn__sabersAreClashing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sabersAreClashing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _clashingPoint
UnityEngine::Vector3& GlobalNamespace::SaberClashChecker::dyn__clashingPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberClashChecker::dyn__clashingPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clashingPoint"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Saber _leftSaber
GlobalNamespace::Saber*& GlobalNamespace::SaberClashChecker::dyn__leftSaber() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberClashChecker::dyn__leftSaber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftSaber"))->offset;
  return *reinterpret_cast<GlobalNamespace::Saber**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Saber _rightSaber
GlobalNamespace::Saber*& GlobalNamespace::SaberClashChecker::dyn__rightSaber() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberClashChecker::dyn__rightSaber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightSaber"))->offset;
  return *reinterpret_cast<GlobalNamespace::Saber**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _prevGetFrameNum
int& GlobalNamespace::SaberClashChecker::dyn__prevGetFrameNum() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberClashChecker::dyn__prevGetFrameNum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevGetFrameNum"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SaberClashChecker.Init
void GlobalNamespace::SaberClashChecker::Init(GlobalNamespace::SaberManager* saberManager) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberClashChecker::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saberManager)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, saberManager);
}
// Autogenerated method: SaberClashChecker.AreSabersClashing
bool GlobalNamespace::SaberClashChecker::AreSabersClashing(ByRef<UnityEngine::Vector3> clashingPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberClashChecker::AreSabersClashing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AreSabersClashing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, byref(clashingPoint));
}
// Autogenerated method: SaberClashChecker.SegmentToSegmentDist
float GlobalNamespace::SaberClashChecker::SegmentToSegmentDist(UnityEngine::Vector3 fromA, UnityEngine::Vector3 toA, UnityEngine::Vector3 fromB, UnityEngine::Vector3 toB, ByRef<UnityEngine::Vector3> inbetweenPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberClashChecker::SegmentToSegmentDist");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SegmentToSegmentDist", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fromA), ::il2cpp_utils::ExtractType(toA), ::il2cpp_utils::ExtractType(fromB), ::il2cpp_utils::ExtractType(toB), ::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, fromA, toA, fromB, toB, byref(inbetweenPoint));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SaberManager
#include "GlobalNamespace/SaberManager.hpp"
// Including type: SaberManager/InitData
#include "GlobalNamespace/SaberManager_InitData.hpp"
// Including type: Saber
#include "GlobalNamespace/Saber.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: SaberType
#include "GlobalNamespace/SaberType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Saber _leftSaber
GlobalNamespace::Saber*& GlobalNamespace::SaberManager::dyn__leftSaber() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberManager::dyn__leftSaber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftSaber"))->offset;
  return *reinterpret_cast<GlobalNamespace::Saber**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Saber _rightSaber
GlobalNamespace::Saber*& GlobalNamespace::SaberManager::dyn__rightSaber() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberManager::dyn__rightSaber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightSaber"))->offset;
  return *reinterpret_cast<GlobalNamespace::Saber**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SaberManager/InitData _initData
GlobalNamespace::SaberManager::InitData*& GlobalNamespace::SaberManager::dyn__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberManager::dyn__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<GlobalNamespace::SaberManager::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _started
bool& GlobalNamespace::SaberManager::dyn__started() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberManager::dyn__started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<Saber,Saber> didUpdateSaberPositionsEvent
System::Action_2<GlobalNamespace::Saber*, GlobalNamespace::Saber*>*& GlobalNamespace::SaberManager::dyn_didUpdateSaberPositionsEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberManager::dyn_didUpdateSaberPositionsEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didUpdateSaberPositionsEvent"))->offset;
  return *reinterpret_cast<System::Action_2<GlobalNamespace::Saber*, GlobalNamespace::Saber*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SaberManager.get_leftSaber
GlobalNamespace::Saber* GlobalNamespace::SaberManager::get_leftSaber() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberManager::get_leftSaber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftSaber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::Saber*, false>(this, ___internal__method);
}
// Autogenerated method: SaberManager.get_rightSaber
GlobalNamespace::Saber* GlobalNamespace::SaberManager::get_rightSaber() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberManager::get_rightSaber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightSaber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::Saber*, false>(this, ___internal__method);
}
// Autogenerated method: SaberManager.set_disableSabers
void GlobalNamespace::SaberManager::set_disableSabers(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberManager::set_disableSabers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_disableSabers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SaberManager.add_didUpdateSaberPositionsEvent
void GlobalNamespace::SaberManager::add_didUpdateSaberPositionsEvent(System::Action_2<GlobalNamespace::Saber*, GlobalNamespace::Saber*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberManager::add_didUpdateSaberPositionsEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didUpdateSaberPositionsEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SaberManager.remove_didUpdateSaberPositionsEvent
void GlobalNamespace::SaberManager::remove_didUpdateSaberPositionsEvent(System::Action_2<GlobalNamespace::Saber*, GlobalNamespace::Saber*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberManager::remove_didUpdateSaberPositionsEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didUpdateSaberPositionsEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SaberManager.Start
void GlobalNamespace::SaberManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberManager.OnDisable
void GlobalNamespace::SaberManager::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberManager::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberManager.OnEnable
void GlobalNamespace::SaberManager::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberManager::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberManager.Update
void GlobalNamespace::SaberManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberManager.SaberForType
GlobalNamespace::Saber* GlobalNamespace::SaberManager::SaberForType(GlobalNamespace::SaberType saberType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberManager::SaberForType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SaberForType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saberType)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::Saber*, false>(this, ___internal__method, saberType);
}
// Autogenerated method: SaberManager.RefreshSabers
void GlobalNamespace::SaberManager::RefreshSabers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberManager::RefreshSabers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshSabers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SaberManager/InitData
#include "GlobalNamespace/SaberManager_InitData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean oneSaberMode
bool& GlobalNamespace::SaberManager::InitData::dyn_oneSaberMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberManager::InitData::dyn_oneSaberMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "oneSaberMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly SaberType oneSaberType
GlobalNamespace::SaberType& GlobalNamespace::SaberManager::InitData::dyn_oneSaberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberManager::InitData::dyn_oneSaberType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "oneSaberType"))->offset;
  return *reinterpret_cast<GlobalNamespace::SaberType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SaberModelContainer
#include "GlobalNamespace/SaberModelContainer.hpp"
// Including type: Saber
#include "GlobalNamespace/Saber.hpp"
// Including type: SaberModelController
#include "GlobalNamespace/SaberModelController.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Saber _saber
GlobalNamespace::Saber*& GlobalNamespace::SaberModelContainer::dyn__saber() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberModelContainer::dyn__saber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saber"))->offset;
  return *reinterpret_cast<GlobalNamespace::Saber**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SaberModelController _saberModelControllerPrefab
GlobalNamespace::SaberModelController*& GlobalNamespace::SaberModelContainer::dyn__saberModelControllerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberModelContainer::dyn__saberModelControllerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberModelControllerPrefab"))->offset;
  return *reinterpret_cast<GlobalNamespace::SaberModelController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Zenject.DiContainer _container
Zenject::DiContainer*& GlobalNamespace::SaberModelContainer::dyn__container() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberModelContainer::dyn__container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_container"))->offset;
  return *reinterpret_cast<Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SaberModelContainer.Start
void GlobalNamespace::SaberModelContainer::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberModelContainer::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SaberModelController
#include "GlobalNamespace/SaberModelController.hpp"
// Including type: SaberModelController/InitData
#include "GlobalNamespace/SaberModelController_InitData.hpp"
// Including type: SaberTrail
#include "GlobalNamespace/SaberTrail.hpp"
// Including type: SetSaberGlowColor
#include "GlobalNamespace/SetSaberGlowColor.hpp"
// Including type: SetSaberFakeGlowColor
#include "GlobalNamespace/SetSaberFakeGlowColor.hpp"
// Including type: TubeBloomPrePassLight
#include "GlobalNamespace/TubeBloomPrePassLight.hpp"
// Including type: ColorManager
#include "GlobalNamespace/ColorManager.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Saber
#include "GlobalNamespace/Saber.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private SaberTrail _saberTrail
GlobalNamespace::SaberTrail*& GlobalNamespace::SaberModelController::dyn__saberTrail() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberModelController::dyn__saberTrail");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberTrail"))->offset;
  return *reinterpret_cast<GlobalNamespace::SaberTrail**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SetSaberGlowColor[] _setSaberGlowColors
::ArrayW<GlobalNamespace::SetSaberGlowColor*>& GlobalNamespace::SaberModelController::dyn__setSaberGlowColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberModelController::dyn__setSaberGlowColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_setSaberGlowColors"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::SetSaberGlowColor*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SetSaberFakeGlowColor[] _setSaberFakeGlowColors
::ArrayW<GlobalNamespace::SetSaberFakeGlowColor*>& GlobalNamespace::SaberModelController::dyn__setSaberFakeGlowColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberModelController::dyn__setSaberFakeGlowColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_setSaberFakeGlowColors"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::SetSaberFakeGlowColor*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TubeBloomPrePassLight _saberLight
GlobalNamespace::TubeBloomPrePassLight*& GlobalNamespace::SaberModelController::dyn__saberLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberModelController::dyn__saberLight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberLight"))->offset;
  return *reinterpret_cast<GlobalNamespace::TubeBloomPrePassLight**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SaberModelController/InitData _initData
GlobalNamespace::SaberModelController::InitData*& GlobalNamespace::SaberModelController::dyn__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberModelController::dyn__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<GlobalNamespace::SaberModelController::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ColorManager _colorManager
GlobalNamespace::ColorManager*& GlobalNamespace::SaberModelController::dyn__colorManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberModelController::dyn__colorManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SaberModelController.Init
void GlobalNamespace::SaberModelController::Init(UnityEngine::Transform* parent, GlobalNamespace::Saber* saber) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberModelController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(parent), ::il2cpp_utils::ExtractType(saber)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, parent, saber);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SaberModelController/InitData
#include "GlobalNamespace/SaberModelController_InitData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Color trailTintColor
UnityEngine::Color& GlobalNamespace::SaberModelController::InitData::dyn_trailTintColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberModelController::InitData::dyn_trailTintColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trailTintColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SaberSound
#include "GlobalNamespace/SaberSound.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _saberTop
UnityEngine::Transform*& GlobalNamespace::SaberSound::dyn__saberTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSound::dyn__saberTop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberTop"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _audioSource
UnityEngine::AudioSource*& GlobalNamespace::SaberSound::dyn__audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSound::dyn__audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSource"))->offset;
  return *reinterpret_cast<UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _pitchBySpeedCurve
UnityEngine::AnimationCurve*& GlobalNamespace::SaberSound::dyn__pitchBySpeedCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSound::dyn__pitchBySpeedCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pitchBySpeedCurve"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _gainBySpeedCurve
UnityEngine::AnimationCurve*& GlobalNamespace::SaberSound::dyn__gainBySpeedCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSound::dyn__gainBySpeedCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gainBySpeedCurve"))->offset;
  return *reinterpret_cast<UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _speedMultiplier
float& GlobalNamespace::SaberSound::dyn__speedMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSound::dyn__speedMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_speedMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _upSmooth
float& GlobalNamespace::SaberSound::dyn__upSmooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSound::dyn__upSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_upSmooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _downSmooth
float& GlobalNamespace::SaberSound::dyn__downSmooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSound::dyn__downSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_downSmooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _noSoundTopThresholdSqr
float& GlobalNamespace::SaberSound::dyn__noSoundTopThresholdSqr() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSound::dyn__noSoundTopThresholdSqr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noSoundTopThresholdSqr"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _prevPos
UnityEngine::Vector3& GlobalNamespace::SaberSound::dyn__prevPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSound::dyn__prevPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevPos"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _speed
float& GlobalNamespace::SaberSound::dyn__speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSound::dyn__speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SaberSound.Start
void GlobalNamespace::SaberSound::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSound::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberSound.Update
void GlobalNamespace::SaberSound::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberSound::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SaberTypeObject
#include "GlobalNamespace/SaberTypeObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private SaberType _saberType
GlobalNamespace::SaberType& GlobalNamespace::SaberTypeObject::dyn__saberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberTypeObject::dyn__saberType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberType"))->offset;
  return *reinterpret_cast<GlobalNamespace::SaberType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SaberTypeObject.get_saberType
GlobalNamespace::SaberType GlobalNamespace::SaberTypeObject::get_saberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SaberTypeObject::get_saberType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_saberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SaberType, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SetBlocksBladeSaberGlowColor
#include "GlobalNamespace/SetBlocksBladeSaberGlowColor.hpp"
// Including type: SaberTypeObject
#include "GlobalNamespace/SaberTypeObject.hpp"
// Including type: ColorManager
#include "GlobalNamespace/ColorManager.hpp"
// Including type: BlocksBlade
#include "GlobalNamespace/BlocksBlade.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private SaberTypeObject _saber
GlobalNamespace::SaberTypeObject*& GlobalNamespace::SetBlocksBladeSaberGlowColor::dyn__saber() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SetBlocksBladeSaberGlowColor::dyn__saber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saber"))->offset;
  return *reinterpret_cast<GlobalNamespace::SaberTypeObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorManager _colorManager
GlobalNamespace::ColorManager*& GlobalNamespace::SetBlocksBladeSaberGlowColor::dyn__colorManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SetBlocksBladeSaberGlowColor::dyn__colorManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BlocksBlade _blocksBlade
GlobalNamespace::BlocksBlade*& GlobalNamespace::SetBlocksBladeSaberGlowColor::dyn__blocksBlade() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SetBlocksBladeSaberGlowColor::dyn__blocksBlade");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blocksBlade"))->offset;
  return *reinterpret_cast<GlobalNamespace::BlocksBlade**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SetBlocksBladeSaberGlowColor.Start
void GlobalNamespace::SetBlocksBladeSaberGlowColor::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SetBlocksBladeSaberGlowColor::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SetPSSaberGlowColor
#include "GlobalNamespace/SetPSSaberGlowColor.hpp"
// Including type: SaberTypeObject
#include "GlobalNamespace/SaberTypeObject.hpp"
// Including type: ColorManager
#include "GlobalNamespace/ColorManager.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private SaberTypeObject _saber
GlobalNamespace::SaberTypeObject*& GlobalNamespace::SetPSSaberGlowColor::dyn__saber() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SetPSSaberGlowColor::dyn__saber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saber"))->offset;
  return *reinterpret_cast<GlobalNamespace::SaberTypeObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorManager _colorManager
GlobalNamespace::ColorManager*& GlobalNamespace::SetPSSaberGlowColor::dyn__colorManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SetPSSaberGlowColor::dyn__colorManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem _particleSystem
UnityEngine::ParticleSystem*& GlobalNamespace::SetPSSaberGlowColor::dyn__particleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SetPSSaberGlowColor::dyn__particleSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_particleSystem"))->offset;
  return *reinterpret_cast<UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SetPSSaberGlowColor.Start
void GlobalNamespace::SetPSSaberGlowColor::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SetPSSaberGlowColor::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SetSaberBladeParams
#include "GlobalNamespace/SetSaberBladeParams.hpp"
// Including type: SetSaberBladeParams/PropertyTintColorPair
#include "GlobalNamespace/SetSaberBladeParams_PropertyTintColorPair.hpp"
// Including type: SaberTypeObject
#include "GlobalNamespace/SaberTypeObject.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: ColorManager
#include "GlobalNamespace/ColorManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private SaberTypeObject _saber
GlobalNamespace::SaberTypeObject*& GlobalNamespace::SetSaberBladeParams::dyn__saber() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SetSaberBladeParams::dyn__saber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saber"))->offset;
  return *reinterpret_cast<GlobalNamespace::SaberTypeObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer _meshRenderer
UnityEngine::MeshRenderer*& GlobalNamespace::SetSaberBladeParams::dyn__meshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SetSaberBladeParams::dyn__meshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshRenderer"))->offset;
  return *reinterpret_cast<UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SetSaberBladeParams/PropertyTintColorPair[] _propertyTintColorPairs
::ArrayW<GlobalNamespace::SetSaberBladeParams::PropertyTintColorPair*>& GlobalNamespace::SetSaberBladeParams::dyn__propertyTintColorPairs() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SetSaberBladeParams::dyn__propertyTintColorPairs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_propertyTintColorPairs"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::SetSaberBladeParams::PropertyTintColorPair*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorManager _colorManager
GlobalNamespace::ColorManager*& GlobalNamespace::SetSaberBladeParams::dyn__colorManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SetSaberBladeParams::dyn__colorManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SetSaberBladeParams.Start
void GlobalNamespace::SetSaberBladeParams::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SetSaberBladeParams::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: SetSaberBladeParams/PropertyTintColorPair
#include "GlobalNamespace/SetSaberBladeParams_PropertyTintColorPair.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color tintColor
UnityEngine::Color& GlobalNamespace::SetSaberBladeParams::PropertyTintColorPair::dyn_tintColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SetSaberBladeParams::PropertyTintColorPair::dyn_tintColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tintColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String property
::Il2CppString*& GlobalNamespace::SetSaberBladeParams::PropertyTintColorPair::dyn_property() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SetSaberBladeParams::PropertyTintColorPair::dyn_property");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "property"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SetSaberFakeGlowColor
#include "GlobalNamespace/SetSaberFakeGlowColor.hpp"
// Including type: SaberTypeObject
#include "GlobalNamespace/SaberTypeObject.hpp"
// Including type: Parametric3SliceSpriteController
#include "GlobalNamespace/Parametric3SliceSpriteController.hpp"
// Including type: ColorManager
#include "GlobalNamespace/ColorManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _tintColor
UnityEngine::Color& GlobalNamespace::SetSaberFakeGlowColor::dyn__tintColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SetSaberFakeGlowColor::dyn__tintColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tintColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SaberTypeObject _saberTypeObject
GlobalNamespace::SaberTypeObject*& GlobalNamespace::SetSaberFakeGlowColor::dyn__saberTypeObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SetSaberFakeGlowColor::dyn__saberTypeObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberTypeObject"))->offset;
  return *reinterpret_cast<GlobalNamespace::SaberTypeObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Parametric3SliceSpriteController _parametric3SliceSprite
GlobalNamespace::Parametric3SliceSpriteController*& GlobalNamespace::SetSaberFakeGlowColor::dyn__parametric3SliceSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SetSaberFakeGlowColor::dyn__parametric3SliceSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parametric3SliceSprite"))->offset;
  return *reinterpret_cast<GlobalNamespace::Parametric3SliceSpriteController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorManager _colorManager
GlobalNamespace::ColorManager*& GlobalNamespace::SetSaberFakeGlowColor::dyn__colorManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SetSaberFakeGlowColor::dyn__colorManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SaberType _saberType
GlobalNamespace::SaberType& GlobalNamespace::SetSaberFakeGlowColor::dyn__saberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SetSaberFakeGlowColor::dyn__saberType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberType"))->offset;
  return *reinterpret_cast<GlobalNamespace::SaberType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SetSaberFakeGlowColor.set_saberType
void GlobalNamespace::SetSaberFakeGlowColor::set_saberType(GlobalNamespace::SaberType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SetSaberFakeGlowColor::set_saberType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_saberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SetSaberFakeGlowColor.Start
void GlobalNamespace::SetSaberFakeGlowColor::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SetSaberFakeGlowColor::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SetSaberFakeGlowColor.SetColors
void GlobalNamespace::SetSaberFakeGlowColor::SetColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SetSaberFakeGlowColor::SetColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SetSaberGlowColor
#include "GlobalNamespace/SetSaberGlowColor.hpp"
// Including type: SetSaberGlowColor/PropertyTintColorPair
#include "GlobalNamespace/SetSaberGlowColor_PropertyTintColorPair.hpp"
// Including type: SaberTypeObject
#include "GlobalNamespace/SaberTypeObject.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: ColorManager
#include "GlobalNamespace/ColorManager.hpp"
// Including type: UnityEngine.MaterialPropertyBlock
#include "UnityEngine/MaterialPropertyBlock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private SaberTypeObject _saberTypeObject
GlobalNamespace::SaberTypeObject*& GlobalNamespace::SetSaberGlowColor::dyn__saberTypeObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SetSaberGlowColor::dyn__saberTypeObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberTypeObject"))->offset;
  return *reinterpret_cast<GlobalNamespace::SaberTypeObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer _meshRenderer
UnityEngine::MeshRenderer*& GlobalNamespace::SetSaberGlowColor::dyn__meshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SetSaberGlowColor::dyn__meshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshRenderer"))->offset;
  return *reinterpret_cast<UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SetSaberGlowColor/PropertyTintColorPair[] _propertyTintColorPairs
::ArrayW<GlobalNamespace::SetSaberGlowColor::PropertyTintColorPair*>& GlobalNamespace::SetSaberGlowColor::dyn__propertyTintColorPairs() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SetSaberGlowColor::dyn__propertyTintColorPairs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_propertyTintColorPairs"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::SetSaberGlowColor::PropertyTintColorPair*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorManager _colorManager
GlobalNamespace::ColorManager*& GlobalNamespace::SetSaberGlowColor::dyn__colorManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SetSaberGlowColor::dyn__colorManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MaterialPropertyBlock _materialPropertyBlock
UnityEngine::MaterialPropertyBlock*& GlobalNamespace::SetSaberGlowColor::dyn__materialPropertyBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SetSaberGlowColor::dyn__materialPropertyBlock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_materialPropertyBlock"))->offset;
  return *reinterpret_cast<UnityEngine::MaterialPropertyBlock**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SaberType _saberType
GlobalNamespace::SaberType& GlobalNamespace::SetSaberGlowColor::dyn__saberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SetSaberGlowColor::dyn__saberType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberType"))->offset;
  return *reinterpret_cast<GlobalNamespace::SaberType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SetSaberGlowColor.set_saberType
void GlobalNamespace::SetSaberGlowColor::set_saberType(GlobalNamespace::SaberType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SetSaberGlowColor::set_saberType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_saberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SetSaberGlowColor.Start
void GlobalNamespace::SetSaberGlowColor::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SetSaberGlowColor::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SetSaberGlowColor.SetColors
void GlobalNamespace::SetSaberGlowColor::SetColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SetSaberGlowColor::SetColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: SetSaberGlowColor/PropertyTintColorPair
#include "GlobalNamespace/SetSaberGlowColor_PropertyTintColorPair.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Color tintColor
UnityEngine::Color& GlobalNamespace::SetSaberGlowColor::PropertyTintColorPair::dyn_tintColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SetSaberGlowColor::PropertyTintColorPair::dyn_tintColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tintColor"))->offset;
  return *reinterpret_cast<UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String property
::Il2CppString*& GlobalNamespace::SetSaberGlowColor::PropertyTintColorPair::dyn_property() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SetSaberGlowColor::PropertyTintColorPair::dyn_property");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "property"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SetTubeBloomPrePassLightColor
#include "GlobalNamespace/SetTubeBloomPrePassLightColor.hpp"
// Including type: ColorSO
#include "GlobalNamespace/ColorSO.hpp"
// Including type: TubeBloomPrePassLight
#include "GlobalNamespace/TubeBloomPrePassLight.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ColorSO _color
GlobalNamespace::ColorSO*& GlobalNamespace::SetTubeBloomPrePassLightColor::dyn__color() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SetTubeBloomPrePassLightColor::dyn__color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TubeBloomPrePassLight[] _tubeLights
::ArrayW<GlobalNamespace::TubeBloomPrePassLight*>& GlobalNamespace::SetTubeBloomPrePassLightColor::dyn__tubeLights() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SetTubeBloomPrePassLightColor::dyn__tubeLights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tubeLights"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::TubeBloomPrePassLight*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SetTubeBloomPrePassLightColor.Start
void GlobalNamespace::SetTubeBloomPrePassLightColor::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SetTubeBloomPrePassLightColor::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SphereCuttableBySaber
#include "GlobalNamespace/SphereCuttableBySaber.hpp"
// Including type: UnityEngine.SphereCollider
#include "UnityEngine/SphereCollider.hpp"
// Including type: Saber
#include "GlobalNamespace/Saber.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SphereCollider _collider
UnityEngine::SphereCollider*& GlobalNamespace::SphereCuttableBySaber::dyn__collider() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SphereCuttableBySaber::dyn__collider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_collider"))->offset;
  return *reinterpret_cast<UnityEngine::SphereCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _canBeCut
bool& GlobalNamespace::SphereCuttableBySaber::dyn__canBeCut() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SphereCuttableBySaber::dyn__canBeCut");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canBeCut"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SphereCuttableBySaber.Awake
void GlobalNamespace::SphereCuttableBySaber::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SphereCuttableBySaber::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SphereCuttableBySaber.get_radius
float GlobalNamespace::SphereCuttableBySaber::get_radius() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SphereCuttableBySaber::get_radius");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_radius", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: SphereCuttableBySaber.get_canBeCut
bool GlobalNamespace::SphereCuttableBySaber::get_canBeCut() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SphereCuttableBySaber::get_canBeCut");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_canBeCut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: SphereCuttableBySaber.set_canBeCut
void GlobalNamespace::SphereCuttableBySaber::set_canBeCut(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SphereCuttableBySaber::set_canBeCut");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_canBeCut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SphereCuttableBySaber.Cut
void GlobalNamespace::SphereCuttableBySaber::Cut(GlobalNamespace::Saber* saber, UnityEngine::Vector3 cutPoint, UnityEngine::Quaternion orientation, UnityEngine::Vector3 cutDirVec) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SphereCuttableBySaber::Cut");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saber), ::il2cpp_utils::ExtractType(cutPoint), ::il2cpp_utils::ExtractType(orientation), ::il2cpp_utils::ExtractType(cutDirVec)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, saber, cutPoint, orientation, cutDirVec);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ICutScoreBufferDidFinishEvent
#include "GlobalNamespace/ICutScoreBufferDidFinishEvent.hpp"
// Including type: CutScoreBuffer
#include "GlobalNamespace/CutScoreBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ICutScoreBufferDidFinishEvent.HandleCutScoreBufferDidFinish
void GlobalNamespace::ICutScoreBufferDidFinishEvent::HandleCutScoreBufferDidFinish(GlobalNamespace::CutScoreBuffer* cutScoreBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ICutScoreBufferDidFinishEvent::HandleCutScoreBufferDidFinish");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCutScoreBufferDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cutScoreBuffer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, cutScoreBuffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CutScoreBuffer
#include "GlobalNamespace/CutScoreBuffer.hpp"
// Including type: CutScoreBuffer/Pool
#include "GlobalNamespace/CutScoreBuffer_Pool.hpp"
// Including type: ISaberSwingRatingCounter
#include "GlobalNamespace/ISaberSwingRatingCounter.hpp"
// Including type: LazyCopyHashSet`1
#include "GlobalNamespace/LazyCopyHashSet_1.hpp"
// Including type: ICutScoreBufferDidFinishEvent
#include "GlobalNamespace/ICutScoreBufferDidFinishEvent.hpp"
// Including type: ILazyCopyHashSet`1
#include "GlobalNamespace/ILazyCopyHashSet_1.hpp"
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _afterCutScoreWithMultiplier
int& GlobalNamespace::CutScoreBuffer::dyn__afterCutScoreWithMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutScoreBuffer::dyn__afterCutScoreWithMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_afterCutScoreWithMultiplier"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _beforeCutScoreWithMultiplier
int& GlobalNamespace::CutScoreBuffer::dyn__beforeCutScoreWithMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutScoreBuffer::dyn__beforeCutScoreWithMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beforeCutScoreWithMultiplier"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _cutDistanceScoreWithMultiplier
int& GlobalNamespace::CutScoreBuffer::dyn__cutDistanceScoreWithMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutScoreBuffer::dyn__cutDistanceScoreWithMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cutDistanceScoreWithMultiplier"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _multiplier
int& GlobalNamespace::CutScoreBuffer::dyn__multiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutScoreBuffer::dyn__multiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplier"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ISaberSwingRatingCounter _saberSwingRatingCounter
GlobalNamespace::ISaberSwingRatingCounter*& GlobalNamespace::CutScoreBuffer::dyn__saberSwingRatingCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutScoreBuffer::dyn__saberSwingRatingCounter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberSwingRatingCounter"))->offset;
  return *reinterpret_cast<GlobalNamespace::ISaberSwingRatingCounter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cutDistanceToCenter
float& GlobalNamespace::CutScoreBuffer::dyn__cutDistanceToCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutScoreBuffer::dyn__cutDistanceToCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cutDistanceToCenter"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
bool& GlobalNamespace::CutScoreBuffer::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutScoreBuffer::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LazyCopyHashSet`1<ICutScoreBufferDidFinishEvent> _didFinishEvent
GlobalNamespace::LazyCopyHashSet_1<GlobalNamespace::ICutScoreBufferDidFinishEvent*>*& GlobalNamespace::CutScoreBuffer::dyn__didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutScoreBuffer::dyn__didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_didFinishEvent"))->offset;
  return *reinterpret_cast<GlobalNamespace::LazyCopyHashSet_1<GlobalNamespace::ICutScoreBufferDidFinishEvent*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CutScoreBuffer.get_scoreWithMultiplier
int GlobalNamespace::CutScoreBuffer::get_scoreWithMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutScoreBuffer::get_scoreWithMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_scoreWithMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CutScoreBuffer.get_multiplier
int GlobalNamespace::CutScoreBuffer::get_multiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutScoreBuffer::get_multiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CutScoreBuffer.get_didFinishEvent
GlobalNamespace::ILazyCopyHashSet_1<GlobalNamespace::ICutScoreBufferDidFinishEvent*>* GlobalNamespace::CutScoreBuffer::get_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutScoreBuffer::get_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ILazyCopyHashSet_1<GlobalNamespace::ICutScoreBufferDidFinishEvent*>*, false>(this, ___internal__method);
}
// Autogenerated method: CutScoreBuffer.Init
void GlobalNamespace::CutScoreBuffer::Init(ByRef<GlobalNamespace::NoteCutInfo> noteCutInfo, int multiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutScoreBuffer::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteCutInfo), ::il2cpp_utils::ExtractType(multiplier)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, byref(noteCutInfo), multiplier);
}
// Autogenerated method: CutScoreBuffer.RefreshScores
void GlobalNamespace::CutScoreBuffer::RefreshScores() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutScoreBuffer::RefreshScores");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshScores", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CutScoreBuffer.HandleSaberSwingRatingCounterDidChange
void GlobalNamespace::CutScoreBuffer::HandleSaberSwingRatingCounterDidChange(GlobalNamespace::ISaberSwingRatingCounter* swingRatingCounter, float rating) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutScoreBuffer::HandleSaberSwingRatingCounterDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSaberSwingRatingCounterDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(swingRatingCounter), ::il2cpp_utils::ExtractType(rating)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, swingRatingCounter, rating);
}
// Autogenerated method: CutScoreBuffer.HandleSaberSwingRatingCounterDidFinish
void GlobalNamespace::CutScoreBuffer::HandleSaberSwingRatingCounterDidFinish(GlobalNamespace::ISaberSwingRatingCounter* swingRatingCounter) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CutScoreBuffer::HandleSaberSwingRatingCounterDidFinish");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSaberSwingRatingCounterDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(swingRatingCounter)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, swingRatingCounter);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CutScoreBuffer/Pool
#include "GlobalNamespace/CutScoreBuffer_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: NoteWasCutDelegate
#include "GlobalNamespace/NoteWasCutDelegate.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NoteWasCutDelegate.Invoke
void GlobalNamespace::NoteWasCutDelegate::Invoke(GlobalNamespace::NoteData* noteData, ByRef<GlobalNamespace::NoteCutInfo> noteCutInfo, int multiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteWasCutDelegate::Invoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteData), ::il2cpp_utils::ExtractType(noteCutInfo), ::il2cpp_utils::ExtractType(multiplier)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteData, byref(noteCutInfo), multiplier);
}
// Autogenerated method: NoteWasCutDelegate.BeginInvoke
System::IAsyncResult* GlobalNamespace::NoteWasCutDelegate::BeginInvoke(GlobalNamespace::NoteData* noteData, ByRef<GlobalNamespace::NoteCutInfo> noteCutInfo, int multiplier, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteWasCutDelegate::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteData), ::il2cpp_utils::ExtractType(noteCutInfo), ::il2cpp_utils::ExtractType(multiplier), ::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(object)})));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, noteData, byref(noteCutInfo), multiplier, callback, object);
}
// Autogenerated method: NoteWasCutDelegate.EndInvoke
void GlobalNamespace::NoteWasCutDelegate::EndInvoke(ByRef<GlobalNamespace::NoteCutInfo> noteCutInfo, System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NoteWasCutDelegate::EndInvoke");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteCutInfo), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, byref(noteCutInfo), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IScoreController
#include "GlobalNamespace/IScoreController.hpp"
// Including type: NoteWasCutDelegate
#include "GlobalNamespace/NoteWasCutDelegate.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IScoreController.get_prevFrameRawScore
int GlobalNamespace::IScoreController::get_prevFrameRawScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IScoreController::get_prevFrameRawScore");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_prevFrameRawScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: IScoreController.get_prevFrameModifiedScore
int GlobalNamespace::IScoreController::get_prevFrameModifiedScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IScoreController::get_prevFrameModifiedScore");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_prevFrameModifiedScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: IScoreController.get_maxCombo
int GlobalNamespace::IScoreController::get_maxCombo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IScoreController::get_maxCombo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxCombo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: IScoreController.get_multiplierWithFever
int GlobalNamespace::IScoreController::get_multiplierWithFever() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IScoreController::get_multiplierWithFever");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplierWithFever", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: IScoreController.get_feverModeActive
bool GlobalNamespace::IScoreController::get_feverModeActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IScoreController::get_feverModeActive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_feverModeActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IScoreController.get_feverModeDrainProgress
float GlobalNamespace::IScoreController::get_feverModeDrainProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IScoreController::get_feverModeDrainProgress");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_feverModeDrainProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IScoreController.get_feverModeChargeProgress
float GlobalNamespace::IScoreController::get_feverModeChargeProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IScoreController::get_feverModeChargeProgress");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_feverModeChargeProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IScoreController.get_immediateMaxPossibleRawScore
int GlobalNamespace::IScoreController::get_immediateMaxPossibleRawScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IScoreController::get_immediateMaxPossibleRawScore");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_immediateMaxPossibleRawScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: IScoreController.get_gameplayModifiersScoreMultiplier
float GlobalNamespace::IScoreController::get_gameplayModifiersScoreMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IScoreController::get_gameplayModifiersScoreMultiplier");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameplayModifiersScoreMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: IScoreController.add_noteWasCutEvent
void GlobalNamespace::IScoreController::add_noteWasCutEvent(GlobalNamespace::NoteWasCutDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IScoreController::add_noteWasCutEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_noteWasCutEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IScoreController.remove_noteWasCutEvent
void GlobalNamespace::IScoreController::remove_noteWasCutEvent(GlobalNamespace::NoteWasCutDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IScoreController::remove_noteWasCutEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_noteWasCutEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IScoreController.add_noteWasMissedEvent
void GlobalNamespace::IScoreController::add_noteWasMissedEvent(System::Action_2<GlobalNamespace::NoteData*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IScoreController::add_noteWasMissedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_noteWasMissedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IScoreController.remove_noteWasMissedEvent
void GlobalNamespace::IScoreController::remove_noteWasMissedEvent(System::Action_2<GlobalNamespace::NoteData*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IScoreController::remove_noteWasMissedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_noteWasMissedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IScoreController.add_scoreDidChangeEvent
void GlobalNamespace::IScoreController::add_scoreDidChangeEvent(System::Action_2<int, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IScoreController::add_scoreDidChangeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_scoreDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IScoreController.remove_scoreDidChangeEvent
void GlobalNamespace::IScoreController::remove_scoreDidChangeEvent(System::Action_2<int, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IScoreController::remove_scoreDidChangeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_scoreDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IScoreController.add_immediateMaxPossibleScoreDidChangeEvent
void GlobalNamespace::IScoreController::add_immediateMaxPossibleScoreDidChangeEvent(System::Action_2<int, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IScoreController::add_immediateMaxPossibleScoreDidChangeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_immediateMaxPossibleScoreDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IScoreController.remove_immediateMaxPossibleScoreDidChangeEvent
void GlobalNamespace::IScoreController::remove_immediateMaxPossibleScoreDidChangeEvent(System::Action_2<int, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IScoreController::remove_immediateMaxPossibleScoreDidChangeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_immediateMaxPossibleScoreDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IScoreController.add_multiplierDidChangeEvent
void GlobalNamespace::IScoreController::add_multiplierDidChangeEvent(System::Action_2<int, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IScoreController::add_multiplierDidChangeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_multiplierDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IScoreController.remove_multiplierDidChangeEvent
void GlobalNamespace::IScoreController::remove_multiplierDidChangeEvent(System::Action_2<int, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IScoreController::remove_multiplierDidChangeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_multiplierDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IScoreController.add_comboDidChangeEvent
void GlobalNamespace::IScoreController::add_comboDidChangeEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IScoreController::add_comboDidChangeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_comboDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IScoreController.remove_comboDidChangeEvent
void GlobalNamespace::IScoreController::remove_comboDidChangeEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IScoreController::remove_comboDidChangeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_comboDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IScoreController.add_feverModeChargeProgressDidChangeEvent
void GlobalNamespace::IScoreController::add_feverModeChargeProgressDidChangeEvent(System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IScoreController::add_feverModeChargeProgressDidChangeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_feverModeChargeProgressDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IScoreController.remove_feverModeChargeProgressDidChangeEvent
void GlobalNamespace::IScoreController::remove_feverModeChargeProgressDidChangeEvent(System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IScoreController::remove_feverModeChargeProgressDidChangeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_feverModeChargeProgressDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IScoreController.add_feverDidStartEvent
void GlobalNamespace::IScoreController::add_feverDidStartEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IScoreController::add_feverDidStartEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_feverDidStartEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IScoreController.remove_feverDidStartEvent
void GlobalNamespace::IScoreController::remove_feverDidStartEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IScoreController::remove_feverDidStartEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_feverDidStartEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IScoreController.add_feverDidFinishEvent
void GlobalNamespace::IScoreController::add_feverDidFinishEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IScoreController::add_feverDidFinishEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_feverDidFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IScoreController.remove_feverDidFinishEvent
void GlobalNamespace::IScoreController::remove_feverDidFinishEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IScoreController::remove_feverDidFinishEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_feverDidFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IScoreController.add_comboBreakingEventHappenedEvent
void GlobalNamespace::IScoreController::add_comboBreakingEventHappenedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IScoreController::add_comboBreakingEventHappenedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_comboBreakingEventHappenedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IScoreController.remove_comboBreakingEventHappenedEvent
void GlobalNamespace::IScoreController::remove_comboBreakingEventHappenedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IScoreController::remove_comboBreakingEventHappenedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_comboBreakingEventHappenedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IScoreController.SetEnabled
void GlobalNamespace::IScoreController::SetEnabled(bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IScoreController::SetEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enabled)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, enabled);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ScoreController
#include "GlobalNamespace/ScoreController.hpp"
// Including type: GameplayModifiersModelSO
#include "GlobalNamespace/GameplayModifiersModelSO.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: BeatmapObjectManager
#include "GlobalNamespace/BeatmapObjectManager.hpp"
// Including type: PlayerHeadAndObstacleInteraction
#include "GlobalNamespace/PlayerHeadAndObstacleInteraction.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: IGameEnergyCounter
#include "GlobalNamespace/IGameEnergyCounter.hpp"
// Including type: NoteWasCutDelegate
#include "GlobalNamespace/NoteWasCutDelegate.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: GameplayModifierParamsSO
#include "GlobalNamespace/GameplayModifierParamsSO.hpp"
// Including type: MemoryPoolContainer`1
#include "GlobalNamespace/MemoryPoolContainer_1.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
// Including type: CutScoreBuffer/Pool
#include "GlobalNamespace/CutScoreBuffer_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _feverModeRequiredCombo
int& GlobalNamespace::ScoreController::dyn__feverModeRequiredCombo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::dyn__feverModeRequiredCombo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_feverModeRequiredCombo"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _feverModeDuration
float& GlobalNamespace::ScoreController::dyn__feverModeDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::dyn__feverModeDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_feverModeDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GameplayModifiersModelSO _gameplayModifiersModel
GlobalNamespace::GameplayModifiersModelSO*& GlobalNamespace::ScoreController::dyn__gameplayModifiersModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::dyn__gameplayModifiersModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifiersModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameplayModifiersModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameplayModifiers _gameplayModifiers
GlobalNamespace::GameplayModifiers*& GlobalNamespace::ScoreController::dyn__gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::dyn__gameplayModifiers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifiers"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameplayModifiers**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapObjectManager _beatmapObjectManager
GlobalNamespace::BeatmapObjectManager*& GlobalNamespace::ScoreController::dyn__beatmapObjectManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::dyn__beatmapObjectManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapObjectManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly PlayerHeadAndObstacleInteraction _playerHeadAndObstacleInteraction
GlobalNamespace::PlayerHeadAndObstacleInteraction*& GlobalNamespace::ScoreController::dyn__playerHeadAndObstacleInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::dyn__playerHeadAndObstacleInteraction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerHeadAndObstacleInteraction"))->offset;
  return *reinterpret_cast<GlobalNamespace::PlayerHeadAndObstacleInteraction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AudioTimeSyncController _audioTimeSyncController
GlobalNamespace::AudioTimeSyncController*& GlobalNamespace::ScoreController::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IGameEnergyCounter _gameEnergyCounter
GlobalNamespace::IGameEnergyCounter*& GlobalNamespace::ScoreController::dyn__gameEnergyCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::dyn__gameEnergyCounter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameEnergyCounter"))->offset;
  return *reinterpret_cast<GlobalNamespace::IGameEnergyCounter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly CutScoreBuffer/Pool _cutScoreBufferPool
GlobalNamespace::CutScoreBuffer::Pool*& GlobalNamespace::ScoreController::dyn__cutScoreBufferPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::dyn__cutScoreBufferPool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cutScoreBufferPool"))->offset;
  return *reinterpret_cast<GlobalNamespace::CutScoreBuffer::Pool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteWasCutDelegate noteWasCutEvent
GlobalNamespace::NoteWasCutDelegate*& GlobalNamespace::ScoreController::dyn_noteWasCutEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::dyn_noteWasCutEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteWasCutEvent"))->offset;
  return *reinterpret_cast<GlobalNamespace::NoteWasCutDelegate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<NoteData,System.Int32> noteWasMissedEvent
System::Action_2<GlobalNamespace::NoteData*, int>*& GlobalNamespace::ScoreController::dyn_noteWasMissedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::dyn_noteWasMissedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteWasMissedEvent"))->offset;
  return *reinterpret_cast<System::Action_2<GlobalNamespace::NoteData*, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.Int32,System.Int32> scoreDidChangeEvent
System::Action_2<int, int>*& GlobalNamespace::ScoreController::dyn_scoreDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::dyn_scoreDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scoreDidChangeEvent"))->offset;
  return *reinterpret_cast<System::Action_2<int, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.Int32,System.Int32> immediateMaxPossibleScoreDidChangeEvent
System::Action_2<int, int>*& GlobalNamespace::ScoreController::dyn_immediateMaxPossibleScoreDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::dyn_immediateMaxPossibleScoreDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "immediateMaxPossibleScoreDidChangeEvent"))->offset;
  return *reinterpret_cast<System::Action_2<int, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.Int32,System.Single> multiplierDidChangeEvent
System::Action_2<int, float>*& GlobalNamespace::ScoreController::dyn_multiplierDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::dyn_multiplierDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "multiplierDidChangeEvent"))->offset;
  return *reinterpret_cast<System::Action_2<int, float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Int32> comboDidChangeEvent
System::Action_1<int>*& GlobalNamespace::ScoreController::dyn_comboDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::dyn_comboDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "comboDidChangeEvent"))->offset;
  return *reinterpret_cast<System::Action_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Single> feverModeChargeProgressDidChangeEvent
System::Action_1<float>*& GlobalNamespace::ScoreController::dyn_feverModeChargeProgressDidChangeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::dyn_feverModeChargeProgressDidChangeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "feverModeChargeProgressDidChangeEvent"))->offset;
  return *reinterpret_cast<System::Action_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action feverDidStartEvent
System::Action*& GlobalNamespace::ScoreController::dyn_feverDidStartEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::dyn_feverDidStartEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "feverDidStartEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action feverDidFinishEvent
System::Action*& GlobalNamespace::ScoreController::dyn_feverDidFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::dyn_feverDidFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "feverDidFinishEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action comboBreakingEventHappenedEvent
System::Action*& GlobalNamespace::ScoreController::dyn_comboBreakingEventHappenedEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::dyn_comboBreakingEventHappenedEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "comboBreakingEventHappenedEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _baseRawScore
int& GlobalNamespace::ScoreController::dyn__baseRawScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::dyn__baseRawScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_baseRawScore"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _prevFrameRawScore
int& GlobalNamespace::ScoreController::dyn__prevFrameRawScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::dyn__prevFrameRawScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevFrameRawScore"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _multiplier
int& GlobalNamespace::ScoreController::dyn__multiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::dyn__multiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplier"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _multiplierIncreaseProgress
int& GlobalNamespace::ScoreController::dyn__multiplierIncreaseProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::dyn__multiplierIncreaseProgress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplierIncreaseProgress"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _multiplierIncreaseMaxProgress
int& GlobalNamespace::ScoreController::dyn__multiplierIncreaseMaxProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::dyn__multiplierIncreaseMaxProgress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_multiplierIncreaseMaxProgress"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _combo
int& GlobalNamespace::ScoreController::dyn__combo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::dyn__combo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_combo"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _maxCombo
int& GlobalNamespace::ScoreController::dyn__maxCombo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::dyn__maxCombo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxCombo"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _feverIsActive
bool& GlobalNamespace::ScoreController::dyn__feverIsActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::dyn__feverIsActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_feverIsActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _feverStartTime
float& GlobalNamespace::ScoreController::dyn__feverStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::dyn__feverStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_feverStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _feverCombo
int& GlobalNamespace::ScoreController::dyn__feverCombo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::dyn__feverCombo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_feverCombo"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _playerHeadWasInObstacle
bool& GlobalNamespace::ScoreController::dyn__playerHeadWasInObstacle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::dyn__playerHeadWasInObstacle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerHeadWasInObstacle"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _immediateMaxPossibleRawScore
int& GlobalNamespace::ScoreController::dyn__immediateMaxPossibleRawScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::dyn__immediateMaxPossibleRawScore");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_immediateMaxPossibleRawScore"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _cutOrMissedNotes
int& GlobalNamespace::ScoreController::dyn__cutOrMissedNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::dyn__cutOrMissedNotes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cutOrMissedNotes"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _gameplayModifiersScoreMultiplier
float& GlobalNamespace::ScoreController::dyn__gameplayModifiersScoreMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::dyn__gameplayModifiersScoreMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifiersScoreMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _prevFrameGameplayModifiersScoreMultiplier
float& GlobalNamespace::ScoreController::dyn__prevFrameGameplayModifiersScoreMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::dyn__prevFrameGameplayModifiersScoreMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevFrameGameplayModifiersScoreMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<GameplayModifierParamsSO> _gameplayModifierParams
System::Collections::Generic::List_1<GlobalNamespace::GameplayModifierParamsSO*>*& GlobalNamespace::ScoreController::dyn__gameplayModifierParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::dyn__gameplayModifierParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayModifierParams"))->offset;
  return *reinterpret_cast<System::Collections::Generic::List_1<GlobalNamespace::GameplayModifierParamsSO*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MemoryPoolContainer`1<CutScoreBuffer> _cutScoreBufferMemoryPoolContainer
GlobalNamespace::MemoryPoolContainer_1<GlobalNamespace::CutScoreBuffer*>*& GlobalNamespace::ScoreController::dyn__cutScoreBufferMemoryPoolContainer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::dyn__cutScoreBufferMemoryPoolContainer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cutScoreBufferMemoryPoolContainer"))->offset;
  return *reinterpret_cast<GlobalNamespace::MemoryPoolContainer_1<GlobalNamespace::CutScoreBuffer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ScoreController.get_prevFrameRawScore
int GlobalNamespace::ScoreController::get_prevFrameRawScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::get_prevFrameRawScore");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_prevFrameRawScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ScoreController.get_prevFrameModifiedScore
int GlobalNamespace::ScoreController::get_prevFrameModifiedScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::get_prevFrameModifiedScore");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_prevFrameModifiedScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ScoreController.get_maxCombo
int GlobalNamespace::ScoreController::get_maxCombo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::get_maxCombo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_maxCombo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ScoreController.get_multiplierWithFever
int GlobalNamespace::ScoreController::get_multiplierWithFever() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::get_multiplierWithFever");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplierWithFever", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ScoreController.get_feverModeActive
bool GlobalNamespace::ScoreController::get_feverModeActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::get_feverModeActive");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_feverModeActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ScoreController.get_feverModeDrainProgress
float GlobalNamespace::ScoreController::get_feverModeDrainProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::get_feverModeDrainProgress");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_feverModeDrainProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ScoreController.get_feverModeChargeProgress
float GlobalNamespace::ScoreController::get_feverModeChargeProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::get_feverModeChargeProgress");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_feverModeChargeProgress", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ScoreController.get_immediateMaxPossibleRawScore
int GlobalNamespace::ScoreController::get_immediateMaxPossibleRawScore() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::get_immediateMaxPossibleRawScore");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_immediateMaxPossibleRawScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ScoreController.get_gameplayModifiersScoreMultiplier
float GlobalNamespace::ScoreController::get_gameplayModifiersScoreMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::get_gameplayModifiersScoreMultiplier");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameplayModifiersScoreMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ScoreController.add_noteWasCutEvent
void GlobalNamespace::ScoreController::add_noteWasCutEvent(GlobalNamespace::NoteWasCutDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::add_noteWasCutEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_noteWasCutEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ScoreController.remove_noteWasCutEvent
void GlobalNamespace::ScoreController::remove_noteWasCutEvent(GlobalNamespace::NoteWasCutDelegate* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::remove_noteWasCutEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_noteWasCutEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ScoreController.add_noteWasMissedEvent
void GlobalNamespace::ScoreController::add_noteWasMissedEvent(System::Action_2<GlobalNamespace::NoteData*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::add_noteWasMissedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_noteWasMissedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ScoreController.remove_noteWasMissedEvent
void GlobalNamespace::ScoreController::remove_noteWasMissedEvent(System::Action_2<GlobalNamespace::NoteData*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::remove_noteWasMissedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_noteWasMissedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ScoreController.add_scoreDidChangeEvent
void GlobalNamespace::ScoreController::add_scoreDidChangeEvent(System::Action_2<int, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::add_scoreDidChangeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_scoreDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ScoreController.remove_scoreDidChangeEvent
void GlobalNamespace::ScoreController::remove_scoreDidChangeEvent(System::Action_2<int, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::remove_scoreDidChangeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_scoreDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ScoreController.add_immediateMaxPossibleScoreDidChangeEvent
void GlobalNamespace::ScoreController::add_immediateMaxPossibleScoreDidChangeEvent(System::Action_2<int, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::add_immediateMaxPossibleScoreDidChangeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_immediateMaxPossibleScoreDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ScoreController.remove_immediateMaxPossibleScoreDidChangeEvent
void GlobalNamespace::ScoreController::remove_immediateMaxPossibleScoreDidChangeEvent(System::Action_2<int, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::remove_immediateMaxPossibleScoreDidChangeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_immediateMaxPossibleScoreDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ScoreController.add_multiplierDidChangeEvent
void GlobalNamespace::ScoreController::add_multiplierDidChangeEvent(System::Action_2<int, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::add_multiplierDidChangeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_multiplierDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ScoreController.remove_multiplierDidChangeEvent
void GlobalNamespace::ScoreController::remove_multiplierDidChangeEvent(System::Action_2<int, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::remove_multiplierDidChangeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_multiplierDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ScoreController.add_comboDidChangeEvent
void GlobalNamespace::ScoreController::add_comboDidChangeEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::add_comboDidChangeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_comboDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ScoreController.remove_comboDidChangeEvent
void GlobalNamespace::ScoreController::remove_comboDidChangeEvent(System::Action_1<int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::remove_comboDidChangeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_comboDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ScoreController.add_feverModeChargeProgressDidChangeEvent
void GlobalNamespace::ScoreController::add_feverModeChargeProgressDidChangeEvent(System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::add_feverModeChargeProgressDidChangeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_feverModeChargeProgressDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ScoreController.remove_feverModeChargeProgressDidChangeEvent
void GlobalNamespace::ScoreController::remove_feverModeChargeProgressDidChangeEvent(System::Action_1<float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::remove_feverModeChargeProgressDidChangeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_feverModeChargeProgressDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ScoreController.add_feverDidStartEvent
void GlobalNamespace::ScoreController::add_feverDidStartEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::add_feverDidStartEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_feverDidStartEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ScoreController.remove_feverDidStartEvent
void GlobalNamespace::ScoreController::remove_feverDidStartEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::remove_feverDidStartEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_feverDidStartEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ScoreController.add_feverDidFinishEvent
void GlobalNamespace::ScoreController::add_feverDidFinishEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::add_feverDidFinishEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_feverDidFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ScoreController.remove_feverDidFinishEvent
void GlobalNamespace::ScoreController::remove_feverDidFinishEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::remove_feverDidFinishEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_feverDidFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ScoreController.add_comboBreakingEventHappenedEvent
void GlobalNamespace::ScoreController::add_comboBreakingEventHappenedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::add_comboBreakingEventHappenedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_comboBreakingEventHappenedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ScoreController.remove_comboBreakingEventHappenedEvent
void GlobalNamespace::ScoreController::remove_comboBreakingEventHappenedEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::remove_comboBreakingEventHappenedEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_comboBreakingEventHappenedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ScoreController.SetEnabled
void GlobalNamespace::ScoreController::SetEnabled(bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::SetEnabled");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enabled)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, enabled);
}
// Autogenerated method: ScoreController.Start
void GlobalNamespace::ScoreController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScoreController.OnDestroy
void GlobalNamespace::ScoreController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScoreController.Update
void GlobalNamespace::ScoreController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScoreController.LateUpdate
void GlobalNamespace::ScoreController::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ScoreController.LoseMultiplier
void GlobalNamespace::ScoreController::LoseMultiplier(ByRef<bool> comboChanged, ByRef<bool> multiplierChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::LoseMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoseMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, byref(comboChanged), byref(multiplierChanged));
}
// Autogenerated method: ScoreController.NotifyForChange
void GlobalNamespace::ScoreController::NotifyForChange(bool comboChanged, bool multiplierChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::NotifyForChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NotifyForChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(comboChanged), ::il2cpp_utils::ExtractType(multiplierChanged)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, comboChanged, multiplierChanged);
}
// Autogenerated method: ScoreController.HandleNoteWasCut
void GlobalNamespace::ScoreController::HandleNoteWasCut(GlobalNamespace::NoteController* noteController, ByRef<GlobalNamespace::NoteCutInfo> noteCutInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::HandleNoteWasCut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteWasCut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController), ::il2cpp_utils::ExtractType(noteCutInfo)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteController, byref(noteCutInfo));
}
// Autogenerated method: ScoreController.HandleNoteWasMissed
void GlobalNamespace::ScoreController::HandleNoteWasMissed(GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::HandleNoteWasMissed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteWasMissed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated method: ScoreController.HandleCutScoreBufferDidFinish
void GlobalNamespace::ScoreController::HandleCutScoreBufferDidFinish(GlobalNamespace::CutScoreBuffer* cutScoreBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ScoreController::HandleCutScoreBufferDidFinish");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCutScoreBufferDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cutScoreBuffer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, cutScoreBuffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SmoothCamera
#include "GlobalNamespace/SmoothCamera.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: MainCamera
#include "GlobalNamespace/MainCamera.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _camera
UnityEngine::Camera*& GlobalNamespace::SmoothCamera::dyn__camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmoothCamera::dyn__camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_camera"))->offset;
  return *reinterpret_cast<UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MainCamera _mainCamera
GlobalNamespace::MainCamera*& GlobalNamespace::SmoothCamera::dyn__mainCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmoothCamera::dyn__mainCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainCamera"))->offset;
  return *reinterpret_cast<GlobalNamespace::MainCamera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _thirdPersonPosition
UnityEngine::Vector3& GlobalNamespace::SmoothCamera::dyn__thirdPersonPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmoothCamera::dyn__thirdPersonPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_thirdPersonPosition"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _thirdPersonEulerAngles
UnityEngine::Vector3& GlobalNamespace::SmoothCamera::dyn__thirdPersonEulerAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmoothCamera::dyn__thirdPersonEulerAngles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_thirdPersonEulerAngles"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _thirdPersonEnabled
bool& GlobalNamespace::SmoothCamera::dyn__thirdPersonEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmoothCamera::dyn__thirdPersonEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_thirdPersonEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rotationSmooth
float& GlobalNamespace::SmoothCamera::dyn__rotationSmooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmoothCamera::dyn__rotationSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationSmooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _positionSmooth
float& GlobalNamespace::SmoothCamera::dyn__positionSmooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmoothCamera::dyn__positionSmooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positionSmooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SmoothCamera.Init
void GlobalNamespace::SmoothCamera::Init(float fieldOfView, float positionSmooth, float rotationSmooth, bool thirdPersonEnabled, UnityEngine::Vector3 thirdPersonPosition, UnityEngine::Vector3 thirdPersonEulerAngles) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmoothCamera::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fieldOfView), ::il2cpp_utils::ExtractType(positionSmooth), ::il2cpp_utils::ExtractType(rotationSmooth), ::il2cpp_utils::ExtractType(thirdPersonEnabled), ::il2cpp_utils::ExtractType(thirdPersonPosition), ::il2cpp_utils::ExtractType(thirdPersonEulerAngles)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, fieldOfView, positionSmooth, rotationSmooth, thirdPersonEnabled, thirdPersonPosition, thirdPersonEulerAngles);
}
// Autogenerated method: SmoothCamera.OnEnable
void GlobalNamespace::SmoothCamera::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmoothCamera::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SmoothCamera.OnDisable
void GlobalNamespace::SmoothCamera::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmoothCamera::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SmoothCamera.LateUpdate
void GlobalNamespace::SmoothCamera::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmoothCamera::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SmoothCameraController
#include "GlobalNamespace/SmoothCameraController.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
// Including type: SmoothCamera
#include "GlobalNamespace/SmoothCamera.hpp"
// Including type: LIV.SDK.Unity.LIV
#include "LIV/SDK/Unity/LIV.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MainSettingsModelSO _mainSettingsModel
GlobalNamespace::MainSettingsModelSO*& GlobalNamespace::SmoothCameraController::dyn__mainSettingsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmoothCameraController::dyn__mainSettingsModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainSettingsModel"))->offset;
  return *reinterpret_cast<GlobalNamespace::MainSettingsModelSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SmoothCamera _smoothCamera
GlobalNamespace::SmoothCamera*& GlobalNamespace::SmoothCameraController::dyn__smoothCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmoothCameraController::dyn__smoothCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smoothCamera"))->offset;
  return *reinterpret_cast<GlobalNamespace::SmoothCamera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LIV.SDK.Unity.LIV _liv
LIV::SDK::Unity::LIV*& GlobalNamespace::SmoothCameraController::dyn__liv() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmoothCameraController::dyn__liv");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_liv"))->offset;
  return *reinterpret_cast<LIV::SDK::Unity::LIV**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SmoothCameraController.Start
void GlobalNamespace::SmoothCameraController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmoothCameraController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SmoothCameraController.OnDestroy
void GlobalNamespace::SmoothCameraController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmoothCameraController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SmoothCameraController.HandleLIVDidActivate
void GlobalNamespace::SmoothCameraController::HandleLIVDidActivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmoothCameraController::HandleLIVDidActivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLIVDidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SmoothCameraController.HandleLIVDidDeactivate
void GlobalNamespace::SmoothCameraController::HandleLIVDidDeactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmoothCameraController::HandleLIVDidDeactivate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLIVDidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SmoothCameraController.ActivateSmoothCameraIfNeeded
void GlobalNamespace::SmoothCameraController::ActivateSmoothCameraIfNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SmoothCameraController::ActivateSmoothCameraIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ActivateSmoothCameraIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameSongController
#include "GlobalNamespace/GameSongController.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: AudioPitchGainEffect
#include "GlobalNamespace/AudioPitchGainEffect.hpp"
// Including type: IBeatmapObjectCallbackController
#include "GlobalNamespace/IBeatmapObjectCallbackController.hpp"
// Including type: UnityEngine.WaitUntil
#include "UnityEngine/WaitUntil.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private AudioTimeSyncController _audioTimeSyncController
GlobalNamespace::AudioTimeSyncController*& GlobalNamespace::GameSongController::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameSongController::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AudioPitchGainEffect _failAudioPitchGainEffect
GlobalNamespace::AudioPitchGainEffect*& GlobalNamespace::GameSongController::dyn__failAudioPitchGainEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameSongController::dyn__failAudioPitchGainEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_failAudioPitchGainEffect"))->offset;
  return *reinterpret_cast<GlobalNamespace::AudioPitchGainEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IBeatmapObjectCallbackController _beatmapObjectCallbackController
GlobalNamespace::IBeatmapObjectCallbackController*& GlobalNamespace::GameSongController::dyn__beatmapObjectCallbackController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameSongController::dyn__beatmapObjectCallbackController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectCallbackController"))->offset;
  return *reinterpret_cast<GlobalNamespace::IBeatmapObjectCallbackController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _songDidFinish
bool& GlobalNamespace::GameSongController::dyn__songDidFinish() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameSongController::dyn__songDidFinish");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songDidFinish"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameSongController.get_songLength
float GlobalNamespace::GameSongController::get_songLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameSongController::get_songLength");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_songLength", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: GameSongController.get_waitUntilIsReadyToStartTheSong
UnityEngine::WaitUntil* GlobalNamespace::GameSongController::get_waitUntilIsReadyToStartTheSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameSongController::get_waitUntilIsReadyToStartTheSong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_waitUntilIsReadyToStartTheSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::WaitUntil*, false>(this, ___internal__method);
}
// Autogenerated method: GameSongController.LateUpdate
void GlobalNamespace::GameSongController::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameSongController::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameSongController.StartSong
void GlobalNamespace::GameSongController::StartSong(float songTimeOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameSongController::StartSong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songTimeOffset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, songTimeOffset);
}
// Autogenerated method: GameSongController.FailStopSong
void GlobalNamespace::GameSongController::FailStopSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameSongController::FailStopSong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FailStopSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameSongController.SeekTo
void GlobalNamespace::GameSongController::SeekTo(float songTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameSongController::SeekTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SeekTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songTime)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, songTime);
}
// Autogenerated method: GameSongController.<FailStopSong>b__13_0
void GlobalNamespace::GameSongController::$FailStopSong$b__13_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameSongController::<FailStopSong>b__13_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<FailStopSong>b__13_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameSongController.StopSong
void GlobalNamespace::GameSongController::StopSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameSongController::StopSong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameSongController.PauseSong
void GlobalNamespace::GameSongController::PauseSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameSongController::PauseSong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PauseSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameSongController.ResumeSong
void GlobalNamespace::GameSongController::ResumeSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameSongController::ResumeSong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResumeSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IStartSeekSongController
#include "GlobalNamespace/IStartSeekSongController.hpp"
// Including type: UnityEngine.WaitUntil
#include "UnityEngine/WaitUntil.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IStartSeekSongController.get_waitUntilIsReadyToStartTheSong
UnityEngine::WaitUntil* GlobalNamespace::IStartSeekSongController::get_waitUntilIsReadyToStartTheSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IStartSeekSongController::get_waitUntilIsReadyToStartTheSong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_waitUntilIsReadyToStartTheSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::WaitUntil*, false>(this, ___internal__method);
}
// Autogenerated method: IStartSeekSongController.StartSong
void GlobalNamespace::IStartSeekSongController::StartSong(float offsetTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IStartSeekSongController::StartSong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(offsetTime)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, offsetTime);
}
// Autogenerated method: IStartSeekSongController.SeekTo
void GlobalNamespace::IStartSeekSongController::SeekTo(float songTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IStartSeekSongController::SeekTo");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SeekTo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songTime)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, songTime);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PatternFightSongController
#include "GlobalNamespace/PatternFightSongController.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: IBeatmapObjectCallbackController
#include "GlobalNamespace/IBeatmapObjectCallbackController.hpp"
// Including type: BeatmapObjectManager
#include "GlobalNamespace/BeatmapObjectManager.hpp"
// Including type: BeatmapData
#include "GlobalNamespace/BeatmapData.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kBPM
float GlobalNamespace::PatternFightSongController::_get_kBPM() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightSongController::_get_kBPM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "PatternFightSongController", "kBPM"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kBPM
void GlobalNamespace::PatternFightSongController::_set_kBPM(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightSongController::_set_kBPM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PatternFightSongController", "kBPM", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kPhaseLengthInBeats
float GlobalNamespace::PatternFightSongController::_get_kPhaseLengthInBeats() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightSongController::_get_kPhaseLengthInBeats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "PatternFightSongController", "kPhaseLengthInBeats"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kPhaseLengthInBeats
void GlobalNamespace::PatternFightSongController::_set_kPhaseLengthInBeats(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightSongController::_set_kPhaseLengthInBeats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PatternFightSongController", "kPhaseLengthInBeats", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly AudioTimeSyncController _audioTimeSyncController
GlobalNamespace::AudioTimeSyncController*& GlobalNamespace::PatternFightSongController::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightSongController::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IBeatmapObjectCallbackController _beatmapObjectCallbackController
GlobalNamespace::IBeatmapObjectCallbackController*& GlobalNamespace::PatternFightSongController::dyn__beatmapObjectCallbackController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightSongController::dyn__beatmapObjectCallbackController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectCallbackController"))->offset;
  return *reinterpret_cast<GlobalNamespace::IBeatmapObjectCallbackController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapObjectManager _beatmapObjectManager
GlobalNamespace::BeatmapObjectManager*& GlobalNamespace::PatternFightSongController::dyn__beatmapObjectManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightSongController::dyn__beatmapObjectManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapObjectManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapData _beatmapData
GlobalNamespace::BeatmapData*& GlobalNamespace::PatternFightSongController::dyn__beatmapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightSongController::dyn__beatmapData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapData"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PatternFightSongController/GameplayPhase _gameplayPhase
GlobalNamespace::PatternFightSongController::GameplayPhase& GlobalNamespace::PatternFightSongController::dyn__gameplayPhase() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightSongController::dyn__gameplayPhase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayPhase"))->offset;
  return *reinterpret_cast<GlobalNamespace::PatternFightSongController::GameplayPhase*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _gameplayPhaseNumber
int& GlobalNamespace::PatternFightSongController::dyn__gameplayPhaseNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightSongController::dyn__gameplayPhaseNumber");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameplayPhaseNumber"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<NoteData> _thisPlayerSourcePatternNoteData
System::Collections::Generic::HashSet_1<GlobalNamespace::NoteData*>*& GlobalNamespace::PatternFightSongController::dyn__thisPlayerSourcePatternNoteData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightSongController::dyn__thisPlayerSourcePatternNoteData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_thisPlayerSourcePatternNoteData"))->offset;
  return *reinterpret_cast<System::Collections::Generic::HashSet_1<GlobalNamespace::NoteData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<NoteData> _thisPlayerDefinedPatternNoteData
System::Collections::Generic::HashSet_1<GlobalNamespace::NoteData*>*& GlobalNamespace::PatternFightSongController::dyn__thisPlayerDefinedPatternNoteData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightSongController::dyn__thisPlayerDefinedPatternNoteData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_thisPlayerDefinedPatternNoteData"))->offset;
  return *reinterpret_cast<System::Collections::Generic::HashSet_1<GlobalNamespace::NoteData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PatternFightSongController.Start
void GlobalNamespace::PatternFightSongController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightSongController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PatternFightSongController.OnDestroy
void GlobalNamespace::PatternFightSongController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightSongController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PatternFightSongController.Update
void GlobalNamespace::PatternFightSongController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightSongController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PatternFightSongController.HandleNoteWasCut
void GlobalNamespace::PatternFightSongController::HandleNoteWasCut(GlobalNamespace::NoteController* noteController, ByRef<GlobalNamespace::NoteCutInfo> noteCutInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightSongController::HandleNoteWasCut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteWasCut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController), ::il2cpp_utils::ExtractType(noteCutInfo)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteController, byref(noteCutInfo));
}
// Autogenerated method: PatternFightSongController.NoteWasMissed
void GlobalNamespace::PatternFightSongController::NoteWasMissed(GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightSongController::NoteWasMissed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NoteWasMissed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated method: PatternFightSongController.CreatePattern
void GlobalNamespace::PatternFightSongController::CreatePattern(float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightSongController::CreatePattern");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePattern", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, time);
}
// Autogenerated method: PatternFightSongController.StartSong
void GlobalNamespace::PatternFightSongController::StartSong(float startTimeOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightSongController::StartSong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startTimeOffset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, startTimeOffset);
}
// Autogenerated method: PatternFightSongController.StopSong
void GlobalNamespace::PatternFightSongController::StopSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightSongController::StopSong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PatternFightSongController.PauseSong
void GlobalNamespace::PatternFightSongController::PauseSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightSongController::PauseSong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PauseSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PatternFightSongController.ResumeSong
void GlobalNamespace::PatternFightSongController::ResumeSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightSongController::ResumeSong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResumeSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PatternFightSongController/GameplayPhase
#include "GlobalNamespace/PatternFightSongController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PatternFightSongController/GameplayPhase Undefined
GlobalNamespace::PatternFightSongController::GameplayPhase GlobalNamespace::PatternFightSongController::GameplayPhase::_get_Undefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightSongController::GameplayPhase::_get_Undefined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PatternFightSongController::GameplayPhase>("", "PatternFightSongController/GameplayPhase", "Undefined"));
}
// Autogenerated static field setter
// Set static field: static public PatternFightSongController/GameplayPhase Undefined
void GlobalNamespace::PatternFightSongController::GameplayPhase::_set_Undefined(GlobalNamespace::PatternFightSongController::GameplayPhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightSongController::GameplayPhase::_set_Undefined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PatternFightSongController/GameplayPhase", "Undefined", value));
}
// Autogenerated static field getter
// Get static field: static public PatternFightSongController/GameplayPhase Start
GlobalNamespace::PatternFightSongController::GameplayPhase GlobalNamespace::PatternFightSongController::GameplayPhase::_get_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightSongController::GameplayPhase::_get_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PatternFightSongController::GameplayPhase>("", "PatternFightSongController/GameplayPhase", "Start"));
}
// Autogenerated static field setter
// Set static field: static public PatternFightSongController/GameplayPhase Start
void GlobalNamespace::PatternFightSongController::GameplayPhase::_set_Start(GlobalNamespace::PatternFightSongController::GameplayPhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightSongController::GameplayPhase::_set_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PatternFightSongController/GameplayPhase", "Start", value));
}
// Autogenerated static field getter
// Get static field: static public PatternFightSongController/GameplayPhase DefineThisPlayerPattern
GlobalNamespace::PatternFightSongController::GameplayPhase GlobalNamespace::PatternFightSongController::GameplayPhase::_get_DefineThisPlayerPattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightSongController::GameplayPhase::_get_DefineThisPlayerPattern");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PatternFightSongController::GameplayPhase>("", "PatternFightSongController/GameplayPhase", "DefineThisPlayerPattern"));
}
// Autogenerated static field setter
// Set static field: static public PatternFightSongController/GameplayPhase DefineThisPlayerPattern
void GlobalNamespace::PatternFightSongController::GameplayPhase::_set_DefineThisPlayerPattern(GlobalNamespace::PatternFightSongController::GameplayPhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightSongController::GameplayPhase::_set_DefineThisPlayerPattern");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PatternFightSongController/GameplayPhase", "DefineThisPlayerPattern", value));
}
// Autogenerated static field getter
// Get static field: static public PatternFightSongController/GameplayPhase ReplayThisPlayerPattern
GlobalNamespace::PatternFightSongController::GameplayPhase GlobalNamespace::PatternFightSongController::GameplayPhase::_get_ReplayThisPlayerPattern() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightSongController::GameplayPhase::_get_ReplayThisPlayerPattern");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PatternFightSongController::GameplayPhase>("", "PatternFightSongController/GameplayPhase", "ReplayThisPlayerPattern"));
}
// Autogenerated static field setter
// Set static field: static public PatternFightSongController/GameplayPhase ReplayThisPlayerPattern
void GlobalNamespace::PatternFightSongController::GameplayPhase::_set_ReplayThisPlayerPattern(GlobalNamespace::PatternFightSongController::GameplayPhase value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightSongController::GameplayPhase::_set_ReplayThisPlayerPattern");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PatternFightSongController/GameplayPhase", "ReplayThisPlayerPattern", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::PatternFightSongController::GameplayPhase::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightSongController::GameplayPhase::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SongController
#include "GlobalNamespace/SongController.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action songDidFinishEvent
System::Action*& GlobalNamespace::SongController::dyn_songDidFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongController::dyn_songDidFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "songDidFinishEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SongController.add_songDidFinishEvent
void GlobalNamespace::SongController::add_songDidFinishEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongController::add_songDidFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_songDidFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SongController.remove_songDidFinishEvent
void GlobalNamespace::SongController::remove_songDidFinishEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongController::remove_songDidFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_songDidFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SongController.SendSongDidFinishEvent
void GlobalNamespace::SongController::SendSongDidFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongController::SendSongDidFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SendSongDidFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongController.StopSong
void GlobalNamespace::SongController::StopSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongController::StopSong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongController.PauseSong
void GlobalNamespace::SongController::PauseSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongController::PauseSong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PauseSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SongController.ResumeSong
void GlobalNamespace::SongController::ResumeSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SongController::ResumeSong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResumeSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IntroTutorialController
#include "GlobalNamespace/IntroTutorialController.hpp"
// Including type: IntroTutorialController/<ShowFinishAnimationCoroutine>d__22
#include "GlobalNamespace/IntroTutorialController_-ShowFinishAnimationCoroutine-d__22.hpp"
// Including type: IntroTutorialRing
#include "GlobalNamespace/IntroTutorialRing.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: BloomFogEnvironmentParams
#include "GlobalNamespace/BloomFogEnvironmentParams.hpp"
// Including type: BloomFogParamsAnimator
#include "GlobalNamespace/BloomFogParamsAnimator.hpp"
// Including type: IGamePause
#include "GlobalNamespace/IGamePause.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private IntroTutorialRing _redRing
GlobalNamespace::IntroTutorialRing*& GlobalNamespace::IntroTutorialController::dyn__redRing() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialController::dyn__redRing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_redRing"))->offset;
  return *reinterpret_cast<GlobalNamespace::IntroTutorialRing**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IntroTutorialRing _blueRing
GlobalNamespace::IntroTutorialRing*& GlobalNamespace::IntroTutorialController::dyn__blueRing() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialController::dyn__blueRing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blueRing"))->offset;
  return *reinterpret_cast<GlobalNamespace::IntroTutorialRing**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _redRingWrapper
UnityEngine::GameObject*& GlobalNamespace::IntroTutorialController::dyn__redRingWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialController::dyn__redRingWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_redRingWrapper"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _blueRingWrapper
UnityEngine::GameObject*& GlobalNamespace::IntroTutorialController::dyn__blueRingWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialController::dyn__blueRingWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blueRingWrapper"))->offset;
  return *reinterpret_cast<UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CanvasGroup _textCanvasGroup
UnityEngine::CanvasGroup*& GlobalNamespace::IntroTutorialController::dyn__textCanvasGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialController::dyn__textCanvasGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textCanvasGroup"))->offset;
  return *reinterpret_cast<UnityEngine::CanvasGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem _shockWavePS
UnityEngine::ParticleSystem*& GlobalNamespace::IntroTutorialController::dyn__shockWavePS() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialController::dyn__shockWavePS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shockWavePS"))->offset;
  return *reinterpret_cast<UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BloomFogEnvironmentParams _finishForParams
GlobalNamespace::BloomFogEnvironmentParams*& GlobalNamespace::IntroTutorialController::dyn__finishForParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialController::dyn__finishForParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_finishForParams"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomFogEnvironmentParams**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BloomFogParamsAnimator _bloomFogAnimator
GlobalNamespace::BloomFogParamsAnimator*& GlobalNamespace::IntroTutorialController::dyn__bloomFogAnimator() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialController::dyn__bloomFogAnimator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bloomFogAnimator"))->offset;
  return *reinterpret_cast<GlobalNamespace::BloomFogParamsAnimator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IGamePause _gamePause
GlobalNamespace::IGamePause*& GlobalNamespace::IntroTutorialController::dyn__gamePause() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialController::dyn__gamePause");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gamePause"))->offset;
  return *reinterpret_cast<GlobalNamespace::IGamePause**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action introTutorialDidFinishEvent
System::Action*& GlobalNamespace::IntroTutorialController::dyn_introTutorialDidFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialController::dyn_introTutorialDidFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "introTutorialDidFinishEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _showingFinishAnimation
bool& GlobalNamespace::IntroTutorialController::dyn__showingFinishAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialController::dyn__showingFinishAnimation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_showingFinishAnimation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _redRingWrapperActive
bool& GlobalNamespace::IntroTutorialController::dyn__redRingWrapperActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialController::dyn__redRingWrapperActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_redRingWrapperActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _blueRingWrapperActive
bool& GlobalNamespace::IntroTutorialController::dyn__blueRingWrapperActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialController::dyn__blueRingWrapperActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blueRingWrapperActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: IntroTutorialController.add_introTutorialDidFinishEvent
void GlobalNamespace::IntroTutorialController::add_introTutorialDidFinishEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialController::add_introTutorialDidFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_introTutorialDidFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IntroTutorialController.remove_introTutorialDidFinishEvent
void GlobalNamespace::IntroTutorialController::remove_introTutorialDidFinishEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialController::remove_introTutorialDidFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_introTutorialDidFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IntroTutorialController.Start
void GlobalNamespace::IntroTutorialController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IntroTutorialController.OnDestroy
void GlobalNamespace::IntroTutorialController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IntroTutorialController.Update
void GlobalNamespace::IntroTutorialController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IntroTutorialController.CleanUp
void GlobalNamespace::IntroTutorialController::CleanUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialController::CleanUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IntroTutorialController.HandleGameDidPause
void GlobalNamespace::IntroTutorialController::HandleGameDidPause() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialController::HandleGameDidPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameDidPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IntroTutorialController.HandlegameDidResume
void GlobalNamespace::IntroTutorialController::HandlegameDidResume() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialController::HandlegameDidResume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlegameDidResume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IntroTutorialController.ShowFinishAnimation
void GlobalNamespace::IntroTutorialController::ShowFinishAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialController::ShowFinishAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowFinishAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IntroTutorialController.ShowFinishAnimationCoroutine
System::Collections::IEnumerator* GlobalNamespace::IntroTutorialController::ShowFinishAnimationCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialController::ShowFinishAnimationCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowFinishAnimationCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: IntroTutorialController.SetFinishAnimationParams
void GlobalNamespace::IntroTutorialController::SetFinishAnimationParams(float progress) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialController::SetFinishAnimationParams");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetFinishAnimationParams", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(progress)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, progress);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: IntroTutorialController/<ShowFinishAnimationCoroutine>d__22
#include "GlobalNamespace/IntroTutorialController_-ShowFinishAnimationCoroutine-d__22.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::IntroTutorialController::$ShowFinishAnimationCoroutine$d__22::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialController::$ShowFinishAnimationCoroutine$d__22::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::IntroTutorialController::$ShowFinishAnimationCoroutine$d__22::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialController::$ShowFinishAnimationCoroutine$d__22::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public IntroTutorialController <>4__this
GlobalNamespace::IntroTutorialController*& GlobalNamespace::IntroTutorialController::$ShowFinishAnimationCoroutine$d__22::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialController::$ShowFinishAnimationCoroutine$d__22::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::IntroTutorialController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <elapsedTime>5__2
float& GlobalNamespace::IntroTutorialController::$ShowFinishAnimationCoroutine$d__22::dyn_$elapsedTime$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialController::$ShowFinishAnimationCoroutine$d__22::dyn_$elapsedTime$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<elapsedTime>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <duration>5__3
float& GlobalNamespace::IntroTutorialController::$ShowFinishAnimationCoroutine$d__22::dyn_$duration$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialController::$ShowFinishAnimationCoroutine$d__22::dyn_$duration$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<duration>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: IntroTutorialController/<ShowFinishAnimationCoroutine>d__22.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::IntroTutorialController::$ShowFinishAnimationCoroutine$d__22::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialController::$ShowFinishAnimationCoroutine$d__22::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: IntroTutorialController/<ShowFinishAnimationCoroutine>d__22.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::IntroTutorialController::$ShowFinishAnimationCoroutine$d__22::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialController::$ShowFinishAnimationCoroutine$d__22::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: IntroTutorialController/<ShowFinishAnimationCoroutine>d__22.System.IDisposable.Dispose
void GlobalNamespace::IntroTutorialController::$ShowFinishAnimationCoroutine$d__22::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialController::$ShowFinishAnimationCoroutine$d__22::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IntroTutorialController/<ShowFinishAnimationCoroutine>d__22.MoveNext
bool GlobalNamespace::IntroTutorialController::$ShowFinishAnimationCoroutine$d__22::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialController::$ShowFinishAnimationCoroutine$d__22::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IntroTutorialController/<ShowFinishAnimationCoroutine>d__22.System.Collections.IEnumerator.Reset
void GlobalNamespace::IntroTutorialController::$ShowFinishAnimationCoroutine$d__22::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialController::$ShowFinishAnimationCoroutine$d__22::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IntroTutorialRing
#include "GlobalNamespace/IntroTutorialRing.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: ColorManager
#include "GlobalNamespace/ColorManager.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image[] _progressImages
::ArrayW<UnityEngine::UI::Image*>& GlobalNamespace::IntroTutorialRing::dyn__progressImages() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialRing::dyn__progressImages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_progressImages"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::UI::Image*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SaberType _saberType
GlobalNamespace::SaberType& GlobalNamespace::IntroTutorialRing::dyn__saberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialRing::dyn__saberType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberType"))->offset;
  return *reinterpret_cast<GlobalNamespace::SaberType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem _particleSystem
UnityEngine::ParticleSystem*& GlobalNamespace::IntroTutorialRing::dyn__particleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialRing::dyn__particleSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_particleSystem"))->offset;
  return *reinterpret_cast<UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CanvasGroup _canvasGroup
UnityEngine::CanvasGroup*& GlobalNamespace::IntroTutorialRing::dyn__canvasGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialRing::dyn__canvasGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvasGroup"))->offset;
  return *reinterpret_cast<UnityEngine::CanvasGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _activationDuration
float& GlobalNamespace::IntroTutorialRing::dyn__activationDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialRing::dyn__activationDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activationDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image[] _ringGLowImages
::ArrayW<UnityEngine::UI::Image*>& GlobalNamespace::IntroTutorialRing::dyn__ringGLowImages() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialRing::dyn__ringGLowImages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ringGLowImages"))->offset;
  return *reinterpret_cast<::ArrayW<UnityEngine::UI::Image*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ColorManager _colorManager
GlobalNamespace::ColorManager*& GlobalNamespace::IntroTutorialRing::dyn__colorManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialRing::dyn__colorManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _highlighted
bool& GlobalNamespace::IntroTutorialRing::dyn__highlighted() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialRing::dyn__highlighted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlighted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _emitNextParticleTimer
float& GlobalNamespace::IntroTutorialRing::dyn__emitNextParticleTimer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialRing::dyn__emitNextParticleTimer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_emitNextParticleTimer"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _activationProgress
float& GlobalNamespace::IntroTutorialRing::dyn__activationProgress() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialRing::dyn__activationProgress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activationProgress"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.HashSet`1<SaberType> _sabersInside
System::Collections::Generic::HashSet_1<GlobalNamespace::SaberType>*& GlobalNamespace::IntroTutorialRing::dyn__sabersInside() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialRing::dyn__sabersInside");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sabersInside"))->offset;
  return *reinterpret_cast<System::Collections::Generic::HashSet_1<GlobalNamespace::SaberType>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _sabersInsideAfterOnEnable
bool& GlobalNamespace::IntroTutorialRing::dyn__sabersInsideAfterOnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialRing::dyn__sabersInsideAfterOnEnable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sabersInsideAfterOnEnable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: IntroTutorialRing.set_alpha
void GlobalNamespace::IntroTutorialRing::set_alpha(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialRing::set_alpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_alpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IntroTutorialRing.get_fullyActivated
bool GlobalNamespace::IntroTutorialRing::get_fullyActivated() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialRing::get_fullyActivated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fullyActivated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: IntroTutorialRing.get_saberType
GlobalNamespace::SaberType GlobalNamespace::IntroTutorialRing::get_saberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialRing::get_saberType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_saberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SaberType, false>(this, ___internal__method);
}
// Autogenerated method: IntroTutorialRing.set_saberType
void GlobalNamespace::IntroTutorialRing::set_saberType(GlobalNamespace::SaberType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialRing::set_saberType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_saberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: IntroTutorialRing.Start
void GlobalNamespace::IntroTutorialRing::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialRing::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IntroTutorialRing.OnEnable
void GlobalNamespace::IntroTutorialRing::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialRing::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IntroTutorialRing.Update
void GlobalNamespace::IntroTutorialRing::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialRing::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: IntroTutorialRing.SetProgressImagesfillAmount
void GlobalNamespace::IntroTutorialRing::SetProgressImagesfillAmount(float fillAmount) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialRing::SetProgressImagesfillAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetProgressImagesfillAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fillAmount)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, fillAmount);
}
// Autogenerated method: IntroTutorialRing.OnTriggerEnter
void GlobalNamespace::IntroTutorialRing::OnTriggerEnter(UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialRing::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: IntroTutorialRing.OnTriggerExit
void GlobalNamespace::IntroTutorialRing::OnTriggerExit(UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialRing::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: IntroTutorialRing.OnTriggerStay
void GlobalNamespace::IntroTutorialRing::OnTriggerStay(UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::IntroTutorialRing::OnTriggerStay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerStay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TextFadeTransitions
#include "GlobalNamespace/TextFadeTransitions.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _textLabel
TMPro::TextMeshProUGUI*& GlobalNamespace::TextFadeTransitions::dyn__textLabel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextFadeTransitions::dyn__textLabel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textLabel"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CanvasGroup _canvasGroup
UnityEngine::CanvasGroup*& GlobalNamespace::TextFadeTransitions::dyn__canvasGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextFadeTransitions::dyn__canvasGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvasGroup"))->offset;
  return *reinterpret_cast<UnityEngine::CanvasGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _fadeDuration
float& GlobalNamespace::TextFadeTransitions::dyn__fadeDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextFadeTransitions::dyn__fadeDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TextFadeTransitions/State _state
GlobalNamespace::TextFadeTransitions::State& GlobalNamespace::TextFadeTransitions::dyn__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextFadeTransitions::dyn__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_state"))->offset;
  return *reinterpret_cast<GlobalNamespace::TextFadeTransitions::State*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String _nextText
::Il2CppString*& GlobalNamespace::TextFadeTransitions::dyn__nextText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextFadeTransitions::dyn__nextText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_nextText"))->offset;
  return *reinterpret_cast<::Il2CppString**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _fade
float& GlobalNamespace::TextFadeTransitions::dyn__fade() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextFadeTransitions::dyn__fade");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fade"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TextFadeTransitions.Awake
void GlobalNamespace::TextFadeTransitions::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextFadeTransitions::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TextFadeTransitions.Update
void GlobalNamespace::TextFadeTransitions::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextFadeTransitions::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TextFadeTransitions.RefreshState
void GlobalNamespace::TextFadeTransitions::RefreshState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextFadeTransitions::RefreshState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TextFadeTransitions.RefreshTextAlpha
void GlobalNamespace::TextFadeTransitions::RefreshTextAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextFadeTransitions::RefreshTextAlpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshTextAlpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TextFadeTransitions.ShowText
void GlobalNamespace::TextFadeTransitions::ShowText(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextFadeTransitions::ShowText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TextFadeTransitions/State
#include "GlobalNamespace/TextFadeTransitions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TextFadeTransitions/State NotInTransition
GlobalNamespace::TextFadeTransitions::State GlobalNamespace::TextFadeTransitions::State::_get_NotInTransition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextFadeTransitions::State::_get_NotInTransition");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::TextFadeTransitions::State>("", "TextFadeTransitions/State", "NotInTransition"));
}
// Autogenerated static field setter
// Set static field: static public TextFadeTransitions/State NotInTransition
void GlobalNamespace::TextFadeTransitions::State::_set_NotInTransition(GlobalNamespace::TextFadeTransitions::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextFadeTransitions::State::_set_NotInTransition");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TextFadeTransitions/State", "NotInTransition", value));
}
// Autogenerated static field getter
// Get static field: static public TextFadeTransitions/State FadingOut
GlobalNamespace::TextFadeTransitions::State GlobalNamespace::TextFadeTransitions::State::_get_FadingOut() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextFadeTransitions::State::_get_FadingOut");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::TextFadeTransitions::State>("", "TextFadeTransitions/State", "FadingOut"));
}
// Autogenerated static field setter
// Set static field: static public TextFadeTransitions/State FadingOut
void GlobalNamespace::TextFadeTransitions::State::_set_FadingOut(GlobalNamespace::TextFadeTransitions::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextFadeTransitions::State::_set_FadingOut");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TextFadeTransitions/State", "FadingOut", value));
}
// Autogenerated static field getter
// Get static field: static public TextFadeTransitions/State FadingIn
GlobalNamespace::TextFadeTransitions::State GlobalNamespace::TextFadeTransitions::State::_get_FadingIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextFadeTransitions::State::_get_FadingIn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::TextFadeTransitions::State>("", "TextFadeTransitions/State", "FadingIn"));
}
// Autogenerated static field setter
// Set static field: static public TextFadeTransitions/State FadingIn
void GlobalNamespace::TextFadeTransitions::State::_set_FadingIn(GlobalNamespace::TextFadeTransitions::State value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextFadeTransitions::State::_set_FadingIn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TextFadeTransitions/State", "FadingIn", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::TextFadeTransitions::State::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TextFadeTransitions::State::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialController
#include "GlobalNamespace/TutorialController.hpp"
// Including type: TutorialController/<OutroCoroutine>d__13
#include "GlobalNamespace/TutorialController_-OutroCoroutine-d__13.hpp"
// Including type: TutorialSongController
#include "GlobalNamespace/TutorialSongController.hpp"
// Including type: IntroTutorialController
#include "GlobalNamespace/IntroTutorialController.hpp"
// Including type: AudioFading
#include "GlobalNamespace/AudioFading.hpp"
// Including type: TutorialScenesTransitionSetupDataSO
#include "GlobalNamespace/TutorialScenesTransitionSetupDataSO.hpp"
// Including type: Signal
#include "GlobalNamespace/Signal.hpp"
// Including type: PauseController
#include "GlobalNamespace/PauseController.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TutorialSongController _tutorialSongController
GlobalNamespace::TutorialSongController*& GlobalNamespace::TutorialController::dyn__tutorialSongController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialController::dyn__tutorialSongController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tutorialSongController"))->offset;
  return *reinterpret_cast<GlobalNamespace::TutorialSongController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IntroTutorialController _introTutorialController
GlobalNamespace::IntroTutorialController*& GlobalNamespace::TutorialController::dyn__introTutorialController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialController::dyn__introTutorialController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_introTutorialController"))->offset;
  return *reinterpret_cast<GlobalNamespace::IntroTutorialController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private AudioFading _audioFading
GlobalNamespace::AudioFading*& GlobalNamespace::TutorialController::dyn__audioFading() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialController::dyn__audioFading");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioFading"))->offset;
  return *reinterpret_cast<GlobalNamespace::AudioFading**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TutorialScenesTransitionSetupDataSO _tutorialSceneSetupData
GlobalNamespace::TutorialScenesTransitionSetupDataSO*& GlobalNamespace::TutorialController::dyn__tutorialSceneSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialController::dyn__tutorialSceneSetupData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tutorialSceneSetupData"))->offset;
  return *reinterpret_cast<GlobalNamespace::TutorialScenesTransitionSetupDataSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Signal _tutorialIntroStartedSignal
GlobalNamespace::Signal*& GlobalNamespace::TutorialController::dyn__tutorialIntroStartedSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialController::dyn__tutorialIntroStartedSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tutorialIntroStartedSignal"))->offset;
  return *reinterpret_cast<GlobalNamespace::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Signal _tutorialFinishedSignal
GlobalNamespace::Signal*& GlobalNamespace::TutorialController::dyn__tutorialFinishedSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialController::dyn__tutorialFinishedSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tutorialFinishedSignal"))->offset;
  return *reinterpret_cast<GlobalNamespace::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private PauseController _pauseController
GlobalNamespace::PauseController*& GlobalNamespace::TutorialController::dyn__pauseController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialController::dyn__pauseController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pauseController"))->offset;
  return *reinterpret_cast<GlobalNamespace::PauseController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _paused
bool& GlobalNamespace::TutorialController::dyn__paused() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialController::dyn__paused");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_paused"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _doingOutroTransition
bool& GlobalNamespace::TutorialController::dyn__doingOutroTransition() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialController::dyn__doingOutroTransition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_doingOutroTransition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TutorialController.Start
void GlobalNamespace::TutorialController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialController.OnDestroy
void GlobalNamespace::TutorialController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialController.HandleIntroTutorialDidFinishEvent
void GlobalNamespace::TutorialController::HandleIntroTutorialDidFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialController::HandleIntroTutorialDidFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleIntroTutorialDidFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialController.HandleTutorialSongControllerSongDidFinishEvent
void GlobalNamespace::TutorialController::HandleTutorialSongControllerSongDidFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialController::HandleTutorialSongControllerSongDidFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleTutorialSongControllerSongDidFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialController.OutroCoroutine
System::Collections::IEnumerator* GlobalNamespace::TutorialController::OutroCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialController::OutroCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OutroCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialController.HandlePauseControllerCanPause
void GlobalNamespace::TutorialController::HandlePauseControllerCanPause(System::Action_1<bool>* canPause) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialController::HandlePauseControllerCanPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePauseControllerCanPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(canPause)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, canPause);
}
// Autogenerated method: TutorialController.HandlePauseControllerDidPause
void GlobalNamespace::TutorialController::HandlePauseControllerDidPause() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialController::HandlePauseControllerDidPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePauseControllerDidPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialController.HandlePauseControllerDidResume
void GlobalNamespace::TutorialController::HandlePauseControllerDidResume() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialController::HandlePauseControllerDidResume");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePauseControllerDidResume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TutorialController/<OutroCoroutine>d__13
#include "GlobalNamespace/TutorialController_-OutroCoroutine-d__13.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::TutorialController::$OutroCoroutine$d__13::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialController::$OutroCoroutine$d__13::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::TutorialController::$OutroCoroutine$d__13::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialController::$OutroCoroutine$d__13::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TutorialController <>4__this
GlobalNamespace::TutorialController*& GlobalNamespace::TutorialController::$OutroCoroutine$d__13::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialController::$OutroCoroutine$d__13::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::TutorialController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TutorialController/<OutroCoroutine>d__13.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TutorialController::$OutroCoroutine$d__13::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialController::$OutroCoroutine$d__13::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialController/<OutroCoroutine>d__13.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TutorialController::$OutroCoroutine$d__13::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialController::$OutroCoroutine$d__13::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TutorialController/<OutroCoroutine>d__13.System.IDisposable.Dispose
void GlobalNamespace::TutorialController::$OutroCoroutine$d__13::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialController::$OutroCoroutine$d__13::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialController/<OutroCoroutine>d__13.MoveNext
bool GlobalNamespace::TutorialController::$OutroCoroutine$d__13::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialController::$OutroCoroutine$d__13::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TutorialController/<OutroCoroutine>d__13.System.Collections.IEnumerator.Reset
void GlobalNamespace::TutorialController::$OutroCoroutine$d__13::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialController::$OutroCoroutine$d__13::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialNoteCutEffectSpawner
#include "GlobalNamespace/TutorialNoteCutEffectSpawner.hpp"
// Including type: FlyingTextSpawner
#include "GlobalNamespace/FlyingTextSpawner.hpp"
// Including type: BeatmapObjectManager
#include "GlobalNamespace/BeatmapObjectManager.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private FlyingTextSpawner _failFlyingTextSpawner
GlobalNamespace::FlyingTextSpawner*& GlobalNamespace::TutorialNoteCutEffectSpawner::dyn__failFlyingTextSpawner() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialNoteCutEffectSpawner::dyn__failFlyingTextSpawner");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_failFlyingTextSpawner"))->offset;
  return *reinterpret_cast<GlobalNamespace::FlyingTextSpawner**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapObjectManager _beatmapObjectManager
GlobalNamespace::BeatmapObjectManager*& GlobalNamespace::TutorialNoteCutEffectSpawner::dyn__beatmapObjectManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialNoteCutEffectSpawner::dyn__beatmapObjectManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapObjectManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TutorialNoteCutEffectSpawner.Start
void GlobalNamespace::TutorialNoteCutEffectSpawner::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialNoteCutEffectSpawner::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialNoteCutEffectSpawner.OnDestroy
void GlobalNamespace::TutorialNoteCutEffectSpawner::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialNoteCutEffectSpawner::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialNoteCutEffectSpawner.HandleNoteWasCut
void GlobalNamespace::TutorialNoteCutEffectSpawner::HandleNoteWasCut(GlobalNamespace::NoteController* noteController, ByRef<GlobalNamespace::NoteCutInfo> noteCutInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialNoteCutEffectSpawner::HandleNoteWasCut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteWasCut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController), ::il2cpp_utils::ExtractType(noteCutInfo)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteController, byref(noteCutInfo));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialPause
#include "GlobalNamespace/TutorialPause.hpp"
// Including type: TutorialSongController
#include "GlobalNamespace/TutorialSongController.hpp"
// Including type: SaberManager
#include "GlobalNamespace/SaberManager.hpp"
// Including type: AudioListenerController
#include "GlobalNamespace/AudioListenerController.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly TutorialSongController _tutorialSongController
GlobalNamespace::TutorialSongController*& GlobalNamespace::TutorialPause::dyn__tutorialSongController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialPause::dyn__tutorialSongController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tutorialSongController"))->offset;
  return *reinterpret_cast<GlobalNamespace::TutorialSongController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SaberManager _saberManager
GlobalNamespace::SaberManager*& GlobalNamespace::TutorialPause::dyn__saberManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialPause::dyn__saberManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::SaberManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly AudioListenerController _audioListenerController
GlobalNamespace::AudioListenerController*& GlobalNamespace::TutorialPause::dyn__audioListenerController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialPause::dyn__audioListenerController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioListenerController"))->offset;
  return *reinterpret_cast<GlobalNamespace::AudioListenerController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action didPauseEvent
System::Action*& GlobalNamespace::TutorialPause::dyn_didPauseEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialPause::dyn_didPauseEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didPauseEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action willResumeEvent
System::Action*& GlobalNamespace::TutorialPause::dyn_willResumeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialPause::dyn_willResumeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "willResumeEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action didResumeEvent
System::Action*& GlobalNamespace::TutorialPause::dyn_didResumeEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialPause::dyn_didResumeEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didResumeEvent"))->offset;
  return *reinterpret_cast<System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _pause
bool& GlobalNamespace::TutorialPause::dyn__pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialPause::dyn__pause");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pause"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TutorialPause.add_didPauseEvent
void GlobalNamespace::TutorialPause::add_didPauseEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialPause::add_didPauseEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didPauseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TutorialPause.remove_didPauseEvent
void GlobalNamespace::TutorialPause::remove_didPauseEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialPause::remove_didPauseEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didPauseEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TutorialPause.add_willResumeEvent
void GlobalNamespace::TutorialPause::add_willResumeEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialPause::add_willResumeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_willResumeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TutorialPause.remove_willResumeEvent
void GlobalNamespace::TutorialPause::remove_willResumeEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialPause::remove_willResumeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_willResumeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TutorialPause.add_didResumeEvent
void GlobalNamespace::TutorialPause::add_didResumeEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialPause::add_didResumeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didResumeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TutorialPause.remove_didResumeEvent
void GlobalNamespace::TutorialPause::remove_didResumeEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialPause::remove_didResumeEvent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didResumeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TutorialPause.Pause
void GlobalNamespace::TutorialPause::Pause() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialPause::Pause");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Pause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialPause.WillResume
void GlobalNamespace::TutorialPause::WillResume() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialPause::WillResume");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WillResume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialPause.Resume
void GlobalNamespace::TutorialPause::Resume() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialPause::Resume");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Resume", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialSongController
#include "GlobalNamespace/TutorialSongController.hpp"
// Including type: TutorialSongController/InitData
#include "GlobalNamespace/TutorialSongController_InitData.hpp"
// Including type: TutorialSongController/TutorialObjectSpawnData
#include "GlobalNamespace/TutorialSongController_TutorialObjectSpawnData.hpp"
// Including type: TutorialSongController/TutorialJumpingNoteSpawnData
#include "GlobalNamespace/TutorialSongController_TutorialJumpingNoteSpawnData.hpp"
// Including type: TutorialSongController/TutorialBasicNoteSpawnData
#include "GlobalNamespace/TutorialSongController_TutorialBasicNoteSpawnData.hpp"
// Including type: TutorialSongController/TutorialBombNoteSpawnData
#include "GlobalNamespace/TutorialSongController_TutorialBombNoteSpawnData.hpp"
// Including type: TutorialSongController/TutorialObstacleSpawnData
#include "GlobalNamespace/TutorialSongController_TutorialObstacleSpawnData.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: Signal
#include "GlobalNamespace/Signal.hpp"
// Including type: BeatmapObjectManager
#include "GlobalNamespace/BeatmapObjectManager.hpp"
// Including type: IBeatmapObjectCallbackController
#include "GlobalNamespace/IBeatmapObjectCallbackController.hpp"
// Including type: BeatmapData
#include "GlobalNamespace/BeatmapData.hpp"
// Including type: NoteController
#include "GlobalNamespace/NoteController.hpp"
// Including type: NoteCutInfo
#include "GlobalNamespace/NoteCutInfo.hpp"
// Including type: ObstacleController
#include "GlobalNamespace/ObstacleController.hpp"
// Including type: ObstacleData
#include "GlobalNamespace/ObstacleData.hpp"
// Including type: NoteData
#include "GlobalNamespace/NoteData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private AudioTimeSyncController _audioTimeSyncController
GlobalNamespace::AudioTimeSyncController*& GlobalNamespace::TutorialSongController::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<GlobalNamespace::AudioTimeSyncController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _startWaitTimeInBeats
int& GlobalNamespace::TutorialSongController::dyn__startWaitTimeInBeats() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::dyn__startWaitTimeInBeats");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startWaitTimeInBeats"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _numberOfBeatsToSnap
int& GlobalNamespace::TutorialSongController::dyn__numberOfBeatsToSnap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::dyn__numberOfBeatsToSnap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_numberOfBeatsToSnap"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _obstacleDurationInBeats
int& GlobalNamespace::TutorialSongController::dyn__obstacleDurationInBeats() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::dyn__obstacleDurationInBeats");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_obstacleDurationInBeats"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Signal _noteCuttingTutorialPartDidStartSignal
GlobalNamespace::Signal*& GlobalNamespace::TutorialSongController::dyn__noteCuttingTutorialPartDidStartSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::dyn__noteCuttingTutorialPartDidStartSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteCuttingTutorialPartDidStartSignal"))->offset;
  return *reinterpret_cast<GlobalNamespace::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Signal _noteCuttingInAnyDirectionDidStartSignal
GlobalNamespace::Signal*& GlobalNamespace::TutorialSongController::dyn__noteCuttingInAnyDirectionDidStartSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::dyn__noteCuttingInAnyDirectionDidStartSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteCuttingInAnyDirectionDidStartSignal"))->offset;
  return *reinterpret_cast<GlobalNamespace::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Signal _bombCuttingTutorialPartDidStartSignal
GlobalNamespace::Signal*& GlobalNamespace::TutorialSongController::dyn__bombCuttingTutorialPartDidStartSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::dyn__bombCuttingTutorialPartDidStartSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bombCuttingTutorialPartDidStartSignal"))->offset;
  return *reinterpret_cast<GlobalNamespace::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Signal _leftObstacleTutorialPartDidStartSignal
GlobalNamespace::Signal*& GlobalNamespace::TutorialSongController::dyn__leftObstacleTutorialPartDidStartSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::dyn__leftObstacleTutorialPartDidStartSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftObstacleTutorialPartDidStartSignal"))->offset;
  return *reinterpret_cast<GlobalNamespace::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Signal _rightObstacleTutorialPartDidStartSignal
GlobalNamespace::Signal*& GlobalNamespace::TutorialSongController::dyn__rightObstacleTutorialPartDidStartSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::dyn__rightObstacleTutorialPartDidStartSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightObstacleTutorialPartDidStartSignal"))->offset;
  return *reinterpret_cast<GlobalNamespace::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Signal _topObstacleTutorialPartDidStartSignal
GlobalNamespace::Signal*& GlobalNamespace::TutorialSongController::dyn__topObstacleTutorialPartDidStartSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::dyn__topObstacleTutorialPartDidStartSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_topObstacleTutorialPartDidStartSignal"))->offset;
  return *reinterpret_cast<GlobalNamespace::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Signal _noteWasCutOKSignal
GlobalNamespace::Signal*& GlobalNamespace::TutorialSongController::dyn__noteWasCutOKSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::dyn__noteWasCutOKSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteWasCutOKSignal"))->offset;
  return *reinterpret_cast<GlobalNamespace::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Signal _noteWasCutTooSoonSignal
GlobalNamespace::Signal*& GlobalNamespace::TutorialSongController::dyn__noteWasCutTooSoonSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::dyn__noteWasCutTooSoonSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteWasCutTooSoonSignal"))->offset;
  return *reinterpret_cast<GlobalNamespace::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Signal _noteWasCutWithWrongColorSignal
GlobalNamespace::Signal*& GlobalNamespace::TutorialSongController::dyn__noteWasCutWithWrongColorSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::dyn__noteWasCutWithWrongColorSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteWasCutWithWrongColorSignal"))->offset;
  return *reinterpret_cast<GlobalNamespace::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Signal _noteWasCutFromDifferentDirectionSignal
GlobalNamespace::Signal*& GlobalNamespace::TutorialSongController::dyn__noteWasCutFromDifferentDirectionSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::dyn__noteWasCutFromDifferentDirectionSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteWasCutFromDifferentDirectionSignal"))->offset;
  return *reinterpret_cast<GlobalNamespace::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Signal _noteWasCutWithSlowSpeedSignal
GlobalNamespace::Signal*& GlobalNamespace::TutorialSongController::dyn__noteWasCutWithSlowSpeedSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::dyn__noteWasCutWithSlowSpeedSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteWasCutWithSlowSpeedSignal"))->offset;
  return *reinterpret_cast<GlobalNamespace::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Signal _bombWasCutSignal
GlobalNamespace::Signal*& GlobalNamespace::TutorialSongController::dyn__bombWasCutSignal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::dyn__bombWasCutSignal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bombWasCutSignal"))->offset;
  return *reinterpret_cast<GlobalNamespace::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly TutorialSongController/InitData _initData
GlobalNamespace::TutorialSongController::InitData*& GlobalNamespace::TutorialSongController::dyn__initData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::dyn__initData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initData"))->offset;
  return *reinterpret_cast<GlobalNamespace::TutorialSongController::InitData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapObjectManager _beatmapObjectManager
GlobalNamespace::BeatmapObjectManager*& GlobalNamespace::TutorialSongController::dyn__beatmapObjectManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::dyn__beatmapObjectManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapObjectManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IBeatmapObjectCallbackController _beatmapObjectCallbackController
GlobalNamespace::IBeatmapObjectCallbackController*& GlobalNamespace::TutorialSongController::dyn__beatmapObjectCallbackController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::dyn__beatmapObjectCallbackController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectCallbackController"))->offset;
  return *reinterpret_cast<GlobalNamespace::IBeatmapObjectCallbackController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _tutorialBeatmapObjectIndex
int& GlobalNamespace::TutorialSongController::dyn__tutorialBeatmapObjectIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::dyn__tutorialBeatmapObjectIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tutorialBeatmapObjectIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _prevSpawnedBeatmapObjectIndex
int& GlobalNamespace::TutorialSongController::dyn__prevSpawnedBeatmapObjectIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::dyn__prevSpawnedBeatmapObjectIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevSpawnedBeatmapObjectIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _songBpm
float& GlobalNamespace::TutorialSongController::dyn__songBpm() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::dyn__songBpm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songBpm"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapData _beatmapData
GlobalNamespace::BeatmapData*& GlobalNamespace::TutorialSongController::dyn__beatmapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::dyn__beatmapData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapData"))->offset;
  return *reinterpret_cast<GlobalNamespace::BeatmapData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TutorialSongController/TutorialObjectSpawnData[] _normalModeTutorialObjectsSpawnData
::ArrayW<GlobalNamespace::TutorialSongController::TutorialObjectSpawnData*>& GlobalNamespace::TutorialSongController::dyn__normalModeTutorialObjectsSpawnData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::dyn__normalModeTutorialObjectsSpawnData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalModeTutorialObjectsSpawnData"))->offset;
  return *reinterpret_cast<::ArrayW<GlobalNamespace::TutorialSongController::TutorialObjectSpawnData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TutorialSongController.Awake
void GlobalNamespace::TutorialSongController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialSongController.Start
void GlobalNamespace::TutorialSongController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialSongController.OnDestroy
void GlobalNamespace::TutorialSongController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialSongController.StartSong
void GlobalNamespace::TutorialSongController::StartSong(float startTimeOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::StartSong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startTimeOffset)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, startTimeOffset);
}
// Autogenerated method: TutorialSongController.HandleNoteWasCut
void GlobalNamespace::TutorialSongController::HandleNoteWasCut(GlobalNamespace::NoteController* noteController, ByRef<GlobalNamespace::NoteCutInfo> noteCutInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::HandleNoteWasCut");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteWasCut", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController), ::il2cpp_utils::ExtractType(noteCutInfo)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteController, byref(noteCutInfo));
}
// Autogenerated method: TutorialSongController.HandleNoteWasMissed
void GlobalNamespace::TutorialSongController::HandleNoteWasMissed(GlobalNamespace::NoteController* noteController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::HandleNoteWasMissed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteWasMissed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteController)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteController);
}
// Autogenerated method: TutorialSongController.HandleObstacleDidPassThreeQuartersOfMove2
void GlobalNamespace::TutorialSongController::HandleObstacleDidPassThreeQuartersOfMove2(GlobalNamespace::ObstacleController* obstacleController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::HandleObstacleDidPassThreeQuartersOfMove2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleObstacleDidPassThreeQuartersOfMove2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obstacleController)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obstacleController);
}
// Autogenerated method: TutorialSongController.UpdateBeatmapData
void GlobalNamespace::TutorialSongController::UpdateBeatmapData(float noteTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::UpdateBeatmapData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateBeatmapData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(noteTime)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, noteTime);
}
// Autogenerated method: TutorialSongController.GetNextBeatmapObjectTime
float GlobalNamespace::TutorialSongController::GetNextBeatmapObjectTime(int beatOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::GetNextBeatmapObjectTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNextBeatmapObjectTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatOffset)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, beatOffset);
}
// Autogenerated method: TutorialSongController.CreateObstacleData
GlobalNamespace::ObstacleData* GlobalNamespace::TutorialSongController::CreateObstacleData(float time, GlobalNamespace::TutorialSongController::TutorialObstacleSpawnData* tutorialObstacleSpawnData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::CreateObstacleData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateObstacleData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(tutorialObstacleSpawnData)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ObstacleData*, false>(this, ___internal__method, time, tutorialObstacleSpawnData);
}
// Autogenerated method: TutorialSongController.CreateBasicNoteData
GlobalNamespace::NoteData* GlobalNamespace::TutorialSongController::CreateBasicNoteData(float time, GlobalNamespace::TutorialSongController::TutorialBasicNoteSpawnData* tutorialBasicNoteSpawnData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::CreateBasicNoteData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateBasicNoteData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(tutorialBasicNoteSpawnData)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NoteData*, false>(this, ___internal__method, time, tutorialBasicNoteSpawnData);
}
// Autogenerated method: TutorialSongController.CreateBombNoteData
GlobalNamespace::NoteData* GlobalNamespace::TutorialSongController::CreateBombNoteData(float time, GlobalNamespace::TutorialSongController::TutorialBombNoteSpawnData* tutorialBombNoteSpawnData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::CreateBombNoteData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateBombNoteData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(time), ::il2cpp_utils::ExtractType(tutorialBombNoteSpawnData)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::NoteData*, false>(this, ___internal__method, time, tutorialBombNoteSpawnData);
}
// Autogenerated method: TutorialSongController.StopSong
void GlobalNamespace::TutorialSongController::StopSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::StopSong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialSongController.PauseSong
void GlobalNamespace::TutorialSongController::PauseSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::PauseSong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PauseSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialSongController.ResumeSong
void GlobalNamespace::TutorialSongController::ResumeSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::ResumeSong");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResumeSong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialSongController/InitData
#include "GlobalNamespace/TutorialSongController_InitData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Single songBpm
float& GlobalNamespace::TutorialSongController::InitData::dyn_songBpm() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::InitData::dyn_songBpm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "songBpm"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialSongController/TutorialObjectSpawnData
#include "GlobalNamespace/TutorialSongController_TutorialObjectSpawnData.hpp"
// Including type: Signal
#include "GlobalNamespace/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Signal signal
GlobalNamespace::Signal*& GlobalNamespace::TutorialSongController::TutorialObjectSpawnData::dyn_signal() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::TutorialObjectSpawnData::dyn_signal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "signal"))->offset;
  return *reinterpret_cast<GlobalNamespace::Signal**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 beatOffset
int& GlobalNamespace::TutorialSongController::TutorialObjectSpawnData::dyn_beatOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::TutorialObjectSpawnData::dyn_beatOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "beatOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 firstTimeBeatOffset
int& GlobalNamespace::TutorialSongController::TutorialObjectSpawnData::dyn_firstTimeBeatOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::TutorialObjectSpawnData::dyn_firstTimeBeatOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstTimeBeatOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 lineIndex
int& GlobalNamespace::TutorialSongController::TutorialObjectSpawnData::dyn_lineIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::TutorialObjectSpawnData::dyn_lineIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lineIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialSongController/TutorialJumpingNoteSpawnData
#include "GlobalNamespace/TutorialSongController_TutorialJumpingNoteSpawnData.hpp"
// Including type: Signal
#include "GlobalNamespace/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly NoteLineLayer noteLineLayer
GlobalNamespace::NoteLineLayer& GlobalNamespace::TutorialSongController::TutorialJumpingNoteSpawnData::dyn_noteLineLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::TutorialJumpingNoteSpawnData::dyn_noteLineLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noteLineLayer"))->offset;
  return *reinterpret_cast<GlobalNamespace::NoteLineLayer*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialSongController/TutorialBasicNoteSpawnData
#include "GlobalNamespace/TutorialSongController_TutorialBasicNoteSpawnData.hpp"
// Including type: Signal
#include "GlobalNamespace/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly NoteCutDirection cutDirection
GlobalNamespace::NoteCutDirection& GlobalNamespace::TutorialSongController::TutorialBasicNoteSpawnData::dyn_cutDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::TutorialBasicNoteSpawnData::dyn_cutDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cutDirection"))->offset;
  return *reinterpret_cast<GlobalNamespace::NoteCutDirection*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly ColorType colorType
GlobalNamespace::ColorType& GlobalNamespace::TutorialSongController::TutorialBasicNoteSpawnData::dyn_colorType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::TutorialBasicNoteSpawnData::dyn_colorType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "colorType"))->offset;
  return *reinterpret_cast<GlobalNamespace::ColorType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialSongController/TutorialBombNoteSpawnData
#include "GlobalNamespace/TutorialSongController_TutorialBombNoteSpawnData.hpp"
// Including type: Signal
#include "GlobalNamespace/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialSongController/TutorialObstacleSpawnData
#include "GlobalNamespace/TutorialSongController_TutorialObstacleSpawnData.hpp"
// Including type: Signal
#include "GlobalNamespace/Signal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 width
int& GlobalNamespace::TutorialSongController::TutorialObstacleSpawnData::dyn_width() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::TutorialObstacleSpawnData::dyn_width");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "width"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly ObstacleType obstacleType
GlobalNamespace::ObstacleType& GlobalNamespace::TutorialSongController::TutorialObstacleSpawnData::dyn_obstacleType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialSongController::TutorialObstacleSpawnData::dyn_obstacleType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "obstacleType"))->offset;
  return *reinterpret_cast<GlobalNamespace::ObstacleType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AnchorIntoParent
#include "GlobalNamespace/AnchorIntoParent.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _parentTransform
UnityEngine::Transform*& GlobalNamespace::AnchorIntoParent::dyn__parentTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnchorIntoParent::dyn__parentTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_parentTransform"))->offset;
  return *reinterpret_cast<UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _positionOffset
UnityEngine::Vector3& GlobalNamespace::AnchorIntoParent::dyn__positionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnchorIntoParent::dyn__positionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positionOffset"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AnchorIntoParent.Start
void GlobalNamespace::AnchorIntoParent::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnchorIntoParent::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ConditionalActivation
#include "GlobalNamespace/ConditionalActivation.hpp"
// Including type: BoolSO
#include "GlobalNamespace/BoolSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BoolSO _value
GlobalNamespace::BoolSO*& GlobalNamespace::ConditionalActivation::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConditionalActivation::dyn__value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _activateOnFalse
bool& GlobalNamespace::ConditionalActivation::dyn__activateOnFalse() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConditionalActivation::dyn__activateOnFalse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activateOnFalse"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ConditionalActivation.Awake
void GlobalNamespace::ConditionalActivation::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConditionalActivation::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ConditionalImageMaterialSwitcher
#include "GlobalNamespace/ConditionalImageMaterialSwitcher.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: BoolSO
#include "GlobalNamespace/BoolSO.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _material0
UnityEngine::Material*& GlobalNamespace::ConditionalImageMaterialSwitcher::dyn__material0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConditionalImageMaterialSwitcher::dyn__material0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_material0"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _material1
UnityEngine::Material*& GlobalNamespace::ConditionalImageMaterialSwitcher::dyn__material1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConditionalImageMaterialSwitcher::dyn__material1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_material1"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BoolSO _value
GlobalNamespace::BoolSO*& GlobalNamespace::ConditionalImageMaterialSwitcher::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConditionalImageMaterialSwitcher::dyn__value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.UI.Image _image
UnityEngine::UI::Image*& GlobalNamespace::ConditionalImageMaterialSwitcher::dyn__image() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConditionalImageMaterialSwitcher::dyn__image");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_image"))->offset;
  return *reinterpret_cast<UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ConditionalImageMaterialSwitcher.Awake
void GlobalNamespace::ConditionalImageMaterialSwitcher::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConditionalImageMaterialSwitcher::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ConditionalMaterialSwitcher
#include "GlobalNamespace/ConditionalMaterialSwitcher.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: BoolSO
#include "GlobalNamespace/BoolSO.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _material0
UnityEngine::Material*& GlobalNamespace::ConditionalMaterialSwitcher::dyn__material0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConditionalMaterialSwitcher::dyn__material0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_material0"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _material1
UnityEngine::Material*& GlobalNamespace::ConditionalMaterialSwitcher::dyn__material1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConditionalMaterialSwitcher::dyn__material1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_material1"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BoolSO _value
GlobalNamespace::BoolSO*& GlobalNamespace::ConditionalMaterialSwitcher::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConditionalMaterialSwitcher::dyn__value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer _renderer
UnityEngine::Renderer*& GlobalNamespace::ConditionalMaterialSwitcher::dyn__renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConditionalMaterialSwitcher::dyn__renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderer"))->offset;
  return *reinterpret_cast<UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ConditionalMaterialSwitcher.Awake
void GlobalNamespace::ConditionalMaterialSwitcher::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConditionalMaterialSwitcher::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ConditionalMove
#include "GlobalNamespace/ConditionalMove.hpp"
// Including type: BoolSO
#include "GlobalNamespace/BoolSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _offset
UnityEngine::Vector3& GlobalNamespace::ConditionalMove::dyn__offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConditionalMove::dyn__offset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offset"))->offset;
  return *reinterpret_cast<UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BoolSO _value
GlobalNamespace::BoolSO*& GlobalNamespace::ConditionalMove::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConditionalMove::dyn__value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _activateOnFalse
bool& GlobalNamespace::ConditionalMove::dyn__activateOnFalse() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConditionalMove::dyn__activateOnFalse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activateOnFalse"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ConditionalMove.Awake
void GlobalNamespace::ConditionalMove::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConditionalMove::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ConditionalSpriteSwitcher
#include "GlobalNamespace/ConditionalSpriteSwitcher.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: BoolSO
#include "GlobalNamespace/BoolSO.hpp"
// Including type: UnityEngine.SpriteRenderer
#include "UnityEngine/SpriteRenderer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _sprite0
UnityEngine::Sprite*& GlobalNamespace::ConditionalSpriteSwitcher::dyn__sprite0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConditionalSpriteSwitcher::dyn__sprite0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sprite0"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _material0
UnityEngine::Material*& GlobalNamespace::ConditionalSpriteSwitcher::dyn__material0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConditionalSpriteSwitcher::dyn__material0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_material0"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _sprite1
UnityEngine::Sprite*& GlobalNamespace::ConditionalSpriteSwitcher::dyn__sprite1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConditionalSpriteSwitcher::dyn__sprite1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sprite1"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _material1
UnityEngine::Material*& GlobalNamespace::ConditionalSpriteSwitcher::dyn__material1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConditionalSpriteSwitcher::dyn__material1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_material1"))->offset;
  return *reinterpret_cast<UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BoolSO _value
GlobalNamespace::BoolSO*& GlobalNamespace::ConditionalSpriteSwitcher::dyn__value() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConditionalSpriteSwitcher::dyn__value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_value"))->offset;
  return *reinterpret_cast<GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SpriteRenderer _spriteRenderer
UnityEngine::SpriteRenderer*& GlobalNamespace::ConditionalSpriteSwitcher::dyn__spriteRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConditionalSpriteSwitcher::dyn__spriteRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spriteRenderer"))->offset;
  return *reinterpret_cast<UnityEngine::SpriteRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ConditionalSpriteSwitcher.get_falseSprite
UnityEngine::Sprite* GlobalNamespace::ConditionalSpriteSwitcher::get_falseSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConditionalSpriteSwitcher::get_falseSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_falseSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: ConditionalSpriteSwitcher.set_falseSprite
void GlobalNamespace::ConditionalSpriteSwitcher::set_falseSprite(UnityEngine::Sprite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConditionalSpriteSwitcher::set_falseSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_falseSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConditionalSpriteSwitcher.get_trueSprite
UnityEngine::Sprite* GlobalNamespace::ConditionalSpriteSwitcher::get_trueSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConditionalSpriteSwitcher::get_trueSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trueSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Sprite*, false>(this, ___internal__method);
}
// Autogenerated method: ConditionalSpriteSwitcher.set_trueSprite
void GlobalNamespace::ConditionalSpriteSwitcher::set_trueSprite(UnityEngine::Sprite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConditionalSpriteSwitcher::set_trueSprite");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_trueSprite", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ConditionalSpriteSwitcher.Awake
void GlobalNamespace::ConditionalSpriteSwitcher::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConditionalSpriteSwitcher::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ConditionalSpriteSwitcher.Apply
void GlobalNamespace::ConditionalSpriteSwitcher::Apply() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ConditionalSpriteSwitcher::Apply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Apply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DateConditionalSpriteSwitcher
#include "GlobalNamespace/DateConditionalSpriteSwitcher.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: ConditionalSpriteSwitcher
#include "GlobalNamespace/ConditionalSpriteSwitcher.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _day
int& GlobalNamespace::DateConditionalSpriteSwitcher::dyn__day() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DateConditionalSpriteSwitcher::dyn__day");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_day"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _month
int& GlobalNamespace::DateConditionalSpriteSwitcher::dyn__month() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DateConditionalSpriteSwitcher::dyn__month");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_month"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _falseSprite
UnityEngine::Sprite*& GlobalNamespace::DateConditionalSpriteSwitcher::dyn__falseSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DateConditionalSpriteSwitcher::dyn__falseSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_falseSprite"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Sprite _trueSprite
UnityEngine::Sprite*& GlobalNamespace::DateConditionalSpriteSwitcher::dyn__trueSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DateConditionalSpriteSwitcher::dyn__trueSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trueSprite"))->offset;
  return *reinterpret_cast<UnityEngine::Sprite**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ConditionalSpriteSwitcher _conditionalSpriteSwitcher
GlobalNamespace::ConditionalSpriteSwitcher*& GlobalNamespace::DateConditionalSpriteSwitcher::dyn__conditionalSpriteSwitcher() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DateConditionalSpriteSwitcher::dyn__conditionalSpriteSwitcher");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_conditionalSpriteSwitcher"))->offset;
  return *reinterpret_cast<GlobalNamespace::ConditionalSpriteSwitcher**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DateConditionalSpriteSwitcher.Awake
void GlobalNamespace::DateConditionalSpriteSwitcher::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DateConditionalSpriteSwitcher::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DeactivateAfterFirstFrame
#include "GlobalNamespace/DeactivateAfterFirstFrame.hpp"
// Including type: DeactivateAfterFirstFrame/<Start>d__0
#include "GlobalNamespace/DeactivateAfterFirstFrame_-Start-d__0.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DeactivateAfterFirstFrame.Start
System::Collections::IEnumerator* GlobalNamespace::DeactivateAfterFirstFrame::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DeactivateAfterFirstFrame::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: DeactivateAfterFirstFrame/<Start>d__0
#include "GlobalNamespace/DeactivateAfterFirstFrame_-Start-d__0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::DeactivateAfterFirstFrame::$Start$d__0::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DeactivateAfterFirstFrame::$Start$d__0::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::DeactivateAfterFirstFrame::$Start$d__0::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DeactivateAfterFirstFrame::$Start$d__0::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public DeactivateAfterFirstFrame <>4__this
GlobalNamespace::DeactivateAfterFirstFrame*& GlobalNamespace::DeactivateAfterFirstFrame::$Start$d__0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DeactivateAfterFirstFrame::$Start$d__0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::DeactivateAfterFirstFrame**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DeactivateAfterFirstFrame/<Start>d__0.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::DeactivateAfterFirstFrame::$Start$d__0::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DeactivateAfterFirstFrame::$Start$d__0::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: DeactivateAfterFirstFrame/<Start>d__0.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::DeactivateAfterFirstFrame::$Start$d__0::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DeactivateAfterFirstFrame::$Start$d__0::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: DeactivateAfterFirstFrame/<Start>d__0.System.IDisposable.Dispose
void GlobalNamespace::DeactivateAfterFirstFrame::$Start$d__0::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DeactivateAfterFirstFrame::$Start$d__0::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DeactivateAfterFirstFrame/<Start>d__0.MoveNext
bool GlobalNamespace::DeactivateAfterFirstFrame::$Start$d__0::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DeactivateAfterFirstFrame::$Start$d__0::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: DeactivateAfterFirstFrame/<Start>d__0.System.Collections.IEnumerator.Reset
void GlobalNamespace::DeactivateAfterFirstFrame::$Start$d__0::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DeactivateAfterFirstFrame::$Start$d__0::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DisableComponentOnNonSteam
#include "GlobalNamespace/DisableComponentOnNonSteam.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MonoBehaviour _component
UnityEngine::MonoBehaviour*& GlobalNamespace::DisableComponentOnNonSteam::dyn__component() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisableComponentOnNonSteam::dyn__component");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_component"))->offset;
  return *reinterpret_cast<UnityEngine::MonoBehaviour**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DisableComponentOnNonSteam.Awake
void GlobalNamespace::DisableComponentOnNonSteam::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisableComponentOnNonSteam::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DisableOnNonOculus
#include "GlobalNamespace/DisableOnNonOculus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DisableOnNonQuest
#include "GlobalNamespace/DisableOnNonQuest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DisableOnNonSteam
#include "GlobalNamespace/DisableOnNonSteam.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DisableOnNonSteam.Awake
void GlobalNamespace::DisableOnNonSteam::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisableOnNonSteam::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FPSCounter
#include "GlobalNamespace/FPSCounter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <currentFPS>k__BackingField
int& GlobalNamespace::FPSCounter::dyn_$currentFPS$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FPSCounter::dyn_$currentFPS$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<currentFPS>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <lowestFPS>k__BackingField
int& GlobalNamespace::FPSCounter::dyn_$lowestFPS$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FPSCounter::dyn_$lowestFPS$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<lowestFPS>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <highestFPS>k__BackingField
int& GlobalNamespace::FPSCounter::dyn_$highestFPS$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FPSCounter::dyn_$highestFPS$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<highestFPS>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <droppedFrames>k__BackingField
int& GlobalNamespace::FPSCounter::dyn_$droppedFrames$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FPSCounter::dyn_$droppedFrames$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<droppedFrames>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _timeBuffer
float& GlobalNamespace::FPSCounter::dyn__timeBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FPSCounter::dyn__timeBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeBuffer"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _frameCounter
int& GlobalNamespace::FPSCounter::dyn__frameCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FPSCounter::dyn__frameCounter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_frameCounter"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minDeltaTime
float& GlobalNamespace::FPSCounter::dyn__minDeltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FPSCounter::dyn__minDeltaTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minDeltaTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FPSCounter.get_currentFPS
int GlobalNamespace::FPSCounter::get_currentFPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FPSCounter::get_currentFPS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentFPS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: FPSCounter.set_currentFPS
void GlobalNamespace::FPSCounter::set_currentFPS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FPSCounter::set_currentFPS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_currentFPS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FPSCounter.get_lowestFPS
int GlobalNamespace::FPSCounter::get_lowestFPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FPSCounter::get_lowestFPS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lowestFPS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: FPSCounter.set_lowestFPS
void GlobalNamespace::FPSCounter::set_lowestFPS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FPSCounter::set_lowestFPS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_lowestFPS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FPSCounter.get_highestFPS
int GlobalNamespace::FPSCounter::get_highestFPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FPSCounter::get_highestFPS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_highestFPS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: FPSCounter.set_highestFPS
void GlobalNamespace::FPSCounter::set_highestFPS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FPSCounter::set_highestFPS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_highestFPS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FPSCounter.get_droppedFrames
int GlobalNamespace::FPSCounter::get_droppedFrames() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FPSCounter::get_droppedFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_droppedFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: FPSCounter.set_droppedFrames
void GlobalNamespace::FPSCounter::set_droppedFrames(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FPSCounter::set_droppedFrames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_droppedFrames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FPSCounter.Awake
void GlobalNamespace::FPSCounter::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FPSCounter::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FPSCounter.Update
void GlobalNamespace::FPSCounter::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FPSCounter::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FPSCounterUIController
#include "GlobalNamespace/FPSCounterUIController.hpp"
// Including type: FPSCounterUIController/<Start>d__9
#include "GlobalNamespace/FPSCounterUIController_-Start-d__9.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: FPSCounter
#include "GlobalNamespace/FPSCounter.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _uiUpdateTimeInterval
float& GlobalNamespace::FPSCounterUIController::dyn__uiUpdateTimeInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FPSCounterUIController::dyn__uiUpdateTimeInterval");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uiUpdateTimeInterval"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _currentFPSText
TMPro::TextMeshProUGUI*& GlobalNamespace::FPSCounterUIController::dyn__currentFPSText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FPSCounterUIController::dyn__currentFPSText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentFPSText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _lowestFPSText
TMPro::TextMeshProUGUI*& GlobalNamespace::FPSCounterUIController::dyn__lowestFPSText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FPSCounterUIController::dyn__lowestFPSText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lowestFPSText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _highestFPSText
TMPro::TextMeshProUGUI*& GlobalNamespace::FPSCounterUIController::dyn__highestFPSText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FPSCounterUIController::dyn__highestFPSText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highestFPSText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshProUGUI _droppedFramesText
TMPro::TextMeshProUGUI*& GlobalNamespace::FPSCounterUIController::dyn__droppedFramesText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FPSCounterUIController::dyn__droppedFramesText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_droppedFramesText"))->offset;
  return *reinterpret_cast<TMPro::TextMeshProUGUI**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly GameScenesManager _gameScenesManager
GlobalNamespace::GameScenesManager*& GlobalNamespace::FPSCounterUIController::dyn__gameScenesManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FPSCounterUIController::dyn__gameScenesManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_gameScenesManager"))->offset;
  return *reinterpret_cast<GlobalNamespace::GameScenesManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FPSCounter _fpsCounter
GlobalNamespace::FPSCounter*& GlobalNamespace::FPSCounterUIController::dyn__fpsCounter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FPSCounterUIController::dyn__fpsCounter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fpsCounter"))->offset;
  return *reinterpret_cast<GlobalNamespace::FPSCounter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _timeToUpdateUI
float& GlobalNamespace::FPSCounterUIController::dyn__timeToUpdateUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FPSCounterUIController::dyn__timeToUpdateUI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_timeToUpdateUI"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FPSCounterUIController.Awake
void GlobalNamespace::FPSCounterUIController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FPSCounterUIController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FPSCounterUIController.Start
System::Collections::IEnumerator* GlobalNamespace::FPSCounterUIController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FPSCounterUIController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: FPSCounterUIController.LateUpdate
void GlobalNamespace::FPSCounterUIController::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FPSCounterUIController::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FPSCounterUIController/<Start>d__9
#include "GlobalNamespace/FPSCounterUIController_-Start-d__9.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::FPSCounterUIController::$Start$d__9::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FPSCounterUIController::$Start$d__9::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::FPSCounterUIController::$Start$d__9::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FPSCounterUIController::$Start$d__9::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public FPSCounterUIController <>4__this
GlobalNamespace::FPSCounterUIController*& GlobalNamespace::FPSCounterUIController::$Start$d__9::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FPSCounterUIController::$Start$d__9::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<GlobalNamespace::FPSCounterUIController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FPSCounterUIController/<Start>d__9.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::FPSCounterUIController::$Start$d__9::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FPSCounterUIController::$Start$d__9::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: FPSCounterUIController/<Start>d__9.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::FPSCounterUIController::$Start$d__9::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FPSCounterUIController::$Start$d__9::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: FPSCounterUIController/<Start>d__9.System.IDisposable.Dispose
void GlobalNamespace::FPSCounterUIController::$Start$d__9::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FPSCounterUIController::$Start$d__9::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FPSCounterUIController/<Start>d__9.MoveNext
bool GlobalNamespace::FPSCounterUIController::$Start$d__9::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FPSCounterUIController::$Start$d__9::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: FPSCounterUIController/<Start>d__9.System.Collections.IEnumerator.Reset
void GlobalNamespace::FPSCounterUIController::$Start$d__9::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FPSCounterUIController::$Start$d__9::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
