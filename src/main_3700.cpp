// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SelectLevelCategoryViewController/LevelCategoryInfo
#include "GlobalNamespace/SelectLevelCategoryViewController_LevelCategoryInfo.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: SelectLevelCategoryViewController::LevelCategoryInfo::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SelectLevelCategoryViewController::LevelCategoryInfo::*)()>(&SelectLevelCategoryViewController::LevelCategoryInfo::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SelectLevelCategoryViewController::LevelCategoryInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SelectLevelCategoryViewController::LevelCategoryInfo::*)()>(&SelectLevelCategoryViewController::LevelCategoryInfo::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SelectLevelCategoryViewController::LevelCategoryInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SelectLevelCategoryViewController/<>c__DisplayClass11_0
#include "GlobalNamespace/SelectLevelCategoryViewController_--c__DisplayClass11_0.hpp"
// Including type: SelectLevelCategoryViewController/LevelCategoryInfo
#include "GlobalNamespace/SelectLevelCategoryViewController_LevelCategoryInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SelectLevelCategoryViewController/<>c__DisplayClass11_0.<Setup>b__0
bool GlobalNamespace::SelectLevelCategoryViewController::$$c__DisplayClass11_0::$Setup$b__0(GlobalNamespace::SelectLevelCategoryViewController::LevelCategoryInfo* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectLevelCategoryViewController::$$c__DisplayClass11_0::<Setup>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Setup>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, data);
}
// Writing MetadataGetter for method: SelectLevelCategoryViewController::$$c__DisplayClass11_0::$Setup$b__0
// Il2CppName: <Setup>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (SelectLevelCategoryViewController::$$c__DisplayClass11_0::*)(GlobalNamespace::SelectLevelCategoryViewController::LevelCategoryInfo*)>(&SelectLevelCategoryViewController::$$c__DisplayClass11_0::$Setup$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SelectLevelCategoryViewController::$$c__DisplayClass11_0*), "<Setup>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::SelectLevelCategoryViewController::LevelCategoryInfo*>()});
  }
};
// Writing MetadataGetter for method: SelectLevelCategoryViewController::$$c__DisplayClass11_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SelectLevelCategoryViewController::$$c__DisplayClass11_0::*)()>(&SelectLevelCategoryViewController::$$c__DisplayClass11_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SelectLevelCategoryViewController::$$c__DisplayClass11_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SelectLevelCategoryViewController::$$c__DisplayClass11_0::*)()>(&SelectLevelCategoryViewController::$$c__DisplayClass11_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SelectLevelCategoryViewController::$$c__DisplayClass11_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SelectLevelCategoryViewController/<>c
#include "GlobalNamespace/SelectLevelCategoryViewController_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: SelectLevelCategoryViewController/LevelCategoryInfo
#include "GlobalNamespace/SelectLevelCategoryViewController_LevelCategoryInfo.hpp"
// Including type: HMUI.IconSegmentedControl/DataItem
#include "HMUI/IconSegmentedControl_DataItem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly SelectLevelCategoryViewController/<>c <>9
GlobalNamespace::SelectLevelCategoryViewController::$$c* GlobalNamespace::SelectLevelCategoryViewController::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectLevelCategoryViewController::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<GlobalNamespace::SelectLevelCategoryViewController::$$c*>("", "SelectLevelCategoryViewController/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly SelectLevelCategoryViewController/<>c <>9
void GlobalNamespace::SelectLevelCategoryViewController::$$c::_set_$$9(GlobalNamespace::SelectLevelCategoryViewController::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectLevelCategoryViewController::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "SelectLevelCategoryViewController/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<SelectLevelCategoryViewController/LevelCategoryInfo,HMUI.IconSegmentedControl/DataItem> <>9__11_1
System::Func_2<GlobalNamespace::SelectLevelCategoryViewController::LevelCategoryInfo*, HMUI::IconSegmentedControl::DataItem*>* GlobalNamespace::SelectLevelCategoryViewController::$$c::_get_$$9__11_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectLevelCategoryViewController::$$c::_get_$$9__11_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<GlobalNamespace::SelectLevelCategoryViewController::LevelCategoryInfo*, HMUI::IconSegmentedControl::DataItem*>*>("", "SelectLevelCategoryViewController/<>c", "<>9__11_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<SelectLevelCategoryViewController/LevelCategoryInfo,HMUI.IconSegmentedControl/DataItem> <>9__11_1
void GlobalNamespace::SelectLevelCategoryViewController::$$c::_set_$$9__11_1(System::Func_2<GlobalNamespace::SelectLevelCategoryViewController::LevelCategoryInfo*, HMUI::IconSegmentedControl::DataItem*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectLevelCategoryViewController::$$c::_set_$$9__11_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "SelectLevelCategoryViewController/<>c", "<>9__11_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<SelectLevelCategoryViewController/LevelCategoryInfo,SelectLevelCategoryViewController/LevelCategory> <>9__11_2
System::Func_2<GlobalNamespace::SelectLevelCategoryViewController::LevelCategoryInfo*, GlobalNamespace::SelectLevelCategoryViewController::LevelCategory>* GlobalNamespace::SelectLevelCategoryViewController::$$c::_get_$$9__11_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectLevelCategoryViewController::$$c::_get_$$9__11_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Func_2<GlobalNamespace::SelectLevelCategoryViewController::LevelCategoryInfo*, GlobalNamespace::SelectLevelCategoryViewController::LevelCategory>*>("", "SelectLevelCategoryViewController/<>c", "<>9__11_2")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<SelectLevelCategoryViewController/LevelCategoryInfo,SelectLevelCategoryViewController/LevelCategory> <>9__11_2
void GlobalNamespace::SelectLevelCategoryViewController::$$c::_set_$$9__11_2(System::Func_2<GlobalNamespace::SelectLevelCategoryViewController::LevelCategoryInfo*, GlobalNamespace::SelectLevelCategoryViewController::LevelCategory>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectLevelCategoryViewController::$$c::_set_$$9__11_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "SelectLevelCategoryViewController/<>c", "<>9__11_2", value)));
}
// Autogenerated method: SelectLevelCategoryViewController/<>c..cctor
void GlobalNamespace::SelectLevelCategoryViewController::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectLevelCategoryViewController::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SelectLevelCategoryViewController/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: SelectLevelCategoryViewController/<>c.<Setup>b__11_1
HMUI::IconSegmentedControl::DataItem* GlobalNamespace::SelectLevelCategoryViewController::$$c::$Setup$b__11_1(GlobalNamespace::SelectLevelCategoryViewController::LevelCategoryInfo* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectLevelCategoryViewController::$$c::<Setup>b__11_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Setup>b__11_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<HMUI::IconSegmentedControl::DataItem*, false>(this, ___internal__method, x);
}
// Autogenerated method: SelectLevelCategoryViewController/<>c.<Setup>b__11_2
GlobalNamespace::SelectLevelCategoryViewController::LevelCategory GlobalNamespace::SelectLevelCategoryViewController::$$c::$Setup$b__11_2(GlobalNamespace::SelectLevelCategoryViewController::LevelCategoryInfo* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectLevelCategoryViewController::$$c::<Setup>b__11_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Setup>b__11_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SelectLevelCategoryViewController::LevelCategory, false>(this, ___internal__method, x);
}
// Writing MetadataGetter for method: SelectLevelCategoryViewController::$$c::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&SelectLevelCategoryViewController::$$c::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SelectLevelCategoryViewController::$$c*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SelectLevelCategoryViewController::$$c::$Setup$b__11_1
// Il2CppName: <Setup>b__11_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HMUI::IconSegmentedControl::DataItem* (SelectLevelCategoryViewController::$$c::*)(GlobalNamespace::SelectLevelCategoryViewController::LevelCategoryInfo*)>(&SelectLevelCategoryViewController::$$c::$Setup$b__11_1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SelectLevelCategoryViewController::$$c*), "<Setup>b__11_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::SelectLevelCategoryViewController::LevelCategoryInfo*>()});
  }
};
// Writing MetadataGetter for method: SelectLevelCategoryViewController::$$c::$Setup$b__11_2
// Il2CppName: <Setup>b__11_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::SelectLevelCategoryViewController::LevelCategory (SelectLevelCategoryViewController::$$c::*)(GlobalNamespace::SelectLevelCategoryViewController::LevelCategoryInfo*)>(&SelectLevelCategoryViewController::$$c::$Setup$b__11_2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SelectLevelCategoryViewController::$$c*), "<Setup>b__11_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::SelectLevelCategoryViewController::LevelCategoryInfo*>()});
  }
};
// Writing MetadataGetter for method: SelectLevelCategoryViewController::$$c::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SelectLevelCategoryViewController::$$c::*)()>(&SelectLevelCategoryViewController::$$c::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SelectLevelCategoryViewController::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SelectLevelCategoryViewController::$$c::*)()>(&SelectLevelCategoryViewController::$$c::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SelectLevelCategoryViewController::$$c*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandardLevelDetailViewController
#include "GlobalNamespace/StandardLevelDetailViewController.hpp"
// Including type: EventBinder
#include "GlobalNamespace/EventBinder.hpp"
// Including type: StandardLevelDetailViewController/<>c__DisplayClass47_0
#include "GlobalNamespace/StandardLevelDetailViewController_--c__DisplayClass47_0.hpp"
// Including type: StandardLevelDetailViewController/<LoadBeatmapLevelAsync>d__54
#include "GlobalNamespace/StandardLevelDetailViewController_-LoadBeatmapLevelAsync-d__54.hpp"
// Including type: StandardLevelDetailViewController/<OpenLevelProductStoreOrShowBuyInfoAsync>d__57
#include "GlobalNamespace/StandardLevelDetailViewController_-OpenLevelProductStoreOrShowBuyInfoAsync-d__57.hpp"
// Including type: StandardLevelDetailViewController/<OpenLevelProductStoreAsync>d__59
#include "GlobalNamespace/StandardLevelDetailViewController_-OpenLevelProductStoreAsync-d__59.hpp"
// Including type: StandardLevelDetailViewController/<OpenLevelPackProductStoreAsync>d__61
#include "GlobalNamespace/StandardLevelDetailViewController_-OpenLevelPackProductStoreAsync-d__61.hpp"
// Including type: StandardLevelDetailViewController/<RefreshAvailabilityAsync>d__63
#include "GlobalNamespace/StandardLevelDetailViewController_-RefreshAvailabilityAsync-d__63.hpp"
// Including type: StandardLevelDetailView
#include "GlobalNamespace/StandardLevelDetailView.hpp"
// Including type: StandardLevelBuyView
#include "GlobalNamespace/StandardLevelBuyView.hpp"
// Including type: StandardLevelBuyInfoView
#include "GlobalNamespace/StandardLevelBuyInfoView.hpp"
// Including type: LoadingControl
#include "GlobalNamespace/LoadingControl.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: AdditionalContentModel
#include "GlobalNamespace/AdditionalContentModel.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: DlcPromoExperimentModel
#include "GlobalNamespace/DlcPromoExperimentModel.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kLoadingDataErrorNoInternetLocalizationKey
::Il2CppString* GlobalNamespace::StandardLevelDetailViewController::_get_kLoadingDataErrorNoInternetLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::_get_kLoadingDataErrorNoInternetLocalizationKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "StandardLevelDetailViewController", "kLoadingDataErrorNoInternetLocalizationKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kLoadingDataErrorNoInternetLocalizationKey
void GlobalNamespace::StandardLevelDetailViewController::_set_kLoadingDataErrorNoInternetLocalizationKey(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::_set_kLoadingDataErrorNoInternetLocalizationKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardLevelDetailViewController", "kLoadingDataErrorNoInternetLocalizationKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kLoadingDataErrorLocalizationKey
::Il2CppString* GlobalNamespace::StandardLevelDetailViewController::_get_kLoadingDataErrorLocalizationKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::_get_kLoadingDataErrorLocalizationKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "StandardLevelDetailViewController", "kLoadingDataErrorLocalizationKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String kLoadingDataErrorLocalizationKey
void GlobalNamespace::StandardLevelDetailViewController::_set_kLoadingDataErrorLocalizationKey(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::_set_kLoadingDataErrorLocalizationKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardLevelDetailViewController", "kLoadingDataErrorLocalizationKey", value));
}
// Autogenerated method: StandardLevelDetailViewController.add_didPressActionButtonEvent
void GlobalNamespace::StandardLevelDetailViewController::add_didPressActionButtonEvent(System::Action_1<GlobalNamespace::StandardLevelDetailViewController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::add_didPressActionButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didPressActionButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelDetailViewController.remove_didPressActionButtonEvent
void GlobalNamespace::StandardLevelDetailViewController::remove_didPressActionButtonEvent(System::Action_1<GlobalNamespace::StandardLevelDetailViewController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::remove_didPressActionButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didPressActionButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelDetailViewController.add_didPressOpenLevelPackButtonEvent
void GlobalNamespace::StandardLevelDetailViewController::add_didPressOpenLevelPackButtonEvent(System::Action_2<GlobalNamespace::StandardLevelDetailViewController*, GlobalNamespace::IBeatmapLevelPack*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::add_didPressOpenLevelPackButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didPressOpenLevelPackButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelDetailViewController.remove_didPressOpenLevelPackButtonEvent
void GlobalNamespace::StandardLevelDetailViewController::remove_didPressOpenLevelPackButtonEvent(System::Action_2<GlobalNamespace::StandardLevelDetailViewController*, GlobalNamespace::IBeatmapLevelPack*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::remove_didPressOpenLevelPackButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didPressOpenLevelPackButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelDetailViewController.add_levelFavoriteStatusDidChangeEvent
void GlobalNamespace::StandardLevelDetailViewController::add_levelFavoriteStatusDidChangeEvent(System::Action_2<GlobalNamespace::StandardLevelDetailViewController*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::add_levelFavoriteStatusDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_levelFavoriteStatusDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelDetailViewController.remove_levelFavoriteStatusDidChangeEvent
void GlobalNamespace::StandardLevelDetailViewController::remove_levelFavoriteStatusDidChangeEvent(System::Action_2<GlobalNamespace::StandardLevelDetailViewController*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::remove_levelFavoriteStatusDidChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_levelFavoriteStatusDidChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelDetailViewController.add_didPressPracticeButtonEvent
void GlobalNamespace::StandardLevelDetailViewController::add_didPressPracticeButtonEvent(System::Action_2<GlobalNamespace::StandardLevelDetailViewController*, GlobalNamespace::IBeatmapLevel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::add_didPressPracticeButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didPressPracticeButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelDetailViewController.remove_didPressPracticeButtonEvent
void GlobalNamespace::StandardLevelDetailViewController::remove_didPressPracticeButtonEvent(System::Action_2<GlobalNamespace::StandardLevelDetailViewController*, GlobalNamespace::IBeatmapLevel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::remove_didPressPracticeButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didPressPracticeButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelDetailViewController.add_didChangeDifficultyBeatmapEvent
void GlobalNamespace::StandardLevelDetailViewController::add_didChangeDifficultyBeatmapEvent(System::Action_2<GlobalNamespace::StandardLevelDetailViewController*, GlobalNamespace::IDifficultyBeatmap*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::add_didChangeDifficultyBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didChangeDifficultyBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelDetailViewController.remove_didChangeDifficultyBeatmapEvent
void GlobalNamespace::StandardLevelDetailViewController::remove_didChangeDifficultyBeatmapEvent(System::Action_2<GlobalNamespace::StandardLevelDetailViewController*, GlobalNamespace::IDifficultyBeatmap*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::remove_didChangeDifficultyBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didChangeDifficultyBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelDetailViewController.add_didChangeContentEvent
void GlobalNamespace::StandardLevelDetailViewController::add_didChangeContentEvent(System::Action_2<GlobalNamespace::StandardLevelDetailViewController*, GlobalNamespace::StandardLevelDetailViewController::ContentType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::add_didChangeContentEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didChangeContentEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelDetailViewController.remove_didChangeContentEvent
void GlobalNamespace::StandardLevelDetailViewController::remove_didChangeContentEvent(System::Action_2<GlobalNamespace::StandardLevelDetailViewController*, GlobalNamespace::StandardLevelDetailViewController::ContentType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::remove_didChangeContentEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didChangeContentEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelDetailViewController.get_selectedDifficultyBeatmap
GlobalNamespace::IDifficultyBeatmap* GlobalNamespace::StandardLevelDetailViewController::get_selectedDifficultyBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::get_selectedDifficultyBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedDifficultyBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IDifficultyBeatmap*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailViewController.get_beatmapLevel
GlobalNamespace::IPreviewBeatmapLevel* GlobalNamespace::StandardLevelDetailViewController::get_beatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::get_beatmapLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_beatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IPreviewBeatmapLevel*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailViewController.SetData
void GlobalNamespace::StandardLevelDetailViewController::SetData(GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, bool showPlayerStats, bool hidePracticeButton, bool hide360DegreeBeatmapCharacteristic, ::Il2CppString* playButtonText, GlobalNamespace::BeatmapDifficultyMask allowedBeatmapDifficultyMask, ::Array<GlobalNamespace::BeatmapCharacteristicSO*>* notAllowedCharacteristics) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previewBeatmapLevel), ::il2cpp_utils::ExtractType(showPlayerStats), ::il2cpp_utils::ExtractType(hidePracticeButton), ::il2cpp_utils::ExtractType(hide360DegreeBeatmapCharacteristic), ::il2cpp_utils::ExtractType(playButtonText), ::il2cpp_utils::ExtractType(allowedBeatmapDifficultyMask), ::il2cpp_utils::ExtractType(notAllowedCharacteristics)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, previewBeatmapLevel, showPlayerStats, hidePracticeButton, hide360DegreeBeatmapCharacteristic, playButtonText, allowedBeatmapDifficultyMask, notAllowedCharacteristics);
}
// Autogenerated method: StandardLevelDetailViewController.SetData
void GlobalNamespace::StandardLevelDetailViewController::SetData(GlobalNamespace::IBeatmapLevelPack* pack, GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, bool showPlayerStats, bool hidePracticeButton, bool hide360DegreeBeatmapCharacteristic, bool canBuyPack, ::Il2CppString* playButtonText, GlobalNamespace::BeatmapDifficultyMask allowedBeatmapDifficultyMask, ::Array<GlobalNamespace::BeatmapCharacteristicSO*>* notAllowedCharacteristics) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pack), ::il2cpp_utils::ExtractType(previewBeatmapLevel), ::il2cpp_utils::ExtractType(showPlayerStats), ::il2cpp_utils::ExtractType(hidePracticeButton), ::il2cpp_utils::ExtractType(hide360DegreeBeatmapCharacteristic), ::il2cpp_utils::ExtractType(canBuyPack), ::il2cpp_utils::ExtractType(playButtonText), ::il2cpp_utils::ExtractType(allowedBeatmapDifficultyMask), ::il2cpp_utils::ExtractType(notAllowedCharacteristics)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pack, previewBeatmapLevel, showPlayerStats, hidePracticeButton, hide360DegreeBeatmapCharacteristic, canBuyPack, playButtonText, allowedBeatmapDifficultyMask, notAllowedCharacteristics);
}
// Autogenerated method: StandardLevelDetailViewController.UpdateActionButtonIntractability
void GlobalNamespace::StandardLevelDetailViewController::UpdateActionButtonIntractability() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::UpdateActionButtonIntractability");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateActionButtonIntractability", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailViewController.HandleDidPressPracticeButton
void GlobalNamespace::StandardLevelDetailViewController::HandleDidPressPracticeButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::HandleDidPressPracticeButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDidPressPracticeButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailViewController.HandleLevelLoadingUpdate
void GlobalNamespace::StandardLevelDetailViewController::HandleLevelLoadingUpdate(GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate levelLoadingUpdate) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::HandleLevelLoadingUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLevelLoadingUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelLoadingUpdate)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelLoadingUpdate);
}
// Autogenerated method: StandardLevelDetailViewController.UpdateDownloading
void GlobalNamespace::StandardLevelDetailViewController::UpdateDownloading(bool preparingToDownload, uint bytesTransferred, uint bytesTotal) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::UpdateDownloading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDownloading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(preparingToDownload), ::il2cpp_utils::ExtractType(bytesTransferred), ::il2cpp_utils::ExtractType(bytesTotal)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, preparingToDownload, bytesTransferred, bytesTotal);
}
// Autogenerated method: StandardLevelDetailViewController.LoadBeatmapLevelAsync
System::Threading::Tasks::Task* GlobalNamespace::StandardLevelDetailViewController::LoadBeatmapLevelAsync(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::LoadBeatmapLevelAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadBeatmapLevelAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cancellationToken)})));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: StandardLevelDetailViewController.RefreshContentLevelDetailView
void GlobalNamespace::StandardLevelDetailViewController::RefreshContentLevelDetailView() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::RefreshContentLevelDetailView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshContentLevelDetailView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailViewController.ClearSelected
void GlobalNamespace::StandardLevelDetailViewController::ClearSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::ClearSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailViewController.OpenLevelProductStoreOrShowBuyInfoAsync
void GlobalNamespace::StandardLevelDetailViewController::OpenLevelProductStoreOrShowBuyInfoAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::OpenLevelProductStoreOrShowBuyInfoAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenLevelProductStoreOrShowBuyInfoAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailViewController.BuyLevelButtonWasPressed
void GlobalNamespace::StandardLevelDetailViewController::BuyLevelButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::BuyLevelButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuyLevelButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailViewController.OpenLevelProductStoreAsync
void GlobalNamespace::StandardLevelDetailViewController::OpenLevelProductStoreAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::OpenLevelProductStoreAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenLevelProductStoreAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailViewController.BuyPackButtonWasPressed
void GlobalNamespace::StandardLevelDetailViewController::BuyPackButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::BuyPackButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuyPackButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailViewController.OpenLevelPackProductStoreAsync
void GlobalNamespace::StandardLevelDetailViewController::OpenLevelPackProductStoreAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::OpenLevelPackProductStoreAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenLevelPackProductStoreAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailViewController.OpenLevelPack
void GlobalNamespace::StandardLevelDetailViewController::OpenLevelPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::OpenLevelPack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OpenLevelPack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailViewController.RefreshAvailabilityAsync
void GlobalNamespace::StandardLevelDetailViewController::RefreshAvailabilityAsync() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::RefreshAvailabilityAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshAvailabilityAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailViewController.ShowContent
void GlobalNamespace::StandardLevelDetailViewController::ShowContent(GlobalNamespace::StandardLevelDetailViewController::ContentType contentType, ::Il2CppString* errorText, float downloadingProgress, ::Il2CppString* downloadingText) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::ShowContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(contentType), ::il2cpp_utils::ExtractType(errorText), ::il2cpp_utils::ExtractType(downloadingProgress), ::il2cpp_utils::ExtractType(downloadingText)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, contentType, errorText, downloadingProgress, downloadingText);
}
// Autogenerated method: StandardLevelDetailViewController.HandleAdditionalContentModelDidInvalidateData
void GlobalNamespace::StandardLevelDetailViewController::HandleAdditionalContentModelDidInvalidateData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::HandleAdditionalContentModelDidInvalidateData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleAdditionalContentModelDidInvalidateData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailViewController.<DidActivate>b__47_0
void GlobalNamespace::StandardLevelDetailViewController::$DidActivate$b__47_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::<DidActivate>b__47_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__47_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailViewController.<DidActivate>b__47_1
void GlobalNamespace::StandardLevelDetailViewController::$DidActivate$b__47_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::<DidActivate>b__47_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__47_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailViewController.<DidActivate>b__47_4
void GlobalNamespace::StandardLevelDetailViewController::$DidActivate$b__47_4(GlobalNamespace::StandardLevelDetailView* view, GlobalNamespace::IDifficultyBeatmap* beatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::<DidActivate>b__47_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__47_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(view), ::il2cpp_utils::ExtractType(beatmap)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, view, beatmap);
}
// Autogenerated method: StandardLevelDetailViewController.<DidActivate>b__47_5
void GlobalNamespace::StandardLevelDetailViewController::$DidActivate$b__47_5(GlobalNamespace::StandardLevelDetailView* view, UnityEngine::UI::Toggle* toggle) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::<DidActivate>b__47_5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__47_5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(view), ::il2cpp_utils::ExtractType(toggle)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, view, toggle);
}
// Autogenerated method: StandardLevelDetailViewController.DidActivate
void GlobalNamespace::StandardLevelDetailViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: StandardLevelDetailViewController.DidDeactivate
void GlobalNamespace::StandardLevelDetailViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated method: StandardLevelDetailViewController.OnDestroy
void GlobalNamespace::StandardLevelDetailViewController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: StandardLevelDetailViewController::add_didPressActionButtonEvent
// Il2CppName: add_didPressActionButtonEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::*)(System::Action_1<GlobalNamespace::StandardLevelDetailViewController*>*)>(&StandardLevelDetailViewController::add_didPressActionButtonEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController*), "add_didPressActionButtonEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::StandardLevelDetailViewController*>*>()});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::remove_didPressActionButtonEvent
// Il2CppName: remove_didPressActionButtonEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::*)(System::Action_1<GlobalNamespace::StandardLevelDetailViewController*>*)>(&StandardLevelDetailViewController::remove_didPressActionButtonEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController*), "remove_didPressActionButtonEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::StandardLevelDetailViewController*>*>()});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::add_didPressOpenLevelPackButtonEvent
// Il2CppName: add_didPressOpenLevelPackButtonEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::*)(System::Action_2<GlobalNamespace::StandardLevelDetailViewController*, GlobalNamespace::IBeatmapLevelPack*>*)>(&StandardLevelDetailViewController::add_didPressOpenLevelPackButtonEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController*), "add_didPressOpenLevelPackButtonEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::StandardLevelDetailViewController*, GlobalNamespace::IBeatmapLevelPack*>*>()});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::remove_didPressOpenLevelPackButtonEvent
// Il2CppName: remove_didPressOpenLevelPackButtonEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::*)(System::Action_2<GlobalNamespace::StandardLevelDetailViewController*, GlobalNamespace::IBeatmapLevelPack*>*)>(&StandardLevelDetailViewController::remove_didPressOpenLevelPackButtonEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController*), "remove_didPressOpenLevelPackButtonEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::StandardLevelDetailViewController*, GlobalNamespace::IBeatmapLevelPack*>*>()});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::add_levelFavoriteStatusDidChangeEvent
// Il2CppName: add_levelFavoriteStatusDidChangeEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::*)(System::Action_2<GlobalNamespace::StandardLevelDetailViewController*, bool>*)>(&StandardLevelDetailViewController::add_levelFavoriteStatusDidChangeEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController*), "add_levelFavoriteStatusDidChangeEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::StandardLevelDetailViewController*, bool>*>()});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::remove_levelFavoriteStatusDidChangeEvent
// Il2CppName: remove_levelFavoriteStatusDidChangeEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::*)(System::Action_2<GlobalNamespace::StandardLevelDetailViewController*, bool>*)>(&StandardLevelDetailViewController::remove_levelFavoriteStatusDidChangeEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController*), "remove_levelFavoriteStatusDidChangeEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::StandardLevelDetailViewController*, bool>*>()});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::add_didPressPracticeButtonEvent
// Il2CppName: add_didPressPracticeButtonEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::*)(System::Action_2<GlobalNamespace::StandardLevelDetailViewController*, GlobalNamespace::IBeatmapLevel*>*)>(&StandardLevelDetailViewController::add_didPressPracticeButtonEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController*), "add_didPressPracticeButtonEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::StandardLevelDetailViewController*, GlobalNamespace::IBeatmapLevel*>*>()});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::remove_didPressPracticeButtonEvent
// Il2CppName: remove_didPressPracticeButtonEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::*)(System::Action_2<GlobalNamespace::StandardLevelDetailViewController*, GlobalNamespace::IBeatmapLevel*>*)>(&StandardLevelDetailViewController::remove_didPressPracticeButtonEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController*), "remove_didPressPracticeButtonEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::StandardLevelDetailViewController*, GlobalNamespace::IBeatmapLevel*>*>()});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::add_didChangeDifficultyBeatmapEvent
// Il2CppName: add_didChangeDifficultyBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::*)(System::Action_2<GlobalNamespace::StandardLevelDetailViewController*, GlobalNamespace::IDifficultyBeatmap*>*)>(&StandardLevelDetailViewController::add_didChangeDifficultyBeatmapEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController*), "add_didChangeDifficultyBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::StandardLevelDetailViewController*, GlobalNamespace::IDifficultyBeatmap*>*>()});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::remove_didChangeDifficultyBeatmapEvent
// Il2CppName: remove_didChangeDifficultyBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::*)(System::Action_2<GlobalNamespace::StandardLevelDetailViewController*, GlobalNamespace::IDifficultyBeatmap*>*)>(&StandardLevelDetailViewController::remove_didChangeDifficultyBeatmapEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController*), "remove_didChangeDifficultyBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::StandardLevelDetailViewController*, GlobalNamespace::IDifficultyBeatmap*>*>()});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::add_didChangeContentEvent
// Il2CppName: add_didChangeContentEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::*)(System::Action_2<GlobalNamespace::StandardLevelDetailViewController*, GlobalNamespace::StandardLevelDetailViewController::ContentType>*)>(&StandardLevelDetailViewController::add_didChangeContentEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController*), "add_didChangeContentEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::StandardLevelDetailViewController*, GlobalNamespace::StandardLevelDetailViewController::ContentType>*>()});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::remove_didChangeContentEvent
// Il2CppName: remove_didChangeContentEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::*)(System::Action_2<GlobalNamespace::StandardLevelDetailViewController*, GlobalNamespace::StandardLevelDetailViewController::ContentType>*)>(&StandardLevelDetailViewController::remove_didChangeContentEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController*), "remove_didChangeContentEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::StandardLevelDetailViewController*, GlobalNamespace::StandardLevelDetailViewController::ContentType>*>()});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::get_selectedDifficultyBeatmap
// Il2CppName: get_selectedDifficultyBeatmap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::IDifficultyBeatmap* (StandardLevelDetailViewController::*)()>(&StandardLevelDetailViewController::get_selectedDifficultyBeatmap)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController*), "get_selectedDifficultyBeatmap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::get_beatmapLevel
// Il2CppName: get_beatmapLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::IPreviewBeatmapLevel* (StandardLevelDetailViewController::*)()>(&StandardLevelDetailViewController::get_beatmapLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController*), "get_beatmapLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::SetData
// Il2CppName: SetData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::*)(GlobalNamespace::IPreviewBeatmapLevel*, bool, bool, bool, ::Il2CppString*, GlobalNamespace::BeatmapDifficultyMask, ::Array<GlobalNamespace::BeatmapCharacteristicSO*>*)>(&StandardLevelDetailViewController::SetData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController*), "SetData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IPreviewBeatmapLevel*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapDifficultyMask>(), ::il2cpp_utils::ExtractIndependentType<::Array<GlobalNamespace::BeatmapCharacteristicSO*>*>()});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::SetData
// Il2CppName: SetData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::*)(GlobalNamespace::IBeatmapLevelPack*, GlobalNamespace::IPreviewBeatmapLevel*, bool, bool, bool, bool, ::Il2CppString*, GlobalNamespace::BeatmapDifficultyMask, ::Array<GlobalNamespace::BeatmapCharacteristicSO*>*)>(&StandardLevelDetailViewController::SetData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController*), "SetData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IBeatmapLevelPack*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IPreviewBeatmapLevel*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapDifficultyMask>(), ::il2cpp_utils::ExtractIndependentType<::Array<GlobalNamespace::BeatmapCharacteristicSO*>*>()});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::UpdateActionButtonIntractability
// Il2CppName: UpdateActionButtonIntractability
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::*)()>(&StandardLevelDetailViewController::UpdateActionButtonIntractability)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController*), "UpdateActionButtonIntractability", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::HandleDidPressPracticeButton
// Il2CppName: HandleDidPressPracticeButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::*)()>(&StandardLevelDetailViewController::HandleDidPressPracticeButton)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController*), "HandleDidPressPracticeButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::HandleLevelLoadingUpdate
// Il2CppName: HandleLevelLoadingUpdate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::*)(GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate)>(&StandardLevelDetailViewController::HandleLevelLoadingUpdate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController*), "HandleLevelLoadingUpdate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapLevelsModel::LevelDownloadingUpdate>()});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::UpdateDownloading
// Il2CppName: UpdateDownloading
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::*)(bool, uint, uint)>(&StandardLevelDetailViewController::UpdateDownloading)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController*), "UpdateDownloading", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<uint>(), ::il2cpp_utils::ExtractIndependentType<uint>()});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::LoadBeatmapLevelAsync
// Il2CppName: LoadBeatmapLevelAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Threading::Tasks::Task* (StandardLevelDetailViewController::*)(System::Threading::CancellationToken)>(&StandardLevelDetailViewController::LoadBeatmapLevelAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController*), "LoadBeatmapLevelAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Threading::CancellationToken>()});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::RefreshContentLevelDetailView
// Il2CppName: RefreshContentLevelDetailView
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::*)()>(&StandardLevelDetailViewController::RefreshContentLevelDetailView)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController*), "RefreshContentLevelDetailView", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::ClearSelected
// Il2CppName: ClearSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::*)()>(&StandardLevelDetailViewController::ClearSelected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController*), "ClearSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::OpenLevelProductStoreOrShowBuyInfoAsync
// Il2CppName: OpenLevelProductStoreOrShowBuyInfoAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::*)()>(&StandardLevelDetailViewController::OpenLevelProductStoreOrShowBuyInfoAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController*), "OpenLevelProductStoreOrShowBuyInfoAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::BuyLevelButtonWasPressed
// Il2CppName: BuyLevelButtonWasPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::*)()>(&StandardLevelDetailViewController::BuyLevelButtonWasPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController*), "BuyLevelButtonWasPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::OpenLevelProductStoreAsync
// Il2CppName: OpenLevelProductStoreAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::*)()>(&StandardLevelDetailViewController::OpenLevelProductStoreAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController*), "OpenLevelProductStoreAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::BuyPackButtonWasPressed
// Il2CppName: BuyPackButtonWasPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::*)()>(&StandardLevelDetailViewController::BuyPackButtonWasPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController*), "BuyPackButtonWasPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::OpenLevelPackProductStoreAsync
// Il2CppName: OpenLevelPackProductStoreAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::*)()>(&StandardLevelDetailViewController::OpenLevelPackProductStoreAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController*), "OpenLevelPackProductStoreAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::OpenLevelPack
// Il2CppName: OpenLevelPack
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::*)()>(&StandardLevelDetailViewController::OpenLevelPack)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController*), "OpenLevelPack", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::RefreshAvailabilityAsync
// Il2CppName: RefreshAvailabilityAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::*)()>(&StandardLevelDetailViewController::RefreshAvailabilityAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController*), "RefreshAvailabilityAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::ShowContent
// Il2CppName: ShowContent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::*)(GlobalNamespace::StandardLevelDetailViewController::ContentType, ::Il2CppString*, float, ::Il2CppString*)>(&StandardLevelDetailViewController::ShowContent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController*), "ShowContent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::StandardLevelDetailViewController::ContentType>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<float>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::HandleAdditionalContentModelDidInvalidateData
// Il2CppName: HandleAdditionalContentModelDidInvalidateData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::*)()>(&StandardLevelDetailViewController::HandleAdditionalContentModelDidInvalidateData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController*), "HandleAdditionalContentModelDidInvalidateData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::$DidActivate$b__47_0
// Il2CppName: <DidActivate>b__47_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::*)()>(&StandardLevelDetailViewController::$DidActivate$b__47_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController*), "<DidActivate>b__47_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::$DidActivate$b__47_1
// Il2CppName: <DidActivate>b__47_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::*)()>(&StandardLevelDetailViewController::$DidActivate$b__47_1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController*), "<DidActivate>b__47_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::$DidActivate$b__47_4
// Il2CppName: <DidActivate>b__47_4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::*)(GlobalNamespace::StandardLevelDetailView*, GlobalNamespace::IDifficultyBeatmap*)>(&StandardLevelDetailViewController::$DidActivate$b__47_4)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController*), "<DidActivate>b__47_4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::StandardLevelDetailView*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IDifficultyBeatmap*>()});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::$DidActivate$b__47_5
// Il2CppName: <DidActivate>b__47_5
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::*)(GlobalNamespace::StandardLevelDetailView*, UnityEngine::UI::Toggle*)>(&StandardLevelDetailViewController::$DidActivate$b__47_5)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController*), "<DidActivate>b__47_5", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::StandardLevelDetailView*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::UI::Toggle*>()});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::*)(bool, bool, bool)>(&StandardLevelDetailViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::DidDeactivate
// Il2CppName: DidDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::*)(bool, bool)>(&StandardLevelDetailViewController::DidDeactivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController*), "DidDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::*)()>(&StandardLevelDetailViewController::OnDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::*)()>(&StandardLevelDetailViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::*)()>(&StandardLevelDetailViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardLevelDetailViewController/ContentType
#include "GlobalNamespace/StandardLevelDetailViewController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public StandardLevelDetailViewController/ContentType Loading
GlobalNamespace::StandardLevelDetailViewController::ContentType GlobalNamespace::StandardLevelDetailViewController::ContentType::_get_Loading() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::ContentType::_get_Loading");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::StandardLevelDetailViewController::ContentType>("", "StandardLevelDetailViewController/ContentType", "Loading"));
}
// Autogenerated static field setter
// Set static field: static public StandardLevelDetailViewController/ContentType Loading
void GlobalNamespace::StandardLevelDetailViewController::ContentType::_set_Loading(GlobalNamespace::StandardLevelDetailViewController::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::ContentType::_set_Loading");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardLevelDetailViewController/ContentType", "Loading", value));
}
// Autogenerated static field getter
// Get static field: static public StandardLevelDetailViewController/ContentType OwnedAndReady
GlobalNamespace::StandardLevelDetailViewController::ContentType GlobalNamespace::StandardLevelDetailViewController::ContentType::_get_OwnedAndReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::ContentType::_get_OwnedAndReady");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::StandardLevelDetailViewController::ContentType>("", "StandardLevelDetailViewController/ContentType", "OwnedAndReady"));
}
// Autogenerated static field setter
// Set static field: static public StandardLevelDetailViewController/ContentType OwnedAndReady
void GlobalNamespace::StandardLevelDetailViewController::ContentType::_set_OwnedAndReady(GlobalNamespace::StandardLevelDetailViewController::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::ContentType::_set_OwnedAndReady");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardLevelDetailViewController/ContentType", "OwnedAndReady", value));
}
// Autogenerated static field getter
// Get static field: static public StandardLevelDetailViewController/ContentType NoAllowedDifficultyBeatmap
GlobalNamespace::StandardLevelDetailViewController::ContentType GlobalNamespace::StandardLevelDetailViewController::ContentType::_get_NoAllowedDifficultyBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::ContentType::_get_NoAllowedDifficultyBeatmap");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::StandardLevelDetailViewController::ContentType>("", "StandardLevelDetailViewController/ContentType", "NoAllowedDifficultyBeatmap"));
}
// Autogenerated static field setter
// Set static field: static public StandardLevelDetailViewController/ContentType NoAllowedDifficultyBeatmap
void GlobalNamespace::StandardLevelDetailViewController::ContentType::_set_NoAllowedDifficultyBeatmap(GlobalNamespace::StandardLevelDetailViewController::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::ContentType::_set_NoAllowedDifficultyBeatmap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardLevelDetailViewController/ContentType", "NoAllowedDifficultyBeatmap", value));
}
// Autogenerated static field getter
// Get static field: static public StandardLevelDetailViewController/ContentType OwnedAndDownloading
GlobalNamespace::StandardLevelDetailViewController::ContentType GlobalNamespace::StandardLevelDetailViewController::ContentType::_get_OwnedAndDownloading() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::ContentType::_get_OwnedAndDownloading");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::StandardLevelDetailViewController::ContentType>("", "StandardLevelDetailViewController/ContentType", "OwnedAndDownloading"));
}
// Autogenerated static field setter
// Set static field: static public StandardLevelDetailViewController/ContentType OwnedAndDownloading
void GlobalNamespace::StandardLevelDetailViewController::ContentType::_set_OwnedAndDownloading(GlobalNamespace::StandardLevelDetailViewController::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::ContentType::_set_OwnedAndDownloading");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardLevelDetailViewController/ContentType", "OwnedAndDownloading", value));
}
// Autogenerated static field getter
// Get static field: static public StandardLevelDetailViewController/ContentType Buy
GlobalNamespace::StandardLevelDetailViewController::ContentType GlobalNamespace::StandardLevelDetailViewController::ContentType::_get_Buy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::ContentType::_get_Buy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::StandardLevelDetailViewController::ContentType>("", "StandardLevelDetailViewController/ContentType", "Buy"));
}
// Autogenerated static field setter
// Set static field: static public StandardLevelDetailViewController/ContentType Buy
void GlobalNamespace::StandardLevelDetailViewController::ContentType::_set_Buy(GlobalNamespace::StandardLevelDetailViewController::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::ContentType::_set_Buy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardLevelDetailViewController/ContentType", "Buy", value));
}
// Autogenerated static field getter
// Get static field: static public StandardLevelDetailViewController/ContentType BuyInfo
GlobalNamespace::StandardLevelDetailViewController::ContentType GlobalNamespace::StandardLevelDetailViewController::ContentType::_get_BuyInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::ContentType::_get_BuyInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::StandardLevelDetailViewController::ContentType>("", "StandardLevelDetailViewController/ContentType", "BuyInfo"));
}
// Autogenerated static field setter
// Set static field: static public StandardLevelDetailViewController/ContentType BuyInfo
void GlobalNamespace::StandardLevelDetailViewController::ContentType::_set_BuyInfo(GlobalNamespace::StandardLevelDetailViewController::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::ContentType::_set_BuyInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardLevelDetailViewController/ContentType", "BuyInfo", value));
}
// Autogenerated static field getter
// Get static field: static public StandardLevelDetailViewController/ContentType Error
GlobalNamespace::StandardLevelDetailViewController::ContentType GlobalNamespace::StandardLevelDetailViewController::ContentType::_get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::ContentType::_get_Error");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::StandardLevelDetailViewController::ContentType>("", "StandardLevelDetailViewController/ContentType", "Error"));
}
// Autogenerated static field setter
// Set static field: static public StandardLevelDetailViewController/ContentType Error
void GlobalNamespace::StandardLevelDetailViewController::ContentType::_set_Error(GlobalNamespace::StandardLevelDetailViewController::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::ContentType::_set_Error");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardLevelDetailViewController/ContentType", "Error", value));
}
// Autogenerated static field getter
// Get static field: static public StandardLevelDetailViewController/ContentType Inactive
GlobalNamespace::StandardLevelDetailViewController::ContentType GlobalNamespace::StandardLevelDetailViewController::ContentType::_get_Inactive() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::ContentType::_get_Inactive");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::StandardLevelDetailViewController::ContentType>("", "StandardLevelDetailViewController/ContentType", "Inactive"));
}
// Autogenerated static field setter
// Set static field: static public StandardLevelDetailViewController/ContentType Inactive
void GlobalNamespace::StandardLevelDetailViewController::ContentType::_set_Inactive(GlobalNamespace::StandardLevelDetailViewController::ContentType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::ContentType::_set_Inactive");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "StandardLevelDetailViewController/ContentType", "Inactive", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardLevelDetailViewController/<>c__DisplayClass47_0
#include "GlobalNamespace/StandardLevelDetailViewController_--c__DisplayClass47_0.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: StandardLevelDetailView
#include "GlobalNamespace/StandardLevelDetailView.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: StandardLevelDetailViewController/<>c__DisplayClass47_0.<DidActivate>b__2
void GlobalNamespace::StandardLevelDetailViewController::$$c__DisplayClass47_0::$DidActivate$b__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::$$c__DisplayClass47_0::<DidActivate>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailViewController/<>c__DisplayClass47_0.<DidActivate>b__3
void GlobalNamespace::StandardLevelDetailViewController::$$c__DisplayClass47_0::$DidActivate$b__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::$$c__DisplayClass47_0::<DidActivate>b__3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailViewController/<>c__DisplayClass47_0.<DidActivate>b__6
void GlobalNamespace::StandardLevelDetailViewController::$$c__DisplayClass47_0::$DidActivate$b__6() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::$$c__DisplayClass47_0::<DidActivate>b__6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailViewController/<>c__DisplayClass47_0.<DidActivate>b__7
void GlobalNamespace::StandardLevelDetailViewController::$$c__DisplayClass47_0::$DidActivate$b__7() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::$$c__DisplayClass47_0::<DidActivate>b__7");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__7", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: StandardLevelDetailViewController::$$c__DisplayClass47_0::$DidActivate$b__2
// Il2CppName: <DidActivate>b__2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::$$c__DisplayClass47_0::*)()>(&StandardLevelDetailViewController::$$c__DisplayClass47_0::$DidActivate$b__2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController::$$c__DisplayClass47_0*), "<DidActivate>b__2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::$$c__DisplayClass47_0::$DidActivate$b__3
// Il2CppName: <DidActivate>b__3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::$$c__DisplayClass47_0::*)()>(&StandardLevelDetailViewController::$$c__DisplayClass47_0::$DidActivate$b__3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController::$$c__DisplayClass47_0*), "<DidActivate>b__3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::$$c__DisplayClass47_0::$DidActivate$b__6
// Il2CppName: <DidActivate>b__6
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::$$c__DisplayClass47_0::*)()>(&StandardLevelDetailViewController::$$c__DisplayClass47_0::$DidActivate$b__6)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController::$$c__DisplayClass47_0*), "<DidActivate>b__6", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::$$c__DisplayClass47_0::$DidActivate$b__7
// Il2CppName: <DidActivate>b__7
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::$$c__DisplayClass47_0::*)()>(&StandardLevelDetailViewController::$$c__DisplayClass47_0::$DidActivate$b__7)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController::$$c__DisplayClass47_0*), "<DidActivate>b__7", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::$$c__DisplayClass47_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::$$c__DisplayClass47_0::*)()>(&StandardLevelDetailViewController::$$c__DisplayClass47_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController::$$c__DisplayClass47_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::$$c__DisplayClass47_0::*)()>(&StandardLevelDetailViewController::$$c__DisplayClass47_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController::$$c__DisplayClass47_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardLevelDetailViewController/<LoadBeatmapLevelAsync>d__54
#include "GlobalNamespace/StandardLevelDetailViewController_-LoadBeatmapLevelAsync-d__54.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: StandardLevelDetailViewController/<LoadBeatmapLevelAsync>d__54.MoveNext
void GlobalNamespace::StandardLevelDetailViewController::$LoadBeatmapLevelAsync$d__54::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::$LoadBeatmapLevelAsync$d__54::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailViewController/<LoadBeatmapLevelAsync>d__54.SetStateMachine
void GlobalNamespace::StandardLevelDetailViewController::$LoadBeatmapLevelAsync$d__54::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::$LoadBeatmapLevelAsync$d__54::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: StandardLevelDetailViewController::$LoadBeatmapLevelAsync$d__54::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::$LoadBeatmapLevelAsync$d__54::*)()>(&StandardLevelDetailViewController::$LoadBeatmapLevelAsync$d__54::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController::$LoadBeatmapLevelAsync$d__54), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::$LoadBeatmapLevelAsync$d__54::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::$LoadBeatmapLevelAsync$d__54::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&StandardLevelDetailViewController::$LoadBeatmapLevelAsync$d__54::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController::$LoadBeatmapLevelAsync$d__54), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardLevelDetailViewController/<OpenLevelProductStoreOrShowBuyInfoAsync>d__57
#include "GlobalNamespace/StandardLevelDetailViewController_-OpenLevelProductStoreOrShowBuyInfoAsync-d__57.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: StandardLevelDetailViewController/<OpenLevelProductStoreOrShowBuyInfoAsync>d__57.MoveNext
void GlobalNamespace::StandardLevelDetailViewController::$OpenLevelProductStoreOrShowBuyInfoAsync$d__57::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::$OpenLevelProductStoreOrShowBuyInfoAsync$d__57::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailViewController/<OpenLevelProductStoreOrShowBuyInfoAsync>d__57.SetStateMachine
void GlobalNamespace::StandardLevelDetailViewController::$OpenLevelProductStoreOrShowBuyInfoAsync$d__57::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::$OpenLevelProductStoreOrShowBuyInfoAsync$d__57::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: StandardLevelDetailViewController::$OpenLevelProductStoreOrShowBuyInfoAsync$d__57::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::$OpenLevelProductStoreOrShowBuyInfoAsync$d__57::*)()>(&StandardLevelDetailViewController::$OpenLevelProductStoreOrShowBuyInfoAsync$d__57::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController::$OpenLevelProductStoreOrShowBuyInfoAsync$d__57), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::$OpenLevelProductStoreOrShowBuyInfoAsync$d__57::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::$OpenLevelProductStoreOrShowBuyInfoAsync$d__57::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&StandardLevelDetailViewController::$OpenLevelProductStoreOrShowBuyInfoAsync$d__57::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController::$OpenLevelProductStoreOrShowBuyInfoAsync$d__57), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardLevelDetailViewController/<OpenLevelProductStoreAsync>d__59
#include "GlobalNamespace/StandardLevelDetailViewController_-OpenLevelProductStoreAsync-d__59.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: StandardLevelDetailViewController/<OpenLevelProductStoreAsync>d__59.MoveNext
void GlobalNamespace::StandardLevelDetailViewController::$OpenLevelProductStoreAsync$d__59::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::$OpenLevelProductStoreAsync$d__59::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailViewController/<OpenLevelProductStoreAsync>d__59.SetStateMachine
void GlobalNamespace::StandardLevelDetailViewController::$OpenLevelProductStoreAsync$d__59::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::$OpenLevelProductStoreAsync$d__59::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: StandardLevelDetailViewController::$OpenLevelProductStoreAsync$d__59::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::$OpenLevelProductStoreAsync$d__59::*)()>(&StandardLevelDetailViewController::$OpenLevelProductStoreAsync$d__59::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController::$OpenLevelProductStoreAsync$d__59), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::$OpenLevelProductStoreAsync$d__59::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::$OpenLevelProductStoreAsync$d__59::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&StandardLevelDetailViewController::$OpenLevelProductStoreAsync$d__59::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController::$OpenLevelProductStoreAsync$d__59), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardLevelDetailViewController/<OpenLevelPackProductStoreAsync>d__61
#include "GlobalNamespace/StandardLevelDetailViewController_-OpenLevelPackProductStoreAsync-d__61.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: StandardLevelDetailViewController/<OpenLevelPackProductStoreAsync>d__61.MoveNext
void GlobalNamespace::StandardLevelDetailViewController::$OpenLevelPackProductStoreAsync$d__61::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::$OpenLevelPackProductStoreAsync$d__61::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailViewController/<OpenLevelPackProductStoreAsync>d__61.SetStateMachine
void GlobalNamespace::StandardLevelDetailViewController::$OpenLevelPackProductStoreAsync$d__61::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::$OpenLevelPackProductStoreAsync$d__61::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: StandardLevelDetailViewController::$OpenLevelPackProductStoreAsync$d__61::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::$OpenLevelPackProductStoreAsync$d__61::*)()>(&StandardLevelDetailViewController::$OpenLevelPackProductStoreAsync$d__61::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController::$OpenLevelPackProductStoreAsync$d__61), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::$OpenLevelPackProductStoreAsync$d__61::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::$OpenLevelPackProductStoreAsync$d__61::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&StandardLevelDetailViewController::$OpenLevelPackProductStoreAsync$d__61::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController::$OpenLevelPackProductStoreAsync$d__61), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardLevelDetailViewController/<RefreshAvailabilityAsync>d__63
#include "GlobalNamespace/StandardLevelDetailViewController_-RefreshAvailabilityAsync-d__63.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: StandardLevelDetailViewController/<RefreshAvailabilityAsync>d__63.MoveNext
void GlobalNamespace::StandardLevelDetailViewController::$RefreshAvailabilityAsync$d__63::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::$RefreshAvailabilityAsync$d__63::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailViewController/<RefreshAvailabilityAsync>d__63.SetStateMachine
void GlobalNamespace::StandardLevelDetailViewController::$RefreshAvailabilityAsync$d__63::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailViewController::$RefreshAvailabilityAsync$d__63::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: StandardLevelDetailViewController::$RefreshAvailabilityAsync$d__63::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::$RefreshAvailabilityAsync$d__63::*)()>(&StandardLevelDetailViewController::$RefreshAvailabilityAsync$d__63::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController::$RefreshAvailabilityAsync$d__63), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: StandardLevelDetailViewController::$RefreshAvailabilityAsync$d__63::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (StandardLevelDetailViewController::$RefreshAvailabilityAsync$d__63::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&StandardLevelDetailViewController::$RefreshAvailabilityAsync$d__63::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(StandardLevelDetailViewController::$RefreshAvailabilityAsync$d__63), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LevelSelectionNavigationController
#include "GlobalNamespace/LevelSelectionNavigationController.hpp"
// Including type: LevelFilteringNavigationController
#include "GlobalNamespace/LevelFilteringNavigationController.hpp"
// Including type: LevelCollectionNavigationController
#include "GlobalNamespace/LevelCollectionNavigationController.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: SongPackMask
#include "GlobalNamespace/SongPackMask.hpp"
// Including type: IAnnotatedBeatmapLevelCollection
#include "GlobalNamespace/IAnnotatedBeatmapLevelCollection.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: SelectLevelCategoryViewController/LevelCategory
#include "GlobalNamespace/SelectLevelCategoryViewController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LevelSelectionNavigationController.add_didChangeLevelDetailContentEvent
void GlobalNamespace::LevelSelectionNavigationController::add_didChangeLevelDetailContentEvent(System::Action_2<GlobalNamespace::LevelSelectionNavigationController*, GlobalNamespace::StandardLevelDetailViewController::ContentType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionNavigationController::add_didChangeLevelDetailContentEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didChangeLevelDetailContentEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelSelectionNavigationController.remove_didChangeLevelDetailContentEvent
void GlobalNamespace::LevelSelectionNavigationController::remove_didChangeLevelDetailContentEvent(System::Action_2<GlobalNamespace::LevelSelectionNavigationController*, GlobalNamespace::StandardLevelDetailViewController::ContentType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionNavigationController::remove_didChangeLevelDetailContentEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didChangeLevelDetailContentEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelSelectionNavigationController.add_didSelectLevelPackEvent
void GlobalNamespace::LevelSelectionNavigationController::add_didSelectLevelPackEvent(System::Action_2<GlobalNamespace::LevelSelectionNavigationController*, GlobalNamespace::IBeatmapLevelPack*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionNavigationController::add_didSelectLevelPackEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectLevelPackEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelSelectionNavigationController.remove_didSelectLevelPackEvent
void GlobalNamespace::LevelSelectionNavigationController::remove_didSelectLevelPackEvent(System::Action_2<GlobalNamespace::LevelSelectionNavigationController*, GlobalNamespace::IBeatmapLevelPack*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionNavigationController::remove_didSelectLevelPackEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectLevelPackEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelSelectionNavigationController.add_didPressActionButtonEvent
void GlobalNamespace::LevelSelectionNavigationController::add_didPressActionButtonEvent(System::Action_1<GlobalNamespace::LevelSelectionNavigationController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionNavigationController::add_didPressActionButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didPressActionButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelSelectionNavigationController.remove_didPressActionButtonEvent
void GlobalNamespace::LevelSelectionNavigationController::remove_didPressActionButtonEvent(System::Action_1<GlobalNamespace::LevelSelectionNavigationController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionNavigationController::remove_didPressActionButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didPressActionButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelSelectionNavigationController.add_didPressPracticeButtonEvent
void GlobalNamespace::LevelSelectionNavigationController::add_didPressPracticeButtonEvent(System::Action_2<GlobalNamespace::LevelSelectionNavigationController*, GlobalNamespace::IBeatmapLevel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionNavigationController::add_didPressPracticeButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didPressPracticeButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelSelectionNavigationController.remove_didPressPracticeButtonEvent
void GlobalNamespace::LevelSelectionNavigationController::remove_didPressPracticeButtonEvent(System::Action_2<GlobalNamespace::LevelSelectionNavigationController*, GlobalNamespace::IBeatmapLevel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionNavigationController::remove_didPressPracticeButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didPressPracticeButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelSelectionNavigationController.add_didChangeDifficultyBeatmapEvent
void GlobalNamespace::LevelSelectionNavigationController::add_didChangeDifficultyBeatmapEvent(System::Action_2<GlobalNamespace::LevelSelectionNavigationController*, GlobalNamespace::IDifficultyBeatmap*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionNavigationController::add_didChangeDifficultyBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didChangeDifficultyBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelSelectionNavigationController.remove_didChangeDifficultyBeatmapEvent
void GlobalNamespace::LevelSelectionNavigationController::remove_didChangeDifficultyBeatmapEvent(System::Action_2<GlobalNamespace::LevelSelectionNavigationController*, GlobalNamespace::IDifficultyBeatmap*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionNavigationController::remove_didChangeDifficultyBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didChangeDifficultyBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LevelSelectionNavigationController.get_selectedDifficultyBeatmap
GlobalNamespace::IDifficultyBeatmap* GlobalNamespace::LevelSelectionNavigationController::get_selectedDifficultyBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionNavigationController::get_selectedDifficultyBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedDifficultyBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IDifficultyBeatmap*, false>(this, ___internal__method);
}
// Autogenerated method: LevelSelectionNavigationController.get_selectedBeatmapLevel
GlobalNamespace::IPreviewBeatmapLevel* GlobalNamespace::LevelSelectionNavigationController::get_selectedBeatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionNavigationController::get_selectedBeatmapLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedBeatmapLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IPreviewBeatmapLevel*, false>(this, ___internal__method);
}
// Autogenerated method: LevelSelectionNavigationController.get_selectedLevelCategory
GlobalNamespace::SelectLevelCategoryViewController::LevelCategory GlobalNamespace::LevelSelectionNavigationController::get_selectedLevelCategory() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionNavigationController::get_selectedLevelCategory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedLevelCategory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SelectLevelCategoryViewController::LevelCategory, false>(this, ___internal__method);
}
// Autogenerated method: LevelSelectionNavigationController.get_selectedBeatmapLevelPack
GlobalNamespace::IBeatmapLevelPack* GlobalNamespace::LevelSelectionNavigationController::get_selectedBeatmapLevelPack() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionNavigationController::get_selectedBeatmapLevelPack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedBeatmapLevelPack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IBeatmapLevelPack*, false>(this, ___internal__method);
}
// Autogenerated method: LevelSelectionNavigationController.Setup
void GlobalNamespace::LevelSelectionNavigationController::Setup(GlobalNamespace::SongPackMask songPackMask, GlobalNamespace::BeatmapDifficultyMask allowedBeatmapDifficultyMask, ::Array<GlobalNamespace::BeatmapCharacteristicSO*>* notAllowedCharacteristics, bool hidePacksIfOneOrNone, bool hidePracticeButton, bool showPlayerStatsInDetailView, ::Il2CppString* actionButtonText, GlobalNamespace::IBeatmapLevelPack* levelPackToBeSelectedAfterPresent, GlobalNamespace::SelectLevelCategoryViewController::LevelCategory startLevelCategory, GlobalNamespace::IPreviewBeatmapLevel* beatmapLevelToBeSelectedAfterPresent, bool enableCustomLevels) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionNavigationController::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(songPackMask), ::il2cpp_utils::ExtractType(allowedBeatmapDifficultyMask), ::il2cpp_utils::ExtractType(notAllowedCharacteristics), ::il2cpp_utils::ExtractType(hidePacksIfOneOrNone), ::il2cpp_utils::ExtractType(hidePracticeButton), ::il2cpp_utils::ExtractType(showPlayerStatsInDetailView), ::il2cpp_utils::ExtractType(actionButtonText), ::il2cpp_utils::ExtractType(levelPackToBeSelectedAfterPresent), ::il2cpp_utils::ExtractType(startLevelCategory), ::il2cpp_utils::ExtractType(beatmapLevelToBeSelectedAfterPresent), ::il2cpp_utils::ExtractType(enableCustomLevels)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, songPackMask, allowedBeatmapDifficultyMask, notAllowedCharacteristics, hidePacksIfOneOrNone, hidePracticeButton, showPlayerStatsInDetailView, actionButtonText, levelPackToBeSelectedAfterPresent, startLevelCategory, beatmapLevelToBeSelectedAfterPresent, enableCustomLevels);
}
// Autogenerated method: LevelSelectionNavigationController.HandleLevelCollectionNavigationControllerDidChangeLevelDetailContent
void GlobalNamespace::LevelSelectionNavigationController::HandleLevelCollectionNavigationControllerDidChangeLevelDetailContent(GlobalNamespace::LevelCollectionNavigationController* viewController, GlobalNamespace::StandardLevelDetailViewController::ContentType contentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionNavigationController::HandleLevelCollectionNavigationControllerDidChangeLevelDetailContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLevelCollectionNavigationControllerDidChangeLevelDetailContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(contentType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, viewController, contentType);
}
// Autogenerated method: LevelSelectionNavigationController.HandleLevelCollectionNavigationControllerDidPressPracticeButton
void GlobalNamespace::LevelSelectionNavigationController::HandleLevelCollectionNavigationControllerDidPressPracticeButton(GlobalNamespace::LevelCollectionNavigationController* arg1, GlobalNamespace::IBeatmapLevel* beatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionNavigationController::HandleLevelCollectionNavigationControllerDidPressPracticeButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLevelCollectionNavigationControllerDidPressPracticeButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(beatmapLevel)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, arg1, beatmapLevel);
}
// Autogenerated method: LevelSelectionNavigationController.HandleLevelCollectionNavigationControllerDidPressActionButton
void GlobalNamespace::LevelSelectionNavigationController::HandleLevelCollectionNavigationControllerDidPressActionButton(GlobalNamespace::LevelCollectionNavigationController* viewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionNavigationController::HandleLevelCollectionNavigationControllerDidPressActionButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLevelCollectionNavigationControllerDidPressActionButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, viewController);
}
// Autogenerated method: LevelSelectionNavigationController.HandleLevelCollectionNavigationControllerDidSelectPack
void GlobalNamespace::LevelSelectionNavigationController::HandleLevelCollectionNavigationControllerDidSelectPack(GlobalNamespace::LevelCollectionNavigationController* viewController, GlobalNamespace::IBeatmapLevelPack* beatmapLevelPack) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionNavigationController::HandleLevelCollectionNavigationControllerDidSelectPack");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLevelCollectionNavigationControllerDidSelectPack", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(beatmapLevelPack)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, viewController, beatmapLevelPack);
}
// Autogenerated method: LevelSelectionNavigationController.HandleLevelCollectionNavigationControllerDidChangeDifficultyBeatmap
void GlobalNamespace::LevelSelectionNavigationController::HandleLevelCollectionNavigationControllerDidChangeDifficultyBeatmap(GlobalNamespace::LevelCollectionNavigationController* viewController, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionNavigationController::HandleLevelCollectionNavigationControllerDidChangeDifficultyBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLevelCollectionNavigationControllerDidChangeDifficultyBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(difficultyBeatmap)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, viewController, difficultyBeatmap);
}
// Autogenerated method: LevelSelectionNavigationController.HandleLevelCollectionNavigationControllerDidPressOpenPackButton
void GlobalNamespace::LevelSelectionNavigationController::HandleLevelCollectionNavigationControllerDidPressOpenPackButton(GlobalNamespace::LevelCollectionNavigationController* viewController, GlobalNamespace::IBeatmapLevelPack* beatmapLevelPack) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionNavigationController::HandleLevelCollectionNavigationControllerDidPressOpenPackButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLevelCollectionNavigationControllerDidPressOpenPackButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(beatmapLevelPack)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, viewController, beatmapLevelPack);
}
// Autogenerated method: LevelSelectionNavigationController.RefreshDetail
void GlobalNamespace::LevelSelectionNavigationController::RefreshDetail() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionNavigationController::RefreshDetail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshDetail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelSelectionNavigationController.ClearSelected
void GlobalNamespace::LevelSelectionNavigationController::ClearSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionNavigationController::ClearSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LevelSelectionNavigationController.LevelFilteringNavigationControllerDidSelectAnnotatedBeatmapLevelCollection
void GlobalNamespace::LevelSelectionNavigationController::LevelFilteringNavigationControllerDidSelectAnnotatedBeatmapLevelCollection(GlobalNamespace::LevelFilteringNavigationController* controller, GlobalNamespace::IAnnotatedBeatmapLevelCollection* annotatedBeatmapLevelCollection, UnityEngine::GameObject* noDataInfoPrefab, GlobalNamespace::BeatmapCharacteristicSO* preferredBeatmapCharacteristic) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionNavigationController::LevelFilteringNavigationControllerDidSelectAnnotatedBeatmapLevelCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LevelFilteringNavigationControllerDidSelectAnnotatedBeatmapLevelCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller), ::il2cpp_utils::ExtractType(annotatedBeatmapLevelCollection), ::il2cpp_utils::ExtractType(noDataInfoPrefab), ::il2cpp_utils::ExtractType(preferredBeatmapCharacteristic)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, controller, annotatedBeatmapLevelCollection, noDataInfoPrefab, preferredBeatmapCharacteristic);
}
// Autogenerated method: LevelSelectionNavigationController.LevelFilteringNavigationControllerDidStartLoading
void GlobalNamespace::LevelSelectionNavigationController::LevelFilteringNavigationControllerDidStartLoading(GlobalNamespace::LevelFilteringNavigationController* controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionNavigationController::LevelFilteringNavigationControllerDidStartLoading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LevelFilteringNavigationControllerDidStartLoading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, controller);
}
// Autogenerated method: LevelSelectionNavigationController.LevelFilteringNavigationControllerDidPressAllSongs
void GlobalNamespace::LevelSelectionNavigationController::LevelFilteringNavigationControllerDidPressAllSongs(GlobalNamespace::LevelFilteringNavigationController* controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionNavigationController::LevelFilteringNavigationControllerDidPressAllSongs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LevelFilteringNavigationControllerDidPressAllSongs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, controller);
}
// Autogenerated method: LevelSelectionNavigationController.DidActivate
void GlobalNamespace::LevelSelectionNavigationController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionNavigationController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: LevelSelectionNavigationController.DidDeactivate
void GlobalNamespace::LevelSelectionNavigationController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LevelSelectionNavigationController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Writing MetadataGetter for method: LevelSelectionNavigationController::add_didChangeLevelDetailContentEvent
// Il2CppName: add_didChangeLevelDetailContentEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSelectionNavigationController::*)(System::Action_2<GlobalNamespace::LevelSelectionNavigationController*, GlobalNamespace::StandardLevelDetailViewController::ContentType>*)>(&LevelSelectionNavigationController::add_didChangeLevelDetailContentEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSelectionNavigationController*), "add_didChangeLevelDetailContentEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::LevelSelectionNavigationController*, GlobalNamespace::StandardLevelDetailViewController::ContentType>*>()});
  }
};
// Writing MetadataGetter for method: LevelSelectionNavigationController::remove_didChangeLevelDetailContentEvent
// Il2CppName: remove_didChangeLevelDetailContentEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSelectionNavigationController::*)(System::Action_2<GlobalNamespace::LevelSelectionNavigationController*, GlobalNamespace::StandardLevelDetailViewController::ContentType>*)>(&LevelSelectionNavigationController::remove_didChangeLevelDetailContentEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSelectionNavigationController*), "remove_didChangeLevelDetailContentEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::LevelSelectionNavigationController*, GlobalNamespace::StandardLevelDetailViewController::ContentType>*>()});
  }
};
// Writing MetadataGetter for method: LevelSelectionNavigationController::add_didSelectLevelPackEvent
// Il2CppName: add_didSelectLevelPackEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSelectionNavigationController::*)(System::Action_2<GlobalNamespace::LevelSelectionNavigationController*, GlobalNamespace::IBeatmapLevelPack*>*)>(&LevelSelectionNavigationController::add_didSelectLevelPackEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSelectionNavigationController*), "add_didSelectLevelPackEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::LevelSelectionNavigationController*, GlobalNamespace::IBeatmapLevelPack*>*>()});
  }
};
// Writing MetadataGetter for method: LevelSelectionNavigationController::remove_didSelectLevelPackEvent
// Il2CppName: remove_didSelectLevelPackEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSelectionNavigationController::*)(System::Action_2<GlobalNamespace::LevelSelectionNavigationController*, GlobalNamespace::IBeatmapLevelPack*>*)>(&LevelSelectionNavigationController::remove_didSelectLevelPackEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSelectionNavigationController*), "remove_didSelectLevelPackEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::LevelSelectionNavigationController*, GlobalNamespace::IBeatmapLevelPack*>*>()});
  }
};
// Writing MetadataGetter for method: LevelSelectionNavigationController::add_didPressActionButtonEvent
// Il2CppName: add_didPressActionButtonEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSelectionNavigationController::*)(System::Action_1<GlobalNamespace::LevelSelectionNavigationController*>*)>(&LevelSelectionNavigationController::add_didPressActionButtonEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSelectionNavigationController*), "add_didPressActionButtonEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::LevelSelectionNavigationController*>*>()});
  }
};
// Writing MetadataGetter for method: LevelSelectionNavigationController::remove_didPressActionButtonEvent
// Il2CppName: remove_didPressActionButtonEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSelectionNavigationController::*)(System::Action_1<GlobalNamespace::LevelSelectionNavigationController*>*)>(&LevelSelectionNavigationController::remove_didPressActionButtonEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSelectionNavigationController*), "remove_didPressActionButtonEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::LevelSelectionNavigationController*>*>()});
  }
};
// Writing MetadataGetter for method: LevelSelectionNavigationController::add_didPressPracticeButtonEvent
// Il2CppName: add_didPressPracticeButtonEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSelectionNavigationController::*)(System::Action_2<GlobalNamespace::LevelSelectionNavigationController*, GlobalNamespace::IBeatmapLevel*>*)>(&LevelSelectionNavigationController::add_didPressPracticeButtonEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSelectionNavigationController*), "add_didPressPracticeButtonEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::LevelSelectionNavigationController*, GlobalNamespace::IBeatmapLevel*>*>()});
  }
};
// Writing MetadataGetter for method: LevelSelectionNavigationController::remove_didPressPracticeButtonEvent
// Il2CppName: remove_didPressPracticeButtonEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSelectionNavigationController::*)(System::Action_2<GlobalNamespace::LevelSelectionNavigationController*, GlobalNamespace::IBeatmapLevel*>*)>(&LevelSelectionNavigationController::remove_didPressPracticeButtonEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSelectionNavigationController*), "remove_didPressPracticeButtonEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::LevelSelectionNavigationController*, GlobalNamespace::IBeatmapLevel*>*>()});
  }
};
// Writing MetadataGetter for method: LevelSelectionNavigationController::add_didChangeDifficultyBeatmapEvent
// Il2CppName: add_didChangeDifficultyBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSelectionNavigationController::*)(System::Action_2<GlobalNamespace::LevelSelectionNavigationController*, GlobalNamespace::IDifficultyBeatmap*>*)>(&LevelSelectionNavigationController::add_didChangeDifficultyBeatmapEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSelectionNavigationController*), "add_didChangeDifficultyBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::LevelSelectionNavigationController*, GlobalNamespace::IDifficultyBeatmap*>*>()});
  }
};
// Writing MetadataGetter for method: LevelSelectionNavigationController::remove_didChangeDifficultyBeatmapEvent
// Il2CppName: remove_didChangeDifficultyBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSelectionNavigationController::*)(System::Action_2<GlobalNamespace::LevelSelectionNavigationController*, GlobalNamespace::IDifficultyBeatmap*>*)>(&LevelSelectionNavigationController::remove_didChangeDifficultyBeatmapEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSelectionNavigationController*), "remove_didChangeDifficultyBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::LevelSelectionNavigationController*, GlobalNamespace::IDifficultyBeatmap*>*>()});
  }
};
// Writing MetadataGetter for method: LevelSelectionNavigationController::get_selectedDifficultyBeatmap
// Il2CppName: get_selectedDifficultyBeatmap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::IDifficultyBeatmap* (LevelSelectionNavigationController::*)()>(&LevelSelectionNavigationController::get_selectedDifficultyBeatmap)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSelectionNavigationController*), "get_selectedDifficultyBeatmap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelSelectionNavigationController::get_selectedBeatmapLevel
// Il2CppName: get_selectedBeatmapLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::IPreviewBeatmapLevel* (LevelSelectionNavigationController::*)()>(&LevelSelectionNavigationController::get_selectedBeatmapLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSelectionNavigationController*), "get_selectedBeatmapLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelSelectionNavigationController::get_selectedLevelCategory
// Il2CppName: get_selectedLevelCategory
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::SelectLevelCategoryViewController::LevelCategory (LevelSelectionNavigationController::*)()>(&LevelSelectionNavigationController::get_selectedLevelCategory)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSelectionNavigationController*), "get_selectedLevelCategory", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelSelectionNavigationController::get_selectedBeatmapLevelPack
// Il2CppName: get_selectedBeatmapLevelPack
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::IBeatmapLevelPack* (LevelSelectionNavigationController::*)()>(&LevelSelectionNavigationController::get_selectedBeatmapLevelPack)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSelectionNavigationController*), "get_selectedBeatmapLevelPack", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelSelectionNavigationController::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSelectionNavigationController::*)(GlobalNamespace::SongPackMask, GlobalNamespace::BeatmapDifficultyMask, ::Array<GlobalNamespace::BeatmapCharacteristicSO*>*, bool, bool, bool, ::Il2CppString*, GlobalNamespace::IBeatmapLevelPack*, GlobalNamespace::SelectLevelCategoryViewController::LevelCategory, GlobalNamespace::IPreviewBeatmapLevel*, bool)>(&LevelSelectionNavigationController::Setup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSelectionNavigationController*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::SongPackMask>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapDifficultyMask>(), ::il2cpp_utils::ExtractIndependentType<::Array<GlobalNamespace::BeatmapCharacteristicSO*>*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IBeatmapLevelPack*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::SelectLevelCategoryViewController::LevelCategory>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IPreviewBeatmapLevel*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: LevelSelectionNavigationController::HandleLevelCollectionNavigationControllerDidChangeLevelDetailContent
// Il2CppName: HandleLevelCollectionNavigationControllerDidChangeLevelDetailContent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSelectionNavigationController::*)(GlobalNamespace::LevelCollectionNavigationController*, GlobalNamespace::StandardLevelDetailViewController::ContentType)>(&LevelSelectionNavigationController::HandleLevelCollectionNavigationControllerDidChangeLevelDetailContent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSelectionNavigationController*), "HandleLevelCollectionNavigationControllerDidChangeLevelDetailContent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::LevelCollectionNavigationController*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::StandardLevelDetailViewController::ContentType>()});
  }
};
// Writing MetadataGetter for method: LevelSelectionNavigationController::HandleLevelCollectionNavigationControllerDidPressPracticeButton
// Il2CppName: HandleLevelCollectionNavigationControllerDidPressPracticeButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSelectionNavigationController::*)(GlobalNamespace::LevelCollectionNavigationController*, GlobalNamespace::IBeatmapLevel*)>(&LevelSelectionNavigationController::HandleLevelCollectionNavigationControllerDidPressPracticeButton)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSelectionNavigationController*), "HandleLevelCollectionNavigationControllerDidPressPracticeButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::LevelCollectionNavigationController*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IBeatmapLevel*>()});
  }
};
// Writing MetadataGetter for method: LevelSelectionNavigationController::HandleLevelCollectionNavigationControllerDidPressActionButton
// Il2CppName: HandleLevelCollectionNavigationControllerDidPressActionButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSelectionNavigationController::*)(GlobalNamespace::LevelCollectionNavigationController*)>(&LevelSelectionNavigationController::HandleLevelCollectionNavigationControllerDidPressActionButton)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSelectionNavigationController*), "HandleLevelCollectionNavigationControllerDidPressActionButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::LevelCollectionNavigationController*>()});
  }
};
// Writing MetadataGetter for method: LevelSelectionNavigationController::HandleLevelCollectionNavigationControllerDidSelectPack
// Il2CppName: HandleLevelCollectionNavigationControllerDidSelectPack
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSelectionNavigationController::*)(GlobalNamespace::LevelCollectionNavigationController*, GlobalNamespace::IBeatmapLevelPack*)>(&LevelSelectionNavigationController::HandleLevelCollectionNavigationControllerDidSelectPack)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSelectionNavigationController*), "HandleLevelCollectionNavigationControllerDidSelectPack", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::LevelCollectionNavigationController*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IBeatmapLevelPack*>()});
  }
};
// Writing MetadataGetter for method: LevelSelectionNavigationController::HandleLevelCollectionNavigationControllerDidChangeDifficultyBeatmap
// Il2CppName: HandleLevelCollectionNavigationControllerDidChangeDifficultyBeatmap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSelectionNavigationController::*)(GlobalNamespace::LevelCollectionNavigationController*, GlobalNamespace::IDifficultyBeatmap*)>(&LevelSelectionNavigationController::HandleLevelCollectionNavigationControllerDidChangeDifficultyBeatmap)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSelectionNavigationController*), "HandleLevelCollectionNavigationControllerDidChangeDifficultyBeatmap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::LevelCollectionNavigationController*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IDifficultyBeatmap*>()});
  }
};
// Writing MetadataGetter for method: LevelSelectionNavigationController::HandleLevelCollectionNavigationControllerDidPressOpenPackButton
// Il2CppName: HandleLevelCollectionNavigationControllerDidPressOpenPackButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSelectionNavigationController::*)(GlobalNamespace::LevelCollectionNavigationController*, GlobalNamespace::IBeatmapLevelPack*)>(&LevelSelectionNavigationController::HandleLevelCollectionNavigationControllerDidPressOpenPackButton)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSelectionNavigationController*), "HandleLevelCollectionNavigationControllerDidPressOpenPackButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::LevelCollectionNavigationController*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IBeatmapLevelPack*>()});
  }
};
// Writing MetadataGetter for method: LevelSelectionNavigationController::RefreshDetail
// Il2CppName: RefreshDetail
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSelectionNavigationController::*)()>(&LevelSelectionNavigationController::RefreshDetail)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSelectionNavigationController*), "RefreshDetail", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelSelectionNavigationController::ClearSelected
// Il2CppName: ClearSelected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSelectionNavigationController::*)()>(&LevelSelectionNavigationController::ClearSelected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSelectionNavigationController*), "ClearSelected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LevelSelectionNavigationController::LevelFilteringNavigationControllerDidSelectAnnotatedBeatmapLevelCollection
// Il2CppName: LevelFilteringNavigationControllerDidSelectAnnotatedBeatmapLevelCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSelectionNavigationController::*)(GlobalNamespace::LevelFilteringNavigationController*, GlobalNamespace::IAnnotatedBeatmapLevelCollection*, UnityEngine::GameObject*, GlobalNamespace::BeatmapCharacteristicSO*)>(&LevelSelectionNavigationController::LevelFilteringNavigationControllerDidSelectAnnotatedBeatmapLevelCollection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSelectionNavigationController*), "LevelFilteringNavigationControllerDidSelectAnnotatedBeatmapLevelCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::LevelFilteringNavigationController*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IAnnotatedBeatmapLevelCollection*>(), ::il2cpp_utils::ExtractIndependentType<UnityEngine::GameObject*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapCharacteristicSO*>()});
  }
};
// Writing MetadataGetter for method: LevelSelectionNavigationController::LevelFilteringNavigationControllerDidStartLoading
// Il2CppName: LevelFilteringNavigationControllerDidStartLoading
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSelectionNavigationController::*)(GlobalNamespace::LevelFilteringNavigationController*)>(&LevelSelectionNavigationController::LevelFilteringNavigationControllerDidStartLoading)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSelectionNavigationController*), "LevelFilteringNavigationControllerDidStartLoading", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::LevelFilteringNavigationController*>()});
  }
};
// Writing MetadataGetter for method: LevelSelectionNavigationController::LevelFilteringNavigationControllerDidPressAllSongs
// Il2CppName: LevelFilteringNavigationControllerDidPressAllSongs
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSelectionNavigationController::*)(GlobalNamespace::LevelFilteringNavigationController*)>(&LevelSelectionNavigationController::LevelFilteringNavigationControllerDidPressAllSongs)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSelectionNavigationController*), "LevelFilteringNavigationControllerDidPressAllSongs", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::LevelFilteringNavigationController*>()});
  }
};
// Writing MetadataGetter for method: LevelSelectionNavigationController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSelectionNavigationController::*)(bool, bool, bool)>(&LevelSelectionNavigationController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSelectionNavigationController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: LevelSelectionNavigationController::DidDeactivate
// Il2CppName: DidDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSelectionNavigationController::*)(bool, bool)>(&LevelSelectionNavigationController::DidDeactivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSelectionNavigationController*), "DidDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: LevelSelectionNavigationController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSelectionNavigationController::*)()>(&LevelSelectionNavigationController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSelectionNavigationController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LevelSelectionNavigationController::*)()>(&LevelSelectionNavigationController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LevelSelectionNavigationController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocalLeaderboardViewController
#include "GlobalNamespace/LocalLeaderboardViewController.hpp"
// Including type: LocalLeaderboardsModel
#include "GlobalNamespace/LocalLeaderboardsModel.hpp"
// Including type: LocalLeaderboardTableView
#include "GlobalNamespace/LocalLeaderboardTableView.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: HMUI.NoTransitionsButton
#include "HMUI/NoTransitionsButton.hpp"
// Including type: HMUI.IconSegmentedControl
#include "HMUI/IconSegmentedControl.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: HMUI.SegmentedControl
#include "HMUI/SegmentedControl.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE25574
// Autogenerated static field getter
// Get static field: static private LocalLeaderboardsModel/LeaderboardType _leaderboardType
GlobalNamespace::LocalLeaderboardsModel::LeaderboardType GlobalNamespace::LocalLeaderboardViewController::_get__leaderboardType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardViewController::_get__leaderboardType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::LocalLeaderboardsModel::LeaderboardType>("", "LocalLeaderboardViewController", "_leaderboardType"));
}
// Autogenerated static field setter
// Set static field: static private LocalLeaderboardsModel/LeaderboardType _leaderboardType
void GlobalNamespace::LocalLeaderboardViewController::_set__leaderboardType(GlobalNamespace::LocalLeaderboardsModel::LeaderboardType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardViewController::_set__leaderboardType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LocalLeaderboardViewController", "_leaderboardType", value));
}
// Autogenerated method: LocalLeaderboardViewController.get_leaderboardsModel
GlobalNamespace::LocalLeaderboardsModel* GlobalNamespace::LocalLeaderboardViewController::get_leaderboardsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardViewController::get_leaderboardsModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leaderboardsModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::LocalLeaderboardsModel*, false>(this, ___internal__method);
}
// Autogenerated method: LocalLeaderboardViewController.Setup
void GlobalNamespace::LocalLeaderboardViewController::Setup(bool enableClear) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardViewController::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enableClear)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, enableClear);
}
// Autogenerated method: LocalLeaderboardViewController.RefreshScopeSegmentedControl
void GlobalNamespace::LocalLeaderboardViewController::RefreshScopeSegmentedControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardViewController::RefreshScopeSegmentedControl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshScopeSegmentedControl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalLeaderboardViewController.HandleScopeSegmentedControlDidSelectCell
void GlobalNamespace::LocalLeaderboardViewController::HandleScopeSegmentedControlDidSelectCell(HMUI::SegmentedControl* segmentedControl, int cellNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardViewController::HandleScopeSegmentedControlDidSelectCell");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleScopeSegmentedControlDidSelectCell", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(segmentedControl), ::il2cpp_utils::ExtractType(cellNumber)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, segmentedControl, cellNumber);
}
// Autogenerated method: LocalLeaderboardViewController.ClearLeaderboards
void GlobalNamespace::LocalLeaderboardViewController::ClearLeaderboards() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardViewController::ClearLeaderboards");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearLeaderboards", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalLeaderboardViewController.SetContent
void GlobalNamespace::LocalLeaderboardViewController::SetContent(::Il2CppString* leaderboardID, GlobalNamespace::LocalLeaderboardsModel::LeaderboardType leaderboardType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardViewController::SetContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardID), ::il2cpp_utils::ExtractType(leaderboardType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, leaderboardID, leaderboardType);
}
// Autogenerated method: LocalLeaderboardViewController.HandleNewScoreWasAddedToLeaderboard
void GlobalNamespace::LocalLeaderboardViewController::HandleNewScoreWasAddedToLeaderboard(::Il2CppString* leaderboardID, GlobalNamespace::LocalLeaderboardsModel::LeaderboardType leaderboardType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardViewController::HandleNewScoreWasAddedToLeaderboard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNewScoreWasAddedToLeaderboard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(leaderboardID), ::il2cpp_utils::ExtractType(leaderboardType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, leaderboardID, leaderboardType);
}
// Autogenerated method: LocalLeaderboardViewController.Refresh
void GlobalNamespace::LocalLeaderboardViewController::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardViewController::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalLeaderboardViewController.<DidActivate>b__18_0
void GlobalNamespace::LocalLeaderboardViewController::$DidActivate$b__18_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardViewController::<DidActivate>b__18_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__18_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalLeaderboardViewController.SetData
void GlobalNamespace::LocalLeaderboardViewController::SetData(GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardViewController::SetData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmap)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, difficultyBeatmap);
}
// Autogenerated method: LocalLeaderboardViewController.DidActivate
void GlobalNamespace::LocalLeaderboardViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: LocalLeaderboardViewController.DidDeactivate
void GlobalNamespace::LocalLeaderboardViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated method: LocalLeaderboardViewController.OnDestroy
void GlobalNamespace::LocalLeaderboardViewController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardViewController::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LocalLeaderboardViewController..cctor
void GlobalNamespace::LocalLeaderboardViewController::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardViewController::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LocalLeaderboardViewController", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: LocalLeaderboardViewController::get_leaderboardsModel
// Il2CppName: get_leaderboardsModel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::LocalLeaderboardsModel* (LocalLeaderboardViewController::*)()>(&LocalLeaderboardViewController::get_leaderboardsModel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LocalLeaderboardViewController*), "get_leaderboardsModel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LocalLeaderboardViewController::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LocalLeaderboardViewController::*)(bool)>(&LocalLeaderboardViewController::Setup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LocalLeaderboardViewController*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: LocalLeaderboardViewController::RefreshScopeSegmentedControl
// Il2CppName: RefreshScopeSegmentedControl
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LocalLeaderboardViewController::*)()>(&LocalLeaderboardViewController::RefreshScopeSegmentedControl)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LocalLeaderboardViewController*), "RefreshScopeSegmentedControl", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LocalLeaderboardViewController::HandleScopeSegmentedControlDidSelectCell
// Il2CppName: HandleScopeSegmentedControlDidSelectCell
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LocalLeaderboardViewController::*)(HMUI::SegmentedControl*, int)>(&LocalLeaderboardViewController::HandleScopeSegmentedControlDidSelectCell)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LocalLeaderboardViewController*), "HandleScopeSegmentedControlDidSelectCell", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::SegmentedControl*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: LocalLeaderboardViewController::ClearLeaderboards
// Il2CppName: ClearLeaderboards
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LocalLeaderboardViewController::*)()>(&LocalLeaderboardViewController::ClearLeaderboards)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LocalLeaderboardViewController*), "ClearLeaderboards", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LocalLeaderboardViewController::SetContent
// Il2CppName: SetContent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LocalLeaderboardViewController::*)(::Il2CppString*, GlobalNamespace::LocalLeaderboardsModel::LeaderboardType)>(&LocalLeaderboardViewController::SetContent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LocalLeaderboardViewController*), "SetContent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::LocalLeaderboardsModel::LeaderboardType>()});
  }
};
// Writing MetadataGetter for method: LocalLeaderboardViewController::HandleNewScoreWasAddedToLeaderboard
// Il2CppName: HandleNewScoreWasAddedToLeaderboard
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LocalLeaderboardViewController::*)(::Il2CppString*, GlobalNamespace::LocalLeaderboardsModel::LeaderboardType)>(&LocalLeaderboardViewController::HandleNewScoreWasAddedToLeaderboard)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LocalLeaderboardViewController*), "HandleNewScoreWasAddedToLeaderboard", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::LocalLeaderboardsModel::LeaderboardType>()});
  }
};
// Writing MetadataGetter for method: LocalLeaderboardViewController::Refresh
// Il2CppName: Refresh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LocalLeaderboardViewController::*)()>(&LocalLeaderboardViewController::Refresh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LocalLeaderboardViewController*), "Refresh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LocalLeaderboardViewController::$DidActivate$b__18_0
// Il2CppName: <DidActivate>b__18_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LocalLeaderboardViewController::*)()>(&LocalLeaderboardViewController::$DidActivate$b__18_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LocalLeaderboardViewController*), "<DidActivate>b__18_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LocalLeaderboardViewController::SetData
// Il2CppName: SetData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LocalLeaderboardViewController::*)(GlobalNamespace::IDifficultyBeatmap*)>(&LocalLeaderboardViewController::SetData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LocalLeaderboardViewController*), "SetData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IDifficultyBeatmap*>()});
  }
};
// Writing MetadataGetter for method: LocalLeaderboardViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LocalLeaderboardViewController::*)(bool, bool, bool)>(&LocalLeaderboardViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LocalLeaderboardViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: LocalLeaderboardViewController::DidDeactivate
// Il2CppName: DidDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LocalLeaderboardViewController::*)(bool, bool)>(&LocalLeaderboardViewController::DidDeactivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LocalLeaderboardViewController*), "DidDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: LocalLeaderboardViewController::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LocalLeaderboardViewController::*)()>(&LocalLeaderboardViewController::OnDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LocalLeaderboardViewController*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LocalLeaderboardViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LocalLeaderboardViewController::*)()>(&LocalLeaderboardViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LocalLeaderboardViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LocalLeaderboardViewController::*)()>(&LocalLeaderboardViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LocalLeaderboardViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LocalLeaderboardViewController::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&LocalLeaderboardViewController::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LocalLeaderboardViewController*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocalNetworkPlayersViewController
#include "GlobalNamespace/LocalNetworkPlayersViewController.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: LocalNetworkPlayerModel
#include "GlobalNamespace/LocalNetworkPlayerModel.hpp"
// Including type: INetworkConfig
#include "GlobalNamespace/INetworkConfig.hpp"
// Including type: HMUI.ToggleBinder
#include "HMUI/ToggleBinder.hpp"
// Including type: INetworkPlayerModel
#include "GlobalNamespace/INetworkPlayerModel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LocalNetworkPlayersViewController.HandleNetworkingToggleChanged
void GlobalNamespace::LocalNetworkPlayersViewController::HandleNetworkingToggleChanged(bool enabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayersViewController::HandleNetworkingToggleChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNetworkingToggleChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(enabled)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, enabled);
}
// Autogenerated method: LocalNetworkPlayersViewController.HandleOpenPartyToggleChanged
void GlobalNamespace::LocalNetworkPlayersViewController::HandleOpenPartyToggleChanged(bool openParty) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayersViewController::HandleOpenPartyToggleChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleOpenPartyToggleChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(openParty)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, openParty);
}
// Autogenerated method: LocalNetworkPlayersViewController.RefreshParty
void GlobalNamespace::LocalNetworkPlayersViewController::RefreshParty(bool overrideHide) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayersViewController::RefreshParty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshParty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(overrideHide)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, overrideHide);
}
// Autogenerated method: LocalNetworkPlayersViewController.get_myPartyTitle
::Il2CppString* GlobalNamespace::LocalNetworkPlayersViewController::get_myPartyTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayersViewController::get_myPartyTitle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_myPartyTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayersViewController.get_otherPlayersTitle
::Il2CppString* GlobalNamespace::LocalNetworkPlayersViewController::get_otherPlayersTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayersViewController::get_otherPlayersTitle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_otherPlayersTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayersViewController.get_networkPlayerModel
GlobalNamespace::INetworkPlayerModel* GlobalNamespace::LocalNetworkPlayersViewController::get_networkPlayerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayersViewController::get_networkPlayerModel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_networkPlayerModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::INetworkPlayerModel*, false>(this, ___internal__method);
}
// Autogenerated method: LocalNetworkPlayersViewController.NetworkPlayersViewControllerDidActivate
void GlobalNamespace::LocalNetworkPlayersViewController::NetworkPlayersViewControllerDidActivate(bool firstActivation, bool addedToHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayersViewController::NetworkPlayersViewControllerDidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NetworkPlayersViewControllerDidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy);
}
// Autogenerated method: LocalNetworkPlayersViewController.DidDeactivate
void GlobalNamespace::LocalNetworkPlayersViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayersViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated method: LocalNetworkPlayersViewController.OnDestroy
void GlobalNamespace::LocalNetworkPlayersViewController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalNetworkPlayersViewController::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: LocalNetworkPlayersViewController::HandleNetworkingToggleChanged
// Il2CppName: HandleNetworkingToggleChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LocalNetworkPlayersViewController::*)(bool)>(&LocalNetworkPlayersViewController::HandleNetworkingToggleChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LocalNetworkPlayersViewController*), "HandleNetworkingToggleChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: LocalNetworkPlayersViewController::HandleOpenPartyToggleChanged
// Il2CppName: HandleOpenPartyToggleChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LocalNetworkPlayersViewController::*)(bool)>(&LocalNetworkPlayersViewController::HandleOpenPartyToggleChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LocalNetworkPlayersViewController*), "HandleOpenPartyToggleChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: LocalNetworkPlayersViewController::RefreshParty
// Il2CppName: RefreshParty
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LocalNetworkPlayersViewController::*)(bool)>(&LocalNetworkPlayersViewController::RefreshParty)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LocalNetworkPlayersViewController*), "RefreshParty", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: LocalNetworkPlayersViewController::get_myPartyTitle
// Il2CppName: get_myPartyTitle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (LocalNetworkPlayersViewController::*)()>(&LocalNetworkPlayersViewController::get_myPartyTitle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LocalNetworkPlayersViewController*), "get_myPartyTitle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LocalNetworkPlayersViewController::get_otherPlayersTitle
// Il2CppName: get_otherPlayersTitle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (LocalNetworkPlayersViewController::*)()>(&LocalNetworkPlayersViewController::get_otherPlayersTitle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LocalNetworkPlayersViewController*), "get_otherPlayersTitle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LocalNetworkPlayersViewController::get_networkPlayerModel
// Il2CppName: get_networkPlayerModel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::INetworkPlayerModel* (LocalNetworkPlayersViewController::*)()>(&LocalNetworkPlayersViewController::get_networkPlayerModel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LocalNetworkPlayersViewController*), "get_networkPlayerModel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LocalNetworkPlayersViewController::NetworkPlayersViewControllerDidActivate
// Il2CppName: NetworkPlayersViewControllerDidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LocalNetworkPlayersViewController::*)(bool, bool)>(&LocalNetworkPlayersViewController::NetworkPlayersViewControllerDidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LocalNetworkPlayersViewController*), "NetworkPlayersViewControllerDidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: LocalNetworkPlayersViewController::DidDeactivate
// Il2CppName: DidDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LocalNetworkPlayersViewController::*)(bool, bool)>(&LocalNetworkPlayersViewController::DidDeactivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LocalNetworkPlayersViewController*), "DidDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: LocalNetworkPlayersViewController::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LocalNetworkPlayersViewController::*)()>(&LocalNetworkPlayersViewController::OnDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LocalNetworkPlayersViewController*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LocalNetworkPlayersViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LocalNetworkPlayersViewController::*)()>(&LocalNetworkPlayersViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LocalNetworkPlayersViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LocalNetworkPlayersViewController::*)()>(&LocalNetworkPlayersViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LocalNetworkPlayersViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainMenuViewController
#include "GlobalNamespace/MainMenuViewController.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: MusicPackPromoBanner
#include "GlobalNamespace/MusicPackPromoBanner.hpp"
// Including type: DlcPromoExperimentModel
#include "GlobalNamespace/DlcPromoExperimentModel.hpp"
// Including type: AppStaticSettingsSO
#include "GlobalNamespace/AppStaticSettingsSO.hpp"
// Including type: IAnalyticsModel
#include "GlobalNamespace/IAnalyticsModel.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: IBeatmapLevelPack
#include "GlobalNamespace/IBeatmapLevelPack.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MainMenuViewController.add_didFinishEvent
void GlobalNamespace::MainMenuViewController::add_didFinishEvent(System::Action_2<GlobalNamespace::MainMenuViewController*, GlobalNamespace::MainMenuViewController::MenuButton>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainMenuViewController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MainMenuViewController.remove_didFinishEvent
void GlobalNamespace::MainMenuViewController::remove_didFinishEvent(System::Action_2<GlobalNamespace::MainMenuViewController*, GlobalNamespace::MainMenuViewController::MenuButton>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainMenuViewController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MainMenuViewController.add_musicPackPromoButtonWasPressedEvent
void GlobalNamespace::MainMenuViewController::add_musicPackPromoButtonWasPressedEvent(System::Action_1<GlobalNamespace::IBeatmapLevelPack*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainMenuViewController::add_musicPackPromoButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_musicPackPromoButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MainMenuViewController.remove_musicPackPromoButtonWasPressedEvent
void GlobalNamespace::MainMenuViewController::remove_musicPackPromoButtonWasPressedEvent(System::Action_1<GlobalNamespace::IBeatmapLevelPack*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainMenuViewController::remove_musicPackPromoButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_musicPackPromoButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MainMenuViewController.PackPromoButtonWasPressed
void GlobalNamespace::MainMenuViewController::PackPromoButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainMenuViewController::PackPromoButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PackPromoButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainMenuViewController.HandleMenuButton
void GlobalNamespace::MainMenuViewController::HandleMenuButton(GlobalNamespace::MainMenuViewController::MenuButton menuButton) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainMenuViewController::HandleMenuButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(menuButton)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, menuButton);
}
// Autogenerated method: MainMenuViewController.<DidActivate>b__20_0
void GlobalNamespace::MainMenuViewController::$DidActivate$b__20_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainMenuViewController::<DidActivate>b__20_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__20_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainMenuViewController.<DidActivate>b__20_1
void GlobalNamespace::MainMenuViewController::$DidActivate$b__20_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainMenuViewController::<DidActivate>b__20_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__20_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainMenuViewController.<DidActivate>b__20_2
void GlobalNamespace::MainMenuViewController::$DidActivate$b__20_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainMenuViewController::<DidActivate>b__20_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__20_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainMenuViewController.<DidActivate>b__20_3
void GlobalNamespace::MainMenuViewController::$DidActivate$b__20_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainMenuViewController::<DidActivate>b__20_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__20_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainMenuViewController.<DidActivate>b__20_4
void GlobalNamespace::MainMenuViewController::$DidActivate$b__20_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainMenuViewController::<DidActivate>b__20_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__20_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainMenuViewController.<DidActivate>b__20_5
void GlobalNamespace::MainMenuViewController::$DidActivate$b__20_5() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainMenuViewController::<DidActivate>b__20_5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__20_5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainMenuViewController.<DidActivate>b__20_6
void GlobalNamespace::MainMenuViewController::$DidActivate$b__20_6() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainMenuViewController::<DidActivate>b__20_6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__20_6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainMenuViewController.<DidActivate>b__20_7
void GlobalNamespace::MainMenuViewController::$DidActivate$b__20_7() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainMenuViewController::<DidActivate>b__20_7");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__20_7", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainMenuViewController.DidActivate
void GlobalNamespace::MainMenuViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainMenuViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Writing MetadataGetter for method: MainMenuViewController::add_didFinishEvent
// Il2CppName: add_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MainMenuViewController::*)(System::Action_2<GlobalNamespace::MainMenuViewController*, GlobalNamespace::MainMenuViewController::MenuButton>*)>(&MainMenuViewController::add_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MainMenuViewController*), "add_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::MainMenuViewController*, GlobalNamespace::MainMenuViewController::MenuButton>*>()});
  }
};
// Writing MetadataGetter for method: MainMenuViewController::remove_didFinishEvent
// Il2CppName: remove_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MainMenuViewController::*)(System::Action_2<GlobalNamespace::MainMenuViewController*, GlobalNamespace::MainMenuViewController::MenuButton>*)>(&MainMenuViewController::remove_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MainMenuViewController*), "remove_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::MainMenuViewController*, GlobalNamespace::MainMenuViewController::MenuButton>*>()});
  }
};
// Writing MetadataGetter for method: MainMenuViewController::add_musicPackPromoButtonWasPressedEvent
// Il2CppName: add_musicPackPromoButtonWasPressedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MainMenuViewController::*)(System::Action_1<GlobalNamespace::IBeatmapLevelPack*>*)>(&MainMenuViewController::add_musicPackPromoButtonWasPressedEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MainMenuViewController*), "add_musicPackPromoButtonWasPressedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::IBeatmapLevelPack*>*>()});
  }
};
// Writing MetadataGetter for method: MainMenuViewController::remove_musicPackPromoButtonWasPressedEvent
// Il2CppName: remove_musicPackPromoButtonWasPressedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MainMenuViewController::*)(System::Action_1<GlobalNamespace::IBeatmapLevelPack*>*)>(&MainMenuViewController::remove_musicPackPromoButtonWasPressedEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MainMenuViewController*), "remove_musicPackPromoButtonWasPressedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::IBeatmapLevelPack*>*>()});
  }
};
// Writing MetadataGetter for method: MainMenuViewController::PackPromoButtonWasPressed
// Il2CppName: PackPromoButtonWasPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MainMenuViewController::*)()>(&MainMenuViewController::PackPromoButtonWasPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MainMenuViewController*), "PackPromoButtonWasPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MainMenuViewController::HandleMenuButton
// Il2CppName: HandleMenuButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MainMenuViewController::*)(GlobalNamespace::MainMenuViewController::MenuButton)>(&MainMenuViewController::HandleMenuButton)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MainMenuViewController*), "HandleMenuButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MainMenuViewController::MenuButton>()});
  }
};
// Writing MetadataGetter for method: MainMenuViewController::$DidActivate$b__20_0
// Il2CppName: <DidActivate>b__20_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MainMenuViewController::*)()>(&MainMenuViewController::$DidActivate$b__20_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MainMenuViewController*), "<DidActivate>b__20_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MainMenuViewController::$DidActivate$b__20_1
// Il2CppName: <DidActivate>b__20_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MainMenuViewController::*)()>(&MainMenuViewController::$DidActivate$b__20_1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MainMenuViewController*), "<DidActivate>b__20_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MainMenuViewController::$DidActivate$b__20_2
// Il2CppName: <DidActivate>b__20_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MainMenuViewController::*)()>(&MainMenuViewController::$DidActivate$b__20_2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MainMenuViewController*), "<DidActivate>b__20_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MainMenuViewController::$DidActivate$b__20_3
// Il2CppName: <DidActivate>b__20_3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MainMenuViewController::*)()>(&MainMenuViewController::$DidActivate$b__20_3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MainMenuViewController*), "<DidActivate>b__20_3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MainMenuViewController::$DidActivate$b__20_4
// Il2CppName: <DidActivate>b__20_4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MainMenuViewController::*)()>(&MainMenuViewController::$DidActivate$b__20_4)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MainMenuViewController*), "<DidActivate>b__20_4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MainMenuViewController::$DidActivate$b__20_5
// Il2CppName: <DidActivate>b__20_5
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MainMenuViewController::*)()>(&MainMenuViewController::$DidActivate$b__20_5)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MainMenuViewController*), "<DidActivate>b__20_5", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MainMenuViewController::$DidActivate$b__20_6
// Il2CppName: <DidActivate>b__20_6
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MainMenuViewController::*)()>(&MainMenuViewController::$DidActivate$b__20_6)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MainMenuViewController*), "<DidActivate>b__20_6", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MainMenuViewController::$DidActivate$b__20_7
// Il2CppName: <DidActivate>b__20_7
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MainMenuViewController::*)()>(&MainMenuViewController::$DidActivate$b__20_7)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MainMenuViewController*), "<DidActivate>b__20_7", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MainMenuViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MainMenuViewController::*)(bool, bool, bool)>(&MainMenuViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MainMenuViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: MainMenuViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MainMenuViewController::*)()>(&MainMenuViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MainMenuViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MainMenuViewController::*)()>(&MainMenuViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MainMenuViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainMenuViewController/MenuButton
#include "GlobalNamespace/MainMenuViewController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MainMenuViewController/MenuButton SoloFreePlay
GlobalNamespace::MainMenuViewController::MenuButton GlobalNamespace::MainMenuViewController::MenuButton::_get_SoloFreePlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainMenuViewController::MenuButton::_get_SoloFreePlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MainMenuViewController::MenuButton>("", "MainMenuViewController/MenuButton", "SoloFreePlay"));
}
// Autogenerated static field setter
// Set static field: static public MainMenuViewController/MenuButton SoloFreePlay
void GlobalNamespace::MainMenuViewController::MenuButton::_set_SoloFreePlay(GlobalNamespace::MainMenuViewController::MenuButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainMenuViewController::MenuButton::_set_SoloFreePlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainMenuViewController/MenuButton", "SoloFreePlay", value));
}
// Autogenerated static field getter
// Get static field: static public MainMenuViewController/MenuButton Party
GlobalNamespace::MainMenuViewController::MenuButton GlobalNamespace::MainMenuViewController::MenuButton::_get_Party() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainMenuViewController::MenuButton::_get_Party");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MainMenuViewController::MenuButton>("", "MainMenuViewController/MenuButton", "Party"));
}
// Autogenerated static field setter
// Set static field: static public MainMenuViewController/MenuButton Party
void GlobalNamespace::MainMenuViewController::MenuButton::_set_Party(GlobalNamespace::MainMenuViewController::MenuButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainMenuViewController::MenuButton::_set_Party");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainMenuViewController/MenuButton", "Party", value));
}
// Autogenerated static field getter
// Get static field: static public MainMenuViewController/MenuButton BeatmapEditor
GlobalNamespace::MainMenuViewController::MenuButton GlobalNamespace::MainMenuViewController::MenuButton::_get_BeatmapEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainMenuViewController::MenuButton::_get_BeatmapEditor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MainMenuViewController::MenuButton>("", "MainMenuViewController/MenuButton", "BeatmapEditor"));
}
// Autogenerated static field setter
// Set static field: static public MainMenuViewController/MenuButton BeatmapEditor
void GlobalNamespace::MainMenuViewController::MenuButton::_set_BeatmapEditor(GlobalNamespace::MainMenuViewController::MenuButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainMenuViewController::MenuButton::_set_BeatmapEditor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainMenuViewController/MenuButton", "BeatmapEditor", value));
}
// Autogenerated static field getter
// Get static field: static public MainMenuViewController/MenuButton SoloCampaign
GlobalNamespace::MainMenuViewController::MenuButton GlobalNamespace::MainMenuViewController::MenuButton::_get_SoloCampaign() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainMenuViewController::MenuButton::_get_SoloCampaign");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MainMenuViewController::MenuButton>("", "MainMenuViewController/MenuButton", "SoloCampaign"));
}
// Autogenerated static field setter
// Set static field: static public MainMenuViewController/MenuButton SoloCampaign
void GlobalNamespace::MainMenuViewController::MenuButton::_set_SoloCampaign(GlobalNamespace::MainMenuViewController::MenuButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainMenuViewController::MenuButton::_set_SoloCampaign");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainMenuViewController/MenuButton", "SoloCampaign", value));
}
// Autogenerated static field getter
// Get static field: static public MainMenuViewController/MenuButton FloorAdjust
GlobalNamespace::MainMenuViewController::MenuButton GlobalNamespace::MainMenuViewController::MenuButton::_get_FloorAdjust() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainMenuViewController::MenuButton::_get_FloorAdjust");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MainMenuViewController::MenuButton>("", "MainMenuViewController/MenuButton", "FloorAdjust"));
}
// Autogenerated static field setter
// Set static field: static public MainMenuViewController/MenuButton FloorAdjust
void GlobalNamespace::MainMenuViewController::MenuButton::_set_FloorAdjust(GlobalNamespace::MainMenuViewController::MenuButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainMenuViewController::MenuButton::_set_FloorAdjust");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainMenuViewController/MenuButton", "FloorAdjust", value));
}
// Autogenerated static field getter
// Get static field: static public MainMenuViewController/MenuButton Quit
GlobalNamespace::MainMenuViewController::MenuButton GlobalNamespace::MainMenuViewController::MenuButton::_get_Quit() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainMenuViewController::MenuButton::_get_Quit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MainMenuViewController::MenuButton>("", "MainMenuViewController/MenuButton", "Quit"));
}
// Autogenerated static field setter
// Set static field: static public MainMenuViewController/MenuButton Quit
void GlobalNamespace::MainMenuViewController::MenuButton::_set_Quit(GlobalNamespace::MainMenuViewController::MenuButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainMenuViewController::MenuButton::_set_Quit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainMenuViewController/MenuButton", "Quit", value));
}
// Autogenerated static field getter
// Get static field: static public MainMenuViewController/MenuButton Multiplayer
GlobalNamespace::MainMenuViewController::MenuButton GlobalNamespace::MainMenuViewController::MenuButton::_get_Multiplayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainMenuViewController::MenuButton::_get_Multiplayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MainMenuViewController::MenuButton>("", "MainMenuViewController/MenuButton", "Multiplayer"));
}
// Autogenerated static field setter
// Set static field: static public MainMenuViewController/MenuButton Multiplayer
void GlobalNamespace::MainMenuViewController::MenuButton::_set_Multiplayer(GlobalNamespace::MainMenuViewController::MenuButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainMenuViewController::MenuButton::_set_Multiplayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainMenuViewController/MenuButton", "Multiplayer", value));
}
// Autogenerated static field getter
// Get static field: static public MainMenuViewController/MenuButton Options
GlobalNamespace::MainMenuViewController::MenuButton GlobalNamespace::MainMenuViewController::MenuButton::_get_Options() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainMenuViewController::MenuButton::_get_Options");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MainMenuViewController::MenuButton>("", "MainMenuViewController/MenuButton", "Options"));
}
// Autogenerated static field setter
// Set static field: static public MainMenuViewController/MenuButton Options
void GlobalNamespace::MainMenuViewController::MenuButton::_set_Options(GlobalNamespace::MainMenuViewController::MenuButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainMenuViewController::MenuButton::_set_Options");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainMenuViewController/MenuButton", "Options", value));
}
// Autogenerated static field getter
// Get static field: static public MainMenuViewController/MenuButton HowToPlay
GlobalNamespace::MainMenuViewController::MenuButton GlobalNamespace::MainMenuViewController::MenuButton::_get_HowToPlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainMenuViewController::MenuButton::_get_HowToPlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MainMenuViewController::MenuButton>("", "MainMenuViewController/MenuButton", "HowToPlay"));
}
// Autogenerated static field setter
// Set static field: static public MainMenuViewController/MenuButton HowToPlay
void GlobalNamespace::MainMenuViewController::MenuButton::_set_HowToPlay(GlobalNamespace::MainMenuViewController::MenuButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainMenuViewController::MenuButton::_set_HowToPlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MainMenuViewController/MenuButton", "HowToPlay", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SettingsSubMenuInfo
#include "GlobalNamespace/SettingsSubMenuInfo.hpp"
// Including type: HMUI.ViewController
#include "HMUI/ViewController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SettingsSubMenuInfo.get_viewController
HMUI::ViewController* GlobalNamespace::SettingsSubMenuInfo::get_viewController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SettingsSubMenuInfo::get_viewController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_viewController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<HMUI::ViewController*, false>(this, ___internal__method);
}
// Autogenerated method: SettingsSubMenuInfo.get_localizedMenuName
::Il2CppString* GlobalNamespace::SettingsSubMenuInfo::get_localizedMenuName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SettingsSubMenuInfo::get_localizedMenuName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localizedMenuName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: SettingsSubMenuInfo::get_viewController
// Il2CppName: get_viewController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HMUI::ViewController* (SettingsSubMenuInfo::*)()>(&SettingsSubMenuInfo::get_viewController)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SettingsSubMenuInfo*), "get_viewController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SettingsSubMenuInfo::get_localizedMenuName
// Il2CppName: get_localizedMenuName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (SettingsSubMenuInfo::*)()>(&SettingsSubMenuInfo::get_localizedMenuName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SettingsSubMenuInfo*), "get_localizedMenuName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SettingsSubMenuInfo::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SettingsSubMenuInfo::*)()>(&SettingsSubMenuInfo::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SettingsSubMenuInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SettingsSubMenuInfo::*)()>(&SettingsSubMenuInfo::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SettingsSubMenuInfo*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MainSettingsMenuViewController
#include "GlobalNamespace/MainSettingsMenuViewController.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: SettingsSubMenuInfo
#include "GlobalNamespace/SettingsSubMenuInfo.hpp"
// Including type: HMUI.TextSegmentedControl
#include "HMUI/TextSegmentedControl.hpp"
// Including type: HMUI.SegmentedControl
#include "HMUI/SegmentedControl.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MainSettingsMenuViewController.add_didSelectSettingsSubMenuEvent
void GlobalNamespace::MainSettingsMenuViewController::add_didSelectSettingsSubMenuEvent(System::Action_2<GlobalNamespace::SettingsSubMenuInfo*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsMenuViewController::add_didSelectSettingsSubMenuEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectSettingsSubMenuEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MainSettingsMenuViewController.remove_didSelectSettingsSubMenuEvent
void GlobalNamespace::MainSettingsMenuViewController::remove_didSelectSettingsSubMenuEvent(System::Action_2<GlobalNamespace::SettingsSubMenuInfo*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsMenuViewController::remove_didSelectSettingsSubMenuEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectSettingsSubMenuEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MainSettingsMenuViewController.get_numberOfSubMenus
int GlobalNamespace::MainSettingsMenuViewController::get_numberOfSubMenus() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsMenuViewController::get_numberOfSubMenus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_numberOfSubMenus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MainSettingsMenuViewController.get_selectedSubMenuInfo
GlobalNamespace::SettingsSubMenuInfo* GlobalNamespace::MainSettingsMenuViewController::get_selectedSubMenuInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsMenuViewController::get_selectedSubMenuInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedSubMenuInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::SettingsSubMenuInfo*, false>(this, ___internal__method);
}
// Autogenerated method: MainSettingsMenuViewController.Init
void GlobalNamespace::MainSettingsMenuViewController::Init(int selectedSubMenuInfoIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsMenuViewController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectedSubMenuInfoIdx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, selectedSubMenuInfoIdx);
}
// Autogenerated method: MainSettingsMenuViewController.HandleSettingsMenuSegmentedControlDidSelectCell
void GlobalNamespace::MainSettingsMenuViewController::HandleSettingsMenuSegmentedControlDidSelectCell(HMUI::SegmentedControl* segmentedControl, int cellIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsMenuViewController::HandleSettingsMenuSegmentedControlDidSelectCell");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSettingsMenuSegmentedControlDidSelectCell", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(segmentedControl), ::il2cpp_utils::ExtractType(cellIdx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, segmentedControl, cellIdx);
}
// Autogenerated method: MainSettingsMenuViewController.DidActivate
void GlobalNamespace::MainSettingsMenuViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainSettingsMenuViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Writing MetadataGetter for method: MainSettingsMenuViewController::add_didSelectSettingsSubMenuEvent
// Il2CppName: add_didSelectSettingsSubMenuEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MainSettingsMenuViewController::*)(System::Action_2<GlobalNamespace::SettingsSubMenuInfo*, int>*)>(&MainSettingsMenuViewController::add_didSelectSettingsSubMenuEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MainSettingsMenuViewController*), "add_didSelectSettingsSubMenuEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::SettingsSubMenuInfo*, int>*>()});
  }
};
// Writing MetadataGetter for method: MainSettingsMenuViewController::remove_didSelectSettingsSubMenuEvent
// Il2CppName: remove_didSelectSettingsSubMenuEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MainSettingsMenuViewController::*)(System::Action_2<GlobalNamespace::SettingsSubMenuInfo*, int>*)>(&MainSettingsMenuViewController::remove_didSelectSettingsSubMenuEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MainSettingsMenuViewController*), "remove_didSelectSettingsSubMenuEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::SettingsSubMenuInfo*, int>*>()});
  }
};
// Writing MetadataGetter for method: MainSettingsMenuViewController::get_numberOfSubMenus
// Il2CppName: get_numberOfSubMenus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (MainSettingsMenuViewController::*)()>(&MainSettingsMenuViewController::get_numberOfSubMenus)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MainSettingsMenuViewController*), "get_numberOfSubMenus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MainSettingsMenuViewController::get_selectedSubMenuInfo
// Il2CppName: get_selectedSubMenuInfo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::SettingsSubMenuInfo* (MainSettingsMenuViewController::*)()>(&MainSettingsMenuViewController::get_selectedSubMenuInfo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MainSettingsMenuViewController*), "get_selectedSubMenuInfo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MainSettingsMenuViewController::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MainSettingsMenuViewController::*)(int)>(&MainSettingsMenuViewController::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MainSettingsMenuViewController*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MainSettingsMenuViewController::HandleSettingsMenuSegmentedControlDidSelectCell
// Il2CppName: HandleSettingsMenuSegmentedControlDidSelectCell
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MainSettingsMenuViewController::*)(HMUI::SegmentedControl*, int)>(&MainSettingsMenuViewController::HandleSettingsMenuSegmentedControlDidSelectCell)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MainSettingsMenuViewController*), "HandleSettingsMenuSegmentedControlDidSelectCell", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::SegmentedControl*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MainSettingsMenuViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MainSettingsMenuViewController::*)(bool, bool, bool)>(&MainSettingsMenuViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MainSettingsMenuViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: MainSettingsMenuViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MainSettingsMenuViewController::*)()>(&MainSettingsMenuViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MainSettingsMenuViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MainSettingsMenuViewController::*)()>(&MainSettingsMenuViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MainSettingsMenuViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionHelpViewController
#include "GlobalNamespace/MissionHelpViewController.hpp"
// Including type: MissionHelpViewController/MissionHelpGameObjectPair
#include "GlobalNamespace/MissionHelpViewController_MissionHelpGameObjectPair.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: MissionHelpSO
#include "GlobalNamespace/MissionHelpSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionHelpViewController.add_didFinishEvent
void GlobalNamespace::MissionHelpViewController::add_didFinishEvent(System::Action_1<GlobalNamespace::MissionHelpViewController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionHelpViewController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionHelpViewController.remove_didFinishEvent
void GlobalNamespace::MissionHelpViewController::remove_didFinishEvent(System::Action_1<GlobalNamespace::MissionHelpViewController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionHelpViewController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionHelpViewController.Setup
void GlobalNamespace::MissionHelpViewController::Setup(GlobalNamespace::MissionHelpSO* missionHelp) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionHelpViewController::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionHelp)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, missionHelp);
}
// Autogenerated method: MissionHelpViewController.RefreshContent
void GlobalNamespace::MissionHelpViewController::RefreshContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionHelpViewController::RefreshContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionHelpViewController.OkButtonPressed
void GlobalNamespace::MissionHelpViewController::OkButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionHelpViewController::OkButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OkButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionHelpViewController.DidActivate
void GlobalNamespace::MissionHelpViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionHelpViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Writing MetadataGetter for method: MissionHelpViewController::add_didFinishEvent
// Il2CppName: add_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionHelpViewController::*)(System::Action_1<GlobalNamespace::MissionHelpViewController*>*)>(&MissionHelpViewController::add_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionHelpViewController*), "add_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::MissionHelpViewController*>*>()});
  }
};
// Writing MetadataGetter for method: MissionHelpViewController::remove_didFinishEvent
// Il2CppName: remove_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionHelpViewController::*)(System::Action_1<GlobalNamespace::MissionHelpViewController*>*)>(&MissionHelpViewController::remove_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionHelpViewController*), "remove_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::MissionHelpViewController*>*>()});
  }
};
// Writing MetadataGetter for method: MissionHelpViewController::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionHelpViewController::*)(GlobalNamespace::MissionHelpSO*)>(&MissionHelpViewController::Setup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionHelpViewController*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MissionHelpSO*>()});
  }
};
// Writing MetadataGetter for method: MissionHelpViewController::RefreshContent
// Il2CppName: RefreshContent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionHelpViewController::*)()>(&MissionHelpViewController::RefreshContent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionHelpViewController*), "RefreshContent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MissionHelpViewController::OkButtonPressed
// Il2CppName: OkButtonPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionHelpViewController::*)()>(&MissionHelpViewController::OkButtonPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionHelpViewController*), "OkButtonPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MissionHelpViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionHelpViewController::*)(bool, bool, bool)>(&MissionHelpViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionHelpViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: MissionHelpViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionHelpViewController::*)()>(&MissionHelpViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionHelpViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionHelpViewController::*)()>(&MissionHelpViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionHelpViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionHelpViewController/MissionHelpGameObjectPair
#include "GlobalNamespace/MissionHelpViewController_MissionHelpGameObjectPair.hpp"
// Including type: MissionHelpSO
#include "GlobalNamespace/MissionHelpSO.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: MissionHelpViewController::MissionHelpGameObjectPair::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionHelpViewController::MissionHelpGameObjectPair::*)()>(&MissionHelpViewController::MissionHelpGameObjectPair::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionHelpViewController::MissionHelpGameObjectPair*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionHelpViewController::MissionHelpGameObjectPair::*)()>(&MissionHelpViewController::MissionHelpGameObjectPair::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionHelpViewController::MissionHelpGameObjectPair*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionLevelDetailViewController
#include "GlobalNamespace/MissionLevelDetailViewController.hpp"
// Including type: MissionLevelDetailViewController/<>c__DisplayClass14_0
#include "GlobalNamespace/MissionLevelDetailViewController_--c__DisplayClass14_0.hpp"
// Including type: GameplayModifiersModelSO
#include "GlobalNamespace/GameplayModifiersModelSO.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: LevelBar
#include "GlobalNamespace/LevelBar.hpp"
// Including type: ObjectiveListItemsList
#include "GlobalNamespace/ObjectiveListItemsList.hpp"
// Including type: GameplayModifierInfoListItemsList
#include "GlobalNamespace/GameplayModifierInfoListItemsList.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: MissionNode
#include "GlobalNamespace/MissionNode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionLevelDetailViewController.add_didPressPlayButtonEvent
void GlobalNamespace::MissionLevelDetailViewController::add_didPressPlayButtonEvent(System::Action_1<GlobalNamespace::MissionLevelDetailViewController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelDetailViewController::add_didPressPlayButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didPressPlayButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionLevelDetailViewController.remove_didPressPlayButtonEvent
void GlobalNamespace::MissionLevelDetailViewController::remove_didPressPlayButtonEvent(System::Action_1<GlobalNamespace::MissionLevelDetailViewController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelDetailViewController::remove_didPressPlayButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didPressPlayButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionLevelDetailViewController.get_missionNode
GlobalNamespace::MissionNode* GlobalNamespace::MissionLevelDetailViewController::get_missionNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelDetailViewController::get_missionNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_missionNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MissionNode*, false>(this, ___internal__method);
}
// Autogenerated method: MissionLevelDetailViewController.Setup
void GlobalNamespace::MissionLevelDetailViewController::Setup(GlobalNamespace::MissionNode* missionNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelDetailViewController::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionNode)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, missionNode);
}
// Autogenerated method: MissionLevelDetailViewController.RefreshContent
void GlobalNamespace::MissionLevelDetailViewController::RefreshContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelDetailViewController::RefreshContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionLevelDetailViewController.PlayButtonPressed
void GlobalNamespace::MissionLevelDetailViewController::PlayButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelDetailViewController::PlayButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionLevelDetailViewController.DidActivate
void GlobalNamespace::MissionLevelDetailViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelDetailViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Writing MetadataGetter for method: MissionLevelDetailViewController::add_didPressPlayButtonEvent
// Il2CppName: add_didPressPlayButtonEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionLevelDetailViewController::*)(System::Action_1<GlobalNamespace::MissionLevelDetailViewController*>*)>(&MissionLevelDetailViewController::add_didPressPlayButtonEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionLevelDetailViewController*), "add_didPressPlayButtonEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::MissionLevelDetailViewController*>*>()});
  }
};
// Writing MetadataGetter for method: MissionLevelDetailViewController::remove_didPressPlayButtonEvent
// Il2CppName: remove_didPressPlayButtonEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionLevelDetailViewController::*)(System::Action_1<GlobalNamespace::MissionLevelDetailViewController*>*)>(&MissionLevelDetailViewController::remove_didPressPlayButtonEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionLevelDetailViewController*), "remove_didPressPlayButtonEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::MissionLevelDetailViewController*>*>()});
  }
};
// Writing MetadataGetter for method: MissionLevelDetailViewController::get_missionNode
// Il2CppName: get_missionNode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::MissionNode* (MissionLevelDetailViewController::*)()>(&MissionLevelDetailViewController::get_missionNode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionLevelDetailViewController*), "get_missionNode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MissionLevelDetailViewController::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionLevelDetailViewController::*)(GlobalNamespace::MissionNode*)>(&MissionLevelDetailViewController::Setup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionLevelDetailViewController*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MissionNode*>()});
  }
};
// Writing MetadataGetter for method: MissionLevelDetailViewController::RefreshContent
// Il2CppName: RefreshContent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionLevelDetailViewController::*)()>(&MissionLevelDetailViewController::RefreshContent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionLevelDetailViewController*), "RefreshContent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MissionLevelDetailViewController::PlayButtonPressed
// Il2CppName: PlayButtonPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionLevelDetailViewController::*)()>(&MissionLevelDetailViewController::PlayButtonPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionLevelDetailViewController*), "PlayButtonPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MissionLevelDetailViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionLevelDetailViewController::*)(bool, bool, bool)>(&MissionLevelDetailViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionLevelDetailViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: MissionLevelDetailViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionLevelDetailViewController::*)()>(&MissionLevelDetailViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionLevelDetailViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionLevelDetailViewController::*)()>(&MissionLevelDetailViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionLevelDetailViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionLevelDetailViewController/<>c__DisplayClass14_0
#include "GlobalNamespace/MissionLevelDetailViewController_--c__DisplayClass14_0.hpp"
// Including type: MissionObjective
#include "GlobalNamespace/MissionObjective.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: GameplayModifierParamsSO
#include "GlobalNamespace/GameplayModifierParamsSO.hpp"
// Including type: ObjectiveListItem
#include "GlobalNamespace/ObjectiveListItem.hpp"
// Including type: GameplayModifierInfoListItem
#include "GlobalNamespace/GameplayModifierInfoListItem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionLevelDetailViewController/<>c__DisplayClass14_0.<RefreshContent>b__0
void GlobalNamespace::MissionLevelDetailViewController::$$c__DisplayClass14_0::$RefreshContent$b__0(int idx, GlobalNamespace::ObjectiveListItem* objectiveListItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelDetailViewController::$$c__DisplayClass14_0::<RefreshContent>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RefreshContent>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(objectiveListItem)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx, objectiveListItem);
}
// Autogenerated method: MissionLevelDetailViewController/<>c__DisplayClass14_0.<RefreshContent>b__1
void GlobalNamespace::MissionLevelDetailViewController::$$c__DisplayClass14_0::$RefreshContent$b__1(int idx, GlobalNamespace::GameplayModifierInfoListItem* gameplayModifierInfoListItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelDetailViewController::$$c__DisplayClass14_0::<RefreshContent>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RefreshContent>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(gameplayModifierInfoListItem)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx, gameplayModifierInfoListItem);
}
// Writing MetadataGetter for method: MissionLevelDetailViewController::$$c__DisplayClass14_0::$RefreshContent$b__0
// Il2CppName: <RefreshContent>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionLevelDetailViewController::$$c__DisplayClass14_0::*)(int, GlobalNamespace::ObjectiveListItem*)>(&MissionLevelDetailViewController::$$c__DisplayClass14_0::$RefreshContent$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionLevelDetailViewController::$$c__DisplayClass14_0*), "<RefreshContent>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ObjectiveListItem*>()});
  }
};
// Writing MetadataGetter for method: MissionLevelDetailViewController::$$c__DisplayClass14_0::$RefreshContent$b__1
// Il2CppName: <RefreshContent>b__1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionLevelDetailViewController::$$c__DisplayClass14_0::*)(int, GlobalNamespace::GameplayModifierInfoListItem*)>(&MissionLevelDetailViewController::$$c__DisplayClass14_0::$RefreshContent$b__1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionLevelDetailViewController::$$c__DisplayClass14_0*), "<RefreshContent>b__1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameplayModifierInfoListItem*>()});
  }
};
// Writing MetadataGetter for method: MissionLevelDetailViewController::$$c__DisplayClass14_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionLevelDetailViewController::$$c__DisplayClass14_0::*)()>(&MissionLevelDetailViewController::$$c__DisplayClass14_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionLevelDetailViewController::$$c__DisplayClass14_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionLevelDetailViewController::$$c__DisplayClass14_0::*)()>(&MissionLevelDetailViewController::$$c__DisplayClass14_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionLevelDetailViewController::$$c__DisplayClass14_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionLevelModifiersViewController
#include "GlobalNamespace/MissionLevelModifiersViewController.hpp"
// Including type: MissionLevelModifiersViewController/<>c__DisplayClass7_0
#include "GlobalNamespace/MissionLevelModifiersViewController_--c__DisplayClass7_0.hpp"
// Including type: GameplayModifiersModelSO
#include "GlobalNamespace/GameplayModifiersModelSO.hpp"
// Including type: GameplayModifierInfoListItemsList
#include "GlobalNamespace/GameplayModifierInfoListItemsList.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionLevelModifiersViewController.Setup
void GlobalNamespace::MissionLevelModifiersViewController::Setup(GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelModifiersViewController::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: MissionLevelModifiersViewController.RefreshContent
void GlobalNamespace::MissionLevelModifiersViewController::RefreshContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelModifiersViewController::RefreshContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionLevelModifiersViewController.DidActivate
void GlobalNamespace::MissionLevelModifiersViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelModifiersViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Writing MetadataGetter for method: MissionLevelModifiersViewController::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionLevelModifiersViewController::*)(GlobalNamespace::GameplayModifiers*)>(&MissionLevelModifiersViewController::Setup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionLevelModifiersViewController*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameplayModifiers*>()});
  }
};
// Writing MetadataGetter for method: MissionLevelModifiersViewController::RefreshContent
// Il2CppName: RefreshContent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionLevelModifiersViewController::*)()>(&MissionLevelModifiersViewController::RefreshContent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionLevelModifiersViewController*), "RefreshContent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MissionLevelModifiersViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionLevelModifiersViewController::*)(bool, bool, bool)>(&MissionLevelModifiersViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionLevelModifiersViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: MissionLevelModifiersViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionLevelModifiersViewController::*)()>(&MissionLevelModifiersViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionLevelModifiersViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionLevelModifiersViewController::*)()>(&MissionLevelModifiersViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionLevelModifiersViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionLevelModifiersViewController/<>c__DisplayClass7_0
#include "GlobalNamespace/MissionLevelModifiersViewController_--c__DisplayClass7_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: GameplayModifierParamsSO
#include "GlobalNamespace/GameplayModifierParamsSO.hpp"
// Including type: GameplayModifierInfoListItem
#include "GlobalNamespace/GameplayModifierInfoListItem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionLevelModifiersViewController/<>c__DisplayClass7_0.<RefreshContent>b__0
void GlobalNamespace::MissionLevelModifiersViewController::$$c__DisplayClass7_0::$RefreshContent$b__0(int idx, GlobalNamespace::GameplayModifierInfoListItem* gameplayModifierInfoListItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelModifiersViewController::$$c__DisplayClass7_0::<RefreshContent>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RefreshContent>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(gameplayModifierInfoListItem)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx, gameplayModifierInfoListItem);
}
// Writing MetadataGetter for method: MissionLevelModifiersViewController::$$c__DisplayClass7_0::$RefreshContent$b__0
// Il2CppName: <RefreshContent>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionLevelModifiersViewController::$$c__DisplayClass7_0::*)(int, GlobalNamespace::GameplayModifierInfoListItem*)>(&MissionLevelModifiersViewController::$$c__DisplayClass7_0::$RefreshContent$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionLevelModifiersViewController::$$c__DisplayClass7_0*), "<RefreshContent>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameplayModifierInfoListItem*>()});
  }
};
// Writing MetadataGetter for method: MissionLevelModifiersViewController::$$c__DisplayClass7_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionLevelModifiersViewController::$$c__DisplayClass7_0::*)()>(&MissionLevelModifiersViewController::$$c__DisplayClass7_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionLevelModifiersViewController::$$c__DisplayClass7_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionLevelModifiersViewController::$$c__DisplayClass7_0::*)()>(&MissionLevelModifiersViewController::$$c__DisplayClass7_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionLevelModifiersViewController::$$c__DisplayClass7_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionResultsViewController
#include "GlobalNamespace/MissionResultsViewController.hpp"
// Including type: MissionResultsViewController/<StartFireworksAfterDelay>d__28
#include "GlobalNamespace/MissionResultsViewController_-StartFireworksAfterDelay-d__28.hpp"
// Including type: MissionResultsViewController/<>c__DisplayClass29_0
#include "GlobalNamespace/MissionResultsViewController_--c__DisplayClass29_0.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: ResultObjectiveListItemsList
#include "GlobalNamespace/ResultObjectiveListItemsList.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: FireworksController
#include "GlobalNamespace/FireworksController.hpp"
// Including type: SongPreviewPlayer
#include "GlobalNamespace/SongPreviewPlayer.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: MissionNode
#include "GlobalNamespace/MissionNode.hpp"
// Including type: MissionCompletionResults
#include "GlobalNamespace/MissionCompletionResults.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionResultsViewController.add_continueButtonPressedEvent
void GlobalNamespace::MissionResultsViewController::add_continueButtonPressedEvent(System::Action_1<GlobalNamespace::MissionResultsViewController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionResultsViewController::add_continueButtonPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_continueButtonPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionResultsViewController.remove_continueButtonPressedEvent
void GlobalNamespace::MissionResultsViewController::remove_continueButtonPressedEvent(System::Action_1<GlobalNamespace::MissionResultsViewController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionResultsViewController::remove_continueButtonPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_continueButtonPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionResultsViewController.add_retryButtonPressedEvent
void GlobalNamespace::MissionResultsViewController::add_retryButtonPressedEvent(System::Action_1<GlobalNamespace::MissionResultsViewController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionResultsViewController::add_retryButtonPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_retryButtonPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionResultsViewController.remove_retryButtonPressedEvent
void GlobalNamespace::MissionResultsViewController::remove_retryButtonPressedEvent(System::Action_1<GlobalNamespace::MissionResultsViewController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionResultsViewController::remove_retryButtonPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_retryButtonPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionResultsViewController.Init
void GlobalNamespace::MissionResultsViewController::Init(GlobalNamespace::MissionNode* missionNode, GlobalNamespace::MissionCompletionResults* missionCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionResultsViewController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionNode), ::il2cpp_utils::ExtractType(missionCompletionResults)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, missionNode, missionCompletionResults);
}
// Autogenerated method: MissionResultsViewController.StartFireworksAfterDelay
System::Collections::IEnumerator* GlobalNamespace::MissionResultsViewController::StartFireworksAfterDelay(float delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionResultsViewController::StartFireworksAfterDelay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartFireworksAfterDelay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delay)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, delay);
}
// Autogenerated method: MissionResultsViewController.SetDataToUI
void GlobalNamespace::MissionResultsViewController::SetDataToUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionResultsViewController::SetDataToUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDataToUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionResultsViewController.ContinueButtonPressed
void GlobalNamespace::MissionResultsViewController::ContinueButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionResultsViewController::ContinueButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContinueButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionResultsViewController.RetryButtonPressed
void GlobalNamespace::MissionResultsViewController::RetryButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionResultsViewController::RetryButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RetryButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionResultsViewController.DidActivate
void GlobalNamespace::MissionResultsViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionResultsViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: MissionResultsViewController.DidDeactivate
void GlobalNamespace::MissionResultsViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionResultsViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Writing MetadataGetter for method: MissionResultsViewController::add_continueButtonPressedEvent
// Il2CppName: add_continueButtonPressedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionResultsViewController::*)(System::Action_1<GlobalNamespace::MissionResultsViewController*>*)>(&MissionResultsViewController::add_continueButtonPressedEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionResultsViewController*), "add_continueButtonPressedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::MissionResultsViewController*>*>()});
  }
};
// Writing MetadataGetter for method: MissionResultsViewController::remove_continueButtonPressedEvent
// Il2CppName: remove_continueButtonPressedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionResultsViewController::*)(System::Action_1<GlobalNamespace::MissionResultsViewController*>*)>(&MissionResultsViewController::remove_continueButtonPressedEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionResultsViewController*), "remove_continueButtonPressedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::MissionResultsViewController*>*>()});
  }
};
// Writing MetadataGetter for method: MissionResultsViewController::add_retryButtonPressedEvent
// Il2CppName: add_retryButtonPressedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionResultsViewController::*)(System::Action_1<GlobalNamespace::MissionResultsViewController*>*)>(&MissionResultsViewController::add_retryButtonPressedEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionResultsViewController*), "add_retryButtonPressedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::MissionResultsViewController*>*>()});
  }
};
// Writing MetadataGetter for method: MissionResultsViewController::remove_retryButtonPressedEvent
// Il2CppName: remove_retryButtonPressedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionResultsViewController::*)(System::Action_1<GlobalNamespace::MissionResultsViewController*>*)>(&MissionResultsViewController::remove_retryButtonPressedEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionResultsViewController*), "remove_retryButtonPressedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::MissionResultsViewController*>*>()});
  }
};
// Writing MetadataGetter for method: MissionResultsViewController::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionResultsViewController::*)(GlobalNamespace::MissionNode*, GlobalNamespace::MissionCompletionResults*)>(&MissionResultsViewController::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionResultsViewController*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MissionNode*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MissionCompletionResults*>()});
  }
};
// Writing MetadataGetter for method: MissionResultsViewController::StartFireworksAfterDelay
// Il2CppName: StartFireworksAfterDelay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (MissionResultsViewController::*)(float)>(&MissionResultsViewController::StartFireworksAfterDelay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionResultsViewController*), "StartFireworksAfterDelay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: MissionResultsViewController::SetDataToUI
// Il2CppName: SetDataToUI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionResultsViewController::*)()>(&MissionResultsViewController::SetDataToUI)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionResultsViewController*), "SetDataToUI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MissionResultsViewController::ContinueButtonPressed
// Il2CppName: ContinueButtonPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionResultsViewController::*)()>(&MissionResultsViewController::ContinueButtonPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionResultsViewController*), "ContinueButtonPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MissionResultsViewController::RetryButtonPressed
// Il2CppName: RetryButtonPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionResultsViewController::*)()>(&MissionResultsViewController::RetryButtonPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionResultsViewController*), "RetryButtonPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MissionResultsViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionResultsViewController::*)(bool, bool, bool)>(&MissionResultsViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionResultsViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: MissionResultsViewController::DidDeactivate
// Il2CppName: DidDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionResultsViewController::*)(bool, bool)>(&MissionResultsViewController::DidDeactivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionResultsViewController*), "DidDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: MissionResultsViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionResultsViewController::*)()>(&MissionResultsViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionResultsViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionResultsViewController::*)()>(&MissionResultsViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionResultsViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionResultsViewController/<StartFireworksAfterDelay>d__28
#include "GlobalNamespace/MissionResultsViewController_-StartFireworksAfterDelay-d__28.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionResultsViewController/<StartFireworksAfterDelay>d__28.System.IDisposable.Dispose
void GlobalNamespace::MissionResultsViewController::$StartFireworksAfterDelay$d__28::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionResultsViewController::$StartFireworksAfterDelay$d__28::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionResultsViewController/<StartFireworksAfterDelay>d__28.MoveNext
bool GlobalNamespace::MissionResultsViewController::$StartFireworksAfterDelay$d__28::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionResultsViewController::$StartFireworksAfterDelay$d__28::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionResultsViewController/<StartFireworksAfterDelay>d__28.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MissionResultsViewController::$StartFireworksAfterDelay$d__28::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionResultsViewController::$StartFireworksAfterDelay$d__28::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MissionResultsViewController/<StartFireworksAfterDelay>d__28.System.Collections.IEnumerator.Reset
void GlobalNamespace::MissionResultsViewController::$StartFireworksAfterDelay$d__28::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionResultsViewController::$StartFireworksAfterDelay$d__28::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionResultsViewController/<StartFireworksAfterDelay>d__28.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MissionResultsViewController::$StartFireworksAfterDelay$d__28::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionResultsViewController::$StartFireworksAfterDelay$d__28::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MissionResultsViewController::$StartFireworksAfterDelay$d__28::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionResultsViewController::$StartFireworksAfterDelay$d__28::*)(int)>(&MissionResultsViewController::$StartFireworksAfterDelay$d__28::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionResultsViewController::$StartFireworksAfterDelay$d__28*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionResultsViewController::$StartFireworksAfterDelay$d__28::*)(int)>(&MissionResultsViewController::$StartFireworksAfterDelay$d__28::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionResultsViewController::$StartFireworksAfterDelay$d__28*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: MissionResultsViewController::$StartFireworksAfterDelay$d__28::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionResultsViewController::$StartFireworksAfterDelay$d__28::*)()>(&MissionResultsViewController::$StartFireworksAfterDelay$d__28::System_IDisposable_Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionResultsViewController::$StartFireworksAfterDelay$d__28*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MissionResultsViewController::$StartFireworksAfterDelay$d__28::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MissionResultsViewController::$StartFireworksAfterDelay$d__28::*)()>(&MissionResultsViewController::$StartFireworksAfterDelay$d__28::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionResultsViewController::$StartFireworksAfterDelay$d__28*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MissionResultsViewController::$StartFireworksAfterDelay$d__28::System_Collections_Generic_IEnumerator$System_Object$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Object>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (MissionResultsViewController::$StartFireworksAfterDelay$d__28::*)()>(&MissionResultsViewController::$StartFireworksAfterDelay$d__28::System_Collections_Generic_IEnumerator$System_Object$_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionResultsViewController::$StartFireworksAfterDelay$d__28*), "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MissionResultsViewController::$StartFireworksAfterDelay$d__28::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionResultsViewController::$StartFireworksAfterDelay$d__28::*)()>(&MissionResultsViewController::$StartFireworksAfterDelay$d__28::System_Collections_IEnumerator_Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionResultsViewController::$StartFireworksAfterDelay$d__28*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MissionResultsViewController::$StartFireworksAfterDelay$d__28::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (MissionResultsViewController::$StartFireworksAfterDelay$d__28::*)()>(&MissionResultsViewController::$StartFireworksAfterDelay$d__28::System_Collections_IEnumerator_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionResultsViewController::$StartFireworksAfterDelay$d__28*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionResultsViewController/<>c__DisplayClass29_0
#include "GlobalNamespace/MissionResultsViewController_--c__DisplayClass29_0.hpp"
// Including type: MissionObjective
#include "GlobalNamespace/MissionObjective.hpp"
// Including type: MissionObjectiveResult
#include "GlobalNamespace/MissionObjectiveResult.hpp"
// Including type: ResultObjectiveListItem
#include "GlobalNamespace/ResultObjectiveListItem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionResultsViewController/<>c__DisplayClass29_0.<SetDataToUI>b__0
void GlobalNamespace::MissionResultsViewController::$$c__DisplayClass29_0::$SetDataToUI$b__0(int idx, GlobalNamespace::ResultObjectiveListItem* objectiveListItem) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionResultsViewController::$$c__DisplayClass29_0::<SetDataToUI>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetDataToUI>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(objectiveListItem)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx, objectiveListItem);
}
// Writing MetadataGetter for method: MissionResultsViewController::$$c__DisplayClass29_0::$SetDataToUI$b__0
// Il2CppName: <SetDataToUI>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionResultsViewController::$$c__DisplayClass29_0::*)(int, GlobalNamespace::ResultObjectiveListItem*)>(&MissionResultsViewController::$$c__DisplayClass29_0::$SetDataToUI$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionResultsViewController::$$c__DisplayClass29_0*), "<SetDataToUI>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ResultObjectiveListItem*>()});
  }
};
// Writing MetadataGetter for method: MissionResultsViewController::$$c__DisplayClass29_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionResultsViewController::$$c__DisplayClass29_0::*)()>(&MissionResultsViewController::$$c__DisplayClass29_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionResultsViewController::$$c__DisplayClass29_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionResultsViewController::$$c__DisplayClass29_0::*)()>(&MissionResultsViewController::$$c__DisplayClass29_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionResultsViewController::$$c__DisplayClass29_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionSelectionMapViewController
#include "GlobalNamespace/MissionSelectionMapViewController.hpp"
// Including type: HMUI.ScrollView
#include "HMUI/ScrollView.hpp"
// Including type: MissionNodeSelectionManager
#include "GlobalNamespace/MissionNodeSelectionManager.hpp"
// Including type: MissionMapAnimationController
#include "GlobalNamespace/MissionMapAnimationController.hpp"
// Including type: SongPreviewPlayer
#include "GlobalNamespace/SongPreviewPlayer.hpp"
// Including type: DataModels.Levels.PerceivedLoudnessPerLevelModel
#include "DataModels/Levels/PerceivedLoudnessPerLevelModel.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: MissionNode
#include "GlobalNamespace/MissionNode.hpp"
// Including type: MissionNodeVisualController
#include "GlobalNamespace/MissionNodeVisualController.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionSelectionMapViewController.add_didSelectMissionLevelEvent
void GlobalNamespace::MissionSelectionMapViewController::add_didSelectMissionLevelEvent(System::Action_2<GlobalNamespace::MissionSelectionMapViewController*, GlobalNamespace::MissionNode*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionSelectionMapViewController::add_didSelectMissionLevelEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectMissionLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionSelectionMapViewController.remove_didSelectMissionLevelEvent
void GlobalNamespace::MissionSelectionMapViewController::remove_didSelectMissionLevelEvent(System::Action_2<GlobalNamespace::MissionSelectionMapViewController*, GlobalNamespace::MissionNode*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionSelectionMapViewController::remove_didSelectMissionLevelEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectMissionLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionSelectionMapViewController.get_animatedUpdateIsRequired
bool GlobalNamespace::MissionSelectionMapViewController::get_animatedUpdateIsRequired() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionSelectionMapViewController::get_animatedUpdateIsRequired");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_animatedUpdateIsRequired", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MissionSelectionMapViewController.HandleMissionNodeSelectionManagerDidSelectMissionNode
void GlobalNamespace::MissionSelectionMapViewController::HandleMissionNodeSelectionManagerDidSelectMissionNode(GlobalNamespace::MissionNodeVisualController* missionNodeVisualController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionSelectionMapViewController::HandleMissionNodeSelectionManagerDidSelectMissionNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMissionNodeSelectionManagerDidSelectMissionNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(missionNodeVisualController)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, missionNodeVisualController);
}
// Autogenerated method: MissionSelectionMapViewController.ShowMissionClearedAnimation
void GlobalNamespace::MissionSelectionMapViewController::ShowMissionClearedAnimation(System::Action* finishCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionSelectionMapViewController::ShowMissionClearedAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowMissionClearedAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finishCallback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, finishCallback);
}
// Autogenerated method: MissionSelectionMapViewController.DeselectSelectedNode
void GlobalNamespace::MissionSelectionMapViewController::DeselectSelectedNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionSelectionMapViewController::DeselectSelectedNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeselectSelectedNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionSelectionMapViewController.DidActivate
void GlobalNamespace::MissionSelectionMapViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionSelectionMapViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: MissionSelectionMapViewController.DidDeactivate
void GlobalNamespace::MissionSelectionMapViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionSelectionMapViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Writing MetadataGetter for method: MissionSelectionMapViewController::add_didSelectMissionLevelEvent
// Il2CppName: add_didSelectMissionLevelEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionSelectionMapViewController::*)(System::Action_2<GlobalNamespace::MissionSelectionMapViewController*, GlobalNamespace::MissionNode*>*)>(&MissionSelectionMapViewController::add_didSelectMissionLevelEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionSelectionMapViewController*), "add_didSelectMissionLevelEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::MissionSelectionMapViewController*, GlobalNamespace::MissionNode*>*>()});
  }
};
// Writing MetadataGetter for method: MissionSelectionMapViewController::remove_didSelectMissionLevelEvent
// Il2CppName: remove_didSelectMissionLevelEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionSelectionMapViewController::*)(System::Action_2<GlobalNamespace::MissionSelectionMapViewController*, GlobalNamespace::MissionNode*>*)>(&MissionSelectionMapViewController::remove_didSelectMissionLevelEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionSelectionMapViewController*), "remove_didSelectMissionLevelEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::MissionSelectionMapViewController*, GlobalNamespace::MissionNode*>*>()});
  }
};
// Writing MetadataGetter for method: MissionSelectionMapViewController::get_animatedUpdateIsRequired
// Il2CppName: get_animatedUpdateIsRequired
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (MissionSelectionMapViewController::*)()>(&MissionSelectionMapViewController::get_animatedUpdateIsRequired)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionSelectionMapViewController*), "get_animatedUpdateIsRequired", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MissionSelectionMapViewController::HandleMissionNodeSelectionManagerDidSelectMissionNode
// Il2CppName: HandleMissionNodeSelectionManagerDidSelectMissionNode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionSelectionMapViewController::*)(GlobalNamespace::MissionNodeVisualController*)>(&MissionSelectionMapViewController::HandleMissionNodeSelectionManagerDidSelectMissionNode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionSelectionMapViewController*), "HandleMissionNodeSelectionManagerDidSelectMissionNode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MissionNodeVisualController*>()});
  }
};
// Writing MetadataGetter for method: MissionSelectionMapViewController::ShowMissionClearedAnimation
// Il2CppName: ShowMissionClearedAnimation
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionSelectionMapViewController::*)(System::Action*)>(&MissionSelectionMapViewController::ShowMissionClearedAnimation)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionSelectionMapViewController*), "ShowMissionClearedAnimation", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: MissionSelectionMapViewController::DeselectSelectedNode
// Il2CppName: DeselectSelectedNode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionSelectionMapViewController::*)()>(&MissionSelectionMapViewController::DeselectSelectedNode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionSelectionMapViewController*), "DeselectSelectedNode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MissionSelectionMapViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionSelectionMapViewController::*)(bool, bool, bool)>(&MissionSelectionMapViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionSelectionMapViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: MissionSelectionMapViewController::DidDeactivate
// Il2CppName: DidDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionSelectionMapViewController::*)(bool, bool)>(&MissionSelectionMapViewController::DidDeactivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionSelectionMapViewController*), "DidDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: MissionSelectionMapViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionSelectionMapViewController::*)()>(&MissionSelectionMapViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionSelectionMapViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionSelectionMapViewController::*)()>(&MissionSelectionMapViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionSelectionMapViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionSelectionNavigationController
#include "GlobalNamespace/MissionSelectionNavigationController.hpp"
// Including type: MissionSelectionNavigationController/<>c__DisplayClass11_0
#include "GlobalNamespace/MissionSelectionNavigationController_--c__DisplayClass11_0.hpp"
// Including type: MissionSelectionMapViewController
#include "GlobalNamespace/MissionSelectionMapViewController.hpp"
// Including type: MissionLevelDetailViewController
#include "GlobalNamespace/MissionLevelDetailViewController.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: MissionNode
#include "GlobalNamespace/MissionNode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionSelectionNavigationController.add_didPressPlayButtonEvent
void GlobalNamespace::MissionSelectionNavigationController::add_didPressPlayButtonEvent(System::Action_1<GlobalNamespace::MissionSelectionNavigationController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionSelectionNavigationController::add_didPressPlayButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didPressPlayButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionSelectionNavigationController.remove_didPressPlayButtonEvent
void GlobalNamespace::MissionSelectionNavigationController::remove_didPressPlayButtonEvent(System::Action_1<GlobalNamespace::MissionSelectionNavigationController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionSelectionNavigationController::remove_didPressPlayButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didPressPlayButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionSelectionNavigationController.get_selectedMissionNode
GlobalNamespace::MissionNode* GlobalNamespace::MissionSelectionNavigationController::get_selectedMissionNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionSelectionNavigationController::get_selectedMissionNode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedMissionNode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MissionNode*, false>(this, ___internal__method);
}
// Autogenerated method: MissionSelectionNavigationController.HandleMissionSelectionMapViewControllerDidSelectMissionLevel
void GlobalNamespace::MissionSelectionNavigationController::HandleMissionSelectionMapViewControllerDidSelectMissionLevel(GlobalNamespace::MissionSelectionMapViewController* viewController, GlobalNamespace::MissionNode* _missionNode) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionSelectionNavigationController::HandleMissionSelectionMapViewControllerDidSelectMissionLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMissionSelectionMapViewControllerDidSelectMissionLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController), ::il2cpp_utils::ExtractType(_missionNode)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, viewController, _missionNode);
}
// Autogenerated method: MissionSelectionNavigationController.HandleMissionLevelDetailViewControllerDidPressPlayButton
void GlobalNamespace::MissionSelectionNavigationController::HandleMissionLevelDetailViewControllerDidPressPlayButton(GlobalNamespace::MissionLevelDetailViewController* viewController) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionSelectionNavigationController::HandleMissionLevelDetailViewControllerDidPressPlayButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMissionLevelDetailViewControllerDidPressPlayButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(viewController)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, viewController);
}
// Autogenerated method: MissionSelectionNavigationController.PresentMissionClearedIfNeeded
void GlobalNamespace::MissionSelectionNavigationController::PresentMissionClearedIfNeeded(System::Action_1<bool>* finishedCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionSelectionNavigationController::PresentMissionClearedIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PresentMissionClearedIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finishedCallback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, finishedCallback);
}
// Autogenerated method: MissionSelectionNavigationController.DidActivate
void GlobalNamespace::MissionSelectionNavigationController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionSelectionNavigationController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: MissionSelectionNavigationController.DidDeactivate
void GlobalNamespace::MissionSelectionNavigationController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionSelectionNavigationController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Writing MetadataGetter for method: MissionSelectionNavigationController::add_didPressPlayButtonEvent
// Il2CppName: add_didPressPlayButtonEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionSelectionNavigationController::*)(System::Action_1<GlobalNamespace::MissionSelectionNavigationController*>*)>(&MissionSelectionNavigationController::add_didPressPlayButtonEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionSelectionNavigationController*), "add_didPressPlayButtonEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::MissionSelectionNavigationController*>*>()});
  }
};
// Writing MetadataGetter for method: MissionSelectionNavigationController::remove_didPressPlayButtonEvent
// Il2CppName: remove_didPressPlayButtonEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionSelectionNavigationController::*)(System::Action_1<GlobalNamespace::MissionSelectionNavigationController*>*)>(&MissionSelectionNavigationController::remove_didPressPlayButtonEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionSelectionNavigationController*), "remove_didPressPlayButtonEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::MissionSelectionNavigationController*>*>()});
  }
};
// Writing MetadataGetter for method: MissionSelectionNavigationController::get_selectedMissionNode
// Il2CppName: get_selectedMissionNode
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::MissionNode* (MissionSelectionNavigationController::*)()>(&MissionSelectionNavigationController::get_selectedMissionNode)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionSelectionNavigationController*), "get_selectedMissionNode", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MissionSelectionNavigationController::HandleMissionSelectionMapViewControllerDidSelectMissionLevel
// Il2CppName: HandleMissionSelectionMapViewControllerDidSelectMissionLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionSelectionNavigationController::*)(GlobalNamespace::MissionSelectionMapViewController*, GlobalNamespace::MissionNode*)>(&MissionSelectionNavigationController::HandleMissionSelectionMapViewControllerDidSelectMissionLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionSelectionNavigationController*), "HandleMissionSelectionMapViewControllerDidSelectMissionLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MissionSelectionMapViewController*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MissionNode*>()});
  }
};
// Writing MetadataGetter for method: MissionSelectionNavigationController::HandleMissionLevelDetailViewControllerDidPressPlayButton
// Il2CppName: HandleMissionLevelDetailViewControllerDidPressPlayButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionSelectionNavigationController::*)(GlobalNamespace::MissionLevelDetailViewController*)>(&MissionSelectionNavigationController::HandleMissionLevelDetailViewControllerDidPressPlayButton)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionSelectionNavigationController*), "HandleMissionLevelDetailViewControllerDidPressPlayButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MissionLevelDetailViewController*>()});
  }
};
// Writing MetadataGetter for method: MissionSelectionNavigationController::PresentMissionClearedIfNeeded
// Il2CppName: PresentMissionClearedIfNeeded
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionSelectionNavigationController::*)(System::Action_1<bool>*)>(&MissionSelectionNavigationController::PresentMissionClearedIfNeeded)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionSelectionNavigationController*), "PresentMissionClearedIfNeeded", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<bool>*>()});
  }
};
// Writing MetadataGetter for method: MissionSelectionNavigationController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionSelectionNavigationController::*)(bool, bool, bool)>(&MissionSelectionNavigationController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionSelectionNavigationController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: MissionSelectionNavigationController::DidDeactivate
// Il2CppName: DidDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionSelectionNavigationController::*)(bool, bool)>(&MissionSelectionNavigationController::DidDeactivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionSelectionNavigationController*), "DidDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: MissionSelectionNavigationController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionSelectionNavigationController::*)()>(&MissionSelectionNavigationController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionSelectionNavigationController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionSelectionNavigationController::*)()>(&MissionSelectionNavigationController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionSelectionNavigationController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionSelectionNavigationController/<>c__DisplayClass11_0
#include "GlobalNamespace/MissionSelectionNavigationController_--c__DisplayClass11_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionSelectionNavigationController/<>c__DisplayClass11_0.<PresentMissionClearedIfNeeded>b__0
void GlobalNamespace::MissionSelectionNavigationController::$$c__DisplayClass11_0::$PresentMissionClearedIfNeeded$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionSelectionNavigationController::$$c__DisplayClass11_0::<PresentMissionClearedIfNeeded>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PresentMissionClearedIfNeeded>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionSelectionNavigationController/<>c__DisplayClass11_0.<PresentMissionClearedIfNeeded>b__1
void GlobalNamespace::MissionSelectionNavigationController::$$c__DisplayClass11_0::$PresentMissionClearedIfNeeded$b__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionSelectionNavigationController::$$c__DisplayClass11_0::<PresentMissionClearedIfNeeded>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PresentMissionClearedIfNeeded>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: MissionSelectionNavigationController::$$c__DisplayClass11_0::$PresentMissionClearedIfNeeded$b__0
// Il2CppName: <PresentMissionClearedIfNeeded>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionSelectionNavigationController::$$c__DisplayClass11_0::*)()>(&MissionSelectionNavigationController::$$c__DisplayClass11_0::$PresentMissionClearedIfNeeded$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionSelectionNavigationController::$$c__DisplayClass11_0*), "<PresentMissionClearedIfNeeded>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MissionSelectionNavigationController::$$c__DisplayClass11_0::$PresentMissionClearedIfNeeded$b__1
// Il2CppName: <PresentMissionClearedIfNeeded>b__1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionSelectionNavigationController::$$c__DisplayClass11_0::*)()>(&MissionSelectionNavigationController::$$c__DisplayClass11_0::$PresentMissionClearedIfNeeded$b__1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionSelectionNavigationController::$$c__DisplayClass11_0*), "<PresentMissionClearedIfNeeded>b__1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MissionSelectionNavigationController::$$c__DisplayClass11_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionSelectionNavigationController::$$c__DisplayClass11_0::*)()>(&MissionSelectionNavigationController::$$c__DisplayClass11_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionSelectionNavigationController::$$c__DisplayClass11_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MissionSelectionNavigationController::$$c__DisplayClass11_0::*)()>(&MissionSelectionNavigationController::$$c__DisplayClass11_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MissionSelectionNavigationController::$$c__DisplayClass11_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BaseMultiplayerStartGameCountdownViewController
#include "GlobalNamespace/BaseMultiplayerStartGameCountdownViewController.hpp"
// Including type: BeatmapSelectionView
#include "GlobalNamespace/BeatmapSelectionView.hpp"
// Including type: ModifiersSelectionView
#include "GlobalNamespace/ModifiersSelectionView.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: HMUI.ToggleBinder
#include "HMUI/ToggleBinder.hpp"
// Including type: ILevelGameplaySetupData
#include "GlobalNamespace/ILevelGameplaySetupData.hpp"
// Including type: ILobbyPlayerDataModel
#include "GlobalNamespace/ILobbyPlayerDataModel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BaseMultiplayerStartGameCountdownViewController.add_playerActiveStateChangedEvent
void GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::add_playerActiveStateChangedEvent(System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::add_playerActiveStateChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playerActiveStateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseMultiplayerStartGameCountdownViewController.remove_playerActiveStateChangedEvent
void GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::remove_playerActiveStateChangedEvent(System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::remove_playerActiveStateChangedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playerActiveStateChangedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseMultiplayerStartGameCountdownViewController.SetLevelGameplaySetupData
void GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::SetLevelGameplaySetupData(GlobalNamespace::ILevelGameplaySetupData* levelGameplaySetupData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::SetLevelGameplaySetupData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLevelGameplaySetupData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelGameplaySetupData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelGameplaySetupData);
}
// Autogenerated method: BaseMultiplayerStartGameCountdownViewController.SetLobbyPlayerData
void GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::SetLobbyPlayerData(GlobalNamespace::ILobbyPlayerDataModel* lobbyPlayerDataModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::SetLobbyPlayerData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLobbyPlayerData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lobbyPlayerDataModel)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lobbyPlayerDataModel);
}
// Autogenerated method: BaseMultiplayerStartGameCountdownViewController.<DidActivate>b__9_0
void GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::$DidActivate$b__9_0(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::<DidActivate>b__9_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__9_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BaseMultiplayerStartGameCountdownViewController.DidActivate
void GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: BaseMultiplayerStartGameCountdownViewController.DidDeactivate
void GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated method: BaseMultiplayerStartGameCountdownViewController.OnDestroy
void GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BaseMultiplayerStartGameCountdownViewController::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: BaseMultiplayerStartGameCountdownViewController::add_playerActiveStateChangedEvent
// Il2CppName: add_playerActiveStateChangedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseMultiplayerStartGameCountdownViewController::*)(System::Action_1<bool>*)>(&BaseMultiplayerStartGameCountdownViewController::add_playerActiveStateChangedEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseMultiplayerStartGameCountdownViewController*), "add_playerActiveStateChangedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<bool>*>()});
  }
};
// Writing MetadataGetter for method: BaseMultiplayerStartGameCountdownViewController::remove_playerActiveStateChangedEvent
// Il2CppName: remove_playerActiveStateChangedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseMultiplayerStartGameCountdownViewController::*)(System::Action_1<bool>*)>(&BaseMultiplayerStartGameCountdownViewController::remove_playerActiveStateChangedEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseMultiplayerStartGameCountdownViewController*), "remove_playerActiveStateChangedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<bool>*>()});
  }
};
// Writing MetadataGetter for method: BaseMultiplayerStartGameCountdownViewController::SetLevelGameplaySetupData
// Il2CppName: SetLevelGameplaySetupData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseMultiplayerStartGameCountdownViewController::*)(GlobalNamespace::ILevelGameplaySetupData*)>(&BaseMultiplayerStartGameCountdownViewController::SetLevelGameplaySetupData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseMultiplayerStartGameCountdownViewController*), "SetLevelGameplaySetupData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ILevelGameplaySetupData*>()});
  }
};
// Writing MetadataGetter for method: BaseMultiplayerStartGameCountdownViewController::SetLobbyPlayerData
// Il2CppName: SetLobbyPlayerData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseMultiplayerStartGameCountdownViewController::*)(GlobalNamespace::ILobbyPlayerDataModel*)>(&BaseMultiplayerStartGameCountdownViewController::SetLobbyPlayerData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseMultiplayerStartGameCountdownViewController*), "SetLobbyPlayerData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ILobbyPlayerDataModel*>()});
  }
};
// Writing MetadataGetter for method: BaseMultiplayerStartGameCountdownViewController::$DidActivate$b__9_0
// Il2CppName: <DidActivate>b__9_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseMultiplayerStartGameCountdownViewController::*)(bool)>(&BaseMultiplayerStartGameCountdownViewController::$DidActivate$b__9_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseMultiplayerStartGameCountdownViewController*), "<DidActivate>b__9_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: BaseMultiplayerStartGameCountdownViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseMultiplayerStartGameCountdownViewController::*)(bool, bool, bool)>(&BaseMultiplayerStartGameCountdownViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseMultiplayerStartGameCountdownViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: BaseMultiplayerStartGameCountdownViewController::DidDeactivate
// Il2CppName: DidDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseMultiplayerStartGameCountdownViewController::*)(bool, bool)>(&BaseMultiplayerStartGameCountdownViewController::DidDeactivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseMultiplayerStartGameCountdownViewController*), "DidDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: BaseMultiplayerStartGameCountdownViewController::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseMultiplayerStartGameCountdownViewController::*)()>(&BaseMultiplayerStartGameCountdownViewController::OnDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseMultiplayerStartGameCountdownViewController*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BaseMultiplayerStartGameCountdownViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseMultiplayerStartGameCountdownViewController::*)()>(&BaseMultiplayerStartGameCountdownViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseMultiplayerStartGameCountdownViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BaseMultiplayerStartGameCountdownViewController::*)()>(&BaseMultiplayerStartGameCountdownViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BaseMultiplayerStartGameCountdownViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CenterStageLobbyViewController
#include "GlobalNamespace/CenterStageLobbyViewController.hpp"
// Including type: BeatmapSelectionView
#include "GlobalNamespace/BeatmapSelectionView.hpp"
// Including type: ModifiersSelectionView
#include "GlobalNamespace/ModifiersSelectionView.hpp"
// Including type: ILevelGameplaySetupData
#include "GlobalNamespace/ILevelGameplaySetupData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CenterStageLobbyViewController.SetLevelGameplaySetupData
void GlobalNamespace::CenterStageLobbyViewController::SetLevelGameplaySetupData(GlobalNamespace::ILevelGameplaySetupData* levelGameplaySetupData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CenterStageLobbyViewController::SetLevelGameplaySetupData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLevelGameplaySetupData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelGameplaySetupData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelGameplaySetupData);
}
// Writing MetadataGetter for method: CenterStageLobbyViewController::SetLevelGameplaySetupData
// Il2CppName: SetLevelGameplaySetupData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CenterStageLobbyViewController::*)(GlobalNamespace::ILevelGameplaySetupData*)>(&CenterStageLobbyViewController::SetLevelGameplaySetupData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CenterStageLobbyViewController*), "SetLevelGameplaySetupData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ILevelGameplaySetupData*>()});
  }
};
// Writing MetadataGetter for method: CenterStageLobbyViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CenterStageLobbyViewController::*)()>(&CenterStageLobbyViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CenterStageLobbyViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CenterStageLobbyViewController::*)()>(&CenterStageLobbyViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CenterStageLobbyViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CenterStageScreenController
#include "GlobalNamespace/CenterStageScreenController.hpp"
// Including type: MenuLightsPresetSO
#include "GlobalNamespace/MenuLightsPresetSO.hpp"
// Including type: BeatmapSelectionView
#include "GlobalNamespace/BeatmapSelectionView.hpp"
// Including type: ModifiersSelectionView
#include "GlobalNamespace/ModifiersSelectionView.hpp"
// Including type: CountdownController
#include "GlobalNamespace/CountdownController.hpp"
// Including type: MultiplayerLobbyCenterScreenLayoutAnimator
#include "GlobalNamespace/MultiplayerLobbyCenterScreenLayoutAnimator.hpp"
// Including type: ILobbyPlayersDataModel
#include "GlobalNamespace/ILobbyPlayersDataModel.hpp"
// Including type: MenuLightsManager
#include "GlobalNamespace/MenuLightsManager.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
// Including type: ILobbyPlayerDataModel
#include "GlobalNamespace/ILobbyPlayerDataModel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CenterStageScreenController.get_countdownShown
bool GlobalNamespace::CenterStageScreenController::get_countdownShown() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CenterStageScreenController::get_countdownShown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_countdownShown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CenterStageScreenController.set_countdownShown
void GlobalNamespace::CenterStageScreenController::set_countdownShown(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CenterStageScreenController::set_countdownShown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_countdownShown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CenterStageScreenController.Setup
void GlobalNamespace::CenterStageScreenController::Setup(bool showModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CenterStageScreenController::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(showModifiers)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, showModifiers);
}
// Autogenerated method: CenterStageScreenController.Show
void GlobalNamespace::CenterStageScreenController::Show() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CenterStageScreenController::Show");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Show", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CenterStageScreenController.Hide
void GlobalNamespace::CenterStageScreenController::Hide() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CenterStageScreenController::Hide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CenterStageScreenController.ShowCountdown
void GlobalNamespace::CenterStageScreenController::ShowCountdown(float countdownEndTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CenterStageScreenController::ShowCountdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowCountdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(countdownEndTime)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, countdownEndTime);
}
// Autogenerated method: CenterStageScreenController.HideCountdown
void GlobalNamespace::CenterStageScreenController::HideCountdown(bool instant) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CenterStageScreenController::HideCountdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HideCountdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(instant)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, instant);
}
// Autogenerated method: CenterStageScreenController.SetCountdownEndTime
void GlobalNamespace::CenterStageScreenController::SetCountdownEndTime(float countdownEndTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CenterStageScreenController::SetCountdownEndTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCountdownEndTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(countdownEndTime)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, countdownEndTime);
}
// Autogenerated method: CenterStageScreenController.ShowCountdownColorPreset
void GlobalNamespace::CenterStageScreenController::ShowCountdownColorPreset(bool animated) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CenterStageScreenController::ShowCountdownColorPreset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowCountdownColorPreset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animated)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animated);
}
// Autogenerated method: CenterStageScreenController.ShowLobbyColorPreset
void GlobalNamespace::CenterStageScreenController::ShowLobbyColorPreset(bool animated) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CenterStageScreenController::ShowLobbyColorPreset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowLobbyColorPreset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animated)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, animated);
}
// Autogenerated method: CenterStageScreenController.SetHostDataManual
void GlobalNamespace::CenterStageScreenController::SetHostDataManual(GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic, GlobalNamespace::BeatmapDifficulty beatmapDifficulty) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CenterStageScreenController::SetHostDataManual");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHostDataManual", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previewBeatmapLevel), ::il2cpp_utils::ExtractType(beatmapCharacteristic), ::il2cpp_utils::ExtractType(beatmapDifficulty)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, previewBeatmapLevel, beatmapCharacteristic, beatmapDifficulty);
}
// Autogenerated method: CenterStageScreenController.SetNextGameData
void GlobalNamespace::CenterStageScreenController::SetNextGameData(GlobalNamespace::ILobbyPlayerDataModel* playerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CenterStageScreenController::SetNextGameData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetNextGameData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playerData);
}
// Autogenerated method: CenterStageScreenController.HandleLobbyPlayersDataModelDidChange
void GlobalNamespace::CenterStageScreenController::HandleLobbyPlayersDataModelDidChange(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CenterStageScreenController::HandleLobbyPlayersDataModelDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyPlayersDataModelDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Writing MetadataGetter for method: CenterStageScreenController::get_countdownShown
// Il2CppName: get_countdownShown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (CenterStageScreenController::*)()>(&CenterStageScreenController::get_countdownShown)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CenterStageScreenController*), "get_countdownShown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CenterStageScreenController::set_countdownShown
// Il2CppName: set_countdownShown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CenterStageScreenController::*)(bool)>(&CenterStageScreenController::set_countdownShown)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CenterStageScreenController*), "set_countdownShown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CenterStageScreenController::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CenterStageScreenController::*)(bool)>(&CenterStageScreenController::Setup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CenterStageScreenController*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CenterStageScreenController::Show
// Il2CppName: Show
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CenterStageScreenController::*)()>(&CenterStageScreenController::Show)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CenterStageScreenController*), "Show", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CenterStageScreenController::Hide
// Il2CppName: Hide
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CenterStageScreenController::*)()>(&CenterStageScreenController::Hide)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CenterStageScreenController*), "Hide", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CenterStageScreenController::ShowCountdown
// Il2CppName: ShowCountdown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CenterStageScreenController::*)(float)>(&CenterStageScreenController::ShowCountdown)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CenterStageScreenController*), "ShowCountdown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: CenterStageScreenController::HideCountdown
// Il2CppName: HideCountdown
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CenterStageScreenController::*)(bool)>(&CenterStageScreenController::HideCountdown)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CenterStageScreenController*), "HideCountdown", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CenterStageScreenController::SetCountdownEndTime
// Il2CppName: SetCountdownEndTime
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CenterStageScreenController::*)(float)>(&CenterStageScreenController::SetCountdownEndTime)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CenterStageScreenController*), "SetCountdownEndTime", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: CenterStageScreenController::ShowCountdownColorPreset
// Il2CppName: ShowCountdownColorPreset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CenterStageScreenController::*)(bool)>(&CenterStageScreenController::ShowCountdownColorPreset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CenterStageScreenController*), "ShowCountdownColorPreset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CenterStageScreenController::ShowLobbyColorPreset
// Il2CppName: ShowLobbyColorPreset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CenterStageScreenController::*)(bool)>(&CenterStageScreenController::ShowLobbyColorPreset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CenterStageScreenController*), "ShowLobbyColorPreset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CenterStageScreenController::SetHostDataManual
// Il2CppName: SetHostDataManual
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CenterStageScreenController::*)(GlobalNamespace::IPreviewBeatmapLevel*, GlobalNamespace::BeatmapCharacteristicSO*, GlobalNamespace::BeatmapDifficulty)>(&CenterStageScreenController::SetHostDataManual)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CenterStageScreenController*), "SetHostDataManual", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IPreviewBeatmapLevel*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapCharacteristicSO*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapDifficulty>()});
  }
};
// Writing MetadataGetter for method: CenterStageScreenController::SetNextGameData
// Il2CppName: SetNextGameData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CenterStageScreenController::*)(GlobalNamespace::ILobbyPlayerDataModel*)>(&CenterStageScreenController::SetNextGameData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CenterStageScreenController*), "SetNextGameData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ILobbyPlayerDataModel*>()});
  }
};
// Writing MetadataGetter for method: CenterStageScreenController::HandleLobbyPlayersDataModelDidChange
// Il2CppName: HandleLobbyPlayersDataModelDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CenterStageScreenController::*)(::Il2CppString*)>(&CenterStageScreenController::HandleLobbyPlayersDataModelDidChange)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CenterStageScreenController*), "HandleLobbyPlayersDataModelDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: CenterStageScreenController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CenterStageScreenController::*)()>(&CenterStageScreenController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CenterStageScreenController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CenterStageScreenController::*)()>(&CenterStageScreenController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CenterStageScreenController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ClientLobbySetupViewController
#include "GlobalNamespace/ClientLobbySetupViewController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: EditableBeatmapSelectionView
#include "GlobalNamespace/EditableBeatmapSelectionView.hpp"
// Including type: EditableModifiersSelectionView
#include "GlobalNamespace/EditableModifiersSelectionView.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: HMUI.ToggleBinder
#include "HMUI/ToggleBinder.hpp"
// Including type: ILobbyPlayerDataModel
#include "GlobalNamespace/ILobbyPlayerDataModel.hpp"
// Including type: MultiplayerLobbyState
#include "GlobalNamespace/MultiplayerLobbyState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ClientLobbySetupViewController.add_suggestBeatmapEvent
void GlobalNamespace::ClientLobbySetupViewController::add_suggestBeatmapEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ClientLobbySetupViewController::add_suggestBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_suggestBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ClientLobbySetupViewController.remove_suggestBeatmapEvent
void GlobalNamespace::ClientLobbySetupViewController::remove_suggestBeatmapEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ClientLobbySetupViewController::remove_suggestBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_suggestBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ClientLobbySetupViewController.add_clearSuggestedBeatmapEvent
void GlobalNamespace::ClientLobbySetupViewController::add_clearSuggestedBeatmapEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ClientLobbySetupViewController::add_clearSuggestedBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_clearSuggestedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ClientLobbySetupViewController.remove_clearSuggestedBeatmapEvent
void GlobalNamespace::ClientLobbySetupViewController::remove_clearSuggestedBeatmapEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ClientLobbySetupViewController::remove_clearSuggestedBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_clearSuggestedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ClientLobbySetupViewController.add_suggestModifiersEvent
void GlobalNamespace::ClientLobbySetupViewController::add_suggestModifiersEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ClientLobbySetupViewController::add_suggestModifiersEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_suggestModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ClientLobbySetupViewController.remove_suggestModifiersEvent
void GlobalNamespace::ClientLobbySetupViewController::remove_suggestModifiersEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ClientLobbySetupViewController::remove_suggestModifiersEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_suggestModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ClientLobbySetupViewController.add_clearSuggestedModifiersEvent
void GlobalNamespace::ClientLobbySetupViewController::add_clearSuggestedModifiersEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ClientLobbySetupViewController::add_clearSuggestedModifiersEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_clearSuggestedModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ClientLobbySetupViewController.remove_clearSuggestedModifiersEvent
void GlobalNamespace::ClientLobbySetupViewController::remove_clearSuggestedModifiersEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ClientLobbySetupViewController::remove_clearSuggestedModifiersEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_clearSuggestedModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ClientLobbySetupViewController.add_setPlayerReadyEvent
void GlobalNamespace::ClientLobbySetupViewController::add_setPlayerReadyEvent(System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ClientLobbySetupViewController::add_setPlayerReadyEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setPlayerReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ClientLobbySetupViewController.remove_setPlayerReadyEvent
void GlobalNamespace::ClientLobbySetupViewController::remove_setPlayerReadyEvent(System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ClientLobbySetupViewController::remove_setPlayerReadyEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setPlayerReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ClientLobbySetupViewController.SetLocalLobbyPlayerData
void GlobalNamespace::ClientLobbySetupViewController::SetLocalLobbyPlayerData(GlobalNamespace::ILobbyPlayerDataModel* lobbyPlayerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ClientLobbySetupViewController::SetLocalLobbyPlayerData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalLobbyPlayerData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lobbyPlayerData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lobbyPlayerData);
}
// Autogenerated method: ClientLobbySetupViewController.SetLobbyState
void GlobalNamespace::ClientLobbySetupViewController::SetLobbyState(GlobalNamespace::MultiplayerLobbyState lobbyState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ClientLobbySetupViewController::SetLobbyState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLobbyState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lobbyState)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lobbyState);
}
// Autogenerated method: ClientLobbySetupViewController.SetPlayerActiveState
void GlobalNamespace::ClientLobbySetupViewController::SetPlayerActiveState(bool isActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ClientLobbySetupViewController::SetPlayerActiveState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayerActiveState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isActive)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isActive);
}
// Autogenerated method: ClientLobbySetupViewController.<DidActivate>b__24_0
void GlobalNamespace::ClientLobbySetupViewController::$DidActivate$b__24_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ClientLobbySetupViewController::<DidActivate>b__24_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__24_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ClientLobbySetupViewController.<DidActivate>b__24_1
void GlobalNamespace::ClientLobbySetupViewController::$DidActivate$b__24_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ClientLobbySetupViewController::<DidActivate>b__24_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__24_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ClientLobbySetupViewController.<DidActivate>b__24_2
void GlobalNamespace::ClientLobbySetupViewController::$DidActivate$b__24_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ClientLobbySetupViewController::<DidActivate>b__24_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__24_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ClientLobbySetupViewController.<DidActivate>b__24_3
void GlobalNamespace::ClientLobbySetupViewController::$DidActivate$b__24_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ClientLobbySetupViewController::<DidActivate>b__24_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__24_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ClientLobbySetupViewController.<DidActivate>b__24_4
void GlobalNamespace::ClientLobbySetupViewController::$DidActivate$b__24_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ClientLobbySetupViewController::<DidActivate>b__24_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__24_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ClientLobbySetupViewController.<DidActivate>b__24_5
void GlobalNamespace::ClientLobbySetupViewController::$DidActivate$b__24_5() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ClientLobbySetupViewController::<DidActivate>b__24_5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__24_5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ClientLobbySetupViewController.DidActivate
void GlobalNamespace::ClientLobbySetupViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ClientLobbySetupViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Writing MetadataGetter for method: ClientLobbySetupViewController::add_suggestBeatmapEvent
// Il2CppName: add_suggestBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ClientLobbySetupViewController::*)(System::Action*)>(&ClientLobbySetupViewController::add_suggestBeatmapEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ClientLobbySetupViewController*), "add_suggestBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: ClientLobbySetupViewController::remove_suggestBeatmapEvent
// Il2CppName: remove_suggestBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ClientLobbySetupViewController::*)(System::Action*)>(&ClientLobbySetupViewController::remove_suggestBeatmapEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ClientLobbySetupViewController*), "remove_suggestBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: ClientLobbySetupViewController::add_clearSuggestedBeatmapEvent
// Il2CppName: add_clearSuggestedBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ClientLobbySetupViewController::*)(System::Action*)>(&ClientLobbySetupViewController::add_clearSuggestedBeatmapEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ClientLobbySetupViewController*), "add_clearSuggestedBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: ClientLobbySetupViewController::remove_clearSuggestedBeatmapEvent
// Il2CppName: remove_clearSuggestedBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ClientLobbySetupViewController::*)(System::Action*)>(&ClientLobbySetupViewController::remove_clearSuggestedBeatmapEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ClientLobbySetupViewController*), "remove_clearSuggestedBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: ClientLobbySetupViewController::add_suggestModifiersEvent
// Il2CppName: add_suggestModifiersEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ClientLobbySetupViewController::*)(System::Action*)>(&ClientLobbySetupViewController::add_suggestModifiersEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ClientLobbySetupViewController*), "add_suggestModifiersEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: ClientLobbySetupViewController::remove_suggestModifiersEvent
// Il2CppName: remove_suggestModifiersEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ClientLobbySetupViewController::*)(System::Action*)>(&ClientLobbySetupViewController::remove_suggestModifiersEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ClientLobbySetupViewController*), "remove_suggestModifiersEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: ClientLobbySetupViewController::add_clearSuggestedModifiersEvent
// Il2CppName: add_clearSuggestedModifiersEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ClientLobbySetupViewController::*)(System::Action*)>(&ClientLobbySetupViewController::add_clearSuggestedModifiersEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ClientLobbySetupViewController*), "add_clearSuggestedModifiersEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: ClientLobbySetupViewController::remove_clearSuggestedModifiersEvent
// Il2CppName: remove_clearSuggestedModifiersEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ClientLobbySetupViewController::*)(System::Action*)>(&ClientLobbySetupViewController::remove_clearSuggestedModifiersEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ClientLobbySetupViewController*), "remove_clearSuggestedModifiersEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: ClientLobbySetupViewController::add_setPlayerReadyEvent
// Il2CppName: add_setPlayerReadyEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ClientLobbySetupViewController::*)(System::Action_1<bool>*)>(&ClientLobbySetupViewController::add_setPlayerReadyEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ClientLobbySetupViewController*), "add_setPlayerReadyEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<bool>*>()});
  }
};
// Writing MetadataGetter for method: ClientLobbySetupViewController::remove_setPlayerReadyEvent
// Il2CppName: remove_setPlayerReadyEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ClientLobbySetupViewController::*)(System::Action_1<bool>*)>(&ClientLobbySetupViewController::remove_setPlayerReadyEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ClientLobbySetupViewController*), "remove_setPlayerReadyEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<bool>*>()});
  }
};
// Writing MetadataGetter for method: ClientLobbySetupViewController::SetLocalLobbyPlayerData
// Il2CppName: SetLocalLobbyPlayerData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ClientLobbySetupViewController::*)(GlobalNamespace::ILobbyPlayerDataModel*)>(&ClientLobbySetupViewController::SetLocalLobbyPlayerData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ClientLobbySetupViewController*), "SetLocalLobbyPlayerData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ILobbyPlayerDataModel*>()});
  }
};
// Writing MetadataGetter for method: ClientLobbySetupViewController::SetLobbyState
// Il2CppName: SetLobbyState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ClientLobbySetupViewController::*)(GlobalNamespace::MultiplayerLobbyState)>(&ClientLobbySetupViewController::SetLobbyState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ClientLobbySetupViewController*), "SetLobbyState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MultiplayerLobbyState>()});
  }
};
// Writing MetadataGetter for method: ClientLobbySetupViewController::SetPlayerActiveState
// Il2CppName: SetPlayerActiveState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ClientLobbySetupViewController::*)(bool)>(&ClientLobbySetupViewController::SetPlayerActiveState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ClientLobbySetupViewController*), "SetPlayerActiveState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ClientLobbySetupViewController::$DidActivate$b__24_0
// Il2CppName: <DidActivate>b__24_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ClientLobbySetupViewController::*)()>(&ClientLobbySetupViewController::$DidActivate$b__24_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ClientLobbySetupViewController*), "<DidActivate>b__24_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ClientLobbySetupViewController::$DidActivate$b__24_1
// Il2CppName: <DidActivate>b__24_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ClientLobbySetupViewController::*)()>(&ClientLobbySetupViewController::$DidActivate$b__24_1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ClientLobbySetupViewController*), "<DidActivate>b__24_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ClientLobbySetupViewController::$DidActivate$b__24_2
// Il2CppName: <DidActivate>b__24_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ClientLobbySetupViewController::*)()>(&ClientLobbySetupViewController::$DidActivate$b__24_2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ClientLobbySetupViewController*), "<DidActivate>b__24_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ClientLobbySetupViewController::$DidActivate$b__24_3
// Il2CppName: <DidActivate>b__24_3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ClientLobbySetupViewController::*)()>(&ClientLobbySetupViewController::$DidActivate$b__24_3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ClientLobbySetupViewController*), "<DidActivate>b__24_3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ClientLobbySetupViewController::$DidActivate$b__24_4
// Il2CppName: <DidActivate>b__24_4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ClientLobbySetupViewController::*)()>(&ClientLobbySetupViewController::$DidActivate$b__24_4)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ClientLobbySetupViewController*), "<DidActivate>b__24_4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ClientLobbySetupViewController::$DidActivate$b__24_5
// Il2CppName: <DidActivate>b__24_5
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ClientLobbySetupViewController::*)()>(&ClientLobbySetupViewController::$DidActivate$b__24_5)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ClientLobbySetupViewController*), "<DidActivate>b__24_5", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ClientLobbySetupViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ClientLobbySetupViewController::*)(bool, bool, bool)>(&ClientLobbySetupViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ClientLobbySetupViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ClientLobbySetupViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ClientLobbySetupViewController::*)()>(&ClientLobbySetupViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ClientLobbySetupViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ClientLobbySetupViewController::*)()>(&ClientLobbySetupViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ClientLobbySetupViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CreateServerViewController
#include "GlobalNamespace/CreateServerViewController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: CreateServerFormController
#include "GlobalNamespace/CreateServerFormController.hpp"
// Including type: IUnifiedNetworkPlayerModel
#include "GlobalNamespace/IUnifiedNetworkPlayerModel.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: MultiplayerModeSettings
#include "GlobalNamespace/MultiplayerModeSettings.hpp"
// Including type: UnifiedNetworkPlayerModel/CreatePartyConfig
#include "GlobalNamespace/UnifiedNetworkPlayerModel_CreatePartyConfig.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CreateServerViewController.add_didFinishEvent
void GlobalNamespace::CreateServerViewController::add_didFinishEvent(System::Action_2<bool, GlobalNamespace::UnifiedNetworkPlayerModel::CreatePartyConfig*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreateServerViewController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CreateServerViewController.remove_didFinishEvent
void GlobalNamespace::CreateServerViewController::remove_didFinishEvent(System::Action_2<bool, GlobalNamespace::UnifiedNetworkPlayerModel::CreatePartyConfig*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreateServerViewController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CreateServerViewController.get_multiplayerModeSettings
GlobalNamespace::MultiplayerModeSettings* GlobalNamespace::CreateServerViewController::get_multiplayerModeSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreateServerViewController::get_multiplayerModeSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplayerModeSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MultiplayerModeSettings*, false>(this, ___internal__method);
}
// Autogenerated method: CreateServerViewController.Setup
void GlobalNamespace::CreateServerViewController::Setup(GlobalNamespace::MultiplayerModeSettings* multiplayerModeSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreateServerViewController::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiplayerModeSettings)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, multiplayerModeSettings);
}
// Autogenerated method: CreateServerViewController.CreatePartyConfig
GlobalNamespace::UnifiedNetworkPlayerModel::CreatePartyConfig* GlobalNamespace::CreateServerViewController::CreatePartyConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreateServerViewController::CreatePartyConfig");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreatePartyConfig", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::UnifiedNetworkPlayerModel::CreatePartyConfig*, false>(this, ___internal__method);
}
// Autogenerated method: CreateServerViewController.<DidActivate>b__11_0
void GlobalNamespace::CreateServerViewController::$DidActivate$b__11_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreateServerViewController::<DidActivate>b__11_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__11_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CreateServerViewController.<DidActivate>b__11_1
void GlobalNamespace::CreateServerViewController::$DidActivate$b__11_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreateServerViewController::<DidActivate>b__11_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__11_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CreateServerViewController.DidActivate
void GlobalNamespace::CreateServerViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreateServerViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Writing MetadataGetter for method: CreateServerViewController::add_didFinishEvent
// Il2CppName: add_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CreateServerViewController::*)(System::Action_2<bool, GlobalNamespace::UnifiedNetworkPlayerModel::CreatePartyConfig*>*)>(&CreateServerViewController::add_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CreateServerViewController*), "add_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<bool, GlobalNamespace::UnifiedNetworkPlayerModel::CreatePartyConfig*>*>()});
  }
};
// Writing MetadataGetter for method: CreateServerViewController::remove_didFinishEvent
// Il2CppName: remove_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CreateServerViewController::*)(System::Action_2<bool, GlobalNamespace::UnifiedNetworkPlayerModel::CreatePartyConfig*>*)>(&CreateServerViewController::remove_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CreateServerViewController*), "remove_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<bool, GlobalNamespace::UnifiedNetworkPlayerModel::CreatePartyConfig*>*>()});
  }
};
// Writing MetadataGetter for method: CreateServerViewController::get_multiplayerModeSettings
// Il2CppName: get_multiplayerModeSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::MultiplayerModeSettings* (CreateServerViewController::*)()>(&CreateServerViewController::get_multiplayerModeSettings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CreateServerViewController*), "get_multiplayerModeSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CreateServerViewController::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CreateServerViewController::*)(GlobalNamespace::MultiplayerModeSettings*)>(&CreateServerViewController::Setup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CreateServerViewController*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MultiplayerModeSettings*>()});
  }
};
// Writing MetadataGetter for method: CreateServerViewController::CreatePartyConfig
// Il2CppName: CreatePartyConfig
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::UnifiedNetworkPlayerModel::CreatePartyConfig* (CreateServerViewController::*)()>(&CreateServerViewController::CreatePartyConfig)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CreateServerViewController*), "CreatePartyConfig", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CreateServerViewController::$DidActivate$b__11_0
// Il2CppName: <DidActivate>b__11_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CreateServerViewController::*)()>(&CreateServerViewController::$DidActivate$b__11_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CreateServerViewController*), "<DidActivate>b__11_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CreateServerViewController::$DidActivate$b__11_1
// Il2CppName: <DidActivate>b__11_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CreateServerViewController::*)()>(&CreateServerViewController::$DidActivate$b__11_1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CreateServerViewController*), "<DidActivate>b__11_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: CreateServerViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CreateServerViewController::*)(bool, bool, bool)>(&CreateServerViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CreateServerViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: CreateServerViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CreateServerViewController::*)()>(&CreateServerViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CreateServerViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (CreateServerViewController::*)()>(&CreateServerViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(CreateServerViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameLobbyViewController
#include "GlobalNamespace/GameLobbyViewController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: GameLobbyViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameLobbyViewController::*)()>(&GameLobbyViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameLobbyViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameLobbyViewController::*)()>(&GameLobbyViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameLobbyViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServerBrowserStackedController
#include "GlobalNamespace/GameServerBrowserStackedController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GameServerBrowserStackedController.DidActivate
void GlobalNamespace::GameServerBrowserStackedController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerBrowserStackedController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: GameServerBrowserStackedController.DidDeactivate
void GlobalNamespace::GameServerBrowserStackedController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerBrowserStackedController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Writing MetadataGetter for method: GameServerBrowserStackedController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServerBrowserStackedController::*)(bool, bool, bool)>(&GameServerBrowserStackedController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServerBrowserStackedController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: GameServerBrowserStackedController::DidDeactivate
// Il2CppName: DidDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServerBrowserStackedController::*)(bool, bool)>(&GameServerBrowserStackedController::DidDeactivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServerBrowserStackedController*), "DidDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: GameServerBrowserStackedController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServerBrowserStackedController::*)()>(&GameServerBrowserStackedController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServerBrowserStackedController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServerBrowserStackedController::*)()>(&GameServerBrowserStackedController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServerBrowserStackedController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServerBrowserViewController
#include "GlobalNamespace/GameServerBrowserViewController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: GameServersFilterText
#include "GlobalNamespace/GameServersFilterText.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: GameServersListTableView
#include "GlobalNamespace/GameServersListTableView.hpp"
// Including type: LoadingControl
#include "GlobalNamespace/LoadingControl.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: GameServerBrowserViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServerBrowserViewController::*)()>(&GameServerBrowserViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServerBrowserViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServerBrowserViewController::*)()>(&GameServerBrowserViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServerBrowserViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServersFilterViewController
#include "GlobalNamespace/GameServersFilterViewController.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: BeatmapDifficultyDropdown
#include "GlobalNamespace/BeatmapDifficultyDropdown.hpp"
// Including type: GameplayModifiersDropdown
#include "GlobalNamespace/GameplayModifiersDropdown.hpp"
// Including type: SongPacksDropdown
#include "GlobalNamespace/SongPacksDropdown.hpp"
// Including type: HMUI.ToggleBinder
#include "HMUI/ToggleBinder.hpp"
// Including type: GameServersFilter
#include "GlobalNamespace/GameServersFilter.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GameServersFilterViewController.get_gameServersFilter
GlobalNamespace::GameServersFilter* GlobalNamespace::GameServersFilterViewController::get_gameServersFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServersFilterViewController::get_gameServersFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameServersFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameServersFilter*, false>(this, ___internal__method);
}
// Autogenerated method: GameServersFilterViewController.SetupGameServersFilter
void GlobalNamespace::GameServersFilterViewController::SetupGameServersFilter(GlobalNamespace::GameServersFilter* gameServersFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServersFilterViewController::SetupGameServersFilter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupGameServersFilter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameServersFilter)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, gameServersFilter);
}
// Autogenerated method: GameServersFilterViewController.Refresh
void GlobalNamespace::GameServersFilterViewController::Refresh(GlobalNamespace::GameServersFilter* currentFilter) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServersFilterViewController::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentFilter)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, currentFilter);
}
// Autogenerated method: GameServersFilterViewController.<DidActivate>b__16_0
void GlobalNamespace::GameServersFilterViewController::$DidActivate$b__16_0(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServersFilterViewController::<DidActivate>b__16_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__16_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated method: GameServersFilterViewController.<DidActivate>b__16_1
void GlobalNamespace::GameServersFilterViewController::$DidActivate$b__16_1(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServersFilterViewController::<DidActivate>b__16_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__16_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated method: GameServersFilterViewController.<DidActivate>b__16_2
void GlobalNamespace::GameServersFilterViewController::$DidActivate$b__16_2(bool isOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServersFilterViewController::<DidActivate>b__16_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__16_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isOn)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isOn);
}
// Autogenerated method: GameServersFilterViewController.DidActivate
void GlobalNamespace::GameServersFilterViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServersFilterViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: GameServersFilterViewController.OnDestroy
void GlobalNamespace::GameServersFilterViewController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServersFilterViewController::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: GameServersFilterViewController::get_gameServersFilter
// Il2CppName: get_gameServersFilter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::GameServersFilter* (GameServersFilterViewController::*)()>(&GameServersFilterViewController::get_gameServersFilter)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServersFilterViewController*), "get_gameServersFilter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GameServersFilterViewController::SetupGameServersFilter
// Il2CppName: SetupGameServersFilter
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServersFilterViewController::*)(GlobalNamespace::GameServersFilter*)>(&GameServersFilterViewController::SetupGameServersFilter)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServersFilterViewController*), "SetupGameServersFilter", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameServersFilter*>()});
  }
};
// Writing MetadataGetter for method: GameServersFilterViewController::Refresh
// Il2CppName: Refresh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServersFilterViewController::*)(GlobalNamespace::GameServersFilter*)>(&GameServersFilterViewController::Refresh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServersFilterViewController*), "Refresh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameServersFilter*>()});
  }
};
// Writing MetadataGetter for method: GameServersFilterViewController::$DidActivate$b__16_0
// Il2CppName: <DidActivate>b__16_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServersFilterViewController::*)(bool)>(&GameServersFilterViewController::$DidActivate$b__16_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServersFilterViewController*), "<DidActivate>b__16_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: GameServersFilterViewController::$DidActivate$b__16_1
// Il2CppName: <DidActivate>b__16_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServersFilterViewController::*)(bool)>(&GameServersFilterViewController::$DidActivate$b__16_1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServersFilterViewController*), "<DidActivate>b__16_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: GameServersFilterViewController::$DidActivate$b__16_2
// Il2CppName: <DidActivate>b__16_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServersFilterViewController::*)(bool)>(&GameServersFilterViewController::$DidActivate$b__16_2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServersFilterViewController*), "<DidActivate>b__16_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: GameServersFilterViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServersFilterViewController::*)(bool, bool, bool)>(&GameServersFilterViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServersFilterViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: GameServersFilterViewController::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServersFilterViewController::*)()>(&GameServersFilterViewController::OnDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServersFilterViewController*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GameServersFilterViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServersFilterViewController::*)()>(&GameServersFilterViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServersFilterViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServersFilterViewController::*)()>(&GameServersFilterViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServersFilterViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HostLobbySetupViewController
#include "GlobalNamespace/HostLobbySetupViewController.hpp"
// Including type: HostLobbySetupViewController/CannotStartGameReason
#include "GlobalNamespace/HostLobbySetupViewController_CannotStartGameReason.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: EditableBeatmapSelectionView
#include "GlobalNamespace/EditableBeatmapSelectionView.hpp"
// Including type: EditableModifiersSelectionView
#include "GlobalNamespace/EditableModifiersSelectionView.hpp"
// Including type: HMUI.HoverHint
#include "HMUI/HoverHint.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: HMUI.ToggleBinder
#include "HMUI/ToggleBinder.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: ILobbyPlayerDataModel
#include "GlobalNamespace/ILobbyPlayerDataModel.hpp"
// Including type: MultiplayerLobbyState
#include "GlobalNamespace/MultiplayerLobbyState.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HostLobbySetupViewController.add_selectBeatmapEvent
void GlobalNamespace::HostLobbySetupViewController::add_selectBeatmapEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HostLobbySetupViewController::add_selectBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_selectBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HostLobbySetupViewController.remove_selectBeatmapEvent
void GlobalNamespace::HostLobbySetupViewController::remove_selectBeatmapEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HostLobbySetupViewController::remove_selectBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_selectBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HostLobbySetupViewController.add_selectModifiersEvent
void GlobalNamespace::HostLobbySetupViewController::add_selectModifiersEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HostLobbySetupViewController::add_selectModifiersEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_selectModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HostLobbySetupViewController.remove_selectModifiersEvent
void GlobalNamespace::HostLobbySetupViewController::remove_selectModifiersEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HostLobbySetupViewController::remove_selectModifiersEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_selectModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HostLobbySetupViewController.add_startGameEvent
void GlobalNamespace::HostLobbySetupViewController::add_startGameEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HostLobbySetupViewController::add_startGameEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_startGameEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HostLobbySetupViewController.remove_startGameEvent
void GlobalNamespace::HostLobbySetupViewController::remove_startGameEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HostLobbySetupViewController::remove_startGameEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_startGameEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HostLobbySetupViewController.add_cancelStartGameEvent
void GlobalNamespace::HostLobbySetupViewController::add_cancelStartGameEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HostLobbySetupViewController::add_cancelStartGameEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_cancelStartGameEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HostLobbySetupViewController.remove_cancelStartGameEvent
void GlobalNamespace::HostLobbySetupViewController::remove_cancelStartGameEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HostLobbySetupViewController::remove_cancelStartGameEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_cancelStartGameEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: HostLobbySetupViewController.SetLobbyPlayerData
void GlobalNamespace::HostLobbySetupViewController::SetLobbyPlayerData(GlobalNamespace::ILobbyPlayerDataModel* lobbyPlayerDataModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HostLobbySetupViewController::SetLobbyPlayerData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLobbyPlayerData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lobbyPlayerDataModel)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lobbyPlayerDataModel);
}
// Autogenerated method: HostLobbySetupViewController.SetPlayersMissingLevelText
void GlobalNamespace::HostLobbySetupViewController::SetPlayersMissingLevelText(::Il2CppString* playersMissingLevelText) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HostLobbySetupViewController::SetPlayersMissingLevelText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayersMissingLevelText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playersMissingLevelText)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playersMissingLevelText);
}
// Autogenerated method: HostLobbySetupViewController.SetPlayerActiveState
void GlobalNamespace::HostLobbySetupViewController::SetPlayerActiveState(bool isActive) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HostLobbySetupViewController::SetPlayerActiveState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlayerActiveState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isActive)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, isActive);
}
// Autogenerated method: HostLobbySetupViewController.SetStartGameEnabled
void GlobalNamespace::HostLobbySetupViewController::SetStartGameEnabled(bool startGameEnabled, GlobalNamespace::HostLobbySetupViewController::CannotStartGameReason cannotStartGameReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HostLobbySetupViewController::SetStartGameEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetStartGameEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startGameEnabled), ::il2cpp_utils::ExtractType(cannotStartGameReason)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, startGameEnabled, cannotStartGameReason);
}
// Autogenerated method: HostLobbySetupViewController.SetLobbyState
void GlobalNamespace::HostLobbySetupViewController::SetLobbyState(GlobalNamespace::MultiplayerLobbyState lobbyState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HostLobbySetupViewController::SetLobbyState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLobbyState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lobbyState)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lobbyState);
}
// Autogenerated method: HostLobbySetupViewController.<DidActivate>b__27_0
void GlobalNamespace::HostLobbySetupViewController::$DidActivate$b__27_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HostLobbySetupViewController::<DidActivate>b__27_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__27_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HostLobbySetupViewController.<DidActivate>b__27_1
void GlobalNamespace::HostLobbySetupViewController::$DidActivate$b__27_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HostLobbySetupViewController::<DidActivate>b__27_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__27_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HostLobbySetupViewController.<DidActivate>b__27_2
void GlobalNamespace::HostLobbySetupViewController::$DidActivate$b__27_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HostLobbySetupViewController::<DidActivate>b__27_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__27_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HostLobbySetupViewController.<DidActivate>b__27_3
void GlobalNamespace::HostLobbySetupViewController::$DidActivate$b__27_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HostLobbySetupViewController::<DidActivate>b__27_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__27_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HostLobbySetupViewController.DidActivate
void GlobalNamespace::HostLobbySetupViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HostLobbySetupViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: HostLobbySetupViewController.OnDestroy
void GlobalNamespace::HostLobbySetupViewController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HostLobbySetupViewController::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: HostLobbySetupViewController::add_selectBeatmapEvent
// Il2CppName: add_selectBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HostLobbySetupViewController::*)(System::Action*)>(&HostLobbySetupViewController::add_selectBeatmapEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HostLobbySetupViewController*), "add_selectBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: HostLobbySetupViewController::remove_selectBeatmapEvent
// Il2CppName: remove_selectBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HostLobbySetupViewController::*)(System::Action*)>(&HostLobbySetupViewController::remove_selectBeatmapEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HostLobbySetupViewController*), "remove_selectBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: HostLobbySetupViewController::add_selectModifiersEvent
// Il2CppName: add_selectModifiersEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HostLobbySetupViewController::*)(System::Action*)>(&HostLobbySetupViewController::add_selectModifiersEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HostLobbySetupViewController*), "add_selectModifiersEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: HostLobbySetupViewController::remove_selectModifiersEvent
// Il2CppName: remove_selectModifiersEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HostLobbySetupViewController::*)(System::Action*)>(&HostLobbySetupViewController::remove_selectModifiersEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HostLobbySetupViewController*), "remove_selectModifiersEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: HostLobbySetupViewController::add_startGameEvent
// Il2CppName: add_startGameEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HostLobbySetupViewController::*)(System::Action*)>(&HostLobbySetupViewController::add_startGameEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HostLobbySetupViewController*), "add_startGameEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: HostLobbySetupViewController::remove_startGameEvent
// Il2CppName: remove_startGameEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HostLobbySetupViewController::*)(System::Action*)>(&HostLobbySetupViewController::remove_startGameEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HostLobbySetupViewController*), "remove_startGameEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: HostLobbySetupViewController::add_cancelStartGameEvent
// Il2CppName: add_cancelStartGameEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HostLobbySetupViewController::*)(System::Action*)>(&HostLobbySetupViewController::add_cancelStartGameEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HostLobbySetupViewController*), "add_cancelStartGameEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: HostLobbySetupViewController::remove_cancelStartGameEvent
// Il2CppName: remove_cancelStartGameEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HostLobbySetupViewController::*)(System::Action*)>(&HostLobbySetupViewController::remove_cancelStartGameEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HostLobbySetupViewController*), "remove_cancelStartGameEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: HostLobbySetupViewController::SetLobbyPlayerData
// Il2CppName: SetLobbyPlayerData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HostLobbySetupViewController::*)(GlobalNamespace::ILobbyPlayerDataModel*)>(&HostLobbySetupViewController::SetLobbyPlayerData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HostLobbySetupViewController*), "SetLobbyPlayerData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ILobbyPlayerDataModel*>()});
  }
};
// Writing MetadataGetter for method: HostLobbySetupViewController::SetPlayersMissingLevelText
// Il2CppName: SetPlayersMissingLevelText
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HostLobbySetupViewController::*)(::Il2CppString*)>(&HostLobbySetupViewController::SetPlayersMissingLevelText)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HostLobbySetupViewController*), "SetPlayersMissingLevelText", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: HostLobbySetupViewController::SetPlayerActiveState
// Il2CppName: SetPlayerActiveState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HostLobbySetupViewController::*)(bool)>(&HostLobbySetupViewController::SetPlayerActiveState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HostLobbySetupViewController*), "SetPlayerActiveState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: HostLobbySetupViewController::SetStartGameEnabled
// Il2CppName: SetStartGameEnabled
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HostLobbySetupViewController::*)(bool, GlobalNamespace::HostLobbySetupViewController::CannotStartGameReason)>(&HostLobbySetupViewController::SetStartGameEnabled)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HostLobbySetupViewController*), "SetStartGameEnabled", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::HostLobbySetupViewController::CannotStartGameReason>()});
  }
};
// Writing MetadataGetter for method: HostLobbySetupViewController::SetLobbyState
// Il2CppName: SetLobbyState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HostLobbySetupViewController::*)(GlobalNamespace::MultiplayerLobbyState)>(&HostLobbySetupViewController::SetLobbyState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HostLobbySetupViewController*), "SetLobbyState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MultiplayerLobbyState>()});
  }
};
// Writing MetadataGetter for method: HostLobbySetupViewController::$DidActivate$b__27_0
// Il2CppName: <DidActivate>b__27_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HostLobbySetupViewController::*)()>(&HostLobbySetupViewController::$DidActivate$b__27_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HostLobbySetupViewController*), "<DidActivate>b__27_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HostLobbySetupViewController::$DidActivate$b__27_1
// Il2CppName: <DidActivate>b__27_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HostLobbySetupViewController::*)()>(&HostLobbySetupViewController::$DidActivate$b__27_1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HostLobbySetupViewController*), "<DidActivate>b__27_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HostLobbySetupViewController::$DidActivate$b__27_2
// Il2CppName: <DidActivate>b__27_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HostLobbySetupViewController::*)()>(&HostLobbySetupViewController::$DidActivate$b__27_2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HostLobbySetupViewController*), "<DidActivate>b__27_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HostLobbySetupViewController::$DidActivate$b__27_3
// Il2CppName: <DidActivate>b__27_3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HostLobbySetupViewController::*)()>(&HostLobbySetupViewController::$DidActivate$b__27_3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HostLobbySetupViewController*), "<DidActivate>b__27_3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HostLobbySetupViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HostLobbySetupViewController::*)(bool, bool, bool)>(&HostLobbySetupViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HostLobbySetupViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: HostLobbySetupViewController::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HostLobbySetupViewController::*)()>(&HostLobbySetupViewController::OnDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HostLobbySetupViewController*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: HostLobbySetupViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HostLobbySetupViewController::*)()>(&HostLobbySetupViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HostLobbySetupViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (HostLobbySetupViewController::*)()>(&HostLobbySetupViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(HostLobbySetupViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HostLobbySetupViewController/CannotStartGameReason
#include "GlobalNamespace/HostLobbySetupViewController_CannotStartGameReason.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public HostLobbySetupViewController/CannotStartGameReason None
GlobalNamespace::HostLobbySetupViewController::CannotStartGameReason GlobalNamespace::HostLobbySetupViewController::CannotStartGameReason::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HostLobbySetupViewController::CannotStartGameReason::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::HostLobbySetupViewController::CannotStartGameReason>("", "HostLobbySetupViewController/CannotStartGameReason", "None"));
}
// Autogenerated static field setter
// Set static field: static public HostLobbySetupViewController/CannotStartGameReason None
void GlobalNamespace::HostLobbySetupViewController::CannotStartGameReason::_set_None(GlobalNamespace::HostLobbySetupViewController::CannotStartGameReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HostLobbySetupViewController::CannotStartGameReason::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "HostLobbySetupViewController/CannotStartGameReason", "None", value));
}
// Autogenerated static field getter
// Get static field: static public HostLobbySetupViewController/CannotStartGameReason AllPlayersSpectating
GlobalNamespace::HostLobbySetupViewController::CannotStartGameReason GlobalNamespace::HostLobbySetupViewController::CannotStartGameReason::_get_AllPlayersSpectating() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HostLobbySetupViewController::CannotStartGameReason::_get_AllPlayersSpectating");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::HostLobbySetupViewController::CannotStartGameReason>("", "HostLobbySetupViewController/CannotStartGameReason", "AllPlayersSpectating"));
}
// Autogenerated static field setter
// Set static field: static public HostLobbySetupViewController/CannotStartGameReason AllPlayersSpectating
void GlobalNamespace::HostLobbySetupViewController::CannotStartGameReason::_set_AllPlayersSpectating(GlobalNamespace::HostLobbySetupViewController::CannotStartGameReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HostLobbySetupViewController::CannotStartGameReason::_set_AllPlayersSpectating");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "HostLobbySetupViewController/CannotStartGameReason", "AllPlayersSpectating", value));
}
// Autogenerated static field getter
// Get static field: static public HostLobbySetupViewController/CannotStartGameReason NoSongSelected
GlobalNamespace::HostLobbySetupViewController::CannotStartGameReason GlobalNamespace::HostLobbySetupViewController::CannotStartGameReason::_get_NoSongSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HostLobbySetupViewController::CannotStartGameReason::_get_NoSongSelected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::HostLobbySetupViewController::CannotStartGameReason>("", "HostLobbySetupViewController/CannotStartGameReason", "NoSongSelected"));
}
// Autogenerated static field setter
// Set static field: static public HostLobbySetupViewController/CannotStartGameReason NoSongSelected
void GlobalNamespace::HostLobbySetupViewController::CannotStartGameReason::_set_NoSongSelected(GlobalNamespace::HostLobbySetupViewController::CannotStartGameReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HostLobbySetupViewController::CannotStartGameReason::_set_NoSongSelected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "HostLobbySetupViewController/CannotStartGameReason", "NoSongSelected", value));
}
// Autogenerated static field getter
// Get static field: static public HostLobbySetupViewController/CannotStartGameReason AllPlayersNotInLobby
GlobalNamespace::HostLobbySetupViewController::CannotStartGameReason GlobalNamespace::HostLobbySetupViewController::CannotStartGameReason::_get_AllPlayersNotInLobby() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HostLobbySetupViewController::CannotStartGameReason::_get_AllPlayersNotInLobby");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::HostLobbySetupViewController::CannotStartGameReason>("", "HostLobbySetupViewController/CannotStartGameReason", "AllPlayersNotInLobby"));
}
// Autogenerated static field setter
// Set static field: static public HostLobbySetupViewController/CannotStartGameReason AllPlayersNotInLobby
void GlobalNamespace::HostLobbySetupViewController::CannotStartGameReason::_set_AllPlayersNotInLobby(GlobalNamespace::HostLobbySetupViewController::CannotStartGameReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HostLobbySetupViewController::CannotStartGameReason::_set_AllPlayersNotInLobby");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "HostLobbySetupViewController/CannotStartGameReason", "AllPlayersNotInLobby", value));
}
// Autogenerated static field getter
// Get static field: static public HostLobbySetupViewController/CannotStartGameReason DoNotOwnSong
GlobalNamespace::HostLobbySetupViewController::CannotStartGameReason GlobalNamespace::HostLobbySetupViewController::CannotStartGameReason::_get_DoNotOwnSong() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HostLobbySetupViewController::CannotStartGameReason::_get_DoNotOwnSong");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::HostLobbySetupViewController::CannotStartGameReason>("", "HostLobbySetupViewController/CannotStartGameReason", "DoNotOwnSong"));
}
// Autogenerated static field setter
// Set static field: static public HostLobbySetupViewController/CannotStartGameReason DoNotOwnSong
void GlobalNamespace::HostLobbySetupViewController::CannotStartGameReason::_set_DoNotOwnSong(GlobalNamespace::HostLobbySetupViewController::CannotStartGameReason value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HostLobbySetupViewController::CannotStartGameReason::_set_DoNotOwnSong");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "HostLobbySetupViewController/CannotStartGameReason", "DoNotOwnSong", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: JoinQuickPlayViewController
#include "GlobalNamespace/JoinQuickPlayViewController.hpp"
// Including type: BeatmapDifficultyDropdown
#include "GlobalNamespace/BeatmapDifficultyDropdown.hpp"
// Including type: QuickPlaySongPacksDropdown
#include "GlobalNamespace/QuickPlaySongPacksDropdown.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: MultiplayerModeSettings
#include "GlobalNamespace/MultiplayerModeSettings.hpp"
// Including type: MasterServerQuickPlaySetupData
#include "GlobalNamespace/MasterServerQuickPlaySetupData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: JoinQuickPlayViewController.add_didFinishEvent
void GlobalNamespace::JoinQuickPlayViewController::add_didFinishEvent(System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::JoinQuickPlayViewController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: JoinQuickPlayViewController.remove_didFinishEvent
void GlobalNamespace::JoinQuickPlayViewController::remove_didFinishEvent(System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::JoinQuickPlayViewController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: JoinQuickPlayViewController.get_multiplayerModeSettings
GlobalNamespace::MultiplayerModeSettings* GlobalNamespace::JoinQuickPlayViewController::get_multiplayerModeSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::JoinQuickPlayViewController::get_multiplayerModeSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_multiplayerModeSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::MultiplayerModeSettings*, false>(this, ___internal__method);
}
// Autogenerated method: JoinQuickPlayViewController.Setup
void GlobalNamespace::JoinQuickPlayViewController::Setup(GlobalNamespace::MasterServerQuickPlaySetupData* masterServerQuickPlaySetupData, GlobalNamespace::MultiplayerModeSettings* multiplayerModeSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::JoinQuickPlayViewController::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(masterServerQuickPlaySetupData), ::il2cpp_utils::ExtractType(multiplayerModeSettings)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, masterServerQuickPlaySetupData, multiplayerModeSettings);
}
// Autogenerated method: JoinQuickPlayViewController.ButtonPressed
void GlobalNamespace::JoinQuickPlayViewController::ButtonPressed(bool success) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::JoinQuickPlayViewController::ButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(success)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, success);
}
// Autogenerated method: JoinQuickPlayViewController.<DidActivate>b__11_0
void GlobalNamespace::JoinQuickPlayViewController::$DidActivate$b__11_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::JoinQuickPlayViewController::<DidActivate>b__11_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__11_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: JoinQuickPlayViewController.<DidActivate>b__11_1
void GlobalNamespace::JoinQuickPlayViewController::$DidActivate$b__11_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::JoinQuickPlayViewController::<DidActivate>b__11_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__11_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: JoinQuickPlayViewController.DidActivate
void GlobalNamespace::JoinQuickPlayViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::JoinQuickPlayViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Writing MetadataGetter for method: JoinQuickPlayViewController::add_didFinishEvent
// Il2CppName: add_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (JoinQuickPlayViewController::*)(System::Action_1<bool>*)>(&JoinQuickPlayViewController::add_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(JoinQuickPlayViewController*), "add_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<bool>*>()});
  }
};
// Writing MetadataGetter for method: JoinQuickPlayViewController::remove_didFinishEvent
// Il2CppName: remove_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (JoinQuickPlayViewController::*)(System::Action_1<bool>*)>(&JoinQuickPlayViewController::remove_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(JoinQuickPlayViewController*), "remove_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<bool>*>()});
  }
};
// Writing MetadataGetter for method: JoinQuickPlayViewController::get_multiplayerModeSettings
// Il2CppName: get_multiplayerModeSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::MultiplayerModeSettings* (JoinQuickPlayViewController::*)()>(&JoinQuickPlayViewController::get_multiplayerModeSettings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(JoinQuickPlayViewController*), "get_multiplayerModeSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: JoinQuickPlayViewController::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (JoinQuickPlayViewController::*)(GlobalNamespace::MasterServerQuickPlaySetupData*, GlobalNamespace::MultiplayerModeSettings*)>(&JoinQuickPlayViewController::Setup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(JoinQuickPlayViewController*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MasterServerQuickPlaySetupData*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MultiplayerModeSettings*>()});
  }
};
// Writing MetadataGetter for method: JoinQuickPlayViewController::ButtonPressed
// Il2CppName: ButtonPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (JoinQuickPlayViewController::*)(bool)>(&JoinQuickPlayViewController::ButtonPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(JoinQuickPlayViewController*), "ButtonPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: JoinQuickPlayViewController::$DidActivate$b__11_0
// Il2CppName: <DidActivate>b__11_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (JoinQuickPlayViewController::*)()>(&JoinQuickPlayViewController::$DidActivate$b__11_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(JoinQuickPlayViewController*), "<DidActivate>b__11_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: JoinQuickPlayViewController::$DidActivate$b__11_1
// Il2CppName: <DidActivate>b__11_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (JoinQuickPlayViewController::*)()>(&JoinQuickPlayViewController::$DidActivate$b__11_1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(JoinQuickPlayViewController*), "<DidActivate>b__11_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: JoinQuickPlayViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (JoinQuickPlayViewController::*)(bool, bool, bool)>(&JoinQuickPlayViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(JoinQuickPlayViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: JoinQuickPlayViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (JoinQuickPlayViewController::*)()>(&JoinQuickPlayViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(JoinQuickPlayViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (JoinQuickPlayViewController::*)()>(&JoinQuickPlayViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(JoinQuickPlayViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: JoiningLobbyViewController
#include "GlobalNamespace/JoiningLobbyViewController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: LoadingControl
#include "GlobalNamespace/LoadingControl.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: JoiningLobbyViewController.add_didFinishEvent
void GlobalNamespace::JoiningLobbyViewController::add_didFinishEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::JoiningLobbyViewController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: JoiningLobbyViewController.remove_didFinishEvent
void GlobalNamespace::JoiningLobbyViewController::remove_didFinishEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::JoiningLobbyViewController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: JoiningLobbyViewController.Init
void GlobalNamespace::JoiningLobbyViewController::Init(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::JoiningLobbyViewController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text);
}
// Autogenerated method: JoiningLobbyViewController.HideLoading
void GlobalNamespace::JoiningLobbyViewController::HideLoading() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::JoiningLobbyViewController::HideLoading");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HideLoading", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: JoiningLobbyViewController.<DidActivate>b__8_0
void GlobalNamespace::JoiningLobbyViewController::$DidActivate$b__8_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::JoiningLobbyViewController::<DidActivate>b__8_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__8_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: JoiningLobbyViewController.DidActivate
void GlobalNamespace::JoiningLobbyViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::JoiningLobbyViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Writing MetadataGetter for method: JoiningLobbyViewController::add_didFinishEvent
// Il2CppName: add_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (JoiningLobbyViewController::*)(System::Action*)>(&JoiningLobbyViewController::add_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(JoiningLobbyViewController*), "add_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: JoiningLobbyViewController::remove_didFinishEvent
// Il2CppName: remove_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (JoiningLobbyViewController::*)(System::Action*)>(&JoiningLobbyViewController::remove_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(JoiningLobbyViewController*), "remove_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: JoiningLobbyViewController::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (JoiningLobbyViewController::*)(::Il2CppString*)>(&JoiningLobbyViewController::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(JoiningLobbyViewController*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: JoiningLobbyViewController::HideLoading
// Il2CppName: HideLoading
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (JoiningLobbyViewController::*)()>(&JoiningLobbyViewController::HideLoading)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(JoiningLobbyViewController*), "HideLoading", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: JoiningLobbyViewController::$DidActivate$b__8_0
// Il2CppName: <DidActivate>b__8_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (JoiningLobbyViewController::*)()>(&JoiningLobbyViewController::$DidActivate$b__8_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(JoiningLobbyViewController*), "<DidActivate>b__8_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: JoiningLobbyViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (JoiningLobbyViewController::*)(bool, bool, bool)>(&JoiningLobbyViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(JoiningLobbyViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: JoiningLobbyViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (JoiningLobbyViewController::*)()>(&JoiningLobbyViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(JoiningLobbyViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (JoiningLobbyViewController::*)()>(&JoiningLobbyViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(JoiningLobbyViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerModeSelectionViewController
#include "GlobalNamespace/MultiplayerModeSelectionViewController.hpp"
// Including type: MasterServerAvailabilityData
#include "GlobalNamespace/MasterServerAvailabilityData.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: INetworkConfig
#include "GlobalNamespace/INetworkConfig.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerModeSelectionViewController.add_didFinishEvent
void GlobalNamespace::MultiplayerModeSelectionViewController::add_didFinishEvent(System::Action_2<GlobalNamespace::MultiplayerModeSelectionViewController*, GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionViewController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerModeSelectionViewController.remove_didFinishEvent
void GlobalNamespace::MultiplayerModeSelectionViewController::remove_didFinishEvent(System::Action_2<GlobalNamespace::MultiplayerModeSelectionViewController*, GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionViewController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerModeSelectionViewController.SetData
void GlobalNamespace::MultiplayerModeSelectionViewController::SetData(GlobalNamespace::MasterServerAvailabilityData* masterServerAvailabilityData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionViewController::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(masterServerAvailabilityData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, masterServerAvailabilityData);
}
// Autogenerated method: MultiplayerModeSelectionViewController.HandleMenuButton
void GlobalNamespace::MultiplayerModeSelectionViewController::HandleMenuButton(GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton menuButton) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionViewController::HandleMenuButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(menuButton)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, menuButton);
}
// Autogenerated method: MultiplayerModeSelectionViewController.<DidActivate>b__11_0
void GlobalNamespace::MultiplayerModeSelectionViewController::$DidActivate$b__11_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionViewController::<DidActivate>b__11_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__11_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerModeSelectionViewController.<DidActivate>b__11_1
void GlobalNamespace::MultiplayerModeSelectionViewController::$DidActivate$b__11_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionViewController::<DidActivate>b__11_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__11_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerModeSelectionViewController.<DidActivate>b__11_2
void GlobalNamespace::MultiplayerModeSelectionViewController::$DidActivate$b__11_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionViewController::<DidActivate>b__11_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__11_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerModeSelectionViewController.<DidActivate>b__11_3
void GlobalNamespace::MultiplayerModeSelectionViewController::$DidActivate$b__11_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionViewController::<DidActivate>b__11_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__11_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerModeSelectionViewController.DidActivate
void GlobalNamespace::MultiplayerModeSelectionViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Writing MetadataGetter for method: MultiplayerModeSelectionViewController::add_didFinishEvent
// Il2CppName: add_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerModeSelectionViewController::*)(System::Action_2<GlobalNamespace::MultiplayerModeSelectionViewController*, GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton>*)>(&MultiplayerModeSelectionViewController::add_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerModeSelectionViewController*), "add_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::MultiplayerModeSelectionViewController*, GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton>*>()});
  }
};
// Writing MetadataGetter for method: MultiplayerModeSelectionViewController::remove_didFinishEvent
// Il2CppName: remove_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerModeSelectionViewController::*)(System::Action_2<GlobalNamespace::MultiplayerModeSelectionViewController*, GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton>*)>(&MultiplayerModeSelectionViewController::remove_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerModeSelectionViewController*), "remove_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::MultiplayerModeSelectionViewController*, GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton>*>()});
  }
};
// Writing MetadataGetter for method: MultiplayerModeSelectionViewController::SetData
// Il2CppName: SetData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerModeSelectionViewController::*)(GlobalNamespace::MasterServerAvailabilityData*)>(&MultiplayerModeSelectionViewController::SetData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerModeSelectionViewController*), "SetData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MasterServerAvailabilityData*>()});
  }
};
// Writing MetadataGetter for method: MultiplayerModeSelectionViewController::HandleMenuButton
// Il2CppName: HandleMenuButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerModeSelectionViewController::*)(GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton)>(&MultiplayerModeSelectionViewController::HandleMenuButton)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerModeSelectionViewController*), "HandleMenuButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton>()});
  }
};
// Writing MetadataGetter for method: MultiplayerModeSelectionViewController::$DidActivate$b__11_0
// Il2CppName: <DidActivate>b__11_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerModeSelectionViewController::*)()>(&MultiplayerModeSelectionViewController::$DidActivate$b__11_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerModeSelectionViewController*), "<DidActivate>b__11_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MultiplayerModeSelectionViewController::$DidActivate$b__11_1
// Il2CppName: <DidActivate>b__11_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerModeSelectionViewController::*)()>(&MultiplayerModeSelectionViewController::$DidActivate$b__11_1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerModeSelectionViewController*), "<DidActivate>b__11_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MultiplayerModeSelectionViewController::$DidActivate$b__11_2
// Il2CppName: <DidActivate>b__11_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerModeSelectionViewController::*)()>(&MultiplayerModeSelectionViewController::$DidActivate$b__11_2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerModeSelectionViewController*), "<DidActivate>b__11_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MultiplayerModeSelectionViewController::$DidActivate$b__11_3
// Il2CppName: <DidActivate>b__11_3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerModeSelectionViewController::*)()>(&MultiplayerModeSelectionViewController::$DidActivate$b__11_3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerModeSelectionViewController*), "<DidActivate>b__11_3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MultiplayerModeSelectionViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerModeSelectionViewController::*)(bool, bool, bool)>(&MultiplayerModeSelectionViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerModeSelectionViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: MultiplayerModeSelectionViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerModeSelectionViewController::*)()>(&MultiplayerModeSelectionViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerModeSelectionViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerModeSelectionViewController::*)()>(&MultiplayerModeSelectionViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerModeSelectionViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerModeSelectionViewController/MenuButton
#include "GlobalNamespace/MultiplayerModeSelectionViewController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public MultiplayerModeSelectionViewController/MenuButton QuickPlay
GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton::_get_QuickPlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton::_get_QuickPlay");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton>("", "MultiplayerModeSelectionViewController/MenuButton", "QuickPlay"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerModeSelectionViewController/MenuButton QuickPlay
void GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton::_set_QuickPlay(GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton::_set_QuickPlay");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerModeSelectionViewController/MenuButton", "QuickPlay", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerModeSelectionViewController/MenuButton CreateServer
GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton::_get_CreateServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton::_get_CreateServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton>("", "MultiplayerModeSelectionViewController/MenuButton", "CreateServer"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerModeSelectionViewController/MenuButton CreateServer
void GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton::_set_CreateServer(GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton::_set_CreateServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerModeSelectionViewController/MenuButton", "CreateServer", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerModeSelectionViewController/MenuButton JoinWithCode
GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton::_get_JoinWithCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton::_get_JoinWithCode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton>("", "MultiplayerModeSelectionViewController/MenuButton", "JoinWithCode"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerModeSelectionViewController/MenuButton JoinWithCode
void GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton::_set_JoinWithCode(GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton::_set_JoinWithCode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerModeSelectionViewController/MenuButton", "JoinWithCode", value));
}
// Autogenerated static field getter
// Get static field: static public MultiplayerModeSelectionViewController/MenuButton GameBrowser
GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton::_get_GameBrowser() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton::_get_GameBrowser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton>("", "MultiplayerModeSelectionViewController/MenuButton", "GameBrowser"));
}
// Autogenerated static field setter
// Set static field: static public MultiplayerModeSelectionViewController/MenuButton GameBrowser
void GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton::_set_GameBrowser(GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerModeSelectionViewController::MenuButton::_set_GameBrowser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerModeSelectionViewController/MenuButton", "GameBrowser", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerResultsViewController
#include "GlobalNamespace/MultiplayerResultsViewController.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: LevelBar
#include "GlobalNamespace/LevelBar.hpp"
// Including type: ResultsTableView
#include "GlobalNamespace/ResultsTableView.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: MultiplayerResultsData
#include "GlobalNamespace/MultiplayerResultsData.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerResultsViewController.add_backToLobbyPressedEvent
void GlobalNamespace::MultiplayerResultsViewController::add_backToLobbyPressedEvent(System::Action_1<GlobalNamespace::MultiplayerResultsViewController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerResultsViewController::add_backToLobbyPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_backToLobbyPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerResultsViewController.remove_backToLobbyPressedEvent
void GlobalNamespace::MultiplayerResultsViewController::remove_backToLobbyPressedEvent(System::Action_1<GlobalNamespace::MultiplayerResultsViewController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerResultsViewController::remove_backToLobbyPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_backToLobbyPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerResultsViewController.Init
void GlobalNamespace::MultiplayerResultsViewController::Init(GlobalNamespace::MultiplayerResultsData* multiplayerResultsData, GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, GlobalNamespace::BeatmapDifficulty beatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerResultsViewController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(multiplayerResultsData), ::il2cpp_utils::ExtractType(previewBeatmapLevel), ::il2cpp_utils::ExtractType(beatmapDifficulty), ::il2cpp_utils::ExtractType(beatmapCharacteristic)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, multiplayerResultsData, previewBeatmapLevel, beatmapDifficulty, beatmapCharacteristic);
}
// Autogenerated method: MultiplayerResultsViewController.BackToLobbyPressed
void GlobalNamespace::MultiplayerResultsViewController::BackToLobbyPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerResultsViewController::BackToLobbyPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BackToLobbyPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsViewController.DidActivate
void GlobalNamespace::MultiplayerResultsViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerResultsViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Writing MetadataGetter for method: MultiplayerResultsViewController::add_backToLobbyPressedEvent
// Il2CppName: add_backToLobbyPressedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerResultsViewController::*)(System::Action_1<GlobalNamespace::MultiplayerResultsViewController*>*)>(&MultiplayerResultsViewController::add_backToLobbyPressedEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerResultsViewController*), "add_backToLobbyPressedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::MultiplayerResultsViewController*>*>()});
  }
};
// Writing MetadataGetter for method: MultiplayerResultsViewController::remove_backToLobbyPressedEvent
// Il2CppName: remove_backToLobbyPressedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerResultsViewController::*)(System::Action_1<GlobalNamespace::MultiplayerResultsViewController*>*)>(&MultiplayerResultsViewController::remove_backToLobbyPressedEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerResultsViewController*), "remove_backToLobbyPressedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::MultiplayerResultsViewController*>*>()});
  }
};
// Writing MetadataGetter for method: MultiplayerResultsViewController::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerResultsViewController::*)(GlobalNamespace::MultiplayerResultsData*, GlobalNamespace::IPreviewBeatmapLevel*, GlobalNamespace::BeatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO*)>(&MultiplayerResultsViewController::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerResultsViewController*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MultiplayerResultsData*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IPreviewBeatmapLevel*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapDifficulty>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapCharacteristicSO*>()});
  }
};
// Writing MetadataGetter for method: MultiplayerResultsViewController::BackToLobbyPressed
// Il2CppName: BackToLobbyPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerResultsViewController::*)()>(&MultiplayerResultsViewController::BackToLobbyPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerResultsViewController*), "BackToLobbyPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: MultiplayerResultsViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerResultsViewController::*)(bool, bool, bool)>(&MultiplayerResultsViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerResultsViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: MultiplayerResultsViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerResultsViewController::*)()>(&MultiplayerResultsViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerResultsViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (MultiplayerResultsViewController::*)()>(&MultiplayerResultsViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(MultiplayerResultsViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: QuickPlaySetupViewController
#include "GlobalNamespace/QuickPlaySetupViewController.hpp"
// Including type: EditableBeatmapSelectionView
#include "GlobalNamespace/EditableBeatmapSelectionView.hpp"
// Including type: GameServersFilterText
#include "GlobalNamespace/GameServersFilterText.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: ILobbyPlayerDataModel
#include "GlobalNamespace/ILobbyPlayerDataModel.hpp"
// Including type: BeatmapDifficultyMask
#include "GlobalNamespace/BeatmapDifficultyMask.hpp"
// Including type: SongPackMask
#include "GlobalNamespace/SongPackMask.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: QuickPlaySetupViewController.add_suggestBeatmapEvent
void GlobalNamespace::QuickPlaySetupViewController::add_suggestBeatmapEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuickPlaySetupViewController::add_suggestBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_suggestBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: QuickPlaySetupViewController.remove_suggestBeatmapEvent
void GlobalNamespace::QuickPlaySetupViewController::remove_suggestBeatmapEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuickPlaySetupViewController::remove_suggestBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_suggestBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: QuickPlaySetupViewController.add_deleteSuggestedBeatmapEvent
void GlobalNamespace::QuickPlaySetupViewController::add_deleteSuggestedBeatmapEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuickPlaySetupViewController::add_deleteSuggestedBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_deleteSuggestedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: QuickPlaySetupViewController.remove_deleteSuggestedBeatmapEvent
void GlobalNamespace::QuickPlaySetupViewController::remove_deleteSuggestedBeatmapEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuickPlaySetupViewController::remove_deleteSuggestedBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_deleteSuggestedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: QuickPlaySetupViewController.add_setPlayerReadyEvent
void GlobalNamespace::QuickPlaySetupViewController::add_setPlayerReadyEvent(System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuickPlaySetupViewController::add_setPlayerReadyEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_setPlayerReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: QuickPlaySetupViewController.remove_setPlayerReadyEvent
void GlobalNamespace::QuickPlaySetupViewController::remove_setPlayerReadyEvent(System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuickPlaySetupViewController::remove_setPlayerReadyEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_setPlayerReadyEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: QuickPlaySetupViewController.SetLocalPlayerData
void GlobalNamespace::QuickPlaySetupViewController::SetLocalPlayerData(GlobalNamespace::ILobbyPlayerDataModel* lobbyPlayerData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuickPlaySetupViewController::SetLocalPlayerData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPlayerData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lobbyPlayerData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lobbyPlayerData);
}
// Autogenerated method: QuickPlaySetupViewController.SetGameServerSettings
void GlobalNamespace::QuickPlaySetupViewController::SetGameServerSettings(GlobalNamespace::BeatmapDifficultyMask beatmapDifficultyMask, GlobalNamespace::SongPackMask songPackMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuickPlaySetupViewController::SetGameServerSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGameServerSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapDifficultyMask), ::il2cpp_utils::ExtractType(songPackMask)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapDifficultyMask, songPackMask);
}
// Autogenerated method: QuickPlaySetupViewController.SetLobbyState
void GlobalNamespace::QuickPlaySetupViewController::SetLobbyState(GlobalNamespace::MultiplayerLobbyState lobbyState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuickPlaySetupViewController::SetLobbyState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLobbyState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lobbyState)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, lobbyState);
}
// Autogenerated method: QuickPlaySetupViewController.SetReadyButtonsState
void GlobalNamespace::QuickPlaySetupViewController::SetReadyButtonsState() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuickPlaySetupViewController::SetReadyButtonsState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetReadyButtonsState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: QuickPlaySetupViewController.<DidActivate>b__18_0
void GlobalNamespace::QuickPlaySetupViewController::$DidActivate$b__18_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuickPlaySetupViewController::<DidActivate>b__18_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__18_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: QuickPlaySetupViewController.<DidActivate>b__18_1
void GlobalNamespace::QuickPlaySetupViewController::$DidActivate$b__18_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuickPlaySetupViewController::<DidActivate>b__18_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__18_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: QuickPlaySetupViewController.<DidActivate>b__18_2
void GlobalNamespace::QuickPlaySetupViewController::$DidActivate$b__18_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuickPlaySetupViewController::<DidActivate>b__18_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__18_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: QuickPlaySetupViewController.<DidActivate>b__18_3
void GlobalNamespace::QuickPlaySetupViewController::$DidActivate$b__18_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuickPlaySetupViewController::<DidActivate>b__18_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__18_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: QuickPlaySetupViewController.DidActivate
void GlobalNamespace::QuickPlaySetupViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::QuickPlaySetupViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Writing MetadataGetter for method: QuickPlaySetupViewController::add_suggestBeatmapEvent
// Il2CppName: add_suggestBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (QuickPlaySetupViewController::*)(System::Action*)>(&QuickPlaySetupViewController::add_suggestBeatmapEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(QuickPlaySetupViewController*), "add_suggestBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: QuickPlaySetupViewController::remove_suggestBeatmapEvent
// Il2CppName: remove_suggestBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (QuickPlaySetupViewController::*)(System::Action*)>(&QuickPlaySetupViewController::remove_suggestBeatmapEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(QuickPlaySetupViewController*), "remove_suggestBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: QuickPlaySetupViewController::add_deleteSuggestedBeatmapEvent
// Il2CppName: add_deleteSuggestedBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (QuickPlaySetupViewController::*)(System::Action*)>(&QuickPlaySetupViewController::add_deleteSuggestedBeatmapEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(QuickPlaySetupViewController*), "add_deleteSuggestedBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: QuickPlaySetupViewController::remove_deleteSuggestedBeatmapEvent
// Il2CppName: remove_deleteSuggestedBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (QuickPlaySetupViewController::*)(System::Action*)>(&QuickPlaySetupViewController::remove_deleteSuggestedBeatmapEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(QuickPlaySetupViewController*), "remove_deleteSuggestedBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: QuickPlaySetupViewController::add_setPlayerReadyEvent
// Il2CppName: add_setPlayerReadyEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (QuickPlaySetupViewController::*)(System::Action_1<bool>*)>(&QuickPlaySetupViewController::add_setPlayerReadyEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(QuickPlaySetupViewController*), "add_setPlayerReadyEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<bool>*>()});
  }
};
// Writing MetadataGetter for method: QuickPlaySetupViewController::remove_setPlayerReadyEvent
// Il2CppName: remove_setPlayerReadyEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (QuickPlaySetupViewController::*)(System::Action_1<bool>*)>(&QuickPlaySetupViewController::remove_setPlayerReadyEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(QuickPlaySetupViewController*), "remove_setPlayerReadyEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<bool>*>()});
  }
};
// Writing MetadataGetter for method: QuickPlaySetupViewController::SetLocalPlayerData
// Il2CppName: SetLocalPlayerData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (QuickPlaySetupViewController::*)(GlobalNamespace::ILobbyPlayerDataModel*)>(&QuickPlaySetupViewController::SetLocalPlayerData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(QuickPlaySetupViewController*), "SetLocalPlayerData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ILobbyPlayerDataModel*>()});
  }
};
// Writing MetadataGetter for method: QuickPlaySetupViewController::SetGameServerSettings
// Il2CppName: SetGameServerSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (QuickPlaySetupViewController::*)(GlobalNamespace::BeatmapDifficultyMask, GlobalNamespace::SongPackMask)>(&QuickPlaySetupViewController::SetGameServerSettings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(QuickPlaySetupViewController*), "SetGameServerSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapDifficultyMask>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::SongPackMask>()});
  }
};
// Writing MetadataGetter for method: QuickPlaySetupViewController::SetLobbyState
// Il2CppName: SetLobbyState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (QuickPlaySetupViewController::*)(GlobalNamespace::MultiplayerLobbyState)>(&QuickPlaySetupViewController::SetLobbyState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(QuickPlaySetupViewController*), "SetLobbyState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::MultiplayerLobbyState>()});
  }
};
// Writing MetadataGetter for method: QuickPlaySetupViewController::SetReadyButtonsState
// Il2CppName: SetReadyButtonsState
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (QuickPlaySetupViewController::*)()>(&QuickPlaySetupViewController::SetReadyButtonsState)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(QuickPlaySetupViewController*), "SetReadyButtonsState", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: QuickPlaySetupViewController::$DidActivate$b__18_0
// Il2CppName: <DidActivate>b__18_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (QuickPlaySetupViewController::*)()>(&QuickPlaySetupViewController::$DidActivate$b__18_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(QuickPlaySetupViewController*), "<DidActivate>b__18_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: QuickPlaySetupViewController::$DidActivate$b__18_1
// Il2CppName: <DidActivate>b__18_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (QuickPlaySetupViewController::*)()>(&QuickPlaySetupViewController::$DidActivate$b__18_1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(QuickPlaySetupViewController*), "<DidActivate>b__18_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: QuickPlaySetupViewController::$DidActivate$b__18_2
// Il2CppName: <DidActivate>b__18_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (QuickPlaySetupViewController::*)()>(&QuickPlaySetupViewController::$DidActivate$b__18_2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(QuickPlaySetupViewController*), "<DidActivate>b__18_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: QuickPlaySetupViewController::$DidActivate$b__18_3
// Il2CppName: <DidActivate>b__18_3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (QuickPlaySetupViewController::*)()>(&QuickPlaySetupViewController::$DidActivate$b__18_3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(QuickPlaySetupViewController*), "<DidActivate>b__18_3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: QuickPlaySetupViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (QuickPlaySetupViewController::*)(bool, bool, bool)>(&QuickPlaySetupViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(QuickPlaySetupViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: QuickPlaySetupViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (QuickPlaySetupViewController::*)()>(&QuickPlaySetupViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(QuickPlaySetupViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (QuickPlaySetupViewController::*)()>(&QuickPlaySetupViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(QuickPlaySetupViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SelectModifiersViewController
#include "GlobalNamespace/SelectModifiersViewController.hpp"
// Including type: GameplayModifiersPanelController
#include "GlobalNamespace/GameplayModifiersPanelController.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SelectModifiersViewController.get_gameplayModifiers
GlobalNamespace::GameplayModifiers* GlobalNamespace::SelectModifiersViewController::get_gameplayModifiers() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectModifiersViewController::get_gameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::GameplayModifiers*, false>(this, ___internal__method);
}
// Autogenerated method: SelectModifiersViewController.Setup
void GlobalNamespace::SelectModifiersViewController::Setup(GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectModifiersViewController::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: SelectModifiersViewController.DidActivate
void GlobalNamespace::SelectModifiersViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectModifiersViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Writing MetadataGetter for method: SelectModifiersViewController::get_gameplayModifiers
// Il2CppName: get_gameplayModifiers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::GameplayModifiers* (SelectModifiersViewController::*)()>(&SelectModifiersViewController::get_gameplayModifiers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SelectModifiersViewController*), "get_gameplayModifiers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SelectModifiersViewController::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SelectModifiersViewController::*)(GlobalNamespace::GameplayModifiers*)>(&SelectModifiersViewController::Setup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SelectModifiersViewController*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameplayModifiers*>()});
  }
};
// Writing MetadataGetter for method: SelectModifiersViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SelectModifiersViewController::*)(bool, bool, bool)>(&SelectModifiersViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SelectModifiersViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: SelectModifiersViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SelectModifiersViewController::*)()>(&SelectModifiersViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SelectModifiersViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SelectModifiersViewController::*)()>(&SelectModifiersViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SelectModifiersViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ServerCodeEntryViewController
#include "GlobalNamespace/ServerCodeEntryViewController.hpp"
// Including type: HMUI.UIKeyboard
#include "HMUI/UIKeyboard.hpp"
// Including type: HMUI.InputFieldView
#include "HMUI/InputFieldView.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: HMUI.InputFieldViewChangeBinder
#include "HMUI/InputFieldViewChangeBinder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ServerCodeEntryViewController.add_didFinishEvent
void GlobalNamespace::ServerCodeEntryViewController::add_didFinishEvent(System::Action_2<bool, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ServerCodeEntryViewController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ServerCodeEntryViewController.remove_didFinishEvent
void GlobalNamespace::ServerCodeEntryViewController::remove_didFinishEvent(System::Action_2<bool, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ServerCodeEntryViewController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ServerCodeEntryViewController.HandleInputFieldChanged
void GlobalNamespace::ServerCodeEntryViewController::HandleInputFieldChanged(HMUI::InputFieldView* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ServerCodeEntryViewController::HandleInputFieldChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInputFieldChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, obj);
}
// Autogenerated method: ServerCodeEntryViewController.HandleJoinButtonPressed
void GlobalNamespace::ServerCodeEntryViewController::HandleJoinButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ServerCodeEntryViewController::HandleJoinButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleJoinButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ServerCodeEntryViewController.HandleCancelButtonPressed
void GlobalNamespace::ServerCodeEntryViewController::HandleCancelButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ServerCodeEntryViewController::HandleCancelButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCancelButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ServerCodeEntryViewController.DidActivate
void GlobalNamespace::ServerCodeEntryViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ServerCodeEntryViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: ServerCodeEntryViewController.DidDeactivate
void GlobalNamespace::ServerCodeEntryViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ServerCodeEntryViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated method: ServerCodeEntryViewController.OnDestroy
void GlobalNamespace::ServerCodeEntryViewController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ServerCodeEntryViewController::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: ServerCodeEntryViewController::add_didFinishEvent
// Il2CppName: add_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerCodeEntryViewController::*)(System::Action_2<bool, ::Il2CppString*>*)>(&ServerCodeEntryViewController::add_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerCodeEntryViewController*), "add_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<bool, ::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: ServerCodeEntryViewController::remove_didFinishEvent
// Il2CppName: remove_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerCodeEntryViewController::*)(System::Action_2<bool, ::Il2CppString*>*)>(&ServerCodeEntryViewController::remove_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerCodeEntryViewController*), "remove_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<bool, ::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: ServerCodeEntryViewController::HandleInputFieldChanged
// Il2CppName: HandleInputFieldChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerCodeEntryViewController::*)(HMUI::InputFieldView*)>(&ServerCodeEntryViewController::HandleInputFieldChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerCodeEntryViewController*), "HandleInputFieldChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::InputFieldView*>()});
  }
};
// Writing MetadataGetter for method: ServerCodeEntryViewController::HandleJoinButtonPressed
// Il2CppName: HandleJoinButtonPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerCodeEntryViewController::*)()>(&ServerCodeEntryViewController::HandleJoinButtonPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerCodeEntryViewController*), "HandleJoinButtonPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ServerCodeEntryViewController::HandleCancelButtonPressed
// Il2CppName: HandleCancelButtonPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerCodeEntryViewController::*)()>(&ServerCodeEntryViewController::HandleCancelButtonPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerCodeEntryViewController*), "HandleCancelButtonPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ServerCodeEntryViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerCodeEntryViewController::*)(bool, bool, bool)>(&ServerCodeEntryViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerCodeEntryViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ServerCodeEntryViewController::DidDeactivate
// Il2CppName: DidDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerCodeEntryViewController::*)(bool, bool)>(&ServerCodeEntryViewController::DidDeactivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerCodeEntryViewController*), "DidDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ServerCodeEntryViewController::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerCodeEntryViewController::*)()>(&ServerCodeEntryViewController::OnDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerCodeEntryViewController*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ServerCodeEntryViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerCodeEntryViewController::*)()>(&ServerCodeEntryViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerCodeEntryViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerCodeEntryViewController::*)()>(&ServerCodeEntryViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerCodeEntryViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ServerPasswordEntryViewController
#include "GlobalNamespace/ServerPasswordEntryViewController.hpp"
// Including type: HMUI.InputFieldView
#include "HMUI/InputFieldView.hpp"
// Including type: HMUI.UIKeyboard
#include "HMUI/UIKeyboard.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ServerPasswordEntryViewController.add_didFinishEvent
void GlobalNamespace::ServerPasswordEntryViewController::add_didFinishEvent(System::Action_2<GlobalNamespace::INetworkPlayer*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ServerPasswordEntryViewController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ServerPasswordEntryViewController.remove_didFinishEvent
void GlobalNamespace::ServerPasswordEntryViewController::remove_didFinishEvent(System::Action_2<GlobalNamespace::INetworkPlayer*, ::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ServerPasswordEntryViewController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ServerPasswordEntryViewController.Setup
void GlobalNamespace::ServerPasswordEntryViewController::Setup(GlobalNamespace::INetworkPlayer* selectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ServerPasswordEntryViewController::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selectedPlayer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, selectedPlayer);
}
// Autogenerated method: ServerPasswordEntryViewController.HandleJoinClicked
void GlobalNamespace::ServerPasswordEntryViewController::HandleJoinClicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ServerPasswordEntryViewController::HandleJoinClicked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleJoinClicked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ServerPasswordEntryViewController.HandleUIKeyboardOkButtonWasPressed
void GlobalNamespace::ServerPasswordEntryViewController::HandleUIKeyboardOkButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ServerPasswordEntryViewController::HandleUIKeyboardOkButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleUIKeyboardOkButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ServerPasswordEntryViewController.DidActivate
void GlobalNamespace::ServerPasswordEntryViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ServerPasswordEntryViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: ServerPasswordEntryViewController.DidDeactivate
void GlobalNamespace::ServerPasswordEntryViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ServerPasswordEntryViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Writing MetadataGetter for method: ServerPasswordEntryViewController::add_didFinishEvent
// Il2CppName: add_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerPasswordEntryViewController::*)(System::Action_2<GlobalNamespace::INetworkPlayer*, ::Il2CppString*>*)>(&ServerPasswordEntryViewController::add_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerPasswordEntryViewController*), "add_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::INetworkPlayer*, ::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: ServerPasswordEntryViewController::remove_didFinishEvent
// Il2CppName: remove_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerPasswordEntryViewController::*)(System::Action_2<GlobalNamespace::INetworkPlayer*, ::Il2CppString*>*)>(&ServerPasswordEntryViewController::remove_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerPasswordEntryViewController*), "remove_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::INetworkPlayer*, ::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: ServerPasswordEntryViewController::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerPasswordEntryViewController::*)(GlobalNamespace::INetworkPlayer*)>(&ServerPasswordEntryViewController::Setup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerPasswordEntryViewController*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::INetworkPlayer*>()});
  }
};
// Writing MetadataGetter for method: ServerPasswordEntryViewController::HandleJoinClicked
// Il2CppName: HandleJoinClicked
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerPasswordEntryViewController::*)()>(&ServerPasswordEntryViewController::HandleJoinClicked)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerPasswordEntryViewController*), "HandleJoinClicked", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ServerPasswordEntryViewController::HandleUIKeyboardOkButtonWasPressed
// Il2CppName: HandleUIKeyboardOkButtonWasPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerPasswordEntryViewController::*)()>(&ServerPasswordEntryViewController::HandleUIKeyboardOkButtonWasPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerPasswordEntryViewController*), "HandleUIKeyboardOkButtonWasPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ServerPasswordEntryViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerPasswordEntryViewController::*)(bool, bool, bool)>(&ServerPasswordEntryViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerPasswordEntryViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ServerPasswordEntryViewController::DidDeactivate
// Il2CppName: DidDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerPasswordEntryViewController::*)(bool, bool)>(&ServerPasswordEntryViewController::DidDeactivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerPasswordEntryViewController*), "DidDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ServerPasswordEntryViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerPasswordEntryViewController::*)()>(&ServerPasswordEntryViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerPasswordEntryViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerPasswordEntryViewController::*)()>(&ServerPasswordEntryViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerPasswordEntryViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ServerPlayerListController
#include "GlobalNamespace/ServerPlayerListController.hpp"
// Including type: GameServerPlayersTableView
#include "GlobalNamespace/GameServerPlayersTableView.hpp"
// Including type: ILobbyPlayersDataModel
#include "GlobalNamespace/ILobbyPlayersDataModel.hpp"
// Including type: ILobbyStateDataModel
#include "GlobalNamespace/ILobbyStateDataModel.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ServerPlayerListController.add_selectSuggestedBeatmapEvent
void GlobalNamespace::ServerPlayerListController::add_selectSuggestedBeatmapEvent(System::Action_3<::Il2CppString*, GlobalNamespace::BeatmapCharacteristicSO*, GlobalNamespace::BeatmapDifficulty>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ServerPlayerListController::add_selectSuggestedBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_selectSuggestedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ServerPlayerListController.remove_selectSuggestedBeatmapEvent
void GlobalNamespace::ServerPlayerListController::remove_selectSuggestedBeatmapEvent(System::Action_3<::Il2CppString*, GlobalNamespace::BeatmapCharacteristicSO*, GlobalNamespace::BeatmapDifficulty>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ServerPlayerListController::remove_selectSuggestedBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_selectSuggestedBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ServerPlayerListController.add_selectSuggestedGameplayModifiersEvent
void GlobalNamespace::ServerPlayerListController::add_selectSuggestedGameplayModifiersEvent(System::Action_1<GlobalNamespace::GameplayModifiers*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ServerPlayerListController::add_selectSuggestedGameplayModifiersEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_selectSuggestedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ServerPlayerListController.remove_selectSuggestedGameplayModifiersEvent
void GlobalNamespace::ServerPlayerListController::remove_selectSuggestedGameplayModifiersEvent(System::Action_1<GlobalNamespace::GameplayModifiers*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ServerPlayerListController::remove_selectSuggestedGameplayModifiersEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_selectSuggestedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ServerPlayerListController.add_kickPlayerEvent
void GlobalNamespace::ServerPlayerListController::add_kickPlayerEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ServerPlayerListController::add_kickPlayerEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_kickPlayerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ServerPlayerListController.remove_kickPlayerEvent
void GlobalNamespace::ServerPlayerListController::remove_kickPlayerEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ServerPlayerListController::remove_kickPlayerEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_kickPlayerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ServerPlayerListController.HandleLobbyPlayersDataDidChange
void GlobalNamespace::ServerPlayerListController::HandleLobbyPlayersDataDidChange(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ServerPlayerListController::HandleLobbyPlayersDataDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyPlayersDataDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: ServerPlayerListController.HandleLobbyStateDataPlayerConnected
void GlobalNamespace::ServerPlayerListController::HandleLobbyStateDataPlayerConnected(GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ServerPlayerListController::HandleLobbyStateDataPlayerConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyStateDataPlayerConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, connectedPlayer);
}
// Autogenerated method: ServerPlayerListController.HandleLobbyStateDataPlayerDisconnected
void GlobalNamespace::ServerPlayerListController::HandleLobbyStateDataPlayerDisconnected(GlobalNamespace::IConnectedPlayer* connectedPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ServerPlayerListController::HandleLobbyStateDataPlayerDisconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLobbyStateDataPlayerDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, connectedPlayer);
}
// Autogenerated method: ServerPlayerListController.SetDataToTable
void GlobalNamespace::ServerPlayerListController::SetDataToTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ServerPlayerListController::SetDataToTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDataToTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ServerPlayerListController.HandleSelectSuggestedLevel
void GlobalNamespace::ServerPlayerListController::HandleSelectSuggestedLevel(::Il2CppString* levelId, GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic, GlobalNamespace::BeatmapDifficulty beatmapDifficulty) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ServerPlayerListController::HandleSelectSuggestedLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSelectSuggestedLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelId), ::il2cpp_utils::ExtractType(beatmapCharacteristic), ::il2cpp_utils::ExtractType(beatmapDifficulty)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelId, beatmapCharacteristic, beatmapDifficulty);
}
// Autogenerated method: ServerPlayerListController.HandleSelectSuggestedGameplayModifiers
void GlobalNamespace::ServerPlayerListController::HandleSelectSuggestedGameplayModifiers(GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ServerPlayerListController::HandleSelectSuggestedGameplayModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSelectSuggestedGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated method: ServerPlayerListController.HandleKickPlayer
void GlobalNamespace::ServerPlayerListController::HandleKickPlayer(::Il2CppString* userId) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ServerPlayerListController::HandleKickPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleKickPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userId)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId);
}
// Autogenerated method: ServerPlayerListController.DidActivate
void GlobalNamespace::ServerPlayerListController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ServerPlayerListController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: ServerPlayerListController.DidDeactivate
void GlobalNamespace::ServerPlayerListController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ServerPlayerListController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Writing MetadataGetter for method: ServerPlayerListController::add_selectSuggestedBeatmapEvent
// Il2CppName: add_selectSuggestedBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerPlayerListController::*)(System::Action_3<::Il2CppString*, GlobalNamespace::BeatmapCharacteristicSO*, GlobalNamespace::BeatmapDifficulty>*)>(&ServerPlayerListController::add_selectSuggestedBeatmapEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerPlayerListController*), "add_selectSuggestedBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_3<::Il2CppString*, GlobalNamespace::BeatmapCharacteristicSO*, GlobalNamespace::BeatmapDifficulty>*>()});
  }
};
// Writing MetadataGetter for method: ServerPlayerListController::remove_selectSuggestedBeatmapEvent
// Il2CppName: remove_selectSuggestedBeatmapEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerPlayerListController::*)(System::Action_3<::Il2CppString*, GlobalNamespace::BeatmapCharacteristicSO*, GlobalNamespace::BeatmapDifficulty>*)>(&ServerPlayerListController::remove_selectSuggestedBeatmapEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerPlayerListController*), "remove_selectSuggestedBeatmapEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_3<::Il2CppString*, GlobalNamespace::BeatmapCharacteristicSO*, GlobalNamespace::BeatmapDifficulty>*>()});
  }
};
// Writing MetadataGetter for method: ServerPlayerListController::add_selectSuggestedGameplayModifiersEvent
// Il2CppName: add_selectSuggestedGameplayModifiersEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerPlayerListController::*)(System::Action_1<GlobalNamespace::GameplayModifiers*>*)>(&ServerPlayerListController::add_selectSuggestedGameplayModifiersEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerPlayerListController*), "add_selectSuggestedGameplayModifiersEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::GameplayModifiers*>*>()});
  }
};
// Writing MetadataGetter for method: ServerPlayerListController::remove_selectSuggestedGameplayModifiersEvent
// Il2CppName: remove_selectSuggestedGameplayModifiersEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerPlayerListController::*)(System::Action_1<GlobalNamespace::GameplayModifiers*>*)>(&ServerPlayerListController::remove_selectSuggestedGameplayModifiersEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerPlayerListController*), "remove_selectSuggestedGameplayModifiersEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::GameplayModifiers*>*>()});
  }
};
// Writing MetadataGetter for method: ServerPlayerListController::add_kickPlayerEvent
// Il2CppName: add_kickPlayerEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerPlayerListController::*)(System::Action_1<::Il2CppString*>*)>(&ServerPlayerListController::add_kickPlayerEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerPlayerListController*), "add_kickPlayerEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: ServerPlayerListController::remove_kickPlayerEvent
// Il2CppName: remove_kickPlayerEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerPlayerListController::*)(System::Action_1<::Il2CppString*>*)>(&ServerPlayerListController::remove_kickPlayerEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerPlayerListController*), "remove_kickPlayerEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: ServerPlayerListController::HandleLobbyPlayersDataDidChange
// Il2CppName: HandleLobbyPlayersDataDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerPlayerListController::*)(::Il2CppString*)>(&ServerPlayerListController::HandleLobbyPlayersDataDidChange)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerPlayerListController*), "HandleLobbyPlayersDataDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: ServerPlayerListController::HandleLobbyStateDataPlayerConnected
// Il2CppName: HandleLobbyStateDataPlayerConnected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerPlayerListController::*)(GlobalNamespace::IConnectedPlayer*)>(&ServerPlayerListController::HandleLobbyStateDataPlayerConnected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerPlayerListController*), "HandleLobbyStateDataPlayerConnected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IConnectedPlayer*>()});
  }
};
// Writing MetadataGetter for method: ServerPlayerListController::HandleLobbyStateDataPlayerDisconnected
// Il2CppName: HandleLobbyStateDataPlayerDisconnected
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerPlayerListController::*)(GlobalNamespace::IConnectedPlayer*)>(&ServerPlayerListController::HandleLobbyStateDataPlayerDisconnected)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerPlayerListController*), "HandleLobbyStateDataPlayerDisconnected", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IConnectedPlayer*>()});
  }
};
// Writing MetadataGetter for method: ServerPlayerListController::SetDataToTable
// Il2CppName: SetDataToTable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerPlayerListController::*)()>(&ServerPlayerListController::SetDataToTable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerPlayerListController*), "SetDataToTable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ServerPlayerListController::HandleSelectSuggestedLevel
// Il2CppName: HandleSelectSuggestedLevel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerPlayerListController::*)(::Il2CppString*, GlobalNamespace::BeatmapCharacteristicSO*, GlobalNamespace::BeatmapDifficulty)>(&ServerPlayerListController::HandleSelectSuggestedLevel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerPlayerListController*), "HandleSelectSuggestedLevel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapCharacteristicSO*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapDifficulty>()});
  }
};
// Writing MetadataGetter for method: ServerPlayerListController::HandleSelectSuggestedGameplayModifiers
// Il2CppName: HandleSelectSuggestedGameplayModifiers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerPlayerListController::*)(GlobalNamespace::GameplayModifiers*)>(&ServerPlayerListController::HandleSelectSuggestedGameplayModifiers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerPlayerListController*), "HandleSelectSuggestedGameplayModifiers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameplayModifiers*>()});
  }
};
// Writing MetadataGetter for method: ServerPlayerListController::HandleKickPlayer
// Il2CppName: HandleKickPlayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerPlayerListController::*)(::Il2CppString*)>(&ServerPlayerListController::HandleKickPlayer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerPlayerListController*), "HandleKickPlayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: ServerPlayerListController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerPlayerListController::*)(bool, bool, bool)>(&ServerPlayerListController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerPlayerListController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ServerPlayerListController::DidDeactivate
// Il2CppName: DidDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerPlayerListController::*)(bool, bool)>(&ServerPlayerListController::DidDeactivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerPlayerListController*), "DidDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ServerPlayerListController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerPlayerListController::*)()>(&ServerPlayerListController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerPlayerListController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ServerPlayerListController::*)()>(&ServerPlayerListController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ServerPlayerListController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: NetworkPlayersViewController
#include "GlobalNamespace/NetworkPlayersViewController.hpp"
// Including type: NetworkPlayersTableView
#include "GlobalNamespace/NetworkPlayersTableView.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
// Including type: INetworkPlayerModel
#include "GlobalNamespace/INetworkPlayerModel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NetworkPlayersViewController.get_myPartyTitle
::Il2CppString* GlobalNamespace::NetworkPlayersViewController::get_myPartyTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersViewController::get_myPartyTitle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_myPartyTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayersViewController.get_otherPlayersTitle
::Il2CppString* GlobalNamespace::NetworkPlayersViewController::get_otherPlayersTitle() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersViewController::get_otherPlayersTitle");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_otherPlayersTitle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayersViewController.get_networkPlayerModel
GlobalNamespace::INetworkPlayerModel* GlobalNamespace::NetworkPlayersViewController::get_networkPlayerModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersViewController::get_networkPlayerModel");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_networkPlayerModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::INetworkPlayerModel*, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayersViewController.add_onJoinRequestEvent
void GlobalNamespace::NetworkPlayersViewController::add_onJoinRequestEvent(System::Action_1<GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersViewController::add_onJoinRequestEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onJoinRequestEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NetworkPlayersViewController.remove_onJoinRequestEvent
void GlobalNamespace::NetworkPlayersViewController::remove_onJoinRequestEvent(System::Action_1<GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersViewController::remove_onJoinRequestEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onJoinRequestEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NetworkPlayersViewController.add_onInviteRequestEvent
void GlobalNamespace::NetworkPlayersViewController::add_onInviteRequestEvent(System::Action_1<GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersViewController::add_onInviteRequestEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_onInviteRequestEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NetworkPlayersViewController.remove_onInviteRequestEvent
void GlobalNamespace::NetworkPlayersViewController::remove_onInviteRequestEvent(System::Action_1<GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersViewController::remove_onInviteRequestEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_onInviteRequestEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: NetworkPlayersViewController.NetworkPlayersViewControllerDidActivate
void GlobalNamespace::NetworkPlayersViewController::NetworkPlayersViewControllerDidActivate(bool firstActivation, bool addedToHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersViewController::NetworkPlayersViewControllerDidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NetworkPlayersViewControllerDidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy);
}
// Autogenerated method: NetworkPlayersViewController.NetworkPlayersViewControllerDidDeactivate
void GlobalNamespace::NetworkPlayersViewController::NetworkPlayersViewControllerDidDeactivate(bool removedFromHierarchy) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersViewController::NetworkPlayersViewControllerDidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NetworkPlayersViewControllerDidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy);
}
// Autogenerated method: NetworkPlayersViewController.HandlePartyChanged
void GlobalNamespace::NetworkPlayersViewController::HandlePartyChanged(GlobalNamespace::INetworkPlayerModel* playerModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersViewController::HandlePartyChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePartyChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerModel)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playerModel);
}
// Autogenerated method: NetworkPlayersViewController.HandleJoinRequest
void GlobalNamespace::NetworkPlayersViewController::HandleJoinRequest(GlobalNamespace::INetworkPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersViewController::HandleJoinRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleJoinRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: NetworkPlayersViewController.HandleInviteRequest
void GlobalNamespace::NetworkPlayersViewController::HandleInviteRequest(GlobalNamespace::INetworkPlayer* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersViewController::HandleInviteRequest");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleInviteRequest", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, player);
}
// Autogenerated method: NetworkPlayersViewController.Refresh
void GlobalNamespace::NetworkPlayersViewController::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersViewController::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NetworkPlayersViewController.DidActivate
void GlobalNamespace::NetworkPlayersViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: NetworkPlayersViewController.DidDeactivate
void GlobalNamespace::NetworkPlayersViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated method: NetworkPlayersViewController.OnDestroy
void GlobalNamespace::NetworkPlayersViewController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetworkPlayersViewController::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: NetworkPlayersViewController::get_myPartyTitle
// Il2CppName: get_myPartyTitle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (NetworkPlayersViewController::*)()>(&NetworkPlayersViewController::get_myPartyTitle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayersViewController*), "get_myPartyTitle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkPlayersViewController::get_otherPlayersTitle
// Il2CppName: get_otherPlayersTitle
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (NetworkPlayersViewController::*)()>(&NetworkPlayersViewController::get_otherPlayersTitle)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayersViewController*), "get_otherPlayersTitle", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkPlayersViewController::get_networkPlayerModel
// Il2CppName: get_networkPlayerModel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::INetworkPlayerModel* (NetworkPlayersViewController::*)()>(&NetworkPlayersViewController::get_networkPlayerModel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayersViewController*), "get_networkPlayerModel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkPlayersViewController::add_onJoinRequestEvent
// Il2CppName: add_onJoinRequestEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkPlayersViewController::*)(System::Action_1<GlobalNamespace::INetworkPlayer*>*)>(&NetworkPlayersViewController::add_onJoinRequestEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayersViewController*), "add_onJoinRequestEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::INetworkPlayer*>*>()});
  }
};
// Writing MetadataGetter for method: NetworkPlayersViewController::remove_onJoinRequestEvent
// Il2CppName: remove_onJoinRequestEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkPlayersViewController::*)(System::Action_1<GlobalNamespace::INetworkPlayer*>*)>(&NetworkPlayersViewController::remove_onJoinRequestEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayersViewController*), "remove_onJoinRequestEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::INetworkPlayer*>*>()});
  }
};
// Writing MetadataGetter for method: NetworkPlayersViewController::add_onInviteRequestEvent
// Il2CppName: add_onInviteRequestEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkPlayersViewController::*)(System::Action_1<GlobalNamespace::INetworkPlayer*>*)>(&NetworkPlayersViewController::add_onInviteRequestEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayersViewController*), "add_onInviteRequestEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::INetworkPlayer*>*>()});
  }
};
// Writing MetadataGetter for method: NetworkPlayersViewController::remove_onInviteRequestEvent
// Il2CppName: remove_onInviteRequestEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkPlayersViewController::*)(System::Action_1<GlobalNamespace::INetworkPlayer*>*)>(&NetworkPlayersViewController::remove_onInviteRequestEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayersViewController*), "remove_onInviteRequestEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::INetworkPlayer*>*>()});
  }
};
// Writing MetadataGetter for method: NetworkPlayersViewController::NetworkPlayersViewControllerDidActivate
// Il2CppName: NetworkPlayersViewControllerDidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkPlayersViewController::*)(bool, bool)>(&NetworkPlayersViewController::NetworkPlayersViewControllerDidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayersViewController*), "NetworkPlayersViewControllerDidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: NetworkPlayersViewController::NetworkPlayersViewControllerDidDeactivate
// Il2CppName: NetworkPlayersViewControllerDidDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkPlayersViewController::*)(bool)>(&NetworkPlayersViewController::NetworkPlayersViewControllerDidDeactivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayersViewController*), "NetworkPlayersViewControllerDidDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: NetworkPlayersViewController::HandlePartyChanged
// Il2CppName: HandlePartyChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkPlayersViewController::*)(GlobalNamespace::INetworkPlayerModel*)>(&NetworkPlayersViewController::HandlePartyChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayersViewController*), "HandlePartyChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::INetworkPlayerModel*>()});
  }
};
// Writing MetadataGetter for method: NetworkPlayersViewController::HandleJoinRequest
// Il2CppName: HandleJoinRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkPlayersViewController::*)(GlobalNamespace::INetworkPlayer*)>(&NetworkPlayersViewController::HandleJoinRequest)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayersViewController*), "HandleJoinRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::INetworkPlayer*>()});
  }
};
// Writing MetadataGetter for method: NetworkPlayersViewController::HandleInviteRequest
// Il2CppName: HandleInviteRequest
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkPlayersViewController::*)(GlobalNamespace::INetworkPlayer*)>(&NetworkPlayersViewController::HandleInviteRequest)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayersViewController*), "HandleInviteRequest", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::INetworkPlayer*>()});
  }
};
// Writing MetadataGetter for method: NetworkPlayersViewController::Refresh
// Il2CppName: Refresh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkPlayersViewController::*)()>(&NetworkPlayersViewController::Refresh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayersViewController*), "Refresh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkPlayersViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkPlayersViewController::*)(bool, bool, bool)>(&NetworkPlayersViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayersViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: NetworkPlayersViewController::DidDeactivate
// Il2CppName: DidDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkPlayersViewController::*)(bool, bool)>(&NetworkPlayersViewController::DidDeactivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayersViewController*), "DidDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: NetworkPlayersViewController::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkPlayersViewController::*)()>(&NetworkPlayersViewController::OnDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayersViewController*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: NetworkPlayersViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkPlayersViewController::*)()>(&NetworkPlayersViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayersViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (NetworkPlayersViewController::*)()>(&NetworkPlayersViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(NetworkPlayersViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OnlineServicesInfoViewController
#include "GlobalNamespace/OnlineServicesInfoViewController.hpp"
// Including type: OnlineServicesInfoViewController/<GetServerStatus>d__8
#include "GlobalNamespace/OnlineServicesInfoViewController_-GetServerStatus-d__8.hpp"
// Including type: HMUI.TextPageScrollView
#include "HMUI/TextPageScrollView.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: OnlineServices.ServerManager
#include "OnlineServices/ServerManager.hpp"
// Including type: IPlatformUserModel
#include "GlobalNamespace/IPlatformUserModel.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServicesInfoViewController.GetServerStatus
void GlobalNamespace::OnlineServicesInfoViewController::GetServerStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OnlineServicesInfoViewController::GetServerStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetServerStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OnlineServicesInfoViewController.AppendLine
void GlobalNamespace::OnlineServicesInfoViewController::AppendLine(::Il2CppString* line) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OnlineServicesInfoViewController::AppendLine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AppendLine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(line)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, line);
}
// Autogenerated method: OnlineServicesInfoViewController.DidActivate
void GlobalNamespace::OnlineServicesInfoViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OnlineServicesInfoViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Writing MetadataGetter for method: OnlineServicesInfoViewController::GetServerStatus
// Il2CppName: GetServerStatus
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OnlineServicesInfoViewController::*)()>(&OnlineServicesInfoViewController::GetServerStatus)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OnlineServicesInfoViewController*), "GetServerStatus", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OnlineServicesInfoViewController::AppendLine
// Il2CppName: AppendLine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OnlineServicesInfoViewController::*)(::Il2CppString*)>(&OnlineServicesInfoViewController::AppendLine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OnlineServicesInfoViewController*), "AppendLine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: OnlineServicesInfoViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OnlineServicesInfoViewController::*)(bool, bool, bool)>(&OnlineServicesInfoViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OnlineServicesInfoViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: OnlineServicesInfoViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OnlineServicesInfoViewController::*)()>(&OnlineServicesInfoViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OnlineServicesInfoViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OnlineServicesInfoViewController::*)()>(&OnlineServicesInfoViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OnlineServicesInfoViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OnlineServicesInfoViewController/<GetServerStatus>d__8
#include "GlobalNamespace/OnlineServicesInfoViewController_-GetServerStatus-d__8.hpp"
// Including type: UserInfo
#include "GlobalNamespace/UserInfo.hpp"
// Including type: OnlineServices.LeaderboardEntriesResult
#include "OnlineServices/LeaderboardEntriesResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServicesInfoViewController/<GetServerStatus>d__8.MoveNext
void GlobalNamespace::OnlineServicesInfoViewController::$GetServerStatus$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OnlineServicesInfoViewController::$GetServerStatus$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: OnlineServicesInfoViewController/<GetServerStatus>d__8.SetStateMachine
void GlobalNamespace::OnlineServicesInfoViewController::$GetServerStatus$d__8::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OnlineServicesInfoViewController::$GetServerStatus$d__8::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: OnlineServicesInfoViewController::$GetServerStatus$d__8::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OnlineServicesInfoViewController::$GetServerStatus$d__8::*)()>(&OnlineServicesInfoViewController::$GetServerStatus$d__8::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OnlineServicesInfoViewController::$GetServerStatus$d__8), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OnlineServicesInfoViewController::$GetServerStatus$d__8::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OnlineServicesInfoViewController::$GetServerStatus$d__8::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&OnlineServicesInfoViewController::$GetServerStatus$d__8::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OnlineServicesInfoViewController::$GetServerStatus$d__8), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OnlineServicesSettingsViewController
#include "GlobalNamespace/OnlineServicesSettingsViewController.hpp"
// Including type: BoolSO
#include "GlobalNamespace/BoolSO.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: HMUI.ToggleBinder
#include "HMUI/ToggleBinder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServicesSettingsViewController.HandleEnableOnlineServicesToggleValueChanged
void GlobalNamespace::OnlineServicesSettingsViewController::HandleEnableOnlineServicesToggleValueChanged(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OnlineServicesSettingsViewController::HandleEnableOnlineServicesToggleValueChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleEnableOnlineServicesToggleValueChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OnlineServicesSettingsViewController.DidActivate
void GlobalNamespace::OnlineServicesSettingsViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OnlineServicesSettingsViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Writing MetadataGetter for method: OnlineServicesSettingsViewController::HandleEnableOnlineServicesToggleValueChanged
// Il2CppName: HandleEnableOnlineServicesToggleValueChanged
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OnlineServicesSettingsViewController::*)(bool)>(&OnlineServicesSettingsViewController::HandleEnableOnlineServicesToggleValueChanged)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OnlineServicesSettingsViewController*), "HandleEnableOnlineServicesToggleValueChanged", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: OnlineServicesSettingsViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OnlineServicesSettingsViewController::*)(bool, bool, bool)>(&OnlineServicesSettingsViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OnlineServicesSettingsViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: OnlineServicesSettingsViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OnlineServicesSettingsViewController::*)()>(&OnlineServicesSettingsViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OnlineServicesSettingsViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OnlineServicesSettingsViewController::*)()>(&OnlineServicesSettingsViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OnlineServicesSettingsViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OnlineServicesViewController
#include "GlobalNamespace/OnlineServicesViewController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServicesViewController.add_didFinishEvent
void GlobalNamespace::OnlineServicesViewController::add_didFinishEvent(System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OnlineServicesViewController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OnlineServicesViewController.remove_didFinishEvent
void GlobalNamespace::OnlineServicesViewController::remove_didFinishEvent(System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OnlineServicesViewController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OnlineServicesViewController.<DidActivate>b__5_0
void GlobalNamespace::OnlineServicesViewController::$DidActivate$b__5_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OnlineServicesViewController::<DidActivate>b__5_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__5_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OnlineServicesViewController.<DidActivate>b__5_1
void GlobalNamespace::OnlineServicesViewController::$DidActivate$b__5_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OnlineServicesViewController::<DidActivate>b__5_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__5_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OnlineServicesViewController.DidActivate
void GlobalNamespace::OnlineServicesViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OnlineServicesViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Writing MetadataGetter for method: OnlineServicesViewController::add_didFinishEvent
// Il2CppName: add_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OnlineServicesViewController::*)(System::Action_1<bool>*)>(&OnlineServicesViewController::add_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OnlineServicesViewController*), "add_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<bool>*>()});
  }
};
// Writing MetadataGetter for method: OnlineServicesViewController::remove_didFinishEvent
// Il2CppName: remove_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OnlineServicesViewController::*)(System::Action_1<bool>*)>(&OnlineServicesViewController::remove_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OnlineServicesViewController*), "remove_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<bool>*>()});
  }
};
// Writing MetadataGetter for method: OnlineServicesViewController::$DidActivate$b__5_0
// Il2CppName: <DidActivate>b__5_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OnlineServicesViewController::*)()>(&OnlineServicesViewController::$DidActivate$b__5_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OnlineServicesViewController*), "<DidActivate>b__5_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OnlineServicesViewController::$DidActivate$b__5_1
// Il2CppName: <DidActivate>b__5_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OnlineServicesViewController::*)()>(&OnlineServicesViewController::$DidActivate$b__5_1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OnlineServicesViewController*), "<DidActivate>b__5_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OnlineServicesViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OnlineServicesViewController::*)(bool, bool, bool)>(&OnlineServicesViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OnlineServicesViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: OnlineServicesViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OnlineServicesViewController::*)()>(&OnlineServicesViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OnlineServicesViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OnlineServicesViewController::*)()>(&OnlineServicesViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OnlineServicesViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OptionsViewController
#include "GlobalNamespace/OptionsViewController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: AppStaticSettingsSO
#include "GlobalNamespace/AppStaticSettingsSO.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OptionsViewController.add_didFinishEvent
void GlobalNamespace::OptionsViewController::add_didFinishEvent(System::Action_1<GlobalNamespace::OptionsViewController::OptionsButton>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OptionsViewController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OptionsViewController.remove_didFinishEvent
void GlobalNamespace::OptionsViewController::remove_didFinishEvent(System::Action_1<GlobalNamespace::OptionsViewController::OptionsButton>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OptionsViewController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: OptionsViewController.<DidActivate>b__8_0
void GlobalNamespace::OptionsViewController::$DidActivate$b__8_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OptionsViewController::<DidActivate>b__8_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__8_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OptionsViewController.<DidActivate>b__8_1
void GlobalNamespace::OptionsViewController::$DidActivate$b__8_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OptionsViewController::<DidActivate>b__8_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__8_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OptionsViewController.<DidActivate>b__8_2
void GlobalNamespace::OptionsViewController::$DidActivate$b__8_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OptionsViewController::<DidActivate>b__8_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__8_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OptionsViewController.DidActivate
void GlobalNamespace::OptionsViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OptionsViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Writing MetadataGetter for method: OptionsViewController::add_didFinishEvent
// Il2CppName: add_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OptionsViewController::*)(System::Action_1<GlobalNamespace::OptionsViewController::OptionsButton>*)>(&OptionsViewController::add_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OptionsViewController*), "add_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::OptionsViewController::OptionsButton>*>()});
  }
};
// Writing MetadataGetter for method: OptionsViewController::remove_didFinishEvent
// Il2CppName: remove_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OptionsViewController::*)(System::Action_1<GlobalNamespace::OptionsViewController::OptionsButton>*)>(&OptionsViewController::remove_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OptionsViewController*), "remove_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::OptionsViewController::OptionsButton>*>()});
  }
};
// Writing MetadataGetter for method: OptionsViewController::$DidActivate$b__8_0
// Il2CppName: <DidActivate>b__8_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OptionsViewController::*)()>(&OptionsViewController::$DidActivate$b__8_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OptionsViewController*), "<DidActivate>b__8_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OptionsViewController::$DidActivate$b__8_1
// Il2CppName: <DidActivate>b__8_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OptionsViewController::*)()>(&OptionsViewController::$DidActivate$b__8_1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OptionsViewController*), "<DidActivate>b__8_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OptionsViewController::$DidActivate$b__8_2
// Il2CppName: <DidActivate>b__8_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OptionsViewController::*)()>(&OptionsViewController::$DidActivate$b__8_2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OptionsViewController*), "<DidActivate>b__8_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: OptionsViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OptionsViewController::*)(bool, bool, bool)>(&OptionsViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OptionsViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: OptionsViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OptionsViewController::*)()>(&OptionsViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OptionsViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (OptionsViewController::*)()>(&OptionsViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(OptionsViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OptionsViewController/OptionsButton
#include "GlobalNamespace/OptionsViewController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public OptionsViewController/OptionsButton EditAvatar
GlobalNamespace::OptionsViewController::OptionsButton GlobalNamespace::OptionsViewController::OptionsButton::_get_EditAvatar() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OptionsViewController::OptionsButton::_get_EditAvatar");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OptionsViewController::OptionsButton>("", "OptionsViewController/OptionsButton", "EditAvatar"));
}
// Autogenerated static field setter
// Set static field: static public OptionsViewController/OptionsButton EditAvatar
void GlobalNamespace::OptionsViewController::OptionsButton::_set_EditAvatar(GlobalNamespace::OptionsViewController::OptionsButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OptionsViewController::OptionsButton::_set_EditAvatar");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OptionsViewController/OptionsButton", "EditAvatar", value));
}
// Autogenerated static field getter
// Get static field: static public OptionsViewController/OptionsButton PlayerOptions
GlobalNamespace::OptionsViewController::OptionsButton GlobalNamespace::OptionsViewController::OptionsButton::_get_PlayerOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OptionsViewController::OptionsButton::_get_PlayerOptions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OptionsViewController::OptionsButton>("", "OptionsViewController/OptionsButton", "PlayerOptions"));
}
// Autogenerated static field setter
// Set static field: static public OptionsViewController/OptionsButton PlayerOptions
void GlobalNamespace::OptionsViewController::OptionsButton::_set_PlayerOptions(GlobalNamespace::OptionsViewController::OptionsButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OptionsViewController::OptionsButton::_set_PlayerOptions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OptionsViewController/OptionsButton", "PlayerOptions", value));
}
// Autogenerated static field getter
// Get static field: static public OptionsViewController/OptionsButton Settings
GlobalNamespace::OptionsViewController::OptionsButton GlobalNamespace::OptionsViewController::OptionsButton::_get_Settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OptionsViewController::OptionsButton::_get_Settings");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::OptionsViewController::OptionsButton>("", "OptionsViewController/OptionsButton", "Settings"));
}
// Autogenerated static field setter
// Set static field: static public OptionsViewController/OptionsButton Settings
void GlobalNamespace::OptionsViewController::OptionsButton::_set_Settings(GlobalNamespace::OptionsViewController::OptionsButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OptionsViewController::OptionsButton::_set_Settings");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OptionsViewController/OptionsButton", "Settings", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlatformLeaderboardViewController
#include "GlobalNamespace/PlatformLeaderboardViewController.hpp"
// Including type: PlatformLeaderboardViewController/<RefreshDelayed>d__31
#include "GlobalNamespace/PlatformLeaderboardViewController_-RefreshDelayed-d__31.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: HMUI.IconSegmentedControl
#include "HMUI/IconSegmentedControl.hpp"
// Including type: LoadingControl
#include "GlobalNamespace/LoadingControl.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: LevelStatsView
#include "GlobalNamespace/LevelStatsView.hpp"
// Including type: HMUI.SegmentedControl
#include "HMUI/SegmentedControl.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: HMAsyncRequest
#include "GlobalNamespace/HMAsyncRequest.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: LeaderboardTableView/ScoreData
#include "GlobalNamespace/LeaderboardTableView_ScoreData.hpp"
// Including type: PlatformLeaderboardsModel/GetScoresResult
#include "GlobalNamespace/PlatformLeaderboardsModel_GetScoresResult.hpp"
// Including type: PlatformLeaderboardsModel/LeaderboardScore
#include "GlobalNamespace/PlatformLeaderboardsModel_LeaderboardScore.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xE265B8
// Autogenerated static field getter
// Get static field: static private PlatformLeaderboardsModel/ScoresScope _scoresScope
GlobalNamespace::PlatformLeaderboardsModel::ScoresScope GlobalNamespace::PlatformLeaderboardViewController::_get__scoresScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformLeaderboardViewController::_get__scoresScope");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PlatformLeaderboardsModel::ScoresScope>("", "PlatformLeaderboardViewController", "_scoresScope"));
}
// Autogenerated static field setter
// Set static field: static private PlatformLeaderboardsModel/ScoresScope _scoresScope
void GlobalNamespace::PlatformLeaderboardViewController::_set__scoresScope(GlobalNamespace::PlatformLeaderboardsModel::ScoresScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformLeaderboardViewController::_set__scoresScope");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PlatformLeaderboardViewController", "_scoresScope", value));
}
// Autogenerated method: PlatformLeaderboardViewController.get_leaderboardsModel
GlobalNamespace::PlatformLeaderboardsModel* GlobalNamespace::PlatformLeaderboardViewController::get_leaderboardsModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformLeaderboardViewController::get_leaderboardsModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leaderboardsModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlatformLeaderboardsModel*, false>(this, ___internal__method);
}
// Autogenerated method: PlatformLeaderboardViewController.ScoreScopeToScoreScopeIndex
int GlobalNamespace::PlatformLeaderboardViewController::ScoreScopeToScoreScopeIndex(GlobalNamespace::PlatformLeaderboardsModel::ScoresScope scoresScope) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformLeaderboardViewController::ScoreScopeToScoreScopeIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScoreScopeToScoreScopeIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scoresScope)})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, scoresScope);
}
// Autogenerated method: PlatformLeaderboardViewController.ScopeScopeIndexToScoreScope
GlobalNamespace::PlatformLeaderboardsModel::ScoresScope GlobalNamespace::PlatformLeaderboardViewController::ScopeScopeIndexToScoreScope(int scoreScopeIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformLeaderboardViewController::ScopeScopeIndexToScoreScope");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ScopeScopeIndexToScoreScope", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scoreScopeIndex)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlatformLeaderboardsModel::ScoresScope, false>(this, ___internal__method, scoreScopeIndex);
}
// Autogenerated method: PlatformLeaderboardViewController.HandleDidPressRefreshButton
void GlobalNamespace::PlatformLeaderboardViewController::HandleDidPressRefreshButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformLeaderboardViewController::HandleDidPressRefreshButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDidPressRefreshButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlatformLeaderboardViewController.HandleLeaderboardsResultsReturned
void GlobalNamespace::PlatformLeaderboardViewController::HandleLeaderboardsResultsReturned(GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult result, ::Array<GlobalNamespace::PlatformLeaderboardsModel::LeaderboardScore*>* scores, int playerScoreIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformLeaderboardViewController::HandleLeaderboardsResultsReturned");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLeaderboardsResultsReturned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result), ::il2cpp_utils::ExtractType(scores), ::il2cpp_utils::ExtractType(playerScoreIndex)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result, scores, playerScoreIndex);
}
// Autogenerated method: PlatformLeaderboardViewController.HandleScopeSegmentedControlDidSelectCell
void GlobalNamespace::PlatformLeaderboardViewController::HandleScopeSegmentedControlDidSelectCell(HMUI::SegmentedControl* segmentedControl, int cellNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformLeaderboardViewController::HandleScopeSegmentedControlDidSelectCell");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleScopeSegmentedControlDidSelectCell", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(segmentedControl), ::il2cpp_utils::ExtractType(cellNumber)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, segmentedControl, cellNumber);
}
// Autogenerated method: PlatformLeaderboardViewController.HandlePlatformLeaderboardsModelAllScoresDidUpload
void GlobalNamespace::PlatformLeaderboardViewController::HandlePlatformLeaderboardsModelAllScoresDidUpload() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformLeaderboardViewController::HandlePlatformLeaderboardsModelAllScoresDidUpload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandlePlatformLeaderboardsModelAllScoresDidUpload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlatformLeaderboardViewController.Refresh
void GlobalNamespace::PlatformLeaderboardViewController::Refresh(bool showLoadingIndicator, bool clear) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformLeaderboardViewController::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(showLoadingIndicator), ::il2cpp_utils::ExtractType(clear)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, showLoadingIndicator, clear);
}
// Autogenerated method: PlatformLeaderboardViewController.RefreshDelayed
System::Collections::IEnumerator* GlobalNamespace::PlatformLeaderboardViewController::RefreshDelayed(bool showLoadingIndicator, bool clear) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformLeaderboardViewController::RefreshDelayed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshDelayed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(showLoadingIndicator), ::il2cpp_utils::ExtractType(clear)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, showLoadingIndicator, clear);
}
// Autogenerated method: PlatformLeaderboardViewController.ClearContent
void GlobalNamespace::PlatformLeaderboardViewController::ClearContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformLeaderboardViewController::ClearContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlatformLeaderboardViewController.SetData
void GlobalNamespace::PlatformLeaderboardViewController::SetData(GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformLeaderboardViewController::SetData");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmap)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, difficultyBeatmap);
}
// Autogenerated method: PlatformLeaderboardViewController.RefreshLevelStats
void GlobalNamespace::PlatformLeaderboardViewController::RefreshLevelStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformLeaderboardViewController::RefreshLevelStats");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshLevelStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlatformLeaderboardViewController.DidActivate
void GlobalNamespace::PlatformLeaderboardViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformLeaderboardViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: PlatformLeaderboardViewController.DidDeactivate
void GlobalNamespace::PlatformLeaderboardViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformLeaderboardViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Autogenerated method: PlatformLeaderboardViewController.OnDestroy
void GlobalNamespace::PlatformLeaderboardViewController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformLeaderboardViewController::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlatformLeaderboardViewController..cctor
void GlobalNamespace::PlatformLeaderboardViewController::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformLeaderboardViewController::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "PlatformLeaderboardViewController", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Writing MetadataGetter for method: PlatformLeaderboardViewController::get_leaderboardsModel
// Il2CppName: get_leaderboardsModel
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::PlatformLeaderboardsModel* (PlatformLeaderboardViewController::*)()>(&PlatformLeaderboardViewController::get_leaderboardsModel)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformLeaderboardViewController*), "get_leaderboardsModel", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlatformLeaderboardViewController::ScoreScopeToScoreScopeIndex
// Il2CppName: ScoreScopeToScoreScopeIndex
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (PlatformLeaderboardViewController::*)(GlobalNamespace::PlatformLeaderboardsModel::ScoresScope)>(&PlatformLeaderboardViewController::ScoreScopeToScoreScopeIndex)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformLeaderboardViewController*), "ScoreScopeToScoreScopeIndex", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlatformLeaderboardsModel::ScoresScope>()});
  }
};
// Writing MetadataGetter for method: PlatformLeaderboardViewController::ScopeScopeIndexToScoreScope
// Il2CppName: ScopeScopeIndexToScoreScope
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::PlatformLeaderboardsModel::ScoresScope (PlatformLeaderboardViewController::*)(int)>(&PlatformLeaderboardViewController::ScopeScopeIndexToScoreScope)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformLeaderboardViewController*), "ScopeScopeIndexToScoreScope", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PlatformLeaderboardViewController::HandleDidPressRefreshButton
// Il2CppName: HandleDidPressRefreshButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlatformLeaderboardViewController::*)()>(&PlatformLeaderboardViewController::HandleDidPressRefreshButton)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformLeaderboardViewController*), "HandleDidPressRefreshButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlatformLeaderboardViewController::HandleLeaderboardsResultsReturned
// Il2CppName: HandleLeaderboardsResultsReturned
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlatformLeaderboardViewController::*)(GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult, ::Array<GlobalNamespace::PlatformLeaderboardsModel::LeaderboardScore*>*, int)>(&PlatformLeaderboardViewController::HandleLeaderboardsResultsReturned)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformLeaderboardViewController*), "HandleLeaderboardsResultsReturned", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlatformLeaderboardsModel::GetScoresResult>(), ::il2cpp_utils::ExtractIndependentType<::Array<GlobalNamespace::PlatformLeaderboardsModel::LeaderboardScore*>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PlatformLeaderboardViewController::HandleScopeSegmentedControlDidSelectCell
// Il2CppName: HandleScopeSegmentedControlDidSelectCell
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlatformLeaderboardViewController::*)(HMUI::SegmentedControl*, int)>(&PlatformLeaderboardViewController::HandleScopeSegmentedControlDidSelectCell)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformLeaderboardViewController*), "HandleScopeSegmentedControlDidSelectCell", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::SegmentedControl*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PlatformLeaderboardViewController::HandlePlatformLeaderboardsModelAllScoresDidUpload
// Il2CppName: HandlePlatformLeaderboardsModelAllScoresDidUpload
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlatformLeaderboardViewController::*)()>(&PlatformLeaderboardViewController::HandlePlatformLeaderboardsModelAllScoresDidUpload)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformLeaderboardViewController*), "HandlePlatformLeaderboardsModelAllScoresDidUpload", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlatformLeaderboardViewController::Refresh
// Il2CppName: Refresh
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlatformLeaderboardViewController::*)(bool, bool)>(&PlatformLeaderboardViewController::Refresh)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformLeaderboardViewController*), "Refresh", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: PlatformLeaderboardViewController::RefreshDelayed
// Il2CppName: RefreshDelayed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (PlatformLeaderboardViewController::*)(bool, bool)>(&PlatformLeaderboardViewController::RefreshDelayed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformLeaderboardViewController*), "RefreshDelayed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: PlatformLeaderboardViewController::ClearContent
// Il2CppName: ClearContent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlatformLeaderboardViewController::*)()>(&PlatformLeaderboardViewController::ClearContent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformLeaderboardViewController*), "ClearContent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlatformLeaderboardViewController::SetData
// Il2CppName: SetData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlatformLeaderboardViewController::*)(GlobalNamespace::IDifficultyBeatmap*)>(&PlatformLeaderboardViewController::SetData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformLeaderboardViewController*), "SetData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IDifficultyBeatmap*>()});
  }
};
// Writing MetadataGetter for method: PlatformLeaderboardViewController::RefreshLevelStats
// Il2CppName: RefreshLevelStats
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlatformLeaderboardViewController::*)()>(&PlatformLeaderboardViewController::RefreshLevelStats)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformLeaderboardViewController*), "RefreshLevelStats", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlatformLeaderboardViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlatformLeaderboardViewController::*)(bool, bool, bool)>(&PlatformLeaderboardViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformLeaderboardViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: PlatformLeaderboardViewController::DidDeactivate
// Il2CppName: DidDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlatformLeaderboardViewController::*)(bool, bool)>(&PlatformLeaderboardViewController::DidDeactivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformLeaderboardViewController*), "DidDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: PlatformLeaderboardViewController::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlatformLeaderboardViewController::*)()>(&PlatformLeaderboardViewController::OnDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformLeaderboardViewController*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlatformLeaderboardViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlatformLeaderboardViewController::*)()>(&PlatformLeaderboardViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformLeaderboardViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlatformLeaderboardViewController::*)()>(&PlatformLeaderboardViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformLeaderboardViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlatformLeaderboardViewController::_cctor
// Il2CppName: .cctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (*)()>(&PlatformLeaderboardViewController::_cctor)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformLeaderboardViewController*), ".cctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlatformLeaderboardViewController/<RefreshDelayed>d__31
#include "GlobalNamespace/PlatformLeaderboardViewController_-RefreshDelayed-d__31.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlatformLeaderboardViewController/<RefreshDelayed>d__31.System.IDisposable.Dispose
void GlobalNamespace::PlatformLeaderboardViewController::$RefreshDelayed$d__31::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformLeaderboardViewController::$RefreshDelayed$d__31::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlatformLeaderboardViewController/<RefreshDelayed>d__31.MoveNext
bool GlobalNamespace::PlatformLeaderboardViewController::$RefreshDelayed$d__31::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformLeaderboardViewController::$RefreshDelayed$d__31::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PlatformLeaderboardViewController/<RefreshDelayed>d__31.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::PlatformLeaderboardViewController::$RefreshDelayed$d__31::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformLeaderboardViewController::$RefreshDelayed$d__31::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: PlatformLeaderboardViewController/<RefreshDelayed>d__31.System.Collections.IEnumerator.Reset
void GlobalNamespace::PlatformLeaderboardViewController::$RefreshDelayed$d__31::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformLeaderboardViewController::$RefreshDelayed$d__31::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PlatformLeaderboardViewController/<RefreshDelayed>d__31.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::PlatformLeaderboardViewController::$RefreshDelayed$d__31::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlatformLeaderboardViewController::$RefreshDelayed$d__31::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: PlatformLeaderboardViewController::$RefreshDelayed$d__31::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlatformLeaderboardViewController::$RefreshDelayed$d__31::*)(int)>(&PlatformLeaderboardViewController::$RefreshDelayed$d__31::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformLeaderboardViewController::$RefreshDelayed$d__31*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlatformLeaderboardViewController::$RefreshDelayed$d__31::*)(int)>(&PlatformLeaderboardViewController::$RefreshDelayed$d__31::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformLeaderboardViewController::$RefreshDelayed$d__31*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PlatformLeaderboardViewController::$RefreshDelayed$d__31::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlatformLeaderboardViewController::$RefreshDelayed$d__31::*)()>(&PlatformLeaderboardViewController::$RefreshDelayed$d__31::System_IDisposable_Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformLeaderboardViewController::$RefreshDelayed$d__31*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlatformLeaderboardViewController::$RefreshDelayed$d__31::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (PlatformLeaderboardViewController::$RefreshDelayed$d__31::*)()>(&PlatformLeaderboardViewController::$RefreshDelayed$d__31::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformLeaderboardViewController::$RefreshDelayed$d__31*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlatformLeaderboardViewController::$RefreshDelayed$d__31::System_Collections_Generic_IEnumerator$System_Object$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Object>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (PlatformLeaderboardViewController::$RefreshDelayed$d__31::*)()>(&PlatformLeaderboardViewController::$RefreshDelayed$d__31::System_Collections_Generic_IEnumerator$System_Object$_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformLeaderboardViewController::$RefreshDelayed$d__31*), "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlatformLeaderboardViewController::$RefreshDelayed$d__31::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlatformLeaderboardViewController::$RefreshDelayed$d__31::*)()>(&PlatformLeaderboardViewController::$RefreshDelayed$d__31::System_Collections_IEnumerator_Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformLeaderboardViewController::$RefreshDelayed$d__31*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlatformLeaderboardViewController::$RefreshDelayed$d__31::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (PlatformLeaderboardViewController::$RefreshDelayed$d__31::*)()>(&PlatformLeaderboardViewController::$RefreshDelayed$d__31::System_Collections_IEnumerator_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlatformLeaderboardViewController::$RefreshDelayed$d__31*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayerStatisticsViewController
#include "GlobalNamespace/PlayerStatisticsViewController.hpp"
// Including type: HMUI.SegmentedControl
#include "HMUI/SegmentedControl.hpp"
// Including type: HMUI.TextSegmentedControl
#include "HMUI/TextSegmentedControl.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: AppStaticSettingsSO
#include "GlobalNamespace/AppStaticSettingsSO.hpp"
// Including type: PlayerAllOverallStatsData/PlayerOverallStatsData
#include "GlobalNamespace/PlayerAllOverallStatsData_PlayerOverallStatsData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayerStatisticsViewController.UpdateView
void GlobalNamespace::PlayerStatisticsViewController::UpdateView(GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* playerOverallStatsData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStatisticsViewController::UpdateView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerOverallStatsData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playerOverallStatsData);
}
// Autogenerated method: PlayerStatisticsViewController.HandleStatsScopeSegmentedControlDidSelectCell
void GlobalNamespace::PlayerStatisticsViewController::HandleStatsScopeSegmentedControlDidSelectCell(HMUI::SegmentedControl* segmentedControl, int cellIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStatisticsViewController::HandleStatsScopeSegmentedControlDidSelectCell");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleStatsScopeSegmentedControlDidSelectCell", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(segmentedControl), ::il2cpp_utils::ExtractType(cellIdx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, segmentedControl, cellIdx);
}
// Autogenerated method: PlayerStatisticsViewController.<DidActivate>b__16_1
GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* GlobalNamespace::PlayerStatisticsViewController::$DidActivate$b__16_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStatisticsViewController::<DidActivate>b__16_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__16_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerStatisticsViewController.<DidActivate>b__16_2
GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* GlobalNamespace::PlayerStatisticsViewController::$DidActivate$b__16_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStatisticsViewController::<DidActivate>b__16_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__16_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerStatisticsViewController.<DidActivate>b__16_3
GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* GlobalNamespace::PlayerStatisticsViewController::$DidActivate$b__16_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStatisticsViewController::<DidActivate>b__16_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__16_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerStatisticsViewController.<DidActivate>b__16_4
GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* GlobalNamespace::PlayerStatisticsViewController::$DidActivate$b__16_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStatisticsViewController::<DidActivate>b__16_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__16_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerStatisticsViewController.<DidActivate>b__16_0
GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* GlobalNamespace::PlayerStatisticsViewController::$DidActivate$b__16_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStatisticsViewController::<DidActivate>b__16_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__16_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*, false>(this, ___internal__method);
}
// Autogenerated method: PlayerStatisticsViewController.DidActivate
void GlobalNamespace::PlayerStatisticsViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStatisticsViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: PlayerStatisticsViewController.DidDeactivate
void GlobalNamespace::PlayerStatisticsViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStatisticsViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Writing MetadataGetter for method: PlayerStatisticsViewController::UpdateView
// Il2CppName: UpdateView
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerStatisticsViewController::*)(GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*)>(&PlayerStatisticsViewController::UpdateView)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerStatisticsViewController*), "UpdateView", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*>()});
  }
};
// Writing MetadataGetter for method: PlayerStatisticsViewController::HandleStatsScopeSegmentedControlDidSelectCell
// Il2CppName: HandleStatsScopeSegmentedControlDidSelectCell
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerStatisticsViewController::*)(HMUI::SegmentedControl*, int)>(&PlayerStatisticsViewController::HandleStatsScopeSegmentedControlDidSelectCell)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerStatisticsViewController*), "HandleStatsScopeSegmentedControlDidSelectCell", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::SegmentedControl*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: PlayerStatisticsViewController::$DidActivate$b__16_1
// Il2CppName: <DidActivate>b__16_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* (PlayerStatisticsViewController::*)()>(&PlayerStatisticsViewController::$DidActivate$b__16_1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerStatisticsViewController*), "<DidActivate>b__16_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerStatisticsViewController::$DidActivate$b__16_2
// Il2CppName: <DidActivate>b__16_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* (PlayerStatisticsViewController::*)()>(&PlayerStatisticsViewController::$DidActivate$b__16_2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerStatisticsViewController*), "<DidActivate>b__16_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerStatisticsViewController::$DidActivate$b__16_3
// Il2CppName: <DidActivate>b__16_3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* (PlayerStatisticsViewController::*)()>(&PlayerStatisticsViewController::$DidActivate$b__16_3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerStatisticsViewController*), "<DidActivate>b__16_3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerStatisticsViewController::$DidActivate$b__16_4
// Il2CppName: <DidActivate>b__16_4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* (PlayerStatisticsViewController::*)()>(&PlayerStatisticsViewController::$DidActivate$b__16_4)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerStatisticsViewController*), "<DidActivate>b__16_4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerStatisticsViewController::$DidActivate$b__16_0
// Il2CppName: <DidActivate>b__16_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData* (PlayerStatisticsViewController::*)()>(&PlayerStatisticsViewController::$DidActivate$b__16_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerStatisticsViewController*), "<DidActivate>b__16_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerStatisticsViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerStatisticsViewController::*)(bool, bool, bool)>(&PlayerStatisticsViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerStatisticsViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: PlayerStatisticsViewController::DidDeactivate
// Il2CppName: DidDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerStatisticsViewController::*)(bool, bool)>(&PlayerStatisticsViewController::DidDeactivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerStatisticsViewController*), "DidDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: PlayerStatisticsViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerStatisticsViewController::*)()>(&PlayerStatisticsViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerStatisticsViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerStatisticsViewController::*)()>(&PlayerStatisticsViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerStatisticsViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PlayerStatisticsViewController/StatsScopeData
#include "GlobalNamespace/PlayerStatisticsViewController.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: PlayerAllOverallStatsData/PlayerOverallStatsData
#include "GlobalNamespace/PlayerAllOverallStatsData_PlayerOverallStatsData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayerStatisticsViewController/StatsScopeData.get_text
::Il2CppString* GlobalNamespace::PlayerStatisticsViewController::StatsScopeData::get_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStatisticsViewController::StatsScopeData::get_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated method: PlayerStatisticsViewController/StatsScopeData.set_text
void GlobalNamespace::PlayerStatisticsViewController::StatsScopeData::set_text(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStatisticsViewController::StatsScopeData::set_text");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_text", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: PlayerStatisticsViewController/StatsScopeData.get_playerOverallStatsDataFunc
System::Func_1<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*>* GlobalNamespace::PlayerStatisticsViewController::StatsScopeData::get_playerOverallStatsDataFunc() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStatisticsViewController::StatsScopeData::get_playerOverallStatsDataFunc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_playerOverallStatsDataFunc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Func_1<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*>*, false>(*this, ___internal__method);
}
// Autogenerated method: PlayerStatisticsViewController/StatsScopeData.set_playerOverallStatsDataFunc
void GlobalNamespace::PlayerStatisticsViewController::StatsScopeData::set_playerOverallStatsDataFunc(System::Func_1<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayerStatisticsViewController::StatsScopeData::set_playerOverallStatsDataFunc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_playerOverallStatsDataFunc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Writing MetadataGetter for method: PlayerStatisticsViewController::StatsScopeData::get_text
// Il2CppName: get_text
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (PlayerStatisticsViewController::StatsScopeData::*)()>(&PlayerStatisticsViewController::StatsScopeData::get_text)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerStatisticsViewController::StatsScopeData), "get_text", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerStatisticsViewController::StatsScopeData::set_text
// Il2CppName: set_text
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerStatisticsViewController::StatsScopeData::*)(::Il2CppString*)>(&PlayerStatisticsViewController::StatsScopeData::set_text)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerStatisticsViewController::StatsScopeData), "set_text", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: PlayerStatisticsViewController::StatsScopeData::get_playerOverallStatsDataFunc
// Il2CppName: get_playerOverallStatsDataFunc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Func_1<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*>* (PlayerStatisticsViewController::StatsScopeData::*)()>(&PlayerStatisticsViewController::StatsScopeData::get_playerOverallStatsDataFunc)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerStatisticsViewController::StatsScopeData), "get_playerOverallStatsDataFunc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PlayerStatisticsViewController::StatsScopeData::set_playerOverallStatsDataFunc
// Il2CppName: set_playerOverallStatsDataFunc
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerStatisticsViewController::StatsScopeData::*)(System::Func_1<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*>*)>(&PlayerStatisticsViewController::StatsScopeData::set_playerOverallStatsDataFunc)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerStatisticsViewController::StatsScopeData), "set_playerOverallStatsDataFunc", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Func_1<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*>*>()});
  }
};
// Writing MetadataGetter for method: PlayerStatisticsViewController::StatsScopeData::StatsScopeData
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerStatisticsViewController::StatsScopeData::*)(::Il2CppString*, System::Func_1<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*>*)>(&PlayerStatisticsViewController::StatsScopeData::StatsScopeData<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerStatisticsViewController::StatsScopeData), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Func_1<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*>*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PlayerStatisticsViewController::StatsScopeData::*)(::Il2CppString*, System::Func_1<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*>*)>(&PlayerStatisticsViewController::StatsScopeData::StatsScopeData<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PlayerStatisticsViewController::StatsScopeData), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Func_1<GlobalNamespace::PlayerAllOverallStatsData::PlayerOverallStatsData*>*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PracticeViewController
#include "GlobalNamespace/PracticeViewController.hpp"
// Including type: HMUI.TimeSlider
#include "HMUI/TimeSlider.hpp"
// Including type: HMUI.PercentSlider
#include "HMUI/PercentSlider.hpp"
// Including type: LevelBar
#include "GlobalNamespace/LevelBar.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: SongPreviewPlayer
#include "GlobalNamespace/SongPreviewPlayer.hpp"
// Including type: DataModels.Levels.PerceivedLoudnessPerLevelModel
#include "DataModels/Levels/PerceivedLoudnessPerLevelModel.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: PracticeSettings
#include "GlobalNamespace/PracticeSettings.hpp"
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: HMUI.RangeValuesTextSlider
#include "HMUI/RangeValuesTextSlider.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kWaitBeforePlayPreviewAfterPreviewStartValueChanged
float GlobalNamespace::PracticeViewController::_get_kWaitBeforePlayPreviewAfterPreviewStartValueChanged() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PracticeViewController::_get_kWaitBeforePlayPreviewAfterPreviewStartValueChanged");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "PracticeViewController", "kWaitBeforePlayPreviewAfterPreviewStartValueChanged"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kWaitBeforePlayPreviewAfterPreviewStartValueChanged
void GlobalNamespace::PracticeViewController::_set_kWaitBeforePlayPreviewAfterPreviewStartValueChanged(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PracticeViewController::_set_kWaitBeforePlayPreviewAfterPreviewStartValueChanged");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PracticeViewController", "kWaitBeforePlayPreviewAfterPreviewStartValueChanged", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kMinValueChangeToInstantPlayPreview
float GlobalNamespace::PracticeViewController::_get_kMinValueChangeToInstantPlayPreview() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PracticeViewController::_get_kMinValueChangeToInstantPlayPreview");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "PracticeViewController", "kMinValueChangeToInstantPlayPreview"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kMinValueChangeToInstantPlayPreview
void GlobalNamespace::PracticeViewController::_set_kMinValueChangeToInstantPlayPreview(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PracticeViewController::_set_kMinValueChangeToInstantPlayPreview");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PracticeViewController", "kMinValueChangeToInstantPlayPreview", value));
}
// Autogenerated method: PracticeViewController.add_didPressPlayButtonEvent
void GlobalNamespace::PracticeViewController::add_didPressPlayButtonEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PracticeViewController::add_didPressPlayButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didPressPlayButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PracticeViewController.remove_didPressPlayButtonEvent
void GlobalNamespace::PracticeViewController::remove_didPressPlayButtonEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PracticeViewController::remove_didPressPlayButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didPressPlayButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PracticeViewController.get_practiceSettings
GlobalNamespace::PracticeSettings* GlobalNamespace::PracticeViewController::get_practiceSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PracticeViewController::get_practiceSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_practiceSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PracticeSettings*, false>(this, ___internal__method);
}
// Autogenerated method: PracticeViewController.Init
void GlobalNamespace::PracticeViewController::Init(GlobalNamespace::IBeatmapLevel* level, GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic, GlobalNamespace::BeatmapDifficulty beatmapDifficulty) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PracticeViewController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(beatmapCharacteristic), ::il2cpp_utils::ExtractType(beatmapDifficulty)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, level, beatmapCharacteristic, beatmapDifficulty);
}
// Autogenerated method: PracticeViewController.PlayPreview
void GlobalNamespace::PracticeViewController::PlayPreview() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PracticeViewController::PlayPreview");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayPreview", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PracticeViewController.RefreshUI
void GlobalNamespace::PracticeViewController::RefreshUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PracticeViewController::RefreshUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PracticeViewController.HandleSpeedSliderValueDidChange
void GlobalNamespace::PracticeViewController::HandleSpeedSliderValueDidChange(HMUI::RangeValuesTextSlider* slider, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PracticeViewController::HandleSpeedSliderValueDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSpeedSliderValueDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slider), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, slider, value);
}
// Autogenerated method: PracticeViewController.HandleSongStartSliderValueDidChange
void GlobalNamespace::PracticeViewController::HandleSongStartSliderValueDidChange(HMUI::RangeValuesTextSlider* slider, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PracticeViewController::HandleSongStartSliderValueDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSongStartSliderValueDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(slider), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, slider, value);
}
// Autogenerated method: PracticeViewController.PlayButtonPressed
void GlobalNamespace::PracticeViewController::PlayButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PracticeViewController::PlayButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PracticeViewController.DidActivate
void GlobalNamespace::PracticeViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PracticeViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: PracticeViewController.DidDeactivate
void GlobalNamespace::PracticeViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PracticeViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Writing MetadataGetter for method: PracticeViewController::add_didPressPlayButtonEvent
// Il2CppName: add_didPressPlayButtonEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PracticeViewController::*)(System::Action*)>(&PracticeViewController::add_didPressPlayButtonEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PracticeViewController*), "add_didPressPlayButtonEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: PracticeViewController::remove_didPressPlayButtonEvent
// Il2CppName: remove_didPressPlayButtonEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PracticeViewController::*)(System::Action*)>(&PracticeViewController::remove_didPressPlayButtonEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PracticeViewController*), "remove_didPressPlayButtonEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: PracticeViewController::get_practiceSettings
// Il2CppName: get_practiceSettings
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::PracticeSettings* (PracticeViewController::*)()>(&PracticeViewController::get_practiceSettings)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PracticeViewController*), "get_practiceSettings", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PracticeViewController::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PracticeViewController::*)(GlobalNamespace::IBeatmapLevel*, GlobalNamespace::BeatmapCharacteristicSO*, GlobalNamespace::BeatmapDifficulty)>(&PracticeViewController::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PracticeViewController*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IBeatmapLevel*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapCharacteristicSO*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapDifficulty>()});
  }
};
// Writing MetadataGetter for method: PracticeViewController::PlayPreview
// Il2CppName: PlayPreview
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PracticeViewController::*)()>(&PracticeViewController::PlayPreview)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PracticeViewController*), "PlayPreview", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PracticeViewController::RefreshUI
// Il2CppName: RefreshUI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PracticeViewController::*)()>(&PracticeViewController::RefreshUI)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PracticeViewController*), "RefreshUI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PracticeViewController::HandleSpeedSliderValueDidChange
// Il2CppName: HandleSpeedSliderValueDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PracticeViewController::*)(HMUI::RangeValuesTextSlider*, float)>(&PracticeViewController::HandleSpeedSliderValueDidChange)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PracticeViewController*), "HandleSpeedSliderValueDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::RangeValuesTextSlider*>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: PracticeViewController::HandleSongStartSliderValueDidChange
// Il2CppName: HandleSongStartSliderValueDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PracticeViewController::*)(HMUI::RangeValuesTextSlider*, float)>(&PracticeViewController::HandleSongStartSliderValueDidChange)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PracticeViewController*), "HandleSongStartSliderValueDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::RangeValuesTextSlider*>(), ::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: PracticeViewController::PlayButtonPressed
// Il2CppName: PlayButtonPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PracticeViewController::*)()>(&PracticeViewController::PlayButtonPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PracticeViewController*), "PlayButtonPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PracticeViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PracticeViewController::*)(bool, bool, bool)>(&PracticeViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PracticeViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: PracticeViewController::DidDeactivate
// Il2CppName: DidDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PracticeViewController::*)(bool, bool)>(&PracticeViewController::DidDeactivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PracticeViewController*), "DidDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: PracticeViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PracticeViewController::*)()>(&PracticeViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PracticeViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PracticeViewController::*)()>(&PracticeViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PracticeViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PrivacyPolicyViewController
#include "GlobalNamespace/PrivacyPolicyViewController.hpp"
// Including type: HMUI.TextPageScrollView
#include "HMUI/TextPageScrollView.hpp"
// Including type: LocalizedTextAsset
#include "GlobalNamespace/LocalizedTextAsset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PrivacyPolicyViewController.DidActivate
void GlobalNamespace::PrivacyPolicyViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PrivacyPolicyViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Writing MetadataGetter for method: PrivacyPolicyViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PrivacyPolicyViewController::*)(bool, bool, bool)>(&PrivacyPolicyViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PrivacyPolicyViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: PrivacyPolicyViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PrivacyPolicyViewController::*)()>(&PrivacyPolicyViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PrivacyPolicyViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PrivacyPolicyViewController::*)()>(&PrivacyPolicyViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PrivacyPolicyViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: PromoViewController
#include "GlobalNamespace/PromoViewController.hpp"
// Including type: PromoViewController/ButtonPromoTypePair
#include "GlobalNamespace/PromoViewController_ButtonPromoTypePair.hpp"
// Including type: PromoViewController/<>c__DisplayClass5_0
#include "GlobalNamespace/PromoViewController_--c__DisplayClass5_0.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: IAnnotatedBeatmapLevelCollection
#include "GlobalNamespace/IAnnotatedBeatmapLevelCollection.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PromoViewController.add_promoButtonWasPressedEvent
void GlobalNamespace::PromoViewController::add_promoButtonWasPressedEvent(System::Action_3<GlobalNamespace::PromoViewController*, GlobalNamespace::IAnnotatedBeatmapLevelCollection*, GlobalNamespace::IPreviewBeatmapLevel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PromoViewController::add_promoButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_promoButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PromoViewController.remove_promoButtonWasPressedEvent
void GlobalNamespace::PromoViewController::remove_promoButtonWasPressedEvent(System::Action_3<GlobalNamespace::PromoViewController*, GlobalNamespace::IAnnotatedBeatmapLevelCollection*, GlobalNamespace::IPreviewBeatmapLevel*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PromoViewController::remove_promoButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_promoButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PromoViewController.DidActivate
void GlobalNamespace::PromoViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PromoViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Writing MetadataGetter for method: PromoViewController::add_promoButtonWasPressedEvent
// Il2CppName: add_promoButtonWasPressedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PromoViewController::*)(System::Action_3<GlobalNamespace::PromoViewController*, GlobalNamespace::IAnnotatedBeatmapLevelCollection*, GlobalNamespace::IPreviewBeatmapLevel*>*)>(&PromoViewController::add_promoButtonWasPressedEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PromoViewController*), "add_promoButtonWasPressedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_3<GlobalNamespace::PromoViewController*, GlobalNamespace::IAnnotatedBeatmapLevelCollection*, GlobalNamespace::IPreviewBeatmapLevel*>*>()});
  }
};
// Writing MetadataGetter for method: PromoViewController::remove_promoButtonWasPressedEvent
// Il2CppName: remove_promoButtonWasPressedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PromoViewController::*)(System::Action_3<GlobalNamespace::PromoViewController*, GlobalNamespace::IAnnotatedBeatmapLevelCollection*, GlobalNamespace::IPreviewBeatmapLevel*>*)>(&PromoViewController::remove_promoButtonWasPressedEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PromoViewController*), "remove_promoButtonWasPressedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_3<GlobalNamespace::PromoViewController*, GlobalNamespace::IAnnotatedBeatmapLevelCollection*, GlobalNamespace::IPreviewBeatmapLevel*>*>()});
  }
};
// Writing MetadataGetter for method: PromoViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PromoViewController::*)(bool, bool, bool)>(&PromoViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PromoViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: PromoViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PromoViewController::*)()>(&PromoViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PromoViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PromoViewController::*)()>(&PromoViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PromoViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PromoViewController/ButtonPromoTypePair
#include "GlobalNamespace/PromoViewController_ButtonPromoTypePair.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: PreviewBeatmapLevelPackSO
#include "GlobalNamespace/PreviewBeatmapLevelPackSO.hpp"
// Including type: BeatmapLevelPackSO
#include "GlobalNamespace/BeatmapLevelPackSO.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: IAnnotatedBeatmapLevelCollection
#include "GlobalNamespace/IAnnotatedBeatmapLevelCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PromoViewController/ButtonPromoTypePair.get_annotatedBeatmapLevelCollection
GlobalNamespace::IAnnotatedBeatmapLevelCollection* GlobalNamespace::PromoViewController::ButtonPromoTypePair::get_annotatedBeatmapLevelCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PromoViewController::ButtonPromoTypePair::get_annotatedBeatmapLevelCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_annotatedBeatmapLevelCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IAnnotatedBeatmapLevelCollection*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: PromoViewController::ButtonPromoTypePair::get_annotatedBeatmapLevelCollection
// Il2CppName: get_annotatedBeatmapLevelCollection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<GlobalNamespace::IAnnotatedBeatmapLevelCollection* (PromoViewController::ButtonPromoTypePair::*)()>(&PromoViewController::ButtonPromoTypePair::get_annotatedBeatmapLevelCollection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PromoViewController::ButtonPromoTypePair*), "get_annotatedBeatmapLevelCollection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PromoViewController::ButtonPromoTypePair::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PromoViewController::ButtonPromoTypePair::*)()>(&PromoViewController::ButtonPromoTypePair::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PromoViewController::ButtonPromoTypePair*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PromoViewController::ButtonPromoTypePair::*)()>(&PromoViewController::ButtonPromoTypePair::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PromoViewController::ButtonPromoTypePair*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PromoViewController/<>c__DisplayClass5_0
#include "GlobalNamespace/PromoViewController_--c__DisplayClass5_0.hpp"
// Including type: PromoViewController/ButtonPromoTypePair
#include "GlobalNamespace/PromoViewController_ButtonPromoTypePair.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PromoViewController/<>c__DisplayClass5_0.<DidActivate>b__0
void GlobalNamespace::PromoViewController::$$c__DisplayClass5_0::$DidActivate$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PromoViewController::$$c__DisplayClass5_0::<DidActivate>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: PromoViewController::$$c__DisplayClass5_0::$DidActivate$b__0
// Il2CppName: <DidActivate>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PromoViewController::$$c__DisplayClass5_0::*)()>(&PromoViewController::$$c__DisplayClass5_0::$DidActivate$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PromoViewController::$$c__DisplayClass5_0*), "<DidActivate>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: PromoViewController::$$c__DisplayClass5_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PromoViewController::$$c__DisplayClass5_0::*)()>(&PromoViewController::$$c__DisplayClass5_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PromoViewController::$$c__DisplayClass5_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (PromoViewController::$$c__DisplayClass5_0::*)()>(&PromoViewController::$$c__DisplayClass5_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(PromoViewController::$$c__DisplayClass5_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ReleaseInfoViewController
#include "GlobalNamespace/ReleaseInfoViewController.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
// Including type: HMUI.TextPageScrollView
#include "HMUI/TextPageScrollView.hpp"
// Including type: UnityEngine.TextAsset
#include "UnityEngine/TextAsset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ReleaseInfoViewController.DidActivate
void GlobalNamespace::ReleaseInfoViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ReleaseInfoViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Writing MetadataGetter for method: ReleaseInfoViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ReleaseInfoViewController::*)(bool, bool, bool)>(&ReleaseInfoViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReleaseInfoViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ReleaseInfoViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ReleaseInfoViewController::*)()>(&ReleaseInfoViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReleaseInfoViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ReleaseInfoViewController::*)()>(&ReleaseInfoViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ReleaseInfoViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ResultsViewController
#include "GlobalNamespace/ResultsViewController.hpp"
// Including type: ResultsViewController/<StartFireworksAfterDelay>d__31
#include "GlobalNamespace/ResultsViewController_-StartFireworksAfterDelay-d__31.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: LevelBar
#include "GlobalNamespace/LevelBar.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: FireworksController
#include "GlobalNamespace/FireworksController.hpp"
// Including type: SongPreviewPlayer
#include "GlobalNamespace/SongPreviewPlayer.hpp"
// Including type: ResultsEnvironmentManager
#include "GlobalNamespace/ResultsEnvironmentManager.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: UnityEngine.Coroutine
#include "UnityEngine/Coroutine.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ResultsViewController.add_continueButtonPressedEvent
void GlobalNamespace::ResultsViewController::add_continueButtonPressedEvent(System::Action_1<GlobalNamespace::ResultsViewController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResultsViewController::add_continueButtonPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_continueButtonPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ResultsViewController.remove_continueButtonPressedEvent
void GlobalNamespace::ResultsViewController::remove_continueButtonPressedEvent(System::Action_1<GlobalNamespace::ResultsViewController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResultsViewController::remove_continueButtonPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_continueButtonPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ResultsViewController.add_restartButtonPressedEvent
void GlobalNamespace::ResultsViewController::add_restartButtonPressedEvent(System::Action_1<GlobalNamespace::ResultsViewController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResultsViewController::add_restartButtonPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_restartButtonPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ResultsViewController.remove_restartButtonPressedEvent
void GlobalNamespace::ResultsViewController::remove_restartButtonPressedEvent(System::Action_1<GlobalNamespace::ResultsViewController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResultsViewController::remove_restartButtonPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_restartButtonPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ResultsViewController.get_practice
bool GlobalNamespace::ResultsViewController::get_practice() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResultsViewController::get_practice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_practice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ResultsViewController.Init
void GlobalNamespace::ResultsViewController::Init(GlobalNamespace::LevelCompletionResults* levelCompletionResults, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, bool practice, bool newHighScore) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResultsViewController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(levelCompletionResults), ::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(practice), ::il2cpp_utils::ExtractType(newHighScore)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelCompletionResults, difficultyBeatmap, practice, newHighScore);
}
// Autogenerated method: ResultsViewController.StartFireworksAfterDelay
System::Collections::IEnumerator* GlobalNamespace::ResultsViewController::StartFireworksAfterDelay(float delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResultsViewController::StartFireworksAfterDelay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartFireworksAfterDelay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delay)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, delay);
}
// Autogenerated method: ResultsViewController.SetDataToUI
void GlobalNamespace::ResultsViewController::SetDataToUI() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResultsViewController::SetDataToUI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDataToUI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ResultsViewController.EnableResultsEnvironmentController
void GlobalNamespace::ResultsViewController::EnableResultsEnvironmentController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResultsViewController::EnableResultsEnvironmentController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnableResultsEnvironmentController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ResultsViewController.DisableResultEnvironmentController
void GlobalNamespace::ResultsViewController::DisableResultEnvironmentController() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResultsViewController::DisableResultEnvironmentController");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableResultEnvironmentController", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ResultsViewController.ContinueButtonPressed
void GlobalNamespace::ResultsViewController::ContinueButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResultsViewController::ContinueButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ContinueButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ResultsViewController.RestartButtonPressed
void GlobalNamespace::ResultsViewController::RestartButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResultsViewController::RestartButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RestartButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ResultsViewController.DidActivate
void GlobalNamespace::ResultsViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResultsViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: ResultsViewController.DidDeactivate
void GlobalNamespace::ResultsViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResultsViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Writing MetadataGetter for method: ResultsViewController::add_continueButtonPressedEvent
// Il2CppName: add_continueButtonPressedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResultsViewController::*)(System::Action_1<GlobalNamespace::ResultsViewController*>*)>(&ResultsViewController::add_continueButtonPressedEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResultsViewController*), "add_continueButtonPressedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::ResultsViewController*>*>()});
  }
};
// Writing MetadataGetter for method: ResultsViewController::remove_continueButtonPressedEvent
// Il2CppName: remove_continueButtonPressedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResultsViewController::*)(System::Action_1<GlobalNamespace::ResultsViewController*>*)>(&ResultsViewController::remove_continueButtonPressedEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResultsViewController*), "remove_continueButtonPressedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::ResultsViewController*>*>()});
  }
};
// Writing MetadataGetter for method: ResultsViewController::add_restartButtonPressedEvent
// Il2CppName: add_restartButtonPressedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResultsViewController::*)(System::Action_1<GlobalNamespace::ResultsViewController*>*)>(&ResultsViewController::add_restartButtonPressedEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResultsViewController*), "add_restartButtonPressedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::ResultsViewController*>*>()});
  }
};
// Writing MetadataGetter for method: ResultsViewController::remove_restartButtonPressedEvent
// Il2CppName: remove_restartButtonPressedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResultsViewController::*)(System::Action_1<GlobalNamespace::ResultsViewController*>*)>(&ResultsViewController::remove_restartButtonPressedEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResultsViewController*), "remove_restartButtonPressedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::ResultsViewController*>*>()});
  }
};
// Writing MetadataGetter for method: ResultsViewController::get_practice
// Il2CppName: get_practice
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ResultsViewController::*)()>(&ResultsViewController::get_practice)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResultsViewController*), "get_practice", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ResultsViewController::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResultsViewController::*)(GlobalNamespace::LevelCompletionResults*, GlobalNamespace::IDifficultyBeatmap*, bool, bool)>(&ResultsViewController::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResultsViewController*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::LevelCompletionResults*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IDifficultyBeatmap*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ResultsViewController::StartFireworksAfterDelay
// Il2CppName: StartFireworksAfterDelay
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<System::Collections::IEnumerator* (ResultsViewController::*)(float)>(&ResultsViewController::StartFireworksAfterDelay)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResultsViewController*), "StartFireworksAfterDelay", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: ResultsViewController::SetDataToUI
// Il2CppName: SetDataToUI
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResultsViewController::*)()>(&ResultsViewController::SetDataToUI)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResultsViewController*), "SetDataToUI", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ResultsViewController::EnableResultsEnvironmentController
// Il2CppName: EnableResultsEnvironmentController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResultsViewController::*)()>(&ResultsViewController::EnableResultsEnvironmentController)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResultsViewController*), "EnableResultsEnvironmentController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ResultsViewController::DisableResultEnvironmentController
// Il2CppName: DisableResultEnvironmentController
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResultsViewController::*)()>(&ResultsViewController::DisableResultEnvironmentController)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResultsViewController*), "DisableResultEnvironmentController", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ResultsViewController::ContinueButtonPressed
// Il2CppName: ContinueButtonPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResultsViewController::*)()>(&ResultsViewController::ContinueButtonPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResultsViewController*), "ContinueButtonPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ResultsViewController::RestartButtonPressed
// Il2CppName: RestartButtonPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResultsViewController::*)()>(&ResultsViewController::RestartButtonPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResultsViewController*), "RestartButtonPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ResultsViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResultsViewController::*)(bool, bool, bool)>(&ResultsViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResultsViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ResultsViewController::DidDeactivate
// Il2CppName: DidDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResultsViewController::*)(bool, bool)>(&ResultsViewController::DidDeactivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResultsViewController*), "DidDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: ResultsViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResultsViewController::*)()>(&ResultsViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResultsViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResultsViewController::*)()>(&ResultsViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResultsViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ResultsViewController/<StartFireworksAfterDelay>d__31
#include "GlobalNamespace/ResultsViewController_-StartFireworksAfterDelay-d__31.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ResultsViewController/<StartFireworksAfterDelay>d__31.System.IDisposable.Dispose
void GlobalNamespace::ResultsViewController::$StartFireworksAfterDelay$d__31::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResultsViewController::$StartFireworksAfterDelay$d__31::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ResultsViewController/<StartFireworksAfterDelay>d__31.MoveNext
bool GlobalNamespace::ResultsViewController::$StartFireworksAfterDelay$d__31::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResultsViewController::$StartFireworksAfterDelay$d__31::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ResultsViewController/<StartFireworksAfterDelay>d__31.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::ResultsViewController::$StartFireworksAfterDelay$d__31::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResultsViewController::$StartFireworksAfterDelay$d__31::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: ResultsViewController/<StartFireworksAfterDelay>d__31.System.Collections.IEnumerator.Reset
void GlobalNamespace::ResultsViewController::$StartFireworksAfterDelay$d__31::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResultsViewController::$StartFireworksAfterDelay$d__31::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ResultsViewController/<StartFireworksAfterDelay>d__31.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::ResultsViewController::$StartFireworksAfterDelay$d__31::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResultsViewController::$StartFireworksAfterDelay$d__31::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: ResultsViewController::$StartFireworksAfterDelay$d__31::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResultsViewController::$StartFireworksAfterDelay$d__31::*)(int)>(&ResultsViewController::$StartFireworksAfterDelay$d__31::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResultsViewController::$StartFireworksAfterDelay$d__31*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResultsViewController::$StartFireworksAfterDelay$d__31::*)(int)>(&ResultsViewController::$StartFireworksAfterDelay$d__31::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResultsViewController::$StartFireworksAfterDelay$d__31*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: ResultsViewController::$StartFireworksAfterDelay$d__31::System_IDisposable_Dispose
// Il2CppName: System.IDisposable.Dispose
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResultsViewController::$StartFireworksAfterDelay$d__31::*)()>(&ResultsViewController::$StartFireworksAfterDelay$d__31::System_IDisposable_Dispose)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResultsViewController::$StartFireworksAfterDelay$d__31*), "System.IDisposable.Dispose", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ResultsViewController::$StartFireworksAfterDelay$d__31::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (ResultsViewController::$StartFireworksAfterDelay$d__31::*)()>(&ResultsViewController::$StartFireworksAfterDelay$d__31::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResultsViewController::$StartFireworksAfterDelay$d__31*), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ResultsViewController::$StartFireworksAfterDelay$d__31::System_Collections_Generic_IEnumerator$System_Object$_get_Current
// Il2CppName: System.Collections.Generic.IEnumerator<System.Object>.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ResultsViewController::$StartFireworksAfterDelay$d__31::*)()>(&ResultsViewController::$StartFireworksAfterDelay$d__31::System_Collections_Generic_IEnumerator$System_Object$_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResultsViewController::$StartFireworksAfterDelay$d__31*), "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ResultsViewController::$StartFireworksAfterDelay$d__31::System_Collections_IEnumerator_Reset
// Il2CppName: System.Collections.IEnumerator.Reset
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (ResultsViewController::$StartFireworksAfterDelay$d__31::*)()>(&ResultsViewController::$StartFireworksAfterDelay$d__31::System_Collections_IEnumerator_Reset)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResultsViewController::$StartFireworksAfterDelay$d__31*), "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: ResultsViewController::$StartFireworksAfterDelay$d__31::System_Collections_IEnumerator_get_Current
// Il2CppName: System.Collections.IEnumerator.get_Current
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppObject* (ResultsViewController::$StartFireworksAfterDelay$d__31::*)()>(&ResultsViewController::$StartFireworksAfterDelay$d__31::System_Collections_IEnumerator_get_Current)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(ResultsViewController::$StartFireworksAfterDelay$d__31*), "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RoomAdjustSettingsViewController
#include "GlobalNamespace/RoomAdjustSettingsViewController.hpp"
// Including type: Vector3SO
#include "GlobalNamespace/Vector3SO.hpp"
// Including type: FloatSO
#include "GlobalNamespace/FloatSO.hpp"
// Including type: StepValuePicker
#include "GlobalNamespace/StepValuePicker.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kHorizontalMoveStep
float GlobalNamespace::RoomAdjustSettingsViewController::_get_kHorizontalMoveStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RoomAdjustSettingsViewController::_get_kHorizontalMoveStep");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "RoomAdjustSettingsViewController", "kHorizontalMoveStep"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kHorizontalMoveStep
void GlobalNamespace::RoomAdjustSettingsViewController::_set_kHorizontalMoveStep(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RoomAdjustSettingsViewController::_set_kHorizontalMoveStep");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomAdjustSettingsViewController", "kHorizontalMoveStep", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kVerticalMoveStep
float GlobalNamespace::RoomAdjustSettingsViewController::_get_kVerticalMoveStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RoomAdjustSettingsViewController::_get_kVerticalMoveStep");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "RoomAdjustSettingsViewController", "kVerticalMoveStep"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kVerticalMoveStep
void GlobalNamespace::RoomAdjustSettingsViewController::_set_kVerticalMoveStep(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RoomAdjustSettingsViewController::_set_kVerticalMoveStep");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomAdjustSettingsViewController", "kVerticalMoveStep", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kRotationStep
float GlobalNamespace::RoomAdjustSettingsViewController::_get_kRotationStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RoomAdjustSettingsViewController::_get_kRotationStep");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "RoomAdjustSettingsViewController", "kRotationStep"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kRotationStep
void GlobalNamespace::RoomAdjustSettingsViewController::_set_kRotationStep(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RoomAdjustSettingsViewController::_set_kRotationStep");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RoomAdjustSettingsViewController", "kRotationStep", value));
}
// Autogenerated method: RoomAdjustSettingsViewController.Move
void GlobalNamespace::RoomAdjustSettingsViewController::Move(UnityEngine::Vector3 move) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RoomAdjustSettingsViewController::Move");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Move", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(move)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, move);
}
// Autogenerated method: RoomAdjustSettingsViewController.Rotate
void GlobalNamespace::RoomAdjustSettingsViewController::Rotate(float rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RoomAdjustSettingsViewController::Rotate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Rotate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, rotation);
}
// Autogenerated method: RoomAdjustSettingsViewController.ResetRoom
void GlobalNamespace::RoomAdjustSettingsViewController::ResetRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RoomAdjustSettingsViewController::ResetRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RoomAdjustSettingsViewController.RefreshTexts
void GlobalNamespace::RoomAdjustSettingsViewController::RefreshTexts() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RoomAdjustSettingsViewController::RefreshTexts");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshTexts", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RoomAdjustSettingsViewController.<DidActivate>b__10_0
void GlobalNamespace::RoomAdjustSettingsViewController::$DidActivate$b__10_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RoomAdjustSettingsViewController::<DidActivate>b__10_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__10_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RoomAdjustSettingsViewController.<DidActivate>b__10_1
void GlobalNamespace::RoomAdjustSettingsViewController::$DidActivate$b__10_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RoomAdjustSettingsViewController::<DidActivate>b__10_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__10_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RoomAdjustSettingsViewController.<DidActivate>b__10_2
void GlobalNamespace::RoomAdjustSettingsViewController::$DidActivate$b__10_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RoomAdjustSettingsViewController::<DidActivate>b__10_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__10_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RoomAdjustSettingsViewController.<DidActivate>b__10_3
void GlobalNamespace::RoomAdjustSettingsViewController::$DidActivate$b__10_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RoomAdjustSettingsViewController::<DidActivate>b__10_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__10_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RoomAdjustSettingsViewController.<DidActivate>b__10_4
void GlobalNamespace::RoomAdjustSettingsViewController::$DidActivate$b__10_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RoomAdjustSettingsViewController::<DidActivate>b__10_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__10_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RoomAdjustSettingsViewController.<DidActivate>b__10_5
void GlobalNamespace::RoomAdjustSettingsViewController::$DidActivate$b__10_5() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RoomAdjustSettingsViewController::<DidActivate>b__10_5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__10_5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RoomAdjustSettingsViewController.<DidActivate>b__10_6
void GlobalNamespace::RoomAdjustSettingsViewController::$DidActivate$b__10_6() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RoomAdjustSettingsViewController::<DidActivate>b__10_6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__10_6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RoomAdjustSettingsViewController.<DidActivate>b__10_7
void GlobalNamespace::RoomAdjustSettingsViewController::$DidActivate$b__10_7() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RoomAdjustSettingsViewController::<DidActivate>b__10_7");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__10_7", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RoomAdjustSettingsViewController.<DidActivate>b__10_8
void GlobalNamespace::RoomAdjustSettingsViewController::$DidActivate$b__10_8() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RoomAdjustSettingsViewController::<DidActivate>b__10_8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__10_8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RoomAdjustSettingsViewController.DidActivate
void GlobalNamespace::RoomAdjustSettingsViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::RoomAdjustSettingsViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Writing MetadataGetter for method: RoomAdjustSettingsViewController::Move
// Il2CppName: Move
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RoomAdjustSettingsViewController::*)(UnityEngine::Vector3)>(&RoomAdjustSettingsViewController::Move)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RoomAdjustSettingsViewController*), "Move", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<UnityEngine::Vector3>()});
  }
};
// Writing MetadataGetter for method: RoomAdjustSettingsViewController::Rotate
// Il2CppName: Rotate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RoomAdjustSettingsViewController::*)(float)>(&RoomAdjustSettingsViewController::Rotate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RoomAdjustSettingsViewController*), "Rotate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: RoomAdjustSettingsViewController::ResetRoom
// Il2CppName: ResetRoom
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RoomAdjustSettingsViewController::*)()>(&RoomAdjustSettingsViewController::ResetRoom)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RoomAdjustSettingsViewController*), "ResetRoom", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RoomAdjustSettingsViewController::RefreshTexts
// Il2CppName: RefreshTexts
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RoomAdjustSettingsViewController::*)()>(&RoomAdjustSettingsViewController::RefreshTexts)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RoomAdjustSettingsViewController*), "RefreshTexts", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RoomAdjustSettingsViewController::$DidActivate$b__10_0
// Il2CppName: <DidActivate>b__10_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RoomAdjustSettingsViewController::*)()>(&RoomAdjustSettingsViewController::$DidActivate$b__10_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RoomAdjustSettingsViewController*), "<DidActivate>b__10_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RoomAdjustSettingsViewController::$DidActivate$b__10_1
// Il2CppName: <DidActivate>b__10_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RoomAdjustSettingsViewController::*)()>(&RoomAdjustSettingsViewController::$DidActivate$b__10_1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RoomAdjustSettingsViewController*), "<DidActivate>b__10_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RoomAdjustSettingsViewController::$DidActivate$b__10_2
// Il2CppName: <DidActivate>b__10_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RoomAdjustSettingsViewController::*)()>(&RoomAdjustSettingsViewController::$DidActivate$b__10_2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RoomAdjustSettingsViewController*), "<DidActivate>b__10_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RoomAdjustSettingsViewController::$DidActivate$b__10_3
// Il2CppName: <DidActivate>b__10_3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RoomAdjustSettingsViewController::*)()>(&RoomAdjustSettingsViewController::$DidActivate$b__10_3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RoomAdjustSettingsViewController*), "<DidActivate>b__10_3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RoomAdjustSettingsViewController::$DidActivate$b__10_4
// Il2CppName: <DidActivate>b__10_4
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RoomAdjustSettingsViewController::*)()>(&RoomAdjustSettingsViewController::$DidActivate$b__10_4)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RoomAdjustSettingsViewController*), "<DidActivate>b__10_4", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RoomAdjustSettingsViewController::$DidActivate$b__10_5
// Il2CppName: <DidActivate>b__10_5
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RoomAdjustSettingsViewController::*)()>(&RoomAdjustSettingsViewController::$DidActivate$b__10_5)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RoomAdjustSettingsViewController*), "<DidActivate>b__10_5", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RoomAdjustSettingsViewController::$DidActivate$b__10_6
// Il2CppName: <DidActivate>b__10_6
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RoomAdjustSettingsViewController::*)()>(&RoomAdjustSettingsViewController::$DidActivate$b__10_6)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RoomAdjustSettingsViewController*), "<DidActivate>b__10_6", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RoomAdjustSettingsViewController::$DidActivate$b__10_7
// Il2CppName: <DidActivate>b__10_7
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RoomAdjustSettingsViewController::*)()>(&RoomAdjustSettingsViewController::$DidActivate$b__10_7)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RoomAdjustSettingsViewController*), "<DidActivate>b__10_7", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RoomAdjustSettingsViewController::$DidActivate$b__10_8
// Il2CppName: <DidActivate>b__10_8
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RoomAdjustSettingsViewController::*)()>(&RoomAdjustSettingsViewController::$DidActivate$b__10_8)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RoomAdjustSettingsViewController*), "<DidActivate>b__10_8", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: RoomAdjustSettingsViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RoomAdjustSettingsViewController::*)(bool, bool, bool)>(&RoomAdjustSettingsViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RoomAdjustSettingsViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: RoomAdjustSettingsViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RoomAdjustSettingsViewController::*)()>(&RoomAdjustSettingsViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RoomAdjustSettingsViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (RoomAdjustSettingsViewController::*)()>(&RoomAdjustSettingsViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(RoomAdjustSettingsViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SelectLanguageViewController
#include "GlobalNamespace/SelectLanguageViewController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: LanguageSettingsController
#include "GlobalNamespace/LanguageSettingsController.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SelectLanguageViewController.add_didChangeLanguageEvent
void GlobalNamespace::SelectLanguageViewController::add_didChangeLanguageEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectLanguageViewController::add_didChangeLanguageEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didChangeLanguageEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SelectLanguageViewController.remove_didChangeLanguageEvent
void GlobalNamespace::SelectLanguageViewController::remove_didChangeLanguageEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectLanguageViewController::remove_didChangeLanguageEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didChangeLanguageEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SelectLanguageViewController.add_didPressContinueButtonEvent
void GlobalNamespace::SelectLanguageViewController::add_didPressContinueButtonEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectLanguageViewController::add_didPressContinueButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didPressContinueButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SelectLanguageViewController.remove_didPressContinueButtonEvent
void GlobalNamespace::SelectLanguageViewController::remove_didPressContinueButtonEvent(System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectLanguageViewController::remove_didPressContinueButtonEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didPressContinueButtonEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SelectLanguageViewController.HandleLanguageSettingsControllerOndropDownValueDidChange
void GlobalNamespace::SelectLanguageViewController::HandleLanguageSettingsControllerOndropDownValueDidChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectLanguageViewController::HandleLanguageSettingsControllerOndropDownValueDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLanguageSettingsControllerOndropDownValueDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SelectLanguageViewController.<DidActivate>b__8_0
void GlobalNamespace::SelectLanguageViewController::$DidActivate$b__8_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectLanguageViewController::<DidActivate>b__8_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__8_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SelectLanguageViewController.DidActivate
void GlobalNamespace::SelectLanguageViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectLanguageViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: SelectLanguageViewController.OnDestroy
void GlobalNamespace::SelectLanguageViewController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SelectLanguageViewController::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: SelectLanguageViewController::add_didChangeLanguageEvent
// Il2CppName: add_didChangeLanguageEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SelectLanguageViewController::*)(System::Action*)>(&SelectLanguageViewController::add_didChangeLanguageEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SelectLanguageViewController*), "add_didChangeLanguageEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: SelectLanguageViewController::remove_didChangeLanguageEvent
// Il2CppName: remove_didChangeLanguageEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SelectLanguageViewController::*)(System::Action*)>(&SelectLanguageViewController::remove_didChangeLanguageEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SelectLanguageViewController*), "remove_didChangeLanguageEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: SelectLanguageViewController::add_didPressContinueButtonEvent
// Il2CppName: add_didPressContinueButtonEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SelectLanguageViewController::*)(System::Action*)>(&SelectLanguageViewController::add_didPressContinueButtonEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SelectLanguageViewController*), "add_didPressContinueButtonEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: SelectLanguageViewController::remove_didPressContinueButtonEvent
// Il2CppName: remove_didPressContinueButtonEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SelectLanguageViewController::*)(System::Action*)>(&SelectLanguageViewController::remove_didPressContinueButtonEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SelectLanguageViewController*), "remove_didPressContinueButtonEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: SelectLanguageViewController::HandleLanguageSettingsControllerOndropDownValueDidChange
// Il2CppName: HandleLanguageSettingsControllerOndropDownValueDidChange
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SelectLanguageViewController::*)()>(&SelectLanguageViewController::HandleLanguageSettingsControllerOndropDownValueDidChange)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SelectLanguageViewController*), "HandleLanguageSettingsControllerOndropDownValueDidChange", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SelectLanguageViewController::$DidActivate$b__8_0
// Il2CppName: <DidActivate>b__8_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SelectLanguageViewController::*)()>(&SelectLanguageViewController::$DidActivate$b__8_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SelectLanguageViewController*), "<DidActivate>b__8_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SelectLanguageViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SelectLanguageViewController::*)(bool, bool, bool)>(&SelectLanguageViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SelectLanguageViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: SelectLanguageViewController::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SelectLanguageViewController::*)()>(&SelectLanguageViewController::OnDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SelectLanguageViewController*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SelectLanguageViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SelectLanguageViewController::*)()>(&SelectLanguageViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SelectLanguageViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SelectLanguageViewController::*)()>(&SelectLanguageViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SelectLanguageViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SettingsNavigationController
#include "GlobalNamespace/SettingsNavigationController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SettingsNavigationController.add_didFinishEvent
void GlobalNamespace::SettingsNavigationController::add_didFinishEvent(System::Action_1<GlobalNamespace::SettingsNavigationController::FinishAction>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SettingsNavigationController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SettingsNavigationController.remove_didFinishEvent
void GlobalNamespace::SettingsNavigationController::remove_didFinishEvent(System::Action_1<GlobalNamespace::SettingsNavigationController::FinishAction>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SettingsNavigationController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SettingsNavigationController.HandleFinishButton
void GlobalNamespace::SettingsNavigationController::HandleFinishButton(GlobalNamespace::SettingsNavigationController::FinishAction finishAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SettingsNavigationController::HandleFinishButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleFinishButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finishAction)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, finishAction);
}
// Autogenerated method: SettingsNavigationController.<DidActivate>b__7_0
void GlobalNamespace::SettingsNavigationController::$DidActivate$b__7_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SettingsNavigationController::<DidActivate>b__7_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__7_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SettingsNavigationController.<DidActivate>b__7_1
void GlobalNamespace::SettingsNavigationController::$DidActivate$b__7_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SettingsNavigationController::<DidActivate>b__7_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__7_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SettingsNavigationController.<DidActivate>b__7_2
void GlobalNamespace::SettingsNavigationController::$DidActivate$b__7_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SettingsNavigationController::<DidActivate>b__7_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__7_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SettingsNavigationController.DidActivate
void GlobalNamespace::SettingsNavigationController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SettingsNavigationController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Writing MetadataGetter for method: SettingsNavigationController::add_didFinishEvent
// Il2CppName: add_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SettingsNavigationController::*)(System::Action_1<GlobalNamespace::SettingsNavigationController::FinishAction>*)>(&SettingsNavigationController::add_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SettingsNavigationController*), "add_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::SettingsNavigationController::FinishAction>*>()});
  }
};
// Writing MetadataGetter for method: SettingsNavigationController::remove_didFinishEvent
// Il2CppName: remove_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SettingsNavigationController::*)(System::Action_1<GlobalNamespace::SettingsNavigationController::FinishAction>*)>(&SettingsNavigationController::remove_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SettingsNavigationController*), "remove_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::SettingsNavigationController::FinishAction>*>()});
  }
};
// Writing MetadataGetter for method: SettingsNavigationController::HandleFinishButton
// Il2CppName: HandleFinishButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SettingsNavigationController::*)(GlobalNamespace::SettingsNavigationController::FinishAction)>(&SettingsNavigationController::HandleFinishButton)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SettingsNavigationController*), "HandleFinishButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::SettingsNavigationController::FinishAction>()});
  }
};
// Writing MetadataGetter for method: SettingsNavigationController::$DidActivate$b__7_0
// Il2CppName: <DidActivate>b__7_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SettingsNavigationController::*)()>(&SettingsNavigationController::$DidActivate$b__7_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SettingsNavigationController*), "<DidActivate>b__7_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SettingsNavigationController::$DidActivate$b__7_1
// Il2CppName: <DidActivate>b__7_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SettingsNavigationController::*)()>(&SettingsNavigationController::$DidActivate$b__7_1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SettingsNavigationController*), "<DidActivate>b__7_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SettingsNavigationController::$DidActivate$b__7_2
// Il2CppName: <DidActivate>b__7_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SettingsNavigationController::*)()>(&SettingsNavigationController::$DidActivate$b__7_2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SettingsNavigationController*), "<DidActivate>b__7_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SettingsNavigationController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SettingsNavigationController::*)(bool, bool, bool)>(&SettingsNavigationController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SettingsNavigationController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: SettingsNavigationController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SettingsNavigationController::*)()>(&SettingsNavigationController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SettingsNavigationController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SettingsNavigationController::*)()>(&SettingsNavigationController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SettingsNavigationController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SettingsNavigationController/FinishAction
#include "GlobalNamespace/SettingsNavigationController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SettingsNavigationController/FinishAction Ok
GlobalNamespace::SettingsNavigationController::FinishAction GlobalNamespace::SettingsNavigationController::FinishAction::_get_Ok() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SettingsNavigationController::FinishAction::_get_Ok");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SettingsNavigationController::FinishAction>("", "SettingsNavigationController/FinishAction", "Ok"));
}
// Autogenerated static field setter
// Set static field: static public SettingsNavigationController/FinishAction Ok
void GlobalNamespace::SettingsNavigationController::FinishAction::_set_Ok(GlobalNamespace::SettingsNavigationController::FinishAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SettingsNavigationController::FinishAction::_set_Ok");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SettingsNavigationController/FinishAction", "Ok", value));
}
// Autogenerated static field getter
// Get static field: static public SettingsNavigationController/FinishAction Cancel
GlobalNamespace::SettingsNavigationController::FinishAction GlobalNamespace::SettingsNavigationController::FinishAction::_get_Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SettingsNavigationController::FinishAction::_get_Cancel");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SettingsNavigationController::FinishAction>("", "SettingsNavigationController/FinishAction", "Cancel"));
}
// Autogenerated static field setter
// Set static field: static public SettingsNavigationController/FinishAction Cancel
void GlobalNamespace::SettingsNavigationController::FinishAction::_set_Cancel(GlobalNamespace::SettingsNavigationController::FinishAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SettingsNavigationController::FinishAction::_set_Cancel");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SettingsNavigationController/FinishAction", "Cancel", value));
}
// Autogenerated static field getter
// Get static field: static public SettingsNavigationController/FinishAction Apply
GlobalNamespace::SettingsNavigationController::FinishAction GlobalNamespace::SettingsNavigationController::FinishAction::_get_Apply() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SettingsNavigationController::FinishAction::_get_Apply");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SettingsNavigationController::FinishAction>("", "SettingsNavigationController/FinishAction", "Apply"));
}
// Autogenerated static field setter
// Set static field: static public SettingsNavigationController/FinishAction Apply
void GlobalNamespace::SettingsNavigationController::FinishAction::_set_Apply(GlobalNamespace::SettingsNavigationController::FinishAction value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SettingsNavigationController::FinishAction::_set_Apply");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SettingsNavigationController/FinishAction", "Apply", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SimpleDialogPromptViewController
#include "GlobalNamespace/SimpleDialogPromptViewController.hpp"
// Including type: SimpleDialogPromptViewController/<>c__DisplayClass5_0
#include "GlobalNamespace/SimpleDialogPromptViewController_--c__DisplayClass5_0.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SimpleDialogPromptViewController.Init
void GlobalNamespace::SimpleDialogPromptViewController::Init(::Il2CppString* title, ::Il2CppString* message, ::Il2CppString* buttonText, System::Action_1<int>* didFinishAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleDialogPromptViewController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(title), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(buttonText), ::il2cpp_utils::ExtractType(didFinishAction)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, title, message, buttonText, didFinishAction);
}
// Autogenerated method: SimpleDialogPromptViewController.Init
void GlobalNamespace::SimpleDialogPromptViewController::Init(::Il2CppString* title, ::Il2CppString* message, ::Il2CppString* firstButtonText, ::Il2CppString* secondButtonText, System::Action_1<int>* didFinishAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleDialogPromptViewController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(title), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(firstButtonText), ::il2cpp_utils::ExtractType(secondButtonText), ::il2cpp_utils::ExtractType(didFinishAction)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, title, message, firstButtonText, secondButtonText, didFinishAction);
}
// Autogenerated method: SimpleDialogPromptViewController.Init
void GlobalNamespace::SimpleDialogPromptViewController::Init(::Il2CppString* title, ::Il2CppString* message, ::Il2CppString* firstButtonText, ::Il2CppString* secondButtonText, ::Il2CppString* thirdButtonText, System::Action_1<int>* didFinishAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleDialogPromptViewController::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(title), ::il2cpp_utils::ExtractType(message), ::il2cpp_utils::ExtractType(firstButtonText), ::il2cpp_utils::ExtractType(secondButtonText), ::il2cpp_utils::ExtractType(thirdButtonText), ::il2cpp_utils::ExtractType(didFinishAction)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, title, message, firstButtonText, secondButtonText, thirdButtonText, didFinishAction);
}
// Autogenerated method: SimpleDialogPromptViewController.DidActivate
void GlobalNamespace::SimpleDialogPromptViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleDialogPromptViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: SimpleDialogPromptViewController.DidDeactivate
void GlobalNamespace::SimpleDialogPromptViewController::DidDeactivate(bool removedFromHierarchy, bool screenSystemDisabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleDialogPromptViewController::DidDeactivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidDeactivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(removedFromHierarchy), ::il2cpp_utils::ExtractType(screenSystemDisabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, removedFromHierarchy, screenSystemDisabling);
}
// Writing MetadataGetter for method: SimpleDialogPromptViewController::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SimpleDialogPromptViewController::*)(::Il2CppString*, ::Il2CppString*, ::Il2CppString*, System::Action_1<int>*)>(&SimpleDialogPromptViewController::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SimpleDialogPromptViewController*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Action_1<int>*>()});
  }
};
// Writing MetadataGetter for method: SimpleDialogPromptViewController::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SimpleDialogPromptViewController::*)(::Il2CppString*, ::Il2CppString*, ::Il2CppString*, ::Il2CppString*, System::Action_1<int>*)>(&SimpleDialogPromptViewController::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SimpleDialogPromptViewController*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Action_1<int>*>()});
  }
};
// Writing MetadataGetter for method: SimpleDialogPromptViewController::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SimpleDialogPromptViewController::*)(::Il2CppString*, ::Il2CppString*, ::Il2CppString*, ::Il2CppString*, ::Il2CppString*, System::Action_1<int>*)>(&SimpleDialogPromptViewController::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SimpleDialogPromptViewController*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Action_1<int>*>()});
  }
};
// Writing MetadataGetter for method: SimpleDialogPromptViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SimpleDialogPromptViewController::*)(bool, bool, bool)>(&SimpleDialogPromptViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SimpleDialogPromptViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: SimpleDialogPromptViewController::DidDeactivate
// Il2CppName: DidDeactivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SimpleDialogPromptViewController::*)(bool, bool)>(&SimpleDialogPromptViewController::DidDeactivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SimpleDialogPromptViewController*), "DidDeactivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: SimpleDialogPromptViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SimpleDialogPromptViewController::*)()>(&SimpleDialogPromptViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SimpleDialogPromptViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SimpleDialogPromptViewController::*)()>(&SimpleDialogPromptViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SimpleDialogPromptViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SimpleDialogPromptViewController/<>c__DisplayClass5_0
#include "GlobalNamespace/SimpleDialogPromptViewController_--c__DisplayClass5_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SimpleDialogPromptViewController/<>c__DisplayClass5_0.<DidActivate>b__0
void GlobalNamespace::SimpleDialogPromptViewController::$$c__DisplayClass5_0::$DidActivate$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleDialogPromptViewController::$$c__DisplayClass5_0::<DidActivate>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: SimpleDialogPromptViewController::$$c__DisplayClass5_0::$DidActivate$b__0
// Il2CppName: <DidActivate>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SimpleDialogPromptViewController::$$c__DisplayClass5_0::*)()>(&SimpleDialogPromptViewController::$$c__DisplayClass5_0::$DidActivate$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SimpleDialogPromptViewController::$$c__DisplayClass5_0*), "<DidActivate>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SimpleDialogPromptViewController::$$c__DisplayClass5_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SimpleDialogPromptViewController::$$c__DisplayClass5_0::*)()>(&SimpleDialogPromptViewController::$$c__DisplayClass5_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SimpleDialogPromptViewController::$$c__DisplayClass5_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SimpleDialogPromptViewController::$$c__DisplayClass5_0::*)()>(&SimpleDialogPromptViewController::$$c__DisplayClass5_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SimpleDialogPromptViewController::$$c__DisplayClass5_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SimpleRetailDemoViewController
#include "GlobalNamespace/SimpleRetailDemoViewController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SimpleRetailDemoViewController.add_didFinishEvent
void GlobalNamespace::SimpleRetailDemoViewController::add_didFinishEvent(System::Action_2<GlobalNamespace::SimpleRetailDemoViewController*, GlobalNamespace::SimpleRetailDemoViewController::MenuButton>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleRetailDemoViewController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SimpleRetailDemoViewController.remove_didFinishEvent
void GlobalNamespace::SimpleRetailDemoViewController::remove_didFinishEvent(System::Action_2<GlobalNamespace::SimpleRetailDemoViewController*, GlobalNamespace::SimpleRetailDemoViewController::MenuButton>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleRetailDemoViewController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SimpleRetailDemoViewController.HandleMenuButton
void GlobalNamespace::SimpleRetailDemoViewController::HandleMenuButton(GlobalNamespace::SimpleRetailDemoViewController::MenuButton menuButton) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleRetailDemoViewController::HandleMenuButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(menuButton)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, menuButton);
}
// Autogenerated method: SimpleRetailDemoViewController.<DidActivate>b__8_0
void GlobalNamespace::SimpleRetailDemoViewController::$DidActivate$b__8_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleRetailDemoViewController::<DidActivate>b__8_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__8_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleRetailDemoViewController.<DidActivate>b__8_1
void GlobalNamespace::SimpleRetailDemoViewController::$DidActivate$b__8_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleRetailDemoViewController::<DidActivate>b__8_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__8_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleRetailDemoViewController.<DidActivate>b__8_2
void GlobalNamespace::SimpleRetailDemoViewController::$DidActivate$b__8_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleRetailDemoViewController::<DidActivate>b__8_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__8_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleRetailDemoViewController.<DidActivate>b__8_3
void GlobalNamespace::SimpleRetailDemoViewController::$DidActivate$b__8_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleRetailDemoViewController::<DidActivate>b__8_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__8_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleRetailDemoViewController.DidActivate
void GlobalNamespace::SimpleRetailDemoViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleRetailDemoViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Writing MetadataGetter for method: SimpleRetailDemoViewController::add_didFinishEvent
// Il2CppName: add_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SimpleRetailDemoViewController::*)(System::Action_2<GlobalNamespace::SimpleRetailDemoViewController*, GlobalNamespace::SimpleRetailDemoViewController::MenuButton>*)>(&SimpleRetailDemoViewController::add_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SimpleRetailDemoViewController*), "add_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::SimpleRetailDemoViewController*, GlobalNamespace::SimpleRetailDemoViewController::MenuButton>*>()});
  }
};
// Writing MetadataGetter for method: SimpleRetailDemoViewController::remove_didFinishEvent
// Il2CppName: remove_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SimpleRetailDemoViewController::*)(System::Action_2<GlobalNamespace::SimpleRetailDemoViewController*, GlobalNamespace::SimpleRetailDemoViewController::MenuButton>*)>(&SimpleRetailDemoViewController::remove_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SimpleRetailDemoViewController*), "remove_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::SimpleRetailDemoViewController*, GlobalNamespace::SimpleRetailDemoViewController::MenuButton>*>()});
  }
};
// Writing MetadataGetter for method: SimpleRetailDemoViewController::HandleMenuButton
// Il2CppName: HandleMenuButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SimpleRetailDemoViewController::*)(GlobalNamespace::SimpleRetailDemoViewController::MenuButton)>(&SimpleRetailDemoViewController::HandleMenuButton)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SimpleRetailDemoViewController*), "HandleMenuButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::SimpleRetailDemoViewController::MenuButton>()});
  }
};
// Writing MetadataGetter for method: SimpleRetailDemoViewController::$DidActivate$b__8_0
// Il2CppName: <DidActivate>b__8_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SimpleRetailDemoViewController::*)()>(&SimpleRetailDemoViewController::$DidActivate$b__8_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SimpleRetailDemoViewController*), "<DidActivate>b__8_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SimpleRetailDemoViewController::$DidActivate$b__8_1
// Il2CppName: <DidActivate>b__8_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SimpleRetailDemoViewController::*)()>(&SimpleRetailDemoViewController::$DidActivate$b__8_1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SimpleRetailDemoViewController*), "<DidActivate>b__8_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SimpleRetailDemoViewController::$DidActivate$b__8_2
// Il2CppName: <DidActivate>b__8_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SimpleRetailDemoViewController::*)()>(&SimpleRetailDemoViewController::$DidActivate$b__8_2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SimpleRetailDemoViewController*), "<DidActivate>b__8_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SimpleRetailDemoViewController::$DidActivate$b__8_3
// Il2CppName: <DidActivate>b__8_3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SimpleRetailDemoViewController::*)()>(&SimpleRetailDemoViewController::$DidActivate$b__8_3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SimpleRetailDemoViewController*), "<DidActivate>b__8_3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SimpleRetailDemoViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SimpleRetailDemoViewController::*)(bool, bool, bool)>(&SimpleRetailDemoViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SimpleRetailDemoViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: SimpleRetailDemoViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SimpleRetailDemoViewController::*)()>(&SimpleRetailDemoViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SimpleRetailDemoViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SimpleRetailDemoViewController::*)()>(&SimpleRetailDemoViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SimpleRetailDemoViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SimpleRetailDemoViewController/MenuButton
#include "GlobalNamespace/SimpleRetailDemoViewController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SimpleRetailDemoViewController/MenuButton PlayTutorial
GlobalNamespace::SimpleRetailDemoViewController::MenuButton GlobalNamespace::SimpleRetailDemoViewController::MenuButton::_get_PlayTutorial() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleRetailDemoViewController::MenuButton::_get_PlayTutorial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SimpleRetailDemoViewController::MenuButton>("", "SimpleRetailDemoViewController/MenuButton", "PlayTutorial"));
}
// Autogenerated static field setter
// Set static field: static public SimpleRetailDemoViewController/MenuButton PlayTutorial
void GlobalNamespace::SimpleRetailDemoViewController::MenuButton::_set_PlayTutorial(GlobalNamespace::SimpleRetailDemoViewController::MenuButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleRetailDemoViewController::MenuButton::_set_PlayTutorial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SimpleRetailDemoViewController/MenuButton", "PlayTutorial", value));
}
// Autogenerated static field getter
// Get static field: static public SimpleRetailDemoViewController/MenuButton PlayLevel1
GlobalNamespace::SimpleRetailDemoViewController::MenuButton GlobalNamespace::SimpleRetailDemoViewController::MenuButton::_get_PlayLevel1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleRetailDemoViewController::MenuButton::_get_PlayLevel1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SimpleRetailDemoViewController::MenuButton>("", "SimpleRetailDemoViewController/MenuButton", "PlayLevel1"));
}
// Autogenerated static field setter
// Set static field: static public SimpleRetailDemoViewController/MenuButton PlayLevel1
void GlobalNamespace::SimpleRetailDemoViewController::MenuButton::_set_PlayLevel1(GlobalNamespace::SimpleRetailDemoViewController::MenuButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleRetailDemoViewController::MenuButton::_set_PlayLevel1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SimpleRetailDemoViewController/MenuButton", "PlayLevel1", value));
}
// Autogenerated static field getter
// Get static field: static public SimpleRetailDemoViewController/MenuButton PlayLevel2
GlobalNamespace::SimpleRetailDemoViewController::MenuButton GlobalNamespace::SimpleRetailDemoViewController::MenuButton::_get_PlayLevel2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleRetailDemoViewController::MenuButton::_get_PlayLevel2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SimpleRetailDemoViewController::MenuButton>("", "SimpleRetailDemoViewController/MenuButton", "PlayLevel2"));
}
// Autogenerated static field setter
// Set static field: static public SimpleRetailDemoViewController/MenuButton PlayLevel2
void GlobalNamespace::SimpleRetailDemoViewController::MenuButton::_set_PlayLevel2(GlobalNamespace::SimpleRetailDemoViewController::MenuButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleRetailDemoViewController::MenuButton::_set_PlayLevel2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SimpleRetailDemoViewController/MenuButton", "PlayLevel2", value));
}
// Autogenerated static field getter
// Get static field: static public SimpleRetailDemoViewController/MenuButton Exit
GlobalNamespace::SimpleRetailDemoViewController::MenuButton GlobalNamespace::SimpleRetailDemoViewController::MenuButton::_get_Exit() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleRetailDemoViewController::MenuButton::_get_Exit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SimpleRetailDemoViewController::MenuButton>("", "SimpleRetailDemoViewController/MenuButton", "Exit"));
}
// Autogenerated static field setter
// Set static field: static public SimpleRetailDemoViewController/MenuButton Exit
void GlobalNamespace::SimpleRetailDemoViewController::MenuButton::_set_Exit(GlobalNamespace::SimpleRetailDemoViewController::MenuButton value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleRetailDemoViewController::MenuButton::_set_Exit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SimpleRetailDemoViewController/MenuButton", "Exit", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SoloModeSelectionViewController
#include "GlobalNamespace/SoloModeSelectionViewController.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SoloModeSelectionViewController.add_didFinishEvent
void GlobalNamespace::SoloModeSelectionViewController::add_didFinishEvent(System::Action_2<GlobalNamespace::SoloModeSelectionViewController*, GlobalNamespace::SoloModeSelectionViewController::MenuType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SoloModeSelectionViewController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SoloModeSelectionViewController.remove_didFinishEvent
void GlobalNamespace::SoloModeSelectionViewController::remove_didFinishEvent(System::Action_2<GlobalNamespace::SoloModeSelectionViewController*, GlobalNamespace::SoloModeSelectionViewController::MenuType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SoloModeSelectionViewController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: SoloModeSelectionViewController.HandleMenuButton
void GlobalNamespace::SoloModeSelectionViewController::HandleMenuButton(GlobalNamespace::SoloModeSelectionViewController::MenuType subMenuType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SoloModeSelectionViewController::HandleMenuButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMenuButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(subMenuType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, subMenuType);
}
// Autogenerated method: SoloModeSelectionViewController.<DidActivate>b__8_0
void GlobalNamespace::SoloModeSelectionViewController::$DidActivate$b__8_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SoloModeSelectionViewController::<DidActivate>b__8_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__8_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SoloModeSelectionViewController.<DidActivate>b__8_1
void GlobalNamespace::SoloModeSelectionViewController::$DidActivate$b__8_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SoloModeSelectionViewController::<DidActivate>b__8_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__8_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SoloModeSelectionViewController.<DidActivate>b__8_2
void GlobalNamespace::SoloModeSelectionViewController::$DidActivate$b__8_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SoloModeSelectionViewController::<DidActivate>b__8_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__8_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SoloModeSelectionViewController.<DidActivate>b__8_3
void GlobalNamespace::SoloModeSelectionViewController::$DidActivate$b__8_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SoloModeSelectionViewController::<DidActivate>b__8_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<DidActivate>b__8_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SoloModeSelectionViewController.DidActivate
void GlobalNamespace::SoloModeSelectionViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SoloModeSelectionViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Writing MetadataGetter for method: SoloModeSelectionViewController::add_didFinishEvent
// Il2CppName: add_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SoloModeSelectionViewController::*)(System::Action_2<GlobalNamespace::SoloModeSelectionViewController*, GlobalNamespace::SoloModeSelectionViewController::MenuType>*)>(&SoloModeSelectionViewController::add_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SoloModeSelectionViewController*), "add_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::SoloModeSelectionViewController*, GlobalNamespace::SoloModeSelectionViewController::MenuType>*>()});
  }
};
// Writing MetadataGetter for method: SoloModeSelectionViewController::remove_didFinishEvent
// Il2CppName: remove_didFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SoloModeSelectionViewController::*)(System::Action_2<GlobalNamespace::SoloModeSelectionViewController*, GlobalNamespace::SoloModeSelectionViewController::MenuType>*)>(&SoloModeSelectionViewController::remove_didFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SoloModeSelectionViewController*), "remove_didFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::SoloModeSelectionViewController*, GlobalNamespace::SoloModeSelectionViewController::MenuType>*>()});
  }
};
// Writing MetadataGetter for method: SoloModeSelectionViewController::HandleMenuButton
// Il2CppName: HandleMenuButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SoloModeSelectionViewController::*)(GlobalNamespace::SoloModeSelectionViewController::MenuType)>(&SoloModeSelectionViewController::HandleMenuButton)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SoloModeSelectionViewController*), "HandleMenuButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::SoloModeSelectionViewController::MenuType>()});
  }
};
// Writing MetadataGetter for method: SoloModeSelectionViewController::$DidActivate$b__8_0
// Il2CppName: <DidActivate>b__8_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SoloModeSelectionViewController::*)()>(&SoloModeSelectionViewController::$DidActivate$b__8_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SoloModeSelectionViewController*), "<DidActivate>b__8_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SoloModeSelectionViewController::$DidActivate$b__8_1
// Il2CppName: <DidActivate>b__8_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SoloModeSelectionViewController::*)()>(&SoloModeSelectionViewController::$DidActivate$b__8_1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SoloModeSelectionViewController*), "<DidActivate>b__8_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SoloModeSelectionViewController::$DidActivate$b__8_2
// Il2CppName: <DidActivate>b__8_2
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SoloModeSelectionViewController::*)()>(&SoloModeSelectionViewController::$DidActivate$b__8_2)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SoloModeSelectionViewController*), "<DidActivate>b__8_2", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SoloModeSelectionViewController::$DidActivate$b__8_3
// Il2CppName: <DidActivate>b__8_3
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SoloModeSelectionViewController::*)()>(&SoloModeSelectionViewController::$DidActivate$b__8_3)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SoloModeSelectionViewController*), "<DidActivate>b__8_3", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: SoloModeSelectionViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SoloModeSelectionViewController::*)(bool, bool, bool)>(&SoloModeSelectionViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SoloModeSelectionViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: SoloModeSelectionViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SoloModeSelectionViewController::*)()>(&SoloModeSelectionViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SoloModeSelectionViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (SoloModeSelectionViewController::*)()>(&SoloModeSelectionViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(SoloModeSelectionViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SoloModeSelectionViewController/MenuType
#include "GlobalNamespace/SoloModeSelectionViewController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SoloModeSelectionViewController/MenuType FreePlayMode
GlobalNamespace::SoloModeSelectionViewController::MenuType GlobalNamespace::SoloModeSelectionViewController::MenuType::_get_FreePlayMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SoloModeSelectionViewController::MenuType::_get_FreePlayMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SoloModeSelectionViewController::MenuType>("", "SoloModeSelectionViewController/MenuType", "FreePlayMode"));
}
// Autogenerated static field setter
// Set static field: static public SoloModeSelectionViewController/MenuType FreePlayMode
void GlobalNamespace::SoloModeSelectionViewController::MenuType::_set_FreePlayMode(GlobalNamespace::SoloModeSelectionViewController::MenuType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SoloModeSelectionViewController::MenuType::_set_FreePlayMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SoloModeSelectionViewController/MenuType", "FreePlayMode", value));
}
// Autogenerated static field getter
// Get static field: static public SoloModeSelectionViewController/MenuType NoArrowsMode
GlobalNamespace::SoloModeSelectionViewController::MenuType GlobalNamespace::SoloModeSelectionViewController::MenuType::_get_NoArrowsMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SoloModeSelectionViewController::MenuType::_get_NoArrowsMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SoloModeSelectionViewController::MenuType>("", "SoloModeSelectionViewController/MenuType", "NoArrowsMode"));
}
// Autogenerated static field setter
// Set static field: static public SoloModeSelectionViewController/MenuType NoArrowsMode
void GlobalNamespace::SoloModeSelectionViewController::MenuType::_set_NoArrowsMode(GlobalNamespace::SoloModeSelectionViewController::MenuType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SoloModeSelectionViewController::MenuType::_set_NoArrowsMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SoloModeSelectionViewController/MenuType", "NoArrowsMode", value));
}
// Autogenerated static field getter
// Get static field: static public SoloModeSelectionViewController/MenuType OneSaberMode
GlobalNamespace::SoloModeSelectionViewController::MenuType GlobalNamespace::SoloModeSelectionViewController::MenuType::_get_OneSaberMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SoloModeSelectionViewController::MenuType::_get_OneSaberMode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SoloModeSelectionViewController::MenuType>("", "SoloModeSelectionViewController/MenuType", "OneSaberMode"));
}
// Autogenerated static field setter
// Set static field: static public SoloModeSelectionViewController/MenuType OneSaberMode
void GlobalNamespace::SoloModeSelectionViewController::MenuType::_set_OneSaberMode(GlobalNamespace::SoloModeSelectionViewController::MenuType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SoloModeSelectionViewController::MenuType::_set_OneSaberMode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SoloModeSelectionViewController/MenuType", "OneSaberMode", value));
}
// Autogenerated static field getter
// Get static field: static public SoloModeSelectionViewController/MenuType Back
GlobalNamespace::SoloModeSelectionViewController::MenuType GlobalNamespace::SoloModeSelectionViewController::MenuType::_get_Back() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SoloModeSelectionViewController::MenuType::_get_Back");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SoloModeSelectionViewController::MenuType>("", "SoloModeSelectionViewController/MenuType", "Back"));
}
// Autogenerated static field setter
// Set static field: static public SoloModeSelectionViewController/MenuType Back
void GlobalNamespace::SoloModeSelectionViewController::MenuType::_set_Back(GlobalNamespace::SoloModeSelectionViewController::MenuType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SoloModeSelectionViewController::MenuType::_set_Back");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SoloModeSelectionViewController/MenuType", "Back", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TabBarViewController
#include "GlobalNamespace/TabBarViewController.hpp"
// Including type: TabBarViewController/TabBarItem
#include "GlobalNamespace/TabBarViewController_TabBarItem.hpp"
// Including type: HMUI.TextSegmentedControl
#include "HMUI/TextSegmentedControl.hpp"
// Including type: UnityEngine.UI.ContentSizeFitter
#include "UnityEngine/UI/ContentSizeFitter.hpp"
// Including type: HMUI.SegmentedControl
#include "HMUI/SegmentedControl.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TabBarViewController.set_sizeToFit
void GlobalNamespace::TabBarViewController::set_sizeToFit(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TabBarViewController::set_sizeToFit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sizeToFit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TabBarViewController.get_sizeToFit
bool GlobalNamespace::TabBarViewController::get_sizeToFit() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TabBarViewController::get_sizeToFit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sizeToFit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TabBarViewController.get_selectedCellNumber
int GlobalNamespace::TabBarViewController::get_selectedCellNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TabBarViewController::get_selectedCellNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedCellNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: TabBarViewController.Setup
void GlobalNamespace::TabBarViewController::Setup(::Array<GlobalNamespace::TabBarViewController::TabBarItem*>* items) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TabBarViewController::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(items)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, items);
}
// Autogenerated method: TabBarViewController.SelectItem
void GlobalNamespace::TabBarViewController::SelectItem(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TabBarViewController::SelectItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: TabBarViewController.Clear
void GlobalNamespace::TabBarViewController::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TabBarViewController::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TabBarViewController.HandleDidSelectCell
void GlobalNamespace::TabBarViewController::HandleDidSelectCell(HMUI::SegmentedControl* segmentedControl, int cellNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TabBarViewController::HandleDidSelectCell");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDidSelectCell", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(segmentedControl), ::il2cpp_utils::ExtractType(cellNumber)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, segmentedControl, cellNumber);
}
// Autogenerated method: TabBarViewController.DidActivate
void GlobalNamespace::TabBarViewController::DidActivate(bool firstActivation, bool addedToHierarchy, bool screenSystemEnabling) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TabBarViewController::DidActivate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DidActivate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(firstActivation), ::il2cpp_utils::ExtractType(addedToHierarchy), ::il2cpp_utils::ExtractType(screenSystemEnabling)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, firstActivation, addedToHierarchy, screenSystemEnabling);
}
// Autogenerated method: TabBarViewController.OnDestroy
void GlobalNamespace::TabBarViewController::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TabBarViewController::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: TabBarViewController::set_sizeToFit
// Il2CppName: set_sizeToFit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TabBarViewController::*)(bool)>(&TabBarViewController::set_sizeToFit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TabBarViewController*), "set_sizeToFit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: TabBarViewController::get_sizeToFit
// Il2CppName: get_sizeToFit
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (TabBarViewController::*)()>(&TabBarViewController::get_sizeToFit)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TabBarViewController*), "get_sizeToFit", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TabBarViewController::get_selectedCellNumber
// Il2CppName: get_selectedCellNumber
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (TabBarViewController::*)()>(&TabBarViewController::get_selectedCellNumber)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TabBarViewController*), "get_selectedCellNumber", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TabBarViewController::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TabBarViewController::*)(::Array<GlobalNamespace::TabBarViewController::TabBarItem*>*)>(&TabBarViewController::Setup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TabBarViewController*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<GlobalNamespace::TabBarViewController::TabBarItem*>*>()});
  }
};
// Writing MetadataGetter for method: TabBarViewController::SelectItem
// Il2CppName: SelectItem
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TabBarViewController::*)(int)>(&TabBarViewController::SelectItem)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TabBarViewController*), "SelectItem", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: TabBarViewController::Clear
// Il2CppName: Clear
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TabBarViewController::*)()>(&TabBarViewController::Clear)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TabBarViewController*), "Clear", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TabBarViewController::HandleDidSelectCell
// Il2CppName: HandleDidSelectCell
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TabBarViewController::*)(HMUI::SegmentedControl*, int)>(&TabBarViewController::HandleDidSelectCell)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TabBarViewController*), "HandleDidSelectCell", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::SegmentedControl*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: TabBarViewController::DidActivate
// Il2CppName: DidActivate
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TabBarViewController::*)(bool, bool, bool)>(&TabBarViewController::DidActivate)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TabBarViewController*), "DidActivate", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: TabBarViewController::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TabBarViewController::*)()>(&TabBarViewController::OnDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TabBarViewController*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: TabBarViewController::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TabBarViewController::*)()>(&TabBarViewController::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TabBarViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TabBarViewController::*)()>(&TabBarViewController::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TabBarViewController*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: TabBarViewController/TabBarItem
#include "GlobalNamespace/TabBarViewController_TabBarItem.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Writing MetadataGetter for method: TabBarViewController::TabBarItem::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TabBarViewController::TabBarItem::*)(::Il2CppString*, System::Action*)>(&TabBarViewController::TabBarItem::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TabBarViewController::TabBarItem*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (TabBarViewController::TabBarItem::*)(::Il2CppString*, System::Action*)>(&TabBarViewController::TabBarItem::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(TabBarViewController::TabBarItem*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: AnnotatedBeatmapLevelCollectionsTableView
#include "GlobalNamespace/AnnotatedBeatmapLevelCollectionsTableView.hpp"
// Including type: HMUI.TableView
#include "HMUI/TableView.hpp"
// Including type: AnnotatedBeatmapLevelCollectionTableCell
#include "GlobalNamespace/AnnotatedBeatmapLevelCollectionTableCell.hpp"
// Including type: AdditionalContentModel
#include "GlobalNamespace/AdditionalContentModel.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: IAnnotatedBeatmapLevelCollection
#include "GlobalNamespace/IAnnotatedBeatmapLevelCollection.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AnnotatedBeatmapLevelCollectionsTableView.add_didSelectAnnotatedBeatmapLevelCollectionEvent
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView::add_didSelectAnnotatedBeatmapLevelCollectionEvent(System::Action_2<GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView*, GlobalNamespace::IAnnotatedBeatmapLevelCollection*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView::add_didSelectAnnotatedBeatmapLevelCollectionEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectAnnotatedBeatmapLevelCollectionEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsTableView.remove_didSelectAnnotatedBeatmapLevelCollectionEvent
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView::remove_didSelectAnnotatedBeatmapLevelCollectionEvent(System::Action_2<GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView*, GlobalNamespace::IAnnotatedBeatmapLevelCollection*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView::remove_didSelectAnnotatedBeatmapLevelCollectionEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectAnnotatedBeatmapLevelCollectionEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsTableView.Init
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsTableView.SetData
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView::SetData(System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::IAnnotatedBeatmapLevelCollection*>* annotatedBeatmapLevelCollections) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(annotatedBeatmapLevelCollections)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, annotatedBeatmapLevelCollections);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsTableView.OnEnable
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsTableView.OnDisable
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsTableView.OnDestroy
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsTableView.Hide
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView::Hide() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView::Hide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsTableView.Show
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView::Show() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView::Show");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Show", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsTableView.CellSize
float GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView::CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView::CellSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsTableView.NumberOfCells
int GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView::NumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsTableView.CellForIdx
HMUI::TableCell* GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView::CellForIdx(HMUI::TableView* tableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView::CellForIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodThrow<HMUI::TableCell*, false>(this, ___internal__method, tableView, idx);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsTableView.HandleDidSelectColumnEvent
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView::HandleDidSelectColumnEvent(HMUI::TableView* tableView, int column) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView::HandleDidSelectColumnEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDidSelectColumnEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(column)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tableView, column);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsTableView.HandleAdditionalContentModelDidInvalidateData
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView::HandleAdditionalContentModelDidInvalidateData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView::HandleAdditionalContentModelDidInvalidateData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleAdditionalContentModelDidInvalidateData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsTableView.CancelAsyncOperations
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView::CancelAsyncOperations() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView::CancelAsyncOperations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CancelAsyncOperations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsTableView.RefreshAvailability
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView::RefreshAvailability() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView::RefreshAvailability");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshAvailability", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AnnotatedBeatmapLevelCollectionsTableView.SelectAndScrollToCellWithIdx
void GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView::SelectAndScrollToCellWithIdx(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView::SelectAndScrollToCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectAndScrollToCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx);
}
// Writing MetadataGetter for method: AnnotatedBeatmapLevelCollectionsTableView::add_didSelectAnnotatedBeatmapLevelCollectionEvent
// Il2CppName: add_didSelectAnnotatedBeatmapLevelCollectionEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AnnotatedBeatmapLevelCollectionsTableView::*)(System::Action_2<GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView*, GlobalNamespace::IAnnotatedBeatmapLevelCollection*>*)>(&AnnotatedBeatmapLevelCollectionsTableView::add_didSelectAnnotatedBeatmapLevelCollectionEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnnotatedBeatmapLevelCollectionsTableView*), "add_didSelectAnnotatedBeatmapLevelCollectionEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView*, GlobalNamespace::IAnnotatedBeatmapLevelCollection*>*>()});
  }
};
// Writing MetadataGetter for method: AnnotatedBeatmapLevelCollectionsTableView::remove_didSelectAnnotatedBeatmapLevelCollectionEvent
// Il2CppName: remove_didSelectAnnotatedBeatmapLevelCollectionEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AnnotatedBeatmapLevelCollectionsTableView::*)(System::Action_2<GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView*, GlobalNamespace::IAnnotatedBeatmapLevelCollection*>*)>(&AnnotatedBeatmapLevelCollectionsTableView::remove_didSelectAnnotatedBeatmapLevelCollectionEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnnotatedBeatmapLevelCollectionsTableView*), "remove_didSelectAnnotatedBeatmapLevelCollectionEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::AnnotatedBeatmapLevelCollectionsTableView*, GlobalNamespace::IAnnotatedBeatmapLevelCollection*>*>()});
  }
};
// Writing MetadataGetter for method: AnnotatedBeatmapLevelCollectionsTableView::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AnnotatedBeatmapLevelCollectionsTableView::*)()>(&AnnotatedBeatmapLevelCollectionsTableView::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnnotatedBeatmapLevelCollectionsTableView*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AnnotatedBeatmapLevelCollectionsTableView::SetData
// Il2CppName: SetData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AnnotatedBeatmapLevelCollectionsTableView::*)(System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::IAnnotatedBeatmapLevelCollection*>*)>(&AnnotatedBeatmapLevelCollectionsTableView::SetData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnnotatedBeatmapLevelCollectionsTableView*), "SetData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::IAnnotatedBeatmapLevelCollection*>*>()});
  }
};
// Writing MetadataGetter for method: AnnotatedBeatmapLevelCollectionsTableView::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AnnotatedBeatmapLevelCollectionsTableView::*)()>(&AnnotatedBeatmapLevelCollectionsTableView::OnEnable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnnotatedBeatmapLevelCollectionsTableView*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AnnotatedBeatmapLevelCollectionsTableView::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AnnotatedBeatmapLevelCollectionsTableView::*)()>(&AnnotatedBeatmapLevelCollectionsTableView::OnDisable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnnotatedBeatmapLevelCollectionsTableView*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AnnotatedBeatmapLevelCollectionsTableView::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AnnotatedBeatmapLevelCollectionsTableView::*)()>(&AnnotatedBeatmapLevelCollectionsTableView::OnDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnnotatedBeatmapLevelCollectionsTableView*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AnnotatedBeatmapLevelCollectionsTableView::Hide
// Il2CppName: Hide
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AnnotatedBeatmapLevelCollectionsTableView::*)()>(&AnnotatedBeatmapLevelCollectionsTableView::Hide)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnnotatedBeatmapLevelCollectionsTableView*), "Hide", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AnnotatedBeatmapLevelCollectionsTableView::Show
// Il2CppName: Show
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AnnotatedBeatmapLevelCollectionsTableView::*)()>(&AnnotatedBeatmapLevelCollectionsTableView::Show)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnnotatedBeatmapLevelCollectionsTableView*), "Show", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AnnotatedBeatmapLevelCollectionsTableView::CellSize
// Il2CppName: CellSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (AnnotatedBeatmapLevelCollectionsTableView::*)()>(&AnnotatedBeatmapLevelCollectionsTableView::CellSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnnotatedBeatmapLevelCollectionsTableView*), "CellSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AnnotatedBeatmapLevelCollectionsTableView::NumberOfCells
// Il2CppName: NumberOfCells
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (AnnotatedBeatmapLevelCollectionsTableView::*)()>(&AnnotatedBeatmapLevelCollectionsTableView::NumberOfCells)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnnotatedBeatmapLevelCollectionsTableView*), "NumberOfCells", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AnnotatedBeatmapLevelCollectionsTableView::CellForIdx
// Il2CppName: CellForIdx
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HMUI::TableCell* (AnnotatedBeatmapLevelCollectionsTableView::*)(HMUI::TableView*, int)>(&AnnotatedBeatmapLevelCollectionsTableView::CellForIdx)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnnotatedBeatmapLevelCollectionsTableView*), "CellForIdx", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::TableView*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: AnnotatedBeatmapLevelCollectionsTableView::HandleDidSelectColumnEvent
// Il2CppName: HandleDidSelectColumnEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AnnotatedBeatmapLevelCollectionsTableView::*)(HMUI::TableView*, int)>(&AnnotatedBeatmapLevelCollectionsTableView::HandleDidSelectColumnEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnnotatedBeatmapLevelCollectionsTableView*), "HandleDidSelectColumnEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::TableView*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: AnnotatedBeatmapLevelCollectionsTableView::HandleAdditionalContentModelDidInvalidateData
// Il2CppName: HandleAdditionalContentModelDidInvalidateData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AnnotatedBeatmapLevelCollectionsTableView::*)()>(&AnnotatedBeatmapLevelCollectionsTableView::HandleAdditionalContentModelDidInvalidateData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnnotatedBeatmapLevelCollectionsTableView*), "HandleAdditionalContentModelDidInvalidateData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AnnotatedBeatmapLevelCollectionsTableView::CancelAsyncOperations
// Il2CppName: CancelAsyncOperations
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AnnotatedBeatmapLevelCollectionsTableView::*)()>(&AnnotatedBeatmapLevelCollectionsTableView::CancelAsyncOperations)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnnotatedBeatmapLevelCollectionsTableView*), "CancelAsyncOperations", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AnnotatedBeatmapLevelCollectionsTableView::RefreshAvailability
// Il2CppName: RefreshAvailability
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AnnotatedBeatmapLevelCollectionsTableView::*)()>(&AnnotatedBeatmapLevelCollectionsTableView::RefreshAvailability)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnnotatedBeatmapLevelCollectionsTableView*), "RefreshAvailability", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: AnnotatedBeatmapLevelCollectionsTableView::SelectAndScrollToCellWithIdx
// Il2CppName: SelectAndScrollToCellWithIdx
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AnnotatedBeatmapLevelCollectionsTableView::*)(int)>(&AnnotatedBeatmapLevelCollectionsTableView::SelectAndScrollToCellWithIdx)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnnotatedBeatmapLevelCollectionsTableView*), "SelectAndScrollToCellWithIdx", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: AnnotatedBeatmapLevelCollectionsTableView::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AnnotatedBeatmapLevelCollectionsTableView::*)()>(&AnnotatedBeatmapLevelCollectionsTableView::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnnotatedBeatmapLevelCollectionsTableView*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (AnnotatedBeatmapLevelCollectionsTableView::*)()>(&AnnotatedBeatmapLevelCollectionsTableView::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(AnnotatedBeatmapLevelCollectionsTableView*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BasicLevelParamsPanel
#include "GlobalNamespace/BasicLevelParamsPanel.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BasicLevelParamsPanel.set_duration
void GlobalNamespace::BasicLevelParamsPanel::set_duration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicLevelParamsPanel::set_duration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_duration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BasicLevelParamsPanel.set_bpm
void GlobalNamespace::BasicLevelParamsPanel::set_bpm(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BasicLevelParamsPanel::set_bpm");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bpm", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: BasicLevelParamsPanel::set_duration
// Il2CppName: set_duration
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BasicLevelParamsPanel::*)(float)>(&BasicLevelParamsPanel::set_duration)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BasicLevelParamsPanel*), "set_duration", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: BasicLevelParamsPanel::set_bpm
// Il2CppName: set_bpm
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BasicLevelParamsPanel::*)(float)>(&BasicLevelParamsPanel::set_bpm)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BasicLevelParamsPanel*), "set_bpm", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<float>()});
  }
};
// Writing MetadataGetter for method: BasicLevelParamsPanel::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BasicLevelParamsPanel::*)()>(&BasicLevelParamsPanel::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BasicLevelParamsPanel*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BasicLevelParamsPanel::*)()>(&BasicLevelParamsPanel::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BasicLevelParamsPanel*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapCharacteristicsTableView
#include "GlobalNamespace/BeatmapCharacteristicsTableView.hpp"
// Including type: HMUI.TableView
#include "HMUI/TableView.hpp"
// Including type: BeatmapCharacteristicTableCell
#include "GlobalNamespace/BeatmapCharacteristicTableCell.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: BeatmapCharacteristicCollectionSO
#include "GlobalNamespace/BeatmapCharacteristicCollectionSO.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapCharacteristicsTableView.add_didSelectCharacteristic
void GlobalNamespace::BeatmapCharacteristicsTableView::add_didSelectCharacteristic(System::Action_1<GlobalNamespace::BeatmapCharacteristicSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicsTableView::add_didSelectCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapCharacteristicsTableView.remove_didSelectCharacteristic
void GlobalNamespace::BeatmapCharacteristicsTableView::remove_didSelectCharacteristic(System::Action_1<GlobalNamespace::BeatmapCharacteristicSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicsTableView::remove_didSelectCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapCharacteristicsTableView.Init
void GlobalNamespace::BeatmapCharacteristicsTableView::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicsTableView::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicsTableView.SetData
void GlobalNamespace::BeatmapCharacteristicsTableView::SetData(GlobalNamespace::BeatmapCharacteristicCollectionSO* beatmapCharacteristicCollection) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicsTableView::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapCharacteristicCollection)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapCharacteristicCollection);
}
// Autogenerated method: BeatmapCharacteristicsTableView.OnDestroy
void GlobalNamespace::BeatmapCharacteristicsTableView::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicsTableView::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicsTableView.CellSize
float GlobalNamespace::BeatmapCharacteristicsTableView::CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicsTableView::CellSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicsTableView.NumberOfCells
int GlobalNamespace::BeatmapCharacteristicsTableView::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicsTableView::NumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicsTableView.CellForIdx
HMUI::TableCell* GlobalNamespace::BeatmapCharacteristicsTableView::CellForIdx(HMUI::TableView* tableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicsTableView::CellForIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodThrow<HMUI::TableCell*, false>(this, ___internal__method, tableView, idx);
}
// Autogenerated method: BeatmapCharacteristicsTableView.HandleDidSelectColumnEvent
void GlobalNamespace::BeatmapCharacteristicsTableView::HandleDidSelectColumnEvent(HMUI::TableView* tableView, int column) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicsTableView::HandleDidSelectColumnEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDidSelectColumnEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(column)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tableView, column);
}
// Autogenerated method: BeatmapCharacteristicsTableView.HandleAdditionalContentModelDidInvalidateData
void GlobalNamespace::BeatmapCharacteristicsTableView::HandleAdditionalContentModelDidInvalidateData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicsTableView::HandleAdditionalContentModelDidInvalidateData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleAdditionalContentModelDidInvalidateData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapCharacteristicsTableView.SelectCellWithIdx
void GlobalNamespace::BeatmapCharacteristicsTableView::SelectCellWithIdx(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapCharacteristicsTableView::SelectCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx);
}
// Writing MetadataGetter for method: BeatmapCharacteristicsTableView::add_didSelectCharacteristic
// Il2CppName: add_didSelectCharacteristic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapCharacteristicsTableView::*)(System::Action_1<GlobalNamespace::BeatmapCharacteristicSO*>*)>(&BeatmapCharacteristicsTableView::add_didSelectCharacteristic)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicsTableView*), "add_didSelectCharacteristic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::BeatmapCharacteristicSO*>*>()});
  }
};
// Writing MetadataGetter for method: BeatmapCharacteristicsTableView::remove_didSelectCharacteristic
// Il2CppName: remove_didSelectCharacteristic
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapCharacteristicsTableView::*)(System::Action_1<GlobalNamespace::BeatmapCharacteristicSO*>*)>(&BeatmapCharacteristicsTableView::remove_didSelectCharacteristic)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicsTableView*), "remove_didSelectCharacteristic", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::BeatmapCharacteristicSO*>*>()});
  }
};
// Writing MetadataGetter for method: BeatmapCharacteristicsTableView::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapCharacteristicsTableView::*)()>(&BeatmapCharacteristicsTableView::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicsTableView*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeatmapCharacteristicsTableView::SetData
// Il2CppName: SetData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapCharacteristicsTableView::*)(GlobalNamespace::BeatmapCharacteristicCollectionSO*)>(&BeatmapCharacteristicsTableView::SetData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicsTableView*), "SetData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapCharacteristicCollectionSO*>()});
  }
};
// Writing MetadataGetter for method: BeatmapCharacteristicsTableView::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapCharacteristicsTableView::*)()>(&BeatmapCharacteristicsTableView::OnDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicsTableView*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeatmapCharacteristicsTableView::CellSize
// Il2CppName: CellSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (BeatmapCharacteristicsTableView::*)()>(&BeatmapCharacteristicsTableView::CellSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicsTableView*), "CellSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeatmapCharacteristicsTableView::NumberOfCells
// Il2CppName: NumberOfCells
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (BeatmapCharacteristicsTableView::*)()>(&BeatmapCharacteristicsTableView::NumberOfCells)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicsTableView*), "NumberOfCells", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeatmapCharacteristicsTableView::CellForIdx
// Il2CppName: CellForIdx
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HMUI::TableCell* (BeatmapCharacteristicsTableView::*)(HMUI::TableView*, int)>(&BeatmapCharacteristicsTableView::CellForIdx)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicsTableView*), "CellForIdx", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::TableView*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BeatmapCharacteristicsTableView::HandleDidSelectColumnEvent
// Il2CppName: HandleDidSelectColumnEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapCharacteristicsTableView::*)(HMUI::TableView*, int)>(&BeatmapCharacteristicsTableView::HandleDidSelectColumnEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicsTableView*), "HandleDidSelectColumnEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::TableView*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BeatmapCharacteristicsTableView::HandleAdditionalContentModelDidInvalidateData
// Il2CppName: HandleAdditionalContentModelDidInvalidateData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapCharacteristicsTableView::*)()>(&BeatmapCharacteristicsTableView::HandleAdditionalContentModelDidInvalidateData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicsTableView*), "HandleAdditionalContentModelDidInvalidateData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BeatmapCharacteristicsTableView::SelectCellWithIdx
// Il2CppName: SelectCellWithIdx
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapCharacteristicsTableView::*)(int)>(&BeatmapCharacteristicsTableView::SelectCellWithIdx)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicsTableView*), "SelectCellWithIdx", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: BeatmapCharacteristicsTableView::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapCharacteristicsTableView::*)()>(&BeatmapCharacteristicsTableView::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicsTableView*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapCharacteristicsTableView::*)()>(&BeatmapCharacteristicsTableView::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapCharacteristicsTableView*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapSelectionView
#include "GlobalNamespace/BeatmapSelectionView.hpp"
// Including type: LevelBar
#include "GlobalNamespace/LevelBar.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapSelectionView.SetBeatmap
void GlobalNamespace::BeatmapSelectionView::SetBeatmap(GlobalNamespace::IPreviewBeatmapLevel* beatmapLevel, GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic, GlobalNamespace::BeatmapDifficulty beatmapDifficulty) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapSelectionView::SetBeatmap");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevel), ::il2cpp_utils::ExtractType(beatmapCharacteristic), ::il2cpp_utils::ExtractType(beatmapDifficulty)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapLevel, beatmapCharacteristic, beatmapDifficulty);
}
// Writing MetadataGetter for method: BeatmapSelectionView::SetBeatmap
// Il2CppName: SetBeatmap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapSelectionView::*)(GlobalNamespace::IPreviewBeatmapLevel*, GlobalNamespace::BeatmapCharacteristicSO*, GlobalNamespace::BeatmapDifficulty)>(&BeatmapSelectionView::SetBeatmap)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapSelectionView*), "SetBeatmap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IPreviewBeatmapLevel*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapCharacteristicSO*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapDifficulty>()});
  }
};
// Writing MetadataGetter for method: BeatmapSelectionView::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapSelectionView::*)()>(&BeatmapSelectionView::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapSelectionView*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BeatmapSelectionView::*)()>(&BeatmapSelectionView::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BeatmapSelectionView*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BetaBuildInfoText
#include "GlobalNamespace/BetaBuildInfoText.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BetaBuildInfoText.Start
void GlobalNamespace::BetaBuildInfoText::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BetaBuildInfoText::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: BetaBuildInfoText::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BetaBuildInfoText::*)()>(&BetaBuildInfoText::Start)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BetaBuildInfoText*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BetaBuildInfoText::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BetaBuildInfoText::*)()>(&BetaBuildInfoText::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BetaBuildInfoText*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BetaBuildInfoText::*)()>(&BetaBuildInfoText::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BetaBuildInfoText*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BlurredCoverImageView
#include "GlobalNamespace/BlurredCoverImageView.hpp"
// Including type: BlurredCoverImageView/<SetTextureAsync>d__6
#include "GlobalNamespace/BlurredCoverImageView_-SetTextureAsync-d__6.hpp"
// Including type: HMUI.ImageView
#include "HMUI/ImageView.hpp"
// Including type: KawaseBlurRendererSO
#include "GlobalNamespace/KawaseBlurRendererSO.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: UnityEngine.Texture2D
#include "UnityEngine/Texture2D.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BlurredCoverImageView.OnDestroy
void GlobalNamespace::BlurredCoverImageView::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlurredCoverImageView::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BlurredCoverImageView.SetTextureAsync
void GlobalNamespace::BlurredCoverImageView::SetTextureAsync(GlobalNamespace::IPreviewBeatmapLevel* level) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlurredCoverImageView::SetTextureAsync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTextureAsync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, level);
}
// Writing MetadataGetter for method: BlurredCoverImageView::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BlurredCoverImageView::*)()>(&BlurredCoverImageView::OnDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BlurredCoverImageView*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BlurredCoverImageView::SetTextureAsync
// Il2CppName: SetTextureAsync
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BlurredCoverImageView::*)(GlobalNamespace::IPreviewBeatmapLevel*)>(&BlurredCoverImageView::SetTextureAsync)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BlurredCoverImageView*), "SetTextureAsync", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IPreviewBeatmapLevel*>()});
  }
};
// Writing MetadataGetter for method: BlurredCoverImageView::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BlurredCoverImageView::*)()>(&BlurredCoverImageView::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BlurredCoverImageView*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BlurredCoverImageView::*)()>(&BlurredCoverImageView::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BlurredCoverImageView*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BlurredCoverImageView/<SetTextureAsync>d__6
#include "GlobalNamespace/BlurredCoverImageView_-SetTextureAsync-d__6.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BlurredCoverImageView/<SetTextureAsync>d__6.MoveNext
void GlobalNamespace::BlurredCoverImageView::$SetTextureAsync$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlurredCoverImageView::$SetTextureAsync$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: BlurredCoverImageView/<SetTextureAsync>d__6.SetStateMachine
void GlobalNamespace::BlurredCoverImageView::$SetTextureAsync$d__6::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BlurredCoverImageView::$SetTextureAsync$d__6::SetStateMachine");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stateMachine)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Writing MetadataGetter for method: BlurredCoverImageView::$SetTextureAsync$d__6::MoveNext
// Il2CppName: MoveNext
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BlurredCoverImageView::$SetTextureAsync$d__6::*)()>(&BlurredCoverImageView::$SetTextureAsync$d__6::MoveNext)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BlurredCoverImageView::$SetTextureAsync$d__6), "MoveNext", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: BlurredCoverImageView::$SetTextureAsync$d__6::SetStateMachine
// Il2CppName: SetStateMachine
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (BlurredCoverImageView::$SetTextureAsync$d__6::*)(System::Runtime::CompilerServices::IAsyncStateMachine*)>(&BlurredCoverImageView::$SetTextureAsync$d__6::SetStateMachine)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(BlurredCoverImageView::$SetTextureAsync$d__6), "SetStateMachine", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Runtime::CompilerServices::IAsyncStateMachine*>()});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DemoMenuLevelPanelView
#include "GlobalNamespace/DemoMenuLevelPanelView.hpp"
// Including type: LocalLeaderboardsModel
#include "GlobalNamespace/LocalLeaderboardsModel.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: LocalLeaderboardTableView
#include "GlobalNamespace/LocalLeaderboardTableView.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxNumberOfCells
int GlobalNamespace::DemoMenuLevelPanelView::_get_kMaxNumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DemoMenuLevelPanelView::_get_kMaxNumberOfCells");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "DemoMenuLevelPanelView", "kMaxNumberOfCells"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxNumberOfCells
void GlobalNamespace::DemoMenuLevelPanelView::_set_kMaxNumberOfCells(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DemoMenuLevelPanelView::_set_kMaxNumberOfCells");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DemoMenuLevelPanelView", "kMaxNumberOfCells", value));
}
// Autogenerated method: DemoMenuLevelPanelView.add_playButtonWasPressedEvent
void GlobalNamespace::DemoMenuLevelPanelView::add_playButtonWasPressedEvent(System::Action_1<GlobalNamespace::DemoMenuLevelPanelView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DemoMenuLevelPanelView::add_playButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_playButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: DemoMenuLevelPanelView.remove_playButtonWasPressedEvent
void GlobalNamespace::DemoMenuLevelPanelView::remove_playButtonWasPressedEvent(System::Action_1<GlobalNamespace::DemoMenuLevelPanelView*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DemoMenuLevelPanelView::remove_playButtonWasPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_playButtonWasPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: DemoMenuLevelPanelView.Start
void GlobalNamespace::DemoMenuLevelPanelView::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DemoMenuLevelPanelView::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DemoMenuLevelPanelView.OnDestroy
void GlobalNamespace::DemoMenuLevelPanelView::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DemoMenuLevelPanelView::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DemoMenuLevelPanelView.Init
void GlobalNamespace::DemoMenuLevelPanelView::Init(GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DemoMenuLevelPanelView::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmap)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, difficultyBeatmap);
}
// Autogenerated method: DemoMenuLevelPanelView.PlayButtonWasPressed
void GlobalNamespace::DemoMenuLevelPanelView::PlayButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DemoMenuLevelPanelView::PlayButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: DemoMenuLevelPanelView::add_playButtonWasPressedEvent
// Il2CppName: add_playButtonWasPressedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DemoMenuLevelPanelView::*)(System::Action_1<GlobalNamespace::DemoMenuLevelPanelView*>*)>(&DemoMenuLevelPanelView::add_playButtonWasPressedEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DemoMenuLevelPanelView*), "add_playButtonWasPressedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::DemoMenuLevelPanelView*>*>()});
  }
};
// Writing MetadataGetter for method: DemoMenuLevelPanelView::remove_playButtonWasPressedEvent
// Il2CppName: remove_playButtonWasPressedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DemoMenuLevelPanelView::*)(System::Action_1<GlobalNamespace::DemoMenuLevelPanelView*>*)>(&DemoMenuLevelPanelView::remove_playButtonWasPressedEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DemoMenuLevelPanelView*), "remove_playButtonWasPressedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::DemoMenuLevelPanelView*>*>()});
  }
};
// Writing MetadataGetter for method: DemoMenuLevelPanelView::Start
// Il2CppName: Start
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DemoMenuLevelPanelView::*)()>(&DemoMenuLevelPanelView::Start)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DemoMenuLevelPanelView*), "Start", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DemoMenuLevelPanelView::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DemoMenuLevelPanelView::*)()>(&DemoMenuLevelPanelView::OnDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DemoMenuLevelPanelView*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DemoMenuLevelPanelView::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DemoMenuLevelPanelView::*)(GlobalNamespace::IDifficultyBeatmap*)>(&DemoMenuLevelPanelView::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DemoMenuLevelPanelView*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IDifficultyBeatmap*>()});
  }
};
// Writing MetadataGetter for method: DemoMenuLevelPanelView::PlayButtonWasPressed
// Il2CppName: PlayButtonWasPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DemoMenuLevelPanelView::*)()>(&DemoMenuLevelPanelView::PlayButtonWasPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DemoMenuLevelPanelView*), "PlayButtonWasPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DemoMenuLevelPanelView::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DemoMenuLevelPanelView::*)()>(&DemoMenuLevelPanelView::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DemoMenuLevelPanelView*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DemoMenuLevelPanelView::*)()>(&DemoMenuLevelPanelView::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DemoMenuLevelPanelView*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: DifficultyTableView
#include "GlobalNamespace/DifficultyTableView.hpp"
// Including type: DifficultyTableCell
#include "GlobalNamespace/DifficultyTableCell.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kCellIdentifier
::Il2CppString* GlobalNamespace::DifficultyTableView::_get_kCellIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyTableView::_get_kCellIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "DifficultyTableView", "kCellIdentifier"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCellIdentifier
void GlobalNamespace::DifficultyTableView::_set_kCellIdentifier(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyTableView::_set_kCellIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DifficultyTableView", "kCellIdentifier", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kNonSelectableCellIdentifier
::Il2CppString* GlobalNamespace::DifficultyTableView::_get_kNonSelectableCellIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyTableView::_get_kNonSelectableCellIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "DifficultyTableView", "kNonSelectableCellIdentifier"));
}
// Autogenerated static field setter
// Set static field: static private System.String kNonSelectableCellIdentifier
void GlobalNamespace::DifficultyTableView::_set_kNonSelectableCellIdentifier(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyTableView::_set_kNonSelectableCellIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "DifficultyTableView", "kNonSelectableCellIdentifier", value));
}
// Autogenerated method: DifficultyTableView.add_didSelectRow
void GlobalNamespace::DifficultyTableView::add_didSelectRow(System::Action_2<GlobalNamespace::DifficultyTableView*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyTableView::add_didSelectRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSelectRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: DifficultyTableView.remove_didSelectRow
void GlobalNamespace::DifficultyTableView::remove_didSelectRow(System::Action_2<GlobalNamespace::DifficultyTableView*, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyTableView::remove_didSelectRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSelectRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: DifficultyTableView.Init
void GlobalNamespace::DifficultyTableView::Init(::Array<GlobalNamespace::IDifficultyBeatmap*>* difficultyBeatmaps) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyTableView::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmaps)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, difficultyBeatmaps);
}
// Autogenerated method: DifficultyTableView.SetDifficultyBeatmaps
void GlobalNamespace::DifficultyTableView::SetDifficultyBeatmaps(::Array<GlobalNamespace::IDifficultyBeatmap*>* difficultyBeatmaps) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyTableView::SetDifficultyBeatmaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDifficultyBeatmaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmaps)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, difficultyBeatmaps);
}
// Autogenerated method: DifficultyTableView.CellSize
float GlobalNamespace::DifficultyTableView::CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyTableView::CellSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: DifficultyTableView.NumberOfCells
int GlobalNamespace::DifficultyTableView::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyTableView::NumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: DifficultyTableView.CellForIdx
HMUI::TableCell* GlobalNamespace::DifficultyTableView::CellForIdx(HMUI::TableView* tableView, int row) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyTableView::CellForIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(row)})));
  return ::il2cpp_utils::RunMethodThrow<HMUI::TableCell*, false>(this, ___internal__method, tableView, row);
}
// Autogenerated method: DifficultyTableView.HandleDidSelectRowEvent
void GlobalNamespace::DifficultyTableView::HandleDidSelectRowEvent(HMUI::TableView* tableView, int row) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyTableView::HandleDidSelectRowEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDidSelectRowEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(row)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tableView, row);
}
// Autogenerated method: DifficultyTableView.SelectRow
void GlobalNamespace::DifficultyTableView::SelectRow(int row, bool callbackTable) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyTableView::SelectRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row), ::il2cpp_utils::ExtractType(callbackTable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, row, callbackTable);
}
// Autogenerated method: DifficultyTableView.SelectRow
void GlobalNamespace::DifficultyTableView::SelectRow(GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, bool callbackTable) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyTableView::SelectRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SelectRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(difficultyBeatmap), ::il2cpp_utils::ExtractType(callbackTable)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, difficultyBeatmap, callbackTable);
}
// Autogenerated method: DifficultyTableView.ClearSelection
void GlobalNamespace::DifficultyTableView::ClearSelection() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DifficultyTableView::ClearSelection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearSelection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: DifficultyTableView::add_didSelectRow
// Il2CppName: add_didSelectRow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DifficultyTableView::*)(System::Action_2<GlobalNamespace::DifficultyTableView*, int>*)>(&DifficultyTableView::add_didSelectRow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DifficultyTableView*), "add_didSelectRow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::DifficultyTableView*, int>*>()});
  }
};
// Writing MetadataGetter for method: DifficultyTableView::remove_didSelectRow
// Il2CppName: remove_didSelectRow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DifficultyTableView::*)(System::Action_2<GlobalNamespace::DifficultyTableView*, int>*)>(&DifficultyTableView::remove_didSelectRow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DifficultyTableView*), "remove_didSelectRow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_2<GlobalNamespace::DifficultyTableView*, int>*>()});
  }
};
// Writing MetadataGetter for method: DifficultyTableView::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DifficultyTableView::*)(::Array<GlobalNamespace::IDifficultyBeatmap*>*)>(&DifficultyTableView::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DifficultyTableView*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<GlobalNamespace::IDifficultyBeatmap*>*>()});
  }
};
// Writing MetadataGetter for method: DifficultyTableView::SetDifficultyBeatmaps
// Il2CppName: SetDifficultyBeatmaps
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DifficultyTableView::*)(::Array<GlobalNamespace::IDifficultyBeatmap*>*)>(&DifficultyTableView::SetDifficultyBeatmaps)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DifficultyTableView*), "SetDifficultyBeatmaps", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Array<GlobalNamespace::IDifficultyBeatmap*>*>()});
  }
};
// Writing MetadataGetter for method: DifficultyTableView::CellSize
// Il2CppName: CellSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (DifficultyTableView::*)()>(&DifficultyTableView::CellSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DifficultyTableView*), "CellSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DifficultyTableView::NumberOfCells
// Il2CppName: NumberOfCells
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (DifficultyTableView::*)()>(&DifficultyTableView::NumberOfCells)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DifficultyTableView*), "NumberOfCells", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DifficultyTableView::CellForIdx
// Il2CppName: CellForIdx
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HMUI::TableCell* (DifficultyTableView::*)(HMUI::TableView*, int)>(&DifficultyTableView::CellForIdx)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DifficultyTableView*), "CellForIdx", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::TableView*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: DifficultyTableView::HandleDidSelectRowEvent
// Il2CppName: HandleDidSelectRowEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DifficultyTableView::*)(HMUI::TableView*, int)>(&DifficultyTableView::HandleDidSelectRowEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DifficultyTableView*), "HandleDidSelectRowEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::TableView*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: DifficultyTableView::SelectRow
// Il2CppName: SelectRow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DifficultyTableView::*)(int, bool)>(&DifficultyTableView::SelectRow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DifficultyTableView*), "SelectRow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: DifficultyTableView::SelectRow
// Il2CppName: SelectRow
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DifficultyTableView::*)(GlobalNamespace::IDifficultyBeatmap*, bool)>(&DifficultyTableView::SelectRow)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DifficultyTableView*), "SelectRow", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IDifficultyBeatmap*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: DifficultyTableView::ClearSelection
// Il2CppName: ClearSelection
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DifficultyTableView::*)()>(&DifficultyTableView::ClearSelection)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DifficultyTableView*), "ClearSelection", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DifficultyTableView::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DifficultyTableView::*)()>(&DifficultyTableView::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DifficultyTableView*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DifficultyTableView::*)()>(&DifficultyTableView::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DifficultyTableView*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DisconnectPromptView
#include "GlobalNamespace/DisconnectPromptView.hpp"
// Including type: DisconnectPromptView/<>c__DisplayClass12_0
#include "GlobalNamespace/DisconnectPromptView_--c__DisplayClass12_0.hpp"
// Including type: HMUI.PanelAnimationSO
#include "HMUI/PanelAnimationSO.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DisconnectPromptView.add_didViewFinishEvent
void GlobalNamespace::DisconnectPromptView::add_didViewFinishEvent(System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectPromptView::add_didViewFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didViewFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: DisconnectPromptView.remove_didViewFinishEvent
void GlobalNamespace::DisconnectPromptView::remove_didViewFinishEvent(System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectPromptView::remove_didViewFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didViewFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: DisconnectPromptView.OnEnable
void GlobalNamespace::DisconnectPromptView::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectPromptView::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DisconnectPromptView.OnDisable
void GlobalNamespace::DisconnectPromptView::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectPromptView::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DisconnectPromptView.Show
void GlobalNamespace::DisconnectPromptView::Show() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectPromptView::Show");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Show", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DisconnectPromptView.Hide
void GlobalNamespace::DisconnectPromptView::Hide(System::Action* finishedCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectPromptView::Hide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finishedCallback)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, finishedCallback);
}
// Autogenerated method: DisconnectPromptView.<OnEnable>b__9_0
void GlobalNamespace::DisconnectPromptView::$OnEnable$b__9_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectPromptView::<OnEnable>b__9_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__9_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DisconnectPromptView.<OnEnable>b__9_1
void GlobalNamespace::DisconnectPromptView::$OnEnable$b__9_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectPromptView::<OnEnable>b__9_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnEnable>b__9_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: DisconnectPromptView::add_didViewFinishEvent
// Il2CppName: add_didViewFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DisconnectPromptView::*)(System::Action_1<bool>*)>(&DisconnectPromptView::add_didViewFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DisconnectPromptView*), "add_didViewFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<bool>*>()});
  }
};
// Writing MetadataGetter for method: DisconnectPromptView::remove_didViewFinishEvent
// Il2CppName: remove_didViewFinishEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DisconnectPromptView::*)(System::Action_1<bool>*)>(&DisconnectPromptView::remove_didViewFinishEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DisconnectPromptView*), "remove_didViewFinishEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<bool>*>()});
  }
};
// Writing MetadataGetter for method: DisconnectPromptView::OnEnable
// Il2CppName: OnEnable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DisconnectPromptView::*)()>(&DisconnectPromptView::OnEnable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DisconnectPromptView*), "OnEnable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DisconnectPromptView::OnDisable
// Il2CppName: OnDisable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DisconnectPromptView::*)()>(&DisconnectPromptView::OnDisable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DisconnectPromptView*), "OnDisable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DisconnectPromptView::Show
// Il2CppName: Show
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DisconnectPromptView::*)()>(&DisconnectPromptView::Show)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DisconnectPromptView*), "Show", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DisconnectPromptView::Hide
// Il2CppName: Hide
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DisconnectPromptView::*)(System::Action*)>(&DisconnectPromptView::Hide)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DisconnectPromptView*), "Hide", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action*>()});
  }
};
// Writing MetadataGetter for method: DisconnectPromptView::$OnEnable$b__9_0
// Il2CppName: <OnEnable>b__9_0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DisconnectPromptView::*)()>(&DisconnectPromptView::$OnEnable$b__9_0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DisconnectPromptView*), "<OnEnable>b__9_0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DisconnectPromptView::$OnEnable$b__9_1
// Il2CppName: <OnEnable>b__9_1
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DisconnectPromptView::*)()>(&DisconnectPromptView::$OnEnable$b__9_1)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DisconnectPromptView*), "<OnEnable>b__9_1", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DisconnectPromptView::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DisconnectPromptView::*)()>(&DisconnectPromptView::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DisconnectPromptView*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DisconnectPromptView::*)()>(&DisconnectPromptView::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DisconnectPromptView*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DisconnectPromptView/<>c__DisplayClass12_0
#include "GlobalNamespace/DisconnectPromptView_--c__DisplayClass12_0.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DisconnectPromptView/<>c__DisplayClass12_0.<Hide>b__0
void GlobalNamespace::DisconnectPromptView::$$c__DisplayClass12_0::$Hide$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::DisconnectPromptView::$$c__DisplayClass12_0::<Hide>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Hide>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: DisconnectPromptView::$$c__DisplayClass12_0::$Hide$b__0
// Il2CppName: <Hide>b__0
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DisconnectPromptView::$$c__DisplayClass12_0::*)()>(&DisconnectPromptView::$$c__DisplayClass12_0::$Hide$b__0)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DisconnectPromptView::$$c__DisplayClass12_0*), "<Hide>b__0", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: DisconnectPromptView::$$c__DisplayClass12_0::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DisconnectPromptView::$$c__DisplayClass12_0::*)()>(&DisconnectPromptView::$$c__DisplayClass12_0::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DisconnectPromptView::$$c__DisplayClass12_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (DisconnectPromptView::$$c__DisplayClass12_0::*)()>(&DisconnectPromptView::$$c__DisplayClass12_0::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(DisconnectPromptView::$$c__DisplayClass12_0*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EditableBeatmapSelectionView
#include "GlobalNamespace/EditableBeatmapSelectionView.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EditableBeatmapSelectionView.get_editButton
UnityEngine::UI::Button* GlobalNamespace::EditableBeatmapSelectionView::get_editButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditableBeatmapSelectionView::get_editButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_editButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Button*, false>(this, ___internal__method);
}
// Autogenerated method: EditableBeatmapSelectionView.get_clearButton
UnityEngine::UI::Button* GlobalNamespace::EditableBeatmapSelectionView::get_clearButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditableBeatmapSelectionView::get_clearButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clearButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Button*, false>(this, ___internal__method);
}
// Autogenerated method: EditableBeatmapSelectionView.get_interactable
bool GlobalNamespace::EditableBeatmapSelectionView::get_interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditableBeatmapSelectionView::get_interactable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: EditableBeatmapSelectionView.set_interactable
void GlobalNamespace::EditableBeatmapSelectionView::set_interactable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditableBeatmapSelectionView::set_interactable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditableBeatmapSelectionView.SetBeatmap
void GlobalNamespace::EditableBeatmapSelectionView::SetBeatmap(GlobalNamespace::IPreviewBeatmapLevel* beatmapLevel, GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic, GlobalNamespace::BeatmapDifficulty beatmapDifficulty) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditableBeatmapSelectionView::SetBeatmap");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapLevel), ::il2cpp_utils::ExtractType(beatmapCharacteristic), ::il2cpp_utils::ExtractType(beatmapDifficulty)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapLevel, beatmapCharacteristic, beatmapDifficulty);
}
// Writing MetadataGetter for method: EditableBeatmapSelectionView::get_editButton
// Il2CppName: get_editButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Button* (EditableBeatmapSelectionView::*)()>(&EditableBeatmapSelectionView::get_editButton)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditableBeatmapSelectionView*), "get_editButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditableBeatmapSelectionView::get_clearButton
// Il2CppName: get_clearButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Button* (EditableBeatmapSelectionView::*)()>(&EditableBeatmapSelectionView::get_clearButton)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditableBeatmapSelectionView*), "get_clearButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditableBeatmapSelectionView::get_interactable
// Il2CppName: get_interactable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (EditableBeatmapSelectionView::*)()>(&EditableBeatmapSelectionView::get_interactable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditableBeatmapSelectionView*), "get_interactable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditableBeatmapSelectionView::set_interactable
// Il2CppName: set_interactable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditableBeatmapSelectionView::*)(bool)>(&EditableBeatmapSelectionView::set_interactable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditableBeatmapSelectionView*), "set_interactable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: EditableBeatmapSelectionView::SetBeatmap
// Il2CppName: SetBeatmap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditableBeatmapSelectionView::*)(GlobalNamespace::IPreviewBeatmapLevel*, GlobalNamespace::BeatmapCharacteristicSO*, GlobalNamespace::BeatmapDifficulty)>(&EditableBeatmapSelectionView::SetBeatmap)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditableBeatmapSelectionView*), "SetBeatmap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IPreviewBeatmapLevel*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapCharacteristicSO*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapDifficulty>()});
  }
};
// Writing MetadataGetter for method: EditableBeatmapSelectionView::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditableBeatmapSelectionView::*)()>(&EditableBeatmapSelectionView::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditableBeatmapSelectionView*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditableBeatmapSelectionView::*)()>(&EditableBeatmapSelectionView::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditableBeatmapSelectionView*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EditableModifiersSelectionView
#include "GlobalNamespace/EditableModifiersSelectionView.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EditableModifiersSelectionView.get_editButton
UnityEngine::UI::Button* GlobalNamespace::EditableModifiersSelectionView::get_editButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditableModifiersSelectionView::get_editButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_editButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Button*, false>(this, ___internal__method);
}
// Autogenerated method: EditableModifiersSelectionView.get_clearButton
UnityEngine::UI::Button* GlobalNamespace::EditableModifiersSelectionView::get_clearButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditableModifiersSelectionView::get_clearButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_clearButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Button*, false>(this, ___internal__method);
}
// Autogenerated method: EditableModifiersSelectionView.get_interactable
bool GlobalNamespace::EditableModifiersSelectionView::get_interactable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditableModifiersSelectionView::get_interactable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: EditableModifiersSelectionView.set_interactable
void GlobalNamespace::EditableModifiersSelectionView::set_interactable(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditableModifiersSelectionView::set_interactable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_interactable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: EditableModifiersSelectionView.SetGameplayModifiers
void GlobalNamespace::EditableModifiersSelectionView::SetGameplayModifiers(GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EditableModifiersSelectionView::SetGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, gameplayModifiers);
}
// Writing MetadataGetter for method: EditableModifiersSelectionView::get_editButton
// Il2CppName: get_editButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Button* (EditableModifiersSelectionView::*)()>(&EditableModifiersSelectionView::get_editButton)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditableModifiersSelectionView*), "get_editButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditableModifiersSelectionView::get_clearButton
// Il2CppName: get_clearButton
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<UnityEngine::UI::Button* (EditableModifiersSelectionView::*)()>(&EditableModifiersSelectionView::get_clearButton)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditableModifiersSelectionView*), "get_clearButton", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditableModifiersSelectionView::get_interactable
// Il2CppName: get_interactable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (EditableModifiersSelectionView::*)()>(&EditableModifiersSelectionView::get_interactable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditableModifiersSelectionView*), "get_interactable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: EditableModifiersSelectionView::set_interactable
// Il2CppName: set_interactable
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditableModifiersSelectionView::*)(bool)>(&EditableModifiersSelectionView::set_interactable)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditableModifiersSelectionView*), "set_interactable", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: EditableModifiersSelectionView::SetGameplayModifiers
// Il2CppName: SetGameplayModifiers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditableModifiersSelectionView::*)(GlobalNamespace::GameplayModifiers*)>(&EditableModifiersSelectionView::SetGameplayModifiers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditableModifiersSelectionView*), "SetGameplayModifiers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameplayModifiers*>()});
  }
};
// Writing MetadataGetter for method: EditableModifiersSelectionView::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditableModifiersSelectionView::*)()>(&EditableModifiersSelectionView::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditableModifiersSelectionView*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (EditableModifiersSelectionView::*)()>(&EditableModifiersSelectionView::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(EditableModifiersSelectionView*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: GameServerPlayersTableView
#include "GlobalNamespace/GameServerPlayersTableView.hpp"
// Including type: HMUI.TableView
#include "HMUI/TableView.hpp"
// Including type: GameServerPlayerTableCell
#include "GlobalNamespace/GameServerPlayerTableCell.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: AdditionalContentModel
#include "GlobalNamespace/AdditionalContentModel.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: ILobbyPlayersDataModel
#include "GlobalNamespace/ILobbyPlayersDataModel.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
// Including type: ILobbyPlayerDataModel
#include "GlobalNamespace/ILobbyPlayerDataModel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kCellId
::Il2CppString* GlobalNamespace::GameServerPlayersTableView::_get_kCellId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayersTableView::_get_kCellId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "GameServerPlayersTableView", "kCellId"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCellId
void GlobalNamespace::GameServerPlayersTableView::_set_kCellId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayersTableView::_set_kCellId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameServerPlayersTableView", "kCellId", value));
}
// Autogenerated method: GameServerPlayersTableView.add_selectSuggestedLevelEvent
void GlobalNamespace::GameServerPlayersTableView::add_selectSuggestedLevelEvent(System::Action_3<::Il2CppString*, GlobalNamespace::BeatmapCharacteristicSO*, GlobalNamespace::BeatmapDifficulty>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayersTableView::add_selectSuggestedLevelEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_selectSuggestedLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerPlayersTableView.remove_selectSuggestedLevelEvent
void GlobalNamespace::GameServerPlayersTableView::remove_selectSuggestedLevelEvent(System::Action_3<::Il2CppString*, GlobalNamespace::BeatmapCharacteristicSO*, GlobalNamespace::BeatmapDifficulty>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayersTableView::remove_selectSuggestedLevelEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_selectSuggestedLevelEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerPlayersTableView.add_selectSuggestedGameplayModifiersEvent
void GlobalNamespace::GameServerPlayersTableView::add_selectSuggestedGameplayModifiersEvent(System::Action_1<GlobalNamespace::GameplayModifiers*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayersTableView::add_selectSuggestedGameplayModifiersEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_selectSuggestedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerPlayersTableView.remove_selectSuggestedGameplayModifiersEvent
void GlobalNamespace::GameServerPlayersTableView::remove_selectSuggestedGameplayModifiersEvent(System::Action_1<GlobalNamespace::GameplayModifiers*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayersTableView::remove_selectSuggestedGameplayModifiersEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_selectSuggestedGameplayModifiersEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerPlayersTableView.add_kickPlayerEvent
void GlobalNamespace::GameServerPlayersTableView::add_kickPlayerEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayersTableView::add_kickPlayerEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_kickPlayerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerPlayersTableView.remove_kickPlayerEvent
void GlobalNamespace::GameServerPlayersTableView::remove_kickPlayerEvent(System::Action_1<::Il2CppString*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayersTableView::remove_kickPlayerEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_kickPlayerEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServerPlayersTableView.CellSize
float GlobalNamespace::GameServerPlayersTableView::CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayersTableView::CellSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: GameServerPlayersTableView.NumberOfCells
int GlobalNamespace::GameServerPlayersTableView::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayersTableView::NumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: GameServerPlayersTableView.CellForIdx
HMUI::TableCell* GlobalNamespace::GameServerPlayersTableView::CellForIdx(HMUI::TableView* tableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayersTableView::CellForIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodThrow<HMUI::TableCell*, false>(this, ___internal__method, tableView, idx);
}
// Autogenerated method: GameServerPlayersTableView.TryGetLobbyPlayerData
bool GlobalNamespace::GameServerPlayersTableView::TryGetLobbyPlayerData(int idx, GlobalNamespace::IConnectedPlayer*& player, GlobalNamespace::ILobbyPlayerDataModel*& playerDataModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayersTableView::TryGetLobbyPlayerData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetLobbyPlayerData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IConnectedPlayer*&>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ILobbyPlayerDataModel*&>()})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, idx, player, playerDataModel);
}
// Autogenerated method: GameServerPlayersTableView.HandleCellUseBeatmap
void GlobalNamespace::GameServerPlayersTableView::HandleCellUseBeatmap(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayersTableView::HandleCellUseBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCellUseBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: GameServerPlayersTableView.HandleCellUseModifiers
void GlobalNamespace::GameServerPlayersTableView::HandleCellUseModifiers(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayersTableView::HandleCellUseModifiers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCellUseModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: GameServerPlayersTableView.HandleCellKickPlayer
void GlobalNamespace::GameServerPlayersTableView::HandleCellKickPlayer(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayersTableView::HandleCellKickPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCellKickPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: GameServerPlayersTableView.SetData
void GlobalNamespace::GameServerPlayersTableView::SetData(System::Collections::Generic::List_1<GlobalNamespace::IConnectedPlayer*>* sortedPlayers, GlobalNamespace::ILobbyPlayersDataModel* lobbyPlayersDataModel, bool isHost, bool clearSelection) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayersTableView::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sortedPlayers), ::il2cpp_utils::ExtractType(lobbyPlayersDataModel), ::il2cpp_utils::ExtractType(isHost), ::il2cpp_utils::ExtractType(clearSelection)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, sortedPlayers, lobbyPlayersDataModel, isHost, clearSelection);
}
// Autogenerated method: GameServerPlayersTableView.Init
void GlobalNamespace::GameServerPlayersTableView::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServerPlayersTableView::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: GameServerPlayersTableView::add_selectSuggestedLevelEvent
// Il2CppName: add_selectSuggestedLevelEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServerPlayersTableView::*)(System::Action_3<::Il2CppString*, GlobalNamespace::BeatmapCharacteristicSO*, GlobalNamespace::BeatmapDifficulty>*)>(&GameServerPlayersTableView::add_selectSuggestedLevelEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServerPlayersTableView*), "add_selectSuggestedLevelEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_3<::Il2CppString*, GlobalNamespace::BeatmapCharacteristicSO*, GlobalNamespace::BeatmapDifficulty>*>()});
  }
};
// Writing MetadataGetter for method: GameServerPlayersTableView::remove_selectSuggestedLevelEvent
// Il2CppName: remove_selectSuggestedLevelEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServerPlayersTableView::*)(System::Action_3<::Il2CppString*, GlobalNamespace::BeatmapCharacteristicSO*, GlobalNamespace::BeatmapDifficulty>*)>(&GameServerPlayersTableView::remove_selectSuggestedLevelEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServerPlayersTableView*), "remove_selectSuggestedLevelEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_3<::Il2CppString*, GlobalNamespace::BeatmapCharacteristicSO*, GlobalNamespace::BeatmapDifficulty>*>()});
  }
};
// Writing MetadataGetter for method: GameServerPlayersTableView::add_selectSuggestedGameplayModifiersEvent
// Il2CppName: add_selectSuggestedGameplayModifiersEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServerPlayersTableView::*)(System::Action_1<GlobalNamespace::GameplayModifiers*>*)>(&GameServerPlayersTableView::add_selectSuggestedGameplayModifiersEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServerPlayersTableView*), "add_selectSuggestedGameplayModifiersEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::GameplayModifiers*>*>()});
  }
};
// Writing MetadataGetter for method: GameServerPlayersTableView::remove_selectSuggestedGameplayModifiersEvent
// Il2CppName: remove_selectSuggestedGameplayModifiersEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServerPlayersTableView::*)(System::Action_1<GlobalNamespace::GameplayModifiers*>*)>(&GameServerPlayersTableView::remove_selectSuggestedGameplayModifiersEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServerPlayersTableView*), "remove_selectSuggestedGameplayModifiersEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::GameplayModifiers*>*>()});
  }
};
// Writing MetadataGetter for method: GameServerPlayersTableView::add_kickPlayerEvent
// Il2CppName: add_kickPlayerEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServerPlayersTableView::*)(System::Action_1<::Il2CppString*>*)>(&GameServerPlayersTableView::add_kickPlayerEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServerPlayersTableView*), "add_kickPlayerEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: GameServerPlayersTableView::remove_kickPlayerEvent
// Il2CppName: remove_kickPlayerEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServerPlayersTableView::*)(System::Action_1<::Il2CppString*>*)>(&GameServerPlayersTableView::remove_kickPlayerEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServerPlayersTableView*), "remove_kickPlayerEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<::Il2CppString*>*>()});
  }
};
// Writing MetadataGetter for method: GameServerPlayersTableView::CellSize
// Il2CppName: CellSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (GameServerPlayersTableView::*)()>(&GameServerPlayersTableView::CellSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServerPlayersTableView*), "CellSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GameServerPlayersTableView::NumberOfCells
// Il2CppName: NumberOfCells
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GameServerPlayersTableView::*)()>(&GameServerPlayersTableView::NumberOfCells)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServerPlayersTableView*), "NumberOfCells", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GameServerPlayersTableView::CellForIdx
// Il2CppName: CellForIdx
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HMUI::TableCell* (GameServerPlayersTableView::*)(HMUI::TableView*, int)>(&GameServerPlayersTableView::CellForIdx)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServerPlayersTableView*), "CellForIdx", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::TableView*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: GameServerPlayersTableView::TryGetLobbyPlayerData
// Il2CppName: TryGetLobbyPlayerData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (GameServerPlayersTableView::*)(int, GlobalNamespace::IConnectedPlayer*&, GlobalNamespace::ILobbyPlayerDataModel*&)>(&GameServerPlayersTableView::TryGetLobbyPlayerData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServerPlayersTableView*), "TryGetLobbyPlayerData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::IConnectedPlayer*&>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ILobbyPlayerDataModel*&>()});
  }
};
// Writing MetadataGetter for method: GameServerPlayersTableView::HandleCellUseBeatmap
// Il2CppName: HandleCellUseBeatmap
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServerPlayersTableView::*)(int)>(&GameServerPlayersTableView::HandleCellUseBeatmap)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServerPlayersTableView*), "HandleCellUseBeatmap", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: GameServerPlayersTableView::HandleCellUseModifiers
// Il2CppName: HandleCellUseModifiers
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServerPlayersTableView::*)(int)>(&GameServerPlayersTableView::HandleCellUseModifiers)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServerPlayersTableView*), "HandleCellUseModifiers", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: GameServerPlayersTableView::HandleCellKickPlayer
// Il2CppName: HandleCellKickPlayer
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServerPlayersTableView::*)(int)>(&GameServerPlayersTableView::HandleCellKickPlayer)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServerPlayersTableView*), "HandleCellKickPlayer", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: GameServerPlayersTableView::SetData
// Il2CppName: SetData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServerPlayersTableView::*)(System::Collections::Generic::List_1<GlobalNamespace::IConnectedPlayer*>*, GlobalNamespace::ILobbyPlayersDataModel*, bool, bool)>(&GameServerPlayersTableView::SetData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServerPlayersTableView*), "SetData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<GlobalNamespace::IConnectedPlayer*>*>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::ILobbyPlayersDataModel*>(), ::il2cpp_utils::ExtractIndependentType<bool>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: GameServerPlayersTableView::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServerPlayersTableView::*)()>(&GameServerPlayersTableView::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServerPlayersTableView*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GameServerPlayersTableView::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServerPlayersTableView::*)()>(&GameServerPlayersTableView::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServerPlayersTableView*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServerPlayersTableView::*)()>(&GameServerPlayersTableView::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServerPlayersTableView*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameServersFilterText
#include "GlobalNamespace/GameServersFilterText.hpp"
// Including type: HMUI.CurvedTextMeshPro
#include "HMUI/CurvedTextMeshPro.hpp"
// Including type: SongPackMasksModel
#include "GlobalNamespace/SongPackMasksModel.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: GameServersFilter
#include "GlobalNamespace/GameServersFilter.hpp"
// Including type: BeatmapDifficultyMask
#include "GlobalNamespace/BeatmapDifficultyMask.hpp"
// Including type: SongPackMask
#include "GlobalNamespace/SongPackMask.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GameServersFilterText.Setup
void GlobalNamespace::GameServersFilterText::Setup(GlobalNamespace::GameServersFilter* filter) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServersFilterText::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filter)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, filter);
}
// Autogenerated method: GameServersFilterText.Setup
void GlobalNamespace::GameServersFilterText::Setup(GlobalNamespace::BeatmapDifficultyMask beatmapDifficultyMask, GlobalNamespace::SongPackMask songPackMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServersFilterText::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapDifficultyMask), ::il2cpp_utils::ExtractType(songPackMask)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapDifficultyMask, songPackMask);
}
// Writing MetadataGetter for method: GameServersFilterText::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServersFilterText::*)(GlobalNamespace::GameServersFilter*)>(&GameServersFilterText::Setup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServersFilterText*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::GameServersFilter*>()});
  }
};
// Writing MetadataGetter for method: GameServersFilterText::Setup
// Il2CppName: Setup
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServersFilterText::*)(GlobalNamespace::BeatmapDifficultyMask, GlobalNamespace::SongPackMask)>(&GameServersFilterText::Setup)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServersFilterText*), "Setup", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::BeatmapDifficultyMask>(), ::il2cpp_utils::ExtractIndependentType<GlobalNamespace::SongPackMask>()});
  }
};
// Writing MetadataGetter for method: GameServersFilterText::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServersFilterText::*)()>(&GameServersFilterText::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServersFilterText*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServersFilterText::*)()>(&GameServersFilterText::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServersFilterText*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: GameServersListTableView
#include "GlobalNamespace/GameServersListTableView.hpp"
// Including type: TableViewWithDetailCell
#include "GlobalNamespace/TableViewWithDetailCell.hpp"
// Including type: GameServerListTableCell
#include "GlobalNamespace/GameServerListTableCell.hpp"
// Including type: GameServerListDetailTableCell
#include "GlobalNamespace/GameServerListDetailTableCell.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: INetworkPlayer
#include "GlobalNamespace/INetworkPlayer.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: HMUI.TableView
#include "HMUI/TableView.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kCellReuseIdentifier
::Il2CppString* GlobalNamespace::GameServersListTableView::_get_kCellReuseIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServersListTableView::_get_kCellReuseIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "GameServersListTableView", "kCellReuseIdentifier"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCellReuseIdentifier
void GlobalNamespace::GameServersListTableView::_set_kCellReuseIdentifier(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServersListTableView::_set_kCellReuseIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameServersListTableView", "kCellReuseIdentifier", value));
}
// Autogenerated static field getter
// Get static field: static private System.String kDetailCellReuseIdentifier
::Il2CppString* GlobalNamespace::GameServersListTableView::_get_kDetailCellReuseIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServersListTableView::_get_kDetailCellReuseIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "GameServersListTableView", "kDetailCellReuseIdentifier"));
}
// Autogenerated static field setter
// Set static field: static private System.String kDetailCellReuseIdentifier
void GlobalNamespace::GameServersListTableView::_set_kDetailCellReuseIdentifier(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServersListTableView::_set_kDetailCellReuseIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameServersListTableView", "kDetailCellReuseIdentifier", value));
}
// Autogenerated method: GameServersListTableView.add_joinButtonPressedEvent
void GlobalNamespace::GameServersListTableView::add_joinButtonPressedEvent(System::Action_1<GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServersListTableView::add_joinButtonPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_joinButtonPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServersListTableView.remove_joinButtonPressedEvent
void GlobalNamespace::GameServersListTableView::remove_joinButtonPressedEvent(System::Action_1<GlobalNamespace::INetworkPlayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServersListTableView::remove_joinButtonPressedEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_joinButtonPressedEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GameServersListTableView.CellSize
float GlobalNamespace::GameServersListTableView::CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServersListTableView::CellSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: GameServersListTableView.NumberOfCells
int GlobalNamespace::GameServersListTableView::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServersListTableView::NumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: GameServersListTableView.Init
void GlobalNamespace::GameServersListTableView::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServersListTableView::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServersListTableView.CellForContent
HMUI::TableCell* GlobalNamespace::GameServersListTableView::CellForContent(GlobalNamespace::TableViewWithDetailCell* tableView, int idx, bool detailOpened) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServersListTableView::CellForContent");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(detailOpened)})));
  return ::il2cpp_utils::RunMethodThrow<HMUI::TableCell*, false>(this, ___internal__method, tableView, idx, detailOpened);
}
// Autogenerated method: GameServersListTableView.CellForDetail
HMUI::TableCell* GlobalNamespace::GameServersListTableView::CellForDetail(GlobalNamespace::TableViewWithDetailCell* tableView, int contentIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServersListTableView::CellForDetail");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForDetail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(contentIdx)})));
  return ::il2cpp_utils::RunMethodThrow<HMUI::TableCell*, false>(this, ___internal__method, tableView, contentIdx);
}
// Autogenerated method: GameServersListTableView.SetData
void GlobalNamespace::GameServersListTableView::SetData(System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>* servers, bool clearSelection) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServersListTableView::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(servers), ::il2cpp_utils::ExtractType(clearSelection)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, servers, clearSelection);
}
// Autogenerated method: GameServersListTableView.HandleGameServerListDetailTableCellJoinServerButtonWasPressed
void GlobalNamespace::GameServersListTableView::HandleGameServerListDetailTableCellJoinServerButtonWasPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServersListTableView::HandleGameServerListDetailTableCellJoinServerButtonWasPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleGameServerListDetailTableCellJoinServerButtonWasPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameServersListTableView.HandleTableViewDidSelectCellWithIdx
void GlobalNamespace::GameServersListTableView::HandleTableViewDidSelectCellWithIdx(HMUI::TableView* tableView, int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServersListTableView::HandleTableViewDidSelectCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleTableViewDidSelectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(id)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tableView, id);
}
// Autogenerated method: GameServersListTableView.HandleTableViewDidDeselectCellWithIdx
void GlobalNamespace::GameServersListTableView::HandleTableViewDidDeselectCellWithIdx(GlobalNamespace::TableViewWithDetailCell* arg1, int arg2) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServersListTableView::HandleTableViewDidDeselectCellWithIdx");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleTableViewDidDeselectCellWithIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(arg1), ::il2cpp_utils::ExtractType(arg2)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, arg1, arg2);
}
// Autogenerated method: GameServersListTableView.OnDestroy
void GlobalNamespace::GameServersListTableView::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameServersListTableView::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Writing MetadataGetter for method: GameServersListTableView::add_joinButtonPressedEvent
// Il2CppName: add_joinButtonPressedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServersListTableView::*)(System::Action_1<GlobalNamespace::INetworkPlayer*>*)>(&GameServersListTableView::add_joinButtonPressedEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServersListTableView*), "add_joinButtonPressedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::INetworkPlayer*>*>()});
  }
};
// Writing MetadataGetter for method: GameServersListTableView::remove_joinButtonPressedEvent
// Il2CppName: remove_joinButtonPressedEvent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServersListTableView::*)(System::Action_1<GlobalNamespace::INetworkPlayer*>*)>(&GameServersListTableView::remove_joinButtonPressedEvent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServersListTableView*), "remove_joinButtonPressedEvent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Action_1<GlobalNamespace::INetworkPlayer*>*>()});
  }
};
// Writing MetadataGetter for method: GameServersListTableView::CellSize
// Il2CppName: CellSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (GameServersListTableView::*)()>(&GameServersListTableView::CellSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServersListTableView*), "CellSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GameServersListTableView::NumberOfCells
// Il2CppName: NumberOfCells
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (GameServersListTableView::*)()>(&GameServersListTableView::NumberOfCells)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServersListTableView*), "NumberOfCells", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GameServersListTableView::Init
// Il2CppName: Init
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServersListTableView::*)()>(&GameServersListTableView::Init)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServersListTableView*), "Init", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GameServersListTableView::CellForContent
// Il2CppName: CellForContent
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HMUI::TableCell* (GameServersListTableView::*)(GlobalNamespace::TableViewWithDetailCell*, int, bool)>(&GameServersListTableView::CellForContent)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServersListTableView*), "CellForContent", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::TableViewWithDetailCell*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: GameServersListTableView::CellForDetail
// Il2CppName: CellForDetail
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HMUI::TableCell* (GameServersListTableView::*)(GlobalNamespace::TableViewWithDetailCell*, int)>(&GameServersListTableView::CellForDetail)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServersListTableView*), "CellForDetail", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::TableViewWithDetailCell*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: GameServersListTableView::SetData
// Il2CppName: SetData
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServersListTableView::*)(System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>*, bool)>(&GameServersListTableView::SetData)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServersListTableView*), "SetData", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::IEnumerable_1<GlobalNamespace::INetworkPlayer*>*>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: GameServersListTableView::HandleGameServerListDetailTableCellJoinServerButtonWasPressed
// Il2CppName: HandleGameServerListDetailTableCellJoinServerButtonWasPressed
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServersListTableView::*)()>(&GameServersListTableView::HandleGameServerListDetailTableCellJoinServerButtonWasPressed)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServersListTableView*), "HandleGameServerListDetailTableCellJoinServerButtonWasPressed", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GameServersListTableView::HandleTableViewDidSelectCellWithIdx
// Il2CppName: HandleTableViewDidSelectCellWithIdx
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServersListTableView::*)(HMUI::TableView*, int)>(&GameServersListTableView::HandleTableViewDidSelectCellWithIdx)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServersListTableView*), "HandleTableViewDidSelectCellWithIdx", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::TableView*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: GameServersListTableView::HandleTableViewDidDeselectCellWithIdx
// Il2CppName: HandleTableViewDidDeselectCellWithIdx
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServersListTableView::*)(GlobalNamespace::TableViewWithDetailCell*, int)>(&GameServersListTableView::HandleTableViewDidDeselectCellWithIdx)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServersListTableView*), "HandleTableViewDidDeselectCellWithIdx", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<GlobalNamespace::TableViewWithDetailCell*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: GameServersListTableView::OnDestroy
// Il2CppName: OnDestroy
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServersListTableView::*)()>(&GameServersListTableView::OnDestroy)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServersListTableView*), "OnDestroy", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: GameServersListTableView::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServersListTableView::*)()>(&GameServersListTableView::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServersListTableView*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (GameServersListTableView::*)()>(&GameServersListTableView::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(GameServersListTableView*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LeaderboardTableView
#include "GlobalNamespace/LeaderboardTableView.hpp"
// Including type: LeaderboardTableView/ScoreData
#include "GlobalNamespace/LeaderboardTableView_ScoreData.hpp"
// Including type: LeaderboardTableCell
#include "GlobalNamespace/LeaderboardTableCell.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kCellIdentifier
::Il2CppString* GlobalNamespace::LeaderboardTableView::_get_kCellIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableView::_get_kCellIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "LeaderboardTableView", "kCellIdentifier"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCellIdentifier
void GlobalNamespace::LeaderboardTableView::_set_kCellIdentifier(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableView::_set_kCellIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LeaderboardTableView", "kCellIdentifier", value));
}
// Autogenerated method: LeaderboardTableView.CellSize
float GlobalNamespace::LeaderboardTableView::CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableView::CellSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardTableView.NumberOfCells
int GlobalNamespace::LeaderboardTableView::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableView::NumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardTableView.CellForIdx
HMUI::TableCell* GlobalNamespace::LeaderboardTableView::CellForIdx(HMUI::TableView* tableView, int row) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableView::CellForIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(row)})));
  return ::il2cpp_utils::RunMethodThrow<HMUI::TableCell*, false>(this, ___internal__method, tableView, row);
}
// Autogenerated method: LeaderboardTableView.SetScores
void GlobalNamespace::LeaderboardTableView::SetScores(System::Collections::Generic::List_1<GlobalNamespace::LeaderboardTableView::ScoreData*>* scores, int specialScorePos) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableView::SetScores");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetScores", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scores), ::il2cpp_utils::ExtractType(specialScorePos)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, scores, specialScorePos);
}
// Writing MetadataGetter for method: LeaderboardTableView::CellSize
// Il2CppName: CellSize
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<float (LeaderboardTableView::*)()>(&LeaderboardTableView::CellSize)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardTableView*), "CellSize", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LeaderboardTableView::NumberOfCells
// Il2CppName: NumberOfCells
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (LeaderboardTableView::*)()>(&LeaderboardTableView::NumberOfCells)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardTableView*), "NumberOfCells", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LeaderboardTableView::CellForIdx
// Il2CppName: CellForIdx
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<HMUI::TableCell* (LeaderboardTableView::*)(HMUI::TableView*, int)>(&LeaderboardTableView::CellForIdx)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardTableView*), "CellForIdx", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<HMUI::TableView*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: LeaderboardTableView::SetScores
// Il2CppName: SetScores
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardTableView::*)(System::Collections::Generic::List_1<GlobalNamespace::LeaderboardTableView::ScoreData*>*, int)>(&LeaderboardTableView::SetScores)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardTableView*), "SetScores", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<System::Collections::Generic::List_1<GlobalNamespace::LeaderboardTableView::ScoreData*>*>(), ::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: LeaderboardTableView::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardTableView::*)()>(&LeaderboardTableView::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardTableView*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardTableView::*)()>(&LeaderboardTableView::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardTableView*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LeaderboardTableView/ScoreData
#include "GlobalNamespace/LeaderboardTableView_ScoreData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LeaderboardTableView/ScoreData.get_score
int GlobalNamespace::LeaderboardTableView::ScoreData::get_score() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableView::ScoreData::get_score");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_score", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardTableView/ScoreData.set_score
void GlobalNamespace::LeaderboardTableView::ScoreData::set_score(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableView::ScoreData::set_score");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_score", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardTableView/ScoreData.get_playerName
::Il2CppString* GlobalNamespace::LeaderboardTableView::ScoreData::get_playerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableView::ScoreData::get_playerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_playerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardTableView/ScoreData.set_playerName
void GlobalNamespace::LeaderboardTableView::ScoreData::set_playerName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableView::ScoreData::set_playerName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_playerName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardTableView/ScoreData.get_rank
int GlobalNamespace::LeaderboardTableView::ScoreData::get_rank() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableView::ScoreData::get_rank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardTableView/ScoreData.set_rank
void GlobalNamespace::LeaderboardTableView::ScoreData::set_rank(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableView::ScoreData::set_rank");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rank", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LeaderboardTableView/ScoreData.get_fullCombo
bool GlobalNamespace::LeaderboardTableView::ScoreData::get_fullCombo() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableView::ScoreData::get_fullCombo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_fullCombo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LeaderboardTableView/ScoreData.set_fullCombo
void GlobalNamespace::LeaderboardTableView::ScoreData::set_fullCombo(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LeaderboardTableView::ScoreData::set_fullCombo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_fullCombo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Writing MetadataGetter for method: LeaderboardTableView::ScoreData::get_score
// Il2CppName: get_score
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (LeaderboardTableView::ScoreData::*)()>(&LeaderboardTableView::ScoreData::get_score)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardTableView::ScoreData*), "get_score", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LeaderboardTableView::ScoreData::set_score
// Il2CppName: set_score
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardTableView::ScoreData::*)(int)>(&LeaderboardTableView::ScoreData::set_score)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardTableView::ScoreData*), "set_score", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: LeaderboardTableView::ScoreData::get_playerName
// Il2CppName: get_playerName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<::Il2CppString* (LeaderboardTableView::ScoreData::*)()>(&LeaderboardTableView::ScoreData::get_playerName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardTableView::ScoreData*), "get_playerName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LeaderboardTableView::ScoreData::set_playerName
// Il2CppName: set_playerName
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardTableView::ScoreData::*)(::Il2CppString*)>(&LeaderboardTableView::ScoreData::set_playerName)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardTableView::ScoreData*), "set_playerName", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<::Il2CppString*>()});
  }
};
// Writing MetadataGetter for method: LeaderboardTableView::ScoreData::get_rank
// Il2CppName: get_rank
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<int (LeaderboardTableView::ScoreData::*)()>(&LeaderboardTableView::ScoreData::get_rank)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardTableView::ScoreData*), "get_rank", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LeaderboardTableView::ScoreData::set_rank
// Il2CppName: set_rank
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardTableView::ScoreData::*)(int)>(&LeaderboardTableView::ScoreData::set_rank)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardTableView::ScoreData*), "set_rank", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>()});
  }
};
// Writing MetadataGetter for method: LeaderboardTableView::ScoreData::get_fullCombo
// Il2CppName: get_fullCombo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<bool (LeaderboardTableView::ScoreData::*)()>(&LeaderboardTableView::ScoreData::get_fullCombo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardTableView::ScoreData*), "get_fullCombo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{});
  }
};
// Writing MetadataGetter for method: LeaderboardTableView::ScoreData::set_fullCombo
// Il2CppName: set_fullCombo
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardTableView::ScoreData::*)(bool)>(&LeaderboardTableView::ScoreData::set_fullCombo)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardTableView::ScoreData*), "set_fullCombo", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
// Writing MetadataGetter for method: LeaderboardTableView::ScoreData::New_ctor
// Il2CppName: .ctor
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardTableView::ScoreData::*)(int, ::Il2CppString*, int, bool)>(&LeaderboardTableView::ScoreData::New_ctor<::il2cpp_utils::CreationType::Temporary>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardTableView::ScoreData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
template<>
struct ::il2cpp_utils::il2cpp_type_check::MetadataGetter<static_cast<void (LeaderboardTableView::ScoreData::*)(int, ::Il2CppString*, int, bool)>(&LeaderboardTableView::ScoreData::New_ctor<::il2cpp_utils::CreationType::Manual>)> {
  const MethodInfo* get() {
    return ::il2cpp_utils::FindMethod(classof(LeaderboardTableView::ScoreData*), ".ctor", std::vector<Il2CppClass*>(), ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<::Il2CppString*>(), ::il2cpp_utils::ExtractIndependentType<int>(), ::il2cpp_utils::ExtractIndependentType<bool>()});
  }
};
