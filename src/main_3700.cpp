// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalLeaderboardTableView
#include "GlobalNamespace/LocalLeaderboardTableView.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: LocalLeaderboardsModel/ScoreData
#include "GlobalNamespace/LocalLeaderboardsModel_ScoreData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LocalLeaderboardTableView.SetScores
void GlobalNamespace::LocalLeaderboardTableView::SetScores(System::Collections::Generic::List_1<GlobalNamespace::LocalLeaderboardsModel::ScoreData*>* scores, int specialScorePos, int maxNumberOfCells) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalLeaderboardTableView::SetScores");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetScores", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(scores), ::il2cpp_utils::ExtractType(specialScorePos), ::il2cpp_utils::ExtractType(maxNumberOfCells)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, scores, specialScorePos, maxNumberOfCells);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ModifiersSelectionView
#include "GlobalNamespace/ModifiersSelectionView.hpp"
// Including type: ModifiersSelectionView/<>c__DisplayClass3_0
#include "GlobalNamespace/ModifiersSelectionView_--c__DisplayClass3_0.hpp"
// Including type: GameplayModifierInfoListItemsList
#include "GlobalNamespace/GameplayModifierInfoListItemsList.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: GameplayModifiersModelSO
#include "GlobalNamespace/GameplayModifiersModelSO.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ModifiersSelectionView.SetGameplayModifiers
void GlobalNamespace::ModifiersSelectionView::SetGameplayModifiers(GlobalNamespace::GameplayModifiers* gameplayModifiers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ModifiersSelectionView::SetGameplayModifiers");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGameplayModifiers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameplayModifiers)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, gameplayModifiers);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ModifiersSelectionView/<>c__DisplayClass3_0
#include "GlobalNamespace/ModifiersSelectionView_--c__DisplayClass3_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: GameplayModifierParamsSO
#include "GlobalNamespace/GameplayModifierParamsSO.hpp"
// Including type: GameplayModifierInfoListItem
#include "GlobalNamespace/GameplayModifierInfoListItem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ModifiersSelectionView/<>c__DisplayClass3_0.<SetGameplayModifiers>b__0
void GlobalNamespace::ModifiersSelectionView::$$c__DisplayClass3_0::$SetGameplayModifiers$b__0(int idx, GlobalNamespace::GameplayModifierInfoListItem* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ModifiersSelectionView::$$c__DisplayClass3_0::<SetGameplayModifiers>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SetGameplayModifiers>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(idx), ::il2cpp_utils::ExtractType(item)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, idx, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerResultsTableCell
#include "GlobalNamespace/MultiplayerResultsTableCell.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: TubeBloomPrePassLight
#include "GlobalNamespace/TubeBloomPrePassLight.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: MultiplayerResultsAvatarController
#include "GlobalNamespace/MultiplayerResultsAvatarController.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerResultsTableCell.set_alpha
void GlobalNamespace::MultiplayerResultsTableCell::set_alpha(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerResultsTableCell::set_alpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_alpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerResultsTableCell.SetData
void GlobalNamespace::MultiplayerResultsTableCell::SetData(GlobalNamespace::IConnectedPlayer* connectedPlayer, int position, ::Il2CppString* playerName, GlobalNamespace::LevelCompletionResults* levelCompletionResults, bool isLocalPlayer, int numberOfPlayers) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerResultsTableCell::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(connectedPlayer), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(playerName), ::il2cpp_utils::ExtractType(levelCompletionResults), ::il2cpp_utils::ExtractType(isLocalPlayer), ::il2cpp_utils::ExtractType(numberOfPlayers)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, connectedPlayer, position, playerName, levelCompletionResults, isLocalPlayer, numberOfPlayers);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerResultsTableView
#include "GlobalNamespace/MultiplayerResultsTableView.hpp"
// Including type: MultiplayerResultsTableView/<>c__DisplayClass30_0
#include "GlobalNamespace/MultiplayerResultsTableView_--c__DisplayClass30_0.hpp"
// Including type: MultiplayerResultsTableView/<>c__DisplayClass30_1
#include "GlobalNamespace/MultiplayerResultsTableView_--c__DisplayClass30_1.hpp"
// Including type: MultiplayerResultsTableView/<PlayRandomRowSlideInSound>d__31
#include "GlobalNamespace/MultiplayerResultsTableView_-PlayRandomRowSlideInSound-d__31.hpp"
// Including type: MultiplayerResultsTableView/<PlayAvatarSlideInSound>d__32
#include "GlobalNamespace/MultiplayerResultsTableView_-PlayAvatarSlideInSound-d__32.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: MultiplayerResultsTableCell
#include "GlobalNamespace/MultiplayerResultsTableCell.hpp"
// Including type: MultiplayerOffsetPositionByLocalPlayerPosition
#include "GlobalNamespace/MultiplayerOffsetPositionByLocalPlayerPosition.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: Tweening.TweeningManager
#include "Tweening/TweeningManager.hpp"
// Including type: MultiplayerLayoutProvider
#include "GlobalNamespace/MultiplayerLayoutProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: MultiplayerPlayerResultsData
#include "GlobalNamespace/MultiplayerPlayerResultsData.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kCellIdentifier
::Il2CppString* GlobalNamespace::MultiplayerResultsTableView::_get_kCellIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerResultsTableView::_get_kCellIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "MultiplayerResultsTableView", "kCellIdentifier"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCellIdentifier
void GlobalNamespace::MultiplayerResultsTableView::_set_kCellIdentifier(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerResultsTableView::_set_kCellIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "MultiplayerResultsTableView", "kCellIdentifier", value));
}
// Autogenerated method: MultiplayerResultsTableView.CellSize
float GlobalNamespace::MultiplayerResultsTableView::CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerResultsTableView::CellSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView.NumberOfCells
int GlobalNamespace::MultiplayerResultsTableView::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerResultsTableView::NumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView.Awake
void GlobalNamespace::MultiplayerResultsTableView::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerResultsTableView::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView.OnDestroy
void GlobalNamespace::MultiplayerResultsTableView::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerResultsTableView::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView.CellForIdx
HMUI::TableCell* GlobalNamespace::MultiplayerResultsTableView::CellForIdx(HMUI::TableView* tableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerResultsTableView::CellForIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodThrow<HMUI::TableCell*, false>(this, ___internal__method, tableView, idx);
}
// Autogenerated method: MultiplayerResultsTableView.SetData
void GlobalNamespace::MultiplayerResultsTableView::SetData(System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::MultiplayerPlayerResultsData*>* dataList) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerResultsTableView::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataList)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, dataList);
}
// Autogenerated method: MultiplayerResultsTableView.StartAnimation
float GlobalNamespace::MultiplayerResultsTableView::StartAnimation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerResultsTableView::StartAnimation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartAnimation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView.PlayRandomRowSlideInSound
System::Collections::IEnumerator* GlobalNamespace::MultiplayerResultsTableView::PlayRandomRowSlideInSound(float delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerResultsTableView::PlayRandomRowSlideInSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayRandomRowSlideInSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delay)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, delay);
}
// Autogenerated method: MultiplayerResultsTableView.PlayAvatarSlideInSound
System::Collections::IEnumerator* GlobalNamespace::MultiplayerResultsTableView::PlayAvatarSlideInSound(float delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerResultsTableView::PlayAvatarSlideInSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayAvatarSlideInSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delay)})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method, delay);
}
// Autogenerated method: MultiplayerResultsTableView.<StartAnimation>b__30_1
void GlobalNamespace::MultiplayerResultsTableView::$StartAnimation$b__30_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerResultsTableView::<StartAnimation>b__30_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartAnimation>b__30_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView.<StartAnimation>b__30_4
void GlobalNamespace::MultiplayerResultsTableView::$StartAnimation$b__30_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerResultsTableView::<StartAnimation>b__30_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartAnimation>b__30_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView.<StartAnimation>b__30_5
void GlobalNamespace::MultiplayerResultsTableView::$StartAnimation$b__30_5(float val) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerResultsTableView::<StartAnimation>b__30_5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartAnimation>b__30_5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, val);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerResultsTableView/<>c__DisplayClass30_0
#include "GlobalNamespace/MultiplayerResultsTableView_--c__DisplayClass30_0.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: MultiplayerResultsTableCell
#include "GlobalNamespace/MultiplayerResultsTableCell.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerResultsTableView/<>c__DisplayClass30_0.<StartAnimation>b__0
void GlobalNamespace::MultiplayerResultsTableView::$$c__DisplayClass30_0::$StartAnimation$b__0(UnityEngine::Vector2 val) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerResultsTableView::$$c__DisplayClass30_0::<StartAnimation>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartAnimation>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: MultiplayerResultsTableView/<>c__DisplayClass30_0.<StartAnimation>b__2
void GlobalNamespace::MultiplayerResultsTableView::$$c__DisplayClass30_0::$StartAnimation$b__2(float val) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerResultsTableView::$$c__DisplayClass30_0::<StartAnimation>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartAnimation>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, val);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerResultsTableView/<>c__DisplayClass30_1
#include "GlobalNamespace/MultiplayerResultsTableView_--c__DisplayClass30_1.hpp"
// Including type: UnityEngine.RectTransform
#include "UnityEngine/RectTransform.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerResultsTableView/<>c__DisplayClass30_1.<StartAnimation>b__3
void GlobalNamespace::MultiplayerResultsTableView::$$c__DisplayClass30_1::$StartAnimation$b__3(UnityEngine::Vector2 val) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerResultsTableView::$$c__DisplayClass30_1::<StartAnimation>b__3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartAnimation>b__3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, val);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerResultsTableView/<PlayRandomRowSlideInSound>d__31
#include "GlobalNamespace/MultiplayerResultsTableView_-PlayRandomRowSlideInSound-d__31.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerResultsTableView/<PlayRandomRowSlideInSound>d__31.System.IDisposable.Dispose
void GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView/<PlayRandomRowSlideInSound>d__31.MoveNext
bool GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView/<PlayRandomRowSlideInSound>d__31.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView/<PlayRandomRowSlideInSound>d__31.System.Collections.IEnumerator.Reset
void GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView/<PlayRandomRowSlideInSound>d__31.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerResultsTableView::$PlayRandomRowSlideInSound$d__31::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerResultsTableView/<PlayAvatarSlideInSound>d__32
#include "GlobalNamespace/MultiplayerResultsTableView_-PlayAvatarSlideInSound-d__32.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerResultsTableView/<PlayAvatarSlideInSound>d__32.System.IDisposable.Dispose
void GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView/<PlayAvatarSlideInSound>d__32.MoveNext
bool GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView/<PlayAvatarSlideInSound>d__32.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView/<PlayAvatarSlideInSound>d__32.System.Collections.IEnumerator.Reset
void GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerResultsTableView/<PlayAvatarSlideInSound>d__32.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerResultsTableView::$PlayAvatarSlideInSound$d__32::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ObjectiveListItem
#include "GlobalNamespace/ObjectiveListItem.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ObjectiveListItem.set_title
void GlobalNamespace::ObjectiveListItem::set_title(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObjectiveListItem::set_title");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_title", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ObjectiveListItem.set_conditionText
void GlobalNamespace::ObjectiveListItem::set_conditionText(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObjectiveListItem::set_conditionText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_conditionText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ObjectiveListItem.set_hideCondition
void GlobalNamespace::ObjectiveListItem::set_hideCondition(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ObjectiveListItem::set_hideCondition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hideCondition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ObjectiveListItemsList
#include "GlobalNamespace/ObjectiveListItemsList.hpp"
// Including type: ObjectiveListItem
#include "GlobalNamespace/ObjectiveListItem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ResultObjectiveListItem
#include "GlobalNamespace/ResultObjectiveListItem.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ResultObjectiveListItem.set_iconColor
void GlobalNamespace::ResultObjectiveListItem::set_iconColor(UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResultObjectiveListItem::set_iconColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_iconColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ResultObjectiveListItem.set_icon
void GlobalNamespace::ResultObjectiveListItem::set_icon(UnityEngine::Sprite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResultObjectiveListItem::set_icon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_icon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ResultObjectiveListItem.set_iconGlow
void GlobalNamespace::ResultObjectiveListItem::set_iconGlow(UnityEngine::Sprite* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResultObjectiveListItem::set_iconGlow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_iconGlow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ResultObjectiveListItem.set_title
void GlobalNamespace::ResultObjectiveListItem::set_title(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResultObjectiveListItem::set_title");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_title", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ResultObjectiveListItem.set_conditionText
void GlobalNamespace::ResultObjectiveListItem::set_conditionText(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResultObjectiveListItem::set_conditionText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_conditionText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ResultObjectiveListItem.set_hideConditionText
void GlobalNamespace::ResultObjectiveListItem::set_hideConditionText(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResultObjectiveListItem::set_hideConditionText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hideConditionText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ResultObjectiveListItem.set_valueText
void GlobalNamespace::ResultObjectiveListItem::set_valueText(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResultObjectiveListItem::set_valueText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_valueText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ResultObjectiveListItem.set_hideValueText
void GlobalNamespace::ResultObjectiveListItem::set_hideValueText(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResultObjectiveListItem::set_hideValueText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hideValueText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ResultObjectiveListItemsList
#include "GlobalNamespace/ResultObjectiveListItemsList.hpp"
// Including type: ResultObjectiveListItem
#include "GlobalNamespace/ResultObjectiveListItem.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ResultsTableCell
#include "GlobalNamespace/ResultsTableCell.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: IConnectedPlayer
#include "GlobalNamespace/IConnectedPlayer.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ResultsTableCell.SetData
void GlobalNamespace::ResultsTableCell::SetData(int order, GlobalNamespace::IConnectedPlayer* connectedPlayer, GlobalNamespace::LevelCompletionResults* levelCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResultsTableCell::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(order), ::il2cpp_utils::ExtractType(connectedPlayer), ::il2cpp_utils::ExtractType(levelCompletionResults)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, order, connectedPlayer, levelCompletionResults);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ResultsTableView
#include "GlobalNamespace/ResultsTableView.hpp"
// Including type: HMUI.TableView
#include "HMUI/TableView.hpp"
// Including type: ResultsTableCell
#include "GlobalNamespace/ResultsTableCell.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: MultiplayerPlayerResultsData
#include "GlobalNamespace/MultiplayerPlayerResultsData.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: HMUI.TableCell
#include "HMUI/TableCell.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String kCellIdentifier
::Il2CppString* GlobalNamespace::ResultsTableView::_get_kCellIdentifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResultsTableView::_get_kCellIdentifier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("", "ResultsTableView", "kCellIdentifier"));
}
// Autogenerated static field setter
// Set static field: static private System.String kCellIdentifier
void GlobalNamespace::ResultsTableView::_set_kCellIdentifier(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResultsTableView::_set_kCellIdentifier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ResultsTableView", "kCellIdentifier", value));
}
// Autogenerated method: ResultsTableView.CellSize
float GlobalNamespace::ResultsTableView::CellSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResultsTableView::CellSize");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: ResultsTableView.NumberOfCells
int GlobalNamespace::ResultsTableView::NumberOfCells() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResultsTableView::NumberOfCells");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NumberOfCells", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: ResultsTableView.CellForIdx
HMUI::TableCell* GlobalNamespace::ResultsTableView::CellForIdx(HMUI::TableView* tableView, int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResultsTableView::CellForIdx");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CellForIdx", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tableView), ::il2cpp_utils::ExtractType(idx)})));
  return ::il2cpp_utils::RunMethodThrow<HMUI::TableCell*, false>(this, ___internal__method, tableView, idx);
}
// Autogenerated method: ResultsTableView.SetData
void GlobalNamespace::ResultsTableView::SetData(System::Collections::Generic::IReadOnlyList_1<GlobalNamespace::MultiplayerPlayerResultsData*>* dataList) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ResultsTableView::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(dataList)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, dataList);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ServerCodeView
#include "GlobalNamespace/ServerCodeView.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ServerCodeView.SetCode
void GlobalNamespace::ServerCodeView::SetCode(::Il2CppString* serverCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ServerCodeView::SetCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serverCode)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serverCode);
}
// Autogenerated method: ServerCodeView.OnEnable
void GlobalNamespace::ServerCodeView::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ServerCodeView::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ServerCodeView.OnDisable
void GlobalNamespace::ServerCodeView::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ServerCodeView::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ServerCodeView.HandleShowServerCodeButtonPressed
void GlobalNamespace::ServerCodeView::HandleShowServerCodeButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ServerCodeView::HandleShowServerCodeButtonPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleShowServerCodeButtonPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ServerCodeView.RefreshText
void GlobalNamespace::ServerCodeView::RefreshText(bool showCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ServerCodeView::RefreshText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(showCode)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, showCode);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandardLevelBuyInfoView
#include "GlobalNamespace/StandardLevelBuyInfoView.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: StandardLevelBuyInfoView.get_buyLevelButton
UnityEngine::UI::Button* GlobalNamespace::StandardLevelBuyInfoView::get_buyLevelButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelBuyInfoView::get_buyLevelButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_buyLevelButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Button*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelBuyInfoView.get_openPackButton
UnityEngine::UI::Button* GlobalNamespace::StandardLevelBuyInfoView::get_openPackButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelBuyInfoView::get_openPackButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_openPackButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Button*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelBuyInfoView.get_buyPackButton
UnityEngine::UI::Button* GlobalNamespace::StandardLevelBuyInfoView::get_buyPackButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelBuyInfoView::get_buyPackButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_buyPackButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Button*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelBuyInfoView.RefreshView
void GlobalNamespace::StandardLevelBuyInfoView::RefreshView(::Il2CppString* infoText, bool canBuyPack) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelBuyInfoView::RefreshView");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshView", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(infoText), ::il2cpp_utils::ExtractType(canBuyPack)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, infoText, canBuyPack);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StandardLevelBuyView
#include "GlobalNamespace/StandardLevelBuyView.hpp"
// Including type: LevelBar
#include "GlobalNamespace/LevelBar.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: StandardLevelBuyView.get_buyButton
UnityEngine::UI::Button* GlobalNamespace::StandardLevelBuyView::get_buyButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelBuyView::get_buyButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_buyButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Button*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelBuyView.SetContent
void GlobalNamespace::StandardLevelBuyView::SetContent(GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelBuyView::SetContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(previewBeatmapLevel)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, previewBeatmapLevel);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandardLevelDetailView
#include "GlobalNamespace/StandardLevelDetailView.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: TMPro.TextMeshProUGUI
#include "TMPro/TextMeshProUGUI.hpp"
// Including type: LevelBar
#include "GlobalNamespace/LevelBar.hpp"
// Including type: LevelParamsPanel
#include "GlobalNamespace/LevelParamsPanel.hpp"
// Including type: BeatmapDifficultySegmentedControlController
#include "GlobalNamespace/BeatmapDifficultySegmentedControlController.hpp"
// Including type: BeatmapCharacteristicSegmentedControlController
#include "GlobalNamespace/BeatmapCharacteristicSegmentedControlController.hpp"
// Including type: UnityEngine.UI.Toggle
#include "UnityEngine/UI/Toggle.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: IBeatmapLevel
#include "GlobalNamespace/IBeatmapLevel.hpp"
// Including type: PlayerData
#include "GlobalNamespace/PlayerData.hpp"
// Including type: HMUI.ToggleBinder
#include "HMUI/ToggleBinder.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: StandardLevelDetailView.add_didChangeDifficultyBeatmapEvent
void GlobalNamespace::StandardLevelDetailView::add_didChangeDifficultyBeatmapEvent(System::Action_2<GlobalNamespace::StandardLevelDetailView*, GlobalNamespace::IDifficultyBeatmap*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailView::add_didChangeDifficultyBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didChangeDifficultyBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelDetailView.remove_didChangeDifficultyBeatmapEvent
void GlobalNamespace::StandardLevelDetailView::remove_didChangeDifficultyBeatmapEvent(System::Action_2<GlobalNamespace::StandardLevelDetailView*, GlobalNamespace::IDifficultyBeatmap*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailView::remove_didChangeDifficultyBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didChangeDifficultyBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelDetailView.add_didFavoriteToggleChangeEvent
void GlobalNamespace::StandardLevelDetailView::add_didFavoriteToggleChangeEvent(System::Action_2<GlobalNamespace::StandardLevelDetailView*, UnityEngine::UI::Toggle*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailView::add_didFavoriteToggleChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFavoriteToggleChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelDetailView.remove_didFavoriteToggleChangeEvent
void GlobalNamespace::StandardLevelDetailView::remove_didFavoriteToggleChangeEvent(System::Action_2<GlobalNamespace::StandardLevelDetailView*, UnityEngine::UI::Toggle*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailView::remove_didFavoriteToggleChangeEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFavoriteToggleChangeEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelDetailView.get_selectedDifficultyBeatmap
GlobalNamespace::IDifficultyBeatmap* GlobalNamespace::StandardLevelDetailView::get_selectedDifficultyBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailView::get_selectedDifficultyBeatmap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_selectedDifficultyBeatmap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IDifficultyBeatmap*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailView.get_actionButton
UnityEngine::UI::Button* GlobalNamespace::StandardLevelDetailView::get_actionButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailView::get_actionButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_actionButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Button*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailView.set_actionButtonText
void GlobalNamespace::StandardLevelDetailView::set_actionButtonText(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailView::set_actionButtonText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_actionButtonText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelDetailView.get_practiceButton
UnityEngine::UI::Button* GlobalNamespace::StandardLevelDetailView::get_practiceButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailView::get_practiceButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_practiceButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::UI::Button*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailView.set_hidePracticeButton
void GlobalNamespace::StandardLevelDetailView::set_hidePracticeButton(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailView::set_hidePracticeButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hidePracticeButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelDetailView.set_disableActionButton
void GlobalNamespace::StandardLevelDetailView::set_disableActionButton(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailView::set_disableActionButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_disableActionButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelDetailView.SetContent
void GlobalNamespace::StandardLevelDetailView::SetContent(GlobalNamespace::IBeatmapLevel* level, GlobalNamespace::BeatmapDifficulty defaultDifficulty, GlobalNamespace::BeatmapCharacteristicSO* defaultBeatmapCharacteristic, GlobalNamespace::PlayerData* playerData, bool showPlayerStats) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailView::SetContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(level), ::il2cpp_utils::ExtractType(defaultDifficulty), ::il2cpp_utils::ExtractType(defaultBeatmapCharacteristic), ::il2cpp_utils::ExtractType(playerData), ::il2cpp_utils::ExtractType(showPlayerStats)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, level, defaultDifficulty, defaultBeatmapCharacteristic, playerData, showPlayerStats);
}
// Autogenerated method: StandardLevelDetailView.Awake
void GlobalNamespace::StandardLevelDetailView::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailView::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailView.OnDestroy
void GlobalNamespace::StandardLevelDetailView::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailView::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailView.HandleBeatmapDifficultySegmentedControlControllerDidSelectDifficulty
void GlobalNamespace::StandardLevelDetailView::HandleBeatmapDifficultySegmentedControlControllerDidSelectDifficulty(GlobalNamespace::BeatmapDifficultySegmentedControlController* controller, GlobalNamespace::BeatmapDifficulty difficulty) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailView::HandleBeatmapDifficultySegmentedControlControllerDidSelectDifficulty");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapDifficultySegmentedControlControllerDidSelectDifficulty", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller), ::il2cpp_utils::ExtractType(difficulty)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, controller, difficulty);
}
// Autogenerated method: StandardLevelDetailView.HandleBeatmapCharacteristicSegmentedControlControllerDidSelectBeatmapCharacteristic
void GlobalNamespace::StandardLevelDetailView::HandleBeatmapCharacteristicSegmentedControlControllerDidSelectBeatmapCharacteristic(GlobalNamespace::BeatmapCharacteristicSegmentedControlController* controller, GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailView::HandleBeatmapCharacteristicSegmentedControlControllerDidSelectBeatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapCharacteristicSegmentedControlControllerDidSelectBeatmapCharacteristic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller), ::il2cpp_utils::ExtractType(beatmapCharacteristic)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, controller, beatmapCharacteristic);
}
// Autogenerated method: StandardLevelDetailView.RefreshContent
void GlobalNamespace::StandardLevelDetailView::RefreshContent() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailView::RefreshContent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshContent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelDetailView.<Awake>b__32_0
void GlobalNamespace::StandardLevelDetailView::$Awake$b__32_0(bool on) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelDetailView::<Awake>b__32_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Awake>b__32_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(on)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, on);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: AssetObjectListSO
#include "GlobalNamespace/AssetObjectListSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AssetObjectListSO.get_objects
::Array<UnityEngine::Object*>* GlobalNamespace::AssetObjectListSO::get_objects() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AssetObjectListSO::get_objects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_objects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<UnityEngine::Object*>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BloomPrePassBackgroundColorsGradientFromColorSchemeColors
#include "GlobalNamespace/BloomPrePassBackgroundColorsGradientFromColorSchemeColors.hpp"
// Including type: BloomPrePassBackgroundColorsGradient
#include "GlobalNamespace/BloomPrePassBackgroundColorsGradient.hpp"
// Including type: EnvironmentColorManager
#include "GlobalNamespace/EnvironmentColorManager.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BloomPrePassBackgroundColorsGradientFromColorSchemeColors.Start
void GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BloomPrePassBackgroundColorsGradientFromColorSchemeColors::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorManager
#include "GlobalNamespace/ColorManager.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: ColorType
#include "GlobalNamespace/ColorType.hpp"
// Including type: SaberType
#include "GlobalNamespace/SaberType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ColorManager.get_obstaclesColor
UnityEngine::Color GlobalNamespace::ColorManager::get_obstaclesColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorManager::get_obstaclesColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_obstaclesColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: ColorManager.ColorForType
UnityEngine::Color GlobalNamespace::ColorManager::ColorForType(GlobalNamespace::ColorType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorManager::ColorForType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ColorForType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method, type);
}
// Autogenerated method: ColorManager.ColorForSaberType
UnityEngine::Color GlobalNamespace::ColorManager::ColorForSaberType(GlobalNamespace::SaberType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorManager::ColorForSaberType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ColorForSaberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method, type);
}
// Autogenerated method: ColorManager.EffectsColorForSaberType
UnityEngine::Color GlobalNamespace::ColorManager::EffectsColorForSaberType(GlobalNamespace::SaberType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorManager::EffectsColorForSaberType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EffectsColorForSaberType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method, type);
}
// Autogenerated method: ColorManager.GetObstacleEffectColor
UnityEngine::Color GlobalNamespace::ColorManager::GetObstacleEffectColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorManager::GetObstacleEffectColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetObstacleEffectColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ColorSchemeConverter
#include "GlobalNamespace/ColorSchemeConverter.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
// Including type: ColorSchemeNetSerializable
#include "GlobalNamespace/ColorSchemeNetSerializable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ColorSchemeConverter.FromNetSerializable
GlobalNamespace::ColorScheme* GlobalNamespace::ColorSchemeConverter::FromNetSerializable(GlobalNamespace::ColorSchemeNetSerializable serialized) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ColorSchemeConverter::FromNetSerializable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ColorSchemeConverter", "FromNetSerializable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(serialized)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ColorScheme*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, serialized);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: CrashManagerSO
#include "GlobalNamespace/CrashManagerSO.hpp"
// Including type: UnityEngine.LogType
#include "UnityEngine/LogType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CrashManagerSO.get_logString
::Il2CppString* GlobalNamespace::CrashManagerSO::get_logString() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CrashManagerSO::get_logString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_logString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: CrashManagerSO.get_stackTrace
::Il2CppString* GlobalNamespace::CrashManagerSO::get_stackTrace() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CrashManagerSO::get_stackTrace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_stackTrace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: CrashManagerSO.StartCatchingExceptions
void GlobalNamespace::CrashManagerSO::StartCatchingExceptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CrashManagerSO::StartCatchingExceptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartCatchingExceptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CrashManagerSO.OnDisable
void GlobalNamespace::CrashManagerSO::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CrashManagerSO::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CrashManagerSO.HandleLog
void GlobalNamespace::CrashManagerSO::HandleLog(::Il2CppString* logString, ::Il2CppString* stackTrace, UnityEngine::LogType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CrashManagerSO::HandleLog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(logString), ::il2cpp_utils::ExtractType(stackTrace), ::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, logString, stackTrace, type);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentColorManager
#include "GlobalNamespace/EnvironmentColorManager.hpp"
// Including type: ColorSchemeSO
#include "GlobalNamespace/ColorSchemeSO.hpp"
// Including type: SimpleColorSO
#include "GlobalNamespace/SimpleColorSO.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EnvironmentColorManager.get_environmentColor0
UnityEngine::Color GlobalNamespace::EnvironmentColorManager::get_environmentColor0() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentColorManager::get_environmentColor0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentColor0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentColorManager.get_environmentColor1
UnityEngine::Color GlobalNamespace::EnvironmentColorManager::get_environmentColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentColorManager::get_environmentColor1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentColor1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentColorManager.get_environmentColor0Boost
UnityEngine::Color GlobalNamespace::EnvironmentColorManager::get_environmentColor0Boost() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentColorManager::get_environmentColor0Boost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentColor0Boost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentColorManager.get_environmentColor1Boost
UnityEngine::Color GlobalNamespace::EnvironmentColorManager::get_environmentColor1Boost() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentColorManager::get_environmentColor1Boost");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_environmentColor1Boost", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentColorManager.Awake
void GlobalNamespace::EnvironmentColorManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentColorManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentColorManager.Start
void GlobalNamespace::EnvironmentColorManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentColorManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: FirstPersonFlyingController
#include "GlobalNamespace/FirstPersonFlyingController.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: VRCenterAdjust
#include "GlobalNamespace/VRCenterAdjust.hpp"
// Including type: VRController
#include "GlobalNamespace/VRController.hpp"
// Including type: VRUIControls.VRInputModule
#include "VRUIControls/VRInputModule.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: MouseLook
#include "GlobalNamespace/MouseLook.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FirstPersonFlyingController.Awake
void GlobalNamespace::FirstPersonFlyingController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FirstPersonFlyingController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FirstPersonFlyingController.Start
void GlobalNamespace::FirstPersonFlyingController::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FirstPersonFlyingController::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FirstPersonFlyingController.OnEnable
void GlobalNamespace::FirstPersonFlyingController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FirstPersonFlyingController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FirstPersonFlyingController.OnDisable
void GlobalNamespace::FirstPersonFlyingController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FirstPersonFlyingController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FirstPersonFlyingController.Update
void GlobalNamespace::FirstPersonFlyingController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FirstPersonFlyingController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MouseLook
#include "GlobalNamespace/MouseLook.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MouseLook.Init
void GlobalNamespace::MouseLook::Init(UnityEngine::Transform* character, UnityEngine::Transform* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MouseLook::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(character), ::il2cpp_utils::ExtractType(camera)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, character, camera);
}
// Autogenerated method: MouseLook.LookRotation
void GlobalNamespace::MouseLook::LookRotation(UnityEngine::Transform* character, UnityEngine::Transform* camera) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MouseLook::LookRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LookRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(character), ::il2cpp_utils::ExtractType(camera)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, character, camera);
}
// Autogenerated method: MouseLook.SetCursorLock
void GlobalNamespace::MouseLook::SetCursorLock(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MouseLook::SetCursorLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCursorLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MouseLook.UpdateCursorLock
void GlobalNamespace::MouseLook::UpdateCursorLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MouseLook::UpdateCursorLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCursorLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MouseLook.InternalLockUpdate
void GlobalNamespace::MouseLook::InternalLockUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MouseLook::InternalLockUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InternalLockUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MouseLook.ClampRotationAroundXAxis
UnityEngine::Quaternion GlobalNamespace::MouseLook::ClampRotationAroundXAxis(UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MouseLook::ClampRotationAroundXAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClampRotationAroundXAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method, q);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ListExtensions
#include "GlobalNamespace/ListExtensions.hpp"
// Including type: System.Random
#include "System/Random.hpp"
// Including type: System.Collections.Generic.IReadOnlyList`1
#include "System/Collections/Generic/IReadOnlyList_1.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xD313E4
// Autogenerated static field getter
// Get static field: static private readonly System.Random _random
System::Random* GlobalNamespace::ListExtensions::_get__random() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListExtensions::_get__random");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Random*>("", "ListExtensions", "_random"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Random _random
void GlobalNamespace::ListExtensions::_set__random(System::Random* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListExtensions::_set__random");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ListExtensions", "_random", value));
}
// Autogenerated method: ListExtensions..cctor
void GlobalNamespace::ListExtensions::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ListExtensions::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ListExtensions", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LocalizedTextAsset
#include "GlobalNamespace/LocalizedTextAsset.hpp"
// Including type: LocalizedTextAsset/TextInfo
#include "GlobalNamespace/LocalizedTextAsset_TextInfo.hpp"
// Including type: LocalizedTextAsset/<>c__DisplayClass6_0
#include "GlobalNamespace/LocalizedTextAsset_--c__DisplayClass6_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LocalizedTextAsset.get_textInfos
::Array<GlobalNamespace::LocalizedTextAsset::TextInfo*>* GlobalNamespace::LocalizedTextAsset::get_textInfos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizedTextAsset::get_textInfos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_textInfos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Array<GlobalNamespace::LocalizedTextAsset::TextInfo*>*, false>(this, ___internal__method);
}
// Autogenerated method: LocalizedTextAsset.get_localizedText
::Il2CppString* GlobalNamespace::LocalizedTextAsset::get_localizedText() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizedTextAsset::get_localizedText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localizedText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalizedTextAsset/TextInfo
#include "GlobalNamespace/LocalizedTextAsset_TextInfo.hpp"
// Including type: UnityEngine.TextAsset
#include "UnityEngine/TextAsset.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LocalizedTextAsset/<>c__DisplayClass6_0
#include "GlobalNamespace/LocalizedTextAsset_--c__DisplayClass6_0.hpp"
// Including type: LocalizedTextAsset/TextInfo
#include "GlobalNamespace/LocalizedTextAsset_TextInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LocalizedTextAsset/<>c__DisplayClass6_0.<get_localizedText>b__0
bool GlobalNamespace::LocalizedTextAsset::$$c__DisplayClass6_0::$get_localizedText$b__0(GlobalNamespace::LocalizedTextAsset::TextInfo* t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::LocalizedTextAsset::$$c__DisplayClass6_0::<get_localizedText>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_localizedText>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MainCamera
#include "GlobalNamespace/MainCamera.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MainCamera.get_camera
UnityEngine::Camera* GlobalNamespace::MainCamera::get_camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainCamera::get_camera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_camera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Camera*, false>(this, ___internal__method);
}
// Autogenerated method: MainCamera.set_enableCamera
void GlobalNamespace::MainCamera::set_enableCamera(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainCamera::set_enableCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_enableCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MainCamera.get_position
UnityEngine::Vector3 GlobalNamespace::MainCamera::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainCamera::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: MainCamera.get_rotation
UnityEngine::Quaternion GlobalNamespace::MainCamera::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainCamera::get_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: MainCamera.Awake
void GlobalNamespace::MainCamera::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainCamera::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainCamera.OnEnable
void GlobalNamespace::MainCamera::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainCamera::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainCamera.Update
void GlobalNamespace::MainCamera::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainCamera::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MainCamera.OnDisable
void GlobalNamespace::MainCamera::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MainCamera::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AveragingValueRecorder
#include "GlobalNamespace/AveragingValueRecorder.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AveragingValueRecorder.Update
void GlobalNamespace::AveragingValueRecorder::Update(float value, float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value), ::il2cpp_utils::ExtractType(deltaTime)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value, deltaTime);
}
// Autogenerated method: AveragingValueRecorder.GetAverageValue
float GlobalNamespace::AveragingValueRecorder::GetAverageValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::GetAverageValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetAverageValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AveragingValueRecorder.GetLastValue
float GlobalNamespace::AveragingValueRecorder::GetLastValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::GetLastValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLastValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: AveragingValueRecorder.GetHistoryValues
System::Collections::Generic::Queue_1<float>* GlobalNamespace::AveragingValueRecorder::GetHistoryValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::GetHistoryValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHistoryValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::Queue_1<float>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AveragingValueRecorder/AverageValueData
#include "GlobalNamespace/AveragingValueRecorder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AveragingValueRecorder/AverageValueData.get_value
float GlobalNamespace::AveragingValueRecorder::AverageValueData::get_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::AverageValueData::get_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: AveragingValueRecorder/AverageValueData.set_value
void GlobalNamespace::AveragingValueRecorder::AverageValueData::set_value(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::AverageValueData::set_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated method: AveragingValueRecorder/AverageValueData.get_time
float GlobalNamespace::AveragingValueRecorder::AverageValueData::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::AverageValueData::get_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(*this, ___internal__method);
}
// Autogenerated method: AveragingValueRecorder/AverageValueData.set_time
void GlobalNamespace::AveragingValueRecorder::AverageValueData::set_time(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AveragingValueRecorder::AverageValueData::set_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: FullVRControllersRecorder
#include "GlobalNamespace/FullVRControllersRecorder.hpp"
// Including type: VRController
#include "GlobalNamespace/VRController.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: VRControllersRecorderData
#include "GlobalNamespace/VRControllersRecorderData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FullVRControllersRecorder.add_didSetControllerTransformEvent
void GlobalNamespace::FullVRControllersRecorder::add_didSetControllerTransformEvent(System::Action_1<GlobalNamespace::VRController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::add_didSetControllerTransformEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didSetControllerTransformEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FullVRControllersRecorder.remove_didSetControllerTransformEvent
void GlobalNamespace::FullVRControllersRecorder::remove_didSetControllerTransformEvent(System::Action_1<GlobalNamespace::VRController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::remove_didSetControllerTransformEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didSetControllerTransformEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FullVRControllersRecorder.Start
void GlobalNamespace::FullVRControllersRecorder::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FullVRControllersRecorder.OnDestroy
void GlobalNamespace::FullVRControllersRecorder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FullVRControllersRecorder.PlaybackTick
void GlobalNamespace::FullVRControllersRecorder::PlaybackTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::PlaybackTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaybackTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FullVRControllersRecorder.RecordTick
void GlobalNamespace::FullVRControllersRecorder::RecordTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::RecordTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FullVRControllersRecorder.Update
void GlobalNamespace::FullVRControllersRecorder::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FullVRControllersRecorder.LateUpdate
void GlobalNamespace::FullVRControllersRecorder::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FullVRControllersRecorder/Mode
#include "GlobalNamespace/FullVRControllersRecorder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public FullVRControllersRecorder/Mode Record
GlobalNamespace::FullVRControllersRecorder::Mode GlobalNamespace::FullVRControllersRecorder::Mode::_get_Record() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::Mode::_get_Record");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::FullVRControllersRecorder::Mode>("", "FullVRControllersRecorder/Mode", "Record"));
}
// Autogenerated static field setter
// Set static field: static public FullVRControllersRecorder/Mode Record
void GlobalNamespace::FullVRControllersRecorder::Mode::_set_Record(GlobalNamespace::FullVRControllersRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::Mode::_set_Record");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FullVRControllersRecorder/Mode", "Record", value));
}
// Autogenerated static field getter
// Get static field: static public FullVRControllersRecorder/Mode Playback
GlobalNamespace::FullVRControllersRecorder::Mode GlobalNamespace::FullVRControllersRecorder::Mode::_get_Playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::Mode::_get_Playback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::FullVRControllersRecorder::Mode>("", "FullVRControllersRecorder/Mode", "Playback"));
}
// Autogenerated static field setter
// Set static field: static public FullVRControllersRecorder/Mode Playback
void GlobalNamespace::FullVRControllersRecorder::Mode::_set_Playback(GlobalNamespace::FullVRControllersRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::Mode::_set_Playback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FullVRControllersRecorder/Mode", "Playback", value));
}
// Autogenerated static field getter
// Get static field: static public FullVRControllersRecorder/Mode Off
GlobalNamespace::FullVRControllersRecorder::Mode GlobalNamespace::FullVRControllersRecorder::Mode::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::Mode::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::FullVRControllersRecorder::Mode>("", "FullVRControllersRecorder/Mode", "Off"));
}
// Autogenerated static field setter
// Set static field: static public FullVRControllersRecorder/Mode Off
void GlobalNamespace::FullVRControllersRecorder::Mode::_set_Off(GlobalNamespace::FullVRControllersRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::FullVRControllersRecorder::Mode::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "FullVRControllersRecorder/Mode", "Off", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OverridePlayerTransformsFromFullVRControllersRecorder
#include "GlobalNamespace/OverridePlayerTransformsFromFullVRControllersRecorder.hpp"
// Including type: FullVRControllersRecorder
#include "GlobalNamespace/FullVRControllersRecorder.hpp"
// Including type: PlayerTransforms
#include "GlobalNamespace/PlayerTransforms.hpp"
// Including type: SaberManager
#include "GlobalNamespace/SaberManager.hpp"
// Including type: PlayerVRControllersManager
#include "GlobalNamespace/PlayerVRControllersManager.hpp"
// Including type: VRController
#include "GlobalNamespace/VRController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OverridePlayerTransformsFromFullVRControllersRecorder.Start
void GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OverridePlayerTransformsFromFullVRControllersRecorder.OnDestroy
void GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OverridePlayerTransformsFromFullVRControllersRecorder.HandleFullVRControllersRecorderDidSetControllerTransform
void GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::HandleFullVRControllersRecorderDidSetControllerTransform(GlobalNamespace::VRController* controller) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::OverridePlayerTransformsFromFullVRControllersRecorder::HandleFullVRControllersRecorderDidSetControllerTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleFullVRControllersRecorderDidSetControllerTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(controller)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, controller);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PlayableDirectorTimer
#include "GlobalNamespace/PlayableDirectorTimer.hpp"
// Including type: UnityEngine.Playables.PlayableDirector
#include "UnityEngine/Playables/PlayableDirector.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PlayableDirectorTimer.Update
void GlobalNamespace::PlayableDirectorTimer::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PlayableDirectorTimer::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SimpleVRNodeRecorder
#include "GlobalNamespace/SimpleVRNodeRecorder.hpp"
// Including type: SimpleVRNodeRecorder/SavedData/NodeKeyframe
#include "GlobalNamespace/SimpleVRNodeRecorder_SavedData_NodeKeyframe.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: FloatSO
#include "GlobalNamespace/FloatSO.hpp"
// Including type: IVRPlatformHelper
#include "GlobalNamespace/IVRPlatformHelper.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SimpleVRNodeRecorder.Awake
void GlobalNamespace::SimpleVRNodeRecorder::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleVRNodeRecorder.OnDestroy
void GlobalNamespace::SimpleVRNodeRecorder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleVRNodeRecorder.RecordNewKeyFrame
void GlobalNamespace::SimpleVRNodeRecorder::RecordNewKeyFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::RecordNewKeyFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordNewKeyFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleVRNodeRecorder.Update
void GlobalNamespace::SimpleVRNodeRecorder::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleVRNodeRecorder.Save
void GlobalNamespace::SimpleVRNodeRecorder::Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleVRNodeRecorder.Load
void GlobalNamespace::SimpleVRNodeRecorder::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SimpleVRNodeRecorder/SavedData
#include "GlobalNamespace/SimpleVRNodeRecorder.hpp"
// Including type: SimpleVRNodeRecorder/SavedData/NodeKeyframe
#include "GlobalNamespace/SimpleVRNodeRecorder_SavedData_NodeKeyframe.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SimpleVRNodeRecorder/SavedData/NodeKeyframe
#include "GlobalNamespace/SimpleVRNodeRecorder_SavedData_NodeKeyframe.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SimpleVRNodeRecorder/SavedData/NodeKeyframe.get_pos
UnityEngine::Vector3 GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::get_pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::get_pos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: SimpleVRNodeRecorder/SavedData/NodeKeyframe.get_rot
UnityEngine::Quaternion GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::get_rot() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::SavedData::NodeKeyframe::get_rot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SimpleVRNodeRecorder/RecordMode
#include "GlobalNamespace/SimpleVRNodeRecorder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public SimpleVRNodeRecorder/RecordMode Record
GlobalNamespace::SimpleVRNodeRecorder::RecordMode GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_get_Record() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_get_Record");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SimpleVRNodeRecorder::RecordMode>("", "SimpleVRNodeRecorder/RecordMode", "Record"));
}
// Autogenerated static field setter
// Set static field: static public SimpleVRNodeRecorder/RecordMode Record
void GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_set_Record(GlobalNamespace::SimpleVRNodeRecorder::RecordMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_set_Record");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SimpleVRNodeRecorder/RecordMode", "Record", value));
}
// Autogenerated static field getter
// Get static field: static public SimpleVRNodeRecorder/RecordMode Playback
GlobalNamespace::SimpleVRNodeRecorder::RecordMode GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_get_Playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_get_Playback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SimpleVRNodeRecorder::RecordMode>("", "SimpleVRNodeRecorder/RecordMode", "Playback"));
}
// Autogenerated static field setter
// Set static field: static public SimpleVRNodeRecorder/RecordMode Playback
void GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_set_Playback(GlobalNamespace::SimpleVRNodeRecorder::RecordMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_set_Playback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SimpleVRNodeRecorder/RecordMode", "Playback", value));
}
// Autogenerated static field getter
// Get static field: static public SimpleVRNodeRecorder/RecordMode Off
GlobalNamespace::SimpleVRNodeRecorder::RecordMode GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::SimpleVRNodeRecorder::RecordMode>("", "SimpleVRNodeRecorder/RecordMode", "Off"));
}
// Autogenerated static field setter
// Set static field: static public SimpleVRNodeRecorder/RecordMode Off
void GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_set_Off(GlobalNamespace::SimpleVRNodeRecorder::RecordMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleVRNodeRecorder::RecordMode::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SimpleVRNodeRecorder/RecordMode", "Off", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRControllersRecorder
#include "GlobalNamespace/VRControllersRecorder.hpp"
// Including type: VRControllersRecorder/TypeSerializationBinder
#include "GlobalNamespace/VRControllersRecorder_TypeSerializationBinder.hpp"
// Including type: VRControllersRecorder/SavedData
#include "GlobalNamespace/VRControllersRecorder_SavedData.hpp"
// Including type: VRController
#include "GlobalNamespace/VRController.hpp"
// Including type: VRControllersRecorder/Keyframe
#include "GlobalNamespace/VRControllersRecorder_Keyframe.hpp"
// Including type: UnityEngine.TextAsset
#include "UnityEngine/TextAsset.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VRControllersRecorder.set_mode
void GlobalNamespace::VRControllersRecorder::set_mode(GlobalNamespace::VRControllersRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::set_mode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRControllersRecorder.get_mode
GlobalNamespace::VRControllersRecorder::Mode GlobalNamespace::VRControllersRecorder::get_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::get_mode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::VRControllersRecorder::Mode, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.set_recordingTextAsset
void GlobalNamespace::VRControllersRecorder::set_recordingTextAsset(UnityEngine::TextAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::set_recordingTextAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_recordingTextAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRControllersRecorder.get_recordingTextAsset
UnityEngine::TextAsset* GlobalNamespace::VRControllersRecorder::get_recordingTextAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::get_recordingTextAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_recordingTextAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TextAsset*, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.set_recordingFileName
void GlobalNamespace::VRControllersRecorder::set_recordingFileName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::set_recordingFileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_recordingFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRControllersRecorder.get_recordingFileName
::Il2CppString* GlobalNamespace::VRControllersRecorder::get_recordingFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::get_recordingFileName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_recordingFileName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.set_changeToNonVRCamera
void GlobalNamespace::VRControllersRecorder::set_changeToNonVRCamera(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::set_changeToNonVRCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_changeToNonVRCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRControllersRecorder.get_changeToNonVRCamera
bool GlobalNamespace::VRControllersRecorder::get_changeToNonVRCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::get_changeToNonVRCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_changeToNonVRCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.Start
void GlobalNamespace::VRControllersRecorder::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.OnDestroy
void GlobalNamespace::VRControllersRecorder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.SetDefaultSettings
void GlobalNamespace::VRControllersRecorder::SetDefaultSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SetDefaultSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDefaultSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.SetInGamePlaybackDefaultSettings
void GlobalNamespace::VRControllersRecorder::SetInGamePlaybackDefaultSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SetInGamePlaybackDefaultSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetInGamePlaybackDefaultSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.PlaybackTick
void GlobalNamespace::VRControllersRecorder::PlaybackTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::PlaybackTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaybackTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.SetPositionAndRotation
void GlobalNamespace::VRControllersRecorder::SetPositionAndRotation(UnityEngine::Transform* transf, UnityEngine::Vector3 targetPos, UnityEngine::Quaternion targetRot, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SetPositionAndRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPositionAndRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transf), ::il2cpp_utils::ExtractType(targetPos), ::il2cpp_utils::ExtractType(targetRot), ::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, transf, targetPos, targetRot, t);
}
// Autogenerated method: VRControllersRecorder.RecordTick
void GlobalNamespace::VRControllersRecorder::RecordTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::RecordTick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecordTick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.Update
void GlobalNamespace::VRControllersRecorder::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.LateUpdate
void GlobalNamespace::VRControllersRecorder::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.Save
void GlobalNamespace::VRControllersRecorder::Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.Load
void GlobalNamespace::VRControllersRecorder::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.CreateAnimationClipFromRecording
UnityEngine::AnimationClip* GlobalNamespace::VRControllersRecorder::CreateAnimationClipFromRecording(::Il2CppString* recordingfilePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::CreateAnimationClipFromRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VRControllersRecorder", "CreateAnimationClipFromRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(recordingfilePath)})));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimationClip*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, recordingfilePath);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRControllersRecorder/TypeSerializationBinder
#include "GlobalNamespace/VRControllersRecorder_TypeSerializationBinder.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VRControllersRecorder/TypeSerializationBinder.BindToType
System::Type* GlobalNamespace::VRControllersRecorder::TypeSerializationBinder::BindToType(::Il2CppString* assemblyName, ::Il2CppString* typeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::TypeSerializationBinder::BindToType");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BindToType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(assemblyName), ::il2cpp_utils::ExtractType(typeName)})));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, assemblyName, typeName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRControllersRecorder/SavedData
#include "GlobalNamespace/VRControllersRecorder_SavedData.hpp"
// Including type: VRControllersRecorder/SavedData/KeyframeSerializable
#include "GlobalNamespace/VRControllersRecorder_SavedData_KeyframeSerializable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorder/SavedData/KeyframeSerializable
#include "GlobalNamespace/VRControllersRecorder_SavedData_KeyframeSerializable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorder/Mode
#include "GlobalNamespace/VRControllersRecorder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VRControllersRecorder/Mode Record
GlobalNamespace::VRControllersRecorder::Mode GlobalNamespace::VRControllersRecorder::Mode::_get_Record() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Mode::_get_Record");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::VRControllersRecorder::Mode>("", "VRControllersRecorder/Mode", "Record"));
}
// Autogenerated static field setter
// Set static field: static public VRControllersRecorder/Mode Record
void GlobalNamespace::VRControllersRecorder::Mode::_set_Record(GlobalNamespace::VRControllersRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Mode::_set_Record");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRControllersRecorder/Mode", "Record", value));
}
// Autogenerated static field getter
// Get static field: static public VRControllersRecorder/Mode Playback
GlobalNamespace::VRControllersRecorder::Mode GlobalNamespace::VRControllersRecorder::Mode::_get_Playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Mode::_get_Playback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::VRControllersRecorder::Mode>("", "VRControllersRecorder/Mode", "Playback"));
}
// Autogenerated static field setter
// Set static field: static public VRControllersRecorder/Mode Playback
void GlobalNamespace::VRControllersRecorder::Mode::_set_Playback(GlobalNamespace::VRControllersRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Mode::_set_Playback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRControllersRecorder/Mode", "Playback", value));
}
// Autogenerated static field getter
// Get static field: static public VRControllersRecorder/Mode Off
GlobalNamespace::VRControllersRecorder::Mode GlobalNamespace::VRControllersRecorder::Mode::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Mode::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::VRControllersRecorder::Mode>("", "VRControllersRecorder/Mode", "Off"));
}
// Autogenerated static field setter
// Set static field: static public VRControllersRecorder/Mode Off
void GlobalNamespace::VRControllersRecorder::Mode::_set_Off(GlobalNamespace::VRControllersRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Mode::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRControllersRecorder/Mode", "Off", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorder/Keyframe
#include "GlobalNamespace/VRControllersRecorder_Keyframe.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRControllersRecorderData
#include "GlobalNamespace/VRControllersRecorderData.hpp"
// Including type: VRControllersRecorderData/Keyframe
#include "GlobalNamespace/VRControllersRecorderData_Keyframe.hpp"
// Including type: VRControllersRecorderData/NodeInfo
#include "GlobalNamespace/VRControllersRecorderData_NodeInfo.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VRControllersRecorderData.AddKeyFrame
void GlobalNamespace::VRControllersRecorderData::AddKeyFrame(::Array<GlobalNamespace::VRControllersRecorderData::PositionAndRotation>* positionsAndRotations, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::AddKeyFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddKeyFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(positionsAndRotations), ::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, positionsAndRotations, time);
}
// Autogenerated method: VRControllersRecorderData.GetPositionAndRotation
GlobalNamespace::VRControllersRecorderData::PositionAndRotation GlobalNamespace::VRControllersRecorderData::GetPositionAndRotation(int frameIdx, UnityEngine::XR::XRNode nodeType, int nodeIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::GetPositionAndRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPositionAndRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frameIdx), ::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(nodeIdx)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::VRControllersRecorderData::PositionAndRotation, false>(this, ___internal__method, frameIdx, nodeType, nodeIdx);
}
// Autogenerated method: VRControllersRecorderData.GetLerpedPositionAndRotation
GlobalNamespace::VRControllersRecorderData::PositionAndRotation GlobalNamespace::VRControllersRecorderData::GetLerpedPositionAndRotation(int frameIdx, float t, UnityEngine::XR::XRNode nodeType, int nodeIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::GetLerpedPositionAndRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLerpedPositionAndRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frameIdx), ::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(nodeType), ::il2cpp_utils::ExtractType(nodeIdx)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::VRControllersRecorderData::PositionAndRotation, false>(this, ___internal__method, frameIdx, t, nodeType, nodeIdx);
}
// Autogenerated method: VRControllersRecorderData.GetFrameTime
float GlobalNamespace::VRControllersRecorderData::GetFrameTime(int frameIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::GetFrameTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFrameTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frameIdx)})));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, frameIdx);
}
// Autogenerated method: VRControllersRecorderData.get_numberOfKeyframes
int GlobalNamespace::VRControllersRecorderData::get_numberOfKeyframes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::get_numberOfKeyframes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_numberOfKeyframes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorderData/PositionAndRotation
#include "GlobalNamespace/VRControllersRecorderData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VRControllersRecorderData/PositionAndRotation.Lerp
GlobalNamespace::VRControllersRecorderData::PositionAndRotation GlobalNamespace::VRControllersRecorderData::PositionAndRotation::Lerp(GlobalNamespace::VRControllersRecorderData::PositionAndRotation a, GlobalNamespace::VRControllersRecorderData::PositionAndRotation b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::PositionAndRotation::Lerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VRControllersRecorderData/PositionAndRotation", "Lerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::VRControllersRecorderData::PositionAndRotation, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRControllersRecorderData/Keyframe
#include "GlobalNamespace/VRControllersRecorderData_Keyframe.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorderData/NodeInfo
#include "GlobalNamespace/VRControllersRecorderData_NodeInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRControllersRecorderSaveAndLoad
#include "GlobalNamespace/VRControllersRecorderSaveAndLoad.hpp"
// Including type: VRControllersRecorderSaveData
#include "GlobalNamespace/VRControllersRecorderSaveData.hpp"
// Including type: UnityEngine.TextAsset
#include "UnityEngine/TextAsset.hpp"
// Including type: VRControllersRecorderData
#include "GlobalNamespace/VRControllersRecorderData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VRControllersRecorderSaveAndLoad.LoadSaveDataFromFile
GlobalNamespace::VRControllersRecorderSaveData* GlobalNamespace::VRControllersRecorderSaveAndLoad::LoadSaveDataFromFile(::Il2CppString* filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveAndLoad::LoadSaveDataFromFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VRControllersRecorderSaveAndLoad", "LoadSaveDataFromFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::VRControllersRecorderSaveData*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, filePath);
}
// Autogenerated method: VRControllersRecorderSaveAndLoad.LoadSaveDataFromTextAsset
GlobalNamespace::VRControllersRecorderSaveData* GlobalNamespace::VRControllersRecorderSaveAndLoad::LoadSaveDataFromTextAsset(UnityEngine::TextAsset* textAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveAndLoad::LoadSaveDataFromTextAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VRControllersRecorderSaveAndLoad", "LoadSaveDataFromTextAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(textAsset)})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::VRControllersRecorderSaveData*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, textAsset);
}
// Autogenerated method: VRControllersRecorderSaveAndLoad.LoadFromFile
void GlobalNamespace::VRControllersRecorderSaveAndLoad::LoadFromFile(::Il2CppString* filePath, GlobalNamespace::VRControllersRecorderData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveAndLoad::LoadFromFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VRControllersRecorderSaveAndLoad", "LoadFromFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, filePath, data);
}
// Autogenerated method: VRControllersRecorderSaveAndLoad.SaveToFile
void GlobalNamespace::VRControllersRecorderSaveAndLoad::SaveToFile(::Il2CppString* filePath, GlobalNamespace::VRControllersRecorderData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveAndLoad::SaveToFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VRControllersRecorderSaveAndLoad", "SaveToFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filePath), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, filePath, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRControllersRecorderSaveData
#include "GlobalNamespace/VRControllersRecorderSaveData.hpp"
// Including type: VRControllersRecorderSaveData/PositionAndRotation
#include "GlobalNamespace/VRControllersRecorderSaveData_PositionAndRotation.hpp"
// Including type: VRControllersRecorderSaveData/Keyframe
#include "GlobalNamespace/VRControllersRecorderSaveData_Keyframe.hpp"
// Including type: VRControllersRecorderSaveData/NodeInfo
#include "GlobalNamespace/VRControllersRecorderSaveData_NodeInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorderSaveData/PositionAndRotation
#include "GlobalNamespace/VRControllersRecorderSaveData_PositionAndRotation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRControllersRecorderSaveData/Keyframe
#include "GlobalNamespace/VRControllersRecorderSaveData_Keyframe.hpp"
// Including type: VRControllersRecorderSaveData/PositionAndRotation
#include "GlobalNamespace/VRControllersRecorderSaveData_PositionAndRotation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorderSaveData/NodeInfo
#include "GlobalNamespace/VRControllersRecorderSaveData_NodeInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRTrackersRecorder
#include "GlobalNamespace/VRTrackersRecorder.hpp"
// Including type: VRTrackersRecorder/SavedData
#include "GlobalNamespace/VRTrackersRecorder_SavedData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: VRTrackersRecorder/Keyframe
#include "GlobalNamespace/VRTrackersRecorder_Keyframe.hpp"
// Including type: FloatSO
#include "GlobalNamespace/FloatSO.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: SteamVR_Events/Action
#include "GlobalNamespace/SteamVR_Events_Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VRTrackersRecorder.Awake
void GlobalNamespace::VRTrackersRecorder::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTrackersRecorder.OnDestroy
void GlobalNamespace::VRTrackersRecorder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTrackersRecorder.OnEnable
void GlobalNamespace::VRTrackersRecorder::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTrackersRecorder.OnDisable
void GlobalNamespace::VRTrackersRecorder::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTrackersRecorder.OnNewPoses
void GlobalNamespace::VRTrackersRecorder::OnNewPoses(::Array<Valve::VR::TrackedDevicePose_t>* poses) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::OnNewPoses");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnNewPoses", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(poses)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, poses);
}
// Autogenerated method: VRTrackersRecorder.Update
void GlobalNamespace::VRTrackersRecorder::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTrackersRecorder.Save
void GlobalNamespace::VRTrackersRecorder::Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::Save");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTrackersRecorder.Load
void GlobalNamespace::VRTrackersRecorder::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::Load");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRTrackersRecorder/SavedData
#include "GlobalNamespace/VRTrackersRecorder_SavedData.hpp"
// Including type: VRTrackersRecorder/SavedData/KeyframeSerializable
#include "GlobalNamespace/VRTrackersRecorder_SavedData_KeyframeSerializable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRTrackersRecorder/SavedData/KeyframeSerializable
#include "GlobalNamespace/VRTrackersRecorder_SavedData_KeyframeSerializable.hpp"
// Including type: VRTrackersRecorder/SavedData/KeyframeSerializable/TransformSerializable
#include "GlobalNamespace/VRTrackersRecorder_SavedData_KeyframeSerializable_TransformSerializable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRTrackersRecorder/SavedData/KeyframeSerializable/TransformSerializable
#include "GlobalNamespace/VRTrackersRecorder_SavedData_KeyframeSerializable_TransformSerializable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRTrackersRecorder/RecordMode
#include "GlobalNamespace/VRTrackersRecorder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VRTrackersRecorder/RecordMode Record
GlobalNamespace::VRTrackersRecorder::RecordMode GlobalNamespace::VRTrackersRecorder::RecordMode::_get_Record() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::RecordMode::_get_Record");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::VRTrackersRecorder::RecordMode>("", "VRTrackersRecorder/RecordMode", "Record"));
}
// Autogenerated static field setter
// Set static field: static public VRTrackersRecorder/RecordMode Record
void GlobalNamespace::VRTrackersRecorder::RecordMode::_set_Record(GlobalNamespace::VRTrackersRecorder::RecordMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::RecordMode::_set_Record");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRTrackersRecorder/RecordMode", "Record", value));
}
// Autogenerated static field getter
// Get static field: static public VRTrackersRecorder/RecordMode Playback
GlobalNamespace::VRTrackersRecorder::RecordMode GlobalNamespace::VRTrackersRecorder::RecordMode::_get_Playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::RecordMode::_get_Playback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::VRTrackersRecorder::RecordMode>("", "VRTrackersRecorder/RecordMode", "Playback"));
}
// Autogenerated static field setter
// Set static field: static public VRTrackersRecorder/RecordMode Playback
void GlobalNamespace::VRTrackersRecorder::RecordMode::_set_Playback(GlobalNamespace::VRTrackersRecorder::RecordMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::RecordMode::_set_Playback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRTrackersRecorder/RecordMode", "Playback", value));
}
// Autogenerated static field getter
// Get static field: static public VRTrackersRecorder/RecordMode Off
GlobalNamespace::VRTrackersRecorder::RecordMode GlobalNamespace::VRTrackersRecorder::RecordMode::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::RecordMode::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::VRTrackersRecorder::RecordMode>("", "VRTrackersRecorder/RecordMode", "Off"));
}
// Autogenerated static field setter
// Set static field: static public VRTrackersRecorder/RecordMode Off
void GlobalNamespace::VRTrackersRecorder::RecordMode::_set_Off(GlobalNamespace::VRTrackersRecorder::RecordMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::RecordMode::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRTrackersRecorder/RecordMode", "Off", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRTrackersRecorder/Keyframe
#include "GlobalNamespace/VRTrackersRecorder_Keyframe.hpp"
// Including type: VRTrackersRecorder/Keyframe/KeyframeTransform
#include "GlobalNamespace/VRTrackersRecorder_Keyframe_KeyframeTransform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRTrackersRecorder/Keyframe/KeyframeTransform
#include "GlobalNamespace/VRTrackersRecorder_Keyframe_KeyframeTransform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRCenterAdjust
#include "GlobalNamespace/VRCenterAdjust.hpp"
// Including type: Vector3SO
#include "GlobalNamespace/Vector3SO.hpp"
// Including type: FloatSO
#include "GlobalNamespace/FloatSO.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VRCenterAdjust.Awake
void GlobalNamespace::VRCenterAdjust::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRCenterAdjust::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.Start
void GlobalNamespace::VRCenterAdjust::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRCenterAdjust::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.OnEnable
void GlobalNamespace::VRCenterAdjust::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRCenterAdjust::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.OnDisable
void GlobalNamespace::VRCenterAdjust::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRCenterAdjust::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.HandleRoomCenterDidChange
void GlobalNamespace::VRCenterAdjust::HandleRoomCenterDidChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRCenterAdjust::HandleRoomCenterDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleRoomCenterDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.HandleRoomRotationDidChange
void GlobalNamespace::VRCenterAdjust::HandleRoomRotationDidChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRCenterAdjust::HandleRoomRotationDidChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleRoomRotationDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.Update
void GlobalNamespace::VRCenterAdjust::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRCenterAdjust::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.ResetRoom
void GlobalNamespace::VRCenterAdjust::ResetRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRCenterAdjust::ResetRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentSceneSetup
#include "GlobalNamespace/EnvironmentSceneSetup.hpp"
// Including type: EnvironmentSceneSetupData
#include "GlobalNamespace/EnvironmentSceneSetupData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EnvironmentSceneSetup.InstallBindings
void GlobalNamespace::EnvironmentSceneSetup::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSceneSetup::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EventsTestSceneSetup
#include "GlobalNamespace/EventsTestSceneSetup.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: ColorSchemeSO
#include "GlobalNamespace/ColorSchemeSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EventsTestSceneSetup.InstallBindings
void GlobalNamespace::EventsTestSceneSetup::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EventsTestSceneSetup::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameCoreSceneSetup
#include "GlobalNamespace/GameCoreSceneSetup.hpp"
// Including type: ScreenCaptureAfterDelay
#include "GlobalNamespace/ScreenCaptureAfterDelay.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
// Including type: BloomFogSO
#include "GlobalNamespace/BloomFogSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kPauseButtonPressDurationMultiplier
float GlobalNamespace::GameCoreSceneSetup::_get_kPauseButtonPressDurationMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameCoreSceneSetup::_get_kPauseButtonPressDurationMultiplier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "GameCoreSceneSetup", "kPauseButtonPressDurationMultiplier"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kPauseButtonPressDurationMultiplier
void GlobalNamespace::GameCoreSceneSetup::_set_kPauseButtonPressDurationMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameCoreSceneSetup::_set_kPauseButtonPressDurationMultiplier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameCoreSceneSetup", "kPauseButtonPressDurationMultiplier", value));
}
// Autogenerated method: GameCoreSceneSetup.InstallBindings
void GlobalNamespace::GameCoreSceneSetup::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameCoreSceneSetup::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HealthWarningSceneSetup
#include "GlobalNamespace/HealthWarningSceneSetup.hpp"
// Including type: ColorSchemeSO
#include "GlobalNamespace/ColorSchemeSO.hpp"
// Including type: HealthWarningSceneSetupData
#include "GlobalNamespace/HealthWarningSceneSetupData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HealthWarningSceneSetup.InstallBindings
void GlobalNamespace::HealthWarningSceneSetup::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneSetup::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HealthWarningSceneStart
#include "GlobalNamespace/HealthWarningSceneStart.hpp"
// Including type: HealthWarningSceneStart/<Start>d__3
#include "GlobalNamespace/HealthWarningSceneStart_-Start-d__3.hpp"
// Including type: HealthWarningFlowCoordinator
#include "GlobalNamespace/HealthWarningFlowCoordinator.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: HMUI.HierarchyManager
#include "HMUI/HierarchyManager.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HealthWarningSceneStart.Start
System::Collections::IEnumerator* GlobalNamespace::HealthWarningSceneStart::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HealthWarningSceneStart/<Start>d__3
#include "GlobalNamespace/HealthWarningSceneStart_-Start-d__3.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HealthWarningSceneStart/<Start>d__3.System.IDisposable.Dispose
void GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HealthWarningSceneStart/<Start>d__3.MoveNext
bool GlobalNamespace::HealthWarningSceneStart::$Start$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::$Start$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: HealthWarningSceneStart/<Start>d__3.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: HealthWarningSceneStart/<Start>d__3.System.Collections.IEnumerator.Reset
void GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HealthWarningSceneStart/<Start>d__3.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuSceneSetup
#include "GlobalNamespace/MenuSceneSetup.hpp"
// Including type: MenuSceneSetup/<Start>d__3
#include "GlobalNamespace/MenuSceneSetup_-Start-d__3.hpp"
// Including type: HMUI.FlowCoordinator
#include "HMUI/FlowCoordinator.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: HMUI.HierarchyManager
#include "HMUI/HierarchyManager.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MenuSceneSetup.Start
System::Collections::IEnumerator* GlobalNamespace::MenuSceneSetup::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuSceneSetup::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MenuSceneSetup/<Start>d__3
#include "GlobalNamespace/MenuSceneSetup_-Start-d__3.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MenuSceneSetup/<Start>d__3.System.IDisposable.Dispose
void GlobalNamespace::MenuSceneSetup::$Start$d__3::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuSceneSetup::$Start$d__3::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuSceneSetup/<Start>d__3.MoveNext
bool GlobalNamespace::MenuSceneSetup::$Start$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuSceneSetup::$Start$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MenuSceneSetup/<Start>d__3.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MenuSceneSetup::$Start$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuSceneSetup::$Start$d__3::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MenuSceneSetup/<Start>d__3.System.Collections.IEnumerator.Reset
void GlobalNamespace::MenuSceneSetup::$Start$d__3::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuSceneSetup::$Start$d__3::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuSceneSetup/<Start>d__3.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MenuSceneSetup::$Start$d__3::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuSceneSetup::$Start$d__3::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HealthWarningNoTransitionInstaller
#include "GlobalNamespace/HealthWarningNoTransitionInstaller.hpp"
// Including type: HealthWarningSceneSetupData
#include "GlobalNamespace/HealthWarningSceneSetupData.hpp"
// Including type: HealthWarningScenesTransitionSetupDataSO
#include "GlobalNamespace/HealthWarningScenesTransitionSetupDataSO.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HealthWarningNoTransitionInstaller.InstallBindings
void GlobalNamespace::HealthWarningNoTransitionInstaller::InstallBindings(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningNoTransitionInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionLevelNoTransitionInstaller
#include "GlobalNamespace/MissionLevelNoTransitionInstaller.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: ColorSchemeSO
#include "GlobalNamespace/ColorSchemeSO.hpp"
// Including type: MissionObjective
#include "GlobalNamespace/MissionObjective.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: MissionLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MissionLevelScenesTransitionSetupDataSO.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionLevelNoTransitionInstaller.InstallBindings
void GlobalNamespace::MissionLevelNoTransitionInstaller::InstallBindings(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelNoTransitionInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLevelNoTransitionInstaller
#include "GlobalNamespace/MultiplayerLevelNoTransitionInstaller.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: ColorSchemeSO
#include "GlobalNamespace/ColorSchemeSO.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: PracticeSettings
#include "GlobalNamespace/PracticeSettings.hpp"
// Including type: MultiplayerLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MultiplayerLevelScenesTransitionSetupDataSO.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerLevelNoTransitionInstaller.InstallBindings
void GlobalNamespace::MultiplayerLevelNoTransitionInstaller::InstallBindings(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelNoTransitionInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PatternFightNoTransitionInstaller
#include "GlobalNamespace/PatternFightNoTransitionInstaller.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: PatternFightScenesTransitionSetupDataSO
#include "GlobalNamespace/PatternFightScenesTransitionSetupDataSO.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PatternFightNoTransitionInstaller.InstallBindings
void GlobalNamespace::PatternFightNoTransitionInstaller::InstallBindings(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightNoTransitionInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandardLevelNoTransitionInstaller
#include "GlobalNamespace/StandardLevelNoTransitionInstaller.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: ColorSchemeSO
#include "GlobalNamespace/ColorSchemeSO.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: PracticeSettings
#include "GlobalNamespace/PracticeSettings.hpp"
// Including type: StandardLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/StandardLevelScenesTransitionSetupDataSO.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: StandardLevelNoTransitionInstaller.InstallBindings
void GlobalNamespace::StandardLevelNoTransitionInstaller::InstallBindings(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelNoTransitionInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialNoTransitionInstaller
#include "GlobalNamespace/TutorialNoTransitionInstaller.hpp"
// Including type: TutorialScenesTransitionSetupDataSO
#include "GlobalNamespace/TutorialScenesTransitionSetupDataSO.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TutorialNoTransitionInstaller.InstallBindings
void GlobalNamespace::TutorialNoTransitionInstaller::InstallBindings(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialNoTransitionInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(container)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PatternFightSceneSetup
#include "GlobalNamespace/PatternFightSceneSetup.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: BeatmapObjectSpawnControllerPlayerHeightSetter
#include "GlobalNamespace/BeatmapObjectSpawnControllerPlayerHeightSetter.hpp"
// Including type: PlayerHeightDetector
#include "GlobalNamespace/PlayerHeightDetector.hpp"
// Including type: AudioManagerSO
#include "GlobalNamespace/AudioManagerSO.hpp"
// Including type: PatternFightSceneSetupData
#include "GlobalNamespace/PatternFightSceneSetupData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PatternFightSceneSetup.InstallBindings
void GlobalNamespace::PatternFightSceneSetup::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightSceneSetup::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapEditorSceneSetupData
#include "GlobalNamespace/BeatmapEditorSceneSetupData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapEditorSceneSetupData.get_levelDirPath
::Il2CppString* GlobalNamespace::BeatmapEditorSceneSetupData::get_levelDirPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapEditorSceneSetupData::get_levelDirPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelDirPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapEditorSceneSetupData.get_levelAssetPath
::Il2CppString* GlobalNamespace::BeatmapEditorSceneSetupData::get_levelAssetPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapEditorSceneSetupData::get_levelAssetPath");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_levelAssetPath", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentSceneSetupData
#include "GlobalNamespace/EnvironmentSceneSetupData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameCoreSceneSetupData
#include "GlobalNamespace/GameCoreSceneSetupData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayCoreSceneSetupData
#include "GlobalNamespace/GameplayCoreSceneSetupData.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: PracticeSettings
#include "GlobalNamespace/PracticeSettings.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HealthWarningSceneSetupData
#include "GlobalNamespace/HealthWarningSceneSetupData.hpp"
// Including type: ScenesTransitionSetupDataSO
#include "GlobalNamespace/ScenesTransitionSetupDataSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HealthWarningSceneSetupData.get_nextScenesTransitionSetupData
GlobalNamespace::ScenesTransitionSetupDataSO* GlobalNamespace::HealthWarningSceneSetupData::get_nextScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneSetupData::get_nextScenesTransitionSetupData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_nextScenesTransitionSetupData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ScenesTransitionSetupDataSO*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionGameplaySceneSetupData
#include "GlobalNamespace/MissionGameplaySceneSetupData.hpp"
// Including type: MissionObjective
#include "GlobalNamespace/MissionObjective.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLevelSceneSetupData
#include "GlobalNamespace/MultiplayerLevelSceneSetupData.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NetEaseSceneSetupData
#include "GlobalNamespace/NetEaseSceneSetupData.hpp"
// Including type: ScenesTransitionSetupDataSO
#include "GlobalNamespace/ScenesTransitionSetupDataSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NetEaseSceneSetupData.get_nextScenesTransitionSetupData
GlobalNamespace::ScenesTransitionSetupDataSO* GlobalNamespace::NetEaseSceneSetupData::get_nextScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetEaseSceneSetupData::get_nextScenesTransitionSetupData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_nextScenesTransitionSetupData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ScenesTransitionSetupDataSO*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PatternFightSceneSetupData
#include "GlobalNamespace/PatternFightSceneSetupData.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ShaderWarmupSceneSetupData
#include "GlobalNamespace/ShaderWarmupSceneSetupData.hpp"
// Including type: ScenesTransitionSetupDataSO
#include "GlobalNamespace/ScenesTransitionSetupDataSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ShaderWarmupSceneSetupData.get_nextScenesTransitionSetupData
GlobalNamespace::ScenesTransitionSetupDataSO* GlobalNamespace::ShaderWarmupSceneSetupData::get_nextScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShaderWarmupSceneSetupData::get_nextScenesTransitionSetupData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_nextScenesTransitionSetupData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ScenesTransitionSetupDataSO*, false>(this, ___internal__method);
}
// Autogenerated method: ShaderWarmupSceneSetupData.set_nextScenesTransitionSetupData
void GlobalNamespace::ShaderWarmupSceneSetupData::set_nextScenesTransitionSetupData(GlobalNamespace::ScenesTransitionSetupDataSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShaderWarmupSceneSetupData::set_nextScenesTransitionSetupData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_nextScenesTransitionSetupData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandardGameplaySceneSetupData
#include "GlobalNamespace/StandardGameplaySceneSetupData.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialSceneSetupData
#include "GlobalNamespace/TutorialSceneSetupData.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AppInitScenesTransitionSetupDataContainerSO
#include "GlobalNamespace/AppInitScenesTransitionSetupDataContainerSO.hpp"
// Including type: AppInitScenesTransitionSetupDataSO
#include "GlobalNamespace/AppInitScenesTransitionSetupDataSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AppInitScenesTransitionSetupDataSO
#include "GlobalNamespace/AppInitScenesTransitionSetupDataSO.hpp"
// Including type: AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType
#include "GlobalNamespace/AppInitScenesTransitionSetupDataSO_AppInitOverrideStartType.hpp"
// Including type: AppInitScenesTransitionSetupDataSO/AppInitSceneSetupData
#include "GlobalNamespace/AppInitScenesTransitionSetupDataSO_AppInitSceneSetupData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AppInitScenesTransitionSetupDataSO.Init
void GlobalNamespace::AppInitScenesTransitionSetupDataSO::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AppInitScenesTransitionSetupDataSO::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AppInitScenesTransitionSetupDataSO.__Init
void GlobalNamespace::AppInitScenesTransitionSetupDataSO::__Init(GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType appInitOverrideStartType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AppInitScenesTransitionSetupDataSO::__Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "__Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(appInitOverrideStartType)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, appInitOverrideStartType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType
#include "GlobalNamespace/AppInitScenesTransitionSetupDataSO_AppInitOverrideStartType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType DoNotOverride
GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_get_DoNotOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_get_DoNotOverride");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType>("", "AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType", "DoNotOverride"));
}
// Autogenerated static field setter
// Set static field: static public AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType DoNotOverride
void GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_set_DoNotOverride(GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_set_DoNotOverride");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType", "DoNotOverride", value));
}
// Autogenerated static field getter
// Get static field: static public AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType AppStart
GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_get_AppStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_get_AppStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType>("", "AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType", "AppStart"));
}
// Autogenerated static field setter
// Set static field: static public AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType AppStart
void GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_set_AppStart(GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_set_AppStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType", "AppStart", value));
}
// Autogenerated static field getter
// Get static field: static public AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType AppRestart
GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_get_AppRestart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_get_AppRestart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType>("", "AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType", "AppRestart"));
}
// Autogenerated static field setter
// Set static field: static public AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType AppRestart
void GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_set_AppRestart(GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_set_AppRestart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType", "AppRestart", value));
}
// Autogenerated static field getter
// Get static field: static public AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType MultiSceneEditor
GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_get_MultiSceneEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_get_MultiSceneEditor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType>("", "AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType", "MultiSceneEditor"));
}
// Autogenerated static field setter
// Set static field: static public AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType MultiSceneEditor
void GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_set_MultiSceneEditor(GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_set_MultiSceneEditor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType", "MultiSceneEditor", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AppInitScenesTransitionSetupDataSO/AppInitSceneSetupData
#include "GlobalNamespace/AppInitScenesTransitionSetupDataSO_AppInitSceneSetupData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AppInitScenesTransitionSetupDataSO/AppInitSceneSetupData.get_appInitOverrideStartType
GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::get_appInitOverrideStartType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::get_appInitOverrideStartType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_appInitOverrideStartType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType, false>(this, ___internal__method);
}
// Autogenerated method: AppInitScenesTransitionSetupDataSO/AppInitSceneSetupData.set_appInitOverrideStartType
void GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::set_appInitOverrideStartType(GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::set_appInitOverrideStartType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_appInitOverrideStartType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapEditorScenesTransitionSetupDataSO
#include "GlobalNamespace/BeatmapEditorScenesTransitionSetupDataSO.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapEditorScenesTransitionSetupDataSO.add_didFinishEvent
void GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO::add_didFinishEvent(System::Action_1<GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapEditorScenesTransitionSetupDataSO.remove_didFinishEvent
void GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO::remove_didFinishEvent(System::Action_1<GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapEditorScenesTransitionSetupDataSO.Init
void GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapEditorScenesTransitionSetupDataSO.Finish
void GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO::Finish() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO::Finish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CreditsScenesTransitionSetupDataSO
#include "GlobalNamespace/CreditsScenesTransitionSetupDataSO.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CreditsScenesTransitionSetupDataSO.add_didFinishEvent
void GlobalNamespace::CreditsScenesTransitionSetupDataSO::add_didFinishEvent(System::Action_1<GlobalNamespace::CreditsScenesTransitionSetupDataSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsScenesTransitionSetupDataSO::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CreditsScenesTransitionSetupDataSO.remove_didFinishEvent
void GlobalNamespace::CreditsScenesTransitionSetupDataSO::remove_didFinishEvent(System::Action_1<GlobalNamespace::CreditsScenesTransitionSetupDataSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsScenesTransitionSetupDataSO::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CreditsScenesTransitionSetupDataSO.Finish
void GlobalNamespace::CreditsScenesTransitionSetupDataSO::Finish() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsScenesTransitionSetupDataSO::Finish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EventsTestScenesTransitionSetupDataSO
#include "GlobalNamespace/EventsTestScenesTransitionSetupDataSO.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: SceneInfo
#include "GlobalNamespace/SceneInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EventsTestScenesTransitionSetupDataSO.Init
void GlobalNamespace::EventsTestScenesTransitionSetupDataSO::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EventsTestScenesTransitionSetupDataSO::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HealthWarningScenesTransitionSetupDataSO
#include "GlobalNamespace/HealthWarningScenesTransitionSetupDataSO.hpp"
// Including type: HealthWarningSceneSetupData
#include "GlobalNamespace/HealthWarningSceneSetupData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HealthWarningScenesTransitionSetupDataSO.Init
void GlobalNamespace::HealthWarningScenesTransitionSetupDataSO::Init(GlobalNamespace::HealthWarningSceneSetupData* healthWarningSceneSetupData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningScenesTransitionSetupDataSO::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(healthWarningSceneSetupData)})));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, healthWarningSceneSetupData);
}
