// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BombExplosionEffect
#include "GlobalNamespace/BombExplosionEffect.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem _debrisPS
::UnityEngine::ParticleSystem*& GlobalNamespace::BombExplosionEffect::dyn__debrisPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombExplosionEffect::dyn__debrisPS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_debrisPS"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem _explosionPS
::UnityEngine::ParticleSystem*& GlobalNamespace::BombExplosionEffect::dyn__explosionPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombExplosionEffect::dyn__explosionPS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_explosionPS"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _debrisCount
int& GlobalNamespace::BombExplosionEffect::dyn__debrisCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombExplosionEffect::dyn__debrisCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_debrisCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _explosionParticlesCount
int& GlobalNamespace::BombExplosionEffect::dyn__explosionParticlesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombExplosionEffect::dyn__explosionParticlesCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_explosionParticlesCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/UnityEngine.EmitParams _emitParams
::UnityEngine::ParticleSystem::EmitParams& GlobalNamespace::BombExplosionEffect::dyn__emitParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombExplosionEffect::dyn__emitParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_emitParams"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem::EmitParams*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/UnityEngine.EmitParams _explosionPSEmitParams
::UnityEngine::ParticleSystem::EmitParams& GlobalNamespace::BombExplosionEffect::dyn__explosionPSEmitParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombExplosionEffect::dyn__explosionPSEmitParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_explosionPSEmitParams"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem::EmitParams*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BombExplosionEffect.Awake
void GlobalNamespace::BombExplosionEffect::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombExplosionEffect::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BombExplosionEffect.SpawnExplosion
void GlobalNamespace::BombExplosionEffect::SpawnExplosion(::UnityEngine::Vector3 pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BombExplosionEffect::SpawnExplosion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpawnExplosion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CutoutAnimateEffect
#include "GlobalNamespace/CutoutAnimateEffect.hpp"
// Including type: CutoutAnimateEffect/<AnimateToCutoutCoroutine>d__7
#include "GlobalNamespace/CutoutAnimateEffect_-AnimateToCutoutCoroutine-d__7.hpp"
// Including type: CutoutEffect
#include "GlobalNamespace/CutoutEffect.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private CutoutEffect[] _cuttoutEffects
::ArrayW<::GlobalNamespace::CutoutEffect*>& GlobalNamespace::CutoutAnimateEffect::dyn__cuttoutEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CutoutAnimateEffect::dyn__cuttoutEffects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cuttoutEffects"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::CutoutEffect*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _transitionCurve
::UnityEngine::AnimationCurve*& GlobalNamespace::CutoutAnimateEffect::dyn__transitionCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CutoutAnimateEffect::dyn__transitionCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transitionCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <animating>k__BackingField
bool& GlobalNamespace::CutoutAnimateEffect::dyn_$animating$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CutoutAnimateEffect::dyn_$animating$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<animating>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CutoutAnimateEffect.get_animating
bool GlobalNamespace::CutoutAnimateEffect::get_animating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CutoutAnimateEffect::get_animating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_animating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CutoutAnimateEffect.set_animating
void GlobalNamespace::CutoutAnimateEffect::set_animating(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CutoutAnimateEffect::set_animating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_animating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CutoutAnimateEffect.Start
void GlobalNamespace::CutoutAnimateEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CutoutAnimateEffect::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CutoutAnimateEffect.AnimateToCutoutCoroutine
::System::Collections::IEnumerator* GlobalNamespace::CutoutAnimateEffect::AnimateToCutoutCoroutine(float cutoutStart, float cutoutEnd, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CutoutAnimateEffect::AnimateToCutoutCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnimateToCutoutCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cutoutStart), ::il2cpp_utils::ExtractType(cutoutEnd), ::il2cpp_utils::ExtractType(duration)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, cutoutStart, cutoutEnd, duration);
}
// Autogenerated method: CutoutAnimateEffect.SetCutout
void GlobalNamespace::CutoutAnimateEffect::SetCutout(float cutout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CutoutAnimateEffect::SetCutout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCutout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cutout)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cutout);
}
// Autogenerated method: CutoutAnimateEffect.ResetEffect
void GlobalNamespace::CutoutAnimateEffect::ResetEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CutoutAnimateEffect::ResetEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CutoutAnimateEffect.AnimateCutout
void GlobalNamespace::CutoutAnimateEffect::AnimateCutout(float cutoutStart, float cutoutEnd, float duration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CutoutAnimateEffect::AnimateCutout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnimateCutout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cutoutStart), ::il2cpp_utils::ExtractType(cutoutEnd), ::il2cpp_utils::ExtractType(duration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cutoutStart, cutoutEnd, duration);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CutoutAnimateEffect/<AnimateToCutoutCoroutine>d__7
#include "GlobalNamespace/CutoutAnimateEffect_-AnimateToCutoutCoroutine-d__7.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public CutoutAnimateEffect <>4__this
::GlobalNamespace::CutoutAnimateEffect*& GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CutoutAnimateEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single duration
float& GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::dyn_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::dyn_duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "duration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single cutoutStart
float& GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::dyn_cutoutStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::dyn_cutoutStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cutoutStart"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single cutoutEnd
float& GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::dyn_cutoutEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::dyn_cutoutEnd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cutoutEnd"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <elapsedTime>5__2
float& GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::dyn_$elapsedTime$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::dyn_$elapsedTime$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<elapsedTime>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CutoutAnimateEffect/<AnimateToCutoutCoroutine>d__7.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: CutoutAnimateEffect/<AnimateToCutoutCoroutine>d__7.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: CutoutAnimateEffect/<AnimateToCutoutCoroutine>d__7.System.IDisposable.Dispose
void GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CutoutAnimateEffect/<AnimateToCutoutCoroutine>d__7.MoveNext
bool GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CutoutAnimateEffect/<AnimateToCutoutCoroutine>d__7.System.Collections.IEnumerator.Reset
void GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CutoutAnimateEffect::$AnimateToCutoutCoroutine$d__7::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CutoutEffect
#include "GlobalNamespace/CutoutEffect.hpp"
// Including type: MaterialPropertyBlockController
#include "GlobalNamespace/MaterialPropertyBlockController.hpp"
// Including type: BoolSO
#include "GlobalNamespace/BoolSO.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10B60D4
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _cutoutPropertyID
int GlobalNamespace::CutoutEffect::_get__cutoutPropertyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CutoutEffect::_get__cutoutPropertyID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "CutoutEffect", "_cutoutPropertyID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _cutoutPropertyID
void GlobalNamespace::CutoutEffect::_set__cutoutPropertyID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CutoutEffect::_set__cutoutPropertyID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CutoutEffect", "_cutoutPropertyID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10B60E4
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _cutoutTexOffsetPropertyID
int GlobalNamespace::CutoutEffect::_get__cutoutTexOffsetPropertyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CutoutEffect::_get__cutoutTexOffsetPropertyID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "CutoutEffect", "_cutoutTexOffsetPropertyID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _cutoutTexOffsetPropertyID
void GlobalNamespace::CutoutEffect::_set__cutoutTexOffsetPropertyID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CutoutEffect::_set__cutoutTexOffsetPropertyID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "CutoutEffect", "_cutoutTexOffsetPropertyID", value));
}
// Autogenerated instance field getter
// Get instance field: private MaterialPropertyBlockController _materialPropertyBlockController
::GlobalNamespace::MaterialPropertyBlockController*& GlobalNamespace::CutoutEffect::dyn__materialPropertyBlockController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CutoutEffect::dyn__materialPropertyBlockController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_materialPropertyBlockController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MaterialPropertyBlockController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BoolSO _useRandomCutoutOffset
::GlobalNamespace::BoolSO*& GlobalNamespace::CutoutEffect::dyn__useRandomCutoutOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CutoutEffect::dyn__useRandomCutoutOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useRandomCutoutOffset"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BoolSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _cutoutOffset
::UnityEngine::Vector3& GlobalNamespace::CutoutEffect::dyn__cutoutOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CutoutEffect::dyn__cutoutOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cutoutOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _randomNoiseTexOffset
::UnityEngine::Vector3& GlobalNamespace::CutoutEffect::dyn__randomNoiseTexOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CutoutEffect::dyn__randomNoiseTexOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomNoiseTexOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cutout
float& GlobalNamespace::CutoutEffect::dyn__cutout() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CutoutEffect::dyn__cutout");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cutout"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CutoutEffect.get_useRandomCutoutOffset
bool GlobalNamespace::CutoutEffect::get_useRandomCutoutOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CutoutEffect::get_useRandomCutoutOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_useRandomCutoutOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CutoutEffect.Start
void GlobalNamespace::CutoutEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CutoutEffect::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CutoutEffect.SetCutout
void GlobalNamespace::CutoutEffect::SetCutout(float cutout) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CutoutEffect::SetCutout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCutout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cutout)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cutout);
}
// Autogenerated method: CutoutEffect.SetCutout
void GlobalNamespace::CutoutEffect::SetCutout(float cutout, ::UnityEngine::Vector3 cutoutOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CutoutEffect::SetCutout");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCutout", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cutout), ::il2cpp_utils::ExtractType(cutoutOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cutout, cutoutOffset);
}
// Autogenerated method: CutoutEffect..cctor
void GlobalNamespace::CutoutEffect::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CutoutEffect::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "CutoutEffect", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EmitParticles
#include "GlobalNamespace/EmitParticles.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem _particleSystem
::UnityEngine::ParticleSystem*& GlobalNamespace::EmitParticles::dyn__particleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmitParticles::dyn__particleSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_particleSystem"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EmitParticles.Emit
void GlobalNamespace::EmitParticles::Emit(int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EmitParticles::Emit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Emit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FireworkItemController
#include "GlobalNamespace/FireworkItemController.hpp"
// Including type: FireworkItemController/FireworkItemParticleSystem
#include "GlobalNamespace/FireworkItemController_FireworkItemParticleSystem.hpp"
// Including type: FireworkItemController/Pool
#include "GlobalNamespace/FireworkItemController_Pool.hpp"
// Including type: FireworkItemController/<FireCoroutine>d__29
#include "GlobalNamespace/FireworkItemController_-FireCoroutine-d__29.hpp"
// Including type: TubeBloomPrePassLight
#include "GlobalNamespace/TubeBloomPrePassLight.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.Gradient
#include "UnityEngine/Gradient.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: RandomObjectPicker`1
#include "GlobalNamespace/RandomObjectPicker_1.hpp"
// Including type: DirectionalLight
#include "GlobalNamespace/DirectionalLight.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private FireworkItemController/FireworkItemParticleSystem[] _particleSystems
::ArrayW<::GlobalNamespace::FireworkItemController::FireworkItemParticleSystem*>& GlobalNamespace::FireworkItemController::dyn__particleSystems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::dyn__particleSystems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_particleSystems"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::FireworkItemController::FireworkItemParticleSystem*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TubeBloomPrePassLight[] _lights
::ArrayW<::GlobalNamespace::TubeBloomPrePassLight*>& GlobalNamespace::FireworkItemController::dyn__lights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::dyn__lights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lights"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::TubeBloomPrePassLight*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _audioSource
::UnityEngine::AudioSource*& GlobalNamespace::FireworkItemController::dyn__audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::dyn__audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lightFlashDuration
float& GlobalNamespace::FireworkItemController::dyn__lightFlashDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::dyn__lightFlashDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightFlashDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _lightIntensityCurve
::UnityEngine::AnimationCurve*& GlobalNamespace::FireworkItemController::dyn__lightIntensityCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::dyn__lightIntensityCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightIntensityCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lightIntensityMultiplier
float& GlobalNamespace::FireworkItemController::dyn__lightIntensityMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::dyn__lightIntensityMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightIntensityMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _randomizeColor
bool& GlobalNamespace::FireworkItemController::dyn__randomizeColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::dyn__randomizeColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomizeColor"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _lightsColor
::UnityEngine::Color& GlobalNamespace::FireworkItemController::dyn__lightsColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::dyn__lightsColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightsColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Gradient _lightsColorGradient
::UnityEngine::Gradient*& GlobalNamespace::FireworkItemController::dyn__lightsColorGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::dyn__lightsColorGradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightsColorGradient"))->offset;
  return *reinterpret_cast<::UnityEngine::Gradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _randomizeSpeed
bool& GlobalNamespace::FireworkItemController::dyn__randomizeSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::dyn__randomizeSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomizeSpeed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minSpeedMultiplier
float& GlobalNamespace::FireworkItemController::dyn__minSpeedMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::dyn__minSpeedMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minSpeedMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxSpeedMultiplier
float& GlobalNamespace::FireworkItemController::dyn__maxSpeedMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::dyn__maxSpeedMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxSpeedMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip[] _explosionClips
::ArrayW<::UnityEngine::AudioClip*>& GlobalNamespace::FireworkItemController::dyn__explosionClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::dyn__explosionClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_explosionClips"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RandomObjectPicker`1<UnityEngine.AudioClip> _randomAudioPicker
::GlobalNamespace::RandomObjectPicker_1<::UnityEngine::AudioClip*>*& GlobalNamespace::FireworkItemController::dyn__randomAudioPicker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::dyn__randomAudioPicker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomAudioPicker"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RandomObjectPicker_1<::UnityEngine::AudioClip*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DirectionalLight _directionalLight
::GlobalNamespace::DirectionalLight*& GlobalNamespace::FireworkItemController::dyn__directionalLight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::dyn__directionalLight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_directionalLight"))->offset;
  return *reinterpret_cast<::GlobalNamespace::DirectionalLight**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _directionalLightIntensity
float& GlobalNamespace::FireworkItemController::dyn__directionalLightIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::dyn__directionalLightIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_directionalLightIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
bool& GlobalNamespace::FireworkItemController::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<FireworkItemController> didFinishEvent
::System::Action_1<::GlobalNamespace::FireworkItemController*>*& GlobalNamespace::FireworkItemController::dyn_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::dyn_didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didFinishEvent"))->offset;
  return *reinterpret_cast<::System::Action_1<::GlobalNamespace::FireworkItemController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FireworkItemController.set_directionalLight
void GlobalNamespace::FireworkItemController::set_directionalLight(::GlobalNamespace::DirectionalLight* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::set_directionalLight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_directionalLight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FireworkItemController.set_directionalLightIntensity
void GlobalNamespace::FireworkItemController::set_directionalLightIntensity(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::set_directionalLightIntensity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_directionalLightIntensity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FireworkItemController.add_didFinishEvent
void GlobalNamespace::FireworkItemController::add_didFinishEvent(::System::Action_1<::GlobalNamespace::FireworkItemController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FireworkItemController.remove_didFinishEvent
void GlobalNamespace::FireworkItemController::remove_didFinishEvent(::System::Action_1<::GlobalNamespace::FireworkItemController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: FireworkItemController.Awake
void GlobalNamespace::FireworkItemController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FireworkItemController.OnDisable
void GlobalNamespace::FireworkItemController::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FireworkItemController.Fire
void GlobalNamespace::FireworkItemController::Fire() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::Fire");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Fire", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FireworkItemController.FireCoroutine
::System::Collections::IEnumerator* GlobalNamespace::FireworkItemController::FireCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::FireCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FireCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: FireworkItemController.SetLightsColor
void GlobalNamespace::FireworkItemController::SetLightsColor(float intensity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::SetLightsColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLightsColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(intensity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, intensity);
}
// Autogenerated method: FireworkItemController.PlayExplosionSound
void GlobalNamespace::FireworkItemController::PlayExplosionSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::PlayExplosionSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayExplosionSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FireworkItemController.InitializeParticleSystem
void GlobalNamespace::FireworkItemController::InitializeParticleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::InitializeParticleSystem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeParticleSystem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FireworkItemController/FireworkItemParticleSystem
#include "GlobalNamespace/FireworkItemController_FireworkItemParticleSystem.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: UnityEngine.Gradient
#include "UnityEngine/Gradient.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.ParticleSystem _particleSystem
::UnityEngine::ParticleSystem*& GlobalNamespace::FireworkItemController::FireworkItemParticleSystem::dyn__particleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::FireworkItemParticleSystem::dyn__particleSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_particleSystem"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _isSubemitter
bool& GlobalNamespace::FireworkItemController::FireworkItemParticleSystem::dyn__isSubemitter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::FireworkItemParticleSystem::dyn__isSubemitter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isSubemitter"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _useMainColor
bool& GlobalNamespace::FireworkItemController::FireworkItemParticleSystem::dyn__useMainColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::FireworkItemParticleSystem::dyn__useMainColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useMainColor"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _useOwnGradient
bool& GlobalNamespace::FireworkItemController::FireworkItemParticleSystem::dyn__useOwnGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::FireworkItemParticleSystem::dyn__useOwnGradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useOwnGradient"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Gradient _particleColorGradient
::UnityEngine::Gradient*& GlobalNamespace::FireworkItemController::FireworkItemParticleSystem::dyn__particleColorGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::FireworkItemParticleSystem::dyn__particleColorGradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_particleColorGradient"))->offset;
  return *reinterpret_cast<::UnityEngine::Gradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean _randomizeSpeed
bool& GlobalNamespace::FireworkItemController::FireworkItemParticleSystem::dyn__randomizeSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::FireworkItemParticleSystem::dyn__randomizeSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomizeSpeed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FireworkItemController/Pool
#include "GlobalNamespace/FireworkItemController_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FireworkItemController/<FireCoroutine>d__29
#include "GlobalNamespace/FireworkItemController_-FireCoroutine-d__29.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public FireworkItemController <>4__this
::GlobalNamespace::FireworkItemController*& GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FireworkItemController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <soundTimeToCenter>5__2
float& GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::dyn_$soundTimeToCenter$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::dyn_$soundTimeToCenter$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<soundTimeToCenter>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <elapsedTime>5__3
float& GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::dyn_$elapsedTime$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::dyn_$elapsedTime$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<elapsedTime>5__3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <explosionSoundFired>5__4
bool& GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::dyn_$explosionSoundFired$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::dyn_$explosionSoundFired$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<explosionSoundFired>5__4"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FireworkItemController/<FireCoroutine>d__29.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: FireworkItemController/<FireCoroutine>d__29.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: FireworkItemController/<FireCoroutine>d__29.System.IDisposable.Dispose
void GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FireworkItemController/<FireCoroutine>d__29.MoveNext
bool GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: FireworkItemController/<FireCoroutine>d__29.System.Collections.IEnumerator.Reset
void GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworkItemController::$FireCoroutine$d__29::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FireworksController
#include "GlobalNamespace/FireworksController.hpp"
// Including type: FireworksController/<SpawningCoroutine>d__8
#include "GlobalNamespace/FireworksController_-SpawningCoroutine-d__8.hpp"
// Including type: DirectionalLight
#include "GlobalNamespace/DirectionalLight.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: FireworkItemController/Pool
#include "GlobalNamespace/FireworkItemController_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _spawnSize
::UnityEngine::Vector3& GlobalNamespace::FireworksController::dyn__spawnSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworksController::dyn__spawnSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spawnSize"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minSpawnInterval
float& GlobalNamespace::FireworksController::dyn__minSpawnInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworksController::dyn__minSpawnInterval");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minSpawnInterval"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxSpawnInterval
float& GlobalNamespace::FireworksController::dyn__maxSpawnInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworksController::dyn__maxSpawnInterval");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxSpawnInterval"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private DirectionalLight[] _directionalLights
::ArrayW<::GlobalNamespace::DirectionalLight*>& GlobalNamespace::FireworksController::dyn__directionalLights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworksController::dyn__directionalLights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_directionalLights"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::DirectionalLight*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lightsIntensity
float& GlobalNamespace::FireworksController::dyn__lightsIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworksController::dyn__lightsIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightsIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _currentLightId
int& GlobalNamespace::FireworksController::dyn__currentLightId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworksController::dyn__currentLightId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentLightId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly FireworkItemController/Pool _fireworkItemPool
::GlobalNamespace::FireworkItemController::Pool*& GlobalNamespace::FireworksController::dyn__fireworkItemPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworksController::dyn__fireworkItemPool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fireworkItemPool"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FireworkItemController::Pool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FireworksController.OnEnable
void GlobalNamespace::FireworksController::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworksController::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FireworksController.SpawningCoroutine
::System::Collections::IEnumerator* GlobalNamespace::FireworksController::SpawningCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworksController::SpawningCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpawningCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: FireworksController.HandleFireworkItemControllerDidFinish
void GlobalNamespace::FireworksController::HandleFireworkItemControllerDidFinish(::GlobalNamespace::FireworkItemController* fireworkItemController) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworksController::HandleFireworkItemControllerDidFinish");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleFireworkItemControllerDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fireworkItemController)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fireworkItemController);
}
// Autogenerated method: FireworksController.OnDrawGizmosSelected
void GlobalNamespace::FireworksController::OnDrawGizmosSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworksController::OnDrawGizmosSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmosSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FireworksController/<SpawningCoroutine>d__8
#include "GlobalNamespace/FireworksController_-SpawningCoroutine-d__8.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::FireworksController::$SpawningCoroutine$d__8::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworksController::$SpawningCoroutine$d__8::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::FireworksController::$SpawningCoroutine$d__8::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworksController::$SpawningCoroutine$d__8::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public FireworksController <>4__this
::GlobalNamespace::FireworksController*& GlobalNamespace::FireworksController::$SpawningCoroutine$d__8::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworksController::$SpawningCoroutine$d__8::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FireworksController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FireworksController/<SpawningCoroutine>d__8.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::FireworksController::$SpawningCoroutine$d__8::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworksController::$SpawningCoroutine$d__8::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: FireworksController/<SpawningCoroutine>d__8.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::FireworksController::$SpawningCoroutine$d__8::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworksController::$SpawningCoroutine$d__8::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: FireworksController/<SpawningCoroutine>d__8.System.IDisposable.Dispose
void GlobalNamespace::FireworksController::$SpawningCoroutine$d__8::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworksController::$SpawningCoroutine$d__8::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FireworksController/<SpawningCoroutine>d__8.MoveNext
bool GlobalNamespace::FireworksController::$SpawningCoroutine$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworksController::$SpawningCoroutine$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: FireworksController/<SpawningCoroutine>d__8.System.Collections.IEnumerator.Reset
void GlobalNamespace::FireworksController::$SpawningCoroutine$d__8::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworksController::$SpawningCoroutine$d__8::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FireworksItemPoolInstaller
#include "GlobalNamespace/FireworksItemPoolInstaller.hpp"
// Including type: FireworksController
#include "GlobalNamespace/FireworksController.hpp"
// Including type: FireworkItemController
#include "GlobalNamespace/FireworkItemController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private FireworksController _fireworksController
::GlobalNamespace::FireworksController*& GlobalNamespace::FireworksItemPoolInstaller::dyn__fireworksController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworksItemPoolInstaller::dyn__fireworksController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fireworksController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FireworksController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private FireworkItemController _fireworkItemControllerPrefab
::GlobalNamespace::FireworkItemController*& GlobalNamespace::FireworksItemPoolInstaller::dyn__fireworkItemControllerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworksItemPoolInstaller::dyn__fireworkItemControllerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fireworkItemControllerPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FireworkItemController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FireworksItemPoolInstaller.InstallBindings
void GlobalNamespace::FireworksItemPoolInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FireworksItemPoolInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: IFlyingObjectEffectDidFinishEvent
#include "GlobalNamespace/IFlyingObjectEffectDidFinishEvent.hpp"
// Including type: FlyingObjectEffect
#include "GlobalNamespace/FlyingObjectEffect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: IFlyingObjectEffectDidFinishEvent.HandleFlyingObjectEffectDidFinish
void GlobalNamespace::IFlyingObjectEffectDidFinishEvent::HandleFlyingObjectEffectDidFinish(::GlobalNamespace::FlyingObjectEffect* flyingObjectEffect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::IFlyingObjectEffectDidFinishEvent::HandleFlyingObjectEffectDidFinish");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleFlyingObjectEffectDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(flyingObjectEffect)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, flyingObjectEffect);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FlyingObjectEffect
#include "GlobalNamespace/FlyingObjectEffect.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: LazyCopyHashSet`1
#include "GlobalNamespace/LazyCopyHashSet_1.hpp"
// Including type: IFlyingObjectEffectDidFinishEvent
#include "GlobalNamespace/IFlyingObjectEffectDidFinishEvent.hpp"
// Including type: ILazyCopyHashSet`1
#include "GlobalNamespace/ILazyCopyHashSet_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _moveAnimationCurve
::UnityEngine::AnimationCurve*& GlobalNamespace::FlyingObjectEffect::dyn__moveAnimationCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingObjectEffect::dyn__moveAnimationCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_moveAnimationCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _shakeFrequency
float& GlobalNamespace::FlyingObjectEffect::dyn__shakeFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingObjectEffect::dyn__shakeFrequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shakeFrequency"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _shakeStrength
float& GlobalNamespace::FlyingObjectEffect::dyn__shakeStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingObjectEffect::dyn__shakeStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shakeStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _shakeStrengthAnimationCurve
::UnityEngine::AnimationCurve*& GlobalNamespace::FlyingObjectEffect::dyn__shakeStrengthAnimationCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingObjectEffect::dyn__shakeStrengthAnimationCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shakeStrengthAnimationCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
bool& GlobalNamespace::FlyingObjectEffect::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingObjectEffect::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _shakeRotation
::UnityEngine::Quaternion& GlobalNamespace::FlyingObjectEffect::dyn__shakeRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingObjectEffect::dyn__shakeRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shakeRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _rotation
::UnityEngine::Quaternion& GlobalNamespace::FlyingObjectEffect::dyn__rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingObjectEffect::dyn__rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _elapsedTime
float& GlobalNamespace::FlyingObjectEffect::dyn__elapsedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingObjectEffect::dyn__elapsedTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elapsedTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _startPos
::UnityEngine::Vector3& GlobalNamespace::FlyingObjectEffect::dyn__startPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingObjectEffect::dyn__startPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _targetPos
::UnityEngine::Vector3& GlobalNamespace::FlyingObjectEffect::dyn__targetPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingObjectEffect::dyn__targetPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _duration
float& GlobalNamespace::FlyingObjectEffect::dyn__duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingObjectEffect::dyn__duration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_duration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _shake
bool& GlobalNamespace::FlyingObjectEffect::dyn__shake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingObjectEffect::dyn__shake");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shake"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LazyCopyHashSet`1<IFlyingObjectEffectDidFinishEvent> _didFinishEvent
::GlobalNamespace::LazyCopyHashSet_1<::GlobalNamespace::IFlyingObjectEffectDidFinishEvent*>*& GlobalNamespace::FlyingObjectEffect::dyn__didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingObjectEffect::dyn__didFinishEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_didFinishEvent"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LazyCopyHashSet_1<::GlobalNamespace::IFlyingObjectEffectDidFinishEvent*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FlyingObjectEffect.get_didFinishEvent
::GlobalNamespace::ILazyCopyHashSet_1<::GlobalNamespace::IFlyingObjectEffectDidFinishEvent*>* GlobalNamespace::FlyingObjectEffect::get_didFinishEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingObjectEffect::get_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_didFinishEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ILazyCopyHashSet_1<::GlobalNamespace::IFlyingObjectEffectDidFinishEvent*>*, false>(this, ___internal__method);
}
// Autogenerated method: FlyingObjectEffect.InitAndPresent
void GlobalNamespace::FlyingObjectEffect::InitAndPresent(float duration, ::UnityEngine::Vector3 targetPos, ::UnityEngine::Quaternion rotation, bool shake) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingObjectEffect::InitAndPresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitAndPresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(targetPos), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(shake)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, duration, targetPos, rotation, shake);
}
// Autogenerated method: FlyingObjectEffect.Update
void GlobalNamespace::FlyingObjectEffect::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingObjectEffect::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FlyingObjectEffect.ManualUpdate
void GlobalNamespace::FlyingObjectEffect::ManualUpdate(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingObjectEffect::ManualUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ManualUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FlyingScoreEffect
#include "GlobalNamespace/FlyingScoreEffect.hpp"
// Including type: FlyingScoreEffect/Pool
#include "GlobalNamespace/FlyingScoreEffect_Pool.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.SpriteRenderer
#include "UnityEngine/SpriteRenderer.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: IReadonlyCutScoreBuffer
#include "GlobalNamespace/IReadonlyCutScoreBuffer.hpp"
// Including type: CutScoreBuffer
#include "GlobalNamespace/CutScoreBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _fadeAnimationCurve
::UnityEngine::AnimationCurve*& GlobalNamespace::FlyingScoreEffect::dyn__fadeAnimationCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingScoreEffect::dyn__fadeAnimationCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeAnimationCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SpriteRenderer _maxCutDistanceScoreIndicator
::UnityEngine::SpriteRenderer*& GlobalNamespace::FlyingScoreEffect::dyn__maxCutDistanceScoreIndicator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingScoreEffect::dyn__maxCutDistanceScoreIndicator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxCutDistanceScoreIndicator"))->offset;
  return *reinterpret_cast<::UnityEngine::SpriteRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshPro _text
::TMPro::TextMeshPro*& GlobalNamespace::FlyingScoreEffect::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingScoreEffect::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _color
::UnityEngine::Color& GlobalNamespace::FlyingScoreEffect::dyn__color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingScoreEffect::dyn__color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _colorAMultiplier
float& GlobalNamespace::FlyingScoreEffect::dyn__colorAMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingScoreEffect::dyn__colorAMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorAMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _registeredToCallbacks
bool& GlobalNamespace::FlyingScoreEffect::dyn__registeredToCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingScoreEffect::dyn__registeredToCallbacks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_registeredToCallbacks"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IReadonlyCutScoreBuffer _cutScoreBuffer
::GlobalNamespace::IReadonlyCutScoreBuffer*& GlobalNamespace::FlyingScoreEffect::dyn__cutScoreBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingScoreEffect::dyn__cutScoreBuffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cutScoreBuffer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IReadonlyCutScoreBuffer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FlyingScoreEffect.InitAndPresent
void GlobalNamespace::FlyingScoreEffect::InitAndPresent(::GlobalNamespace::IReadonlyCutScoreBuffer* cutScoreBuffer, float duration, ::UnityEngine::Vector3 targetPos, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingScoreEffect::InitAndPresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitAndPresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cutScoreBuffer), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(targetPos), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cutScoreBuffer, duration, targetPos, color);
}
// Autogenerated method: FlyingScoreEffect.HandleCutScoreBufferDidChange
void GlobalNamespace::FlyingScoreEffect::HandleCutScoreBufferDidChange(::GlobalNamespace::CutScoreBuffer* cutScoreBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingScoreEffect::HandleCutScoreBufferDidChange");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCutScoreBufferDidChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cutScoreBuffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cutScoreBuffer);
}
// Autogenerated method: FlyingScoreEffect.RefreshScore
void GlobalNamespace::FlyingScoreEffect::RefreshScore(int score, int maxPossibleCutScore) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingScoreEffect::RefreshScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(score), ::il2cpp_utils::ExtractType(maxPossibleCutScore)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, score, maxPossibleCutScore);
}
// Autogenerated method: FlyingScoreEffect.HandleCutScoreBufferDidFinish
void GlobalNamespace::FlyingScoreEffect::HandleCutScoreBufferDidFinish(::GlobalNamespace::CutScoreBuffer* cutScoreBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingScoreEffect::HandleCutScoreBufferDidFinish");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleCutScoreBufferDidFinish", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cutScoreBuffer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cutScoreBuffer);
}
// Autogenerated method: FlyingScoreEffect.UnregisterCallbacksIfNeeded
void GlobalNamespace::FlyingScoreEffect::UnregisterCallbacksIfNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingScoreEffect::UnregisterCallbacksIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnregisterCallbacksIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FlyingScoreEffect.ManualUpdate
void GlobalNamespace::FlyingScoreEffect::ManualUpdate(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingScoreEffect::ManualUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ManualUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FlyingScoreEffect/Pool
#include "GlobalNamespace/FlyingScoreEffect_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: FlyingScoreEffect/Pool.OnDespawned
void GlobalNamespace::FlyingScoreEffect::Pool::OnDespawned(::GlobalNamespace::FlyingScoreEffect* item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingScoreEffect::Pool::OnDespawned");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDespawned", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(item)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, item);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FlyingSpriteEffect
#include "GlobalNamespace/FlyingSpriteEffect.hpp"
// Including type: FlyingSpriteEffect/Pool
#include "GlobalNamespace/FlyingSpriteEffect_Pool.hpp"
// Including type: UnityEngine.SpriteRenderer
#include "UnityEngine/SpriteRenderer.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SpriteRenderer _spriteRenderer
::UnityEngine::SpriteRenderer*& GlobalNamespace::FlyingSpriteEffect::dyn__spriteRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingSpriteEffect::dyn__spriteRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spriteRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::SpriteRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _fadeAnimationCurve
::UnityEngine::AnimationCurve*& GlobalNamespace::FlyingSpriteEffect::dyn__fadeAnimationCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingSpriteEffect::dyn__fadeAnimationCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeAnimationCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Color _color
::UnityEngine::Color& GlobalNamespace::FlyingSpriteEffect::dyn__color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingSpriteEffect::dyn__color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FlyingSpriteEffect.InitAndPresent
void GlobalNamespace::FlyingSpriteEffect::InitAndPresent(float duration, ::UnityEngine::Vector3 targetPos, ::UnityEngine::Quaternion rotation, ::UnityEngine::Sprite* sprite, ::UnityEngine::Material* material, ::UnityEngine::Color color, bool shake) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingSpriteEffect::InitAndPresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitAndPresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(targetPos), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(sprite), ::il2cpp_utils::ExtractType(material), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(shake)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, duration, targetPos, rotation, sprite, material, color, shake);
}
// Autogenerated method: FlyingSpriteEffect.ManualUpdate
void GlobalNamespace::FlyingSpriteEffect::ManualUpdate(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingSpriteEffect::ManualUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ManualUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FlyingSpriteEffect/Pool
#include "GlobalNamespace/FlyingSpriteEffect_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FlyingTextEffect
#include "GlobalNamespace/FlyingTextEffect.hpp"
// Including type: FlyingTextEffect/Pool
#include "GlobalNamespace/FlyingTextEffect_Pool.hpp"
// Including type: TMPro.TextMeshPro
#include "TMPro/TextMeshPro.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TMPro.TextMeshPro _text
::TMPro::TextMeshPro*& GlobalNamespace::FlyingTextEffect::dyn__text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingTextEffect::dyn__text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_text"))->offset;
  return *reinterpret_cast<::TMPro::TextMeshPro**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _fadeAnimationCurve
::UnityEngine::AnimationCurve*& GlobalNamespace::FlyingTextEffect::dyn__fadeAnimationCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingTextEffect::dyn__fadeAnimationCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeAnimationCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected UnityEngine.Color _color
::UnityEngine::Color& GlobalNamespace::FlyingTextEffect::dyn__color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingTextEffect::dyn__color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FlyingTextEffect.InitAndPresent
void GlobalNamespace::FlyingTextEffect::InitAndPresent(::StringW text, float duration, ::UnityEngine::Vector3 targetPos, ::UnityEngine::Quaternion rotation, ::UnityEngine::Color color, float fontSize, bool shake) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingTextEffect::InitAndPresent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitAndPresent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(text), ::il2cpp_utils::ExtractType(duration), ::il2cpp_utils::ExtractType(targetPos), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(fontSize), ::il2cpp_utils::ExtractType(shake)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, text, duration, targetPos, rotation, color, fontSize, shake);
}
// Autogenerated method: FlyingTextEffect.ManualUpdate
void GlobalNamespace::FlyingTextEffect::ManualUpdate(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingTextEffect::ManualUpdate");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ManualUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FlyingTextEffect/Pool
#include "GlobalNamespace/FlyingTextEffect_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GhostDuplicationEffect
#include "GlobalNamespace/GhostDuplicationEffect.hpp"
// Including type: GhostDuplicationEffect/GhostEffectParams
#include "GlobalNamespace/GhostDuplicationEffect_GhostEffectParams.hpp"
// Including type: GhostDuplicationEffect/<>c__DisplayClass7_0
#include "GlobalNamespace/GhostDuplicationEffect_--c__DisplayClass7_0.hpp"
// Including type: GhostDuplicationEffect/<HideRedundantWithDelay>d__8
#include "GlobalNamespace/GhostDuplicationEffect_-HideRedundantWithDelay-d__8.hpp"
// Including type: UnityEngine.CanvasGroup
#include "UnityEngine/CanvasGroup.hpp"
// Including type: Tweening.TimeTweeningManager
#include "Tweening/TimeTweeningManager.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.CanvasGroup[] _canvases
::ArrayW<::UnityEngine::CanvasGroup*>& GlobalNamespace::GhostDuplicationEffect::dyn__canvases() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostDuplicationEffect::dyn__canvases");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_canvases"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::CanvasGroup*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isInitialized
bool& GlobalNamespace::GhostDuplicationEffect::dyn_isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostDuplicationEffect::dyn_isInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Tweening.TimeTweeningManager _tweeningManager
::Tweening::TimeTweeningManager*& GlobalNamespace::GhostDuplicationEffect::dyn__tweeningManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostDuplicationEffect::dyn__tweeningManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tweeningManager"))->offset;
  return *reinterpret_cast<::Tweening::TimeTweeningManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GhostDuplicationEffect.set_hide
void GlobalNamespace::GhostDuplicationEffect::set_hide(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostDuplicationEffect::set_hide");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_hide", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GhostDuplicationEffect.get_size
float GlobalNamespace::GhostDuplicationEffect::get_size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostDuplicationEffect::get_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: GhostDuplicationEffect.set_size
void GlobalNamespace::GhostDuplicationEffect::set_size(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostDuplicationEffect::set_size");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_size", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GhostDuplicationEffect.get_alpha
float GlobalNamespace::GhostDuplicationEffect::get_alpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostDuplicationEffect::get_alpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_alpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: GhostDuplicationEffect.set_alpha
void GlobalNamespace::GhostDuplicationEffect::set_alpha(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostDuplicationEffect::set_alpha");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_alpha", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: GhostDuplicationEffect.OnDestroy
void GlobalNamespace::GhostDuplicationEffect::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostDuplicationEffect::OnDestroy");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GhostDuplicationEffect.Awake
void GlobalNamespace::GhostDuplicationEffect::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostDuplicationEffect::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GhostDuplicationEffect.Init
void GlobalNamespace::GhostDuplicationEffect::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostDuplicationEffect::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GhostDuplicationEffect.Animate
void GlobalNamespace::GhostDuplicationEffect::Animate(::GlobalNamespace::GhostDuplicationEffect::GhostEffectParams ghostEffectParams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostDuplicationEffect::Animate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Animate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ghostEffectParams)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ghostEffectParams);
}
// Autogenerated method: GhostDuplicationEffect.HideRedundantWithDelay
::System::Collections::IEnumerator* GlobalNamespace::GhostDuplicationEffect::HideRedundantWithDelay(float delay) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostDuplicationEffect::HideRedundantWithDelay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HideRedundantWithDelay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(delay)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, delay);
}
// Autogenerated method: GhostDuplicationEffect.SetDistances
void GlobalNamespace::GhostDuplicationEffect::SetDistances(float distance, ::UnityEngine::Vector3 direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostDuplicationEffect::SetDistances");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDistances", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(distance), ::il2cpp_utils::ExtractType(direction)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, distance, direction);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GhostDuplicationEffect/<>c__DisplayClass7_0
#include "GlobalNamespace/GhostDuplicationEffect_--c__DisplayClass7_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GhostDuplicationEffect <>4__this
::GlobalNamespace::GhostDuplicationEffect*& GlobalNamespace::GhostDuplicationEffect::$$c__DisplayClass7_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostDuplicationEffect::$$c__DisplayClass7_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GhostDuplicationEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GhostDuplicationEffect/GhostEffectParams ghostEffectParams
::GlobalNamespace::GhostDuplicationEffect::GhostEffectParams& GlobalNamespace::GhostDuplicationEffect::$$c__DisplayClass7_0::dyn_ghostEffectParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostDuplicationEffect::$$c__DisplayClass7_0::dyn_ghostEffectParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ghostEffectParams"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GhostDuplicationEffect::GhostEffectParams*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 direction
::UnityEngine::Vector3& GlobalNamespace::GhostDuplicationEffect::$$c__DisplayClass7_0::dyn_direction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostDuplicationEffect::$$c__DisplayClass7_0::dyn_direction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "direction"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GhostDuplicationEffect/<>c__DisplayClass7_0.<Animate>b__0
void GlobalNamespace::GhostDuplicationEffect::$$c__DisplayClass7_0::$Animate$b__0(float val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostDuplicationEffect::$$c__DisplayClass7_0::<Animate>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Animate>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: GhostDuplicationEffect/<>c__DisplayClass7_0.<Animate>b__1
void GlobalNamespace::GhostDuplicationEffect::$$c__DisplayClass7_0::$Animate$b__1(float val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostDuplicationEffect::$$c__DisplayClass7_0::<Animate>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Animate>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: GhostDuplicationEffect/<>c__DisplayClass7_0.<Animate>b__2
void GlobalNamespace::GhostDuplicationEffect::$$c__DisplayClass7_0::$Animate$b__2(::UnityEngine::Vector3 pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostDuplicationEffect::$$c__DisplayClass7_0::<Animate>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Animate>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated method: GhostDuplicationEffect/<>c__DisplayClass7_0.<Animate>b__3
void GlobalNamespace::GhostDuplicationEffect::$$c__DisplayClass7_0::$Animate$b__3(float val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostDuplicationEffect::$$c__DisplayClass7_0::<Animate>b__3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Animate>b__3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GhostDuplicationEffect/<HideRedundantWithDelay>d__8
#include "GlobalNamespace/GhostDuplicationEffect_-HideRedundantWithDelay-d__8.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::GhostDuplicationEffect::$HideRedundantWithDelay$d__8::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostDuplicationEffect::$HideRedundantWithDelay$d__8::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::GhostDuplicationEffect::$HideRedundantWithDelay$d__8::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostDuplicationEffect::$HideRedundantWithDelay$d__8::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single delay
float& GlobalNamespace::GhostDuplicationEffect::$HideRedundantWithDelay$d__8::dyn_delay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostDuplicationEffect::$HideRedundantWithDelay$d__8::dyn_delay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GhostDuplicationEffect <>4__this
::GlobalNamespace::GhostDuplicationEffect*& GlobalNamespace::GhostDuplicationEffect::$HideRedundantWithDelay$d__8::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostDuplicationEffect::$HideRedundantWithDelay$d__8::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GhostDuplicationEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GhostDuplicationEffect/<HideRedundantWithDelay>d__8.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::GhostDuplicationEffect::$HideRedundantWithDelay$d__8::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostDuplicationEffect::$HideRedundantWithDelay$d__8::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GhostDuplicationEffect/<HideRedundantWithDelay>d__8.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::GhostDuplicationEffect::$HideRedundantWithDelay$d__8::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostDuplicationEffect::$HideRedundantWithDelay$d__8::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GhostDuplicationEffect/<HideRedundantWithDelay>d__8.System.IDisposable.Dispose
void GlobalNamespace::GhostDuplicationEffect::$HideRedundantWithDelay$d__8::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostDuplicationEffect::$HideRedundantWithDelay$d__8::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GhostDuplicationEffect/<HideRedundantWithDelay>d__8.MoveNext
bool GlobalNamespace::GhostDuplicationEffect::$HideRedundantWithDelay$d__8::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostDuplicationEffect::$HideRedundantWithDelay$d__8::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GhostDuplicationEffect/<HideRedundantWithDelay>d__8.System.Collections.IEnumerator.Reset
void GlobalNamespace::GhostDuplicationEffect::$HideRedundantWithDelay$d__8::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GhostDuplicationEffect::$HideRedundantWithDelay$d__8::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LevelFailedTextEffect
#include "GlobalNamespace/LevelFailedTextEffect.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animator _animator
::UnityEngine::Animator*& GlobalNamespace::LevelFailedTextEffect::dyn__animator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelFailedTextEffect::dyn__animator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_animator"))->offset;
  return *reinterpret_cast<::UnityEngine::Animator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LevelFailedTextEffect.ShowEffect
void GlobalNamespace::LevelFailedTextEffect::ShowEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LevelFailedTextEffect::ShowEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ShowEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentLightSimpleController
#include "GlobalNamespace/EnvironmentLightSimpleController.hpp"
// Including type: LightWithIdManager
#include "GlobalNamespace/LightWithIdManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _color
::UnityEngine::Color& GlobalNamespace::EnvironmentLightSimpleController::dyn__color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentLightSimpleController::dyn__color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _colorId
int& GlobalNamespace::EnvironmentLightSimpleController::dyn__colorId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentLightSimpleController::dyn__colorId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LightWithIdManager _lightManager
::GlobalNamespace::LightWithIdManager*& GlobalNamespace::EnvironmentLightSimpleController::dyn__lightManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentLightSimpleController::dyn__lightManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LightWithIdManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnvironmentLightSimpleController.LateUpdate
void GlobalNamespace::EnvironmentLightSimpleController::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentLightSimpleController::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuLightsManager
#include "GlobalNamespace/MenuLightsManager.hpp"
// Including type: MenuLightsManager/<Start>d__4
#include "GlobalNamespace/MenuLightsManager_-Start-d__4.hpp"
// Including type: MenuLightsPresetSO
#include "GlobalNamespace/MenuLightsPresetSO.hpp"
// Including type: LightWithIdManager
#include "GlobalNamespace/LightWithIdManager.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MenuLightsPresetSO _defaultPreset
::GlobalNamespace::MenuLightsPresetSO*& GlobalNamespace::MenuLightsManager::dyn__defaultPreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuLightsManager::dyn__defaultPreset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultPreset"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuLightsPresetSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _smooth
float& GlobalNamespace::MenuLightsManager::dyn__smooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuLightsManager::dyn__smooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LightWithIdManager _lightManager
::GlobalNamespace::LightWithIdManager*& GlobalNamespace::MenuLightsManager::dyn__lightManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuLightsManager::dyn__lightManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LightWithIdManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MenuLightsPresetSO _preset
::GlobalNamespace::MenuLightsPresetSO*& GlobalNamespace::MenuLightsManager::dyn__preset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuLightsManager::dyn__preset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_preset"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuLightsPresetSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MenuLightsManager.Start
::System::Collections::IEnumerator* GlobalNamespace::MenuLightsManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuLightsManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: MenuLightsManager.Update
void GlobalNamespace::MenuLightsManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuLightsManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuLightsManager.IsColorVeryCloseToColor
bool GlobalNamespace::MenuLightsManager::IsColorVeryCloseToColor(::UnityEngine::Color color0, ::UnityEngine::Color color1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuLightsManager::IsColorVeryCloseToColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsColorVeryCloseToColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color0), ::il2cpp_utils::ExtractType(color1)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, color0, color1);
}
// Autogenerated method: MenuLightsManager.SetColor
void GlobalNamespace::MenuLightsManager::SetColor(int lightId, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuLightsManager::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lightId), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lightId, color);
}
// Autogenerated method: MenuLightsManager.CurrentColorForID
::UnityEngine::Color GlobalNamespace::MenuLightsManager::CurrentColorForID(int lightId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuLightsManager::CurrentColorForID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CurrentColorForID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lightId)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method, lightId);
}
// Autogenerated method: MenuLightsManager.SetColorsFromPreset
bool GlobalNamespace::MenuLightsManager::SetColorsFromPreset(::GlobalNamespace::MenuLightsPresetSO* preset, float interpolationFactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuLightsManager::SetColorsFromPreset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColorsFromPreset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(preset), ::il2cpp_utils::ExtractType(interpolationFactor)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, preset, interpolationFactor);
}
// Autogenerated method: MenuLightsManager.RefreshLightsDictForPreset
void GlobalNamespace::MenuLightsManager::RefreshLightsDictForPreset(::GlobalNamespace::MenuLightsPresetSO* preset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuLightsManager::RefreshLightsDictForPreset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshLightsDictForPreset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(preset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, preset);
}
// Autogenerated method: MenuLightsManager.SetColorPreset
void GlobalNamespace::MenuLightsManager::SetColorPreset(::GlobalNamespace::MenuLightsPresetSO* preset, bool animated) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuLightsManager::SetColorPreset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColorPreset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(preset), ::il2cpp_utils::ExtractType(animated)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, preset, animated);
}
// Autogenerated method: MenuLightsManager.RefreshColors
void GlobalNamespace::MenuLightsManager::RefreshColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuLightsManager::RefreshColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: MenuLightsManager/<Start>d__4
#include "GlobalNamespace/MenuLightsManager_-Start-d__4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::MenuLightsManager::$Start$d__4::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuLightsManager::$Start$d__4::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::MenuLightsManager::$Start$d__4::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuLightsManager::$Start$d__4::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public MenuLightsManager <>4__this
::GlobalNamespace::MenuLightsManager*& GlobalNamespace::MenuLightsManager::$Start$d__4::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuLightsManager::$Start$d__4::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MenuLightsManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MenuLightsManager/<Start>d__4.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MenuLightsManager::$Start$d__4::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuLightsManager::$Start$d__4::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MenuLightsManager/<Start>d__4.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MenuLightsManager::$Start$d__4::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuLightsManager::$Start$d__4::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MenuLightsManager/<Start>d__4.System.IDisposable.Dispose
void GlobalNamespace::MenuLightsManager::$Start$d__4::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuLightsManager::$Start$d__4::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuLightsManager/<Start>d__4.MoveNext
bool GlobalNamespace::MenuLightsManager::$Start$d__4::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuLightsManager::$Start$d__4::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MenuLightsManager/<Start>d__4.System.Collections.IEnumerator.Reset
void GlobalNamespace::MenuLightsManager::$Start$d__4::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MenuLightsManager::$Start$d__4::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteCutHapticEffect
#include "GlobalNamespace/NoteCutHapticEffect.hpp"
// Including type: NoteCutHapticEffect/Strength
#include "GlobalNamespace/NoteCutHapticEffect_Strength.hpp"
// Including type: Libraries.HM.HMLib.VR.HapticPresetSO
#include "Libraries/HM/HMLib/VR/HapticPresetSO.hpp"
// Including type: HapticFeedbackController
#include "GlobalNamespace/HapticFeedbackController.hpp"
// Including type: SaberType
#include "GlobalNamespace/SaberType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Libraries.HM.HMLib.VR.HapticPresetSO _rumblePreset
::Libraries::HM::HMLib::VR::HapticPresetSO*& GlobalNamespace::NoteCutHapticEffect::dyn__rumblePreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutHapticEffect::dyn__rumblePreset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rumblePreset"))->offset;
  return *reinterpret_cast<::Libraries::HM::HMLib::VR::HapticPresetSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Libraries.HM.HMLib.VR.HapticPresetSO _weakRumblePreset
::Libraries::HM::HMLib::VR::HapticPresetSO*& GlobalNamespace::NoteCutHapticEffect::dyn__weakRumblePreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutHapticEffect::dyn__weakRumblePreset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_weakRumblePreset"))->offset;
  return *reinterpret_cast<::Libraries::HM::HMLib::VR::HapticPresetSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly HapticFeedbackController _hapticFeedbackController
::GlobalNamespace::HapticFeedbackController*& GlobalNamespace::NoteCutHapticEffect::dyn__hapticFeedbackController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutHapticEffect::dyn__hapticFeedbackController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hapticFeedbackController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HapticFeedbackController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NoteCutHapticEffect.HitNote
void GlobalNamespace::NoteCutHapticEffect::HitNote(::GlobalNamespace::SaberType saberType, ::GlobalNamespace::NoteCutHapticEffect::Strength strength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutHapticEffect::HitNote");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HitNote", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(saberType), ::il2cpp_utils::ExtractType(strength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, saberType, strength);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteCutHapticEffect/Strength
#include "GlobalNamespace/NoteCutHapticEffect_Strength.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public NoteCutHapticEffect/Strength Normal
::GlobalNamespace::NoteCutHapticEffect::Strength GlobalNamespace::NoteCutHapticEffect::Strength::_get_Normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutHapticEffect::Strength::_get_Normal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NoteCutHapticEffect::Strength>("", "NoteCutHapticEffect/Strength", "Normal"));
}
// Autogenerated static field setter
// Set static field: static public NoteCutHapticEffect/Strength Normal
void GlobalNamespace::NoteCutHapticEffect::Strength::_set_Normal(::GlobalNamespace::NoteCutHapticEffect::Strength value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutHapticEffect::Strength::_set_Normal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteCutHapticEffect/Strength", "Normal", value));
}
// Autogenerated static field getter
// Get static field: static public NoteCutHapticEffect/Strength Weak
::GlobalNamespace::NoteCutHapticEffect::Strength GlobalNamespace::NoteCutHapticEffect::Strength::_get_Weak() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutHapticEffect::Strength::_get_Weak");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::NoteCutHapticEffect::Strength>("", "NoteCutHapticEffect/Strength", "Weak"));
}
// Autogenerated static field setter
// Set static field: static public NoteCutHapticEffect/Strength Weak
void GlobalNamespace::NoteCutHapticEffect::Strength::_set_Weak(::GlobalNamespace::NoteCutHapticEffect::Strength value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutHapticEffect::Strength::_set_Weak");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "NoteCutHapticEffect/Strength", "Weak", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::NoteCutHapticEffect::Strength::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutHapticEffect::Strength::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteCutParticlesEffect
#include "GlobalNamespace/NoteCutParticlesEffect.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Color32
#include "UnityEngine/Color32.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem _sparklesPS
::UnityEngine::ParticleSystem*& GlobalNamespace::NoteCutParticlesEffect::dyn__sparklesPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutParticlesEffect::dyn__sparklesPS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sparklesPS"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem _explosionPS
::UnityEngine::ParticleSystem*& GlobalNamespace::NoteCutParticlesEffect::dyn__explosionPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutParticlesEffect::dyn__explosionPS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_explosionPS"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem _explosionCorePS
::UnityEngine::ParticleSystem*& GlobalNamespace::NoteCutParticlesEffect::dyn__explosionCorePS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutParticlesEffect::dyn__explosionCorePS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_explosionCorePS"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem _explosionPrePassBloomPS
::UnityEngine::ParticleSystem*& GlobalNamespace::NoteCutParticlesEffect::dyn__explosionPrePassBloomPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutParticlesEffect::dyn__explosionPrePassBloomPS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_explosionPrePassBloomPS"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/UnityEngine.EmitParams _sparklesPSEmitParams
::UnityEngine::ParticleSystem::EmitParams& GlobalNamespace::NoteCutParticlesEffect::dyn__sparklesPSEmitParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutParticlesEffect::dyn__sparklesPSEmitParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sparklesPSEmitParams"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem::EmitParams*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/UnityEngine.MainModule _sparklesPSMainModule
::UnityEngine::ParticleSystem::MainModule& GlobalNamespace::NoteCutParticlesEffect::dyn__sparklesPSMainModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutParticlesEffect::dyn__sparklesPSMainModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sparklesPSMainModule"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem::MainModule*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/UnityEngine.ShapeModule _sparklesPSShapeModule
::UnityEngine::ParticleSystem::ShapeModule& GlobalNamespace::NoteCutParticlesEffect::dyn__sparklesPSShapeModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutParticlesEffect::dyn__sparklesPSShapeModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sparklesPSShapeModule"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem::ShapeModule*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/UnityEngine.MinMaxCurve _sparklesLifetimeMinMaxCurve
::UnityEngine::ParticleSystem::MinMaxCurve& GlobalNamespace::NoteCutParticlesEffect::dyn__sparklesLifetimeMinMaxCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutParticlesEffect::dyn__sparklesLifetimeMinMaxCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sparklesLifetimeMinMaxCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem::MinMaxCurve*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/UnityEngine.EmitParams _explosionPSEmitParams
::UnityEngine::ParticleSystem::EmitParams& GlobalNamespace::NoteCutParticlesEffect::dyn__explosionPSEmitParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutParticlesEffect::dyn__explosionPSEmitParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_explosionPSEmitParams"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem::EmitParams*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/UnityEngine.EmitParams _explosionCorePSEmitParams
::UnityEngine::ParticleSystem::EmitParams& GlobalNamespace::NoteCutParticlesEffect::dyn__explosionCorePSEmitParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutParticlesEffect::dyn__explosionCorePSEmitParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_explosionCorePSEmitParams"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem::EmitParams*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/UnityEngine.MainModule _explosionCorePSMainModule
::UnityEngine::ParticleSystem::MainModule& GlobalNamespace::NoteCutParticlesEffect::dyn__explosionCorePSMainModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutParticlesEffect::dyn__explosionCorePSMainModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_explosionCorePSMainModule"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem::MainModule*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/UnityEngine.ShapeModule _explosionCorePSShapeModule
::UnityEngine::ParticleSystem::ShapeModule& GlobalNamespace::NoteCutParticlesEffect::dyn__explosionCorePSShapeModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutParticlesEffect::dyn__explosionCorePSShapeModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_explosionCorePSShapeModule"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem::ShapeModule*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/UnityEngine.ShapeModule _explosionPrePassBloomPSShapeModule
::UnityEngine::ParticleSystem::ShapeModule& GlobalNamespace::NoteCutParticlesEffect::dyn__explosionPrePassBloomPSShapeModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutParticlesEffect::dyn__explosionPrePassBloomPSShapeModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_explosionPrePassBloomPSShapeModule"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem::ShapeModule*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NoteCutParticlesEffect.Awake
void GlobalNamespace::NoteCutParticlesEffect::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutParticlesEffect::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteCutParticlesEffect.SpawnParticles
void GlobalNamespace::NoteCutParticlesEffect::SpawnParticles(::UnityEngine::Vector3 cutPoint, ::UnityEngine::Vector3 cutNormal, ::UnityEngine::Vector3 saberDir, float saberSpeed, ::UnityEngine::Vector3 noteMovementVec, ::UnityEngine::Color32 color, int sparkleParticlesCount, int explosionParticlesCount, float lifetimeMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteCutParticlesEffect::SpawnParticles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpawnParticles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cutPoint), ::il2cpp_utils::ExtractType(cutNormal), ::il2cpp_utils::ExtractType(saberDir), ::il2cpp_utils::ExtractType(saberSpeed), ::il2cpp_utils::ExtractType(noteMovementVec), ::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(sparkleParticlesCount), ::il2cpp_utils::ExtractType(explosionParticlesCount), ::il2cpp_utils::ExtractType(lifetimeMultiplier)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cutPoint, cutNormal, saberDir, saberSpeed, noteMovementVec, color, sparkleParticlesCount, explosionParticlesCount, lifetimeMultiplier);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteTrailParticleSystem
#include "GlobalNamespace/NoteTrailParticleSystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem _particleSystem
::UnityEngine::ParticleSystem*& GlobalNamespace::NoteTrailParticleSystem::dyn__particleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteTrailParticleSystem::dyn__particleSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_particleSystem"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/UnityEngine.EmitParams _emitParams
::UnityEngine::ParticleSystem::EmitParams& GlobalNamespace::NoteTrailParticleSystem::dyn__emitParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteTrailParticleSystem::dyn__emitParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_emitParams"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem::EmitParams*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NoteTrailParticleSystem.Awake
void GlobalNamespace::NoteTrailParticleSystem::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteTrailParticleSystem::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteTrailParticleSystem.Emit
void GlobalNamespace::NoteTrailParticleSystem::Emit(::UnityEngine::Vector3 startPos, ::UnityEngine::Vector3 endPos, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteTrailParticleSystem::Emit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Emit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPos), ::il2cpp_utils::ExtractType(endPos), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, startPos, endPos, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OneTimeLightColorEffect
#include "GlobalNamespace/OneTimeLightColorEffect.hpp"
// Including type: ColorSO
#include "GlobalNamespace/ColorSO.hpp"
// Including type: LightWithIdManager
#include "GlobalNamespace/LightWithIdManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ColorSO _color
::GlobalNamespace::ColorSO*& GlobalNamespace::OneTimeLightColorEffect::dyn__color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneTimeLightColorEffect::dyn__color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _alpha
float& GlobalNamespace::OneTimeLightColorEffect::dyn__alpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneTimeLightColorEffect::dyn__alpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alpha"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lightsId
int& GlobalNamespace::OneTimeLightColorEffect::dyn__lightsId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneTimeLightColorEffect::dyn__lightsId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightsId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LightWithIdManager _lightWithIdManager
::GlobalNamespace::LightWithIdManager*& GlobalNamespace::OneTimeLightColorEffect::dyn__lightWithIdManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneTimeLightColorEffect::dyn__lightWithIdManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightWithIdManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LightWithIdManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OneTimeLightColorEffect.Update
void GlobalNamespace::OneTimeLightColorEffect::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneTimeLightColorEffect::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SaberBurnMarkArea
#include "GlobalNamespace/SaberBurnMarkArea.hpp"
// Including type: UnityEngine.LineRenderer
#include "UnityEngine/LineRenderer.hpp"
// Including type: UnityEngine.Shader
#include "UnityEngine/Shader.hpp"
// Including type: ColorManager
#include "GlobalNamespace/ColorManager.hpp"
// Including type: SaberManager
#include "GlobalNamespace/SaberManager.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: Saber
#include "GlobalNamespace/Saber.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: UnityEngine.RenderTexture
#include "UnityEngine/RenderTexture.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LineRenderer _saberBurnMarkLinePrefab
::UnityEngine::LineRenderer*& GlobalNamespace::SaberBurnMarkArea::dyn__saberBurnMarkLinePrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkArea::dyn__saberBurnMarkLinePrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberBurnMarkLinePrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::LineRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _blackMarkLineRandomOffset
float& GlobalNamespace::SaberBurnMarkArea::dyn__blackMarkLineRandomOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkArea::dyn__blackMarkLineRandomOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blackMarkLineRandomOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _textureWidth
int& GlobalNamespace::SaberBurnMarkArea::dyn__textureWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkArea::dyn__textureWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textureWidth"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _textureHeight
int& GlobalNamespace::SaberBurnMarkArea::dyn__textureHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkArea::dyn__textureHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_textureHeight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _burnMarksFadeOutStrength
float& GlobalNamespace::SaberBurnMarkArea::dyn__burnMarksFadeOutStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkArea::dyn__burnMarksFadeOutStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_burnMarksFadeOutStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Shader _fadeOutShader
::UnityEngine::Shader*& GlobalNamespace::SaberBurnMarkArea::dyn__fadeOutShader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkArea::dyn__fadeOutShader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeOutShader"))->offset;
  return *reinterpret_cast<::UnityEngine::Shader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ColorManager _colorManager
::GlobalNamespace::ColorManager*& GlobalNamespace::SaberBurnMarkArea::dyn__colorManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkArea::dyn__colorManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SaberManager _saberManager
::GlobalNamespace::SaberManager*& GlobalNamespace::SaberBurnMarkArea::dyn__saberManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkArea::dyn__saberManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SaberManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer _renderer
::UnityEngine::Renderer*& GlobalNamespace::SaberBurnMarkArea::dyn__renderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkArea::dyn__renderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderer"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _fadeOutStrengthShaderPropertyID
int& GlobalNamespace::SaberBurnMarkArea::dyn__fadeOutStrengthShaderPropertyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkArea::dyn__fadeOutStrengthShaderPropertyID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeOutStrengthShaderPropertyID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Saber[] _sabers
::ArrayW<::GlobalNamespace::Saber*>& GlobalNamespace::SaberBurnMarkArea::dyn__sabers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkArea::dyn__sabers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sabers"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::Saber*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Plane _plane
::UnityEngine::Plane& GlobalNamespace::SaberBurnMarkArea::dyn__plane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkArea::dyn__plane");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_plane"))->offset;
  return *reinterpret_cast<::UnityEngine::Plane*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] _prevBurnMarkPos
::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::SaberBurnMarkArea::dyn__prevBurnMarkPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkArea::dyn__prevBurnMarkPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevBurnMarkPos"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean[] _prevBurnMarkPosValid
::ArrayW<bool>& GlobalNamespace::SaberBurnMarkArea::dyn__prevBurnMarkPosValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkArea::dyn__prevBurnMarkPosValid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevBurnMarkPosValid"))->offset;
  return *reinterpret_cast<::ArrayW<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LineRenderer[] _lineRenderers
::ArrayW<::UnityEngine::LineRenderer*>& GlobalNamespace::SaberBurnMarkArea::dyn__lineRenderers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkArea::dyn__lineRenderers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lineRenderers"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::LineRenderer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Camera _camera
::UnityEngine::Camera*& GlobalNamespace::SaberBurnMarkArea::dyn__camera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkArea::dyn__camera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_camera"))->offset;
  return *reinterpret_cast<::UnityEngine::Camera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] _linePoints
::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::SaberBurnMarkArea::dyn__linePoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkArea::dyn__linePoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_linePoints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RenderTexture[] _renderTextures
::ArrayW<::UnityEngine::RenderTexture*>& GlobalNamespace::SaberBurnMarkArea::dyn__renderTextures() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkArea::dyn__renderTextures");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_renderTextures"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RenderTexture*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/UnityEngine.EmitParams _emitParams
::UnityEngine::ParticleSystem::EmitParams& GlobalNamespace::SaberBurnMarkArea::dyn__emitParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkArea::dyn__emitParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_emitParams"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem::EmitParams*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _fadeOutMaterial
::UnityEngine::Material*& GlobalNamespace::SaberBurnMarkArea::dyn__fadeOutMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkArea::dyn__fadeOutMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeOutMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SaberBurnMarkArea.Start
void GlobalNamespace::SaberBurnMarkArea::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkArea::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberBurnMarkArea.OnDestroy
void GlobalNamespace::SaberBurnMarkArea::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkArea::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberBurnMarkArea.OnEnable
void GlobalNamespace::SaberBurnMarkArea::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkArea::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberBurnMarkArea.OnDisable
void GlobalNamespace::SaberBurnMarkArea::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkArea::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberBurnMarkArea.GetBurnMarkPos
bool GlobalNamespace::SaberBurnMarkArea::GetBurnMarkPos(::UnityEngine::Vector3 bladeBottomPos, ::UnityEngine::Vector3 bladeTopPos, ByRef<::UnityEngine::Vector3> burnMarkPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkArea::GetBurnMarkPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBurnMarkPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bladeBottomPos), ::il2cpp_utils::ExtractType(bladeTopPos), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bladeBottomPos, bladeTopPos, byref(burnMarkPos));
}
// Autogenerated method: SaberBurnMarkArea.WorldToCameraBurnMarkPos
::UnityEngine::Vector3 GlobalNamespace::SaberBurnMarkArea::WorldToCameraBurnMarkPos(::UnityEngine::Vector3 pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkArea::WorldToCameraBurnMarkPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WorldToCameraBurnMarkPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, pos);
}
// Autogenerated method: SaberBurnMarkArea.LateUpdate
void GlobalNamespace::SaberBurnMarkArea::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkArea::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SaberBurnMarkSparkles
#include "GlobalNamespace/SaberBurnMarkSparkles.hpp"
// Including type: UnityEngine.BoxCollider
#include "UnityEngine/BoxCollider.hpp"
// Including type: ColorManager
#include "GlobalNamespace/ColorManager.hpp"
// Including type: SaberManager
#include "GlobalNamespace/SaberManager.hpp"
// Including type: Saber
#include "GlobalNamespace/Saber.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem _sparklesPS
::UnityEngine::ParticleSystem*& GlobalNamespace::SaberBurnMarkSparkles::dyn__sparklesPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkSparkles::dyn__sparklesPS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sparklesPS"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem _burnMarksPSPrefab
::UnityEngine::ParticleSystem*& GlobalNamespace::SaberBurnMarkSparkles::dyn__burnMarksPSPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkSparkles::dyn__burnMarksPSPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_burnMarksPSPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.BoxCollider _boxCollider
::UnityEngine::BoxCollider*& GlobalNamespace::SaberBurnMarkSparkles::dyn__boxCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkSparkles::dyn__boxCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_boxCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::BoxCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ColorManager _colorManager
::GlobalNamespace::ColorManager*& GlobalNamespace::SaberBurnMarkSparkles::dyn__colorManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkSparkles::dyn__colorManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SaberManager _saberManager
::GlobalNamespace::SaberManager*& GlobalNamespace::SaberBurnMarkSparkles::dyn__saberManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkSparkles::dyn__saberManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SaberManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Saber[] _sabers
::ArrayW<::GlobalNamespace::Saber*>& GlobalNamespace::SaberBurnMarkSparkles::dyn__sabers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkSparkles::dyn__sabers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sabers"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::Saber*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Plane _plane
::UnityEngine::Plane& GlobalNamespace::SaberBurnMarkSparkles::dyn__plane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkSparkles::dyn__plane");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_plane"))->offset;
  return *reinterpret_cast<::UnityEngine::Plane*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] _prevBurnMarkPos
::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::SaberBurnMarkSparkles::dyn__prevBurnMarkPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkSparkles::dyn__prevBurnMarkPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevBurnMarkPos"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean[] _prevBurnMarkPosValid
::ArrayW<bool>& GlobalNamespace::SaberBurnMarkSparkles::dyn__prevBurnMarkPosValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkSparkles::dyn__prevBurnMarkPosValid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevBurnMarkPosValid"))->offset;
  return *reinterpret_cast<::ArrayW<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem[] _burnMarksPS
::ArrayW<::UnityEngine::ParticleSystem*>& GlobalNamespace::SaberBurnMarkSparkles::dyn__burnMarksPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkSparkles::dyn__burnMarksPS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_burnMarksPS"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::ParticleSystem*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/UnityEngine.EmissionModule[] _burnMarksEmissionModules
::ArrayW<::UnityEngine::ParticleSystem::EmissionModule>& GlobalNamespace::SaberBurnMarkSparkles::dyn__burnMarksEmissionModules() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkSparkles::dyn__burnMarksEmissionModules");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_burnMarksEmissionModules"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::ParticleSystem::EmissionModule>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/UnityEngine.EmitParams _sparklesEmitParams
::UnityEngine::ParticleSystem::EmitParams& GlobalNamespace::SaberBurnMarkSparkles::dyn__sparklesEmitParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkSparkles::dyn__sparklesEmitParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sparklesEmitParams"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem::EmitParams*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SaberBurnMarkSparkles.Start
void GlobalNamespace::SaberBurnMarkSparkles::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkSparkles::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberBurnMarkSparkles.OnDestroy
void GlobalNamespace::SaberBurnMarkSparkles::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkSparkles::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberBurnMarkSparkles.OnEnable
void GlobalNamespace::SaberBurnMarkSparkles::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkSparkles::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberBurnMarkSparkles.OnDisable
void GlobalNamespace::SaberBurnMarkSparkles::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkSparkles::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberBurnMarkSparkles.GetBurnMarkPos
bool GlobalNamespace::SaberBurnMarkSparkles::GetBurnMarkPos(::UnityEngine::Vector3 bladeBottomPos, ::UnityEngine::Vector3 bladeTopPos, ByRef<::UnityEngine::Vector3> burnMarkPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkSparkles::GetBurnMarkPos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetBurnMarkPos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bladeBottomPos), ::il2cpp_utils::ExtractType(bladeTopPos), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, bladeBottomPos, bladeTopPos, byref(burnMarkPos));
}
// Autogenerated method: SaberBurnMarkSparkles.LateUpdate
void GlobalNamespace::SaberBurnMarkSparkles::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberBurnMarkSparkles::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SaberTrail
#include "GlobalNamespace/SaberTrail.hpp"
// Including type: SaberTrailRenderer
#include "GlobalNamespace/SaberTrailRenderer.hpp"
// Including type: IBladeMovementData
#include "GlobalNamespace/IBladeMovementData.hpp"
// Including type: TrailElementCollection
#include "GlobalNamespace/TrailElementCollection.hpp"
// Including type: BladeMovementDataElement
#include "GlobalNamespace/BladeMovementDataElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 kIgnoredFramesCount
int GlobalNamespace::SaberTrail::_get_kIgnoredFramesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrail::_get_kIgnoredFramesCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SaberTrail", "kIgnoredFramesCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kIgnoredFramesCount
void GlobalNamespace::SaberTrail::_set_kIgnoredFramesCount(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrail::_set_kIgnoredFramesCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberTrail", "kIgnoredFramesCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kSnapshotCapacityMargin
int GlobalNamespace::SaberTrail::_get_kSnapshotCapacityMargin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrail::_get_kSnapshotCapacityMargin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SaberTrail", "kSnapshotCapacityMargin"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kSnapshotCapacityMargin
void GlobalNamespace::SaberTrail::_set_kSnapshotCapacityMargin(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrail::_set_kSnapshotCapacityMargin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberTrail", "kSnapshotCapacityMargin", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kScaleCheckFramesInterval
int GlobalNamespace::SaberTrail::_get_kScaleCheckFramesInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrail::_get_kScaleCheckFramesInterval");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SaberTrail", "kScaleCheckFramesInterval"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kScaleCheckFramesInterval
void GlobalNamespace::SaberTrail::_set_kScaleCheckFramesInterval(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrail::_set_kScaleCheckFramesInterval");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberTrail", "kScaleCheckFramesInterval", value));
}
// Autogenerated instance field getter
// Get instance field: private SaberTrailRenderer _trailRendererPrefab
::GlobalNamespace::SaberTrailRenderer*& GlobalNamespace::SaberTrail::dyn__trailRendererPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrail::dyn__trailRendererPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trailRendererPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SaberTrailRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _trailDuration
float& GlobalNamespace::SaberTrail::dyn__trailDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrail::dyn__trailDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trailDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _samplingFrequency
int& GlobalNamespace::SaberTrail::dyn__samplingFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrail::dyn__samplingFrequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_samplingFrequency"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _granularity
int& GlobalNamespace::SaberTrail::dyn__granularity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrail::dyn__granularity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_granularity"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _whiteSectionMaxDuration
float& GlobalNamespace::SaberTrail::dyn__whiteSectionMaxDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrail::dyn__whiteSectionMaxDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whiteSectionMaxDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _colorOverwrite
bool& GlobalNamespace::SaberTrail::dyn__colorOverwrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrail::dyn__colorOverwrite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorOverwrite"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _forcedColor
::UnityEngine::Color& GlobalNamespace::SaberTrail::dyn__forcedColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrail::dyn__forcedColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_forcedColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _color
::UnityEngine::Color& GlobalNamespace::SaberTrail::dyn__color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrail::dyn__color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IBladeMovementData _movementData
::GlobalNamespace::IBladeMovementData*& GlobalNamespace::SaberTrail::dyn__movementData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrail::dyn__movementData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_movementData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBladeMovementData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastTrailElementTime
float& GlobalNamespace::SaberTrail::dyn__lastTrailElementTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrail::dyn__lastTrailElementTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastTrailElementTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SaberTrailRenderer _trailRenderer
::GlobalNamespace::SaberTrailRenderer*& GlobalNamespace::SaberTrail::dyn__trailRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrail::dyn__trailRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trailRenderer"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SaberTrailRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TrailElementCollection _trailElementCollection
::GlobalNamespace::TrailElementCollection*& GlobalNamespace::SaberTrail::dyn__trailElementCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrail::dyn__trailElementCollection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trailElementCollection"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TrailElementCollection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sampleStep
float& GlobalNamespace::SaberTrail::dyn__sampleStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrail::dyn__sampleStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sampleStep"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _framesPassed
int& GlobalNamespace::SaberTrail::dyn__framesPassed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrail::dyn__framesPassed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_framesPassed"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lastZScale
float& GlobalNamespace::SaberTrail::dyn__lastZScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrail::dyn__lastZScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lastZScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _framesToScaleCheck
int& GlobalNamespace::SaberTrail::dyn__framesToScaleCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrail::dyn__framesToScaleCheck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_framesToScaleCheck"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _inited
bool& GlobalNamespace::SaberTrail::dyn__inited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrail::dyn__inited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_inited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SaberTrail.Awake
void GlobalNamespace::SaberTrail::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrail::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberTrail.Setup
void GlobalNamespace::SaberTrail::Setup(::UnityEngine::Color color, ::GlobalNamespace::IBladeMovementData* movementData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrail::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color), ::il2cpp_utils::ExtractType(movementData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color, movementData);
}
// Autogenerated method: SaberTrail.Init
void GlobalNamespace::SaberTrail::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrail::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberTrail.ResetTrailData
void GlobalNamespace::SaberTrail::ResetTrailData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrail::ResetTrailData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetTrailData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberTrail.LateUpdate
void GlobalNamespace::SaberTrail::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrail::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberTrail.OnEnable
void GlobalNamespace::SaberTrail::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrail::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberTrail.OnDisable
void GlobalNamespace::SaberTrail::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrail::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberTrail.OnDestroy
void GlobalNamespace::SaberTrail::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrail::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberTrail.GetTrailWidth
float GlobalNamespace::SaberTrail::GetTrailWidth(::GlobalNamespace::BladeMovementDataElement lastAddedData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrail::GetTrailWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTrailWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lastAddedData)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, lastAddedData);
}
// Autogenerated method: SaberTrail.OnDrawGizmosSelected
void GlobalNamespace::SaberTrail::OnDrawGizmosSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrail::OnDrawGizmosSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmosSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SaberTrailRenderer
#include "GlobalNamespace/SaberTrailRenderer.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.MeshFilter
#include "UnityEngine/MeshFilter.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: TrailElementCollection
#include "GlobalNamespace/TrailElementCollection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10B6B44
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Bounds _bounds
::UnityEngine::Bounds GlobalNamespace::SaberTrailRenderer::_get__bounds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrailRenderer::_get__bounds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Bounds>("", "SaberTrailRenderer", "_bounds"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Bounds _bounds
void GlobalNamespace::SaberTrailRenderer::_set__bounds(::UnityEngine::Bounds value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrailRenderer::_set__bounds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberTrailRenderer", "_bounds", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10B6B54
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _saberTravelledDistanceId
int GlobalNamespace::SaberTrailRenderer::_get__saberTravelledDistanceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrailRenderer::_get__saberTravelledDistanceId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "SaberTrailRenderer", "_saberTravelledDistanceId"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _saberTravelledDistanceId
void GlobalNamespace::SaberTrailRenderer::_set__saberTravelledDistanceId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrailRenderer::_set__saberTravelledDistanceId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberTrailRenderer", "_saberTravelledDistanceId", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kMinMotionBlurSpeed
float GlobalNamespace::SaberTrailRenderer::_get_kMinMotionBlurSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrailRenderer::_get_kMinMotionBlurSpeed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberTrailRenderer", "kMinMotionBlurSpeed"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kMinMotionBlurSpeed
void GlobalNamespace::SaberTrailRenderer::_set_kMinMotionBlurSpeed(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrailRenderer::_set_kMinMotionBlurSpeed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberTrailRenderer", "kMinMotionBlurSpeed", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kMotionBlurStrength
float GlobalNamespace::SaberTrailRenderer::_get_kMotionBlurStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrailRenderer::_get_kMotionBlurStrength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "SaberTrailRenderer", "kMotionBlurStrength"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kMotionBlurStrength
void GlobalNamespace::SaberTrailRenderer::_set_kMotionBlurStrength(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrailRenderer::_set_kMotionBlurStrength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "SaberTrailRenderer", "kMotionBlurStrength", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer _meshRenderer
::UnityEngine::MeshRenderer*& GlobalNamespace::SaberTrailRenderer::dyn__meshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrailRenderer::dyn__meshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshFilter _meshFilter
::UnityEngine::MeshFilter*& GlobalNamespace::SaberTrailRenderer::dyn__meshFilter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrailRenderer::dyn__meshFilter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshFilter"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshFilter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh _mesh
::UnityEngine::Mesh*& GlobalNamespace::SaberTrailRenderer::dyn__mesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrailRenderer::dyn__mesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] _vertices
::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::SaberTrailRenderer::dyn__vertices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrailRenderer::dyn__vertices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_vertices"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] _indices
::ArrayW<int>& GlobalNamespace::SaberTrailRenderer::dyn__indices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrailRenderer::dyn__indices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_indices"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2[] _uvs
::ArrayW<::UnityEngine::Vector2>& GlobalNamespace::SaberTrailRenderer::dyn__uvs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrailRenderer::dyn__uvs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_uvs"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector2>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color[] _colors
::ArrayW<::UnityEngine::Color>& GlobalNamespace::SaberTrailRenderer::dyn__colors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrailRenderer::dyn__colors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colors"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _trailWidth
float& GlobalNamespace::SaberTrailRenderer::dyn__trailWidth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrailRenderer::dyn__trailWidth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trailWidth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _trailDuration
float& GlobalNamespace::SaberTrailRenderer::dyn__trailDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrailRenderer::dyn__trailDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trailDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _segmentDuration
float& GlobalNamespace::SaberTrailRenderer::dyn__segmentDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrailRenderer::dyn__segmentDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_segmentDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _granularity
int& GlobalNamespace::SaberTrailRenderer::dyn__granularity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrailRenderer::dyn__granularity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_granularity"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _whiteSectionMaxDuration
float& GlobalNamespace::SaberTrailRenderer::dyn__whiteSectionMaxDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrailRenderer::dyn__whiteSectionMaxDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_whiteSectionMaxDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SaberTrailRenderer.Init
void GlobalNamespace::SaberTrailRenderer::Init(float trailWidth, float trailDuration, int granularity, float whiteSectionMaxDuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrailRenderer::Init");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trailWidth), ::il2cpp_utils::ExtractType(trailDuration), ::il2cpp_utils::ExtractType(granularity), ::il2cpp_utils::ExtractType(whiteSectionMaxDuration)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, trailWidth, trailDuration, granularity, whiteSectionMaxDuration);
}
// Autogenerated method: SaberTrailRenderer.OnDestroy
void GlobalNamespace::SaberTrailRenderer::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrailRenderer::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberTrailRenderer.OnValidate
void GlobalNamespace::SaberTrailRenderer::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrailRenderer::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberTrailRenderer.OnEnable
void GlobalNamespace::SaberTrailRenderer::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrailRenderer::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberTrailRenderer.OnDisable
void GlobalNamespace::SaberTrailRenderer::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrailRenderer::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberTrailRenderer.SetTrailWidth
void GlobalNamespace::SaberTrailRenderer::SetTrailWidth(float width) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrailRenderer::SetTrailWidth");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTrailWidth", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(width)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, width);
}
// Autogenerated method: SaberTrailRenderer.UpdateMesh
void GlobalNamespace::SaberTrailRenderer::UpdateMesh(::GlobalNamespace::TrailElementCollection* trailElementCollection, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrailRenderer::UpdateMesh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMesh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trailElementCollection), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, trailElementCollection, color);
}
// Autogenerated method: SaberTrailRenderer.UpdateVertices
void GlobalNamespace::SaberTrailRenderer::UpdateVertices(::GlobalNamespace::TrailElementCollection* trailElementCollection, ::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrailRenderer::UpdateVertices");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateVertices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(trailElementCollection), ::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, trailElementCollection, color);
}
// Autogenerated method: SaberTrailRenderer.UpdateIndices
void GlobalNamespace::SaberTrailRenderer::UpdateIndices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrailRenderer::UpdateIndices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateIndices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberTrailRenderer..cctor
void GlobalNamespace::SaberTrailRenderer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberTrailRenderer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SaberTrailRenderer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SplineUtils
#include "GlobalNamespace/SplineUtils.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SplineUtils.Interpolate
::UnityEngine::Vector3 GlobalNamespace::SplineUtils::Interpolate(::UnityEngine::Vector3 t0, ::UnityEngine::Vector3 p0, ::UnityEngine::Vector3 p1, ::UnityEngine::Vector3 t1, float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SplineUtils::Interpolate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "SplineUtils", "Interpolate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t0), ::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1), ::il2cpp_utils::ExtractType(t1), ::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t0, p0, p1, t1, f);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TrailElement
#include "GlobalNamespace/TrailElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 position
::UnityEngine::Vector3& GlobalNamespace::TrailElement::dyn_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailElement::dyn_position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 normal
::UnityEngine::Vector3& GlobalNamespace::TrailElement::dyn_normal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailElement::dyn_normal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "normal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single distance
float& GlobalNamespace::TrailElement::dyn_distance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailElement::dyn_distance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "distance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single localDistance
float& GlobalNamespace::TrailElement::dyn_localDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailElement::dyn_localDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single time
float& GlobalNamespace::TrailElement::dyn_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailElement::dyn_time");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "time"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TrailElement.SetData
void GlobalNamespace::TrailElement::SetData(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailElement::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, end, time);
}
// Autogenerated method: TrailElement.CopyFrom
void GlobalNamespace::TrailElement::CopyFrom(::GlobalNamespace::TrailElement* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailElement::CopyFrom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CopyFrom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: TrailElement.SetDistance
void GlobalNamespace::TrailElement::SetDistance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailElement::SetDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TrailElement.UpdateLocalDistance
void GlobalNamespace::TrailElement::UpdateLocalDistance(::GlobalNamespace::TrailElement* prev) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailElement::UpdateLocalDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLocalDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prev)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prev);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TrailElementCollection
#include "GlobalNamespace/TrailElementCollection.hpp"
// Including type: TrailElementCollection/InterpolationState
#include "GlobalNamespace/TrailElementCollection_InterpolationState.hpp"
// Including type: TrailElement
#include "GlobalNamespace/TrailElement.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _capacity
int& GlobalNamespace::TrailElementCollection::dyn__capacity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailElementCollection::dyn__capacity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_capacity"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly TrailElement[] _snapshots
::ArrayW<::GlobalNamespace::TrailElement*>& GlobalNamespace::TrailElementCollection::dyn__snapshots() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailElementCollection::dyn__snapshots");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_snapshots"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::TrailElement*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _headIndex
int& GlobalNamespace::TrailElementCollection::dyn__headIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailElementCollection::dyn__headIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _totalDistance
float& GlobalNamespace::TrailElementCollection::dyn__totalDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailElementCollection::dyn__totalDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_totalDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TrailElementCollection.InitSnapshots
void GlobalNamespace::TrailElementCollection::InitSnapshots(::UnityEngine::Vector3 defaultStartPosition, ::UnityEngine::Vector3 defaultEndPosition, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailElementCollection::InitSnapshots");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitSnapshots", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(defaultStartPosition), ::il2cpp_utils::ExtractType(defaultEndPosition), ::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, defaultStartPosition, defaultEndPosition, time);
}
// Autogenerated method: TrailElementCollection.SetHeadData
void GlobalNamespace::TrailElementCollection::SetHeadData(::UnityEngine::Vector3 start, ::UnityEngine::Vector3 end, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailElementCollection::SetHeadData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHeadData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(start), ::il2cpp_utils::ExtractType(end), ::il2cpp_utils::ExtractType(time)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, start, end, time);
}
// Autogenerated method: TrailElementCollection.MoveTailToHead
void GlobalNamespace::TrailElementCollection::MoveTailToHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailElementCollection::MoveTailToHead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveTailToHead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TrailElementCollection.UpdateDistances
void GlobalNamespace::TrailElementCollection::UpdateDistances() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailElementCollection::UpdateDistances");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateDistances", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TrailElementCollection.Interpolate
void GlobalNamespace::TrailElementCollection::Interpolate(float t, ByRef<::GlobalNamespace::TrailElementCollection::InterpolationState> lerpState, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Vector3> normal, ByRef<float> time) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailElementCollection::Interpolate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Interpolate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(lerpState), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t, byref(lerpState), byref(position), byref(normal), byref(time));
}
// Autogenerated method: TrailElementCollection.UpdateLerpState
void GlobalNamespace::TrailElementCollection::UpdateLerpState(float t, ByRef<::GlobalNamespace::TrailElementCollection::InterpolationState> interpolationState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailElementCollection::UpdateLerpState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLerpState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(interpolationState)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t, byref(interpolationState));
}
// Autogenerated method: TrailElementCollection.GetElement
::GlobalNamespace::TrailElement* GlobalNamespace::TrailElementCollection::GetElement(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrailElementCollection::GetElement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetElement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::TrailElement*, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ShockwaveEffect
#include "GlobalNamespace/ShockwaveEffect.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: IntSO
#include "GlobalNamespace/IntSO.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem _shockwavePS
::UnityEngine::ParticleSystem*& GlobalNamespace::ShockwaveEffect::dyn__shockwavePS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShockwaveEffect::dyn__shockwavePS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shockwavePS"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private IntSO _maxShockwaveParticles
::GlobalNamespace::IntSO*& GlobalNamespace::ShockwaveEffect::dyn__maxShockwaveParticles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShockwaveEffect::dyn__maxShockwaveParticles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxShockwaveParticles"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IntSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/UnityEngine.EmitParams _shockwavePSEmitParams
::UnityEngine::ParticleSystem::EmitParams& GlobalNamespace::ShockwaveEffect::dyn__shockwavePSEmitParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShockwaveEffect::dyn__shockwavePSEmitParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_shockwavePSEmitParams"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem::EmitParams*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _prevShockwaveParticleSpawnTime
float& GlobalNamespace::ShockwaveEffect::dyn__prevShockwaveParticleSpawnTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShockwaveEffect::dyn__prevShockwaveParticleSpawnTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevShockwaveParticleSpawnTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ShockwaveEffect.Start
void GlobalNamespace::ShockwaveEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShockwaveEffect::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ShockwaveEffect.SpawnShockwave
void GlobalNamespace::ShockwaveEffect::SpawnShockwave(::UnityEngine::Vector3 pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShockwaveEffect::SpawnShockwave");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpawnShockwave", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SpawnLaserAnimation
#include "GlobalNamespace/SpawnLaserAnimation.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: TubeBloomPrePassLight
#include "GlobalNamespace/TubeBloomPrePassLight.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _centerThresholdTransform
::UnityEngine::Transform*& GlobalNamespace::SpawnLaserAnimation::dyn__centerThresholdTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnLaserAnimation::dyn__centerThresholdTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_centerThresholdTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _horizontalLasersTransform
::UnityEngine::Transform*& GlobalNamespace::SpawnLaserAnimation::dyn__horizontalLasersTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnLaserAnimation::dyn__horizontalLasersTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_horizontalLasersTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TubeBloomPrePassLight _leftHorizontalLaser
::GlobalNamespace::TubeBloomPrePassLight*& GlobalNamespace::SpawnLaserAnimation::dyn__leftHorizontalLaser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnLaserAnimation::dyn__leftHorizontalLaser");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_leftHorizontalLaser"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TubeBloomPrePassLight**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TubeBloomPrePassLight _rightHorizontalLaser
::GlobalNamespace::TubeBloomPrePassLight*& GlobalNamespace::SpawnLaserAnimation::dyn__rightHorizontalLaser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnLaserAnimation::dyn__rightHorizontalLaser");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rightHorizontalLaser"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TubeBloomPrePassLight**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _normalizedDistance
float& GlobalNamespace::SpawnLaserAnimation::dyn__normalizedDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnLaserAnimation::dyn__normalizedDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_normalizedDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _alphaMultiplier
float& GlobalNamespace::SpawnLaserAnimation::dyn__alphaMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnLaserAnimation::dyn__alphaMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alphaMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single _laserLength
float& GlobalNamespace::SpawnLaserAnimation::dyn__laserLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnLaserAnimation::dyn__laserLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_laserLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _centerDistance
float& GlobalNamespace::SpawnLaserAnimation::dyn__centerDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnLaserAnimation::dyn__centerDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_centerDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _initialized
bool& GlobalNamespace::SpawnLaserAnimation::dyn__initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnLaserAnimation::dyn__initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SpawnLaserAnimation.InitIfNeeded
void GlobalNamespace::SpawnLaserAnimation::InitIfNeeded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnLaserAnimation::InitIfNeeded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitIfNeeded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SpawnLaserAnimation.LateUpdate
void GlobalNamespace::SpawnLaserAnimation::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnLaserAnimation::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BackgroundTextureGradientSwitchEventEffect
#include "GlobalNamespace/BackgroundTextureGradientSwitchEventEffect.hpp"
// Including type: BloomPrePassBackgroundTextureGradient
#include "GlobalNamespace/BloomPrePassBackgroundTextureGradient.hpp"
// Including type: BeatmapCallbacksController
#include "GlobalNamespace/BeatmapCallbacksController.hpp"
// Including type: BeatmapDataCallbackWrapper
#include "GlobalNamespace/BeatmapDataCallbackWrapper.hpp"
// Including type: ColorBoostBeatmapEventData
#include "GlobalNamespace/ColorBoostBeatmapEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BloomPrePassBackgroundTextureGradient _defaultTextureGradient
::GlobalNamespace::BloomPrePassBackgroundTextureGradient*& GlobalNamespace::BackgroundTextureGradientSwitchEventEffect::dyn__defaultTextureGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BackgroundTextureGradientSwitchEventEffect::dyn__defaultTextureGradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_defaultTextureGradient"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BloomPrePassBackgroundTextureGradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BloomPrePassBackgroundTextureGradient _boostTextureGradient
::GlobalNamespace::BloomPrePassBackgroundTextureGradient*& GlobalNamespace::BackgroundTextureGradientSwitchEventEffect::dyn__boostTextureGradient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BackgroundTextureGradientSwitchEventEffect::dyn__boostTextureGradient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_boostTextureGradient"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BloomPrePassBackgroundTextureGradient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapCallbacksController _beatmapCallbacksController
::GlobalNamespace::BeatmapCallbacksController*& GlobalNamespace::BackgroundTextureGradientSwitchEventEffect::dyn__beatmapCallbacksController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BackgroundTextureGradientSwitchEventEffect::dyn__beatmapCallbacksController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCallbacksController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCallbacksController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDataCallbackWrapper _beatmapDataCallbackWrapper
::GlobalNamespace::BeatmapDataCallbackWrapper*& GlobalNamespace::BackgroundTextureGradientSwitchEventEffect::dyn__beatmapDataCallbackWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BackgroundTextureGradientSwitchEventEffect::dyn__beatmapDataCallbackWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDataCallbackWrapper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataCallbackWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BackgroundTextureGradientSwitchEventEffect.Start
void GlobalNamespace::BackgroundTextureGradientSwitchEventEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BackgroundTextureGradientSwitchEventEffect::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BackgroundTextureGradientSwitchEventEffect.OnDestroy
void GlobalNamespace::BackgroundTextureGradientSwitchEventEffect::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BackgroundTextureGradientSwitchEventEffect::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BackgroundTextureGradientSwitchEventEffect.HandleBeatmapEvent
void GlobalNamespace::BackgroundTextureGradientSwitchEventEffect::HandleBeatmapEvent(::GlobalNamespace::ColorBoostBeatmapEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BackgroundTextureGradientSwitchEventEffect::HandleBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameObjectSwitchEventEffect
#include "GlobalNamespace/GameObjectSwitchEventEffect.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: BeatmapCallbacksController
#include "GlobalNamespace/BeatmapCallbacksController.hpp"
// Including type: BeatmapDataCallbackWrapper
#include "GlobalNamespace/BeatmapDataCallbackWrapper.hpp"
// Including type: BasicBeatmapEventData
#include "GlobalNamespace/BasicBeatmapEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BasicBeatmapEventType _beatmapEvent
::GlobalNamespace::BasicBeatmapEventType& GlobalNamespace::GameObjectSwitchEventEffect::dyn__beatmapEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameObjectSwitchEventEffect::dyn__beatmapEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapEvent"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BasicBeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _deactivateOnBoostObjects
::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::GameObjectSwitchEventEffect::dyn__deactivateOnBoostObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameObjectSwitchEventEffect::dyn__deactivateOnBoostObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_deactivateOnBoostObjects"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject[] _activateOnBoostObjects
::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::GameObjectSwitchEventEffect::dyn__activateOnBoostObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameObjectSwitchEventEffect::dyn__activateOnBoostObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activateOnBoostObjects"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapCallbacksController _beatmapCallbacksController
::GlobalNamespace::BeatmapCallbacksController*& GlobalNamespace::GameObjectSwitchEventEffect::dyn__beatmapCallbacksController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameObjectSwitchEventEffect::dyn__beatmapCallbacksController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCallbacksController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCallbacksController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDataCallbackWrapper _beatmapDataCallbackWrapper
::GlobalNamespace::BeatmapDataCallbackWrapper*& GlobalNamespace::GameObjectSwitchEventEffect::dyn__beatmapDataCallbackWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameObjectSwitchEventEffect::dyn__beatmapDataCallbackWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDataCallbackWrapper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataCallbackWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GameObjectSwitchEventEffect.Start
void GlobalNamespace::GameObjectSwitchEventEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameObjectSwitchEventEffect::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameObjectSwitchEventEffect.OnDestroy
void GlobalNamespace::GameObjectSwitchEventEffect::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameObjectSwitchEventEffect::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GameObjectSwitchEventEffect.HandleBeatmapEvent
void GlobalNamespace::GameObjectSwitchEventEffect::HandleBeatmapEvent(::GlobalNamespace::BasicBeatmapEventData* basicBeatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameObjectSwitchEventEffect::HandleBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(basicBeatmapEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, basicBeatmapEventData);
}
// Autogenerated method: GameObjectSwitchEventEffect.ToggleObjects
void GlobalNamespace::GameObjectSwitchEventEffect::ToggleObjects(bool isBoostOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GameObjectSwitchEventEffect::ToggleObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isBoostOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isBoostOn);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HeadObstacleLowPassAudioEffect
#include "GlobalNamespace/HeadObstacleLowPassAudioEffect.hpp"
// Including type: PlayerHeadAndObstacleInteraction
#include "GlobalNamespace/PlayerHeadAndObstacleInteraction.hpp"
// Including type: MainAudioEffects
#include "GlobalNamespace/MainAudioEffects.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private PlayerHeadAndObstacleInteraction _playerHeadAndObstacleInteraction
::GlobalNamespace::PlayerHeadAndObstacleInteraction*& GlobalNamespace::HeadObstacleLowPassAudioEffect::dyn__playerHeadAndObstacleInteraction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadObstacleLowPassAudioEffect::dyn__playerHeadAndObstacleInteraction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_playerHeadAndObstacleInteraction"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PlayerHeadAndObstacleInteraction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MainAudioEffects _mainAudioEffects
::GlobalNamespace::MainAudioEffects*& GlobalNamespace::HeadObstacleLowPassAudioEffect::dyn__mainAudioEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadObstacleLowPassAudioEffect::dyn__mainAudioEffects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainAudioEffects"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MainAudioEffects**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _headWasInObstacle
bool& GlobalNamespace::HeadObstacleLowPassAudioEffect::dyn__headWasInObstacle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadObstacleLowPassAudioEffect::dyn__headWasInObstacle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_headWasInObstacle"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HeadObstacleLowPassAudioEffect.Update
void GlobalNamespace::HeadObstacleLowPassAudioEffect::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadObstacleLowPassAudioEffect::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightColorGroup
#include "GlobalNamespace/LightColorGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightColorGroupEffect
#include "GlobalNamespace/LightColorGroupEffect.hpp"
// Including type: LightColorGroupEffect/InitData
#include "GlobalNamespace/LightColorGroupEffect_InitData.hpp"
// Including type: LightWithIdManager
#include "GlobalNamespace/LightWithIdManager.hpp"
// Including type: Tweening.SongTimeTweeningManager
#include "Tweening/SongTimeTweeningManager.hpp"
// Including type: ColorManager
#include "GlobalNamespace/ColorManager.hpp"
// Including type: BeatmapCallbacksController
#include "GlobalNamespace/BeatmapCallbacksController.hpp"
// Including type: IBpmController
#include "GlobalNamespace/IBpmController.hpp"
// Including type: Tweening.FloatTween
#include "Tweening/FloatTween.hpp"
// Including type: BeatmapDataCallbackWrapper
#include "GlobalNamespace/BeatmapDataCallbackWrapper.hpp"
// Including type: LightColorBeatmapEventData
#include "GlobalNamespace/LightColorBeatmapEventData.hpp"
// Including type: EnvironmentColorType
#include "GlobalNamespace/EnvironmentColorType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10B6CD4
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Color offColor
::UnityEngine::Color GlobalNamespace::LightColorGroupEffect::_get_offColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorGroupEffect::_get_offColor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Color>("", "LightColorGroupEffect", "offColor"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Color offColor
void GlobalNamespace::LightColorGroupEffect::_set_offColor(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorGroupEffect::_set_offColor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightColorGroupEffect", "offColor", value));
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 _lightId
int& GlobalNamespace::LightColorGroupEffect::dyn__lightId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorGroupEffect::dyn__lightId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LightWithIdManager _lightManager
::GlobalNamespace::LightWithIdManager*& GlobalNamespace::LightColorGroupEffect::dyn__lightManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorGroupEffect::dyn__lightManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LightWithIdManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Tweening.SongTimeTweeningManager _tweeningManager
::Tweening::SongTimeTweeningManager*& GlobalNamespace::LightColorGroupEffect::dyn__tweeningManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorGroupEffect::dyn__tweeningManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tweeningManager"))->offset;
  return *reinterpret_cast<::Tweening::SongTimeTweeningManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly ColorManager _colorManager
::GlobalNamespace::ColorManager*& GlobalNamespace::LightColorGroupEffect::dyn__colorManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorGroupEffect::dyn__colorManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapCallbacksController _beatmapCallbacksController
::GlobalNamespace::BeatmapCallbacksController*& GlobalNamespace::LightColorGroupEffect::dyn__beatmapCallbacksController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorGroupEffect::dyn__beatmapCallbacksController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCallbacksController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCallbacksController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IBpmController _bpmController
::GlobalNamespace::IBpmController*& GlobalNamespace::LightColorGroupEffect::dyn__bpmController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorGroupEffect::dyn__bpmController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bpmController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IBpmController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Tweening.FloatTween _floatTween
::Tweening::FloatTween*& GlobalNamespace::LightColorGroupEffect::dyn__floatTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorGroupEffect::dyn__floatTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_floatTween"))->offset;
  return *reinterpret_cast<::Tweening::FloatTween**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapDataCallbackWrapper _lightColorBeatmapEventCallbackWrapper
::GlobalNamespace::BeatmapDataCallbackWrapper*& GlobalNamespace::LightColorGroupEffect::dyn__lightColorBeatmapEventCallbackWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorGroupEffect::dyn__lightColorBeatmapEventCallbackWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightColorBeatmapEventCallbackWrapper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataCallbackWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _fromStrobeFrequency
float& GlobalNamespace::LightColorGroupEffect::dyn__fromStrobeFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorGroupEffect::dyn__fromStrobeFrequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fromStrobeFrequency"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _toStrobeFrequency
float& GlobalNamespace::LightColorGroupEffect::dyn__toStrobeFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorGroupEffect::dyn__toStrobeFrequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toStrobeFrequency"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _fromColor
::UnityEngine::Color& GlobalNamespace::LightColorGroupEffect::dyn__fromColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorGroupEffect::dyn__fromColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fromColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _toColor
::UnityEngine::Color& GlobalNamespace::LightColorGroupEffect::dyn__toColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorGroupEffect::dyn__toColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_toColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _alternativeFromColor
::UnityEngine::Color& GlobalNamespace::LightColorGroupEffect::dyn__alternativeFromColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorGroupEffect::dyn__alternativeFromColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alternativeFromColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _alternativeToColor
::UnityEngine::Color& GlobalNamespace::LightColorGroupEffect::dyn__alternativeToColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorGroupEffect::dyn__alternativeToColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alternativeToColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _usingBoostColors
bool& GlobalNamespace::LightColorGroupEffect::dyn__usingBoostColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorGroupEffect::dyn__usingBoostColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_usingBoostColors"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LightColorGroupEffect..cctor
void GlobalNamespace::LightColorGroupEffect::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorGroupEffect::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LightColorGroupEffect", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LightColorGroupEffect.Cleanup
void GlobalNamespace::LightColorGroupEffect::Cleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorGroupEffect::Cleanup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cleanup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightColorGroupEffect.HandleColorChangeBeatmapEvent
void GlobalNamespace::LightColorGroupEffect::HandleColorChangeBeatmapEvent(::GlobalNamespace::LightColorBeatmapEventData* currentEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorGroupEffect::HandleColorChangeBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleColorChangeBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currentEventData);
}
// Autogenerated method: LightColorGroupEffect.UseBoostColors
void GlobalNamespace::LightColorGroupEffect::UseBoostColors(bool useBoostColors) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorGroupEffect::UseBoostColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UseBoostColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(useBoostColors)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, useBoostColors);
}
// Autogenerated method: LightColorGroupEffect.SetData
void GlobalNamespace::LightColorGroupEffect::SetData(::UnityEngine::Color fromColor, ::UnityEngine::Color toColor, ::UnityEngine::Color alternativeFromColor, ::UnityEngine::Color alternativeToColor, float fromStrobeBeatFrequency, float toStrobeBeatFrequency) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorGroupEffect::SetData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fromColor), ::il2cpp_utils::ExtractType(toColor), ::il2cpp_utils::ExtractType(alternativeFromColor), ::il2cpp_utils::ExtractType(alternativeToColor), ::il2cpp_utils::ExtractType(fromStrobeBeatFrequency), ::il2cpp_utils::ExtractType(toStrobeBeatFrequency)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fromColor, toColor, alternativeFromColor, alternativeToColor, fromStrobeBeatFrequency, toStrobeBeatFrequency);
}
// Autogenerated method: LightColorGroupEffect.GetColor
::UnityEngine::Color GlobalNamespace::LightColorGroupEffect::GetColor(::GlobalNamespace::EnvironmentColorType colorType, bool colorBoost, float brightness) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorGroupEffect::GetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colorType), ::il2cpp_utils::ExtractType(colorBoost), ::il2cpp_utils::ExtractType(brightness)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method, colorType, colorBoost, brightness);
}
// Autogenerated method: LightColorGroupEffect.SetColor
void GlobalNamespace::LightColorGroupEffect::SetColor(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorGroupEffect::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightColorGroupEffect/InitData
#include "GlobalNamespace/LightColorGroupEffect_InitData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 groupId
int& GlobalNamespace::LightColorGroupEffect::InitData::dyn_groupId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorGroupEffect::InitData::dyn_groupId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "groupId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 elementId
int& GlobalNamespace::LightColorGroupEffect::InitData::dyn_elementId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorGroupEffect::InitData::dyn_elementId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 lightId
int& GlobalNamespace::LightColorGroupEffect::InitData::dyn_lightId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorGroupEffect::InitData::dyn_lightId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lightId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightColorGroupEffectManager
#include "GlobalNamespace/LightColorGroupEffectManager.hpp"
// Including type: LightGroup
#include "GlobalNamespace/LightGroup.hpp"
// Including type: BeatmapCallbacksController
#include "GlobalNamespace/BeatmapCallbacksController.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: BeatmapDataCallbackWrapper
#include "GlobalNamespace/BeatmapDataCallbackWrapper.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: LightColorGroupEffect
#include "GlobalNamespace/LightColorGroupEffect.hpp"
// Including type: System.Collections.Generic.IReadOnlyCollection`1
#include "System/Collections/Generic/IReadOnlyCollection_1.hpp"
// Including type: ColorBoostBeatmapEventData
#include "GlobalNamespace/ColorBoostBeatmapEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly LightGroup[] _lightGroups
::ArrayW<::GlobalNamespace::LightGroup*>& GlobalNamespace::LightColorGroupEffectManager::dyn__lightGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorGroupEffectManager::dyn__lightGroups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightGroups"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::LightGroup*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapCallbacksController _beatmapCallbacksController
::GlobalNamespace::BeatmapCallbacksController*& GlobalNamespace::LightColorGroupEffectManager::dyn__beatmapCallbacksController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorGroupEffectManager::dyn__beatmapCallbacksController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCallbacksController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCallbacksController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Zenject.DiContainer _container
::Zenject::DiContainer*& GlobalNamespace::LightColorGroupEffectManager::dyn__container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorGroupEffectManager::dyn__container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_container"))->offset;
  return *reinterpret_cast<::Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDataCallbackWrapper _colorBoostBeatmapDataCallbackWrapper
::GlobalNamespace::BeatmapDataCallbackWrapper*& GlobalNamespace::LightColorGroupEffectManager::dyn__colorBoostBeatmapDataCallbackWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorGroupEffectManager::dyn__colorBoostBeatmapDataCallbackWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorBoostBeatmapDataCallbackWrapper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataCallbackWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<LightColorGroupEffect> _lightColorGroupEffects
::System::Collections::Generic::List_1<::GlobalNamespace::LightColorGroupEffect*>*& GlobalNamespace::LightColorGroupEffectManager::dyn__lightColorGroupEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorGroupEffectManager::dyn__lightColorGroupEffects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightColorGroupEffects"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::LightColorGroupEffect*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LightColorGroupEffectManager.get_lightGroups
::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::LightGroup*>* GlobalNamespace::LightColorGroupEffectManager::get_lightGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorGroupEffectManager::get_lightGroups");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lightGroups", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IReadOnlyCollection_1<::GlobalNamespace::LightGroup*>*, false>(this, ___internal__method);
}
// Autogenerated method: LightColorGroupEffectManager.Start
void GlobalNamespace::LightColorGroupEffectManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorGroupEffectManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightColorGroupEffectManager.OnDestroy
void GlobalNamespace::LightColorGroupEffectManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorGroupEffectManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightColorGroupEffectManager.HandleColorBoostBeatmapEvent
void GlobalNamespace::LightColorGroupEffectManager::HandleColorBoostBeatmapEvent(::GlobalNamespace::ColorBoostBeatmapEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorGroupEffectManager::HandleColorBoostBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleColorBoostBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightColorGroupParent
#include "GlobalNamespace/LightColorGroupParent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lightId
int& GlobalNamespace::LightColorGroupParent::dyn__lightId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorGroupParent::dyn__lightId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LightColorGroupParent.get_lightId
int GlobalNamespace::LightColorGroupParent::get_lightId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightColorGroupParent::get_lightId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lightId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightGroupElementsSpawner
#include "GlobalNamespace/LightGroupElementsSpawner.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject _lightPrefab
::UnityEngine::GameObject*& GlobalNamespace::LightGroupElementsSpawner::dyn__lightPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightGroupElementsSpawner::dyn__lightPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightGroupLinearLayouter
#include "GlobalNamespace/LightGroupLinearLayouter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _movementStep
::UnityEngine::Vector3& GlobalNamespace::LightGroupLinearLayouter::dyn__movementStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightGroupLinearLayouter::dyn__movementStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_movementStep"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _startFromCenter
bool& GlobalNamespace::LightGroupLinearLayouter::dyn__startFromCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightGroupLinearLayouter::dyn__startFromCenter");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startFromCenter"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightGroupSubsystem
#include "GlobalNamespace/LightGroupSubsystem.hpp"
// Including type: LightGroupSubsystem/RefreshContext
#include "GlobalNamespace/LightGroupSubsystem_RefreshContext.hpp"
// Including type: LightGroup
#include "GlobalNamespace/LightGroup.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private LightGroup _lightGroup
::GlobalNamespace::LightGroup*& GlobalNamespace::LightGroupSubsystem::dyn__lightGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightGroupSubsystem::dyn__lightGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightGroup"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LightGroup**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LightGroupSubsystem.get_groupId
int GlobalNamespace::LightGroupSubsystem::get_groupId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightGroupSubsystem::get_groupId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_groupId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LightGroupSubsystem.get_lightGroup
::GlobalNamespace::LightGroup* GlobalNamespace::LightGroupSubsystem::get_lightGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightGroupSubsystem::get_lightGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lightGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::LightGroup*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightGroupSubsystem/RefreshContext
#include "GlobalNamespace/LightGroupSubsystem_RefreshContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LightGroupSubsystem/RefreshContext LightGroup
::GlobalNamespace::LightGroupSubsystem::RefreshContext GlobalNamespace::LightGroupSubsystem::RefreshContext::_get_LightGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightGroupSubsystem::RefreshContext::_get_LightGroup");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LightGroupSubsystem::RefreshContext>("", "LightGroupSubsystem/RefreshContext", "LightGroup"));
}
// Autogenerated static field setter
// Set static field: static public LightGroupSubsystem/RefreshContext LightGroup
void GlobalNamespace::LightGroupSubsystem::RefreshContext::_set_LightGroup(::GlobalNamespace::LightGroupSubsystem::RefreshContext value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightGroupSubsystem::RefreshContext::_set_LightGroup");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightGroupSubsystem/RefreshContext", "LightGroup", value));
}
// Autogenerated static field getter
// Get static field: static public LightGroupSubsystem/RefreshContext Self
::GlobalNamespace::LightGroupSubsystem::RefreshContext GlobalNamespace::LightGroupSubsystem::RefreshContext::_get_Self() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightGroupSubsystem::RefreshContext::_get_Self");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::LightGroupSubsystem::RefreshContext>("", "LightGroupSubsystem/RefreshContext", "Self"));
}
// Autogenerated static field setter
// Set static field: static public LightGroupSubsystem/RefreshContext Self
void GlobalNamespace::LightGroupSubsystem::RefreshContext::_set_Self(::GlobalNamespace::LightGroupSubsystem::RefreshContext value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightGroupSubsystem::RefreshContext::_set_Self");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightGroupSubsystem/RefreshContext", "Self", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
int& GlobalNamespace::LightGroupSubsystem::RefreshContext::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightGroupSubsystem::RefreshContext::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightGroupXTransform
#include "GlobalNamespace/LightGroupXTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightGroupYTransform
#include "GlobalNamespace/LightGroupYTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightRotationGroup
#include "GlobalNamespace/LightRotationGroup.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean _mirrorX
bool& GlobalNamespace::LightRotationGroup::dyn__mirrorX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationGroup::dyn__mirrorX");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirrorX"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _mirrorY
bool& GlobalNamespace::LightRotationGroup::dyn__mirrorY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationGroup::dyn__mirrorY");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirrorY"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform[] _xTransforms
::ArrayW<::UnityEngine::Transform*>& GlobalNamespace::LightRotationGroup::dyn__xTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationGroup::dyn__xTransforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_xTransforms"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform[] _yTransforms
::ArrayW<::UnityEngine::Transform*>& GlobalNamespace::LightRotationGroup::dyn__yTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationGroup::dyn__yTransforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yTransforms"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LightRotationGroup.get_mirrorX
bool GlobalNamespace::LightRotationGroup::get_mirrorX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationGroup::get_mirrorX");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mirrorX", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LightRotationGroup.get_mirrorY
bool GlobalNamespace::LightRotationGroup::get_mirrorY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationGroup::get_mirrorY");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_mirrorY", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LightRotationGroup.get_xTransforms
::ArrayW<::UnityEngine::Transform*> GlobalNamespace::LightRotationGroup::get_xTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationGroup::get_xTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_xTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Transform*>, false>(this, ___internal__method);
}
// Autogenerated method: LightRotationGroup.get_yTransforms
::ArrayW<::UnityEngine::Transform*> GlobalNamespace::LightRotationGroup::get_yTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationGroup::get_yTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_yTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Transform*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightRotationGroupEffect
#include "GlobalNamespace/LightRotationGroupEffect.hpp"
// Including type: LightRotationGroupEffect/InitData
#include "GlobalNamespace/LightRotationGroupEffect_InitData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Tweening.SongTimeTweeningManager
#include "Tweening/SongTimeTweeningManager.hpp"
// Including type: BeatmapCallbacksController
#include "GlobalNamespace/BeatmapCallbacksController.hpp"
// Including type: Tweening.FloatTween
#include "Tweening/FloatTween.hpp"
// Including type: BeatmapDataCallbackWrapper
#include "GlobalNamespace/BeatmapDataCallbackWrapper.hpp"
// Including type: LightRotationDirection
#include "GlobalNamespace/LightRotationDirection.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Transform _transform
::UnityEngine::Transform*& GlobalNamespace::LightRotationGroupEffect::dyn__transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationGroupEffect::dyn__transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LightRotationBeatmapEventData/Axis _axis
::GlobalNamespace::LightRotationBeatmapEventData::Axis& GlobalNamespace::LightRotationGroupEffect::dyn__axis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationGroupEffect::dyn__axis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_axis"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LightRotationBeatmapEventData::Axis*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _mirrored
bool& GlobalNamespace::LightRotationGroupEffect::dyn__mirrored() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationGroupEffect::dyn__mirrored");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mirrored"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Tweening.SongTimeTweeningManager _tweeningManager
::Tweening::SongTimeTweeningManager*& GlobalNamespace::LightRotationGroupEffect::dyn__tweeningManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationGroupEffect::dyn__tweeningManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tweeningManager"))->offset;
  return *reinterpret_cast<::Tweening::SongTimeTweeningManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapCallbacksController _beatmapCallbacksController
::GlobalNamespace::BeatmapCallbacksController*& GlobalNamespace::LightRotationGroupEffect::dyn__beatmapCallbacksController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationGroupEffect::dyn__beatmapCallbacksController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCallbacksController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCallbacksController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Tweening.FloatTween _rotationTween
::Tweening::FloatTween*& GlobalNamespace::LightRotationGroupEffect::dyn__rotationTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationGroupEffect::dyn__rotationTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationTween"))->offset;
  return *reinterpret_cast<::Tweening::FloatTween**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapDataCallbackWrapper _lightRotationBeatmapEventCallbackWrapper
::GlobalNamespace::BeatmapDataCallbackWrapper*& GlobalNamespace::LightRotationGroupEffect::dyn__lightRotationBeatmapEventCallbackWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationGroupEffect::dyn__lightRotationBeatmapEventCallbackWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightRotationBeatmapEventCallbackWrapper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataCallbackWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LightRotationGroupEffect.Cleanup
void GlobalNamespace::LightRotationGroupEffect::Cleanup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationGroupEffect::Cleanup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Cleanup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightRotationGroupEffect.HandleRotationChangeBeatmapEvent
void GlobalNamespace::LightRotationGroupEffect::HandleRotationChangeBeatmapEvent(::GlobalNamespace::LightRotationBeatmapEventData* currentEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationGroupEffect::HandleRotationChangeBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleRotationChangeBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currentEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currentEventData);
}
// Autogenerated method: LightRotationGroupEffect.SetRotation
void GlobalNamespace::LightRotationGroupEffect::SetRotation(float rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationGroupEffect::SetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rotation);
}
// Autogenerated method: LightRotationGroupEffect.ComputeTargetAngle
float GlobalNamespace::LightRotationGroupEffect::ComputeTargetAngle(float startAngle, float targetAngle, int loopCount, ::GlobalNamespace::LightRotationDirection rotationOrientation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationGroupEffect::ComputeTargetAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "LightRotationGroupEffect", "ComputeTargetAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startAngle), ::il2cpp_utils::ExtractType(targetAngle), ::il2cpp_utils::ExtractType(loopCount), ::il2cpp_utils::ExtractType(rotationOrientation)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, startAngle, targetAngle, loopCount, rotationOrientation);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightRotationGroupEffect/InitData
#include "GlobalNamespace/LightRotationGroupEffect_InitData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 groupId
int& GlobalNamespace::LightRotationGroupEffect::InitData::dyn_groupId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationGroupEffect::InitData::dyn_groupId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "groupId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 elementId
int& GlobalNamespace::LightRotationGroupEffect::InitData::dyn_elementId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationGroupEffect::InitData::dyn_elementId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "elementId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly LightRotationBeatmapEventData/Axis axis
::GlobalNamespace::LightRotationBeatmapEventData::Axis& GlobalNamespace::LightRotationGroupEffect::InitData::dyn_axis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationGroupEffect::InitData::dyn_axis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "axis"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LightRotationBeatmapEventData::Axis*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Boolean mirrored
bool& GlobalNamespace::LightRotationGroupEffect::InitData::dyn_mirrored() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationGroupEffect::InitData::dyn_mirrored");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mirrored"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly UnityEngine.Transform transform
::UnityEngine::Transform*& GlobalNamespace::LightRotationGroupEffect::InitData::dyn_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationGroupEffect::InitData::dyn_transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightRotationGroupEffectManager
#include "GlobalNamespace/LightRotationGroupEffectManager.hpp"
// Including type: LightRotationGroup
#include "GlobalNamespace/LightRotationGroup.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: LightRotationGroupEffect
#include "GlobalNamespace/LightRotationGroupEffect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly LightRotationGroup[] _lightRotationGroups
::ArrayW<::GlobalNamespace::LightRotationGroup*>& GlobalNamespace::LightRotationGroupEffectManager::dyn__lightRotationGroups() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationGroupEffectManager::dyn__lightRotationGroups");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightRotationGroups"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::LightRotationGroup*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Zenject.DiContainer _container
::Zenject::DiContainer*& GlobalNamespace::LightRotationGroupEffectManager::dyn__container() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationGroupEffectManager::dyn__container");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_container"))->offset;
  return *reinterpret_cast<::Zenject::DiContainer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Collections.Generic.List`1<LightRotationGroupEffect> _lightRotationGroupEffects
::System::Collections::Generic::List_1<::GlobalNamespace::LightRotationGroupEffect*>*& GlobalNamespace::LightRotationGroupEffectManager::dyn__lightRotationGroupEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationGroupEffectManager::dyn__lightRotationGroupEffects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightRotationGroupEffects"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::LightRotationGroupEffect*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LightRotationGroupEffectManager.Start
void GlobalNamespace::LightRotationGroupEffectManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationGroupEffectManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightRotationGroupEffectManager.OnDestroy
void GlobalNamespace::LightRotationGroupEffectManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationGroupEffectManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightPairRotationEventEffect
#include "GlobalNamespace/LightPairRotationEventEffect.hpp"
// Including type: LightPairRotationEventEffect/RotationData
#include "GlobalNamespace/LightPairRotationEventEffect_RotationData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: BeatmapCallbacksController
#include "GlobalNamespace/BeatmapCallbacksController.hpp"
// Including type: IAudioTimeSource
#include "GlobalNamespace/IAudioTimeSource.hpp"
// Including type: BeatmapDataCallbackWrapper
#include "GlobalNamespace/BeatmapDataCallbackWrapper.hpp"
// Including type: BasicBeatmapEventData
#include "GlobalNamespace/BasicBeatmapEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kSpeedMultiplier
float GlobalNamespace::LightPairRotationEventEffect::_get_kSpeedMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairRotationEventEffect::_get_kSpeedMultiplier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "LightPairRotationEventEffect", "kSpeedMultiplier"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kSpeedMultiplier
void GlobalNamespace::LightPairRotationEventEffect::_set_kSpeedMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairRotationEventEffect::_set_kSpeedMultiplier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightPairRotationEventEffect", "kSpeedMultiplier", value));
}
// Autogenerated instance field getter
// Get instance field: private BasicBeatmapEventType _eventL
::GlobalNamespace::BasicBeatmapEventType& GlobalNamespace::LightPairRotationEventEffect::dyn__eventL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairRotationEventEffect::dyn__eventL");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eventL"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BasicBeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BasicBeatmapEventType _eventR
::GlobalNamespace::BasicBeatmapEventType& GlobalNamespace::LightPairRotationEventEffect::dyn__eventR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairRotationEventEffect::dyn__eventR");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eventR"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BasicBeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BasicBeatmapEventType _switchOverrideRandomValuesEvent
::GlobalNamespace::BasicBeatmapEventType& GlobalNamespace::LightPairRotationEventEffect::dyn__switchOverrideRandomValuesEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairRotationEventEffect::dyn__switchOverrideRandomValuesEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_switchOverrideRandomValuesEvent"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BasicBeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _rotationVector
::UnityEngine::Vector3& GlobalNamespace::LightPairRotationEventEffect::dyn__rotationVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairRotationEventEffect::dyn__rotationVector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationVector"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideRandomValues
bool& GlobalNamespace::LightPairRotationEventEffect::dyn__overrideRandomValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairRotationEventEffect::dyn__overrideRandomValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideRandomValues"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _useZPositionForAngleOffset
bool& GlobalNamespace::LightPairRotationEventEffect::dyn__useZPositionForAngleOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairRotationEventEffect::dyn__useZPositionForAngleOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_useZPositionForAngleOffset"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _zPositionAngleOffsetScale
float& GlobalNamespace::LightPairRotationEventEffect::dyn__zPositionAngleOffsetScale() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairRotationEventEffect::dyn__zPositionAngleOffsetScale");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_zPositionAngleOffsetScale"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startRotation
float& GlobalNamespace::LightPairRotationEventEffect::dyn__startRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairRotationEventEffect::dyn__startRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startRotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _transformL
::UnityEngine::Transform*& GlobalNamespace::LightPairRotationEventEffect::dyn__transformL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairRotationEventEffect::dyn__transformL");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transformL"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _transformR
::UnityEngine::Transform*& GlobalNamespace::LightPairRotationEventEffect::dyn__transformR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairRotationEventEffect::dyn__transformR");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transformR"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapCallbacksController _beatmapCallbacksController
::GlobalNamespace::BeatmapCallbacksController*& GlobalNamespace::LightPairRotationEventEffect::dyn__beatmapCallbacksController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairRotationEventEffect::dyn__beatmapCallbacksController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCallbacksController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCallbacksController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IAudioTimeSource _audioTimeSource
::GlobalNamespace::IAudioTimeSource*& GlobalNamespace::LightPairRotationEventEffect::dyn__audioTimeSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairRotationEventEffect::dyn__audioTimeSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSource"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IAudioTimeSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LightPairRotationEventEffect/RotationData _rotationDataL
::GlobalNamespace::LightPairRotationEventEffect::RotationData*& GlobalNamespace::LightPairRotationEventEffect::dyn__rotationDataL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairRotationEventEffect::dyn__rotationDataL");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationDataL"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LightPairRotationEventEffect::RotationData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LightPairRotationEventEffect/RotationData _rotationDataR
::GlobalNamespace::LightPairRotationEventEffect::RotationData*& GlobalNamespace::LightPairRotationEventEffect::dyn__rotationDataR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairRotationEventEffect::dyn__rotationDataR");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationDataR"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LightPairRotationEventEffect::RotationData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _randomGenerationFrameNum
int& GlobalNamespace::LightPairRotationEventEffect::dyn__randomGenerationFrameNum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairRotationEventEffect::dyn__randomGenerationFrameNum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomGenerationFrameNum"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _randomStartRotation
float& GlobalNamespace::LightPairRotationEventEffect::dyn__randomStartRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairRotationEventEffect::dyn__randomStartRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomStartRotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _randomDirection
float& GlobalNamespace::LightPairRotationEventEffect::dyn__randomDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairRotationEventEffect::dyn__randomDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomDirection"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDataCallbackWrapper _beatmapDataCallbackWrapper
::GlobalNamespace::BeatmapDataCallbackWrapper*& GlobalNamespace::LightPairRotationEventEffect::dyn__beatmapDataCallbackWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairRotationEventEffect::dyn__beatmapDataCallbackWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDataCallbackWrapper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataCallbackWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LightPairRotationEventEffect.Start
void GlobalNamespace::LightPairRotationEventEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairRotationEventEffect::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightPairRotationEventEffect.Update
void GlobalNamespace::LightPairRotationEventEffect::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairRotationEventEffect::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightPairRotationEventEffect.OnDestroy
void GlobalNamespace::LightPairRotationEventEffect::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairRotationEventEffect::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightPairRotationEventEffect.HandleBeatmapEvent
void GlobalNamespace::LightPairRotationEventEffect::HandleBeatmapEvent(::GlobalNamespace::BasicBeatmapEventData* basicBeatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairRotationEventEffect::HandleBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(basicBeatmapEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, basicBeatmapEventData);
}
// Autogenerated method: LightPairRotationEventEffect.UpdateRotationData
void GlobalNamespace::LightPairRotationEventEffect::UpdateRotationData(int beatmapEventDataValue, ::GlobalNamespace::LightPairRotationEventEffect::RotationData* rotationData, float startRotationOffset, float direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairRotationEventEffect::UpdateRotationData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateRotationData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventDataValue), ::il2cpp_utils::ExtractType(rotationData), ::il2cpp_utils::ExtractType(startRotationOffset), ::il2cpp_utils::ExtractType(direction)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapEventDataValue, rotationData, startRotationOffset, direction);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightPairRotationEventEffect/RotationData
#include "GlobalNamespace/LightPairRotationEventEffect_RotationData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean enabled
bool& GlobalNamespace::LightPairRotationEventEffect::RotationData::dyn_enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairRotationEventEffect::RotationData::dyn_enabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotationSpeed
float& GlobalNamespace::LightPairRotationEventEffect::RotationData::dyn_rotationSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairRotationEventEffect::RotationData::dyn_rotationSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion startRotation
::UnityEngine::Quaternion& GlobalNamespace::LightPairRotationEventEffect::RotationData::dyn_startRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairRotationEventEffect::RotationData::dyn_startRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform transform
::UnityEngine::Transform*& GlobalNamespace::LightPairRotationEventEffect::RotationData::dyn_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairRotationEventEffect::RotationData::dyn_transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single startRotationAngle
float& GlobalNamespace::LightPairRotationEventEffect::RotationData::dyn_startRotationAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairRotationEventEffect::RotationData::dyn_startRotationAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startRotationAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotationAngle
float& GlobalNamespace::LightPairRotationEventEffect::RotationData::dyn_rotationAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairRotationEventEffect::RotationData::dyn_rotationAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightPairSinMoveEventEffect
#include "GlobalNamespace/LightPairSinMoveEventEffect.hpp"
// Including type: LightPairSinMoveEventEffect/MovementData
#include "GlobalNamespace/LightPairSinMoveEventEffect_MovementData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: BeatmapCallbacksController
#include "GlobalNamespace/BeatmapCallbacksController.hpp"
// Including type: IAudioTimeSource
#include "GlobalNamespace/IAudioTimeSource.hpp"
// Including type: BeatmapDataCallbackWrapper
#include "GlobalNamespace/BeatmapDataCallbackWrapper.hpp"
// Including type: BasicBeatmapEventData
#include "GlobalNamespace/BasicBeatmapEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kSpeedMultiplier
float GlobalNamespace::LightPairSinMoveEventEffect::_get_kSpeedMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairSinMoveEventEffect::_get_kSpeedMultiplier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "LightPairSinMoveEventEffect", "kSpeedMultiplier"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kSpeedMultiplier
void GlobalNamespace::LightPairSinMoveEventEffect::_set_kSpeedMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairSinMoveEventEffect::_set_kSpeedMultiplier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightPairSinMoveEventEffect", "kSpeedMultiplier", value));
}
// Autogenerated instance field getter
// Get instance field: private BasicBeatmapEventType _eventL
::GlobalNamespace::BasicBeatmapEventType& GlobalNamespace::LightPairSinMoveEventEffect::dyn__eventL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairSinMoveEventEffect::dyn__eventL");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eventL"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BasicBeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BasicBeatmapEventType _eventR
::GlobalNamespace::BasicBeatmapEventType& GlobalNamespace::LightPairSinMoveEventEffect::dyn__eventR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairSinMoveEventEffect::dyn__eventR");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eventR"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BasicBeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BasicBeatmapEventType _switchOverrideRandomValuesEvent
::GlobalNamespace::BasicBeatmapEventType& GlobalNamespace::LightPairSinMoveEventEffect::dyn__switchOverrideRandomValuesEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairSinMoveEventEffect::dyn__switchOverrideRandomValuesEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_switchOverrideRandomValuesEvent"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BasicBeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _overrideRandomValues
bool& GlobalNamespace::LightPairSinMoveEventEffect::dyn__overrideRandomValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairSinMoveEventEffect::dyn__overrideRandomValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_overrideRandomValues"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startValueOffset
float& GlobalNamespace::LightPairSinMoveEventEffect::dyn__startValueOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairSinMoveEventEffect::dyn__startValueOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startValueOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _startPositionOffset
::UnityEngine::Vector3& GlobalNamespace::LightPairSinMoveEventEffect::dyn__startPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairSinMoveEventEffect::dyn__startPositionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startPositionOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _endPositionOffset
::UnityEngine::Vector3& GlobalNamespace::LightPairSinMoveEventEffect::dyn__endPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairSinMoveEventEffect::dyn__endPositionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endPositionOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _transformL
::UnityEngine::Transform*& GlobalNamespace::LightPairSinMoveEventEffect::dyn__transformL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairSinMoveEventEffect::dyn__transformL");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transformL"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _transformR
::UnityEngine::Transform*& GlobalNamespace::LightPairSinMoveEventEffect::dyn__transformR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairSinMoveEventEffect::dyn__transformR");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transformR"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapCallbacksController _beatmapCallbacksController
::GlobalNamespace::BeatmapCallbacksController*& GlobalNamespace::LightPairSinMoveEventEffect::dyn__beatmapCallbacksController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairSinMoveEventEffect::dyn__beatmapCallbacksController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCallbacksController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCallbacksController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IAudioTimeSource _audioTimeSource
::GlobalNamespace::IAudioTimeSource*& GlobalNamespace::LightPairSinMoveEventEffect::dyn__audioTimeSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairSinMoveEventEffect::dyn__audioTimeSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSource"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IAudioTimeSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LightPairSinMoveEventEffect/MovementData _movementDataL
::GlobalNamespace::LightPairSinMoveEventEffect::MovementData*& GlobalNamespace::LightPairSinMoveEventEffect::dyn__movementDataL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairSinMoveEventEffect::dyn__movementDataL");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_movementDataL"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LightPairSinMoveEventEffect::MovementData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LightPairSinMoveEventEffect/MovementData _movementDataR
::GlobalNamespace::LightPairSinMoveEventEffect::MovementData*& GlobalNamespace::LightPairSinMoveEventEffect::dyn__movementDataR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairSinMoveEventEffect::dyn__movementDataR");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_movementDataR"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LightPairSinMoveEventEffect::MovementData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _randomGenerationFrameNum
int& GlobalNamespace::LightPairSinMoveEventEffect::dyn__randomGenerationFrameNum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairSinMoveEventEffect::dyn__randomGenerationFrameNum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomGenerationFrameNum"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _randomStartOffset
float& GlobalNamespace::LightPairSinMoveEventEffect::dyn__randomStartOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairSinMoveEventEffect::dyn__randomStartOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_randomStartOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDataCallbackWrapper _beatmapDataCallbackWrapper
::GlobalNamespace::BeatmapDataCallbackWrapper*& GlobalNamespace::LightPairSinMoveEventEffect::dyn__beatmapDataCallbackWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairSinMoveEventEffect::dyn__beatmapDataCallbackWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDataCallbackWrapper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataCallbackWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LightPairSinMoveEventEffect.Start
void GlobalNamespace::LightPairSinMoveEventEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairSinMoveEventEffect::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightPairSinMoveEventEffect.Update
void GlobalNamespace::LightPairSinMoveEventEffect::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairSinMoveEventEffect::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightPairSinMoveEventEffect.OnDestroy
void GlobalNamespace::LightPairSinMoveEventEffect::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairSinMoveEventEffect::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightPairSinMoveEventEffect.HandleBeatmapEvent
void GlobalNamespace::LightPairSinMoveEventEffect::HandleBeatmapEvent(::GlobalNamespace::BasicBeatmapEventData* basicBeatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairSinMoveEventEffect::HandleBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(basicBeatmapEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, basicBeatmapEventData);
}
// Autogenerated method: LightPairSinMoveEventEffect.UpdateMovementData
void GlobalNamespace::LightPairSinMoveEventEffect::UpdateMovementData(int beatmapEventDataValue, ::GlobalNamespace::LightPairSinMoveEventEffect::MovementData* movementData, float movementValueOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairSinMoveEventEffect::UpdateMovementData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateMovementData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventDataValue), ::il2cpp_utils::ExtractType(movementData), ::il2cpp_utils::ExtractType(movementValueOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapEventDataValue, movementData, movementValueOffset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightPairSinMoveEventEffect/MovementData
#include "GlobalNamespace/LightPairSinMoveEventEffect_MovementData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean enabled
bool& GlobalNamespace::LightPairSinMoveEventEffect::MovementData::dyn_enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairSinMoveEventEffect::MovementData::dyn_enabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single speed
float& GlobalNamespace::LightPairSinMoveEventEffect::MovementData::dyn_speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairSinMoveEventEffect::MovementData::dyn_speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 startPosition
::UnityEngine::Vector3& GlobalNamespace::LightPairSinMoveEventEffect::MovementData::dyn_startPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairSinMoveEventEffect::MovementData::dyn_startPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform transform
::UnityEngine::Transform*& GlobalNamespace::LightPairSinMoveEventEffect::MovementData::dyn_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairSinMoveEventEffect::MovementData::dyn_transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single startMovementValue
float& GlobalNamespace::LightPairSinMoveEventEffect::MovementData::dyn_startMovementValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairSinMoveEventEffect::MovementData::dyn_startMovementValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startMovementValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single movementValue
float& GlobalNamespace::LightPairSinMoveEventEffect::MovementData::dyn_movementValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairSinMoveEventEffect::MovementData::dyn_movementValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "movementValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single side
float& GlobalNamespace::LightPairSinMoveEventEffect::MovementData::dyn_side() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightPairSinMoveEventEffect::MovementData::dyn_side");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "side"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightRotationEventEffect
#include "GlobalNamespace/LightRotationEventEffect.hpp"
// Including type: BeatmapCallbacksController
#include "GlobalNamespace/BeatmapCallbacksController.hpp"
// Including type: IAudioTimeSource
#include "GlobalNamespace/IAudioTimeSource.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: BeatmapDataCallbackWrapper
#include "GlobalNamespace/BeatmapDataCallbackWrapper.hpp"
// Including type: BasicBeatmapEventData
#include "GlobalNamespace/BasicBeatmapEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kSpeedMultiplier
float GlobalNamespace::LightRotationEventEffect::_get_kSpeedMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationEventEffect::_get_kSpeedMultiplier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "LightRotationEventEffect", "kSpeedMultiplier"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kSpeedMultiplier
void GlobalNamespace::LightRotationEventEffect::_set_kSpeedMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationEventEffect::_set_kSpeedMultiplier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightRotationEventEffect", "kSpeedMultiplier", value));
}
// Autogenerated instance field getter
// Get instance field: private BasicBeatmapEventType _event
::GlobalNamespace::BasicBeatmapEventType& GlobalNamespace::LightRotationEventEffect::dyn__event() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationEventEffect::dyn__event");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_event"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BasicBeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _rotationVector
::UnityEngine::Vector3& GlobalNamespace::LightRotationEventEffect::dyn__rotationVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationEventEffect::dyn__rotationVector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationVector"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rotationSpeedMultiplier
float& GlobalNamespace::LightRotationEventEffect::dyn__rotationSpeedMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationEventEffect::dyn__rotationSpeedMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationSpeedMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapCallbacksController _beatmapCallbacksController
::GlobalNamespace::BeatmapCallbacksController*& GlobalNamespace::LightRotationEventEffect::dyn__beatmapCallbacksController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationEventEffect::dyn__beatmapCallbacksController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCallbacksController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCallbacksController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IAudioTimeSource _audioTimeSource
::GlobalNamespace::IAudioTimeSource*& GlobalNamespace::LightRotationEventEffect::dyn__audioTimeSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationEventEffect::dyn__audioTimeSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSource"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IAudioTimeSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _transform
::UnityEngine::Transform*& GlobalNamespace::LightRotationEventEffect::dyn__transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationEventEffect::dyn__transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _startRotation
::UnityEngine::Quaternion& GlobalNamespace::LightRotationEventEffect::dyn__startRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationEventEffect::dyn__startRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rotationSpeed
float& GlobalNamespace::LightRotationEventEffect::dyn__rotationSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationEventEffect::dyn__rotationSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDataCallbackWrapper _beatmapDataCallbackWrapper
::GlobalNamespace::BeatmapDataCallbackWrapper*& GlobalNamespace::LightRotationEventEffect::dyn__beatmapDataCallbackWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationEventEffect::dyn__beatmapDataCallbackWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDataCallbackWrapper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataCallbackWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LightRotationEventEffect.Start
void GlobalNamespace::LightRotationEventEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationEventEffect::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightRotationEventEffect.Update
void GlobalNamespace::LightRotationEventEffect::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationEventEffect::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightRotationEventEffect.OnDestroy
void GlobalNamespace::LightRotationEventEffect::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationEventEffect::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightRotationEventEffect.HandleBeatmapEvent
void GlobalNamespace::LightRotationEventEffect::HandleBeatmapEvent(::GlobalNamespace::BasicBeatmapEventData* basicBeatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightRotationEventEffect::HandleBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(basicBeatmapEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, basicBeatmapEventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LightSwitchEventEffect
#include "GlobalNamespace/LightSwitchEventEffect.hpp"
// Including type: ColorSO
#include "GlobalNamespace/ColorSO.hpp"
// Including type: LightWithIdManager
#include "GlobalNamespace/LightWithIdManager.hpp"
// Including type: BeatmapCallbacksController
#include "GlobalNamespace/BeatmapCallbacksController.hpp"
// Including type: Tweening.SongTimeTweeningManager
#include "Tweening/SongTimeTweeningManager.hpp"
// Including type: Tweening.ColorTween
#include "Tweening/ColorTween.hpp"
// Including type: BeatmapDataCallbackWrapper
#include "GlobalNamespace/BeatmapDataCallbackWrapper.hpp"
// Including type: BasicBeatmapEventData
#include "GlobalNamespace/BasicBeatmapEventData.hpp"
// Including type: ColorBoostBeatmapEventData
#include "GlobalNamespace/ColorBoostBeatmapEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kFlashAndFadeDuration
float GlobalNamespace::LightSwitchEventEffect::_get_kFlashAndFadeDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightSwitchEventEffect::_get_kFlashAndFadeDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "LightSwitchEventEffect", "kFlashAndFadeDuration"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kFlashAndFadeDuration
void GlobalNamespace::LightSwitchEventEffect::_set_kFlashAndFadeDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightSwitchEventEffect::_set_kFlashAndFadeDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightSwitchEventEffect", "kFlashAndFadeDuration", value));
}
// Autogenerated static field getter
// Get static field: static private System.Single kHighlightDuration
float GlobalNamespace::LightSwitchEventEffect::_get_kHighlightDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightSwitchEventEffect::_get_kHighlightDuration");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "LightSwitchEventEffect", "kHighlightDuration"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kHighlightDuration
void GlobalNamespace::LightSwitchEventEffect::_set_kHighlightDuration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightSwitchEventEffect::_set_kHighlightDuration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "LightSwitchEventEffect", "kHighlightDuration", value));
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _lightColor0
::GlobalNamespace::ColorSO*& GlobalNamespace::LightSwitchEventEffect::dyn__lightColor0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightSwitchEventEffect::dyn__lightColor0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightColor0"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _lightColor1
::GlobalNamespace::ColorSO*& GlobalNamespace::LightSwitchEventEffect::dyn__lightColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightSwitchEventEffect::dyn__lightColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightColor1"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _highlightColor0
::GlobalNamespace::ColorSO*& GlobalNamespace::LightSwitchEventEffect::dyn__highlightColor0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightSwitchEventEffect::dyn__highlightColor0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightColor0"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _highlightColor1
::GlobalNamespace::ColorSO*& GlobalNamespace::LightSwitchEventEffect::dyn__highlightColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightSwitchEventEffect::dyn__highlightColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightColor1"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _lightColor0Boost
::GlobalNamespace::ColorSO*& GlobalNamespace::LightSwitchEventEffect::dyn__lightColor0Boost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightSwitchEventEffect::dyn__lightColor0Boost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightColor0Boost"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _lightColor1Boost
::GlobalNamespace::ColorSO*& GlobalNamespace::LightSwitchEventEffect::dyn__lightColor1Boost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightSwitchEventEffect::dyn__lightColor1Boost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightColor1Boost"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _highlightColor0Boost
::GlobalNamespace::ColorSO*& GlobalNamespace::LightSwitchEventEffect::dyn__highlightColor0Boost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightSwitchEventEffect::dyn__highlightColor0Boost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightColor0Boost"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _highlightColor1Boost
::GlobalNamespace::ColorSO*& GlobalNamespace::LightSwitchEventEffect::dyn__highlightColor1Boost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightSwitchEventEffect::dyn__highlightColor1Boost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightColor1Boost"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _offColorIntensity
float& GlobalNamespace::LightSwitchEventEffect::dyn__offColorIntensity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightSwitchEventEffect::dyn__offColorIntensity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offColorIntensity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _lightOnStart
bool& GlobalNamespace::LightSwitchEventEffect::dyn__lightOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightSwitchEventEffect::dyn__lightOnStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightOnStart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _lightsID
int& GlobalNamespace::LightSwitchEventEffect::dyn__lightsID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightSwitchEventEffect::dyn__lightsID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightsID"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BasicBeatmapEventType _event
::GlobalNamespace::BasicBeatmapEventType& GlobalNamespace::LightSwitchEventEffect::dyn__event() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightSwitchEventEffect::dyn__event");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_event"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BasicBeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly LightWithIdManager _lightManager
::GlobalNamespace::LightWithIdManager*& GlobalNamespace::LightSwitchEventEffect::dyn__lightManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightSwitchEventEffect::dyn__lightManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::LightWithIdManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapCallbacksController _beatmapCallbacksController
::GlobalNamespace::BeatmapCallbacksController*& GlobalNamespace::LightSwitchEventEffect::dyn__beatmapCallbacksController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightSwitchEventEffect::dyn__beatmapCallbacksController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCallbacksController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCallbacksController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Tweening.SongTimeTweeningManager _tweeningManager
::Tweening::SongTimeTweeningManager*& GlobalNamespace::LightSwitchEventEffect::dyn__tweeningManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightSwitchEventEffect::dyn__tweeningManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tweeningManager"))->offset;
  return *reinterpret_cast<::Tweening::SongTimeTweeningManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.ColorTween _colorTween
::Tweening::ColorTween*& GlobalNamespace::LightSwitchEventEffect::dyn__colorTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightSwitchEventEffect::dyn__colorTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorTween"))->offset;
  return *reinterpret_cast<::Tweening::ColorTween**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _alternativeFromColor
::UnityEngine::Color& GlobalNamespace::LightSwitchEventEffect::dyn__alternativeFromColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightSwitchEventEffect::dyn__alternativeFromColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alternativeFromColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _alternativeToColor
::UnityEngine::Color& GlobalNamespace::LightSwitchEventEffect::dyn__alternativeToColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightSwitchEventEffect::dyn__alternativeToColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alternativeToColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _usingBoostColors
bool& GlobalNamespace::LightSwitchEventEffect::dyn__usingBoostColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightSwitchEventEffect::dyn__usingBoostColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_usingBoostColors"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDataCallbackWrapper _colorChangeBeatmapDataCallbackWrapper
::GlobalNamespace::BeatmapDataCallbackWrapper*& GlobalNamespace::LightSwitchEventEffect::dyn__colorChangeBeatmapDataCallbackWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightSwitchEventEffect::dyn__colorChangeBeatmapDataCallbackWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorChangeBeatmapDataCallbackWrapper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataCallbackWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDataCallbackWrapper _colorBoostBeatmapDataCallbackWrapper
::GlobalNamespace::BeatmapDataCallbackWrapper*& GlobalNamespace::LightSwitchEventEffect::dyn__colorBoostBeatmapDataCallbackWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightSwitchEventEffect::dyn__colorBoostBeatmapDataCallbackWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorBoostBeatmapDataCallbackWrapper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataCallbackWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LightSwitchEventEffect.get_lightsId
int GlobalNamespace::LightSwitchEventEffect::get_lightsId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightSwitchEventEffect::get_lightsId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_lightsId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LightSwitchEventEffect.Awake
void GlobalNamespace::LightSwitchEventEffect::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightSwitchEventEffect::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightSwitchEventEffect.Start
void GlobalNamespace::LightSwitchEventEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightSwitchEventEffect::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightSwitchEventEffect.OnDestroy
void GlobalNamespace::LightSwitchEventEffect::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightSwitchEventEffect::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LightSwitchEventEffect.HandleColorChangeBeatmapEvent
void GlobalNamespace::LightSwitchEventEffect::HandleColorChangeBeatmapEvent(::GlobalNamespace::BasicBeatmapEventData* basicBeatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightSwitchEventEffect::HandleColorChangeBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleColorChangeBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(basicBeatmapEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, basicBeatmapEventData);
}
// Autogenerated method: LightSwitchEventEffect.HandleColorBoostBeatmapEvent
void GlobalNamespace::LightSwitchEventEffect::HandleColorBoostBeatmapEvent(::GlobalNamespace::ColorBoostBeatmapEventData* eventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightSwitchEventEffect::HandleColorBoostBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleColorBoostBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(eventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, eventData);
}
// Autogenerated method: LightSwitchEventEffect.SetupTweenAndSaveOtherColors
void GlobalNamespace::LightSwitchEventEffect::SetupTweenAndSaveOtherColors(::UnityEngine::Color fromColor, ::UnityEngine::Color toColor, ::UnityEngine::Color alternativeFromColor, ::UnityEngine::Color alternativeToColor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightSwitchEventEffect::SetupTweenAndSaveOtherColors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetupTweenAndSaveOtherColors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fromColor), ::il2cpp_utils::ExtractType(toColor), ::il2cpp_utils::ExtractType(alternativeFromColor), ::il2cpp_utils::ExtractType(alternativeToColor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fromColor, toColor, alternativeFromColor, alternativeToColor);
}
// Autogenerated method: LightSwitchEventEffect.CheckNextEventForFade
void GlobalNamespace::LightSwitchEventEffect::CheckNextEventForFade(::GlobalNamespace::BasicBeatmapEventData* basicBeatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightSwitchEventEffect::CheckNextEventForFade");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckNextEventForFade", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(basicBeatmapEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, basicBeatmapEventData);
}
// Autogenerated method: LightSwitchEventEffect.GetNormalColor
::UnityEngine::Color GlobalNamespace::LightSwitchEventEffect::GetNormalColor(int beatmapEventValue, bool colorBoost) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightSwitchEventEffect::GetNormalColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetNormalColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventValue), ::il2cpp_utils::ExtractType(colorBoost)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method, beatmapEventValue, colorBoost);
}
// Autogenerated method: LightSwitchEventEffect.GetHighlightColor
::UnityEngine::Color GlobalNamespace::LightSwitchEventEffect::GetHighlightColor(int beatmapEventValue, bool colorBoost) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightSwitchEventEffect::GetHighlightColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetHighlightColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventValue), ::il2cpp_utils::ExtractType(colorBoost)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method, beatmapEventValue, colorBoost);
}
// Autogenerated method: LightSwitchEventEffect.IsColor0
bool GlobalNamespace::LightSwitchEventEffect::IsColor0(int beatmapEventValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightSwitchEventEffect::IsColor0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsColor0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventValue)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, beatmapEventValue);
}
// Autogenerated method: LightSwitchEventEffect.IsFixedDurationLightSwitch
bool GlobalNamespace::LightSwitchEventEffect::IsFixedDurationLightSwitch(int beatmapEventValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightSwitchEventEffect::IsFixedDurationLightSwitch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsFixedDurationLightSwitch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventValue)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, beatmapEventValue);
}
// Autogenerated method: LightSwitchEventEffect.SetColor
void GlobalNamespace::LightSwitchEventEffect::SetColor(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::LightSwitchEventEffect::SetColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MeshRendererSwitchEventEffect
#include "GlobalNamespace/MeshRendererSwitchEventEffect.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: BeatmapCallbacksController
#include "GlobalNamespace/BeatmapCallbacksController.hpp"
// Including type: BeatmapDataCallbackWrapper
#include "GlobalNamespace/BeatmapDataCallbackWrapper.hpp"
// Including type: BasicBeatmapEventData
#include "GlobalNamespace/BasicBeatmapEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BasicBeatmapEventType _beatmapEvent
::GlobalNamespace::BasicBeatmapEventType& GlobalNamespace::MeshRendererSwitchEventEffect::dyn__beatmapEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MeshRendererSwitchEventEffect::dyn__beatmapEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapEvent"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BasicBeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer[] _deactivateOnBoostRenderers
::ArrayW<::UnityEngine::MeshRenderer*>& GlobalNamespace::MeshRendererSwitchEventEffect::dyn__deactivateOnBoostRenderers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MeshRendererSwitchEventEffect::dyn__deactivateOnBoostRenderers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_deactivateOnBoostRenderers"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::MeshRenderer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer[] _activateOnBoostRenderers
::ArrayW<::UnityEngine::MeshRenderer*>& GlobalNamespace::MeshRendererSwitchEventEffect::dyn__activateOnBoostRenderers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MeshRendererSwitchEventEffect::dyn__activateOnBoostRenderers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activateOnBoostRenderers"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::MeshRenderer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapCallbacksController _beatmapCallbacksController
::GlobalNamespace::BeatmapCallbacksController*& GlobalNamespace::MeshRendererSwitchEventEffect::dyn__beatmapCallbacksController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MeshRendererSwitchEventEffect::dyn__beatmapCallbacksController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCallbacksController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCallbacksController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDataCallbackWrapper _beatmapDataCallbackWrapper
::GlobalNamespace::BeatmapDataCallbackWrapper*& GlobalNamespace::MeshRendererSwitchEventEffect::dyn__beatmapDataCallbackWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MeshRendererSwitchEventEffect::dyn__beatmapDataCallbackWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDataCallbackWrapper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataCallbackWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MeshRendererSwitchEventEffect.Start
void GlobalNamespace::MeshRendererSwitchEventEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MeshRendererSwitchEventEffect::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MeshRendererSwitchEventEffect.OnDestroy
void GlobalNamespace::MeshRendererSwitchEventEffect::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MeshRendererSwitchEventEffect::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MeshRendererSwitchEventEffect.HandleBeatmapEvent
void GlobalNamespace::MeshRendererSwitchEventEffect::HandleBeatmapEvent(::GlobalNamespace::BasicBeatmapEventData* basicBeatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MeshRendererSwitchEventEffect::HandleBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(basicBeatmapEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, basicBeatmapEventData);
}
// Autogenerated method: MeshRendererSwitchEventEffect.ToggleObjects
void GlobalNamespace::MeshRendererSwitchEventEffect::ToggleObjects(bool isBoostOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MeshRendererSwitchEventEffect::ToggleObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isBoostOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isBoostOn);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MissionClearedEnvironmentEffect
#include "GlobalNamespace/MissionClearedEnvironmentEffect.hpp"
// Including type: MissionObjectiveCheckersManager
#include "GlobalNamespace/MissionObjectiveCheckersManager.hpp"
// Including type: BeatmapCallbacksController
#include "GlobalNamespace/BeatmapCallbacksController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private MissionObjectiveCheckersManager _missionObjectiveCheckersManager
::GlobalNamespace::MissionObjectiveCheckersManager*& GlobalNamespace::MissionClearedEnvironmentEffect::dyn__missionObjectiveCheckersManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionClearedEnvironmentEffect::dyn__missionObjectiveCheckersManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_missionObjectiveCheckersManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MissionObjectiveCheckersManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapCallbacksController _beatmapCallbacksController
::GlobalNamespace::BeatmapCallbacksController*& GlobalNamespace::MissionClearedEnvironmentEffect::dyn__beatmapCallbacksController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionClearedEnvironmentEffect::dyn__beatmapCallbacksController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCallbacksController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCallbacksController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MissionClearedEnvironmentEffect.Awake
void GlobalNamespace::MissionClearedEnvironmentEffect::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionClearedEnvironmentEffect::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionClearedEnvironmentEffect.OnDestroy
void GlobalNamespace::MissionClearedEnvironmentEffect::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionClearedEnvironmentEffect::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MissionClearedEnvironmentEffect.HandleMissionObjectiveCheckersManagerObjectiveWasCleared
void GlobalNamespace::MissionClearedEnvironmentEffect::HandleMissionObjectiveCheckersManagerObjectiveWasCleared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MissionClearedEnvironmentEffect::HandleMissionObjectiveCheckersManagerObjectiveWasCleared");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleMissionObjectiveCheckersManagerObjectiveWasCleared", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NoteTrailEffect
#include "GlobalNamespace/NoteTrailEffect.hpp"
// Including type: NoteMovement
#include "GlobalNamespace/NoteMovement.hpp"
// Including type: NoteTrailParticleSystem
#include "GlobalNamespace/NoteTrailParticleSystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 _particlesPerFrame
int& GlobalNamespace::NoteTrailEffect::dyn__particlesPerFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteTrailEffect::dyn__particlesPerFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_particlesPerFrame"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxSpawnDistance
float& GlobalNamespace::NoteTrailEffect::dyn__maxSpawnDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteTrailEffect::dyn__maxSpawnDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxSpawnDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteMovement _noteMovement
::GlobalNamespace::NoteMovement*& GlobalNamespace::NoteTrailEffect::dyn__noteMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteTrailEffect::dyn__noteMovement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteMovement"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteMovement**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private NoteTrailParticleSystem _noteTrailParticleSystem
::GlobalNamespace::NoteTrailParticleSystem*& GlobalNamespace::NoteTrailEffect::dyn__noteTrailParticleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteTrailEffect::dyn__noteTrailParticleSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_noteTrailParticleSystem"))->offset;
  return *reinterpret_cast<::GlobalNamespace::NoteTrailParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: NoteTrailEffect.Awake
void GlobalNamespace::NoteTrailEffect::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteTrailEffect::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteTrailEffect.OnDestroy
void GlobalNamespace::NoteTrailEffect::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteTrailEffect::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteTrailEffect.Update
void GlobalNamespace::NoteTrailEffect::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteTrailEffect::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteTrailEffect.HandleNoteMovementDidInit
void GlobalNamespace::NoteTrailEffect::HandleNoteMovementDidInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteTrailEffect::HandleNoteMovementDidInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteMovementDidInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: NoteTrailEffect.HandleNoteDidStartJump
void GlobalNamespace::NoteTrailEffect::HandleNoteDidStartJump() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::NoteTrailEffect::HandleNoteDidStartJump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleNoteDidStartJump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ObstacleSaberSparkleEffect
#include "GlobalNamespace/ObstacleSaberSparkleEffect.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem _sparkleParticleSystem
::UnityEngine::ParticleSystem*& GlobalNamespace::ObstacleSaberSparkleEffect::dyn__sparkleParticleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleSaberSparkleEffect::dyn__sparkleParticleSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sparkleParticleSystem"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem _burnParticleSystem
::UnityEngine::ParticleSystem*& GlobalNamespace::ObstacleSaberSparkleEffect::dyn__burnParticleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleSaberSparkleEffect::dyn__burnParticleSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_burnParticleSystem"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/UnityEngine.EmissionModule _sparkleParticleSystemEmissionModule
::UnityEngine::ParticleSystem::EmissionModule& GlobalNamespace::ObstacleSaberSparkleEffect::dyn__sparkleParticleSystemEmissionModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleSaberSparkleEffect::dyn__sparkleParticleSystemEmissionModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sparkleParticleSystemEmissionModule"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem::EmissionModule*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/UnityEngine.EmissionModule _burnParticleSystemEmissionModule
::UnityEngine::ParticleSystem::EmissionModule& GlobalNamespace::ObstacleSaberSparkleEffect::dyn__burnParticleSystemEmissionModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleSaberSparkleEffect::dyn__burnParticleSystemEmissionModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_burnParticleSystemEmissionModule"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem::EmissionModule*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ObstacleSaberSparkleEffect.set_color
void GlobalNamespace::ObstacleSaberSparkleEffect::set_color(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleSaberSparkleEffect::set_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: ObstacleSaberSparkleEffect.Awake
void GlobalNamespace::ObstacleSaberSparkleEffect::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleSaberSparkleEffect::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ObstacleSaberSparkleEffect.SetPositionAndRotation
void GlobalNamespace::ObstacleSaberSparkleEffect::SetPositionAndRotation(::UnityEngine::Vector3 pos, ::UnityEngine::Quaternion rot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleSaberSparkleEffect::SetPositionAndRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPositionAndRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pos), ::il2cpp_utils::ExtractType(rot)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pos, rot);
}
// Autogenerated method: ObstacleSaberSparkleEffect.StartEmission
void GlobalNamespace::ObstacleSaberSparkleEffect::StartEmission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleSaberSparkleEffect::StartEmission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartEmission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ObstacleSaberSparkleEffect.StopEmission
void GlobalNamespace::ObstacleSaberSparkleEffect::StopEmission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ObstacleSaberSparkleEffect::StopEmission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopEmission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ParticleSystemEmitterEventEffect
#include "GlobalNamespace/ParticleSystemEmitterEventEffect.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: BeatmapCallbacksController
#include "GlobalNamespace/BeatmapCallbacksController.hpp"
// Including type: BeatmapDataCallbackWrapper
#include "GlobalNamespace/BeatmapDataCallbackWrapper.hpp"
// Including type: BasicBeatmapEventData
#include "GlobalNamespace/BasicBeatmapEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BasicBeatmapEventType _beatmapEvent
::GlobalNamespace::BasicBeatmapEventType& GlobalNamespace::ParticleSystemEmitterEventEffect::dyn__beatmapEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ParticleSystemEmitterEventEffect::dyn__beatmapEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapEvent"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BasicBeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem[] _particleSystems
::ArrayW<::UnityEngine::ParticleSystem*>& GlobalNamespace::ParticleSystemEmitterEventEffect::dyn__particleSystems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ParticleSystemEmitterEventEffect::dyn__particleSystems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_particleSystems"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::ParticleSystem*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapCallbacksController _beatmapCallbacksController
::GlobalNamespace::BeatmapCallbacksController*& GlobalNamespace::ParticleSystemEmitterEventEffect::dyn__beatmapCallbacksController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ParticleSystemEmitterEventEffect::dyn__beatmapCallbacksController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCallbacksController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCallbacksController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDataCallbackWrapper _beatmapDataCallbackWrapper
::GlobalNamespace::BeatmapDataCallbackWrapper*& GlobalNamespace::ParticleSystemEmitterEventEffect::dyn__beatmapDataCallbackWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ParticleSystemEmitterEventEffect::dyn__beatmapDataCallbackWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDataCallbackWrapper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataCallbackWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ParticleSystemEmitterEventEffect.Start
void GlobalNamespace::ParticleSystemEmitterEventEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ParticleSystemEmitterEventEffect::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ParticleSystemEmitterEventEffect.OnDestroy
void GlobalNamespace::ParticleSystemEmitterEventEffect::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ParticleSystemEmitterEventEffect::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ParticleSystemEmitterEventEffect.HandleBeatmapEvent
void GlobalNamespace::ParticleSystemEmitterEventEffect::HandleBeatmapEvent(::GlobalNamespace::BasicBeatmapEventData* basicBeatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ParticleSystemEmitterEventEffect::HandleBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(basicBeatmapEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, basicBeatmapEventData);
}
// Autogenerated method: ParticleSystemEmitterEventEffect.ToggleEmitting
void GlobalNamespace::ParticleSystemEmitterEventEffect::ToggleEmitting(bool isBoostOn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ParticleSystemEmitterEventEffect::ToggleEmitting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToggleEmitting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isBoostOn)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isBoostOn);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ParticleSystemEventEffect
#include "GlobalNamespace/ParticleSystemEventEffect.hpp"
// Including type: ColorSO
#include "GlobalNamespace/ColorSO.hpp"
// Including type: BeatmapCallbacksController
#include "GlobalNamespace/BeatmapCallbacksController.hpp"
// Including type: BeatmapDataCallbackWrapper
#include "GlobalNamespace/BeatmapDataCallbackWrapper.hpp"
// Including type: BasicBeatmapEventData
#include "GlobalNamespace/BasicBeatmapEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private ColorSO _lightColor0
::GlobalNamespace::ColorSO*& GlobalNamespace::ParticleSystemEventEffect::dyn__lightColor0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ParticleSystemEventEffect::dyn__lightColor0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightColor0"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _lightColor1
::GlobalNamespace::ColorSO*& GlobalNamespace::ParticleSystemEventEffect::dyn__lightColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ParticleSystemEventEffect::dyn__lightColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightColor1"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _highlightColor0
::GlobalNamespace::ColorSO*& GlobalNamespace::ParticleSystemEventEffect::dyn__highlightColor0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ParticleSystemEventEffect::dyn__highlightColor0");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightColor0"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorSO _highlightColor1
::GlobalNamespace::ColorSO*& GlobalNamespace::ParticleSystemEventEffect::dyn__highlightColor1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ParticleSystemEventEffect::dyn__highlightColor1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightColor1"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _lightOnStart
bool& GlobalNamespace::ParticleSystemEventEffect::dyn__lightOnStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ParticleSystemEventEffect::dyn__lightOnStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightOnStart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BasicBeatmapEventType _colorEvent
::GlobalNamespace::BasicBeatmapEventType& GlobalNamespace::ParticleSystemEventEffect::dyn__colorEvent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ParticleSystemEventEffect::dyn__colorEvent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorEvent"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BasicBeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem _particleSystem
::UnityEngine::ParticleSystem*& GlobalNamespace::ParticleSystemEventEffect::dyn__particleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ParticleSystemEventEffect::dyn__particleSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_particleSystem"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapCallbacksController _beatmapCallbacksController
::GlobalNamespace::BeatmapCallbacksController*& GlobalNamespace::ParticleSystemEventEffect::dyn__beatmapCallbacksController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ParticleSystemEventEffect::dyn__beatmapCallbacksController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCallbacksController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCallbacksController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _lightIsOn
bool& GlobalNamespace::ParticleSystemEventEffect::dyn__lightIsOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ParticleSystemEventEffect::dyn__lightIsOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightIsOn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _offColor
::UnityEngine::Color& GlobalNamespace::ParticleSystemEventEffect::dyn__offColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ParticleSystemEventEffect::dyn__offColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _highlightValue
float& GlobalNamespace::ParticleSystemEventEffect::dyn__highlightValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ParticleSystemEventEffect::dyn__highlightValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _afterHighlightColor
::UnityEngine::Color& GlobalNamespace::ParticleSystemEventEffect::dyn__afterHighlightColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ParticleSystemEventEffect::dyn__afterHighlightColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_afterHighlightColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _highlightColor
::UnityEngine::Color& GlobalNamespace::ParticleSystemEventEffect::dyn__highlightColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ParticleSystemEventEffect::dyn__highlightColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_highlightColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single kFadeSpeed
float& GlobalNamespace::ParticleSystemEventEffect::dyn_kFadeSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ParticleSystemEventEffect::dyn_kFadeSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "kFadeSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/UnityEngine.MainModule _mainModule
::UnityEngine::ParticleSystem::MainModule& GlobalNamespace::ParticleSystemEventEffect::dyn__mainModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ParticleSystemEventEffect::dyn__mainModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_mainModule"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem::MainModule*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/UnityEngine.Particle[] _particles
::ArrayW<::UnityEngine::ParticleSystem::Particle>& GlobalNamespace::ParticleSystemEventEffect::dyn__particles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ParticleSystemEventEffect::dyn__particles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_particles"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::ParticleSystem::Particle>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _particleColor
::UnityEngine::Color& GlobalNamespace::ParticleSystemEventEffect::dyn__particleColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ParticleSystemEventEffect::dyn__particleColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_particleColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDataCallbackWrapper _beatmapDataCallbackWrapper
::GlobalNamespace::BeatmapDataCallbackWrapper*& GlobalNamespace::ParticleSystemEventEffect::dyn__beatmapDataCallbackWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ParticleSystemEventEffect::dyn__beatmapDataCallbackWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDataCallbackWrapper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataCallbackWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ParticleSystemEventEffect.Start
void GlobalNamespace::ParticleSystemEventEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ParticleSystemEventEffect::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ParticleSystemEventEffect.OnDestroy
void GlobalNamespace::ParticleSystemEventEffect::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ParticleSystemEventEffect::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ParticleSystemEventEffect.Update
void GlobalNamespace::ParticleSystemEventEffect::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ParticleSystemEventEffect::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ParticleSystemEventEffect.HandleBeatmapEvent
void GlobalNamespace::ParticleSystemEventEffect::HandleBeatmapEvent(::GlobalNamespace::BasicBeatmapEventData* basicBeatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ParticleSystemEventEffect::HandleBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(basicBeatmapEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, basicBeatmapEventData);
}
// Autogenerated method: ParticleSystemEventEffect.RefreshParticles
void GlobalNamespace::ParticleSystemEventEffect::RefreshParticles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ParticleSystemEventEffect::RefreshParticles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RefreshParticles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PhysicsPositionsMovementEventEffect
#include "GlobalNamespace/PhysicsPositionsMovementEventEffect.hpp"
// Including type: BeatmapCallbacksController
#include "GlobalNamespace/BeatmapCallbacksController.hpp"
// Including type: SongTimeFixedUpdateController
#include "GlobalNamespace/SongTimeFixedUpdateController.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: BeatmapDataCallbackWrapper
#include "GlobalNamespace/BeatmapDataCallbackWrapper.hpp"
// Including type: BasicBeatmapEventData
#include "GlobalNamespace/BasicBeatmapEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BasicBeatmapEventType _event
::GlobalNamespace::BasicBeatmapEventType& GlobalNamespace::PhysicsPositionsMovementEventEffect::dyn__event() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PhysicsPositionsMovementEventEffect::dyn__event");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_event"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BasicBeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _movementVector
::UnityEngine::Vector3& GlobalNamespace::PhysicsPositionsMovementEventEffect::dyn__movementVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PhysicsPositionsMovementEventEffect::dyn__movementVector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_movementVector"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _stepSize
float& GlobalNamespace::PhysicsPositionsMovementEventEffect::dyn__stepSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PhysicsPositionsMovementEventEffect::dyn__stepSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stepSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _elasticity
float& GlobalNamespace::PhysicsPositionsMovementEventEffect::dyn__elasticity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PhysicsPositionsMovementEventEffect::dyn__elasticity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_elasticity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _friction
float& GlobalNamespace::PhysicsPositionsMovementEventEffect::dyn__friction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PhysicsPositionsMovementEventEffect::dyn__friction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_friction"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minMaxSpeed
float& GlobalNamespace::PhysicsPositionsMovementEventEffect::dyn__minMaxSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PhysicsPositionsMovementEventEffect::dyn__minMaxSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minMaxSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxMaxSpeed
float& GlobalNamespace::PhysicsPositionsMovementEventEffect::dyn__maxMaxSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PhysicsPositionsMovementEventEffect::dyn__maxMaxSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxMaxSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxAcceleration
float& GlobalNamespace::PhysicsPositionsMovementEventEffect::dyn__maxAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PhysicsPositionsMovementEventEffect::dyn__maxAcceleration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxAcceleration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapCallbacksController _beatmapCallbacksController
::GlobalNamespace::BeatmapCallbacksController*& GlobalNamespace::PhysicsPositionsMovementEventEffect::dyn__beatmapCallbacksController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PhysicsPositionsMovementEventEffect::dyn__beatmapCallbacksController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCallbacksController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCallbacksController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SongTimeFixedUpdateController _songTimeFixedUpdateController
::GlobalNamespace::SongTimeFixedUpdateController*& GlobalNamespace::PhysicsPositionsMovementEventEffect::dyn__songTimeFixedUpdateController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PhysicsPositionsMovementEventEffect::dyn__songTimeFixedUpdateController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_songTimeFixedUpdateController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SongTimeFixedUpdateController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _transform
::UnityEngine::Transform*& GlobalNamespace::PhysicsPositionsMovementEventEffect::dyn__transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PhysicsPositionsMovementEventEffect::dyn__transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _startPos
::UnityEngine::Vector3& GlobalNamespace::PhysicsPositionsMovementEventEffect::dyn__startPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PhysicsPositionsMovementEventEffect::dyn__startPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _velocity
::UnityEngine::Vector3& GlobalNamespace::PhysicsPositionsMovementEventEffect::dyn__velocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PhysicsPositionsMovementEventEffect::dyn__velocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_velocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _prevPosition
::UnityEngine::Vector3& GlobalNamespace::PhysicsPositionsMovementEventEffect::dyn__prevPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PhysicsPositionsMovementEventEffect::dyn__prevPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _position
::UnityEngine::Vector3& GlobalNamespace::PhysicsPositionsMovementEventEffect::dyn__position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PhysicsPositionsMovementEventEffect::dyn__position");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_position"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _targetPosition
::UnityEngine::Vector3& GlobalNamespace::PhysicsPositionsMovementEventEffect::dyn__targetPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PhysicsPositionsMovementEventEffect::dyn__targetPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxSpeed
float& GlobalNamespace::PhysicsPositionsMovementEventEffect::dyn__maxSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PhysicsPositionsMovementEventEffect::dyn__maxSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _sqrMaxSpeed
float& GlobalNamespace::PhysicsPositionsMovementEventEffect::dyn__sqrMaxSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PhysicsPositionsMovementEventEffect::dyn__sqrMaxSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sqrMaxSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDataCallbackWrapper _beatmapDataCallbackWrapper
::GlobalNamespace::BeatmapDataCallbackWrapper*& GlobalNamespace::PhysicsPositionsMovementEventEffect::dyn__beatmapDataCallbackWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PhysicsPositionsMovementEventEffect::dyn__beatmapDataCallbackWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDataCallbackWrapper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataCallbackWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PhysicsPositionsMovementEventEffect.Start
void GlobalNamespace::PhysicsPositionsMovementEventEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PhysicsPositionsMovementEventEffect::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PhysicsPositionsMovementEventEffect.OnDestroy
void GlobalNamespace::PhysicsPositionsMovementEventEffect::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PhysicsPositionsMovementEventEffect::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PhysicsPositionsMovementEventEffect.HandleSongTimeFixedUpdate
void GlobalNamespace::PhysicsPositionsMovementEventEffect::HandleSongTimeFixedUpdate(float fixedDeltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PhysicsPositionsMovementEventEffect::HandleSongTimeFixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSongTimeFixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fixedDeltaTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fixedDeltaTime);
}
// Autogenerated method: PhysicsPositionsMovementEventEffect.HandleSongTimeUpdate
void GlobalNamespace::PhysicsPositionsMovementEventEffect::HandleSongTimeUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PhysicsPositionsMovementEventEffect::HandleSongTimeUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSongTimeUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PhysicsPositionsMovementEventEffect.HandleBeatmapEvent
void GlobalNamespace::PhysicsPositionsMovementEventEffect::HandleBeatmapEvent(::GlobalNamespace::BasicBeatmapEventData* basicBeatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PhysicsPositionsMovementEventEffect::HandleBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(basicBeatmapEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, basicBeatmapEventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SaberClashEffect
#include "GlobalNamespace/SaberClashEffect.hpp"
// Including type: Libraries.HM.HMLib.VR.HapticPresetSO
#include "Libraries/HM/HMLib/VR/HapticPresetSO.hpp"
// Including type: SaberClashChecker
#include "GlobalNamespace/SaberClashChecker.hpp"
// Including type: HapticFeedbackController
#include "GlobalNamespace/HapticFeedbackController.hpp"
// Including type: ColorManager
#include "GlobalNamespace/ColorManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem _sparkleParticleSystem
::UnityEngine::ParticleSystem*& GlobalNamespace::SaberClashEffect::dyn__sparkleParticleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberClashEffect::dyn__sparkleParticleSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sparkleParticleSystem"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem _glowParticleSystem
::UnityEngine::ParticleSystem*& GlobalNamespace::SaberClashEffect::dyn__glowParticleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberClashEffect::dyn__glowParticleSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glowParticleSystem"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Libraries.HM.HMLib.VR.HapticPresetSO _rumblePreset
::Libraries::HM::HMLib::VR::HapticPresetSO*& GlobalNamespace::SaberClashEffect::dyn__rumblePreset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberClashEffect::dyn__rumblePreset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rumblePreset"))->offset;
  return *reinterpret_cast<::Libraries::HM::HMLib::VR::HapticPresetSO**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private SaberClashChecker _saberClashChecker
::GlobalNamespace::SaberClashChecker*& GlobalNamespace::SaberClashEffect::dyn__saberClashChecker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberClashEffect::dyn__saberClashChecker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_saberClashChecker"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SaberClashChecker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private HapticFeedbackController _hapticFeedbackController
::GlobalNamespace::HapticFeedbackController*& GlobalNamespace::SaberClashEffect::dyn__hapticFeedbackController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberClashEffect::dyn__hapticFeedbackController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hapticFeedbackController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HapticFeedbackController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ColorManager _colorManager
::GlobalNamespace::ColorManager*& GlobalNamespace::SaberClashEffect::dyn__colorManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberClashEffect::dyn__colorManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_colorManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ColorManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/UnityEngine.EmissionModule _sparkleParticleSystemEmmisionModule
::UnityEngine::ParticleSystem::EmissionModule& GlobalNamespace::SaberClashEffect::dyn__sparkleParticleSystemEmmisionModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberClashEffect::dyn__sparkleParticleSystemEmmisionModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sparkleParticleSystemEmmisionModule"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem::EmissionModule*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/UnityEngine.EmissionModule _glowParticleSystemEmmisionModule
::UnityEngine::ParticleSystem::EmissionModule& GlobalNamespace::SaberClashEffect::dyn__glowParticleSystemEmmisionModule() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberClashEffect::dyn__glowParticleSystemEmmisionModule");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_glowParticleSystemEmmisionModule"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem::EmissionModule*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _sabersAreClashing
bool& GlobalNamespace::SaberClashEffect::dyn__sabersAreClashing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberClashEffect::dyn__sabersAreClashing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sabersAreClashing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SaberClashEffect.Start
void GlobalNamespace::SaberClashEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberClashEffect::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberClashEffect.OnDisable
void GlobalNamespace::SaberClashEffect::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberClashEffect::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SaberClashEffect.LateUpdate
void GlobalNamespace::SaberClashEffect::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SaberClashEffect::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SmoothStepPositionEventEffect
#include "GlobalNamespace/SmoothStepPositionEventEffect.hpp"
// Including type: BeatmapCallbacksController
#include "GlobalNamespace/BeatmapCallbacksController.hpp"
// Including type: Tweening.SongTimeTweeningManager
#include "Tweening/SongTimeTweeningManager.hpp"
// Including type: Tweening.Vector3Tween
#include "Tweening/Vector3Tween.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: BeatmapDataCallbackWrapper
#include "GlobalNamespace/BeatmapDataCallbackWrapper.hpp"
// Including type: BasicBeatmapEventData
#include "GlobalNamespace/BasicBeatmapEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BasicBeatmapEventType _event
::GlobalNamespace::BasicBeatmapEventType& GlobalNamespace::SmoothStepPositionEventEffect::dyn__event() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothStepPositionEventEffect::dyn__event");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_event"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BasicBeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _clampValue
bool& GlobalNamespace::SmoothStepPositionEventEffect::dyn__clampValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothStepPositionEventEffect::dyn__clampValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_clampValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _eventValueMin
int& GlobalNamespace::SmoothStepPositionEventEffect::dyn__eventValueMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothStepPositionEventEffect::dyn__eventValueMin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eventValueMin"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _eventValueMax
int& GlobalNamespace::SmoothStepPositionEventEffect::dyn__eventValueMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothStepPositionEventEffect::dyn__eventValueMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_eventValueMax"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _movementVector
::UnityEngine::Vector3& GlobalNamespace::SmoothStepPositionEventEffect::dyn__movementVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothStepPositionEventEffect::dyn__movementVector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_movementVector"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _stepSize
float& GlobalNamespace::SmoothStepPositionEventEffect::dyn__stepSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothStepPositionEventEffect::dyn__stepSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stepSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapCallbacksController _beatmapCallbacksController
::GlobalNamespace::BeatmapCallbacksController*& GlobalNamespace::SmoothStepPositionEventEffect::dyn__beatmapCallbacksController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothStepPositionEventEffect::dyn__beatmapCallbacksController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCallbacksController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCallbacksController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Tweening.SongTimeTweeningManager _tweeningManager
::Tweening::SongTimeTweeningManager*& GlobalNamespace::SmoothStepPositionEventEffect::dyn__tweeningManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothStepPositionEventEffect::dyn__tweeningManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_tweeningManager"))->offset;
  return *reinterpret_cast<::Tweening::SongTimeTweeningManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Tweening.Vector3Tween _positionTween
::Tweening::Vector3Tween*& GlobalNamespace::SmoothStepPositionEventEffect::dyn__positionTween() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothStepPositionEventEffect::dyn__positionTween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positionTween"))->offset;
  return *reinterpret_cast<::Tweening::Vector3Tween**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _transform
::UnityEngine::Transform*& GlobalNamespace::SmoothStepPositionEventEffect::dyn__transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothStepPositionEventEffect::dyn__transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _startPos
::UnityEngine::Vector3& GlobalNamespace::SmoothStepPositionEventEffect::dyn__startPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothStepPositionEventEffect::dyn__startPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDataCallbackWrapper _beatmapDataCallbackWrapper
::GlobalNamespace::BeatmapDataCallbackWrapper*& GlobalNamespace::SmoothStepPositionEventEffect::dyn__beatmapDataCallbackWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothStepPositionEventEffect::dyn__beatmapDataCallbackWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDataCallbackWrapper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataCallbackWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SmoothStepPositionEventEffect.Awake
void GlobalNamespace::SmoothStepPositionEventEffect::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothStepPositionEventEffect::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SmoothStepPositionEventEffect.Start
void GlobalNamespace::SmoothStepPositionEventEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothStepPositionEventEffect::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SmoothStepPositionEventEffect.OnDestroy
void GlobalNamespace::SmoothStepPositionEventEffect::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothStepPositionEventEffect::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SmoothStepPositionEventEffect.HandleBeatmapEvent
void GlobalNamespace::SmoothStepPositionEventEffect::HandleBeatmapEvent(::GlobalNamespace::BasicBeatmapEventData* basicBeatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothStepPositionEventEffect::HandleBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(basicBeatmapEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, basicBeatmapEventData);
}
// Autogenerated method: SmoothStepPositionEventEffect.GetPositionForValue
::UnityEngine::Vector3 GlobalNamespace::SmoothStepPositionEventEffect::GetPositionForValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothStepPositionEventEffect::GetPositionForValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetPositionForValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, value);
}
// Autogenerated method: SmoothStepPositionEventEffect.SetPosition
void GlobalNamespace::SmoothStepPositionEventEffect::SetPosition(::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothStepPositionEventEffect::SetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentSpawnRotation
#include "GlobalNamespace/EnvironmentSpawnRotation.hpp"
// Including type: BeatmapCallbacksController
#include "GlobalNamespace/BeatmapCallbacksController.hpp"
// Including type: BeatmapDataCallbackWrapper
#include "GlobalNamespace/BeatmapDataCallbackWrapper.hpp"
// Including type: SpawnRotationBeatmapEventData
#include "GlobalNamespace/SpawnRotationBeatmapEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10B7734
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _spawnRotationID
int GlobalNamespace::EnvironmentSpawnRotation::_get__spawnRotationID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSpawnRotation::_get__spawnRotationID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "EnvironmentSpawnRotation", "_spawnRotationID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _spawnRotationID
void GlobalNamespace::EnvironmentSpawnRotation::_set__spawnRotationID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSpawnRotation::_set__spawnRotationID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentSpawnRotation", "_spawnRotationID", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 _numberOfActiveEnvironmentSpawnRotationObjects
int GlobalNamespace::EnvironmentSpawnRotation::_get__numberOfActiveEnvironmentSpawnRotationObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSpawnRotation::_get__numberOfActiveEnvironmentSpawnRotationObjects");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "EnvironmentSpawnRotation", "_numberOfActiveEnvironmentSpawnRotationObjects"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 _numberOfActiveEnvironmentSpawnRotationObjects
void GlobalNamespace::EnvironmentSpawnRotation::_set__numberOfActiveEnvironmentSpawnRotationObjects(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSpawnRotation::_set__numberOfActiveEnvironmentSpawnRotationObjects");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "EnvironmentSpawnRotation", "_numberOfActiveEnvironmentSpawnRotationObjects", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Single _aheadTime
float& GlobalNamespace::EnvironmentSpawnRotation::dyn__aheadTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSpawnRotation::dyn__aheadTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_aheadTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _smooth
float& GlobalNamespace::EnvironmentSpawnRotation::dyn__smooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSpawnRotation::dyn__smooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapCallbacksController _beatmapCallbacksController
::GlobalNamespace::BeatmapCallbacksController*& GlobalNamespace::EnvironmentSpawnRotation::dyn__beatmapCallbacksController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSpawnRotation::dyn__beatmapCallbacksController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCallbacksController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCallbacksController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDataCallbackWrapper _beatmapDataCallbackWrapper
::GlobalNamespace::BeatmapDataCallbackWrapper*& GlobalNamespace::EnvironmentSpawnRotation::dyn__beatmapDataCallbackWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSpawnRotation::dyn__beatmapDataCallbackWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDataCallbackWrapper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataCallbackWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _currentRotation
float& GlobalNamespace::EnvironmentSpawnRotation::dyn__currentRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSpawnRotation::dyn__currentRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentRotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _prevRotation
float& GlobalNamespace::EnvironmentSpawnRotation::dyn__prevRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSpawnRotation::dyn__prevRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevRotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _targetRotation
float& GlobalNamespace::EnvironmentSpawnRotation::dyn__targetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSpawnRotation::dyn__targetRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetRotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EnvironmentSpawnRotation.get_targetRotation
float GlobalNamespace::EnvironmentSpawnRotation::get_targetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSpawnRotation::get_targetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_targetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentSpawnRotation.OnEnable
void GlobalNamespace::EnvironmentSpawnRotation::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSpawnRotation::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentSpawnRotation.OnDisable
void GlobalNamespace::EnvironmentSpawnRotation::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSpawnRotation::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentSpawnRotation.Start
void GlobalNamespace::EnvironmentSpawnRotation::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSpawnRotation::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentSpawnRotation.OnDestroy
void GlobalNamespace::EnvironmentSpawnRotation::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSpawnRotation::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentSpawnRotation.HandleSpawnRotationBeatmapEvent
void GlobalNamespace::EnvironmentSpawnRotation::HandleSpawnRotationBeatmapEvent(::GlobalNamespace::SpawnRotationBeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSpawnRotation::HandleSpawnRotationBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSpawnRotationBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapEventData);
}
// Autogenerated method: EnvironmentSpawnRotation.FixedUpdate
void GlobalNamespace::EnvironmentSpawnRotation::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSpawnRotation::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentSpawnRotation.LateUpdate
void GlobalNamespace::EnvironmentSpawnRotation::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSpawnRotation::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EnvironmentSpawnRotation..cctor
void GlobalNamespace::EnvironmentSpawnRotation::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EnvironmentSpawnRotation::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "EnvironmentSpawnRotation", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FlickeringNeonSign
#include "GlobalNamespace/FlickeringNeonSign.hpp"
// Including type: FlickeringNeonSign/<FlickeringCoroutine>d__16
#include "GlobalNamespace/FlickeringNeonSign_-FlickeringCoroutine-d__16.hpp"
// Including type: UnityEngine.SpriteRenderer
#include "UnityEngine/SpriteRenderer.hpp"
// Including type: TubeBloomPrePassLight
#include "GlobalNamespace/TubeBloomPrePassLight.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: RandomObjectPicker`1
#include "GlobalNamespace/RandomObjectPicker_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.SpriteRenderer _flickeringSprite
::UnityEngine::SpriteRenderer*& GlobalNamespace::FlickeringNeonSign::dyn__flickeringSprite() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlickeringNeonSign::dyn__flickeringSprite");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_flickeringSprite"))->offset;
  return *reinterpret_cast<::UnityEngine::SpriteRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TubeBloomPrePassLight _light
::GlobalNamespace::TubeBloomPrePassLight*& GlobalNamespace::FlickeringNeonSign::dyn__light() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlickeringNeonSign::dyn__light");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_light"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TubeBloomPrePassLight**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem[] _particleSystems
::ArrayW<::UnityEngine::ParticleSystem*>& GlobalNamespace::FlickeringNeonSign::dyn__particleSystems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlickeringNeonSign::dyn__particleSystems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_particleSystems"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::ParticleSystem*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minOnDelay
float& GlobalNamespace::FlickeringNeonSign::dyn__minOnDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlickeringNeonSign::dyn__minOnDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minOnDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxOnDelay
float& GlobalNamespace::FlickeringNeonSign::dyn__maxOnDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlickeringNeonSign::dyn__maxOnDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxOnDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minOffDelay
float& GlobalNamespace::FlickeringNeonSign::dyn__minOffDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlickeringNeonSign::dyn__minOffDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minOffDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxOffDelay
float& GlobalNamespace::FlickeringNeonSign::dyn__maxOffDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlickeringNeonSign::dyn__maxOffDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxOffDelay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _spriteOnColor
::UnityEngine::Color& GlobalNamespace::FlickeringNeonSign::dyn__spriteOnColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlickeringNeonSign::dyn__spriteOnColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spriteOnColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _lightOnColor
::UnityEngine::Color& GlobalNamespace::FlickeringNeonSign::dyn__lightOnColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlickeringNeonSign::dyn__lightOnColor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightOnColor"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _onMaterial
::UnityEngine::Material*& GlobalNamespace::FlickeringNeonSign::dyn__onMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlickeringNeonSign::dyn__onMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_onMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material _offMaterial
::UnityEngine::Material*& GlobalNamespace::FlickeringNeonSign::dyn__offMaterial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlickeringNeonSign::dyn__offMaterial");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_offMaterial"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip[] _sparksAudioClips
::ArrayW<::UnityEngine::AudioClip*>& GlobalNamespace::FlickeringNeonSign::dyn__sparksAudioClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlickeringNeonSign::dyn__sparksAudioClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sparksAudioClips"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RandomObjectPicker`1<UnityEngine.AudioClip> _sparksAudioClipPicker
::GlobalNamespace::RandomObjectPicker_1<::UnityEngine::AudioClip*>*& GlobalNamespace::FlickeringNeonSign::dyn__sparksAudioClipPicker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlickeringNeonSign::dyn__sparksAudioClipPicker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sparksAudioClipPicker"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RandomObjectPicker_1<::UnityEngine::AudioClip*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FlickeringNeonSign.Awake
void GlobalNamespace::FlickeringNeonSign::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlickeringNeonSign::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FlickeringNeonSign.Start
void GlobalNamespace::FlickeringNeonSign::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlickeringNeonSign::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FlickeringNeonSign.OnEnable
void GlobalNamespace::FlickeringNeonSign::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlickeringNeonSign::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FlickeringNeonSign.FlickeringCoroutine
::System::Collections::IEnumerator* GlobalNamespace::FlickeringNeonSign::FlickeringCoroutine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlickeringNeonSign::FlickeringCoroutine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FlickeringCoroutine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: FlickeringNeonSign.SetOn
void GlobalNamespace::FlickeringNeonSign::SetOn(bool on) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlickeringNeonSign::SetOn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(on)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, on);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: FlickeringNeonSign/<FlickeringCoroutine>d__16
#include "GlobalNamespace/FlickeringNeonSign_-FlickeringCoroutine-d__16.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
int& GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__16::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__16::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
::Il2CppObject*& GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__16::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__16::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public FlickeringNeonSign <>4__this
::GlobalNamespace::FlickeringNeonSign*& GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__16::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__16::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::FlickeringNeonSign**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FlickeringNeonSign/<FlickeringCoroutine>d__16.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__16::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__16::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: FlickeringNeonSign/<FlickeringCoroutine>d__16.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__16::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__16::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: FlickeringNeonSign/<FlickeringCoroutine>d__16.System.IDisposable.Dispose
void GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__16::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__16::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FlickeringNeonSign/<FlickeringCoroutine>d__16.MoveNext
bool GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__16::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__16::MoveNext");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: FlickeringNeonSign/<FlickeringCoroutine>d__16.System.Collections.IEnumerator.Reset
void GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__16::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlickeringNeonSign::$FlickeringCoroutine$d__16::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FlyingCar
#include "GlobalNamespace/FlyingCar.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _startZ
float& GlobalNamespace::FlyingCar::dyn__startZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingCar::dyn__startZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _endZ
float& GlobalNamespace::FlyingCar::dyn__endZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingCar::dyn__endZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_endZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _speed
float& GlobalNamespace::FlyingCar::dyn__speed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingCar::dyn__speed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_speed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _progress
float& GlobalNamespace::FlyingCar::dyn__progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingCar::dyn__progress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_progress"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _pos
::UnityEngine::Vector3& GlobalNamespace::FlyingCar::dyn__pos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingCar::dyn__pos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_pos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FlyingCar.Start
void GlobalNamespace::FlyingCar::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingCar::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FlyingCar.Update
void GlobalNamespace::FlyingCar::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingCar::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FlyingCar.UpdatePos
void GlobalNamespace::FlyingCar::UpdatePos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingCar::UpdatePos");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePos", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FlyingGameHUDRotation
#include "GlobalNamespace/FlyingGameHUDRotation.hpp"
// Including type: BeatLineManager
#include "GlobalNamespace/BeatLineManager.hpp"
// Including type: EnvironmentSpawnRotation
#include "GlobalNamespace/EnvironmentSpawnRotation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _smooth
float& GlobalNamespace::FlyingGameHUDRotation::dyn__smooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingGameHUDRotation::dyn__smooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatLineManager _beatLineManager
::GlobalNamespace::BeatLineManager*& GlobalNamespace::FlyingGameHUDRotation::dyn__beatLineManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingGameHUDRotation::dyn__beatLineManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatLineManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatLineManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly EnvironmentSpawnRotation _environmentSpawnRotation
::GlobalNamespace::EnvironmentSpawnRotation*& GlobalNamespace::FlyingGameHUDRotation::dyn__environmentSpawnRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingGameHUDRotation::dyn__environmentSpawnRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_environmentSpawnRotation"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EnvironmentSpawnRotation**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _prevYAngle
float& GlobalNamespace::FlyingGameHUDRotation::dyn__prevYAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingGameHUDRotation::dyn__prevYAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevYAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _yAngle
float& GlobalNamespace::FlyingGameHUDRotation::dyn__yAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingGameHUDRotation::dyn__yAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_yAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FlyingGameHUDRotation.Start
void GlobalNamespace::FlyingGameHUDRotation::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingGameHUDRotation::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FlyingGameHUDRotation.FixedUpdate
void GlobalNamespace::FlyingGameHUDRotation::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingGameHUDRotation::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FlyingGameHUDRotation.LateUpdate
void GlobalNamespace::FlyingGameHUDRotation::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FlyingGameHUDRotation::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MovementBeatmapEventEffect
#include "GlobalNamespace/MovementBeatmapEventEffect.hpp"
// Including type: MovementBeatmapEventEffect/MovementData
#include "GlobalNamespace/MovementBeatmapEventEffect_MovementData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: BeatmapCallbacksController
#include "GlobalNamespace/BeatmapCallbacksController.hpp"
// Including type: BeatmapDataCallbackWrapper
#include "GlobalNamespace/BeatmapDataCallbackWrapper.hpp"
// Including type: BasicBeatmapEventData
#include "GlobalNamespace/BasicBeatmapEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private BasicBeatmapEventType _beatmapEventType
::GlobalNamespace::BasicBeatmapEventType& GlobalNamespace::MovementBeatmapEventEffect::dyn__beatmapEventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovementBeatmapEventEffect::dyn__beatmapEventType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapEventType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BasicBeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _transitionSpeed
float& GlobalNamespace::MovementBeatmapEventEffect::dyn__transitionSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovementBeatmapEventEffect::dyn__transitionSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transitionSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MovementBeatmapEventEffect/MovementData[] _movementData
::ArrayW<::GlobalNamespace::MovementBeatmapEventEffect::MovementData*>& GlobalNamespace::MovementBeatmapEventEffect::dyn__movementData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovementBeatmapEventEffect::dyn__movementData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_movementData"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::MovementBeatmapEventEffect::MovementData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform[] _transforms
::ArrayW<::UnityEngine::Transform*>& GlobalNamespace::MovementBeatmapEventEffect::dyn__transforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovementBeatmapEventEffect::dyn__transforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transforms"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapCallbacksController _beatmapCallbacksController
::GlobalNamespace::BeatmapCallbacksController*& GlobalNamespace::MovementBeatmapEventEffect::dyn__beatmapCallbacksController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovementBeatmapEventEffect::dyn__beatmapCallbacksController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCallbacksController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCallbacksController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _currentMovementDataIdx
int& GlobalNamespace::MovementBeatmapEventEffect::dyn__currentMovementDataIdx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovementBeatmapEventEffect::dyn__currentMovementDataIdx");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentMovementDataIdx"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _currentPositionOffset
::UnityEngine::Vector3& GlobalNamespace::MovementBeatmapEventEffect::dyn__currentPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovementBeatmapEventEffect::dyn__currentPositionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentPositionOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _prevPositionOffset
::UnityEngine::Vector3& GlobalNamespace::MovementBeatmapEventEffect::dyn__prevPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovementBeatmapEventEffect::dyn__prevPositionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevPositionOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] _startLocalPositions
::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::MovementBeatmapEventEffect::dyn__startLocalPositions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovementBeatmapEventEffect::dyn__startLocalPositions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startLocalPositions"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDataCallbackWrapper _beatmapDataCallbackWrapper
::GlobalNamespace::BeatmapDataCallbackWrapper*& GlobalNamespace::MovementBeatmapEventEffect::dyn__beatmapDataCallbackWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovementBeatmapEventEffect::dyn__beatmapDataCallbackWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDataCallbackWrapper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataCallbackWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MovementBeatmapEventEffect.Start
void GlobalNamespace::MovementBeatmapEventEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovementBeatmapEventEffect::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MovementBeatmapEventEffect.OnDestroy
void GlobalNamespace::MovementBeatmapEventEffect::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovementBeatmapEventEffect::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MovementBeatmapEventEffect.FixedUpdate
void GlobalNamespace::MovementBeatmapEventEffect::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovementBeatmapEventEffect::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MovementBeatmapEventEffect.LateUpdate
void GlobalNamespace::MovementBeatmapEventEffect::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovementBeatmapEventEffect::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MovementBeatmapEventEffect.HandleBeatmapEvent
void GlobalNamespace::MovementBeatmapEventEffect::HandleBeatmapEvent(::GlobalNamespace::BasicBeatmapEventData* basicBeatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovementBeatmapEventEffect::HandleBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(basicBeatmapEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, basicBeatmapEventData);
}
// Autogenerated method: MovementBeatmapEventEffect.SetLocalPositionOffsetsForAllObjects
void GlobalNamespace::MovementBeatmapEventEffect::SetLocalPositionOffsetsForAllObjects(::UnityEngine::Vector3 localPositionOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovementBeatmapEventEffect::SetLocalPositionOffsetsForAllObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLocalPositionOffsetsForAllObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(localPositionOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localPositionOffset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MovementBeatmapEventEffect/MovementData
#include "GlobalNamespace/MovementBeatmapEventEffect_MovementData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _localPositionOffset
::UnityEngine::Vector3& GlobalNamespace::MovementBeatmapEventEffect::MovementData::dyn__localPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovementBeatmapEventEffect::MovementData::dyn__localPositionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_localPositionOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: MovementBeatmapEventEffect/MovementData.get_localPositionOffset
::UnityEngine::Vector3 GlobalNamespace::MovementBeatmapEventEffect::MovementData::get_localPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::MovementBeatmapEventEffect::MovementData::get_localPositionOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_localPositionOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RectangleFakeGlow
#include "GlobalNamespace/RectangleFakeGlow.hpp"
// Including type: MaterialPropertyBlockController
#include "GlobalNamespace/MaterialPropertyBlockController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10B796C
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _colorID
int GlobalNamespace::RectangleFakeGlow::_get__colorID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RectangleFakeGlow::_get__colorID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "RectangleFakeGlow", "_colorID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _colorID
void GlobalNamespace::RectangleFakeGlow::_set__colorID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RectangleFakeGlow::_set__colorID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RectangleFakeGlow", "_colorID", value));
}
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10B797C
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _sizeParamsID
int GlobalNamespace::RectangleFakeGlow::_get__sizeParamsID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RectangleFakeGlow::_get__sizeParamsID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "RectangleFakeGlow", "_sizeParamsID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _sizeParamsID
void GlobalNamespace::RectangleFakeGlow::_set__sizeParamsID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RectangleFakeGlow::_set__sizeParamsID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "RectangleFakeGlow", "_sizeParamsID", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector2 _size
::UnityEngine::Vector2& GlobalNamespace::RectangleFakeGlow::dyn__size() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RectangleFakeGlow::dyn__size");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_size"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _edgeSize
float& GlobalNamespace::RectangleFakeGlow::dyn__edgeSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RectangleFakeGlow::dyn__edgeSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_edgeSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _color
::UnityEngine::Color& GlobalNamespace::RectangleFakeGlow::dyn__color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RectangleFakeGlow::dyn__color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private MaterialPropertyBlockController _materialPropertyBlockController
::GlobalNamespace::MaterialPropertyBlockController*& GlobalNamespace::RectangleFakeGlow::dyn__materialPropertyBlockController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RectangleFakeGlow::dyn__materialPropertyBlockController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_materialPropertyBlockController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::MaterialPropertyBlockController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RectangleFakeGlow.get_color
::UnityEngine::Color GlobalNamespace::RectangleFakeGlow::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RectangleFakeGlow::get_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: RectangleFakeGlow.set_color
void GlobalNamespace::RectangleFakeGlow::set_color(::UnityEngine::Color value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RectangleFakeGlow::set_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: RectangleFakeGlow.Awake
void GlobalNamespace::RectangleFakeGlow::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RectangleFakeGlow::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RectangleFakeGlow.OnEnable
void GlobalNamespace::RectangleFakeGlow::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RectangleFakeGlow::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RectangleFakeGlow.OnDisable
void GlobalNamespace::RectangleFakeGlow::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RectangleFakeGlow::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RectangleFakeGlow.Refresh
void GlobalNamespace::RectangleFakeGlow::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RectangleFakeGlow::Refresh");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Refresh", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RectangleFakeGlow..cctor
void GlobalNamespace::RectangleFakeGlow::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RectangleFakeGlow::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "RectangleFakeGlow", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RectangleFakeGlowLightWithId
#include "GlobalNamespace/RectangleFakeGlowLightWithId.hpp"
// Including type: RectangleFakeGlow
#include "GlobalNamespace/RectangleFakeGlow.hpp"
// Including type: UnityEngine.Color
#include "UnityEngine/Color.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _minAlpha
float& GlobalNamespace::RectangleFakeGlowLightWithId::dyn__minAlpha() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RectangleFakeGlowLightWithId::dyn__minAlpha");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minAlpha"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _alphaMul
float& GlobalNamespace::RectangleFakeGlowLightWithId::dyn__alphaMul() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RectangleFakeGlowLightWithId::dyn__alphaMul");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_alphaMul"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private RectangleFakeGlow _rectangleFakeGlow
::GlobalNamespace::RectangleFakeGlow*& GlobalNamespace::RectangleFakeGlowLightWithId::dyn__rectangleFakeGlow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RectangleFakeGlowLightWithId::dyn__rectangleFakeGlow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rectangleFakeGlow"))->offset;
  return *reinterpret_cast<::GlobalNamespace::RectangleFakeGlow**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RectangleFakeGlowLightWithId.get_color
::UnityEngine::Color GlobalNamespace::RectangleFakeGlowLightWithId::get_color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RectangleFakeGlowLightWithId::get_color");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_color", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Color, false>(this, ___internal__method);
}
// Autogenerated method: RectangleFakeGlowLightWithId.ColorWasSet
void GlobalNamespace::RectangleFakeGlowLightWithId::ColorWasSet(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RectangleFakeGlowLightWithId::ColorWasSet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ColorWasSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: RotateBySpawnRotation
#include "GlobalNamespace/RotateBySpawnRotation.hpp"
// Including type: BeatmapCallbacksController
#include "GlobalNamespace/BeatmapCallbacksController.hpp"
// Including type: BeatmapDataCallbackWrapper
#include "GlobalNamespace/BeatmapDataCallbackWrapper.hpp"
// Including type: SpawnRotationBeatmapEventData
#include "GlobalNamespace/SpawnRotationBeatmapEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _aheadTime
float& GlobalNamespace::RotateBySpawnRotation::dyn__aheadTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RotateBySpawnRotation::dyn__aheadTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_aheadTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _smooth
float& GlobalNamespace::RotateBySpawnRotation::dyn__smooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RotateBySpawnRotation::dyn__smooth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_smooth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapCallbacksController _beatmapCallbacksController
::GlobalNamespace::BeatmapCallbacksController*& GlobalNamespace::RotateBySpawnRotation::dyn__beatmapCallbacksController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RotateBySpawnRotation::dyn__beatmapCallbacksController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCallbacksController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCallbacksController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDataCallbackWrapper _beatmapDataCallbackWrapper
::GlobalNamespace::BeatmapDataCallbackWrapper*& GlobalNamespace::RotateBySpawnRotation::dyn__beatmapDataCallbackWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RotateBySpawnRotation::dyn__beatmapDataCallbackWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDataCallbackWrapper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataCallbackWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _currentRotation
float& GlobalNamespace::RotateBySpawnRotation::dyn__currentRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RotateBySpawnRotation::dyn__currentRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentRotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _prevRotation
float& GlobalNamespace::RotateBySpawnRotation::dyn__prevRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RotateBySpawnRotation::dyn__prevRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevRotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _targetRotation
float& GlobalNamespace::RotateBySpawnRotation::dyn__targetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RotateBySpawnRotation::dyn__targetRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_targetRotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: RotateBySpawnRotation.Start
void GlobalNamespace::RotateBySpawnRotation::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RotateBySpawnRotation::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RotateBySpawnRotation.OnDestroy
void GlobalNamespace::RotateBySpawnRotation::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RotateBySpawnRotation::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RotateBySpawnRotation.HandleSpawnRotationBeatmapEvent
void GlobalNamespace::RotateBySpawnRotation::HandleSpawnRotationBeatmapEvent(::GlobalNamespace::SpawnRotationBeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RotateBySpawnRotation::HandleSpawnRotationBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSpawnRotationBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapEventData);
}
// Autogenerated method: RotateBySpawnRotation.FixedUpdate
void GlobalNamespace::RotateBySpawnRotation::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RotateBySpawnRotation::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: RotateBySpawnRotation.LateUpdate
void GlobalNamespace::RotateBySpawnRotation::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::RotateBySpawnRotation::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SpawnChevronObjectPoolsInstaller
#include "GlobalNamespace/SpawnChevronObjectPoolsInstaller.hpp"
// Including type: SpawnRotationChevron
#include "GlobalNamespace/SpawnRotationChevron.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private SpawnRotationChevron _spawnRotationChevronPrefab
::GlobalNamespace::SpawnRotationChevron*& GlobalNamespace::SpawnChevronObjectPoolsInstaller::dyn__spawnRotationChevronPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnChevronObjectPoolsInstaller::dyn__spawnRotationChevronPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spawnRotationChevronPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SpawnRotationChevron**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SpawnChevronObjectPoolsInstaller.InstallBindings
void GlobalNamespace::SpawnChevronObjectPoolsInstaller::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnChevronObjectPoolsInstaller::InstallBindings");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SpawnRotationChevron
#include "GlobalNamespace/SpawnRotationChevron.hpp"
// Including type: SpawnRotationChevron/Pool
#include "GlobalNamespace/SpawnRotationChevron_Pool.hpp"
// Including type: TubeBloomPrePassLight
#include "GlobalNamespace/TubeBloomPrePassLight.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TubeBloomPrePassLight[] _lights
::ArrayW<::GlobalNamespace::TubeBloomPrePassLight*>& GlobalNamespace::SpawnRotationChevron::dyn__lights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationChevron::dyn__lights");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lights"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::TubeBloomPrePassLight*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color _color
::UnityEngine::Color& GlobalNamespace::SpawnRotationChevron::dyn__color() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationChevron::dyn__color");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_color"))->offset;
  return *reinterpret_cast<::UnityEngine::Color*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _lightAmount
float& GlobalNamespace::SpawnRotationChevron::dyn__lightAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationChevron::dyn__lightAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SpawnRotationChevron.SetLightAmount
void GlobalNamespace::SpawnRotationChevron::SetLightAmount(float amount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationChevron::SetLightAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetLightAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(amount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, amount);
}
// Autogenerated method: SpawnRotationChevron.UpdateLights
void GlobalNamespace::SpawnRotationChevron::UpdateLights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationChevron::UpdateLights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateLights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SpawnRotationChevron.ColorWasSet
void GlobalNamespace::SpawnRotationChevron::ColorWasSet(::UnityEngine::Color color) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationChevron::ColorWasSet");
  auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ColorWasSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(color)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, color);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SpawnRotationChevron/Pool
#include "GlobalNamespace/SpawnRotationChevron_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SpawnRotationChevronManager
#include "GlobalNamespace/SpawnRotationChevronManager.hpp"
// Including type: SpawnRotationChevronManager/DirectionData
#include "GlobalNamespace/SpawnRotationChevronManager_DirectionData.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
// Including type: IAudioTimeSource
#include "GlobalNamespace/IAudioTimeSource.hpp"
// Including type: BeatmapObjectSpawnController
#include "GlobalNamespace/BeatmapObjectSpawnController.hpp"
// Including type: BeatmapCallbacksController
#include "GlobalNamespace/BeatmapCallbacksController.hpp"
// Including type: BeatmapDataCallbackWrapper
#include "GlobalNamespace/BeatmapDataCallbackWrapper.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: BeatmapObjectData
#include "GlobalNamespace/BeatmapObjectData.hpp"
// Including type: SpawnRotationBeatmapEventData
#include "GlobalNamespace/SpawnRotationBeatmapEventData.hpp"
// Including type: SpawnRotationChevron/Pool
#include "GlobalNamespace/SpawnRotationChevron_Pool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _fadeInTime
float& GlobalNamespace::SpawnRotationChevronManager::dyn__fadeInTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationChevronManager::dyn__fadeInTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeInTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _fadeOutTime
float& GlobalNamespace::SpawnRotationChevronManager::dyn__fadeOutTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationChevronManager::dyn__fadeOutTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeOutTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _jumpStartOffsetTime
float& GlobalNamespace::SpawnRotationChevronManager::dyn__jumpStartOffsetTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationChevronManager::dyn__jumpStartOffsetTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_jumpStartOffsetTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _cutOffsetTime
float& GlobalNamespace::SpawnRotationChevronManager::dyn__cutOffsetTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationChevronManager::dyn__cutOffsetTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_cutOffsetTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _fadeInLightAmountCurve
::UnityEngine::AnimationCurve*& GlobalNamespace::SpawnRotationChevronManager::dyn__fadeInLightAmountCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationChevronManager::dyn__fadeInLightAmountCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeInLightAmountCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AnimationCurve _fadeOutLightAmountCurve
::UnityEngine::AnimationCurve*& GlobalNamespace::SpawnRotationChevronManager::dyn__fadeOutLightAmountCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationChevronManager::dyn__fadeOutLightAmountCurve");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_fadeOutLightAmountCurve"))->offset;
  return *reinterpret_cast<::UnityEngine::AnimationCurve**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly SpawnRotationChevron/Pool _chevronPool
::GlobalNamespace::SpawnRotationChevron::Pool*& GlobalNamespace::SpawnRotationChevronManager::dyn__chevronPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationChevronManager::dyn__chevronPool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_chevronPool"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SpawnRotationChevron::Pool**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly IAudioTimeSource _audioTimeSyncController
::GlobalNamespace::IAudioTimeSource*& GlobalNamespace::SpawnRotationChevronManager::dyn__audioTimeSyncController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationChevronManager::dyn__audioTimeSyncController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioTimeSyncController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::IAudioTimeSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapObjectSpawnController _beatmapObjectSpawnController
::GlobalNamespace::BeatmapObjectSpawnController*& GlobalNamespace::SpawnRotationChevronManager::dyn__beatmapObjectSpawnController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationChevronManager::dyn__beatmapObjectSpawnController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectSpawnController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapObjectSpawnController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapCallbacksController _beatmapCallbacksController
::GlobalNamespace::BeatmapCallbacksController*& GlobalNamespace::SpawnRotationChevronManager::dyn__beatmapCallbacksController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationChevronManager::dyn__beatmapCallbacksController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCallbacksController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCallbacksController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDataCallbackWrapper _spawnRotationDataCallbackWrapper
::GlobalNamespace::BeatmapDataCallbackWrapper*& GlobalNamespace::SpawnRotationChevronManager::dyn__spawnRotationDataCallbackWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationChevronManager::dyn__spawnRotationDataCallbackWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spawnRotationDataCallbackWrapper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataCallbackWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDataCallbackWrapper _beatmapObjectDataCallbackWrapper
::GlobalNamespace::BeatmapDataCallbackWrapper*& GlobalNamespace::SpawnRotationChevronManager::dyn__beatmapObjectDataCallbackWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationChevronManager::dyn__beatmapObjectDataCallbackWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapObjectDataCallbackWrapper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataCallbackWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.Int32,SpawnRotationChevronManager/DirectionData> _directionToDataDictionary
::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::SpawnRotationChevronManager::DirectionData*>*& GlobalNamespace::SpawnRotationChevronManager::dyn__directionToDataDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationChevronManager::dyn__directionToDataDictionary");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_directionToDataDictionary"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::SpawnRotationChevronManager::DirectionData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.HashSet`1<System.Int32> _activeDirections
::System::Collections::Generic::HashSet_1<int>*& GlobalNamespace::SpawnRotationChevronManager::dyn__activeDirections() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationChevronManager::dyn__activeDirections");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeDirections"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::HashSet_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Int32> _reusableDirectionsList
::System::Collections::Generic::List_1<int>*& GlobalNamespace::SpawnRotationChevronManager::dyn__reusableDirectionsList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationChevronManager::dyn__reusableDirectionsList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_reusableDirectionsList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _moveDuration
float& GlobalNamespace::SpawnRotationChevronManager::dyn__moveDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationChevronManager::dyn__moveDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_moveDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _halfJumpDuration
float& GlobalNamespace::SpawnRotationChevronManager::dyn__halfJumpDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationChevronManager::dyn__halfJumpDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_halfJumpDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _currentSpawnRotation
float& GlobalNamespace::SpawnRotationChevronManager::dyn__currentSpawnRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationChevronManager::dyn__currentSpawnRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_currentSpawnRotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SpawnRotationChevronManager.Start
void GlobalNamespace::SpawnRotationChevronManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationChevronManager::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SpawnRotationChevronManager.Update
void GlobalNamespace::SpawnRotationChevronManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationChevronManager::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SpawnRotationChevronManager.OnDestroy
void GlobalNamespace::SpawnRotationChevronManager::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationChevronManager::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SpawnRotationChevronManager.HandleBeatmapObjectCallback
void GlobalNamespace::SpawnRotationChevronManager::HandleBeatmapObjectCallback(::GlobalNamespace::BeatmapObjectData* beatmapObjectData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationChevronManager::HandleBeatmapObjectCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapObjectCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapObjectData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapObjectData);
}
// Autogenerated method: SpawnRotationChevronManager.HandleSpawnRotationBeatmapEvent
void GlobalNamespace::SpawnRotationChevronManager::HandleSpawnRotationBeatmapEvent(::GlobalNamespace::SpawnRotationBeatmapEventData* beatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationChevronManager::HandleSpawnRotationBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleSpawnRotationBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(beatmapEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, beatmapEventData);
}
// Autogenerated method: SpawnRotationChevronManager.HandleBeatmapObjectSpawnControllerDidInit
void GlobalNamespace::SpawnRotationChevronManager::HandleBeatmapObjectSpawnControllerDidInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationChevronManager::HandleBeatmapObjectSpawnControllerDidInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapObjectSpawnControllerDidInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SpawnRotationChevronManager.ComputeAheadTime
float GlobalNamespace::SpawnRotationChevronManager::ComputeAheadTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationChevronManager::ComputeAheadTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ComputeAheadTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SpawnRotationChevronManager/DirectionData
#include "GlobalNamespace/SpawnRotationChevronManager_DirectionData.hpp"
// Including type: SpawnRotationChevron
#include "GlobalNamespace/SpawnRotationChevron.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public SpawnRotationChevron chevron
::GlobalNamespace::SpawnRotationChevron*& GlobalNamespace::SpawnRotationChevronManager::DirectionData::dyn_chevron() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationChevronManager::DirectionData::dyn_chevron");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chevron"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SpawnRotationChevron**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean fullyLid
bool& GlobalNamespace::SpawnRotationChevronManager::DirectionData::dyn_fullyLid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationChevronManager::DirectionData::dyn_fullyLid");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fullyLid"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fadeOutStartTime
float& GlobalNamespace::SpawnRotationChevronManager::DirectionData::dyn_fadeOutStartTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationChevronManager::DirectionData::dyn_fadeOutStartTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeOutStartTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fadeInEndTime
float& GlobalNamespace::SpawnRotationChevronManager::DirectionData::dyn_fadeInEndTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SpawnRotationChevronManager::DirectionData::dyn_fadeInEndTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeInEndTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BasicSpectrogramData
#include "GlobalNamespace/BasicSpectrogramData.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 kNumberOfSamples
int GlobalNamespace::BasicSpectrogramData::_get_kNumberOfSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSpectrogramData::_get_kNumberOfSamples");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "BasicSpectrogramData", "kNumberOfSamples"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kNumberOfSamples
void GlobalNamespace::BasicSpectrogramData::_set_kNumberOfSamples(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSpectrogramData::_set_kNumberOfSamples");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "BasicSpectrogramData", "kNumberOfSamples", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource _audioSource
::UnityEngine::AudioSource*& GlobalNamespace::BasicSpectrogramData::dyn__audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSpectrogramData::dyn__audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _instantChangeThreshold
float& GlobalNamespace::BasicSpectrogramData::dyn__instantChangeThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSpectrogramData::dyn__instantChangeThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_instantChangeThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasData
bool& GlobalNamespace::BasicSpectrogramData::dyn__hasData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSpectrogramData::dyn__hasData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasData"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _hasProcessedData
bool& GlobalNamespace::BasicSpectrogramData::dyn__hasProcessedData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSpectrogramData::dyn__hasProcessedData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_hasProcessedData"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] _samples
::ArrayW<float>& GlobalNamespace::BasicSpectrogramData::dyn__samples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSpectrogramData::dyn__samples");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_samples"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Single> _processedSamples
::System::Collections::Generic::List_1<float>*& GlobalNamespace::BasicSpectrogramData::dyn__processedSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSpectrogramData::dyn__processedSamples");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_processedSamples"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BasicSpectrogramData.get_Samples
::ArrayW<float> GlobalNamespace::BasicSpectrogramData::get_Samples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSpectrogramData::get_Samples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Samples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method);
}
// Autogenerated method: BasicSpectrogramData.get_ProcessedSamples
::System::Collections::Generic::List_1<float>* GlobalNamespace::BasicSpectrogramData::get_ProcessedSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSpectrogramData::get_ProcessedSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ProcessedSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<float>*, false>(this, ___internal__method);
}
// Autogenerated method: BasicSpectrogramData.Awake
void GlobalNamespace::BasicSpectrogramData::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSpectrogramData::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BasicSpectrogramData.LateUpdate
void GlobalNamespace::BasicSpectrogramData::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSpectrogramData::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BasicSpectrogramData.ProcessSamples
void GlobalNamespace::BasicSpectrogramData::ProcessSamples(::ArrayW<float> sourceSamples, ::System::Collections::Generic::List_1<float>* processedSamples) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BasicSpectrogramData::ProcessSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sourceSamples), ::il2cpp_utils::ExtractType(processedSamples)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sourceSamples, processedSamples);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Spectrogram
#include "GlobalNamespace/Spectrogram.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: BasicSpectrogramData
#include "GlobalNamespace/BasicSpectrogramData.hpp"
// Including type: UnityEngine.MaterialPropertyBlock
#include "UnityEngine/MaterialPropertyBlock.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0x10B7AEC
// Autogenerated static field getter
// Get static field: static private readonly System.Int32 _spectrogramDataID
int GlobalNamespace::Spectrogram::_get__spectrogramDataID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Spectrogram::_get__spectrogramDataID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "Spectrogram", "_spectrogramDataID"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Int32 _spectrogramDataID
void GlobalNamespace::Spectrogram::_set__spectrogramDataID(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Spectrogram::_set__spectrogramDataID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Spectrogram", "_spectrogramDataID", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.MaterialPropertyBlock _materialPropertyBlock
::UnityEngine::MaterialPropertyBlock* GlobalNamespace::Spectrogram::_get__materialPropertyBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Spectrogram::_get__materialPropertyBlock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::MaterialPropertyBlock*>("", "Spectrogram", "_materialPropertyBlock"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.MaterialPropertyBlock _materialPropertyBlock
void GlobalNamespace::Spectrogram::_set__materialPropertyBlock(::UnityEngine::MaterialPropertyBlock* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Spectrogram::_set__materialPropertyBlock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "Spectrogram", "_materialPropertyBlock", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer[] _meshRenderers
::ArrayW<::UnityEngine::MeshRenderer*>& GlobalNamespace::Spectrogram::dyn__meshRenderers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Spectrogram::dyn__meshRenderers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_meshRenderers"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::MeshRenderer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BasicSpectrogramData _spectrogramData
::GlobalNamespace::BasicSpectrogramData*& GlobalNamespace::Spectrogram::dyn__spectrogramData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Spectrogram::dyn__spectrogramData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spectrogramData"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BasicSpectrogramData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Spectrogram.Awake
void GlobalNamespace::Spectrogram::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Spectrogram::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Spectrogram.Update
void GlobalNamespace::Spectrogram::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Spectrogram::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Spectrogram..cctor
void GlobalNamespace::Spectrogram::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Spectrogram::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "Spectrogram", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: StaticEnvironmentLights
#include "GlobalNamespace/StaticEnvironmentLights.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color[] _lightColors
::ArrayW<::UnityEngine::Color>& GlobalNamespace::StaticEnvironmentLights::dyn__lightColors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StaticEnvironmentLights::dyn__lightColors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_lightColors"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Material[] _materials
::ArrayW<::UnityEngine::Material*>& GlobalNamespace::StaticEnvironmentLights::dyn__materials() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StaticEnvironmentLights::dyn__materials");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_materials"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Material*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: StaticEnvironmentLights.Awake
void GlobalNamespace::StaticEnvironmentLights::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::StaticEnvironmentLights::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TrackLaneRing
#include "GlobalNamespace/TrackLaneRing.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single _prevRotZ
float& GlobalNamespace::TrackLaneRing::dyn__prevRotZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRing::dyn__prevRotZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevRotZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rotZ
float& GlobalNamespace::TrackLaneRing::dyn__rotZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRing::dyn__rotZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _destRotZ
float& GlobalNamespace::TrackLaneRing::dyn__destRotZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRing::dyn__destRotZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_destRotZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rotationSpeed
float& GlobalNamespace::TrackLaneRing::dyn__rotationSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRing::dyn__rotationSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _prevPosZ
float& GlobalNamespace::TrackLaneRing::dyn__prevPosZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRing::dyn__prevPosZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_prevPosZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _posZ
float& GlobalNamespace::TrackLaneRing::dyn__posZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRing::dyn__posZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_posZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _destPosZ
float& GlobalNamespace::TrackLaneRing::dyn__destPosZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRing::dyn__destPosZ");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_destPosZ"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _moveSpeed
float& GlobalNamespace::TrackLaneRing::dyn__moveSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRing::dyn__moveSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_moveSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _positionOffset
::UnityEngine::Vector3& GlobalNamespace::TrackLaneRing::dyn__positionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRing::dyn__positionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_positionOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _transform
::UnityEngine::Transform*& GlobalNamespace::TrackLaneRing::dyn__transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRing::dyn__transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_transform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TrackLaneRing.get_destRotZ
float GlobalNamespace::TrackLaneRing::get_destRotZ() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRing::get_destRotZ");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_destRotZ", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TrackLaneRing.Init
void GlobalNamespace::TrackLaneRing::Init(::UnityEngine::Vector3 position, ::UnityEngine::Vector3 positionOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRing::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(positionOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, position, positionOffset);
}
// Autogenerated method: TrackLaneRing.FixedUpdateRing
void GlobalNamespace::TrackLaneRing::FixedUpdateRing(float fixedDeltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRing::FixedUpdateRing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdateRing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fixedDeltaTime)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fixedDeltaTime);
}
// Autogenerated method: TrackLaneRing.LateUpdateRing
void GlobalNamespace::TrackLaneRing::LateUpdateRing(float interpolationFactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRing::LateUpdateRing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdateRing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interpolationFactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, interpolationFactor);
}
// Autogenerated method: TrackLaneRing.SetDestRotation
void GlobalNamespace::TrackLaneRing::SetDestRotation(float destRotZ, float rotateSpeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRing::SetDestRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetDestRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destRotZ), ::il2cpp_utils::ExtractType(rotateSpeed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, destRotZ, rotateSpeed);
}
// Autogenerated method: TrackLaneRing.GetRotation
float GlobalNamespace::TrackLaneRing::GetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRing::GetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TrackLaneRing.GetDestinationRotation
float GlobalNamespace::TrackLaneRing::GetDestinationRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRing::GetDestinationRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDestinationRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TrackLaneRing.SetPosition
void GlobalNamespace::TrackLaneRing::SetPosition(float destPosZ, float moveSpeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRing::SetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(destPosZ), ::il2cpp_utils::ExtractType(moveSpeed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, destPosZ, moveSpeed);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TrackLaneRingsManager
#include "GlobalNamespace/TrackLaneRingsManager.hpp"
// Including type: TrackLaneRing
#include "GlobalNamespace/TrackLaneRing.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TrackLaneRing _trackLaneRingPrefab
::GlobalNamespace::TrackLaneRing*& GlobalNamespace::TrackLaneRingsManager::dyn__trackLaneRingPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsManager::dyn__trackLaneRingPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trackLaneRingPrefab"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TrackLaneRing**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _ringCount
int& GlobalNamespace::TrackLaneRingsManager::dyn__ringCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsManager::dyn__ringCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ringCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _ringPositionStep
float& GlobalNamespace::TrackLaneRingsManager::dyn__ringPositionStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsManager::dyn__ringPositionStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ringPositionStep"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _spawnAsChildren
bool& GlobalNamespace::TrackLaneRingsManager::dyn__spawnAsChildren() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsManager::dyn__spawnAsChildren");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_spawnAsChildren"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TrackLaneRing[] _rings
::ArrayW<::GlobalNamespace::TrackLaneRing*>& GlobalNamespace::TrackLaneRingsManager::dyn__rings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsManager::dyn__rings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rings"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::TrackLaneRing*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TrackLaneRingsManager.get_ringPositionStep
float GlobalNamespace::TrackLaneRingsManager::get_ringPositionStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsManager::get_ringPositionStep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ringPositionStep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TrackLaneRingsManager.get_Rings
::ArrayW<::GlobalNamespace::TrackLaneRing*> GlobalNamespace::TrackLaneRingsManager::get_Rings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsManager::get_Rings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Rings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::GlobalNamespace::TrackLaneRing*>, false>(this, ___internal__method);
}
// Autogenerated method: TrackLaneRingsManager.Awake
void GlobalNamespace::TrackLaneRingsManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsManager::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TrackLaneRingsManager.FixedUpdate
void GlobalNamespace::TrackLaneRingsManager::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsManager::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TrackLaneRingsManager.LateUpdate
void GlobalNamespace::TrackLaneRingsManager::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsManager::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TrackLaneRingsManager.OnDrawGizmosSelected
void GlobalNamespace::TrackLaneRingsManager::OnDrawGizmosSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsManager::OnDrawGizmosSelected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDrawGizmosSelected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TrackLaneRingsPositionStepEffectSpawner
#include "GlobalNamespace/TrackLaneRingsPositionStepEffectSpawner.hpp"
// Including type: TrackLaneRingsManager
#include "GlobalNamespace/TrackLaneRingsManager.hpp"
// Including type: BeatmapCallbacksController
#include "GlobalNamespace/BeatmapCallbacksController.hpp"
// Including type: BeatmapDataCallbackWrapper
#include "GlobalNamespace/BeatmapDataCallbackWrapper.hpp"
// Including type: BasicBeatmapEventData
#include "GlobalNamespace/BasicBeatmapEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TrackLaneRingsManager _trackLaneRingsManager
::GlobalNamespace::TrackLaneRingsManager*& GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::dyn__trackLaneRingsManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::dyn__trackLaneRingsManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trackLaneRingsManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TrackLaneRingsManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BasicBeatmapEventType _beatmapEventType
::GlobalNamespace::BasicBeatmapEventType& GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::dyn__beatmapEventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::dyn__beatmapEventType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapEventType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BasicBeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _minPositionStep
float& GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::dyn__minPositionStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::dyn__minPositionStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_minPositionStep"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _maxPositionStep
float& GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::dyn__maxPositionStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::dyn__maxPositionStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_maxPositionStep"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _moveSpeed
float& GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::dyn__moveSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::dyn__moveSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_moveSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapCallbacksController _beatmapCallbacksController
::GlobalNamespace::BeatmapCallbacksController*& GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::dyn__beatmapCallbacksController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::dyn__beatmapCallbacksController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCallbacksController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCallbacksController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDataCallbackWrapper _beatmapDataCallbackWrapper
::GlobalNamespace::BeatmapDataCallbackWrapper*& GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::dyn__beatmapDataCallbackWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::dyn__beatmapDataCallbackWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDataCallbackWrapper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataCallbackWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TrackLaneRingsPositionStepEffectSpawner.Start
void GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TrackLaneRingsPositionStepEffectSpawner.OnDestroy
void GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TrackLaneRingsPositionStepEffectSpawner.HandleBeatmapEvent
void GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::HandleBeatmapEvent(::GlobalNamespace::BasicBeatmapEventData* basicBeatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsPositionStepEffectSpawner::HandleBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(basicBeatmapEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, basicBeatmapEventData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TrackLaneRingsRotationEffect
#include "GlobalNamespace/TrackLaneRingsRotationEffect.hpp"
// Including type: TrackLaneRingsRotationEffect/RingRotationEffect
#include "GlobalNamespace/TrackLaneRingsRotationEffect_RingRotationEffect.hpp"
// Including type: TrackLaneRingsManager
#include "GlobalNamespace/TrackLaneRingsManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TrackLaneRingsManager _trackLaneRingsManager
::GlobalNamespace::TrackLaneRingsManager*& GlobalNamespace::TrackLaneRingsRotationEffect::dyn__trackLaneRingsManager() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsRotationEffect::dyn__trackLaneRingsManager");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trackLaneRingsManager"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TrackLaneRingsManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startupRotationAngle
float& GlobalNamespace::TrackLaneRingsRotationEffect::dyn__startupRotationAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsRotationEffect::dyn__startupRotationAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startupRotationAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startupRotationStep
float& GlobalNamespace::TrackLaneRingsRotationEffect::dyn__startupRotationStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsRotationEffect::dyn__startupRotationStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startupRotationStep"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _startupRotationPropagationSpeed
int& GlobalNamespace::TrackLaneRingsRotationEffect::dyn__startupRotationPropagationSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsRotationEffect::dyn__startupRotationPropagationSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startupRotationPropagationSpeed"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _startupRotationFlexySpeed
float& GlobalNamespace::TrackLaneRingsRotationEffect::dyn__startupRotationFlexySpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsRotationEffect::dyn__startupRotationFlexySpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_startupRotationFlexySpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<TrackLaneRingsRotationEffect/RingRotationEffect> _activeRingRotationEffects
::System::Collections::Generic::List_1<::GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect*>*& GlobalNamespace::TrackLaneRingsRotationEffect::dyn__activeRingRotationEffects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsRotationEffect::dyn__activeRingRotationEffects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_activeRingRotationEffects"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<TrackLaneRingsRotationEffect/RingRotationEffect> _ringRotationEffectsPool
::System::Collections::Generic::List_1<::GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect*>*& GlobalNamespace::TrackLaneRingsRotationEffect::dyn__ringRotationEffectsPool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsRotationEffect::dyn__ringRotationEffectsPool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_ringRotationEffectsPool"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Int32> ringRotationEffectsToDelete
::System::Collections::Generic::List_1<int>*& GlobalNamespace::TrackLaneRingsRotationEffect::dyn_ringRotationEffectsToDelete() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsRotationEffect::dyn_ringRotationEffectsToDelete");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ringRotationEffectsToDelete"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TrackLaneRingsRotationEffect.Awake
void GlobalNamespace::TrackLaneRingsRotationEffect::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsRotationEffect::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TrackLaneRingsRotationEffect.Start
void GlobalNamespace::TrackLaneRingsRotationEffect::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsRotationEffect::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TrackLaneRingsRotationEffect.FixedUpdate
void GlobalNamespace::TrackLaneRingsRotationEffect::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsRotationEffect::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TrackLaneRingsRotationEffect.AddRingRotationEffect
void GlobalNamespace::TrackLaneRingsRotationEffect::AddRingRotationEffect(float angle, float step, int propagationSpeed, float flexySpeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsRotationEffect::AddRingRotationEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddRingRotationEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(angle), ::il2cpp_utils::ExtractType(step), ::il2cpp_utils::ExtractType(propagationSpeed), ::il2cpp_utils::ExtractType(flexySpeed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, angle, step, propagationSpeed, flexySpeed);
}
// Autogenerated method: TrackLaneRingsRotationEffect.GetFirstRingRotationAngle
float GlobalNamespace::TrackLaneRingsRotationEffect::GetFirstRingRotationAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsRotationEffect::GetFirstRingRotationAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFirstRingRotationAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TrackLaneRingsRotationEffect.GetFirstRingDestinationRotationAngle
float GlobalNamespace::TrackLaneRingsRotationEffect::GetFirstRingDestinationRotationAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsRotationEffect::GetFirstRingDestinationRotationAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFirstRingDestinationRotationAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: TrackLaneRingsRotationEffect.SpawnRingRotationEffect
::GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect* GlobalNamespace::TrackLaneRingsRotationEffect::SpawnRingRotationEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsRotationEffect::SpawnRingRotationEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SpawnRingRotationEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect*, false>(this, ___internal__method);
}
// Autogenerated method: TrackLaneRingsRotationEffect.RecycleRingRotationEffect
void GlobalNamespace::TrackLaneRingsRotationEffect::RecycleRingRotationEffect(::GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect* ringRotationEffect) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsRotationEffect::RecycleRingRotationEffect");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecycleRingRotationEffect", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ringRotationEffect)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ringRotationEffect);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TrackLaneRingsRotationEffect/RingRotationEffect
#include "GlobalNamespace/TrackLaneRingsRotationEffect_RingRotationEffect.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single rotationAngle
float& GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect::dyn_rotationAngle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect::dyn_rotationAngle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationAngle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotationStep
float& GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect::dyn_rotationStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect::dyn_rotationStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationStep"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rotationFlexySpeed
float& GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect::dyn_rotationFlexySpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect::dyn_rotationFlexySpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationFlexySpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 rotationPropagationSpeed
int& GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect::dyn_rotationPropagationSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect::dyn_rotationPropagationSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotationPropagationSpeed"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 progressPos
int& GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect::dyn_progressPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsRotationEffect::RingRotationEffect::dyn_progressPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "progressPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TrackLaneRingsRotationEffectSpawner
#include "GlobalNamespace/TrackLaneRingsRotationEffectSpawner.hpp"
// Including type: BeatmapCallbacksController
#include "GlobalNamespace/BeatmapCallbacksController.hpp"
// Including type: TrackLaneRingsRotationEffect
#include "GlobalNamespace/TrackLaneRingsRotationEffect.hpp"
// Including type: BeatmapDataCallbackWrapper
#include "GlobalNamespace/BeatmapDataCallbackWrapper.hpp"
// Including type: BasicBeatmapEventData
#include "GlobalNamespace/BasicBeatmapEventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TrackLaneRingsRotationEffect _trackLaneRingsRotationEffect
::GlobalNamespace::TrackLaneRingsRotationEffect*& GlobalNamespace::TrackLaneRingsRotationEffectSpawner::dyn__trackLaneRingsRotationEffect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsRotationEffectSpawner::dyn__trackLaneRingsRotationEffect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_trackLaneRingsRotationEffect"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TrackLaneRingsRotationEffect**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BasicBeatmapEventType _beatmapEventType
::GlobalNamespace::BasicBeatmapEventType& GlobalNamespace::TrackLaneRingsRotationEffectSpawner::dyn__beatmapEventType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsRotationEffectSpawner::dyn__beatmapEventType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapEventType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BasicBeatmapEventType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rotation
float& GlobalNamespace::TrackLaneRingsRotationEffectSpawner::dyn__rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsRotationEffectSpawner::dyn__rotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rotationStep
float& GlobalNamespace::TrackLaneRingsRotationEffectSpawner::dyn__rotationStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsRotationEffectSpawner::dyn__rotationStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationStep"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TrackLaneRingsRotationEffectSpawner/RotationStepType _rotationStepType
::GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType& GlobalNamespace::TrackLaneRingsRotationEffectSpawner::dyn__rotationStepType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsRotationEffectSpawner::dyn__rotationStepType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationStepType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TrackLaneRingsRotationEffectSpawner::RotationStepType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _rotationPropagationSpeed
int& GlobalNamespace::TrackLaneRingsRotationEffectSpawner::dyn__rotationPropagationSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsRotationEffectSpawner::dyn__rotationPropagationSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationPropagationSpeed"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single _rotationFlexySpeed
float& GlobalNamespace::TrackLaneRingsRotationEffectSpawner::dyn__rotationFlexySpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsRotationEffectSpawner::dyn__rotationFlexySpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_rotationFlexySpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly BeatmapCallbacksController _beatmapCallbacksController
::GlobalNamespace::BeatmapCallbacksController*& GlobalNamespace::TrackLaneRingsRotationEffectSpawner::dyn__beatmapCallbacksController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsRotationEffectSpawner::dyn__beatmapCallbacksController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapCallbacksController"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapCallbacksController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private BeatmapDataCallbackWrapper _beatmapDataCallbackWrapper
::GlobalNamespace::BeatmapDataCallbackWrapper*& GlobalNamespace::TrackLaneRingsRotationEffectSpawner::dyn__beatmapDataCallbackWrapper() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsRotationEffectSpawner::dyn__beatmapDataCallbackWrapper");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_beatmapDataCallbackWrapper"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BeatmapDataCallbackWrapper**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TrackLaneRingsRotationEffectSpawner.Start
void GlobalNamespace::TrackLaneRingsRotationEffectSpawner::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsRotationEffectSpawner::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TrackLaneRingsRotationEffectSpawner.OnDestroy
void GlobalNamespace::TrackLaneRingsRotationEffectSpawner::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsRotationEffectSpawner::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TrackLaneRingsRotationEffectSpawner.HandleBeatmapEvent
void GlobalNamespace::TrackLaneRingsRotationEffectSpawner::HandleBeatmapEvent(::GlobalNamespace::BasicBeatmapEventData* basicBeatmapEventData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TrackLaneRingsRotationEffectSpawner::HandleBeatmapEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleBeatmapEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(basicBeatmapEventData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, basicBeatmapEventData);
}
