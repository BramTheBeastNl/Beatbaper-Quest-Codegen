// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Polyglot.LocalizedText
#include "Polyglot/LocalizedText.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.TextAnchor
#include "UnityEngine/TextAnchor.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Polyglot.LocalizedText.SetText
void Polyglot::LocalizedText::SetText(UnityEngine::UI::Text* text, ::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Polyglot").WithContext("LocalizedText").WithContext("SetText");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetText", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text, value);
}
// Autogenerated method: Polyglot.LocalizedText.UpdateAlignment
void Polyglot::LocalizedText::UpdateAlignment(UnityEngine::UI::Text* text, Polyglot::LanguageDirection direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Polyglot").WithContext("LocalizedText").WithContext("UpdateAlignment");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "UpdateAlignment", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text, direction)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, text, direction);
}
// Autogenerated method: Polyglot.LocalizedText.IsOppositeDirection
bool Polyglot::LocalizedText::IsOppositeDirection(UnityEngine::TextAnchor alignment, Polyglot::LanguageDirection direction) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Polyglot").WithContext("LocalizedText").WithContext("IsOppositeDirection");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsOppositeDirection", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(alignment, direction)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, alignment, direction);
}
// Autogenerated method: Polyglot.LocalizedText.IsAlignmentRight
bool Polyglot::LocalizedText::IsAlignmentRight(UnityEngine::TextAnchor alignment) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Polyglot").WithContext("LocalizedText").WithContext("IsAlignmentRight");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsAlignmentRight", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(alignment)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, alignment);
}
// Autogenerated method: Polyglot.LocalizedText.IsAlignmentLeft
bool Polyglot::LocalizedText::IsAlignmentLeft(UnityEngine::TextAnchor alignment) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Polyglot").WithContext("LocalizedText").WithContext("IsAlignmentLeft");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsAlignmentLeft", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(alignment)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, alignment);
}
