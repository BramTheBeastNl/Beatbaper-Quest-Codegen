// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.NonLazyBinder
#include "Zenject/NonLazyBinder.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.NonLazyBinder.NonLazy
Zenject::IfNotBoundBinder* Zenject::NonLazyBinder::NonLazy() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("NonLazyBinder").WithContext("NonLazy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Zenject::IfNotBoundBinder*>(), "NonLazy", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::IfNotBoundBinder*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.NonLazyBinder.Lazy
Zenject::IfNotBoundBinder* Zenject::NonLazyBinder::Lazy() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("NonLazyBinder").WithContext("Lazy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Zenject::IfNotBoundBinder*>(), "Lazy", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::IfNotBoundBinder*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.NonLazyBinder..ctor
Zenject::NonLazyBinder* Zenject::NonLazyBinder::New_ctor(Zenject::BindInfo* bindInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("NonLazyBinder").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<NonLazyBinder*>(bindInfo));
}
