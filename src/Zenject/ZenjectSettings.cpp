// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ZenjectSettings
#include "Zenject/ZenjectSettings.hpp"
// Including type: Zenject.ZenjectSettings/SignalSettings
#include "Zenject/ZenjectSettings_SignalSettings.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Zenject.ZenjectSettings Default
Zenject::ZenjectSettings* Zenject::ZenjectSettings::_get_Default() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ZenjectSettings").WithContext("_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::ZenjectSettings*>("Zenject", "ZenjectSettings", "Default"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.ZenjectSettings Default
void Zenject::ZenjectSettings::_set_Default(Zenject::ZenjectSettings* value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ZenjectSettings").WithContext("_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ZenjectSettings", "Default", value));
}
// Autogenerated method: Zenject.ZenjectSettings..ctor
Zenject::ZenjectSettings* Zenject::ZenjectSettings::New_ctor(Zenject::ValidationErrorResponses validationErrorResponse, Zenject::RootResolveMethods validationRootResolveMethod, bool displayWarningWhenResolvingDuringInstall, bool ensureDeterministicDestructionOrderOnApplicationQuit, Zenject::ZenjectSettings::SignalSettings* signalSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ZenjectSettings").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<ZenjectSettings*>(validationErrorResponse, validationRootResolveMethod, displayWarningWhenResolvingDuringInstall, ensureDeterministicDestructionOrderOnApplicationQuit, signalSettings));
}
// Autogenerated method: Zenject.ZenjectSettings.get_Signals
Zenject::ZenjectSettings::SignalSettings* Zenject::ZenjectSettings::get_Signals() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ZenjectSettings").WithContext("get_Signals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Zenject::ZenjectSettings::SignalSettings*>(), "get_Signals", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ZenjectSettings::SignalSettings*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenjectSettings.get_ValidationErrorResponse
Zenject::ValidationErrorResponses Zenject::ZenjectSettings::get_ValidationErrorResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ZenjectSettings").WithContext("get_ValidationErrorResponse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Zenject::ValidationErrorResponses>(), "get_ValidationErrorResponse", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ValidationErrorResponses, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenjectSettings.get_ValidationRootResolveMethod
Zenject::RootResolveMethods Zenject::ZenjectSettings::get_ValidationRootResolveMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ZenjectSettings").WithContext("get_ValidationRootResolveMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Zenject::RootResolveMethods>(), "get_ValidationRootResolveMethod", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::RootResolveMethods, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenjectSettings.get_DisplayWarningWhenResolvingDuringInstall
bool Zenject::ZenjectSettings::get_DisplayWarningWhenResolvingDuringInstall() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ZenjectSettings").WithContext("get_DisplayWarningWhenResolvingDuringInstall");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "get_DisplayWarningWhenResolvingDuringInstall", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenjectSettings.get_EnsureDeterministicDestructionOrderOnApplicationQuit
bool Zenject::ZenjectSettings::get_EnsureDeterministicDestructionOrderOnApplicationQuit() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ZenjectSettings").WithContext("get_EnsureDeterministicDestructionOrderOnApplicationQuit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "get_EnsureDeterministicDestructionOrderOnApplicationQuit", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenjectSettings..cctor
void Zenject::ZenjectSettings::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ZenjectSettings").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "ZenjectSettings", il2cpp_utils::NoArgClass<void>(), ".cctor", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.ZenjectSettings..ctor
Zenject::ZenjectSettings* Zenject::ZenjectSettings::New_ctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ZenjectSettings").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<ZenjectSettings*>());
}
