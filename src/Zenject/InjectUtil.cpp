// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.InjectUtil
#include "Zenject/InjectUtil.hpp"
// Including type: Zenject.InjectUtil/<>c
#include "Zenject/InjectUtil_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.InjectUtil.CreateArgList
System::Collections::Generic::List_1<Zenject::TypeValuePair>* Zenject::InjectUtil::CreateArgList(System::Collections::Generic::IEnumerable_1<::Il2CppObject*>* args) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("InjectUtil").WithContext("CreateArgList");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "InjectUtil", il2cpp_utils::NoArgClass<System::Collections::Generic::List_1<Zenject::TypeValuePair>*>(), "CreateArgList", {}, ::il2cpp_utils::ExtractTypes(args)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<Zenject::TypeValuePair>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, args);
}
// Autogenerated method: Zenject.InjectUtil.PopValueWithType
bool Zenject::InjectUtil::PopValueWithType(System::Collections::Generic::List_1<Zenject::TypeValuePair>* extraArgMap, System::Type* injectedFieldType, ::Il2CppObject*& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("InjectUtil").WithContext("PopValueWithType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "InjectUtil", il2cpp_utils::NoArgClass<bool>(), "PopValueWithType", {}, ::il2cpp_utils::ExtractTypes(extraArgMap, injectedFieldType, value)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, extraArgMap, injectedFieldType, value);
}
