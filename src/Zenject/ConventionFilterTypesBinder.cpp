// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ConventionFilterTypesBinder
#include "Zenject/ConventionFilterTypesBinder.hpp"
// Including type: Zenject.ConventionFilterTypesBinder/<>c__DisplayClass2_0
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass2_0.hpp"
// Including type: Zenject.ConventionFilterTypesBinder/<>c__DisplayClass4_0
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass4_0.hpp"
// Including type: Zenject.ConventionFilterTypesBinder/<>c__DisplayClass6_0
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass6_0.hpp"
// Including type: Zenject.ConventionFilterTypesBinder/<>c__DisplayClass8_0
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass8_0.hpp"
// Including type: Zenject.ConventionFilterTypesBinder/<>c__DisplayClass9_0`1
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass9_0_1.hpp"
// Including type: Zenject.ConventionFilterTypesBinder/<>c__DisplayClass13_0
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass13_0.hpp"
// Including type: Zenject.ConventionFilterTypesBinder/<>c__DisplayClass13_1
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass13_1.hpp"
// Including type: Zenject.ConventionFilterTypesBinder/<>c__DisplayClass14_0
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass14_0.hpp"
// Including type: Zenject.ConventionFilterTypesBinder/<>c__DisplayClass15_0
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass15_0.hpp"
// Including type: Zenject.ConventionFilterTypesBinder/<>c__DisplayClass18_0
#include "Zenject/ConventionFilterTypesBinder_--c__DisplayClass18_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Attribute
#include "System/Attribute.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Text.RegularExpressions.RegexOptions
#include "System/Text/RegularExpressions/RegexOptions.hpp"
// Including type: System.Text.RegularExpressions.Regex
#include "System/Text/RegularExpressions/Regex.hpp"
// Including type: Zenject.ConventionBindInfo
#include "Zenject/ConventionBindInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ConventionFilterTypesBinder.DerivingFromOrEqual
Zenject::ConventionFilterTypesBinder* Zenject::ConventionFilterTypesBinder::DerivingFromOrEqual(System::Type* parentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ConventionFilterTypesBinder").WithContext("DerivingFromOrEqual");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DerivingFromOrEqual", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(parentType)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method, parentType);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder.DerivingFrom
Zenject::ConventionFilterTypesBinder* Zenject::ConventionFilterTypesBinder::DerivingFrom(System::Type* parentType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ConventionFilterTypesBinder").WithContext("DerivingFrom");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "DerivingFrom", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(parentType)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method, parentType);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder.WithAttribute
Zenject::ConventionFilterTypesBinder* Zenject::ConventionFilterTypesBinder::WithAttribute(System::Type* attribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ConventionFilterTypesBinder").WithContext("WithAttribute");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WithAttribute", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(attribute)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method, attribute);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder.WithoutAttribute
Zenject::ConventionFilterTypesBinder* Zenject::ConventionFilterTypesBinder::WithoutAttribute(System::Type* attribute) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ConventionFilterTypesBinder").WithContext("WithoutAttribute");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WithoutAttribute", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(attribute)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method, attribute);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder.Where
Zenject::ConventionFilterTypesBinder* Zenject::ConventionFilterTypesBinder::Where(System::Func_2<System::Type*, bool>* predicate) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ConventionFilterTypesBinder").WithContext("Where");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Where", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(predicate)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method, predicate);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder.InNamespace
Zenject::ConventionFilterTypesBinder* Zenject::ConventionFilterTypesBinder::InNamespace(::Il2CppString* ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ConventionFilterTypesBinder").WithContext("InNamespace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InNamespace", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ns)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method, ns);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder.InNamespaces
Zenject::ConventionFilterTypesBinder* Zenject::ConventionFilterTypesBinder::InNamespaces(::Array<::Il2CppString*>* namespaces) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ConventionFilterTypesBinder").WithContext("InNamespaces");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InNamespaces", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(namespaces)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method, namespaces);
}
// Creating initializer_list -> params proxy for: Zenject.ConventionFilterTypesBinder InNamespaces(params System.String[] namespaces)
Zenject::ConventionFilterTypesBinder* Zenject::ConventionFilterTypesBinder::InNamespaces(std::initializer_list<::Il2CppString*> namespaces) {
  return Zenject::ConventionFilterTypesBinder::InNamespaces(::Array<::Il2CppString*>::New(namespaces));
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder.InNamespaces
Zenject::ConventionFilterTypesBinder* Zenject::ConventionFilterTypesBinder::InNamespaces(System::Collections::Generic::IEnumerable_1<::Il2CppString*>* namespaces) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ConventionFilterTypesBinder").WithContext("InNamespaces");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InNamespaces", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(namespaces)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method, namespaces);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder.WithSuffix
Zenject::ConventionFilterTypesBinder* Zenject::ConventionFilterTypesBinder::WithSuffix(::Il2CppString* suffix) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ConventionFilterTypesBinder").WithContext("WithSuffix");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WithSuffix", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(suffix)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method, suffix);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder.WithPrefix
Zenject::ConventionFilterTypesBinder* Zenject::ConventionFilterTypesBinder::WithPrefix(::Il2CppString* prefix) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ConventionFilterTypesBinder").WithContext("WithPrefix");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WithPrefix", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(prefix)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method, prefix);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder.MatchingRegex
Zenject::ConventionFilterTypesBinder* Zenject::ConventionFilterTypesBinder::MatchingRegex(::Il2CppString* pattern) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ConventionFilterTypesBinder").WithContext("MatchingRegex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MatchingRegex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pattern)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method, pattern);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder.MatchingRegex
Zenject::ConventionFilterTypesBinder* Zenject::ConventionFilterTypesBinder::MatchingRegex(::Il2CppString* pattern, System::Text::RegularExpressions::RegexOptions options) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ConventionFilterTypesBinder").WithContext("MatchingRegex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MatchingRegex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pattern, options)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method, pattern, options);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder.MatchingRegex
Zenject::ConventionFilterTypesBinder* Zenject::ConventionFilterTypesBinder::MatchingRegex(System::Text::RegularExpressions::Regex* regex) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ConventionFilterTypesBinder").WithContext("MatchingRegex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MatchingRegex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(regex)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ConventionFilterTypesBinder*, false>(this, ___internal__method, regex);
}
// Autogenerated method: Zenject.ConventionFilterTypesBinder.IsInNamespace
bool Zenject::ConventionFilterTypesBinder::IsInNamespace(System::Type* type, ::Il2CppString* requiredNs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ConventionFilterTypesBinder").WithContext("IsInNamespace");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "ConventionFilterTypesBinder", "IsInNamespace", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, requiredNs)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, requiredNs);
}
