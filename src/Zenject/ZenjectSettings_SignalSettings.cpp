// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.ZenjectSettings/SignalSettings
#include "Zenject/ZenjectSettings_SignalSettings.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Zenject.ZenjectSettings/SignalSettings Default
Zenject::ZenjectSettings::SignalSettings* Zenject::ZenjectSettings::SignalSettings::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SignalSettings").WithContext("_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Zenject::ZenjectSettings::SignalSettings*>("Zenject", "ZenjectSettings/SignalSettings", "Default"));
}
// Autogenerated static field setter
// Set static field: static public Zenject.ZenjectSettings/SignalSettings Default
void Zenject::ZenjectSettings::SignalSettings::_set_Default(Zenject::ZenjectSettings::SignalSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SignalSettings").WithContext("_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ZenjectSettings/SignalSettings", "Default", value));
}
// Autogenerated method: Zenject.ZenjectSettings/SignalSettings.get_DefaultAsyncTickPriority
int Zenject::ZenjectSettings::SignalSettings::get_DefaultAsyncTickPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SignalSettings").WithContext("get_DefaultAsyncTickPriority");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DefaultAsyncTickPriority", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenjectSettings/SignalSettings.get_DefaultSyncMode
Zenject::SignalDefaultSyncModes Zenject::ZenjectSettings::SignalSettings::get_DefaultSyncMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SignalSettings").WithContext("get_DefaultSyncMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DefaultSyncMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::SignalDefaultSyncModes, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenjectSettings/SignalSettings.get_MissingHandlerDefaultResponse
Zenject::SignalMissingHandlerResponses Zenject::ZenjectSettings::SignalSettings::get_MissingHandlerDefaultResponse() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SignalSettings").WithContext("get_MissingHandlerDefaultResponse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_MissingHandlerDefaultResponse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::SignalMissingHandlerResponses, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenjectSettings/SignalSettings.get_RequireStrictUnsubscribe
bool Zenject::ZenjectSettings::SignalSettings::get_RequireStrictUnsubscribe() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SignalSettings").WithContext("get_RequireStrictUnsubscribe");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_RequireStrictUnsubscribe", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ZenjectSettings/SignalSettings..cctor
void Zenject::ZenjectSettings::SignalSettings::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SignalSettings").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "ZenjectSettings/SignalSettings", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
