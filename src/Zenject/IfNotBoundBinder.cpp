// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.IfNotBoundBinder
#include "Zenject/IfNotBoundBinder.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.IfNotBoundBinder..ctor
Zenject::IfNotBoundBinder* Zenject::IfNotBoundBinder::New_ctor(Zenject::BindInfo* bindInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IfNotBoundBinder").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<IfNotBoundBinder*>(bindInfo));
}
// Autogenerated method: Zenject.IfNotBoundBinder.get_BindInfo
Zenject::BindInfo* Zenject::IfNotBoundBinder::get_BindInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IfNotBoundBinder").WithContext("get_BindInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Zenject::BindInfo*>(), "get_BindInfo", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::BindInfo*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.IfNotBoundBinder.set_BindInfo
void Zenject::IfNotBoundBinder::set_BindInfo(Zenject::BindInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IfNotBoundBinder").WithContext("set_BindInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "set_BindInfo", {}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.IfNotBoundBinder.IfNotBound
void Zenject::IfNotBoundBinder::IfNotBound() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("IfNotBoundBinder").WithContext("IfNotBound");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "IfNotBound", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
