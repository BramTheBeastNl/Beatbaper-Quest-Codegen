// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.BindStatement
#include "Zenject/BindStatement.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.IBindingFinalizer
#include "Zenject/IBindingFinalizer.hpp"
// Including type: Zenject.BindingInheritanceMethods
#include "Zenject/BindingInheritanceMethods.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.BindStatement.get_BindingInheritanceMethod
Zenject::BindingInheritanceMethods Zenject::BindStatement::get_BindingInheritanceMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("BindStatement").WithContext("get_BindingInheritanceMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_BindingInheritanceMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::BindingInheritanceMethods, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.BindStatement.get_HasFinalizer
bool Zenject::BindStatement::get_HasFinalizer() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("BindStatement").WithContext("get_HasFinalizer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_HasFinalizer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.BindStatement.SetFinalizer
void Zenject::BindStatement::SetFinalizer(Zenject::IBindingFinalizer* bindingFinalizer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("BindStatement").WithContext("SetFinalizer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetFinalizer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(bindingFinalizer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, bindingFinalizer);
}
// Autogenerated method: Zenject.BindStatement.AssertHasFinalizer
void Zenject::BindStatement::AssertHasFinalizer() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("BindStatement").WithContext("AssertHasFinalizer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AssertHasFinalizer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.BindStatement.AddDisposable
void Zenject::BindStatement::AddDisposable(System::IDisposable* disposable) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("BindStatement").WithContext("AddDisposable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddDisposable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disposable)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposable);
}
// Autogenerated method: Zenject.BindStatement.SpawnBindInfo
Zenject::BindInfo* Zenject::BindStatement::SpawnBindInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("BindStatement").WithContext("SpawnBindInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SpawnBindInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::BindInfo*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.BindStatement.FinalizeBinding
void Zenject::BindStatement::FinalizeBinding(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("BindStatement").WithContext("FinalizeBinding");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FinalizeBinding", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(container)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Autogenerated method: Zenject.BindStatement.Reset
void Zenject::BindStatement::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("BindStatement").WithContext("Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.BindStatement.Dispose
void Zenject::BindStatement::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("BindStatement").WithContext("Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
void Zenject::BindStatement::System_IDisposable_Dispose() {
  Zenject::BindStatement::Dispose();
}
