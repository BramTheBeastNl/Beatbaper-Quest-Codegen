// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ConventionBindInfo
#include "Zenject/ConventionBindInfo.hpp"
// Including type: Zenject.ConventionBindInfo/<>c__DisplayClass6_0
#include "Zenject/ConventionBindInfo_--c__DisplayClass6_0.hpp"
// Including type: Zenject.ConventionBindInfo/<>c__DisplayClass7_0
#include "Zenject/ConventionBindInfo_--c__DisplayClass7_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Reflection.Assembly
#include "System/Reflection/Assembly.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.Reflection.Assembly,System.Type[]> _assemblyTypeCache
System::Collections::Generic::Dictionary_2<System::Reflection::Assembly*, ::Array<System::Type*>*>* Zenject::ConventionBindInfo::_get__assemblyTypeCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ConventionBindInfo").WithContext("_get__assemblyTypeCache");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<System::Reflection::Assembly*, ::Array<System::Type*>*>*>("Zenject", "ConventionBindInfo", "_assemblyTypeCache")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.Reflection.Assembly,System.Type[]> _assemblyTypeCache
void Zenject::ConventionBindInfo::_set__assemblyTypeCache(System::Collections::Generic::Dictionary_2<System::Reflection::Assembly*, ::Array<System::Type*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ConventionBindInfo").WithContext("_set__assemblyTypeCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Zenject", "ConventionBindInfo", "_assemblyTypeCache", value));
}
// Autogenerated method: Zenject.ConventionBindInfo.AddAssemblyFilter
void Zenject::ConventionBindInfo::AddAssemblyFilter(System::Func_2<System::Reflection::Assembly*, bool>* predicate) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ConventionBindInfo").WithContext("AddAssemblyFilter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddAssemblyFilter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(predicate)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, predicate);
}
// Autogenerated method: Zenject.ConventionBindInfo.AddTypeFilter
void Zenject::ConventionBindInfo::AddTypeFilter(System::Func_2<System::Type*, bool>* predicate) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ConventionBindInfo").WithContext("AddTypeFilter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddTypeFilter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(predicate)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, predicate);
}
// Autogenerated method: Zenject.ConventionBindInfo.GetAllAssemblies
System::Collections::Generic::IEnumerable_1<System::Reflection::Assembly*>* Zenject::ConventionBindInfo::GetAllAssemblies() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ConventionBindInfo").WithContext("GetAllAssemblies");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetAllAssemblies", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<System::Reflection::Assembly*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ConventionBindInfo.ShouldIncludeAssembly
bool Zenject::ConventionBindInfo::ShouldIncludeAssembly(System::Reflection::Assembly* assembly) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ConventionBindInfo").WithContext("ShouldIncludeAssembly");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ShouldIncludeAssembly", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(assembly)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, assembly);
}
// Autogenerated method: Zenject.ConventionBindInfo.ShouldIncludeType
bool Zenject::ConventionBindInfo::ShouldIncludeType(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ConventionBindInfo").WithContext("ShouldIncludeType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ShouldIncludeType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, type);
}
// Autogenerated method: Zenject.ConventionBindInfo.GetTypes
::Array<System::Type*>* Zenject::ConventionBindInfo::GetTypes(System::Reflection::Assembly* assembly) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ConventionBindInfo").WithContext("GetTypes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetTypes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(assembly)));
  return ::il2cpp_utils::RunMethodThrow<::Array<System::Type*>*, false>(this, ___internal__method, assembly);
}
// Autogenerated method: Zenject.ConventionBindInfo.ResolveTypes
System::Collections::Generic::List_1<System::Type*>* Zenject::ConventionBindInfo::ResolveTypes() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ConventionBindInfo").WithContext("ResolveTypes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResolveTypes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::List_1<System::Type*>*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ConventionBindInfo..cctor
void Zenject::ConventionBindInfo::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ConventionBindInfo").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject", "ConventionBindInfo", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Zenject.ConventionBindInfo.<ResolveTypes>b__9_0
System::Collections::Generic::IEnumerable_1<System::Type*>* Zenject::ConventionBindInfo::$ResolveTypes$b__9_0(System::Reflection::Assembly* assembly) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ConventionBindInfo").WithContext("<ResolveTypes>b__9_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ResolveTypes>b__9_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(assembly))));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<System::Type*>*, false>(this, ___internal__method, assembly);
}
