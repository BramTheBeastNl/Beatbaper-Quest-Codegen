// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.AddToExistingGameObjectComponentProvider
#include "Zenject\AddToExistingGameObjectComponentProvider.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine\GameObject.hpp"
// Including type: Zenject.DiContainer
#include "Zenject\DiContainer.hpp"
// Including type: System.Type
#include "System\Type.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System\Collections\Generic\IEnumerable_1.hpp"
// Including type: System.Action`2
#include "System\Action_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject\InjectContext.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.AddToExistingGameObjectComponentProvider..ctor
Zenject::AddToExistingGameObjectComponentProvider* Zenject::AddToExistingGameObjectComponentProvider::New_ctor(UnityEngine::GameObject* gameObject, Zenject::DiContainer* container, System::Type* componentType, System::Collections::Generic::IEnumerable_1<Zenject::TypeValuePair>* extraArguments, ::Il2CppObject* concreteIdentifier, System::Action_2<Zenject::InjectContext*, ::Il2CppObject*>* instantiateCallback) {
  return (AddToExistingGameObjectComponentProvider*)THROW_UNLESS(il2cpp_utils::New("Zenject", "AddToExistingGameObjectComponentProvider", gameObject, container, componentType, extraArguments, concreteIdentifier, instantiateCallback));
}
// Autogenerated method: Zenject.AddToExistingGameObjectComponentProvider.get_ShouldToggleActive
bool Zenject::AddToExistingGameObjectComponentProvider::get_ShouldToggleActive() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_ShouldToggleActive"));
}
// Autogenerated method: Zenject.AddToExistingGameObjectComponentProvider.GetGameObject
UnityEngine::GameObject* Zenject::AddToExistingGameObjectComponentProvider::GetGameObject(Zenject::InjectContext* context) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::GameObject*>(this, "GetGameObject", context));
}
