// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.PoolableManager
#include "Zenject/PoolableManager.hpp"
// Including type: Zenject.PoolableManager/PoolableInfo
#include "Zenject/PoolableManager_PoolableInfo.hpp"
// Including type: Zenject.PoolableManager/<>c__DisplayClass2_0
#include "Zenject/PoolableManager_--c__DisplayClass2_0.hpp"
// Including type: Zenject.PoolableManager/<>c
#include "Zenject/PoolableManager_--c.hpp"
// Including type: Zenject.PoolableManager/<>c__DisplayClass3_0
#include "Zenject/PoolableManager_--c__DisplayClass3_0.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Zenject.IPoolable
#include "Zenject/IPoolable.hpp"
// Including type: ModestTree.Util.ValuePair`2
#include "ModestTree/Util/ValuePair_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.PoolableManager.CreatePoolableInfo
Zenject::PoolableManager::PoolableInfo Zenject::PoolableManager::CreatePoolableInfo(Zenject::IPoolable* poolable, System::Collections::Generic::List_1<ModestTree::Util::ValuePair_2<System::Type*, int>*>* priorities) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("PoolableManager").WithContext("CreatePoolableInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreatePoolableInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(poolable, priorities)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::PoolableManager::PoolableInfo, false>(this, ___internal__method, poolable, priorities);
}
// Autogenerated method: Zenject.PoolableManager.TriggerOnSpawned
void Zenject::PoolableManager::TriggerOnSpawned() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("PoolableManager").WithContext("TriggerOnSpawned");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TriggerOnSpawned", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.PoolableManager.TriggerOnDespawned
void Zenject::PoolableManager::TriggerOnDespawned() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("PoolableManager").WithContext("TriggerOnDespawned");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "TriggerOnDespawned", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
