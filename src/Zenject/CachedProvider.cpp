// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.CachedProvider
#include "Zenject\CachedProvider.hpp"
// Including type: System.Collections.Generic.List`1
#include "System\Collections\Generic\List_1.hpp"
// Including type: System.Type
#include "System\Type.hpp"
// Including type: Zenject.InjectContext
#include "Zenject\InjectContext.hpp"
// Including type: System.Action
#include "System\Action.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.CachedProvider..ctor
Zenject::CachedProvider* Zenject::CachedProvider::New_ctor(Zenject::IProvider* creator) {
  return (CachedProvider*)THROW_UNLESS(il2cpp_utils::New("Zenject", "CachedProvider", creator));
}
// Autogenerated method: Zenject.CachedProvider.get_NumInstances
int Zenject::CachedProvider::get_NumInstances() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<int>(this, "get_NumInstances"));
}
// Autogenerated method: Zenject.CachedProvider.ClearCache
void Zenject::CachedProvider::ClearCache() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ClearCache"));
}
// Autogenerated method: Zenject.CachedProvider.get_IsCached
bool Zenject::CachedProvider::get_IsCached() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_IsCached"));
}
// Autogenerated method: Zenject.CachedProvider.get_TypeVariesBasedOnMemberType
bool Zenject::CachedProvider::get_TypeVariesBasedOnMemberType() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_TypeVariesBasedOnMemberType"));
}
// Autogenerated method: Zenject.CachedProvider.GetInstanceType
System::Type* Zenject::CachedProvider::GetInstanceType(Zenject::InjectContext* context) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Type*>(this, "GetInstanceType", context));
}
// Autogenerated method: Zenject.CachedProvider.GetAllInstancesWithInjectSplit
void Zenject::CachedProvider::GetAllInstancesWithInjectSplit(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "GetAllInstancesWithInjectSplit", context, args, injectAction, buffer));
}
