// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Zenject.Internal.SingletonMarkRegistry
#include "Zenject/Internal/SingletonMarkRegistry.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.Internal.SingletonMarkRegistry.MarkNonSingleton
void Zenject::Internal::SingletonMarkRegistry::MarkNonSingleton(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject::Internal").WithContext("SingletonMarkRegistry").WithContext("MarkNonSingleton");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MarkNonSingleton", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, type);
}
// Autogenerated method: Zenject.Internal.SingletonMarkRegistry.MarkSingleton
void Zenject::Internal::SingletonMarkRegistry::MarkSingleton(System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject::Internal").WithContext("SingletonMarkRegistry").WithContext("MarkSingleton");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MarkSingleton", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, type);
}
