// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.Internal.ReflectionInfoTypeInfoConverter
#include "Zenject/Internal/ReflectionInfoTypeInfoConverter.hpp"
// Including type: Zenject.Internal.ReflectionInfoTypeInfoConverter/<>c__DisplayClass0_0
#include "Zenject/Internal/ReflectionInfoTypeInfoConverter_--c__DisplayClass0_0.hpp"
// Including type: Zenject.Internal.ReflectionInfoTypeInfoConverter/<>c
#include "Zenject/Internal/ReflectionInfoTypeInfoConverter_--c.hpp"
// Including type: Zenject.Internal.ReflectionInfoTypeInfoConverter/<>c__DisplayClass4_0
#include "Zenject/Internal/ReflectionInfoTypeInfoConverter_--c__DisplayClass4_0.hpp"
// Including type: Zenject.Internal.ReflectionInfoTypeInfoConverter/<>c__DisplayClass8_0
#include "Zenject/Internal/ReflectionInfoTypeInfoConverter_--c__DisplayClass8_0.hpp"
// Including type: Zenject.Internal.ReflectionInfoTypeInfoConverter/<>c__DisplayClass8_1
#include "Zenject/Internal/ReflectionInfoTypeInfoConverter_--c__DisplayClass8_1.hpp"
// Including type: Zenject.Internal.ReflectionInfoTypeInfoConverter/<>c__DisplayClass9_0
#include "Zenject/Internal/ReflectionInfoTypeInfoConverter_--c__DisplayClass9_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.ZenFactoryMethod
#include "Zenject/ZenFactoryMethod.hpp"
// Including type: System.Reflection.ConstructorInfo
#include "System/Reflection/ConstructorInfo.hpp"
// Including type: Zenject.ZenInjectMethod
#include "Zenject/ZenInjectMethod.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: System.Reflection.BindingFlags
#include "System/Reflection/BindingFlags.hpp"
// Including type: Zenject.ZenMemberSetterMethod
#include "Zenject/ZenMemberSetterMethod.hpp"
// Including type: System.Reflection.MemberInfo
#include "System/Reflection/MemberInfo.hpp"
// Including type: Zenject.InjectTypeInfo/InjectMethodInfo
#include "Zenject/InjectTypeInfo_InjectMethodInfo.hpp"
// Including type: Zenject.Internal.ReflectionTypeInfo/InjectMethodInfo
#include "Zenject/Internal/ReflectionTypeInfo_InjectMethodInfo.hpp"
// Including type: Zenject.InjectTypeInfo/InjectConstructorInfo
#include "Zenject/InjectTypeInfo_InjectConstructorInfo.hpp"
// Including type: Zenject.Internal.ReflectionTypeInfo/InjectConstructorInfo
#include "Zenject/Internal/ReflectionTypeInfo_InjectConstructorInfo.hpp"
// Including type: Zenject.InjectTypeInfo/InjectMemberInfo
#include "Zenject/InjectTypeInfo_InjectMemberInfo.hpp"
// Including type: Zenject.Internal.ReflectionTypeInfo/InjectFieldInfo
#include "Zenject/Internal/ReflectionTypeInfo_InjectFieldInfo.hpp"
// Including type: Zenject.Internal.ReflectionTypeInfo/InjectPropertyInfo
#include "Zenject/Internal/ReflectionTypeInfo_InjectPropertyInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.Internal.ReflectionInfoTypeInfoConverter.ConvertMethod
Zenject::InjectTypeInfo::InjectMethodInfo* Zenject::Internal::ReflectionInfoTypeInfoConverter::ConvertMethod(Zenject::Internal::ReflectionTypeInfo::InjectMethodInfo* injectMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject::Internal").WithContext("ReflectionInfoTypeInfoConverter").WithContext("ConvertMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject.Internal", "ReflectionInfoTypeInfoConverter", "ConvertMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(injectMethod)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::InjectTypeInfo::InjectMethodInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, injectMethod);
}
// Autogenerated method: Zenject.Internal.ReflectionInfoTypeInfoConverter.ConvertConstructor
Zenject::InjectTypeInfo::InjectConstructorInfo* Zenject::Internal::ReflectionInfoTypeInfoConverter::ConvertConstructor(Zenject::Internal::ReflectionTypeInfo::InjectConstructorInfo* injectConstructor, System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject::Internal").WithContext("ReflectionInfoTypeInfoConverter").WithContext("ConvertConstructor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject.Internal", "ReflectionInfoTypeInfoConverter", "ConvertConstructor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(injectConstructor, type)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::InjectTypeInfo::InjectConstructorInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, injectConstructor, type);
}
// Autogenerated method: Zenject.Internal.ReflectionInfoTypeInfoConverter.ConvertField
Zenject::InjectTypeInfo::InjectMemberInfo* Zenject::Internal::ReflectionInfoTypeInfoConverter::ConvertField(System::Type* parentType, Zenject::Internal::ReflectionTypeInfo::InjectFieldInfo* injectField) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject::Internal").WithContext("ReflectionInfoTypeInfoConverter").WithContext("ConvertField");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject.Internal", "ReflectionInfoTypeInfoConverter", "ConvertField", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(parentType, injectField)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::InjectTypeInfo::InjectMemberInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, parentType, injectField);
}
// Autogenerated method: Zenject.Internal.ReflectionInfoTypeInfoConverter.ConvertProperty
Zenject::InjectTypeInfo::InjectMemberInfo* Zenject::Internal::ReflectionInfoTypeInfoConverter::ConvertProperty(System::Type* parentType, Zenject::Internal::ReflectionTypeInfo::InjectPropertyInfo* injectProperty) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject::Internal").WithContext("ReflectionInfoTypeInfoConverter").WithContext("ConvertProperty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject.Internal", "ReflectionInfoTypeInfoConverter", "ConvertProperty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(parentType, injectProperty)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::InjectTypeInfo::InjectMemberInfo*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, parentType, injectProperty);
}
// Autogenerated method: Zenject.Internal.ReflectionInfoTypeInfoConverter.TryCreateFactoryMethod
Zenject::ZenFactoryMethod* Zenject::Internal::ReflectionInfoTypeInfoConverter::TryCreateFactoryMethod(System::Type* type, Zenject::Internal::ReflectionTypeInfo::InjectConstructorInfo* reflectionInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject::Internal").WithContext("ReflectionInfoTypeInfoConverter").WithContext("TryCreateFactoryMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject.Internal", "ReflectionInfoTypeInfoConverter", "TryCreateFactoryMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, reflectionInfo)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ZenFactoryMethod*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, reflectionInfo);
}
// Autogenerated method: Zenject.Internal.ReflectionInfoTypeInfoConverter.TryCreateFactoryMethodCompiledLambdaExpression
Zenject::ZenFactoryMethod* Zenject::Internal::ReflectionInfoTypeInfoConverter::TryCreateFactoryMethodCompiledLambdaExpression(System::Type* type, System::Reflection::ConstructorInfo* constructor) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject::Internal").WithContext("ReflectionInfoTypeInfoConverter").WithContext("TryCreateFactoryMethodCompiledLambdaExpression");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject.Internal", "ReflectionInfoTypeInfoConverter", "TryCreateFactoryMethodCompiledLambdaExpression", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, constructor)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ZenFactoryMethod*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type, constructor);
}
// Autogenerated method: Zenject.Internal.ReflectionInfoTypeInfoConverter.TryCreateActionForMethod
Zenject::ZenInjectMethod* Zenject::Internal::ReflectionInfoTypeInfoConverter::TryCreateActionForMethod(System::Reflection::MethodInfo* methodInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject::Internal").WithContext("ReflectionInfoTypeInfoConverter").WithContext("TryCreateActionForMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject.Internal", "ReflectionInfoTypeInfoConverter", "TryCreateActionForMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(methodInfo)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ZenInjectMethod*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, methodInfo);
}
// Autogenerated method: Zenject.Internal.ReflectionInfoTypeInfoConverter.GetAllFields
System::Collections::Generic::IEnumerable_1<System::Reflection::FieldInfo*>* Zenject::Internal::ReflectionInfoTypeInfoConverter::GetAllFields(System::Type* t, System::Reflection::BindingFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject::Internal").WithContext("ReflectionInfoTypeInfoConverter").WithContext("GetAllFields");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject.Internal", "ReflectionInfoTypeInfoConverter", "GetAllFields", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t, flags)));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::Generic::IEnumerable_1<System::Reflection::FieldInfo*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, flags);
}
// Autogenerated method: Zenject.Internal.ReflectionInfoTypeInfoConverter.GetOnlyPropertySetter
Zenject::ZenMemberSetterMethod* Zenject::Internal::ReflectionInfoTypeInfoConverter::GetOnlyPropertySetter(System::Type* parentType, ::Il2CppString* propertyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject::Internal").WithContext("ReflectionInfoTypeInfoConverter").WithContext("GetOnlyPropertySetter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject.Internal", "ReflectionInfoTypeInfoConverter", "GetOnlyPropertySetter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(parentType, propertyName)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ZenMemberSetterMethod*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, parentType, propertyName);
}
// Autogenerated method: Zenject.Internal.ReflectionInfoTypeInfoConverter.GetSetter
Zenject::ZenMemberSetterMethod* Zenject::Internal::ReflectionInfoTypeInfoConverter::GetSetter(System::Type* parentType, System::Reflection::MemberInfo* memInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject::Internal").WithContext("ReflectionInfoTypeInfoConverter").WithContext("GetSetter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject.Internal", "ReflectionInfoTypeInfoConverter", "GetSetter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(parentType, memInfo)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ZenMemberSetterMethod*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, parentType, memInfo);
}
// Autogenerated method: Zenject.Internal.ReflectionInfoTypeInfoConverter.TryGetSetterAsCompiledExpression
Zenject::ZenMemberSetterMethod* Zenject::Internal::ReflectionInfoTypeInfoConverter::TryGetSetterAsCompiledExpression(System::Type* parentType, System::Reflection::MemberInfo* memInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject::Internal").WithContext("ReflectionInfoTypeInfoConverter").WithContext("TryGetSetterAsCompiledExpression");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Zenject.Internal", "ReflectionInfoTypeInfoConverter", "TryGetSetterAsCompiledExpression", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(parentType, memInfo)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ZenMemberSetterMethod*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, parentType, memInfo);
}
