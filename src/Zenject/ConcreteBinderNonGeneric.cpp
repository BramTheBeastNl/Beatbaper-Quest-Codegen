// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.ConcreteBinderNonGeneric
#include "Zenject/ConcreteBinderNonGeneric.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Zenject.ConventionSelectTypesBinder
#include "Zenject/ConventionSelectTypesBinder.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
// Including type: Zenject.BindStatement
#include "Zenject/BindStatement.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.ConcreteBinderNonGeneric.ToSelf
Zenject::FromBinderNonGeneric* Zenject::ConcreteBinderNonGeneric::ToSelf() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ConcreteBinderNonGeneric").WithContext("ToSelf");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToSelf", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::FromBinderNonGeneric*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.ConcreteBinderNonGeneric.To
Zenject::FromBinderNonGeneric* Zenject::ConcreteBinderNonGeneric::To(::Array<System::Type*>* concreteTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ConcreteBinderNonGeneric").WithContext("To");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "To", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(concreteTypes)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::FromBinderNonGeneric*, false>(this, ___internal__method, concreteTypes);
}
// Creating initializer_list -> params proxy for: Zenject.FromBinderNonGeneric To(params System.Type[] concreteTypes)
Zenject::FromBinderNonGeneric* Zenject::ConcreteBinderNonGeneric::To(std::initializer_list<System::Type*> concreteTypes) {
  return Zenject::ConcreteBinderNonGeneric::To(::Array<System::Type*>::New(concreteTypes));
}
// Autogenerated method: Zenject.ConcreteBinderNonGeneric.To
Zenject::FromBinderNonGeneric* Zenject::ConcreteBinderNonGeneric::To(System::Collections::Generic::IEnumerable_1<System::Type*>* concreteTypes) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ConcreteBinderNonGeneric").WithContext("To");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "To", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(concreteTypes)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::FromBinderNonGeneric*, false>(this, ___internal__method, concreteTypes);
}
// Autogenerated method: Zenject.ConcreteBinderNonGeneric.To
Zenject::FromBinderNonGeneric* Zenject::ConcreteBinderNonGeneric::To(System::Action_1<Zenject::ConventionSelectTypesBinder*>* generator) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ConcreteBinderNonGeneric").WithContext("To");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "To", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(generator)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::FromBinderNonGeneric*, false>(this, ___internal__method, generator);
}
// Autogenerated method: Zenject.ConcreteBinderNonGeneric.<ToSelf>b__1_0
Zenject::IProvider* Zenject::ConcreteBinderNonGeneric::$ToSelf$b__1_0(Zenject::DiContainer* container, System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("ConcreteBinderNonGeneric").WithContext("<ToSelf>b__1_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ToSelf>b__1_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(container, type))));
  return ::il2cpp_utils::RunMethodThrow<Zenject::IProvider*, false>(this, ___internal__method, container, type);
}
