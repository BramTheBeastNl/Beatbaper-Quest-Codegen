// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.AddToGameObjectComponentProviderBase
#include "Zenject/AddToGameObjectComponentProviderBase.hpp"
// Including type: Zenject.AddToGameObjectComponentProviderBase/<>c__DisplayClass17_0
#include "Zenject/AddToGameObjectComponentProviderBase_--c__DisplayClass17_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.AddToGameObjectComponentProviderBase..ctor
Zenject::AddToGameObjectComponentProviderBase* Zenject::AddToGameObjectComponentProviderBase::New_ctor(Zenject::DiContainer* container, System::Type* componentType, System::Collections::Generic::IEnumerable_1<Zenject::TypeValuePair>* extraArguments, ::Il2CppObject* concreteIdentifier, System::Action_2<Zenject::InjectContext*, ::Il2CppObject*>* instantiateCallback) {
  return THROW_UNLESS(il2cpp_utils::New<AddToGameObjectComponentProviderBase*>(container, componentType, extraArguments, concreteIdentifier, instantiateCallback));
}
// Autogenerated method: Zenject.AddToGameObjectComponentProviderBase.get_Container
Zenject::DiContainer* Zenject::AddToGameObjectComponentProviderBase::get_Container() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Zenject::DiContainer*>(this, "get_Container"));
}
// Autogenerated method: Zenject.AddToGameObjectComponentProviderBase.get_ComponentType
System::Type* Zenject::AddToGameObjectComponentProviderBase::get_ComponentType() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Type*>(this, "get_ComponentType"));
}
// Autogenerated method: Zenject.AddToGameObjectComponentProviderBase.get_ShouldToggleActive
bool Zenject::AddToGameObjectComponentProviderBase::get_ShouldToggleActive() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_ShouldToggleActive"));
}
// Autogenerated method: Zenject.AddToGameObjectComponentProviderBase.GetGameObject
UnityEngine::GameObject* Zenject::AddToGameObjectComponentProviderBase::GetGameObject(Zenject::InjectContext* context) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<UnityEngine::GameObject*>(this, "GetGameObject", context));
}
// Autogenerated method: Zenject.AddToGameObjectComponentProviderBase.get_IsCached
bool Zenject::AddToGameObjectComponentProviderBase::get_IsCached() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_IsCached"));
}
// Autogenerated method: Zenject.AddToGameObjectComponentProviderBase.get_TypeVariesBasedOnMemberType
bool Zenject::AddToGameObjectComponentProviderBase::get_TypeVariesBasedOnMemberType() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_TypeVariesBasedOnMemberType"));
}
// Autogenerated method: Zenject.AddToGameObjectComponentProviderBase.GetInstanceType
System::Type* Zenject::AddToGameObjectComponentProviderBase::GetInstanceType(Zenject::InjectContext* context) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Type*>(this, "GetInstanceType", context));
}
// Autogenerated method: Zenject.AddToGameObjectComponentProviderBase.GetAllInstancesWithInjectSplit
void Zenject::AddToGameObjectComponentProviderBase::GetAllInstancesWithInjectSplit(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "GetAllInstancesWithInjectSplit", context, args, injectAction, buffer));
}
