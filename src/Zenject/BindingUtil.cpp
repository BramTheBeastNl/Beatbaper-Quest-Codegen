// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.BindingUtil
#include "Zenject/BindingUtil.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.InvalidBindResponses
#include "Zenject/InvalidBindResponses.hpp"
// Including type: Zenject.IProvider
#include "Zenject/IProvider.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.BindingUtil.AssertIsValidPrefab
void Zenject::BindingUtil::AssertIsValidPrefab(UnityEngine::Object* prefab) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Zenject", "BindingUtil", "AssertIsValidPrefab", prefab));
}
// Autogenerated method: Zenject.BindingUtil.AssertIsValidGameObject
void Zenject::BindingUtil::AssertIsValidGameObject(UnityEngine::GameObject* gameObject) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Zenject", "BindingUtil", "AssertIsValidGameObject", gameObject));
}
// Autogenerated method: Zenject.BindingUtil.AssertIsNotComponent
void Zenject::BindingUtil::AssertIsNotComponent(System::Collections::Generic::IEnumerable_1<System::Type*>* types) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Zenject", "BindingUtil", "AssertIsNotComponent", types));
}
// Autogenerated method: Zenject.BindingUtil.AssertIsNotComponent
void Zenject::BindingUtil::AssertIsNotComponent(System::Type* type) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Zenject", "BindingUtil", "AssertIsNotComponent", type));
}
// Autogenerated method: Zenject.BindingUtil.AssertDerivesFromUnityObject
void Zenject::BindingUtil::AssertDerivesFromUnityObject(System::Collections::Generic::IEnumerable_1<System::Type*>* types) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Zenject", "BindingUtil", "AssertDerivesFromUnityObject", types));
}
// Autogenerated method: Zenject.BindingUtil.AssertDerivesFromUnityObject
void Zenject::BindingUtil::AssertDerivesFromUnityObject(System::Type* type) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Zenject", "BindingUtil", "AssertDerivesFromUnityObject", type));
}
// Autogenerated method: Zenject.BindingUtil.AssertTypesAreNotComponents
void Zenject::BindingUtil::AssertTypesAreNotComponents(System::Collections::Generic::IEnumerable_1<System::Type*>* types) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Zenject", "BindingUtil", "AssertTypesAreNotComponents", types));
}
// Autogenerated method: Zenject.BindingUtil.AssertIsValidResourcePath
void Zenject::BindingUtil::AssertIsValidResourcePath(::CsString* resourcePath) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Zenject", "BindingUtil", "AssertIsValidResourcePath", resourcePath));
}
// Autogenerated method: Zenject.BindingUtil.AssertIsInterfaceOrScriptableObject
void Zenject::BindingUtil::AssertIsInterfaceOrScriptableObject(System::Collections::Generic::IEnumerable_1<System::Type*>* types) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Zenject", "BindingUtil", "AssertIsInterfaceOrScriptableObject", types));
}
// Autogenerated method: Zenject.BindingUtil.AssertIsInterfaceOrScriptableObject
void Zenject::BindingUtil::AssertIsInterfaceOrScriptableObject(System::Type* type) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Zenject", "BindingUtil", "AssertIsInterfaceOrScriptableObject", type));
}
// Autogenerated method: Zenject.BindingUtil.AssertIsInterfaceOrComponent
void Zenject::BindingUtil::AssertIsInterfaceOrComponent(System::Collections::Generic::IEnumerable_1<System::Type*>* types) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Zenject", "BindingUtil", "AssertIsInterfaceOrComponent", types));
}
// Autogenerated method: Zenject.BindingUtil.AssertIsInterfaceOrComponent
void Zenject::BindingUtil::AssertIsInterfaceOrComponent(System::Type* type) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Zenject", "BindingUtil", "AssertIsInterfaceOrComponent", type));
}
// Autogenerated method: Zenject.BindingUtil.AssertIsComponent
void Zenject::BindingUtil::AssertIsComponent(System::Collections::Generic::IEnumerable_1<System::Type*>* types) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Zenject", "BindingUtil", "AssertIsComponent", types));
}
// Autogenerated method: Zenject.BindingUtil.AssertIsComponent
void Zenject::BindingUtil::AssertIsComponent(System::Type* type) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Zenject", "BindingUtil", "AssertIsComponent", type));
}
// Autogenerated method: Zenject.BindingUtil.AssertTypesAreNotAbstract
void Zenject::BindingUtil::AssertTypesAreNotAbstract(System::Collections::Generic::IEnumerable_1<System::Type*>* types) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Zenject", "BindingUtil", "AssertTypesAreNotAbstract", types));
}
// Autogenerated method: Zenject.BindingUtil.AssertIsNotAbstract
void Zenject::BindingUtil::AssertIsNotAbstract(System::Collections::Generic::IEnumerable_1<System::Type*>* types) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Zenject", "BindingUtil", "AssertIsNotAbstract", types));
}
// Autogenerated method: Zenject.BindingUtil.AssertIsNotAbstract
void Zenject::BindingUtil::AssertIsNotAbstract(System::Type* type) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Zenject", "BindingUtil", "AssertIsNotAbstract", type));
}
// Autogenerated method: Zenject.BindingUtil.AssertIsDerivedFromType
void Zenject::BindingUtil::AssertIsDerivedFromType(System::Type* concreteType, System::Type* parentType) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Zenject", "BindingUtil", "AssertIsDerivedFromType", concreteType, parentType));
}
// Autogenerated method: Zenject.BindingUtil.AssertConcreteTypeListIsNotEmpty
void Zenject::BindingUtil::AssertConcreteTypeListIsNotEmpty(System::Collections::Generic::IEnumerable_1<System::Type*>* concreteTypes) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Zenject", "BindingUtil", "AssertConcreteTypeListIsNotEmpty", concreteTypes));
}
// Autogenerated method: Zenject.BindingUtil.AssertIsDerivedFromTypes
void Zenject::BindingUtil::AssertIsDerivedFromTypes(System::Collections::Generic::IEnumerable_1<System::Type*>* concreteTypes, System::Collections::Generic::IEnumerable_1<System::Type*>* parentTypes, Zenject::InvalidBindResponses invalidBindResponse) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Zenject", "BindingUtil", "AssertIsDerivedFromTypes", concreteTypes, parentTypes, invalidBindResponse));
}
// Autogenerated method: Zenject.BindingUtil.AssertIsDerivedFromTypes
void Zenject::BindingUtil::AssertIsDerivedFromTypes(System::Collections::Generic::IEnumerable_1<System::Type*>* concreteTypes, System::Collections::Generic::IEnumerable_1<System::Type*>* parentTypes) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Zenject", "BindingUtil", "AssertIsDerivedFromTypes", concreteTypes, parentTypes));
}
// Autogenerated method: Zenject.BindingUtil.AssertIsDerivedFromTypes
void Zenject::BindingUtil::AssertIsDerivedFromTypes(System::Type* concreteType, System::Collections::Generic::IEnumerable_1<System::Type*>* parentTypes) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Zenject", "BindingUtil", "AssertIsDerivedFromTypes", concreteType, parentTypes));
}
// Autogenerated method: Zenject.BindingUtil.AssertInstanceDerivesFromOrEqual
void Zenject::BindingUtil::AssertInstanceDerivesFromOrEqual(::CsObject* instance, System::Collections::Generic::IEnumerable_1<System::Type*>* parentTypes) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Zenject", "BindingUtil", "AssertInstanceDerivesFromOrEqual", instance, parentTypes));
}
// Autogenerated method: Zenject.BindingUtil.AssertInstanceDerivesFromOrEqual
void Zenject::BindingUtil::AssertInstanceDerivesFromOrEqual(::CsObject* instance, System::Type* baseType) {
  THROW_UNLESS(il2cpp_utils::RunMethod("Zenject", "BindingUtil", "AssertInstanceDerivesFromOrEqual", instance, baseType));
}
// Autogenerated method: Zenject.BindingUtil.CreateCachedProvider
Zenject::IProvider* Zenject::BindingUtil::CreateCachedProvider(Zenject::IProvider* creator) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<Zenject::IProvider*>("Zenject", "BindingUtil", "CreateCachedProvider", creator));
}
