// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.AddToCurrentGameObjectComponentProvider
#include "Zenject/AddToCurrentGameObjectComponentProvider.hpp"
// Including type: Zenject.AddToCurrentGameObjectComponentProvider/<>c__DisplayClass15_0
#include "Zenject/AddToCurrentGameObjectComponentProvider_--c__DisplayClass15_0.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.AddToCurrentGameObjectComponentProvider..ctor
Zenject::AddToCurrentGameObjectComponentProvider* Zenject::AddToCurrentGameObjectComponentProvider::New_ctor(Zenject::DiContainer* container, System::Type* componentType, System::Collections::Generic::IEnumerable_1<Zenject::TypeValuePair>* extraArguments, ::Il2CppObject* concreteIdentifier, System::Action_2<Zenject::InjectContext*, ::Il2CppObject*>* instantiateCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("AddToCurrentGameObjectComponentProvider").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<AddToCurrentGameObjectComponentProvider*>(container, componentType, extraArguments, concreteIdentifier, instantiateCallback));
}
// Autogenerated method: Zenject.AddToCurrentGameObjectComponentProvider.get_Container
Zenject::DiContainer* Zenject::AddToCurrentGameObjectComponentProvider::get_Container() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("AddToCurrentGameObjectComponentProvider").WithContext("get_Container");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<Zenject::DiContainer*>(), "get_Container", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Zenject::DiContainer*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.AddToCurrentGameObjectComponentProvider.get_ComponentType
System::Type* Zenject::AddToCurrentGameObjectComponentProvider::get_ComponentType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("AddToCurrentGameObjectComponentProvider").WithContext("get_ComponentType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::Type*>(), "get_ComponentType", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.AddToCurrentGameObjectComponentProvider.get_IsCached
bool Zenject::AddToCurrentGameObjectComponentProvider::get_IsCached() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("AddToCurrentGameObjectComponentProvider").WithContext("get_IsCached");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "get_IsCached", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.AddToCurrentGameObjectComponentProvider.get_TypeVariesBasedOnMemberType
bool Zenject::AddToCurrentGameObjectComponentProvider::get_TypeVariesBasedOnMemberType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("AddToCurrentGameObjectComponentProvider").WithContext("get_TypeVariesBasedOnMemberType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "get_TypeVariesBasedOnMemberType", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Zenject.AddToCurrentGameObjectComponentProvider.GetInstanceType
System::Type* Zenject::AddToCurrentGameObjectComponentProvider::GetInstanceType(Zenject::InjectContext* context) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("AddToCurrentGameObjectComponentProvider").WithContext("GetInstanceType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::Type*>(), "GetInstanceType", {}, ::il2cpp_utils::ExtractTypes(context)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, context);
}
// Autogenerated method: Zenject.AddToCurrentGameObjectComponentProvider.GetAllInstancesWithInjectSplit
void Zenject::AddToCurrentGameObjectComponentProvider::GetAllInstancesWithInjectSplit(Zenject::InjectContext* context, System::Collections::Generic::List_1<Zenject::TypeValuePair>* args, System::Action*& injectAction, System::Collections::Generic::List_1<::Il2CppObject*>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("AddToCurrentGameObjectComponentProvider").WithContext("GetAllInstancesWithInjectSplit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "GetAllInstancesWithInjectSplit", {}, ::il2cpp_utils::ExtractTypes(context, args, injectAction, buffer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, context, args, injectAction, buffer);
}
