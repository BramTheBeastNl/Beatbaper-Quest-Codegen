// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Zenject.SubContainerBinder
#include "Zenject/SubContainerBinder.hpp"
// Including type: Zenject.SubContainerBinder/<>c__DisplayClass7_0
#include "Zenject/SubContainerBinder_--c__DisplayClass7_0.hpp"
// Including type: Zenject.SubContainerBinder/<>c__DisplayClass8_0
#include "Zenject/SubContainerBinder_--c__DisplayClass8_0.hpp"
// Including type: Zenject.SubContainerBinder/<>c__DisplayClass10_0
#include "Zenject/SubContainerBinder_--c__DisplayClass10_0.hpp"
// Including type: Zenject.SubContainerBinder/<>c__DisplayClass11_0
#include "Zenject/SubContainerBinder_--c__DisplayClass11_0.hpp"
// Including type: Zenject.SubContainerBinder/<>c__DisplayClass12_0
#include "Zenject/SubContainerBinder_--c__DisplayClass12_0.hpp"
// Including type: Zenject.SubContainerBinder/<>c__DisplayClass13_0
#include "Zenject/SubContainerBinder_--c__DisplayClass13_0.hpp"
// Including type: Zenject.SubContainerBinder/<>c__DisplayClass15_0
#include "Zenject/SubContainerBinder_--c__DisplayClass15_0.hpp"
// Including type: Zenject.SubContainerBinder/<>c__DisplayClass17_0
#include "Zenject/SubContainerBinder_--c__DisplayClass17_0.hpp"
// Including type: Zenject.SubContainerBinder/<>c__DisplayClass18_0
#include "Zenject/SubContainerBinder_--c__DisplayClass18_0.hpp"
// Including type: Zenject.SubContainerBinder/<>c__DisplayClass20_0
#include "Zenject/SubContainerBinder_--c__DisplayClass20_0.hpp"
// Including type: Zenject.SubContainerBinder/<>c__DisplayClass22_0
#include "Zenject/SubContainerBinder_--c__DisplayClass22_0.hpp"
// Including type: Zenject.SubContainerBinder/<>c__DisplayClass24_0
#include "Zenject/SubContainerBinder_--c__DisplayClass24_0.hpp"
// Including type: Zenject.BindInfo
#include "Zenject/BindInfo.hpp"
// Including type: Zenject.BindStatement
#include "Zenject/BindStatement.hpp"
// Including type: Zenject.IBindingFinalizer
#include "Zenject/IBindingFinalizer.hpp"
// Including type: Zenject.ScopeConcreteIdArgConditionCopyNonLazyBinder
#include "Zenject/ScopeConcreteIdArgConditionCopyNonLazyBinder.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Zenject.InjectContext
#include "Zenject/InjectContext.hpp"
// Including type: Zenject.InstallerBase
#include "Zenject/InstallerBase.hpp"
// Including type: Zenject.WithKernelDefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder
#include "Zenject/WithKernelDefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Zenject.NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder
#include "Zenject/NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Zenject.SubContainerBinder.set_SubFinalizer
void Zenject::SubContainerBinder::set_SubFinalizer(Zenject::IBindingFinalizer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerBinder").WithContext("set_SubFinalizer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_SubFinalizer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Zenject.SubContainerBinder.ByInstance
Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByInstance(Zenject::DiContainer* subContainer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerBinder").WithContext("ByInstance");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ByInstance", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(subContainer)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, subContainer);
}
// Autogenerated method: Zenject.SubContainerBinder.ByInstanceGetter
Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByInstanceGetter(System::Func_2<Zenject::InjectContext*, Zenject::DiContainer*>* subContainerGetter) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerBinder").WithContext("ByInstanceGetter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ByInstanceGetter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(subContainerGetter)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::ScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, subContainerGetter);
}
// Autogenerated method: Zenject.SubContainerBinder.ByInstaller
Zenject::WithKernelDefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByInstaller(System::Type* installerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerBinder").WithContext("ByInstaller");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ByInstaller", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(installerType)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::WithKernelDefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, installerType);
}
// Autogenerated method: Zenject.SubContainerBinder.ByMethod
Zenject::WithKernelDefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByMethod(System::Action_1<Zenject::DiContainer*>* installerMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerBinder").WithContext("ByMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ByMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(installerMethod)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::WithKernelDefaultParentScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, installerMethod);
}
// Autogenerated method: Zenject.SubContainerBinder.ByNewGameObjectMethod
Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByNewGameObjectMethod(System::Action_1<Zenject::DiContainer*>* installerMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerBinder").WithContext("ByNewGameObjectMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ByNewGameObjectMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(installerMethod)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, installerMethod);
}
// Autogenerated method: Zenject.SubContainerBinder.ByNewPrefabMethod
Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByNewPrefabMethod(UnityEngine::Object* prefab, System::Action_1<Zenject::DiContainer*>* installerMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerBinder").WithContext("ByNewPrefabMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ByNewPrefabMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(prefab, installerMethod)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, prefab, installerMethod);
}
// Autogenerated method: Zenject.SubContainerBinder.ByNewGameObjectInstaller
Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByNewGameObjectInstaller(System::Type* installerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerBinder").WithContext("ByNewGameObjectInstaller");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ByNewGameObjectInstaller", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(installerType)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, installerType);
}
// Autogenerated method: Zenject.SubContainerBinder.ByNewPrefabInstaller
Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByNewPrefabInstaller(UnityEngine::Object* prefab, System::Type* installerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerBinder").WithContext("ByNewPrefabInstaller");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ByNewPrefabInstaller", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(prefab, installerType)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, prefab, installerType);
}
// Autogenerated method: Zenject.SubContainerBinder.ByNewPrefabResourceMethod
Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByNewPrefabResourceMethod(::Il2CppString* resourcePath, System::Action_1<Zenject::DiContainer*>* installerMethod) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerBinder").WithContext("ByNewPrefabResourceMethod");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ByNewPrefabResourceMethod", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(resourcePath, installerMethod)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, resourcePath, installerMethod);
}
// Autogenerated method: Zenject.SubContainerBinder.ByNewPrefabResourceInstaller
Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByNewPrefabResourceInstaller(::Il2CppString* resourcePath, System::Type* installerType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerBinder").WithContext("ByNewPrefabResourceInstaller");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ByNewPrefabResourceInstaller", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(resourcePath, installerType)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, resourcePath, installerType);
}
// Autogenerated method: Zenject.SubContainerBinder.ByNewPrefab
Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByNewPrefab(UnityEngine::Object* prefab) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerBinder").WithContext("ByNewPrefab");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ByNewPrefab", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(prefab)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, prefab);
}
// Autogenerated method: Zenject.SubContainerBinder.ByNewContextPrefab
Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByNewContextPrefab(UnityEngine::Object* prefab) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerBinder").WithContext("ByNewContextPrefab");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ByNewContextPrefab", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(prefab)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, prefab);
}
// Autogenerated method: Zenject.SubContainerBinder.ByNewPrefabResource
Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByNewPrefabResource(::Il2CppString* resourcePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerBinder").WithContext("ByNewPrefabResource");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ByNewPrefabResource", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(resourcePath)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, resourcePath);
}
// Autogenerated method: Zenject.SubContainerBinder.ByNewContextPrefabResource
Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder* Zenject::SubContainerBinder::ByNewContextPrefabResource(::Il2CppString* resourcePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Zenject").WithContext("SubContainerBinder").WithContext("ByNewContextPrefabResource");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ByNewContextPrefabResource", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(resourcePath)));
  return ::il2cpp_utils::RunMethodThrow<Zenject::NameTransformScopeConcreteIdArgConditionCopyNonLazyBinder*, false>(this, ___internal__method, resourcePath);
}
