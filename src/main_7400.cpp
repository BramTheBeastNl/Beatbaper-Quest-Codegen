// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_get_ref_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_get_ref_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509list_ref
#include "Mono/Unity/UnityTls_unitytls_x509list_ref.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509list
#include "Mono/Unity/UnityTls_unitytls_x509list.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_get_ref_t.Invoke
Mono::Unity::UnityTls::unitytls_x509list_ref Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_ref_t::Invoke(Mono::Unity::UnityTls::unitytls_x509list* list, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_x509list_get_ref_t").WithContext("Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(list, errorState)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Unity::UnityTls::unitytls_x509list_ref, false>(this, ___internal__method, list, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_get_ref_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_ref_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_x509list* list, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_x509list_get_ref_t").WithContext("BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(list, errorState, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, list, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_get_ref_t.EndInvoke
Mono::Unity::UnityTls::unitytls_x509list_ref Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_ref_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_x509list_get_ref_t").WithContext("EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Unity::UnityTls::unitytls_x509list_ref, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_get_x509_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_get_x509_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509_ref
#include "Mono/Unity/UnityTls_unitytls_x509_ref.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509list_ref
#include "Mono/Unity/UnityTls_unitytls_x509list_ref.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_get_x509_t.Invoke
Mono::Unity::UnityTls::unitytls_x509_ref Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_x509_t::Invoke(Mono::Unity::UnityTls::unitytls_x509list_ref list, System::IntPtr index, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_x509list_get_x509_t").WithContext("Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(list, index, errorState)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Unity::UnityTls::unitytls_x509_ref, false>(this, ___internal__method, list, index, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_get_x509_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_x509_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_x509list_ref list, System::IntPtr index, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_x509list_get_x509_t").WithContext("BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(list, index, errorState, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, list, index, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_get_x509_t.EndInvoke
Mono::Unity::UnityTls::unitytls_x509_ref Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_get_x509_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_x509list_get_x509_t").WithContext("EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Unity::UnityTls::unitytls_x509_ref, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_create_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_create_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509list
#include "Mono/Unity/UnityTls_unitytls_x509list.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_create_t.Invoke
Mono::Unity::UnityTls::unitytls_x509list* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_create_t::Invoke(Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_x509list_create_t").WithContext("Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(errorState)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Unity::UnityTls::unitytls_x509list*, false>(this, ___internal__method, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_create_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_create_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_x509list_create_t").WithContext("BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(errorState, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_create_t.EndInvoke
Mono::Unity::UnityTls::unitytls_x509list* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_create_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_x509list_create_t").WithContext("EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Unity::UnityTls::unitytls_x509list*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_append_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_append_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509list
#include "Mono/Unity/UnityTls_unitytls_x509list.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509_ref
#include "Mono/Unity/UnityTls_unitytls_x509_ref.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_append_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_t::Invoke(Mono::Unity::UnityTls::unitytls_x509list* list, Mono::Unity::UnityTls::unitytls_x509_ref cert, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_x509list_append_t").WithContext("Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(list, cert, errorState)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, list, cert, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_append_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_x509list* list, Mono::Unity::UnityTls::unitytls_x509_ref cert, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_x509list_append_t").WithContext("BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(list, cert, errorState, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, list, cert, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_append_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_x509list_append_t").WithContext("EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_append_der_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_append_der_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509list
#include "Mono/Unity/UnityTls_unitytls_x509list.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_append_der_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_der_t::Invoke(Mono::Unity::UnityTls::unitytls_x509list* list, uint8_t* buffer, System::IntPtr bufferLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_x509list_append_der_t").WithContext("Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(list, buffer, bufferLen, errorState)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, list, buffer, bufferLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_append_der_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_der_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_x509list* list, uint8_t* buffer, System::IntPtr bufferLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_x509list_append_der_t").WithContext("BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(list, buffer, bufferLen, errorState, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, list, buffer, bufferLen, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_append_der_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_append_der_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_x509list_append_der_t").WithContext("EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_free_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509list_free_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509list
#include "Mono/Unity/UnityTls_unitytls_x509list.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_free_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_free_t::Invoke(Mono::Unity::UnityTls::unitytls_x509list* list) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_x509list_free_t").WithContext("Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(list)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, list);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_free_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_free_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_x509list* list, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_x509list_free_t").WithContext("BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(list, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, list, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509list_free_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509list_free_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_x509list_free_t").WithContext("EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509verify_default_ca_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509verify_default_ca_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509verify_result
#include "Mono/Unity/UnityTls_unitytls_x509verify_result.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509list_ref
#include "Mono/Unity/UnityTls_unitytls_x509list_ref.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509verify_callback
#include "Mono/Unity/UnityTls_unitytls_x509verify_callback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509verify_default_ca_t.Invoke
Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_default_ca_t::Invoke(Mono::Unity::UnityTls::unitytls_x509list_ref chain, uint8_t* cn, System::IntPtr cnLen, Mono::Unity::UnityTls::unitytls_x509verify_callback* cb, void* userData, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_x509verify_default_ca_t").WithContext("Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(chain, cn, cnLen, cb, userData, errorState)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Unity::UnityTls::unitytls_x509verify_result, false>(this, ___internal__method, chain, cn, cnLen, cb, userData, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509verify_default_ca_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_default_ca_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_x509list_ref chain, uint8_t* cn, System::IntPtr cnLen, Mono::Unity::UnityTls::unitytls_x509verify_callback* cb, void* userData, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_x509verify_default_ca_t").WithContext("BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(chain, cn, cnLen, cb, userData, errorState, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, chain, cn, cnLen, cb, userData, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509verify_default_ca_t.EndInvoke
Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_default_ca_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_x509verify_default_ca_t").WithContext("EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Unity::UnityTls::unitytls_x509verify_result, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509verify_explicit_ca_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_x509verify_explicit_ca_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509verify_result
#include "Mono/Unity/UnityTls_unitytls_x509verify_result.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509list_ref
#include "Mono/Unity/UnityTls_unitytls_x509list_ref.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509verify_callback
#include "Mono/Unity/UnityTls_unitytls_x509verify_callback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509verify_explicit_ca_t.Invoke
Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_explicit_ca_t::Invoke(Mono::Unity::UnityTls::unitytls_x509list_ref chain, Mono::Unity::UnityTls::unitytls_x509list_ref trustCA, uint8_t* cn, System::IntPtr cnLen, Mono::Unity::UnityTls::unitytls_x509verify_callback* cb, void* userData, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_x509verify_explicit_ca_t").WithContext("Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(chain, trustCA, cn, cnLen, cb, userData, errorState)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Unity::UnityTls::unitytls_x509verify_result, false>(this, ___internal__method, chain, trustCA, cn, cnLen, cb, userData, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509verify_explicit_ca_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_explicit_ca_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_x509list_ref chain, Mono::Unity::UnityTls::unitytls_x509list_ref trustCA, uint8_t* cn, System::IntPtr cnLen, Mono::Unity::UnityTls::unitytls_x509verify_callback* cb, void* userData, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_x509verify_explicit_ca_t").WithContext("BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(chain, trustCA, cn, cnLen, cb, userData, errorState, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, chain, trustCA, cn, cnLen, cb, userData, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_x509verify_explicit_ca_t.EndInvoke
Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_x509verify_explicit_ca_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_x509verify_explicit_ca_t").WithContext("EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Unity::UnityTls::unitytls_x509verify_result, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_create_server_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_create_server_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx_protocolrange
#include "Mono/Unity/UnityTls_unitytls_tlsctx_protocolrange.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx_callbacks
#include "Mono/Unity/UnityTls_unitytls_tlsctx_callbacks.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_create_server_t.Invoke
Mono::Unity::UnityTls::unitytls_tlsctx* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_server_t::Invoke(Mono::Unity::UnityTls::unitytls_tlsctx_protocolrange supportedProtocols, Mono::Unity::UnityTls::unitytls_tlsctx_callbacks callbacks, uint64_t certChain, uint64_t leafCertificateKey, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_create_server_t").WithContext("Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(supportedProtocols, callbacks, certChain, leafCertificateKey, errorState)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Unity::UnityTls::unitytls_tlsctx*, false>(this, ___internal__method, supportedProtocols, callbacks, certChain, leafCertificateKey, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_create_server_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_server_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_tlsctx_protocolrange supportedProtocols, Mono::Unity::UnityTls::unitytls_tlsctx_callbacks callbacks, uint64_t certChain, uint64_t leafCertificateKey, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_create_server_t").WithContext("BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(supportedProtocols, callbacks, certChain, leafCertificateKey, errorState, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, supportedProtocols, callbacks, certChain, leafCertificateKey, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_create_server_t.EndInvoke
Mono::Unity::UnityTls::unitytls_tlsctx* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_server_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_create_server_t").WithContext("EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Unity::UnityTls::unitytls_tlsctx*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_create_client_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_create_client_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx_protocolrange
#include "Mono/Unity/UnityTls_unitytls_tlsctx_protocolrange.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx_callbacks
#include "Mono/Unity/UnityTls_unitytls_tlsctx_callbacks.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_create_client_t.Invoke
Mono::Unity::UnityTls::unitytls_tlsctx* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_client_t::Invoke(Mono::Unity::UnityTls::unitytls_tlsctx_protocolrange supportedProtocols, Mono::Unity::UnityTls::unitytls_tlsctx_callbacks callbacks, uint8_t* cn, System::IntPtr cnLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_create_client_t").WithContext("Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(supportedProtocols, callbacks, cn, cnLen, errorState)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Unity::UnityTls::unitytls_tlsctx*, false>(this, ___internal__method, supportedProtocols, callbacks, cn, cnLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_create_client_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_client_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_tlsctx_protocolrange supportedProtocols, Mono::Unity::UnityTls::unitytls_tlsctx_callbacks callbacks, uint8_t* cn, System::IntPtr cnLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_create_client_t").WithContext("BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(supportedProtocols, callbacks, cn, cnLen, errorState, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, supportedProtocols, callbacks, cn, cnLen, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_create_client_t.EndInvoke
Mono::Unity::UnityTls::unitytls_tlsctx* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_create_client_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_create_client_t").WithContext("EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Unity::UnityTls::unitytls_tlsctx*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_server_require_client_authentication_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_server_require_client_authentication_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509list_ref
#include "Mono/Unity/UnityTls_unitytls_x509list_ref.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_server_require_client_authentication_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_server_require_client_authentication_t::Invoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, Mono::Unity::UnityTls::unitytls_x509list_ref clientAuthCAList, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_server_require_client_authentication_t").WithContext("Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ctx, clientAuthCAList, errorState)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ctx, clientAuthCAList, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_server_require_client_authentication_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_server_require_client_authentication_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, Mono::Unity::UnityTls::unitytls_x509list_ref clientAuthCAList, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_server_require_client_authentication_t").WithContext("BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ctx, clientAuthCAList, errorState, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, ctx, clientAuthCAList, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_server_require_client_authentication_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_server_require_client_authentication_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_server_require_client_authentication_t").WithContext("EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_set_certificate_callback_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_certificate_callback_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx_certificate_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_certificate_callback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_set_certificate_callback_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_certificate_callback_t::Invoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, Mono::Unity::UnityTls::unitytls_tlsctx_certificate_callback* cb, void* userData, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_set_certificate_callback_t").WithContext("Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ctx, cb, userData, errorState)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ctx, cb, userData, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_set_certificate_callback_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_certificate_callback_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, Mono::Unity::UnityTls::unitytls_tlsctx_certificate_callback* cb, void* userData, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_set_certificate_callback_t").WithContext("BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ctx, cb, userData, errorState, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, ctx, cb, userData, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_set_certificate_callback_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_certificate_callback_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_set_certificate_callback_t").WithContext("EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_set_trace_callback_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_trace_callback_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx_trace_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_trace_callback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_set_trace_callback_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_trace_callback_t::Invoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, Mono::Unity::UnityTls::unitytls_tlsctx_trace_callback* cb, void* userData, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_set_trace_callback_t").WithContext("Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ctx, cb, userData, errorState)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ctx, cb, userData, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_set_trace_callback_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_trace_callback_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, Mono::Unity::UnityTls::unitytls_tlsctx_trace_callback* cb, void* userData, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_set_trace_callback_t").WithContext("BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ctx, cb, userData, errorState, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, ctx, cb, userData, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_set_trace_callback_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_trace_callback_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_set_trace_callback_t").WithContext("EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_set_x509verify_callback_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_x509verify_callback_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx_x509verify_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_x509verify_callback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_set_x509verify_callback_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_x509verify_callback_t::Invoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, Mono::Unity::UnityTls::unitytls_tlsctx_x509verify_callback* cb, void* userData, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_set_x509verify_callback_t").WithContext("Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ctx, cb, userData, errorState)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ctx, cb, userData, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_set_x509verify_callback_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_x509verify_callback_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, Mono::Unity::UnityTls::unitytls_tlsctx_x509verify_callback* cb, void* userData, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_set_x509verify_callback_t").WithContext("BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ctx, cb, userData, errorState, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, ctx, cb, userData, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_set_x509verify_callback_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_x509verify_callback_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_set_x509verify_callback_t").WithContext("EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_set_supported_ciphersuites_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_set_supported_ciphersuites_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_ciphersuite
#include "Mono/Unity/UnityTls_unitytls_ciphersuite.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_set_supported_ciphersuites_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_supported_ciphersuites_t::Invoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, Mono::Unity::UnityTls::unitytls_ciphersuite* supportedCiphersuites, System::IntPtr supportedCiphersuitesLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_set_supported_ciphersuites_t").WithContext("Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ctx, supportedCiphersuites, supportedCiphersuitesLen, errorState)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ctx, supportedCiphersuites, supportedCiphersuitesLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_set_supported_ciphersuites_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_supported_ciphersuites_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, Mono::Unity::UnityTls::unitytls_ciphersuite* supportedCiphersuites, System::IntPtr supportedCiphersuitesLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_set_supported_ciphersuites_t").WithContext("BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ctx, supportedCiphersuites, supportedCiphersuitesLen, errorState, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, ctx, supportedCiphersuites, supportedCiphersuitesLen, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_set_supported_ciphersuites_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_set_supported_ciphersuites_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_set_supported_ciphersuites_t").WithContext("EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_get_ciphersuite_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_get_ciphersuite_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_ciphersuite
#include "Mono/Unity/UnityTls_unitytls_ciphersuite.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_get_ciphersuite_t.Invoke
Mono::Unity::UnityTls::unitytls_ciphersuite Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_ciphersuite_t::Invoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_get_ciphersuite_t").WithContext("Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ctx, errorState)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Unity::UnityTls::unitytls_ciphersuite, false>(this, ___internal__method, ctx, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_get_ciphersuite_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_ciphersuite_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_get_ciphersuite_t").WithContext("BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ctx, errorState, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, ctx, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_get_ciphersuite_t.EndInvoke
Mono::Unity::UnityTls::unitytls_ciphersuite Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_ciphersuite_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_get_ciphersuite_t").WithContext("EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Unity::UnityTls::unitytls_ciphersuite, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_get_protocol_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_get_protocol_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_protocol
#include "Mono/Unity/UnityTls_unitytls_protocol.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_get_protocol_t.Invoke
Mono::Unity::UnityTls::unitytls_protocol Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_protocol_t::Invoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_get_protocol_t").WithContext("Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ctx, errorState)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Unity::UnityTls::unitytls_protocol, false>(this, ___internal__method, ctx, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_get_protocol_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_protocol_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_get_protocol_t").WithContext("BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ctx, errorState, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, ctx, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_get_protocol_t.EndInvoke
Mono::Unity::UnityTls::unitytls_protocol Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_get_protocol_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_get_protocol_t").WithContext("EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Unity::UnityTls::unitytls_protocol, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_process_handshake_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_process_handshake_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509verify_result
#include "Mono/Unity/UnityTls_unitytls_x509verify_result.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_process_handshake_t.Invoke
Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_process_handshake_t::Invoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_process_handshake_t").WithContext("Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ctx, errorState)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Unity::UnityTls::unitytls_x509verify_result, false>(this, ___internal__method, ctx, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_process_handshake_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_process_handshake_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_process_handshake_t").WithContext("BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ctx, errorState, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, ctx, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_process_handshake_t.EndInvoke
Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_process_handshake_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_process_handshake_t").WithContext("EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Unity::UnityTls::unitytls_x509verify_result, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_read_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_read_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_read_t.Invoke
System::IntPtr Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_read_t::Invoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, uint8_t* buffer, System::IntPtr bufferLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_read_t").WithContext("Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ctx, buffer, bufferLen, errorState)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method, ctx, buffer, bufferLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_read_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_read_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, uint8_t* buffer, System::IntPtr bufferLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_read_t").WithContext("BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ctx, buffer, bufferLen, errorState, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, ctx, buffer, bufferLen, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_read_t.EndInvoke
System::IntPtr Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_read_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_read_t").WithContext("EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_write_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_write_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_write_t.Invoke
System::IntPtr Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_write_t::Invoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, uint8_t* data, System::IntPtr bufferLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_write_t").WithContext("Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ctx, data, bufferLen, errorState)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method, ctx, data, bufferLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_write_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_write_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, uint8_t* data, System::IntPtr bufferLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_write_t").WithContext("BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ctx, data, bufferLen, errorState, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, ctx, data, bufferLen, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_write_t.EndInvoke
System::IntPtr Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_write_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_write_t").WithContext("EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_notify_close_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_notify_close_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_notify_close_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_notify_close_t::Invoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_notify_close_t").WithContext("Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ctx, errorState)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ctx, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_notify_close_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_notify_close_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_notify_close_t").WithContext("BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ctx, errorState, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, ctx, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_notify_close_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_notify_close_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_notify_close_t").WithContext("EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_free_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_tlsctx_free_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_free_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_free_t::Invoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_free_t").WithContext("Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ctx)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ctx);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_free_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_free_t::BeginInvoke(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_free_t").WithContext("BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ctx, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, ctx, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_tlsctx_free_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_tlsctx_free_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_tlsctx_free_t").WithContext("EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_random_generate_bytes_t
#include "Mono/Unity/UnityTls_unitytls_interface_struct_unitytls_random_generate_bytes_t.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_random_generate_bytes_t.Invoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_random_generate_bytes_t::Invoke(uint8_t* buffer, System::IntPtr bufferLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_random_generate_bytes_t").WithContext("Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, bufferLen, errorState)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, bufferLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_random_generate_bytes_t.BeginInvoke
System::IAsyncResult* Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_random_generate_bytes_t::BeginInvoke(uint8_t* buffer, System::IntPtr bufferLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_random_generate_bytes_t").WithContext("BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, bufferLen, errorState, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, buffer, bufferLen, errorState, callback, object);
}
// Autogenerated method: Mono.Unity.UnityTls/unitytls_interface_struct/unitytls_random_generate_bytes_t.EndInvoke
void Mono::Unity::UnityTls::unitytls_interface_struct::unitytls_random_generate_bytes_t::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("unitytls_random_generate_bytes_t").WithContext("EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTlsContext
#include "Mono/Unity/UnityTlsContext.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: Mono.Security.Interface.MonoTlsConnectionInfo
#include "Mono/Security/Interface/MonoTlsConnectionInfo.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream
#include "Mono/Net/Security/MobileAuthenticatedStream.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: System.ValueTuple`2
#include "System/ValueTuple_2.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx
#include "Mono/Unity/UnityTls_unitytls_tlsctx.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509list
#include "Mono/Unity/UnityTls_unitytls_x509list.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_key
#include "Mono/Unity/UnityTls_unitytls_key.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx_read_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_read_callback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx_write_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_write_callback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx_certificate_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_certificate_callback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_tlsctx_x509verify_callback
#include "Mono/Unity/UnityTls_unitytls_tlsctx_x509verify_callback.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_errorstate
#include "Mono/Unity/UnityTls_unitytls_errorstate.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509verify_result
#include "Mono/Unity/UnityTls_unitytls_x509verify_result.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509list_ref
#include "Mono/Unity/UnityTls_unitytls_x509list_ref.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509name
#include "Mono/Unity/UnityTls_unitytls_x509name.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_key_ref
#include "Mono/Unity/UnityTls_unitytls_key_ref.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTlsContext.ExtractNativeKeyAndChainFromManagedCertificate
void Mono::Unity::UnityTlsContext::ExtractNativeKeyAndChainFromManagedCertificate(System::Security::Cryptography::X509Certificates::X509Certificate* cert, Mono::Unity::UnityTls::unitytls_errorstate* errorState, Mono::Unity::UnityTls::unitytls_x509list*& nativeCertChain, Mono::Unity::UnityTls::unitytls_key*& nativeKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("UnityTlsContext").WithContext("ExtractNativeKeyAndChainFromManagedCertificate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Unity", "UnityTlsContext", "ExtractNativeKeyAndChainFromManagedCertificate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cert, errorState, nativeCertChain, nativeKey)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, cert, errorState, nativeCertChain, nativeKey);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.WriteCallback
System::IntPtr Mono::Unity::UnityTlsContext::WriteCallback(void* userData, uint8_t* data, System::IntPtr bufferLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("UnityTlsContext").WithContext("WriteCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Unity", "UnityTlsContext", "WriteCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userData, data, bufferLen, errorState)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userData, data, bufferLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.WriteCallback
System::IntPtr Mono::Unity::UnityTlsContext::WriteCallback(uint8_t* data, System::IntPtr bufferLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("UnityTlsContext").WithContext("WriteCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(data, bufferLen, errorState)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method, data, bufferLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.ReadCallback
System::IntPtr Mono::Unity::UnityTlsContext::ReadCallback(void* userData, uint8_t* buffer, System::IntPtr bufferLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("UnityTlsContext").WithContext("ReadCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Unity", "UnityTlsContext", "ReadCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userData, buffer, bufferLen, errorState)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userData, buffer, bufferLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.ReadCallback
System::IntPtr Mono::Unity::UnityTlsContext::ReadCallback(uint8_t* buffer, System::IntPtr bufferLen, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("UnityTlsContext").WithContext("ReadCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReadCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, bufferLen, errorState)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method, buffer, bufferLen, errorState);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.VerifyCallback
Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTlsContext::VerifyCallback(void* userData, Mono::Unity::UnityTls::unitytls_x509list_ref chain, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("UnityTlsContext").WithContext("VerifyCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Unity", "UnityTlsContext", "VerifyCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userData, chain, errorState)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Unity::UnityTls::unitytls_x509verify_result, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userData, chain, errorState);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.VerifyCallback
Mono::Unity::UnityTls::unitytls_x509verify_result Mono::Unity::UnityTlsContext::VerifyCallback(Mono::Unity::UnityTls::unitytls_x509list_ref chain, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("UnityTlsContext").WithContext("VerifyCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "VerifyCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(chain, errorState)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Unity::UnityTls::unitytls_x509verify_result, false>(this, ___internal__method, chain, errorState);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.CertificateCallback
void Mono::Unity::UnityTlsContext::CertificateCallback(void* userData, Mono::Unity::UnityTls::unitytls_tlsctx* ctx, uint8_t* cn, System::IntPtr cnLen, Mono::Unity::UnityTls::unitytls_x509name* caList, System::IntPtr caListLen, Mono::Unity::UnityTls::unitytls_x509list_ref* chain, Mono::Unity::UnityTls::unitytls_key_ref* key, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("UnityTlsContext").WithContext("CertificateCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Unity", "UnityTlsContext", "CertificateCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userData, ctx, cn, cnLen, caList, caListLen, chain, key, errorState)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, userData, ctx, cn, cnLen, caList, caListLen, chain, key, errorState);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.CertificateCallback
void Mono::Unity::UnityTlsContext::CertificateCallback(Mono::Unity::UnityTls::unitytls_tlsctx* ctx, uint8_t* cn, System::IntPtr cnLen, Mono::Unity::UnityTls::unitytls_x509name* caList, System::IntPtr caListLen, Mono::Unity::UnityTls::unitytls_x509list_ref* chain, Mono::Unity::UnityTls::unitytls_key_ref* key, Mono::Unity::UnityTls::unitytls_errorstate* errorState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("UnityTlsContext").WithContext("CertificateCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CertificateCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ctx, cn, cnLen, caList, caListLen, chain, key, errorState)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ctx, cn, cnLen, caList, caListLen, chain, key, errorState);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.get_IsAuthenticated
bool Mono::Unity::UnityTlsContext::get_IsAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("UnityTlsContext").WithContext("get_IsAuthenticated");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsAuthenticated", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.get_LocalClientCertificate
System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Unity::UnityTlsContext::get_LocalClientCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("UnityTlsContext").WithContext("get_LocalClientCertificate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_LocalClientCertificate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.Read
System::ValueTuple_2<int, bool> Mono::Unity::UnityTlsContext::Read(::Array<uint8_t>* buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("UnityTlsContext").WithContext("Read");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, offset, count)));
  return ::il2cpp_utils::RunMethodThrow<System::ValueTuple_2<int, bool>, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.Write
System::ValueTuple_2<int, bool> Mono::Unity::UnityTlsContext::Write(::Array<uint8_t>* buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("UnityTlsContext").WithContext("Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, offset, count)));
  return ::il2cpp_utils::RunMethodThrow<System::ValueTuple_2<int, bool>, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.Shutdown
void Mono::Unity::UnityTlsContext::Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("UnityTlsContext").WithContext("Shutdown");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Shutdown", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.Dispose
void Mono::Unity::UnityTlsContext::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("UnityTlsContext").WithContext("Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disposing)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.StartHandshake
void Mono::Unity::UnityTlsContext::StartHandshake() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("UnityTlsContext").WithContext("StartHandshake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartHandshake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.ProcessHandshake
bool Mono::Unity::UnityTlsContext::ProcessHandshake() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("UnityTlsContext").WithContext("ProcessHandshake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessHandshake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsContext.FinishHandshake
void Mono::Unity::UnityTlsContext::FinishHandshake() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("UnityTlsContext").WithContext("FinishHandshake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FinishHandshake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Unity.UnityTlsConversions
#include "Mono/Unity/UnityTlsConversions.hpp"
// Including type: System.Security.Authentication.SslProtocols
#include "System/Security/Authentication/SslProtocols.hpp"
// Including type: Mono.Security.Interface.TlsProtocols
#include "Mono/Security/Interface/TlsProtocols.hpp"
// Including type: Mono.Security.Interface.AlertDescription
#include "Mono/Security/Interface/AlertDescription.hpp"
// Including type: Mono.Security.Interface.MonoSslPolicyErrors
#include "Mono/Security/Interface/MonoSslPolicyErrors.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_protocol
#include "Mono/Unity/UnityTls_unitytls_protocol.hpp"
// Including type: Mono.Unity.UnityTls/unitytls_x509verify_result
#include "Mono/Unity/UnityTls_unitytls_x509verify_result.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTlsConversions.GetMinProtocol
Mono::Unity::UnityTls::unitytls_protocol Mono::Unity::UnityTlsConversions::GetMinProtocol(System::Security::Authentication::SslProtocols protocols) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("UnityTlsConversions").WithContext("GetMinProtocol");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Unity", "UnityTlsConversions", "GetMinProtocol", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(protocols)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Unity::UnityTls::unitytls_protocol, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, protocols);
}
// Autogenerated method: Mono.Unity.UnityTlsConversions.GetMaxProtocol
Mono::Unity::UnityTls::unitytls_protocol Mono::Unity::UnityTlsConversions::GetMaxProtocol(System::Security::Authentication::SslProtocols protocols) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("UnityTlsConversions").WithContext("GetMaxProtocol");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Unity", "UnityTlsConversions", "GetMaxProtocol", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(protocols)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Unity::UnityTls::unitytls_protocol, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, protocols);
}
// Autogenerated method: Mono.Unity.UnityTlsConversions.ConvertProtocolVersion
Mono::Security::Interface::TlsProtocols Mono::Unity::UnityTlsConversions::ConvertProtocolVersion(Mono::Unity::UnityTls::unitytls_protocol protocol) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("UnityTlsConversions").WithContext("ConvertProtocolVersion");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Unity", "UnityTlsConversions", "ConvertProtocolVersion", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(protocol)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::TlsProtocols, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, protocol);
}
// Autogenerated method: Mono.Unity.UnityTlsConversions.VerifyResultToAlertDescription
Mono::Security::Interface::AlertDescription Mono::Unity::UnityTlsConversions::VerifyResultToAlertDescription(Mono::Unity::UnityTls::unitytls_x509verify_result verifyResult, Mono::Security::Interface::AlertDescription defaultAlert) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("UnityTlsConversions").WithContext("VerifyResultToAlertDescription");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Unity", "UnityTlsConversions", "VerifyResultToAlertDescription", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(verifyResult, defaultAlert)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::AlertDescription, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, verifyResult, defaultAlert);
}
// Autogenerated method: Mono.Unity.UnityTlsConversions.VerifyResultToPolicyErrror
Mono::Security::Interface::MonoSslPolicyErrors Mono::Unity::UnityTlsConversions::VerifyResultToPolicyErrror(Mono::Unity::UnityTls::unitytls_x509verify_result verifyResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("UnityTlsConversions").WithContext("VerifyResultToPolicyErrror");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Unity", "UnityTlsConversions", "VerifyResultToPolicyErrror", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(verifyResult)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::MonoSslPolicyErrors, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, verifyResult);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTlsProvider
#include "Mono/Unity/UnityTlsProvider.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: System.Security.Authentication.SslProtocols
#include "System/Security/Authentication/SslProtocols.hpp"
// Including type: Mono.Security.Interface.IMonoSslStream
#include "Mono/Security/Interface/IMonoSslStream.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
// Including type: System.Net.Security.SslStream
#include "System/Net/Security/SslStream.hpp"
// Including type: Mono.Security.Interface.ICertificateValidator2
#include "Mono/Security/Interface/ICertificateValidator2.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
// Including type: Mono.Security.Interface.MonoSslPolicyErrors
#include "Mono/Security/Interface/MonoSslPolicyErrors.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTlsProvider.get_Name
::Il2CppString* Mono::Unity::UnityTlsProvider::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("UnityTlsProvider").WithContext("get_Name");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsProvider.get_ID
System::Guid Mono::Unity::UnityTlsProvider::get_ID() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("UnityTlsProvider").WithContext("get_ID");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ID", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Guid, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsProvider.get_SupportsSslStream
bool Mono::Unity::UnityTlsProvider::get_SupportsSslStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("UnityTlsProvider").WithContext("get_SupportsSslStream");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_SupportsSslStream", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsProvider.get_SupportsMonoExtensions
bool Mono::Unity::UnityTlsProvider::get_SupportsMonoExtensions() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("UnityTlsProvider").WithContext("get_SupportsMonoExtensions");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_SupportsMonoExtensions", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsProvider.get_SupportsConnectionInfo
bool Mono::Unity::UnityTlsProvider::get_SupportsConnectionInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("UnityTlsProvider").WithContext("get_SupportsConnectionInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_SupportsConnectionInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsProvider.get_SupportsCleanShutdown
bool Mono::Unity::UnityTlsProvider::get_SupportsCleanShutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("UnityTlsProvider").WithContext("get_SupportsCleanShutdown");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_SupportsCleanShutdown", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsProvider.get_SupportedProtocols
System::Security::Authentication::SslProtocols Mono::Unity::UnityTlsProvider::get_SupportedProtocols() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("UnityTlsProvider").WithContext("get_SupportedProtocols");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_SupportedProtocols", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Authentication::SslProtocols, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Unity.UnityTlsProvider.CreateSslStream
Mono::Security::Interface::IMonoSslStream* Mono::Unity::UnityTlsProvider::CreateSslStream(System::IO::Stream* innerStream, bool leaveInnerStreamOpen, Mono::Security::Interface::MonoTlsSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("UnityTlsProvider").WithContext("CreateSslStream");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateSslStream", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(innerStream, leaveInnerStreamOpen, settings)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::IMonoSslStream*, false>(this, ___internal__method, innerStream, leaveInnerStreamOpen, settings);
}
// Autogenerated method: Mono.Unity.UnityTlsProvider.CreateSslStreamInternal
Mono::Security::Interface::IMonoSslStream* Mono::Unity::UnityTlsProvider::CreateSslStreamInternal(System::Net::Security::SslStream* sslStream, System::IO::Stream* innerStream, bool leaveInnerStreamOpen, Mono::Security::Interface::MonoTlsSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("UnityTlsProvider").WithContext("CreateSslStreamInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateSslStreamInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sslStream, innerStream, leaveInnerStreamOpen, settings)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::IMonoSslStream*, false>(this, ___internal__method, sslStream, innerStream, leaveInnerStreamOpen, settings);
}
// Autogenerated method: Mono.Unity.UnityTlsProvider.ValidateCertificate
bool Mono::Unity::UnityTlsProvider::ValidateCertificate(Mono::Security::Interface::ICertificateValidator2* validator, ::Il2CppString* targetHost, bool serverMode, System::Security::Cryptography::X509Certificates::X509CertificateCollection* certificates, bool wantsChain, System::Security::Cryptography::X509Certificates::X509Chain*& chain, Mono::Security::Interface::MonoSslPolicyErrors& errors, int& status11) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("UnityTlsProvider").WithContext("ValidateCertificate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ValidateCertificate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(validator, targetHost, serverMode, certificates, wantsChain, chain, errors, status11)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, validator, targetHost, serverMode, certificates, wantsChain, chain, errors, status11);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Unity.UnityTlsStream
#include "Mono/Unity/UnityTlsStream.hpp"
// Including type: System.Net.Security.SslStream
#include "System/Net/Security/SslStream.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
// Including type: Mono.Security.Interface.MonoTlsProvider
#include "Mono/Security/Interface/MonoTlsProvider.hpp"
// Including type: Mono.Net.Security.MobileTlsContext
#include "Mono/Net/Security/MobileTlsContext.hpp"
// Including type: System.Security.Authentication.SslProtocols
#include "System/Security/Authentication/SslProtocols.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Unity.UnityTlsStream.CreateContext
Mono::Net::Security::MobileTlsContext* Mono::Unity::UnityTlsStream::CreateContext(bool serverMode, ::Il2CppString* targetHost, System::Security::Authentication::SslProtocols enabledProtocols, System::Security::Cryptography::X509Certificates::X509Certificate* serverCertificate, System::Security::Cryptography::X509Certificates::X509CertificateCollection* clientCertificates, bool askForClientCert) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Unity").WithContext("UnityTlsStream").WithContext("CreateContext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateContext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(serverMode, targetHost, enabledProtocols, serverCertificate, clientCertificates, askForClientCert)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Net::Security::MobileTlsContext*, false>(this, ___internal__method, serverMode, targetHost, enabledProtocols, serverCertificate, clientCertificates, askForClientCert);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.CFObject
#include "Mono/Net/CFObject.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.CFObject.dlopen
System::IntPtr Mono::Net::CFObject::dlopen(::Il2CppString* path, int mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFObject").WithContext("dlopen");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFObject", "dlopen", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(path, mode)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, path, mode);
}
// Autogenerated method: Mono.Net.CFObject.dlsym
System::IntPtr Mono::Net::CFObject::dlsym(System::IntPtr handle, ::Il2CppString* symbol) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFObject").WithContext("dlsym");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFObject", "dlsym", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle, symbol)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, symbol);
}
// Autogenerated method: Mono.Net.CFObject.dlclose
void Mono::Net::CFObject::dlclose(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFObject").WithContext("dlclose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFObject", "dlclose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Mono.Net.CFObject.GetIndirect
System::IntPtr Mono::Net::CFObject::GetIndirect(System::IntPtr handle, ::Il2CppString* symbol) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFObject").WithContext("GetIndirect");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFObject", "GetIndirect", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle, symbol)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, symbol);
}
// Autogenerated method: Mono.Net.CFObject.GetCFObjectHandle
System::IntPtr Mono::Net::CFObject::GetCFObjectHandle(System::IntPtr handle, ::Il2CppString* symbol) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFObject").WithContext("GetCFObjectHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFObject", "GetCFObjectHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle, symbol)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, symbol);
}
// Autogenerated method: Mono.Net.CFObject.get_Handle
System::IntPtr Mono::Net::CFObject::get_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFObject").WithContext("get_Handle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Handle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFObject.set_Handle
void Mono::Net::CFObject::set_Handle(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFObject").WithContext("set_Handle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Handle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Net.CFObject.CFRetain
System::IntPtr Mono::Net::CFObject::CFRetain(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFObject").WithContext("CFRetain");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFObject", "CFRetain", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Mono.Net.CFObject.Retain
void Mono::Net::CFObject::Retain() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFObject").WithContext("Retain");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Retain", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFObject.CFRelease
void Mono::Net::CFObject::CFRelease(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFObject").WithContext("CFRelease");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFObject", "CFRelease", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Mono.Net.CFObject.Release
void Mono::Net::CFObject::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFObject").WithContext("Release");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFObject.Dispose
void Mono::Net::CFObject::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFObject").WithContext("Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disposing)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Mono.Net.CFObject.Finalize
void Mono::Net::CFObject::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFObject").WithContext("Finalize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFObject.Dispose
void Mono::Net::CFObject::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFObject").WithContext("Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
void Mono::Net::CFObject::System_IDisposable_Dispose() {
  Mono::Net::CFObject::Dispose();
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFArray
#include "Mono/Net/CFArray.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.IntPtr kCFTypeArrayCallbacks
System::IntPtr Mono::Net::CFArray::_get_kCFTypeArrayCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFArray").WithContext("_get_kCFTypeArrayCallbacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFArray", "kCFTypeArrayCallbacks"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.IntPtr kCFTypeArrayCallbacks
void Mono::Net::CFArray::_set_kCFTypeArrayCallbacks(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFArray").WithContext("_set_kCFTypeArrayCallbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFArray", "kCFTypeArrayCallbacks", value));
}
// Autogenerated method: Mono.Net.CFArray..cctor
void Mono::Net::CFArray::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFArray").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFArray", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.CFArray.CFArrayGetCount
System::IntPtr Mono::Net::CFArray::CFArrayGetCount(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFArray").WithContext("CFArrayGetCount");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFArray", "CFArrayGetCount", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Mono.Net.CFArray.get_Count
int Mono::Net::CFArray::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFArray").WithContext("get_Count");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFArray.CFArrayGetValueAtIndex
System::IntPtr Mono::Net::CFArray::CFArrayGetValueAtIndex(System::IntPtr handle, System::IntPtr index) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFArray").WithContext("CFArrayGetValueAtIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFArray", "CFArrayGetValueAtIndex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle, index)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, index);
}
// Autogenerated method: Mono.Net.CFArray.get_Item
System::IntPtr Mono::Net::CFArray::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFArray").WithContext("get_Item");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(index)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFNumber
#include "Mono/Net/CFNumber.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.CFNumber.CFNumberGetValue
bool Mono::Net::CFNumber::CFNumberGetValue(System::IntPtr handle, System::IntPtr type, int& value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFNumber").WithContext("CFNumberGetValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFNumber", "CFNumberGetValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle, type, value)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, type, value);
}
// Autogenerated method: Mono.Net.CFNumber.AsInt32
int Mono::Net::CFNumber::AsInt32(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFNumber").WithContext("AsInt32");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFNumber", "AsInt32", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFRange
#include "Mono/Net/CFRange.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.CFString
#include "Mono/Net/CFString.hpp"
// Including type: Mono.Net.CFRange
#include "Mono/Net/CFRange.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.CFString.CFStringCreateWithCharacters
System::IntPtr Mono::Net::CFString::CFStringCreateWithCharacters(System::IntPtr alloc, System::IntPtr chars, System::IntPtr length) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFString").WithContext("CFStringCreateWithCharacters");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFString", "CFStringCreateWithCharacters", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(alloc, chars, length)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, alloc, chars, length);
}
// Autogenerated method: Mono.Net.CFString.Create
Mono::Net::CFString* Mono::Net::CFString::Create(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFString").WithContext("Create");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFString", "Create", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Net::CFString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Mono.Net.CFString.CFStringGetLength
System::IntPtr Mono::Net::CFString::CFStringGetLength(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFString").WithContext("CFStringGetLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFString", "CFStringGetLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Mono.Net.CFString.CFStringGetCharactersPtr
System::IntPtr Mono::Net::CFString::CFStringGetCharactersPtr(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFString").WithContext("CFStringGetCharactersPtr");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFString", "CFStringGetCharactersPtr", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Mono.Net.CFString.CFStringGetCharacters
System::IntPtr Mono::Net::CFString::CFStringGetCharacters(System::IntPtr handle, Mono::Net::CFRange range, System::IntPtr buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFString").WithContext("CFStringGetCharacters");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFString", "CFStringGetCharacters", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle, range, buffer)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, range, buffer);
}
// Autogenerated method: Mono.Net.CFString.AsString
::Il2CppString* Mono::Net::CFString::AsString(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFString").WithContext("AsString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFString", "AsString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated method: Mono.Net.CFString.ToString
::Il2CppString* Mono::Net::CFString::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFString").WithContext("ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFDictionary
#include "Mono/Net/CFDictionary.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.IntPtr KeyCallbacks
System::IntPtr Mono::Net::CFDictionary::_get_KeyCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFDictionary").WithContext("_get_KeyCallbacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFDictionary", "KeyCallbacks"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.IntPtr KeyCallbacks
void Mono::Net::CFDictionary::_set_KeyCallbacks(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFDictionary").WithContext("_set_KeyCallbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFDictionary", "KeyCallbacks", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.IntPtr ValueCallbacks
System::IntPtr Mono::Net::CFDictionary::_get_ValueCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFDictionary").WithContext("_get_ValueCallbacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFDictionary", "ValueCallbacks"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.IntPtr ValueCallbacks
void Mono::Net::CFDictionary::_set_ValueCallbacks(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFDictionary").WithContext("_set_ValueCallbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFDictionary", "ValueCallbacks", value));
}
// Autogenerated method: Mono.Net.CFDictionary..cctor
void Mono::Net::CFDictionary::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFDictionary").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFDictionary", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.CFDictionary.CFDictionaryGetValue
System::IntPtr Mono::Net::CFDictionary::CFDictionaryGetValue(System::IntPtr handle, System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFDictionary").WithContext("CFDictionaryGetValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFDictionary", "CFDictionaryGetValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle, key)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, key);
}
// Autogenerated method: Mono.Net.CFDictionary.GetValue
System::IntPtr Mono::Net::CFDictionary::GetValue(System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFDictionary").WithContext("GetValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method, key);
}
// Autogenerated method: Mono.Net.CFDictionary.get_Item
System::IntPtr Mono::Net::CFDictionary::get_Item(System::IntPtr key) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFDictionary").WithContext("get_Item");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(key)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method, key);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.CFUrl
#include "Mono/Net/CFUrl.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.CFUrl.CFURLCreateWithString
System::IntPtr Mono::Net::CFUrl::CFURLCreateWithString(System::IntPtr allocator, System::IntPtr str, System::IntPtr baseURL) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFUrl").WithContext("CFURLCreateWithString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFUrl", "CFURLCreateWithString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(allocator, str, baseURL)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, allocator, str, baseURL);
}
// Autogenerated method: Mono.Net.CFUrl.Create
Mono::Net::CFUrl* Mono::Net::CFUrl::Create(::Il2CppString* absolute) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFUrl").WithContext("Create");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFUrl", "Create", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(absolute)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Net::CFUrl*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, absolute);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFRunLoop
#include "Mono/Net/CFRunLoop.hpp"
// Including type: Mono.Net.CFString
#include "Mono/Net/CFString.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.CFRunLoop.CFRunLoopAddSource
void Mono::Net::CFRunLoop::CFRunLoopAddSource(System::IntPtr rl, System::IntPtr source, System::IntPtr mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFRunLoop").WithContext("CFRunLoopAddSource");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFRunLoop", "CFRunLoopAddSource", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rl, source, mode)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rl, source, mode);
}
// Autogenerated method: Mono.Net.CFRunLoop.CFRunLoopRemoveSource
void Mono::Net::CFRunLoop::CFRunLoopRemoveSource(System::IntPtr rl, System::IntPtr source, System::IntPtr mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFRunLoop").WithContext("CFRunLoopRemoveSource");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFRunLoop", "CFRunLoopRemoveSource", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rl, source, mode)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rl, source, mode);
}
// Autogenerated method: Mono.Net.CFRunLoop.CFRunLoopRunInMode
int Mono::Net::CFRunLoop::CFRunLoopRunInMode(System::IntPtr mode, double seconds, bool returnAfterSourceHandled) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFRunLoop").WithContext("CFRunLoopRunInMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFRunLoop", "CFRunLoopRunInMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mode, seconds, returnAfterSourceHandled)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, mode, seconds, returnAfterSourceHandled);
}
// Autogenerated method: Mono.Net.CFRunLoop.CFRunLoopGetCurrent
System::IntPtr Mono::Net::CFRunLoop::CFRunLoopGetCurrent() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFRunLoop").WithContext("CFRunLoopGetCurrent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFRunLoop", "CFRunLoopGetCurrent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.CFRunLoop.CFRunLoopStop
void Mono::Net::CFRunLoop::CFRunLoopStop(System::IntPtr rl) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFRunLoop").WithContext("CFRunLoopStop");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFRunLoop", "CFRunLoopStop", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rl)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rl);
}
// Autogenerated method: Mono.Net.CFRunLoop.get_CurrentRunLoop
Mono::Net::CFRunLoop* Mono::Net::CFRunLoop::get_CurrentRunLoop() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFRunLoop").WithContext("get_CurrentRunLoop");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFRunLoop", "get_CurrentRunLoop", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Mono::Net::CFRunLoop*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.CFRunLoop.AddSource
void Mono::Net::CFRunLoop::AddSource(System::IntPtr source, Mono::Net::CFString* mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFRunLoop").WithContext("AddSource");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddSource", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(source, mode)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, source, mode);
}
// Autogenerated method: Mono.Net.CFRunLoop.RemoveSource
void Mono::Net::CFRunLoop::RemoveSource(System::IntPtr source, Mono::Net::CFString* mode) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFRunLoop").WithContext("RemoveSource");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RemoveSource", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(source, mode)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, source, mode);
}
// Autogenerated method: Mono.Net.CFRunLoop.RunInMode
int Mono::Net::CFRunLoop::RunInMode(Mono::Net::CFString* mode, double seconds, bool returnAfterSourceHandled) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFRunLoop").WithContext("RunInMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RunInMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(mode, seconds, returnAfterSourceHandled)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, mode, seconds, returnAfterSourceHandled);
}
// Autogenerated method: Mono.Net.CFRunLoop.Stop
void Mono::Net::CFRunLoop::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFRunLoop").WithContext("Stop");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Stop", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFProxyType
#include "Mono/Net/CFProxyType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Net.CFProxyType None
Mono::Net::CFProxyType Mono::Net::CFProxyType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxyType").WithContext("_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Net::CFProxyType>("Mono.Net", "CFProxyType", "None"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.CFProxyType None
void Mono::Net::CFProxyType::_set_None(Mono::Net::CFProxyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxyType").WithContext("_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxyType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.CFProxyType AutoConfigurationUrl
Mono::Net::CFProxyType Mono::Net::CFProxyType::_get_AutoConfigurationUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxyType").WithContext("_get_AutoConfigurationUrl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Net::CFProxyType>("Mono.Net", "CFProxyType", "AutoConfigurationUrl"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.CFProxyType AutoConfigurationUrl
void Mono::Net::CFProxyType::_set_AutoConfigurationUrl(Mono::Net::CFProxyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxyType").WithContext("_set_AutoConfigurationUrl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxyType", "AutoConfigurationUrl", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.CFProxyType AutoConfigurationJavaScript
Mono::Net::CFProxyType Mono::Net::CFProxyType::_get_AutoConfigurationJavaScript() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxyType").WithContext("_get_AutoConfigurationJavaScript");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Net::CFProxyType>("Mono.Net", "CFProxyType", "AutoConfigurationJavaScript"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.CFProxyType AutoConfigurationJavaScript
void Mono::Net::CFProxyType::_set_AutoConfigurationJavaScript(Mono::Net::CFProxyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxyType").WithContext("_set_AutoConfigurationJavaScript");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxyType", "AutoConfigurationJavaScript", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.CFProxyType FTP
Mono::Net::CFProxyType Mono::Net::CFProxyType::_get_FTP() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxyType").WithContext("_get_FTP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Net::CFProxyType>("Mono.Net", "CFProxyType", "FTP"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.CFProxyType FTP
void Mono::Net::CFProxyType::_set_FTP(Mono::Net::CFProxyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxyType").WithContext("_set_FTP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxyType", "FTP", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.CFProxyType HTTP
Mono::Net::CFProxyType Mono::Net::CFProxyType::_get_HTTP() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxyType").WithContext("_get_HTTP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Net::CFProxyType>("Mono.Net", "CFProxyType", "HTTP"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.CFProxyType HTTP
void Mono::Net::CFProxyType::_set_HTTP(Mono::Net::CFProxyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxyType").WithContext("_set_HTTP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxyType", "HTTP", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.CFProxyType HTTPS
Mono::Net::CFProxyType Mono::Net::CFProxyType::_get_HTTPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxyType").WithContext("_get_HTTPS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Net::CFProxyType>("Mono.Net", "CFProxyType", "HTTPS"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.CFProxyType HTTPS
void Mono::Net::CFProxyType::_set_HTTPS(Mono::Net::CFProxyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxyType").WithContext("_set_HTTPS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxyType", "HTTPS", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.CFProxyType SOCKS
Mono::Net::CFProxyType Mono::Net::CFProxyType::_get_SOCKS() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxyType").WithContext("_get_SOCKS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Net::CFProxyType>("Mono.Net", "CFProxyType", "SOCKS"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.CFProxyType SOCKS
void Mono::Net::CFProxyType::_set_SOCKS(Mono::Net::CFProxyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxyType").WithContext("_set_SOCKS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxyType", "SOCKS", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.CFProxy
#include "Mono/Net/CFProxy.hpp"
// Including type: Mono.Net.CFDictionary
#include "Mono/Net/CFDictionary.hpp"
// Including type: Mono.Net.CFProxyType
#include "Mono/Net/CFProxyType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyAutoConfigurationJavaScriptKey
System::IntPtr Mono::Net::CFProxy::_get_kCFProxyAutoConfigurationJavaScriptKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxy").WithContext("_get_kCFProxyAutoConfigurationJavaScriptKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyAutoConfigurationJavaScriptKey"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyAutoConfigurationJavaScriptKey
void Mono::Net::CFProxy::_set_kCFProxyAutoConfigurationJavaScriptKey(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxy").WithContext("_set_kCFProxyAutoConfigurationJavaScriptKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyAutoConfigurationJavaScriptKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyAutoConfigurationURLKey
System::IntPtr Mono::Net::CFProxy::_get_kCFProxyAutoConfigurationURLKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxy").WithContext("_get_kCFProxyAutoConfigurationURLKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyAutoConfigurationURLKey"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyAutoConfigurationURLKey
void Mono::Net::CFProxy::_set_kCFProxyAutoConfigurationURLKey(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxy").WithContext("_set_kCFProxyAutoConfigurationURLKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyAutoConfigurationURLKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyHostNameKey
System::IntPtr Mono::Net::CFProxy::_get_kCFProxyHostNameKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxy").WithContext("_get_kCFProxyHostNameKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyHostNameKey"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyHostNameKey
void Mono::Net::CFProxy::_set_kCFProxyHostNameKey(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxy").WithContext("_set_kCFProxyHostNameKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyHostNameKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyPasswordKey
System::IntPtr Mono::Net::CFProxy::_get_kCFProxyPasswordKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxy").WithContext("_get_kCFProxyPasswordKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyPasswordKey"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyPasswordKey
void Mono::Net::CFProxy::_set_kCFProxyPasswordKey(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxy").WithContext("_set_kCFProxyPasswordKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyPasswordKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyPortNumberKey
System::IntPtr Mono::Net::CFProxy::_get_kCFProxyPortNumberKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxy").WithContext("_get_kCFProxyPortNumberKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyPortNumberKey"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyPortNumberKey
void Mono::Net::CFProxy::_set_kCFProxyPortNumberKey(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxy").WithContext("_set_kCFProxyPortNumberKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyPortNumberKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyTypeKey
System::IntPtr Mono::Net::CFProxy::_get_kCFProxyTypeKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxy").WithContext("_get_kCFProxyTypeKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyTypeKey"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyTypeKey
void Mono::Net::CFProxy::_set_kCFProxyTypeKey(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxy").WithContext("_set_kCFProxyTypeKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyTypeKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyUsernameKey
System::IntPtr Mono::Net::CFProxy::_get_kCFProxyUsernameKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxy").WithContext("_get_kCFProxyUsernameKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyUsernameKey"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyUsernameKey
void Mono::Net::CFProxy::_set_kCFProxyUsernameKey(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxy").WithContext("_set_kCFProxyUsernameKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyUsernameKey", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyTypeAutoConfigurationURL
System::IntPtr Mono::Net::CFProxy::_get_kCFProxyTypeAutoConfigurationURL() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxy").WithContext("_get_kCFProxyTypeAutoConfigurationURL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyTypeAutoConfigurationURL"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyTypeAutoConfigurationURL
void Mono::Net::CFProxy::_set_kCFProxyTypeAutoConfigurationURL(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxy").WithContext("_set_kCFProxyTypeAutoConfigurationURL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyTypeAutoConfigurationURL", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyTypeAutoConfigurationJavaScript
System::IntPtr Mono::Net::CFProxy::_get_kCFProxyTypeAutoConfigurationJavaScript() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxy").WithContext("_get_kCFProxyTypeAutoConfigurationJavaScript");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyTypeAutoConfigurationJavaScript"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyTypeAutoConfigurationJavaScript
void Mono::Net::CFProxy::_set_kCFProxyTypeAutoConfigurationJavaScript(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxy").WithContext("_set_kCFProxyTypeAutoConfigurationJavaScript");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyTypeAutoConfigurationJavaScript", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyTypeFTP
System::IntPtr Mono::Net::CFProxy::_get_kCFProxyTypeFTP() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxy").WithContext("_get_kCFProxyTypeFTP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyTypeFTP"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyTypeFTP
void Mono::Net::CFProxy::_set_kCFProxyTypeFTP(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxy").WithContext("_set_kCFProxyTypeFTP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyTypeFTP", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyTypeHTTP
System::IntPtr Mono::Net::CFProxy::_get_kCFProxyTypeHTTP() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxy").WithContext("_get_kCFProxyTypeHTTP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyTypeHTTP"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyTypeHTTP
void Mono::Net::CFProxy::_set_kCFProxyTypeHTTP(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxy").WithContext("_set_kCFProxyTypeHTTP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyTypeHTTP", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyTypeHTTPS
System::IntPtr Mono::Net::CFProxy::_get_kCFProxyTypeHTTPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxy").WithContext("_get_kCFProxyTypeHTTPS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyTypeHTTPS"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyTypeHTTPS
void Mono::Net::CFProxy::_set_kCFProxyTypeHTTPS(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxy").WithContext("_set_kCFProxyTypeHTTPS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyTypeHTTPS", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFProxyTypeSOCKS
System::IntPtr Mono::Net::CFProxy::_get_kCFProxyTypeSOCKS() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxy").WithContext("_get_kCFProxyTypeSOCKS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFProxy", "kCFProxyTypeSOCKS"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFProxyTypeSOCKS
void Mono::Net::CFProxy::_set_kCFProxyTypeSOCKS(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxy").WithContext("_set_kCFProxyTypeSOCKS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxy", "kCFProxyTypeSOCKS", value));
}
// Autogenerated method: Mono.Net.CFProxy..cctor
void Mono::Net::CFProxy::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxy").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFProxy", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.CFProxy.CFProxyTypeToEnum
Mono::Net::CFProxyType Mono::Net::CFProxy::CFProxyTypeToEnum(System::IntPtr type) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxy").WithContext("CFProxyTypeToEnum");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFProxy", "CFProxyTypeToEnum", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Net::CFProxyType, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, type);
}
// Autogenerated method: Mono.Net.CFProxy.get_AutoConfigurationJavaScript
System::IntPtr Mono::Net::CFProxy::get_AutoConfigurationJavaScript() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxy").WithContext("get_AutoConfigurationJavaScript");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_AutoConfigurationJavaScript", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFProxy.get_AutoConfigurationUrl
System::IntPtr Mono::Net::CFProxy::get_AutoConfigurationUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxy").WithContext("get_AutoConfigurationUrl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_AutoConfigurationUrl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFProxy.get_HostName
::Il2CppString* Mono::Net::CFProxy::get_HostName() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxy").WithContext("get_HostName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_HostName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFProxy.get_Password
::Il2CppString* Mono::Net::CFProxy::get_Password() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxy").WithContext("get_Password");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Password", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFProxy.get_Port
int Mono::Net::CFProxy::get_Port() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxy").WithContext("get_Port");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Port", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFProxy.get_ProxyType
Mono::Net::CFProxyType Mono::Net::CFProxy::get_ProxyType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxy").WithContext("get_ProxyType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ProxyType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Mono::Net::CFProxyType, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFProxy.get_Username
::Il2CppString* Mono::Net::CFProxy::get_Username() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxy").WithContext("get_Username");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Username", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFProxySettings
#include "Mono/Net/CFProxySettings.hpp"
// Including type: Mono.Net.CFDictionary
#include "Mono/Net/CFDictionary.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFNetworkProxiesHTTPEnable
System::IntPtr Mono::Net::CFProxySettings::_get_kCFNetworkProxiesHTTPEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxySettings").WithContext("_get_kCFNetworkProxiesHTTPEnable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFProxySettings", "kCFNetworkProxiesHTTPEnable"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFNetworkProxiesHTTPEnable
void Mono::Net::CFProxySettings::_set_kCFNetworkProxiesHTTPEnable(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxySettings").WithContext("_set_kCFNetworkProxiesHTTPEnable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxySettings", "kCFNetworkProxiesHTTPEnable", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFNetworkProxiesHTTPPort
System::IntPtr Mono::Net::CFProxySettings::_get_kCFNetworkProxiesHTTPPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxySettings").WithContext("_get_kCFNetworkProxiesHTTPPort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFProxySettings", "kCFNetworkProxiesHTTPPort"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFNetworkProxiesHTTPPort
void Mono::Net::CFProxySettings::_set_kCFNetworkProxiesHTTPPort(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxySettings").WithContext("_set_kCFNetworkProxiesHTTPPort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxySettings", "kCFNetworkProxiesHTTPPort", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFNetworkProxiesHTTPProxy
System::IntPtr Mono::Net::CFProxySettings::_get_kCFNetworkProxiesHTTPProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxySettings").WithContext("_get_kCFNetworkProxiesHTTPProxy");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFProxySettings", "kCFNetworkProxiesHTTPProxy"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFNetworkProxiesHTTPProxy
void Mono::Net::CFProxySettings::_set_kCFNetworkProxiesHTTPProxy(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxySettings").WithContext("_set_kCFNetworkProxiesHTTPProxy");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxySettings", "kCFNetworkProxiesHTTPProxy", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFNetworkProxiesProxyAutoConfigEnable
System::IntPtr Mono::Net::CFProxySettings::_get_kCFNetworkProxiesProxyAutoConfigEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxySettings").WithContext("_get_kCFNetworkProxiesProxyAutoConfigEnable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFProxySettings", "kCFNetworkProxiesProxyAutoConfigEnable"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFNetworkProxiesProxyAutoConfigEnable
void Mono::Net::CFProxySettings::_set_kCFNetworkProxiesProxyAutoConfigEnable(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxySettings").WithContext("_set_kCFNetworkProxiesProxyAutoConfigEnable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxySettings", "kCFNetworkProxiesProxyAutoConfigEnable", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFNetworkProxiesProxyAutoConfigJavaScript
System::IntPtr Mono::Net::CFProxySettings::_get_kCFNetworkProxiesProxyAutoConfigJavaScript() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxySettings").WithContext("_get_kCFNetworkProxiesProxyAutoConfigJavaScript");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFProxySettings", "kCFNetworkProxiesProxyAutoConfigJavaScript"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFNetworkProxiesProxyAutoConfigJavaScript
void Mono::Net::CFProxySettings::_set_kCFNetworkProxiesProxyAutoConfigJavaScript(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxySettings").WithContext("_set_kCFNetworkProxiesProxyAutoConfigJavaScript");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxySettings", "kCFNetworkProxiesProxyAutoConfigJavaScript", value));
}
// Autogenerated static field getter
// Get static field: static private System.IntPtr kCFNetworkProxiesProxyAutoConfigURLString
System::IntPtr Mono::Net::CFProxySettings::_get_kCFNetworkProxiesProxyAutoConfigURLString() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxySettings").WithContext("_get_kCFNetworkProxiesProxyAutoConfigURLString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::IntPtr>("Mono.Net", "CFProxySettings", "kCFNetworkProxiesProxyAutoConfigURLString"));
}
// Autogenerated static field setter
// Set static field: static private System.IntPtr kCFNetworkProxiesProxyAutoConfigURLString
void Mono::Net::CFProxySettings::_set_kCFNetworkProxiesProxyAutoConfigURLString(System::IntPtr value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxySettings").WithContext("_set_kCFNetworkProxiesProxyAutoConfigURLString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFProxySettings", "kCFNetworkProxiesProxyAutoConfigURLString", value));
}
// Autogenerated method: Mono.Net.CFProxySettings..cctor
void Mono::Net::CFProxySettings::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxySettings").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFProxySettings", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.CFProxySettings.get_Dictionary
Mono::Net::CFDictionary* Mono::Net::CFProxySettings::get_Dictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxySettings").WithContext("get_Dictionary");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Dictionary", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Mono::Net::CFDictionary*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.CFNetwork
#include "Mono/Net/CFNetwork.hpp"
// Including type: Mono.Net.CFNetwork/GetProxyData
#include "Mono/Net/CFNetwork_GetProxyData.hpp"
// Including type: Mono.Net.CFNetwork/CFProxyAutoConfigurationResultCallback
#include "Mono/Net/CFNetwork_CFProxyAutoConfigurationResultCallback.hpp"
// Including type: Mono.Net.CFNetwork/CFWebProxy
#include "Mono/Net/CFNetwork_CFWebProxy.hpp"
// Including type: Mono.Net.CFNetwork/<>c__DisplayClass13_0
#include "Mono/Net/CFNetwork_--c__DisplayClass13_0.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: System.Threading.AutoResetEvent
#include "System/Threading/AutoResetEvent.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
// Including type: Mono.Net.CFStreamClientContext
#include "Mono/Net/CFStreamClientContext.hpp"
// Including type: Mono.Net.CFArray
#include "Mono/Net/CFArray.hpp"
// Including type: Mono.Net.CFUrl
#include "Mono/Net/CFUrl.hpp"
// Including type: Mono.Net.CFProxy
#include "Mono/Net/CFProxy.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: Mono.Net.CFDictionary
#include "Mono/Net/CFDictionary.hpp"
// Including type: Mono.Net.CFProxySettings
#include "Mono/Net/CFProxySettings.hpp"
// Including type: System.Net.IWebProxy
#include "System/Net/IWebProxy.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Object lock_obj
::Il2CppObject* Mono::Net::CFNetwork::_get_lock_obj() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFNetwork").WithContext("_get_lock_obj");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Mono.Net", "CFNetwork", "lock_obj"));
}
// Autogenerated static field setter
// Set static field: static private System.Object lock_obj
void Mono::Net::CFNetwork::_set_lock_obj(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFNetwork").WithContext("_set_lock_obj");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFNetwork", "lock_obj", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Queue`1<Mono.Net.CFNetwork/GetProxyData> get_proxy_queue
System::Collections::Generic::Queue_1<Mono::Net::CFNetwork::GetProxyData*>* Mono::Net::CFNetwork::_get_get_proxy_queue() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFNetwork").WithContext("_get_get_proxy_queue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Collections::Generic::Queue_1<Mono::Net::CFNetwork::GetProxyData*>*>("Mono.Net", "CFNetwork", "get_proxy_queue"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Queue`1<Mono.Net.CFNetwork/GetProxyData> get_proxy_queue
void Mono::Net::CFNetwork::_set_get_proxy_queue(System::Collections::Generic::Queue_1<Mono::Net::CFNetwork::GetProxyData*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFNetwork").WithContext("_set_get_proxy_queue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFNetwork", "get_proxy_queue", value));
}
// Autogenerated static field getter
// Get static field: static private System.Threading.AutoResetEvent proxy_event
System::Threading::AutoResetEvent* Mono::Net::CFNetwork::_get_proxy_event() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFNetwork").WithContext("_get_proxy_event");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Threading::AutoResetEvent*>("Mono.Net", "CFNetwork", "proxy_event"));
}
// Autogenerated static field setter
// Set static field: static private System.Threading.AutoResetEvent proxy_event
void Mono::Net::CFNetwork::_set_proxy_event(System::Threading::AutoResetEvent* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFNetwork").WithContext("_set_proxy_event");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net", "CFNetwork", "proxy_event", value));
}
// Autogenerated method: Mono.Net.CFNetwork.CFNetworkCopyProxiesForAutoConfigurationScriptSequential
System::IntPtr Mono::Net::CFNetwork::CFNetworkCopyProxiesForAutoConfigurationScriptSequential(System::IntPtr proxyAutoConfigurationScript, System::IntPtr targetURL, System::IntPtr& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFNetwork").WithContext("CFNetworkCopyProxiesForAutoConfigurationScriptSequential");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "CFNetworkCopyProxiesForAutoConfigurationScriptSequential", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(proxyAutoConfigurationScript, targetURL, error)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, proxyAutoConfigurationScript, targetURL, error);
}
// Autogenerated method: Mono.Net.CFNetwork.CFNetworkExecuteProxyAutoConfigurationURL
System::IntPtr Mono::Net::CFNetwork::CFNetworkExecuteProxyAutoConfigurationURL(System::IntPtr proxyAutoConfigURL, System::IntPtr targetURL, Mono::Net::CFNetwork::CFProxyAutoConfigurationResultCallback* cb, Mono::Net::CFStreamClientContext& clientContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFNetwork").WithContext("CFNetworkExecuteProxyAutoConfigurationURL");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "CFNetworkExecuteProxyAutoConfigurationURL", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(proxyAutoConfigURL, targetURL, cb, clientContext)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, proxyAutoConfigURL, targetURL, cb, clientContext);
}
// Autogenerated method: Mono.Net.CFNetwork.CFNetworkCopyProxiesForAutoConfigurationScriptThread
void Mono::Net::CFNetwork::CFNetworkCopyProxiesForAutoConfigurationScriptThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFNetwork").WithContext("CFNetworkCopyProxiesForAutoConfigurationScriptThread");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "CFNetworkCopyProxiesForAutoConfigurationScriptThread", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.CFNetwork.CFNetworkCopyProxiesForAutoConfigurationScript
System::IntPtr Mono::Net::CFNetwork::CFNetworkCopyProxiesForAutoConfigurationScript(System::IntPtr proxyAutoConfigurationScript, System::IntPtr targetURL, System::IntPtr& error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFNetwork").WithContext("CFNetworkCopyProxiesForAutoConfigurationScript");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "CFNetworkCopyProxiesForAutoConfigurationScript", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(proxyAutoConfigurationScript, targetURL, error)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, proxyAutoConfigurationScript, targetURL, error);
}
// Autogenerated method: Mono.Net.CFNetwork.CopyProxiesForAutoConfigurationScript
Mono::Net::CFArray* Mono::Net::CFNetwork::CopyProxiesForAutoConfigurationScript(System::IntPtr proxyAutoConfigurationScript, Mono::Net::CFUrl* targetURL) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFNetwork").WithContext("CopyProxiesForAutoConfigurationScript");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "CopyProxiesForAutoConfigurationScript", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(proxyAutoConfigurationScript, targetURL)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Net::CFArray*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, proxyAutoConfigurationScript, targetURL);
}
// Autogenerated method: Mono.Net.CFNetwork.GetProxiesForAutoConfigurationScript
::Array<Mono::Net::CFProxy*>* Mono::Net::CFNetwork::GetProxiesForAutoConfigurationScript(System::IntPtr proxyAutoConfigurationScript, Mono::Net::CFUrl* targetURL) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFNetwork").WithContext("GetProxiesForAutoConfigurationScript");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "GetProxiesForAutoConfigurationScript", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(proxyAutoConfigurationScript, targetURL)));
  return ::il2cpp_utils::RunMethodThrow<::Array<Mono::Net::CFProxy*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, proxyAutoConfigurationScript, targetURL);
}
// Autogenerated method: Mono.Net.CFNetwork.GetProxiesForAutoConfigurationScript
::Array<Mono::Net::CFProxy*>* Mono::Net::CFNetwork::GetProxiesForAutoConfigurationScript(System::IntPtr proxyAutoConfigurationScript, System::Uri* targetUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFNetwork").WithContext("GetProxiesForAutoConfigurationScript");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "GetProxiesForAutoConfigurationScript", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(proxyAutoConfigurationScript, targetUri)));
  return ::il2cpp_utils::RunMethodThrow<::Array<Mono::Net::CFProxy*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, proxyAutoConfigurationScript, targetUri);
}
// Autogenerated method: Mono.Net.CFNetwork.ExecuteProxyAutoConfigurationURL
::Array<Mono::Net::CFProxy*>* Mono::Net::CFNetwork::ExecuteProxyAutoConfigurationURL(System::IntPtr proxyAutoConfigURL, System::Uri* targetURL) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFNetwork").WithContext("ExecuteProxyAutoConfigurationURL");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "ExecuteProxyAutoConfigurationURL", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(proxyAutoConfigURL, targetURL)));
  return ::il2cpp_utils::RunMethodThrow<::Array<Mono::Net::CFProxy*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, proxyAutoConfigURL, targetURL);
}
// Autogenerated method: Mono.Net.CFNetwork.CFNetworkCopyProxiesForURL
System::IntPtr Mono::Net::CFNetwork::CFNetworkCopyProxiesForURL(System::IntPtr url, System::IntPtr proxySettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFNetwork").WithContext("CFNetworkCopyProxiesForURL");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "CFNetworkCopyProxiesForURL", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(url, proxySettings)));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, url, proxySettings);
}
// Autogenerated method: Mono.Net.CFNetwork.CopyProxiesForURL
Mono::Net::CFArray* Mono::Net::CFNetwork::CopyProxiesForURL(Mono::Net::CFUrl* url, Mono::Net::CFDictionary* proxySettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFNetwork").WithContext("CopyProxiesForURL");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "CopyProxiesForURL", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(url, proxySettings)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Net::CFArray*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, url, proxySettings);
}
// Autogenerated method: Mono.Net.CFNetwork.GetProxiesForURL
::Array<Mono::Net::CFProxy*>* Mono::Net::CFNetwork::GetProxiesForURL(Mono::Net::CFUrl* url, Mono::Net::CFProxySettings* proxySettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFNetwork").WithContext("GetProxiesForURL");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "GetProxiesForURL", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(url, proxySettings)));
  return ::il2cpp_utils::RunMethodThrow<::Array<Mono::Net::CFProxy*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, url, proxySettings);
}
// Autogenerated method: Mono.Net.CFNetwork.GetProxiesForUri
::Array<Mono::Net::CFProxy*>* Mono::Net::CFNetwork::GetProxiesForUri(System::Uri* uri, Mono::Net::CFProxySettings* proxySettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFNetwork").WithContext("GetProxiesForUri");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "GetProxiesForUri", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uri, proxySettings)));
  return ::il2cpp_utils::RunMethodThrow<::Array<Mono::Net::CFProxy*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, uri, proxySettings);
}
// Autogenerated method: Mono.Net.CFNetwork.CFNetworkCopySystemProxySettings
System::IntPtr Mono::Net::CFNetwork::CFNetworkCopySystemProxySettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFNetwork").WithContext("CFNetworkCopySystemProxySettings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "CFNetworkCopySystemProxySettings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.CFNetwork.GetSystemProxySettings
Mono::Net::CFProxySettings* Mono::Net::CFNetwork::GetSystemProxySettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFNetwork").WithContext("GetSystemProxySettings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "GetSystemProxySettings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Mono::Net::CFProxySettings*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.CFNetwork.GetDefaultProxy
System::Net::IWebProxy* Mono::Net::CFNetwork::GetDefaultProxy() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFNetwork").WithContext("GetDefaultProxy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", "GetDefaultProxy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Net::IWebProxy*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.CFNetwork..cctor
void Mono::Net::CFNetwork::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFNetwork").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.CFNetwork/GetProxyData
#include "Mono/Net/CFNetwork_GetProxyData.hpp"
// Including type: System.Threading.ManualResetEvent
#include "System/Threading/ManualResetEvent.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.CFNetwork/GetProxyData.Dispose
void Mono::Net::CFNetwork::GetProxyData::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("GetProxyData").WithContext("Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
void Mono::Net::CFNetwork::GetProxyData::System_IDisposable_Dispose() {
  Mono::Net::CFNetwork::GetProxyData::Dispose();
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.CFNetwork/CFProxyAutoConfigurationResultCallback
#include "Mono/Net/CFNetwork_CFProxyAutoConfigurationResultCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.CFNetwork/CFProxyAutoConfigurationResultCallback.Invoke
void Mono::Net::CFNetwork::CFProxyAutoConfigurationResultCallback::Invoke(System::IntPtr client, System::IntPtr proxyList, System::IntPtr error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxyAutoConfigurationResultCallback").WithContext("Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(client, proxyList, error)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, client, proxyList, error);
}
// Autogenerated method: Mono.Net.CFNetwork/CFProxyAutoConfigurationResultCallback.BeginInvoke
System::IAsyncResult* Mono::Net::CFNetwork::CFProxyAutoConfigurationResultCallback::BeginInvoke(System::IntPtr client, System::IntPtr proxyList, System::IntPtr error, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxyAutoConfigurationResultCallback").WithContext("BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(client, proxyList, error, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, client, proxyList, error, callback, object);
}
// Autogenerated method: Mono.Net.CFNetwork/CFProxyAutoConfigurationResultCallback.EndInvoke
void Mono::Net::CFNetwork::CFProxyAutoConfigurationResultCallback::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFProxyAutoConfigurationResultCallback").WithContext("EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.CFNetwork/CFWebProxy
#include "Mono/Net/CFNetwork_CFWebProxy.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: Mono.Net.CFProxy
#include "Mono/Net/CFProxy.hpp"
// Including type: System.Net.NetworkCredential
#include "System/Net/NetworkCredential.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.CFNetwork/CFWebProxy.GetProxyUri
System::Uri* Mono::Net::CFNetwork::CFWebProxy::GetProxyUri(Mono::Net::CFProxy* proxy, System::Net::NetworkCredential*& credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFWebProxy").WithContext("GetProxyUri");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork/CFWebProxy", "GetProxyUri", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(proxy, credentials)));
  return ::il2cpp_utils::RunMethodThrow<System::Uri*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, proxy, credentials);
}
// Autogenerated method: Mono.Net.CFNetwork/CFWebProxy.GetProxyUriFromScript
System::Uri* Mono::Net::CFNetwork::CFWebProxy::GetProxyUriFromScript(System::IntPtr script, System::Uri* targetUri, System::Net::NetworkCredential*& credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFWebProxy").WithContext("GetProxyUriFromScript");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork/CFWebProxy", "GetProxyUriFromScript", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(script, targetUri, credentials)));
  return ::il2cpp_utils::RunMethodThrow<System::Uri*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, script, targetUri, credentials);
}
// Autogenerated method: Mono.Net.CFNetwork/CFWebProxy.ExecuteProxyAutoConfigurationURL
System::Uri* Mono::Net::CFNetwork::CFWebProxy::ExecuteProxyAutoConfigurationURL(System::IntPtr proxyAutoConfigURL, System::Uri* targetUri, System::Net::NetworkCredential*& credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFWebProxy").WithContext("ExecuteProxyAutoConfigurationURL");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork/CFWebProxy", "ExecuteProxyAutoConfigurationURL", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(proxyAutoConfigURL, targetUri, credentials)));
  return ::il2cpp_utils::RunMethodThrow<System::Uri*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, proxyAutoConfigURL, targetUri, credentials);
}
// Autogenerated method: Mono.Net.CFNetwork/CFWebProxy.SelectProxy
System::Uri* Mono::Net::CFNetwork::CFWebProxy::SelectProxy(::Array<Mono::Net::CFProxy*>* proxies, System::Uri* targetUri, System::Net::NetworkCredential*& credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFWebProxy").WithContext("SelectProxy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net", "CFNetwork/CFWebProxy", "SelectProxy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(proxies, targetUri, credentials)));
  return ::il2cpp_utils::RunMethodThrow<System::Uri*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, proxies, targetUri, credentials);
}
// Autogenerated method: Mono.Net.CFNetwork/CFWebProxy.get_Credentials
System::Net::ICredentials* Mono::Net::CFNetwork::CFWebProxy::get_Credentials() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFWebProxy").WithContext("get_Credentials");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Credentials", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Net::ICredentials*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.CFNetwork/CFWebProxy.GetProxy
System::Uri* Mono::Net::CFNetwork::CFWebProxy::GetProxy(System::Uri* targetUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFWebProxy").WithContext("GetProxy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetProxy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(targetUri)));
  return ::il2cpp_utils::RunMethodThrow<System::Uri*, false>(this, ___internal__method, targetUri);
}
// Autogenerated method: Mono.Net.CFNetwork/CFWebProxy.IsBypassed
bool Mono::Net::CFNetwork::CFWebProxy::IsBypassed(System::Uri* targetUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("CFWebProxy").WithContext("IsBypassed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsBypassed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(targetUri)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, targetUri);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.CFNetwork/<>c__DisplayClass13_0
#include "Mono/Net/CFNetwork_--c__DisplayClass13_0.hpp"
// Including type: Mono.Net.CFProxy
#include "Mono/Net/CFProxy.hpp"
// Including type: Mono.Net.CFRunLoop
#include "Mono/Net/CFRunLoop.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.CFNetwork/<>c__DisplayClass13_0.<ExecuteProxyAutoConfigurationURL>b__0
void Mono::Net::CFNetwork::$$c__DisplayClass13_0::$ExecuteProxyAutoConfigurationURL$b__0(System::IntPtr client, System::IntPtr proxyList, System::IntPtr error) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net").WithContext("$$c__DisplayClass13_0").WithContext("<ExecuteProxyAutoConfigurationURL>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ExecuteProxyAutoConfigurationURL>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(client, proxyList, error))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, client, proxyList, error);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.BufferOffsetSize
#include "Mono/Net/Security/BufferOffsetSize.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.BufferOffsetSize.get_EndOffset
int Mono::Net::Security::BufferOffsetSize::get_EndOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("BufferOffsetSize").WithContext("get_EndOffset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_EndOffset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.BufferOffsetSize.get_Remaining
int Mono::Net::Security::BufferOffsetSize::get_Remaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("BufferOffsetSize").WithContext("get_Remaining");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Remaining", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.BufferOffsetSize.ToString
::Il2CppString* Mono::Net::Security::BufferOffsetSize::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("BufferOffsetSize").WithContext("ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.BufferOffsetSize2
#include "Mono/Net/Security/BufferOffsetSize2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.BufferOffsetSize2.Reset
void Mono::Net::Security::BufferOffsetSize2::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("BufferOffsetSize2").WithContext("Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.BufferOffsetSize2.MakeRoom
void Mono::Net::Security::BufferOffsetSize2::MakeRoom(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("BufferOffsetSize2").WithContext("MakeRoom");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MakeRoom", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(size)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, size);
}
// Autogenerated method: Mono.Net.Security.BufferOffsetSize2.AppendData
void Mono::Net::Security::BufferOffsetSize2::AppendData(::Array<uint8_t>* buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("BufferOffsetSize2").WithContext("AppendData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AppendData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, offset, size)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.AsyncOperationStatus
#include "Mono/Net/Security/AsyncOperationStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Net.Security.AsyncOperationStatus Initialize
Mono::Net::Security::AsyncOperationStatus Mono::Net::Security::AsyncOperationStatus::_get_Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("AsyncOperationStatus").WithContext("_get_Initialize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Net::Security::AsyncOperationStatus>("Mono.Net.Security", "AsyncOperationStatus", "Initialize"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.Security.AsyncOperationStatus Initialize
void Mono::Net::Security::AsyncOperationStatus::_set_Initialize(Mono::Net::Security::AsyncOperationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("AsyncOperationStatus").WithContext("_set_Initialize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "AsyncOperationStatus", "Initialize", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.Security.AsyncOperationStatus Continue
Mono::Net::Security::AsyncOperationStatus Mono::Net::Security::AsyncOperationStatus::_get_Continue() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("AsyncOperationStatus").WithContext("_get_Continue");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Net::Security::AsyncOperationStatus>("Mono.Net.Security", "AsyncOperationStatus", "Continue"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.Security.AsyncOperationStatus Continue
void Mono::Net::Security::AsyncOperationStatus::_set_Continue(Mono::Net::Security::AsyncOperationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("AsyncOperationStatus").WithContext("_set_Continue");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "AsyncOperationStatus", "Continue", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.Security.AsyncOperationStatus ReadDone
Mono::Net::Security::AsyncOperationStatus Mono::Net::Security::AsyncOperationStatus::_get_ReadDone() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("AsyncOperationStatus").WithContext("_get_ReadDone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Net::Security::AsyncOperationStatus>("Mono.Net.Security", "AsyncOperationStatus", "ReadDone"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.Security.AsyncOperationStatus ReadDone
void Mono::Net::Security::AsyncOperationStatus::_set_ReadDone(Mono::Net::Security::AsyncOperationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("AsyncOperationStatus").WithContext("_set_ReadDone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "AsyncOperationStatus", "ReadDone", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.Security.AsyncOperationStatus Complete
Mono::Net::Security::AsyncOperationStatus Mono::Net::Security::AsyncOperationStatus::_get_Complete() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("AsyncOperationStatus").WithContext("_get_Complete");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Net::Security::AsyncOperationStatus>("Mono.Net.Security", "AsyncOperationStatus", "Complete"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.Security.AsyncOperationStatus Complete
void Mono::Net::Security::AsyncOperationStatus::_set_Complete(Mono::Net::Security::AsyncOperationStatus value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("AsyncOperationStatus").WithContext("_set_Complete");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "AsyncOperationStatus", "Complete", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.AsyncProtocolResult
#include "Mono/Net/Security/AsyncProtocolResult.hpp"
// Including type: System.Runtime.ExceptionServices.ExceptionDispatchInfo
#include "System/Runtime/ExceptionServices/ExceptionDispatchInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.AsyncProtocolResult.get_UserResult
int Mono::Net::Security::AsyncProtocolResult::get_UserResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("AsyncProtocolResult").WithContext("get_UserResult");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_UserResult", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolResult.get_Error
System::Runtime::ExceptionServices::ExceptionDispatchInfo* Mono::Net::Security::AsyncProtocolResult::get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("AsyncProtocolResult").WithContext("get_Error");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Error", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::ExceptionServices::ExceptionDispatchInfo*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.AsyncProtocolRequest
#include "Mono/Net/Security/AsyncProtocolRequest.hpp"
// Including type: Mono.Net.Security.AsyncProtocolRequest/<StartOperation>d__23
#include "Mono/Net/Security/AsyncProtocolRequest_-StartOperation-d__23.hpp"
// Including type: Mono.Net.Security.AsyncProtocolRequest/<ProcessOperation>d__24
#include "Mono/Net/Security/AsyncProtocolRequest_-ProcessOperation-d__24.hpp"
// Including type: Mono.Net.Security.AsyncProtocolRequest/<InnerRead>d__25
#include "Mono/Net/Security/AsyncProtocolRequest_-InnerRead-d__25.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream
#include "Mono/Net/Security/MobileAuthenticatedStream.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: Mono.Net.Security.AsyncProtocolResult
#include "Mono/Net/Security/AsyncProtocolResult.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: Mono.Net.Security.AsyncOperationStatus
#include "Mono/Net/Security/AsyncOperationStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.get_Parent
Mono::Net::Security::MobileAuthenticatedStream* Mono::Net::Security::AsyncProtocolRequest::get_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("AsyncProtocolRequest").WithContext("get_Parent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Parent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Mono::Net::Security::MobileAuthenticatedStream*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.get_RunSynchronously
bool Mono::Net::Security::AsyncProtocolRequest::get_RunSynchronously() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("AsyncProtocolRequest").WithContext("get_RunSynchronously");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_RunSynchronously", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.get_Name
::Il2CppString* Mono::Net::Security::AsyncProtocolRequest::get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("AsyncProtocolRequest").WithContext("get_Name");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Name", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.get_UserResult
int Mono::Net::Security::AsyncProtocolRequest::get_UserResult() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("AsyncProtocolRequest").WithContext("get_UserResult");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_UserResult", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.set_UserResult
void Mono::Net::Security::AsyncProtocolRequest::set_UserResult(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("AsyncProtocolRequest").WithContext("set_UserResult");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_UserResult", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.RequestRead
void Mono::Net::Security::AsyncProtocolRequest::RequestRead(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("AsyncProtocolRequest").WithContext("RequestRead");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RequestRead", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(size)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, size);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.RequestWrite
void Mono::Net::Security::AsyncProtocolRequest::RequestWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("AsyncProtocolRequest").WithContext("RequestWrite");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RequestWrite", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.StartOperation
System::Threading::Tasks::Task_1<Mono::Net::Security::AsyncProtocolResult*>* Mono::Net::Security::AsyncProtocolRequest::StartOperation(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("AsyncProtocolRequest").WithContext("StartOperation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartOperation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<Mono::Net::Security::AsyncProtocolResult*>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.ProcessOperation
System::Threading::Tasks::Task* Mono::Net::Security::AsyncProtocolRequest::ProcessOperation(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("AsyncProtocolRequest").WithContext("ProcessOperation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessOperation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.InnerRead
System::Threading::Tasks::Task_1<System::Nullable_1<int>>* Mono::Net::Security::AsyncProtocolRequest::InnerRead(System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("AsyncProtocolRequest").WithContext("InnerRead");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InnerRead", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<System::Nullable_1<int>>*, false>(this, ___internal__method, cancellationToken);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.Run
Mono::Net::Security::AsyncOperationStatus Mono::Net::Security::AsyncProtocolRequest::Run(Mono::Net::Security::AsyncOperationStatus status) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("AsyncProtocolRequest").WithContext("Run");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(status)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Net::Security::AsyncOperationStatus, false>(this, ___internal__method, status);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest.ToString
::Il2CppString* Mono::Net::Security::AsyncProtocolRequest::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("AsyncProtocolRequest").WithContext("ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.AsyncProtocolRequest/<StartOperation>d__23
#include "Mono/Net/Security/AsyncProtocolRequest_-StartOperation-d__23.hpp"
// Including type: Mono.Net.Security.AsyncProtocolResult
#include "Mono/Net/Security/AsyncProtocolResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest/<StartOperation>d__23.MoveNext
void Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("$StartOperation$d__23").WithContext("MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest/<StartOperation>d__23.SetStateMachine
void Mono::Net::Security::AsyncProtocolRequest::$StartOperation$d__23::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("$StartOperation$d__23").WithContext("SetStateMachine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateMachine)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.AsyncProtocolRequest/<ProcessOperation>d__24
#include "Mono/Net/Security/AsyncProtocolRequest_-ProcessOperation-d__24.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest/<ProcessOperation>d__24.MoveNext
void Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("$ProcessOperation$d__24").WithContext("MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest/<ProcessOperation>d__24.SetStateMachine
void Mono::Net::Security::AsyncProtocolRequest::$ProcessOperation$d__24::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("$ProcessOperation$d__24").WithContext("SetStateMachine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateMachine)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.AsyncProtocolRequest/<InnerRead>d__25
#include "Mono/Net/Security/AsyncProtocolRequest_-InnerRead-d__25.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest/<InnerRead>d__25.MoveNext
void Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("$InnerRead$d__25").WithContext("MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncProtocolRequest/<InnerRead>d__25.SetStateMachine
void Mono::Net::Security::AsyncProtocolRequest::$InnerRead$d__25::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("$InnerRead$d__25").WithContext("SetStateMachine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateMachine)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.AsyncHandshakeRequest
#include "Mono/Net/Security/AsyncHandshakeRequest.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream
#include "Mono/Net/Security/MobileAuthenticatedStream.hpp"
// Including type: Mono.Net.Security.AsyncOperationStatus
#include "Mono/Net/Security/AsyncOperationStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.AsyncHandshakeRequest.Run
Mono::Net::Security::AsyncOperationStatus Mono::Net::Security::AsyncHandshakeRequest::Run(Mono::Net::Security::AsyncOperationStatus status) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("AsyncHandshakeRequest").WithContext("Run");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(status)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Net::Security::AsyncOperationStatus, false>(this, ___internal__method, status);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.AsyncReadOrWriteRequest
#include "Mono/Net/Security/AsyncReadOrWriteRequest.hpp"
// Including type: Mono.Net.Security.BufferOffsetSize
#include "Mono/Net/Security/BufferOffsetSize.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream
#include "Mono/Net/Security/MobileAuthenticatedStream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.AsyncReadOrWriteRequest.get_UserBuffer
Mono::Net::Security::BufferOffsetSize* Mono::Net::Security::AsyncReadOrWriteRequest::get_UserBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("AsyncReadOrWriteRequest").WithContext("get_UserBuffer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_UserBuffer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Mono::Net::Security::BufferOffsetSize*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncReadOrWriteRequest.get_CurrentSize
int Mono::Net::Security::AsyncReadOrWriteRequest::get_CurrentSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("AsyncReadOrWriteRequest").WithContext("get_CurrentSize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CurrentSize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.AsyncReadOrWriteRequest.set_CurrentSize
void Mono::Net::Security::AsyncReadOrWriteRequest::set_CurrentSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("AsyncReadOrWriteRequest").WithContext("set_CurrentSize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_CurrentSize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Net.Security.AsyncReadOrWriteRequest.ToString
::Il2CppString* Mono::Net::Security::AsyncReadOrWriteRequest::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("AsyncReadOrWriteRequest").WithContext("ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.AsyncReadRequest
#include "Mono/Net/Security/AsyncReadRequest.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream
#include "Mono/Net/Security/MobileAuthenticatedStream.hpp"
// Including type: Mono.Net.Security.AsyncOperationStatus
#include "Mono/Net/Security/AsyncOperationStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.AsyncReadRequest.Run
Mono::Net::Security::AsyncOperationStatus Mono::Net::Security::AsyncReadRequest::Run(Mono::Net::Security::AsyncOperationStatus status) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("AsyncReadRequest").WithContext("Run");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(status)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Net::Security::AsyncOperationStatus, false>(this, ___internal__method, status);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.AsyncWriteRequest
#include "Mono/Net/Security/AsyncWriteRequest.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream
#include "Mono/Net/Security/MobileAuthenticatedStream.hpp"
// Including type: Mono.Net.Security.AsyncOperationStatus
#include "Mono/Net/Security/AsyncOperationStatus.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.AsyncWriteRequest.Run
Mono::Net::Security::AsyncOperationStatus Mono::Net::Security::AsyncWriteRequest::Run(Mono::Net::Security::AsyncOperationStatus status) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("AsyncWriteRequest").WithContext("Run");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Run", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(status)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Net::Security::AsyncOperationStatus, false>(this, ___internal__method, status);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.ServerCertValidationCallbackWrapper
#include "Mono/Net/Security/ServerCertValidationCallbackWrapper.hpp"
// Including type: System.Net.ServerCertValidationCallback
#include "System/Net/ServerCertValidationCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
// Including type: Mono.Security.Interface.MonoSslPolicyErrors
#include "Mono/Security/Interface/MonoSslPolicyErrors.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.ServerCertValidationCallbackWrapper.Invoke
bool Mono::Net::Security::ServerCertValidationCallbackWrapper::Invoke(System::Net::ServerCertValidationCallback* callback, System::Security::Cryptography::X509Certificates::X509Certificate* certificate, System::Security::Cryptography::X509Certificates::X509Chain* chain, Mono::Security::Interface::MonoSslPolicyErrors sslPolicyErrors) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("ServerCertValidationCallbackWrapper").WithContext("Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callback, certificate, chain, sslPolicyErrors)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, callback, certificate, chain, sslPolicyErrors);
}
// Autogenerated method: Mono.Net.Security.ServerCertValidationCallbackWrapper.BeginInvoke
System::IAsyncResult* Mono::Net::Security::ServerCertValidationCallbackWrapper::BeginInvoke(System::Net::ServerCertValidationCallback* callback, System::Security::Cryptography::X509Certificates::X509Certificate* certificate, System::Security::Cryptography::X509Certificates::X509Chain* chain, Mono::Security::Interface::MonoSslPolicyErrors sslPolicyErrors, System::AsyncCallback* __callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("ServerCertValidationCallbackWrapper").WithContext("BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callback, certificate, chain, sslPolicyErrors, __callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, callback, certificate, chain, sslPolicyErrors, __callback, object);
}
// Autogenerated method: Mono.Net.Security.ServerCertValidationCallbackWrapper.EndInvoke
bool Mono::Net::Security::ServerCertValidationCallbackWrapper::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("ServerCertValidationCallbackWrapper").WithContext("EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.ChainValidationHelper
#include "Mono/Net/Security/ChainValidationHelper.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
// Including type: Mono.Security.Interface.MonoTlsProvider
#include "Mono/Security/Interface/MonoTlsProvider.hpp"
// Including type: System.Net.ServerCertValidationCallback
#include "System/Net/ServerCertValidationCallback.hpp"
// Including type: System.Net.Security.LocalCertSelectionCallback
#include "System/Net/Security/LocalCertSelectionCallback.hpp"
// Including type: Mono.Net.Security.ServerCertValidationCallbackWrapper
#include "Mono/Net/Security/ServerCertValidationCallbackWrapper.hpp"
// Including type: Mono.Net.Security.MonoTlsStream
#include "Mono/Net/Security/MonoTlsStream.hpp"
// Including type: System.Net.HttpWebRequest
#include "System/Net/HttpWebRequest.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: Mono.Security.Interface.ValidationResult
#include "Mono/Security/Interface/ValidationResult.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
// Including type: System.Net.Security.SslPolicyErrors
#include "System/Net/Security/SslPolicyErrors.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.ChainValidationHelper.GetInternalValidator
Mono::Security::Interface::ICertificateValidator* Mono::Net::Security::ChainValidationHelper::GetInternalValidator(Mono::Security::Interface::MonoTlsProvider* provider, Mono::Security::Interface::MonoTlsSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("ChainValidationHelper").WithContext("GetInternalValidator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net.Security", "ChainValidationHelper", "GetInternalValidator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider, settings)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::ICertificateValidator*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, provider, settings);
}
// Autogenerated method: Mono.Net.Security.ChainValidationHelper.Create
Mono::Net::Security::ChainValidationHelper* Mono::Net::Security::ChainValidationHelper::Create(Mono::Security::Interface::MonoTlsProvider* provider, Mono::Security::Interface::MonoTlsSettings*& settings, Mono::Net::Security::MonoTlsStream* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("ChainValidationHelper").WithContext("Create");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net.Security", "ChainValidationHelper", "Create", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider, settings, stream)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Net::Security::ChainValidationHelper*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, provider, settings, stream);
}
// Autogenerated method: Mono.Net.Security.ChainValidationHelper.DefaultSelectionCallback
System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Net::Security::ChainValidationHelper::DefaultSelectionCallback(::Il2CppString* targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection* localCertificates, System::Security::Cryptography::X509Certificates::X509Certificate* remoteCertificate, ::Array<::Il2CppString*>* acceptableIssuers) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("ChainValidationHelper").WithContext("DefaultSelectionCallback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net.Security", "ChainValidationHelper", "DefaultSelectionCallback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(targetHost, localCertificates, remoteCertificate, acceptableIssuers)));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::X509Certificates::X509Certificate*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, targetHost, localCertificates, remoteCertificate, acceptableIssuers);
}
// Autogenerated method: Mono.Net.Security.ChainValidationHelper.ValidateChain
Mono::Security::Interface::ValidationResult* Mono::Net::Security::ChainValidationHelper::ValidateChain(::Il2CppString* host, bool server, System::Security::Cryptography::X509Certificates::X509Certificate* leaf, System::Security::Cryptography::X509Certificates::X509Chain* chain, System::Security::Cryptography::X509Certificates::X509CertificateCollection* certs, System::Net::Security::SslPolicyErrors errors) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("ChainValidationHelper").WithContext("ValidateChain");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ValidateChain", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(host, server, leaf, chain, certs, errors)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::ValidationResult*, false>(this, ___internal__method, host, server, leaf, chain, certs, errors);
}
// Autogenerated method: Mono.Net.Security.ChainValidationHelper.ValidateChain
Mono::Security::Interface::ValidationResult* Mono::Net::Security::ChainValidationHelper::ValidateChain(::Il2CppString* host, bool server, System::Security::Cryptography::X509Certificates::X509Certificate* leaf, System::Security::Cryptography::X509Certificates::X509Chain*& chain, System::Security::Cryptography::X509Certificates::X509CertificateCollection* certs, System::Net::Security::SslPolicyErrors errors) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("ChainValidationHelper").WithContext("ValidateChain");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ValidateChain", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(host, server, leaf, chain, certs, errors)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::ValidationResult*, false>(this, ___internal__method, host, server, leaf, chain, certs, errors);
}
// Autogenerated method: Mono.Net.Security.ChainValidationHelper.get_Settings
Mono::Security::Interface::MonoTlsSettings* Mono::Net::Security::ChainValidationHelper::get_Settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("ChainValidationHelper").WithContext("get_Settings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Settings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::MonoTlsSettings*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.ChainValidationHelper.SelectClientCertificate
bool Mono::Net::Security::ChainValidationHelper::SelectClientCertificate(::Il2CppString* targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection* localCertificates, System::Security::Cryptography::X509Certificates::X509Certificate* remoteCertificate, ::Array<::Il2CppString*>* acceptableIssuers, System::Security::Cryptography::X509Certificates::X509Certificate*& clientCertificate) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("ChainValidationHelper").WithContext("SelectClientCertificate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SelectClientCertificate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(targetHost, localCertificates, remoteCertificate, acceptableIssuers, clientCertificate)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, targetHost, localCertificates, remoteCertificate, acceptableIssuers, clientCertificate);
}
// Autogenerated method: Mono.Net.Security.ChainValidationHelper.ValidateCertificate
Mono::Security::Interface::ValidationResult* Mono::Net::Security::ChainValidationHelper::ValidateCertificate(::Il2CppString* host, bool serverMode, System::Security::Cryptography::X509Certificates::X509CertificateCollection* certs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("ChainValidationHelper").WithContext("ValidateCertificate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ValidateCertificate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(host, serverMode, certs)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::ValidationResult*, false>(this, ___internal__method, host, serverMode, certs);
}
// Autogenerated method: Mono.Net.Security.ChainValidationHelper.ValidateCertificate
Mono::Security::Interface::ValidationResult* Mono::Net::Security::ChainValidationHelper::ValidateCertificate(::Il2CppString* host, bool serverMode, System::Security::Cryptography::X509Certificates::X509Certificate* leaf, System::Security::Cryptography::X509Certificates::X509Chain* chain) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("ChainValidationHelper").WithContext("ValidateCertificate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ValidateCertificate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(host, serverMode, leaf, chain)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::ValidationResult*, false>(this, ___internal__method, host, serverMode, leaf, chain);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.MobileAuthenticatedStream
#include "Mono/Net/Security/MobileAuthenticatedStream.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream/OperationType
#include "Mono/Net/Security/MobileAuthenticatedStream_OperationType.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream/<ProcessAuthentication>d__47
#include "Mono/Net/Security/MobileAuthenticatedStream_-ProcessAuthentication-d__47.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream/<StartOperation>d__58
#include "Mono/Net/Security/MobileAuthenticatedStream_-StartOperation-d__58.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream/<>c__DisplayClass66_0
#include "Mono/Net/Security/MobileAuthenticatedStream_--c__DisplayClass66_0.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream/<InnerRead>d__66
#include "Mono/Net/Security/MobileAuthenticatedStream_-InnerRead-d__66.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream/<InnerWrite>d__67
#include "Mono/Net/Security/MobileAuthenticatedStream_-InnerWrite-d__67.hpp"
// Including type: Mono.Net.Security.MobileTlsContext
#include "Mono/Net/Security/MobileTlsContext.hpp"
// Including type: System.Runtime.ExceptionServices.ExceptionDispatchInfo
#include "System/Runtime/ExceptionServices/ExceptionDispatchInfo.hpp"
// Including type: Mono.Net.Security.AsyncProtocolRequest
#include "Mono/Net/Security/AsyncProtocolRequest.hpp"
// Including type: Mono.Net.Security.BufferOffsetSize2
#include "Mono/Net/Security/BufferOffsetSize2.hpp"
// Including type: System.Net.Security.SslStream
#include "System/Net/Security/SslStream.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
// Including type: Mono.Security.Interface.MonoTlsProvider
#include "Mono/Security/Interface/MonoTlsProvider.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Security.Authentication.SslProtocols
#include "System/Security/Authentication/SslProtocols.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.ValueTuple`2
#include "System/ValueTuple_2.hpp"
// Including type: Mono.Net.Security.BufferOffsetSize
#include "Mono/Net/Security/BufferOffsetSize.hpp"
// Including type: Mono.Net.Security.AsyncOperationStatus
#include "Mono/Net/Security/AsyncOperationStatus.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
// Including type: System.IO.SeekOrigin
#include "System/IO/SeekOrigin.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 uniqueNameInteger
int Mono::Net::Security::MobileAuthenticatedStream::_get_uniqueNameInteger() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("_get_uniqueNameInteger");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Mono.Net.Security", "MobileAuthenticatedStream", "uniqueNameInteger"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 uniqueNameInteger
void Mono::Net::Security::MobileAuthenticatedStream::_set_uniqueNameInteger(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("_set_uniqueNameInteger");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MobileAuthenticatedStream", "uniqueNameInteger", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 nextId
int Mono::Net::Security::MobileAuthenticatedStream::_get_nextId() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("_get_nextId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Mono.Net.Security", "MobileAuthenticatedStream", "nextId"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 nextId
void Mono::Net::Security::MobileAuthenticatedStream::_set_nextId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("_set_nextId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MobileAuthenticatedStream", "nextId", value));
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_Settings
Mono::Security::Interface::MonoTlsSettings* Mono::Net::Security::MobileAuthenticatedStream::get_Settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("get_Settings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Settings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::MonoTlsSettings*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_Provider
Mono::Security::Interface::MonoTlsProvider* Mono::Net::Security::MobileAuthenticatedStream::get_Provider() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("get_Provider");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Provider", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::MonoTlsProvider*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.CheckThrow
void Mono::Net::Security::MobileAuthenticatedStream::CheckThrow(bool authSuccessCheck, bool shutdownCheck) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("CheckThrow");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CheckThrow", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(authSuccessCheck, shutdownCheck)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, authSuccessCheck, shutdownCheck);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.GetSSPIException
System::Exception* Mono::Net::Security::MobileAuthenticatedStream::GetSSPIException(System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("GetSSPIException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net.Security", "MobileAuthenticatedStream", "GetSSPIException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(e)));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, e);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.GetIOException
System::Exception* Mono::Net::Security::MobileAuthenticatedStream::GetIOException(System::Exception* e, ::Il2CppString* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("GetIOException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net.Security", "MobileAuthenticatedStream", "GetIOException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(e, message)));
  return ::il2cpp_utils::RunMethodThrow<System::Exception*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, e, message);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.SetException
System::Runtime::ExceptionServices::ExceptionDispatchInfo* Mono::Net::Security::MobileAuthenticatedStream::SetException(System::Exception* e) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("SetException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(e)));
  return ::il2cpp_utils::RunMethodThrow<System::Runtime::ExceptionServices::ExceptionDispatchInfo*, false>(this, ___internal__method, e);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.ProcessAuthentication
System::Threading::Tasks::Task* Mono::Net::Security::MobileAuthenticatedStream::ProcessAuthentication(bool runSynchronously, bool serverMode, ::Il2CppString* targetHost, System::Security::Authentication::SslProtocols enabledProtocols, System::Security::Cryptography::X509Certificates::X509Certificate* serverCertificate, System::Security::Cryptography::X509Certificates::X509CertificateCollection* clientCertificates, bool clientCertRequired) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("ProcessAuthentication");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessAuthentication", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(runSynchronously, serverMode, targetHost, enabledProtocols, serverCertificate, clientCertificates, clientCertRequired)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, runSynchronously, serverMode, targetHost, enabledProtocols, serverCertificate, clientCertificates, clientCertRequired);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.CreateContext
Mono::Net::Security::MobileTlsContext* Mono::Net::Security::MobileAuthenticatedStream::CreateContext(bool serverMode, ::Il2CppString* targetHost, System::Security::Authentication::SslProtocols enabledProtocols, System::Security::Cryptography::X509Certificates::X509Certificate* serverCertificate, System::Security::Cryptography::X509Certificates::X509CertificateCollection* clientCertificates, bool askForClientCert) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("CreateContext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateContext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(serverMode, targetHost, enabledProtocols, serverCertificate, clientCertificates, askForClientCert)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Net::Security::MobileTlsContext*, false>(this, ___internal__method, serverMode, targetHost, enabledProtocols, serverCertificate, clientCertificates, askForClientCert);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.StartOperation
System::Threading::Tasks::Task_1<int>* Mono::Net::Security::MobileAuthenticatedStream::StartOperation(Mono::Net::Security::MobileAuthenticatedStream::OperationType type, Mono::Net::Security::AsyncProtocolRequest* asyncRequest, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("StartOperation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartOperation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(type, asyncRequest, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, type, asyncRequest, cancellationToken);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.InternalRead
int Mono::Net::Security::MobileAuthenticatedStream::InternalRead(::Array<uint8_t>* buffer, int offset, int size, bool& outWantMore) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("InternalRead");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalRead", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, offset, size, outWantMore)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffer, offset, size, outWantMore);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.InternalRead
System::ValueTuple_2<int, bool> Mono::Net::Security::MobileAuthenticatedStream::InternalRead(Mono::Net::Security::AsyncProtocolRequest* asyncRequest, Mono::Net::Security::BufferOffsetSize* internalBuffer, ::Array<uint8_t>* buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("InternalRead");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalRead", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(asyncRequest, internalBuffer, buffer, offset, size)));
  return ::il2cpp_utils::RunMethodThrow<System::ValueTuple_2<int, bool>, false>(this, ___internal__method, asyncRequest, internalBuffer, buffer, offset, size);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.InternalWrite
bool Mono::Net::Security::MobileAuthenticatedStream::InternalWrite(::Array<uint8_t>* buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("InternalWrite");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalWrite", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, offset, size)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, buffer, offset, size);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.InternalWrite
bool Mono::Net::Security::MobileAuthenticatedStream::InternalWrite(Mono::Net::Security::AsyncProtocolRequest* asyncRequest, Mono::Net::Security::BufferOffsetSize2* internalBuffer, ::Array<uint8_t>* buffer, int offset, int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("InternalWrite");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalWrite", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(asyncRequest, internalBuffer, buffer, offset, size)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, asyncRequest, internalBuffer, buffer, offset, size);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.InnerRead
System::Threading::Tasks::Task_1<int>* Mono::Net::Security::MobileAuthenticatedStream::InnerRead(bool sync, int requestedSize, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("InnerRead");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InnerRead", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sync, requestedSize, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, sync, requestedSize, cancellationToken);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.InnerWrite
System::Threading::Tasks::Task* Mono::Net::Security::MobileAuthenticatedStream::InnerWrite(bool sync, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("InnerWrite");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InnerWrite", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(sync, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, sync, cancellationToken);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.ProcessHandshake
Mono::Net::Security::AsyncOperationStatus Mono::Net::Security::MobileAuthenticatedStream::ProcessHandshake(Mono::Net::Security::AsyncOperationStatus status) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("ProcessHandshake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessHandshake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(status)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Net::Security::AsyncOperationStatus, false>(this, ___internal__method, status);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.ProcessRead
System::ValueTuple_2<int, bool> Mono::Net::Security::MobileAuthenticatedStream::ProcessRead(Mono::Net::Security::BufferOffsetSize* userBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("ProcessRead");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessRead", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userBuffer)));
  return ::il2cpp_utils::RunMethodThrow<System::ValueTuple_2<int, bool>, false>(this, ___internal__method, userBuffer);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.ProcessWrite
System::ValueTuple_2<int, bool> Mono::Net::Security::MobileAuthenticatedStream::ProcessWrite(Mono::Net::Security::BufferOffsetSize* userBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("ProcessWrite");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessWrite", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userBuffer)));
  return ::il2cpp_utils::RunMethodThrow<System::ValueTuple_2<int, bool>, false>(this, ___internal__method, userBuffer);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.<InnerWrite>b__67_0
void Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$b__67_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("<InnerWrite>b__67_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InnerWrite>b__67_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.AuthenticateAsClient
void Mono::Net::Security::MobileAuthenticatedStream::AuthenticateAsClient(::Il2CppString* targetHost, System::Security::Cryptography::X509Certificates::X509CertificateCollection* clientCertificates, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("AuthenticateAsClient");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AuthenticateAsClient", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(targetHost, clientCertificates, enabledSslProtocols, checkCertificateRevocation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, targetHost, clientCertificates, enabledSslProtocols, checkCertificateRevocation);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.AuthenticateAsServer
void Mono::Net::Security::MobileAuthenticatedStream::AuthenticateAsServer(System::Security::Cryptography::X509Certificates::X509Certificate* serverCertificate, bool clientCertificateRequired, System::Security::Authentication::SslProtocols enabledSslProtocols, bool checkCertificateRevocation) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("AuthenticateAsServer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AuthenticateAsServer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(serverCertificate, clientCertificateRequired, enabledSslProtocols, checkCertificateRevocation)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serverCertificate, clientCertificateRequired, enabledSslProtocols, checkCertificateRevocation);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_AuthenticatedStream
System::Net::Security::AuthenticatedStream* Mono::Net::Security::MobileAuthenticatedStream::get_AuthenticatedStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("get_AuthenticatedStream");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_AuthenticatedStream", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Security::AuthenticatedStream*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.BeginRead
System::IAsyncResult* Mono::Net::Security::MobileAuthenticatedStream::BeginRead(::Array<uint8_t>* buffer, int offset, int count, System::AsyncCallback* asyncCallback, ::Il2CppObject* asyncState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("BeginRead");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginRead", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, offset, count, asyncCallback, asyncState)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, asyncCallback, asyncState);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.EndRead
int Mono::Net::Security::MobileAuthenticatedStream::EndRead(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("EndRead");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndRead", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(asyncResult)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.BeginWrite
System::IAsyncResult* Mono::Net::Security::MobileAuthenticatedStream::BeginWrite(::Array<uint8_t>* buffer, int offset, int count, System::AsyncCallback* asyncCallback, ::Il2CppObject* asyncState) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("BeginWrite");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginWrite", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, offset, count, asyncCallback, asyncState)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, buffer, offset, count, asyncCallback, asyncState);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.EndWrite
void Mono::Net::Security::MobileAuthenticatedStream::EndWrite(System::IAsyncResult* asyncResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("EndWrite");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndWrite", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(asyncResult)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, asyncResult);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.Read
int Mono::Net::Security::MobileAuthenticatedStream::Read(::Array<uint8_t>* buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("Read");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, offset, count)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.Write
void Mono::Net::Security::MobileAuthenticatedStream::Write(::Array<uint8_t>* buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, offset, count)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.ReadAsync
System::Threading::Tasks::Task_1<int>* Mono::Net::Security::MobileAuthenticatedStream::ReadAsync(::Array<uint8_t>* buffer, int offset, int count, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("ReadAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReadAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, offset, count, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<int>*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.WriteAsync
System::Threading::Tasks::Task* Mono::Net::Security::MobileAuthenticatedStream::WriteAsync(::Array<uint8_t>* buffer, int offset, int count, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("WriteAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WriteAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, offset, count, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, buffer, offset, count, cancellationToken);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_IsAuthenticated
bool Mono::Net::Security::MobileAuthenticatedStream::get_IsAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("get_IsAuthenticated");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsAuthenticated", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.Dispose
void Mono::Net::Security::MobileAuthenticatedStream::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disposing)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.Flush
void Mono::Net::Security::MobileAuthenticatedStream::Flush() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("Flush");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Flush", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_InternalLocalCertificate
System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Net::Security::MobileAuthenticatedStream::get_InternalLocalCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("get_InternalLocalCertificate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_InternalLocalCertificate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.Seek
int64_t Mono::Net::Security::MobileAuthenticatedStream::Seek(int64_t offset, System::IO::SeekOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("Seek");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Seek", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(offset, origin)));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method, offset, origin);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.SetLength
void Mono::Net::Security::MobileAuthenticatedStream::SetLength(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("SetLength");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetLength", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_CanRead
bool Mono::Net::Security::MobileAuthenticatedStream::get_CanRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("get_CanRead");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CanRead", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_CanWrite
bool Mono::Net::Security::MobileAuthenticatedStream::get_CanWrite() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("get_CanWrite");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CanWrite", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_CanSeek
bool Mono::Net::Security::MobileAuthenticatedStream::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("get_CanSeek");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CanSeek", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_Length
int64_t Mono::Net::Security::MobileAuthenticatedStream::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("get_Length");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Length", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_Position
int64_t Mono::Net::Security::MobileAuthenticatedStream::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("get_Position");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Position", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.set_Position
void Mono::Net::Security::MobileAuthenticatedStream::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("set_Position");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Position", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_ReadTimeout
int Mono::Net::Security::MobileAuthenticatedStream::get_ReadTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("get_ReadTimeout");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ReadTimeout", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream.get_WriteTimeout
int Mono::Net::Security::MobileAuthenticatedStream::get_WriteTimeout() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext("get_WriteTimeout");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_WriteTimeout", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream..cctor
void Mono::Net::Security::MobileAuthenticatedStream::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileAuthenticatedStream").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net.Security", "MobileAuthenticatedStream", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.MobileAuthenticatedStream/OperationType
#include "Mono/Net/Security/MobileAuthenticatedStream_OperationType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Mono.Net.Security.MobileAuthenticatedStream/OperationType Read
Mono::Net::Security::MobileAuthenticatedStream::OperationType Mono::Net::Security::MobileAuthenticatedStream::OperationType::_get_Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("OperationType").WithContext("_get_Read");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Net::Security::MobileAuthenticatedStream::OperationType>("Mono.Net.Security", "MobileAuthenticatedStream/OperationType", "Read"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.Security.MobileAuthenticatedStream/OperationType Read
void Mono::Net::Security::MobileAuthenticatedStream::OperationType::_set_Read(Mono::Net::Security::MobileAuthenticatedStream::OperationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("OperationType").WithContext("_set_Read");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MobileAuthenticatedStream/OperationType", "Read", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.Security.MobileAuthenticatedStream/OperationType Write
Mono::Net::Security::MobileAuthenticatedStream::OperationType Mono::Net::Security::MobileAuthenticatedStream::OperationType::_get_Write() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("OperationType").WithContext("_get_Write");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Net::Security::MobileAuthenticatedStream::OperationType>("Mono.Net.Security", "MobileAuthenticatedStream/OperationType", "Write"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.Security.MobileAuthenticatedStream/OperationType Write
void Mono::Net::Security::MobileAuthenticatedStream::OperationType::_set_Write(Mono::Net::Security::MobileAuthenticatedStream::OperationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("OperationType").WithContext("_set_Write");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MobileAuthenticatedStream/OperationType", "Write", value));
}
// Autogenerated static field getter
// Get static field: static public Mono.Net.Security.MobileAuthenticatedStream/OperationType Shutdown
Mono::Net::Security::MobileAuthenticatedStream::OperationType Mono::Net::Security::MobileAuthenticatedStream::OperationType::_get_Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("OperationType").WithContext("_get_Shutdown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Net::Security::MobileAuthenticatedStream::OperationType>("Mono.Net.Security", "MobileAuthenticatedStream/OperationType", "Shutdown"));
}
// Autogenerated static field setter
// Set static field: static public Mono.Net.Security.MobileAuthenticatedStream/OperationType Shutdown
void Mono::Net::Security::MobileAuthenticatedStream::OperationType::_set_Shutdown(Mono::Net::Security::MobileAuthenticatedStream::OperationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("OperationType").WithContext("_set_Shutdown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MobileAuthenticatedStream/OperationType", "Shutdown", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.MobileAuthenticatedStream/<ProcessAuthentication>d__47
#include "Mono/Net/Security/MobileAuthenticatedStream_-ProcessAuthentication-d__47.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: Mono.Net.Security.AsyncProtocolResult
#include "Mono/Net/Security/AsyncProtocolResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream/<ProcessAuthentication>d__47.MoveNext
void Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("$ProcessAuthentication$d__47").WithContext("MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream/<ProcessAuthentication>d__47.SetStateMachine
void Mono::Net::Security::MobileAuthenticatedStream::$ProcessAuthentication$d__47::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("$ProcessAuthentication$d__47").WithContext("SetStateMachine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateMachine)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.MobileAuthenticatedStream/<StartOperation>d__58
#include "Mono/Net/Security/MobileAuthenticatedStream_-StartOperation-d__58.hpp"
// Including type: Mono.Net.Security.AsyncProtocolRequest
#include "Mono/Net/Security/AsyncProtocolRequest.hpp"
// Including type: Mono.Net.Security.AsyncProtocolResult
#include "Mono/Net/Security/AsyncProtocolResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream/<StartOperation>d__58.MoveNext
void Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("$StartOperation$d__58").WithContext("MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream/<StartOperation>d__58.SetStateMachine
void Mono::Net::Security::MobileAuthenticatedStream::$StartOperation$d__58::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("$StartOperation$d__58").WithContext("SetStateMachine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateMachine)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.MobileAuthenticatedStream/<>c__DisplayClass66_0
#include "Mono/Net/Security/MobileAuthenticatedStream_--c__DisplayClass66_0.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream/<>c__DisplayClass66_0.<InnerRead>b__0
int Mono::Net::Security::MobileAuthenticatedStream::$$c__DisplayClass66_0::$InnerRead$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("$$c__DisplayClass66_0").WithContext("<InnerRead>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InnerRead>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.MobileAuthenticatedStream/<InnerRead>d__66
#include "Mono/Net/Security/MobileAuthenticatedStream_-InnerRead-d__66.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream/<InnerRead>d__66.MoveNext
void Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("$InnerRead$d__66").WithContext("MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream/<InnerRead>d__66.SetStateMachine
void Mono::Net::Security::MobileAuthenticatedStream::$InnerRead$d__66::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("$InnerRead$d__66").WithContext("SetStateMachine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateMachine)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.MobileAuthenticatedStream/<InnerWrite>d__67
#include "Mono/Net/Security/MobileAuthenticatedStream_-InnerWrite-d__67.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream/<InnerWrite>d__67.MoveNext
void Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("$InnerWrite$d__67").WithContext("MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileAuthenticatedStream/<InnerWrite>d__67.SetStateMachine
void Mono::Net::Security::MobileAuthenticatedStream::$InnerWrite$d__67::SetStateMachine(System::Runtime::CompilerServices::IAsyncStateMachine* stateMachine) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("$InnerWrite$d__67").WithContext("SetStateMachine");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "SetStateMachine", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stateMachine)));
  ::il2cpp_utils::RunMethodThrow<void, false>(*this, ___internal__method, stateMachine);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.MobileTlsContext
#include "Mono/Net/Security/MobileTlsContext.hpp"
// Including type: Mono.Net.Security.MobileAuthenticatedStream
#include "Mono/Net/Security/MobileAuthenticatedStream.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: Mono.Security.Interface.ICertificateValidator2
#include "Mono/Security/Interface/ICertificateValidator2.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
// Including type: System.ValueTuple`2
#include "System/ValueTuple_2.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_Parent
Mono::Net::Security::MobileAuthenticatedStream* Mono::Net::Security::MobileTlsContext::get_Parent() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileTlsContext").WithContext("get_Parent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Parent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Mono::Net::Security::MobileAuthenticatedStream*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_Settings
Mono::Security::Interface::MonoTlsSettings* Mono::Net::Security::MobileTlsContext::get_Settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileTlsContext").WithContext("get_Settings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Settings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::MonoTlsSettings*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_IsAuthenticated
bool Mono::Net::Security::MobileTlsContext::get_IsAuthenticated() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileTlsContext").WithContext("get_IsAuthenticated");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsAuthenticated", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_IsServer
bool Mono::Net::Security::MobileTlsContext::get_IsServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileTlsContext").WithContext("get_IsServer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsServer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_TargetHost
::Il2CppString* Mono::Net::Security::MobileTlsContext::get_TargetHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileTlsContext").WithContext("get_TargetHost");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_TargetHost", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_ServerName
::Il2CppString* Mono::Net::Security::MobileTlsContext::get_ServerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileTlsContext").WithContext("get_ServerName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ServerName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_ClientCertificates
System::Security::Cryptography::X509Certificates::X509CertificateCollection* Mono::Net::Security::MobileTlsContext::get_ClientCertificates() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileTlsContext").WithContext("get_ClientCertificates");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ClientCertificates", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::X509Certificates::X509CertificateCollection*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.StartHandshake
void Mono::Net::Security::MobileTlsContext::StartHandshake() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileTlsContext").WithContext("StartHandshake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartHandshake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.ProcessHandshake
bool Mono::Net::Security::MobileTlsContext::ProcessHandshake() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileTlsContext").WithContext("ProcessHandshake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ProcessHandshake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.FinishHandshake
void Mono::Net::Security::MobileTlsContext::FinishHandshake() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileTlsContext").WithContext("FinishHandshake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FinishHandshake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_LocalServerCertificate
System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Net::Security::MobileTlsContext::get_LocalServerCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileTlsContext").WithContext("get_LocalServerCertificate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_LocalServerCertificate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.get_LocalClientCertificate
System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Net::Security::MobileTlsContext::get_LocalClientCertificate() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileTlsContext").WithContext("get_LocalClientCertificate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_LocalClientCertificate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.Read
System::ValueTuple_2<int, bool> Mono::Net::Security::MobileTlsContext::Read(::Array<uint8_t>* buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileTlsContext").WithContext("Read");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, offset, count)));
  return ::il2cpp_utils::RunMethodThrow<System::ValueTuple_2<int, bool>, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.Write
System::ValueTuple_2<int, bool> Mono::Net::Security::MobileTlsContext::Write(::Array<uint8_t>* buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileTlsContext").WithContext("Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer, offset, count)));
  return ::il2cpp_utils::RunMethodThrow<System::ValueTuple_2<int, bool>, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.Shutdown
void Mono::Net::Security::MobileTlsContext::Shutdown() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileTlsContext").WithContext("Shutdown");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Shutdown", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.ValidateCertificate
bool Mono::Net::Security::MobileTlsContext::ValidateCertificate(System::Security::Cryptography::X509Certificates::X509Certificate* leaf, System::Security::Cryptography::X509Certificates::X509Chain* chain) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileTlsContext").WithContext("ValidateCertificate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ValidateCertificate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(leaf, chain)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, leaf, chain);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.ValidateCertificate
bool Mono::Net::Security::MobileTlsContext::ValidateCertificate(System::Security::Cryptography::X509Certificates::X509CertificateCollection* certificates) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileTlsContext").WithContext("ValidateCertificate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ValidateCertificate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(certificates)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, certificates);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.SelectClientCertificate
System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Net::Security::MobileTlsContext::SelectClientCertificate(System::Security::Cryptography::X509Certificates::X509Certificate* serverCertificate, ::Array<::Il2CppString*>* acceptableIssuers) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileTlsContext").WithContext("SelectClientCertificate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SelectClientCertificate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(serverCertificate, acceptableIssuers)));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method, serverCertificate, acceptableIssuers);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.Dispose
void Mono::Net::Security::MobileTlsContext::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileTlsContext").WithContext("Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disposing)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.Dispose
void Mono::Net::Security::MobileTlsContext::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileTlsContext").WithContext("Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
void Mono::Net::Security::MobileTlsContext::System_IDisposable_Dispose() {
  Mono::Net::Security::MobileTlsContext::Dispose();
}
// Autogenerated method: Mono.Net.Security.MobileTlsContext.Finalize
void Mono::Net::Security::MobileTlsContext::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MobileTlsContext").WithContext("Finalize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Finalize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.MonoTlsProviderFactory
#include "Mono/Net/Security/MonoTlsProviderFactory.hpp"
// Including type: Mono.Security.Interface.MonoTlsProvider
#include "Mono/Security/Interface/MonoTlsProvider.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Tuple`2
#include "System/Tuple_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Object locker
::Il2CppObject* Mono::Net::Security::MonoTlsProviderFactory::_get_locker() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MonoTlsProviderFactory").WithContext("_get_locker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("Mono.Net.Security", "MonoTlsProviderFactory", "locker"));
}
// Autogenerated static field setter
// Set static field: static private System.Object locker
void Mono::Net::Security::MonoTlsProviderFactory::_set_locker(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MonoTlsProviderFactory").WithContext("_set_locker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MonoTlsProviderFactory", "locker", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean initialized
bool Mono::Net::Security::MonoTlsProviderFactory::_get_initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MonoTlsProviderFactory").WithContext("_get_initialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Mono.Net.Security", "MonoTlsProviderFactory", "initialized"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean initialized
void Mono::Net::Security::MonoTlsProviderFactory::_set_initialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MonoTlsProviderFactory").WithContext("_set_initialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MonoTlsProviderFactory", "initialized", value));
}
// Autogenerated static field getter
// Get static field: static private Mono.Security.Interface.MonoTlsProvider defaultProvider
Mono::Security::Interface::MonoTlsProvider* Mono::Net::Security::MonoTlsProviderFactory::_get_defaultProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MonoTlsProviderFactory").WithContext("_get_defaultProvider");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Mono::Security::Interface::MonoTlsProvider*>("Mono.Net.Security", "MonoTlsProviderFactory", "defaultProvider"));
}
// Autogenerated static field setter
// Set static field: static private Mono.Security.Interface.MonoTlsProvider defaultProvider
void Mono::Net::Security::MonoTlsProviderFactory::_set_defaultProvider(Mono::Security::Interface::MonoTlsProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MonoTlsProviderFactory").WithContext("_set_defaultProvider");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MonoTlsProviderFactory", "defaultProvider", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Tuple`2<System.Guid,System.String>> providerRegistration
System::Collections::Generic::Dictionary_2<::Il2CppString*, System::Tuple_2<System::Guid, ::Il2CppString*>*>* Mono::Net::Security::MonoTlsProviderFactory::_get_providerRegistration() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MonoTlsProviderFactory").WithContext("_get_providerRegistration");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<::Il2CppString*, System::Tuple_2<System::Guid, ::Il2CppString*>*>*>("Mono.Net.Security", "MonoTlsProviderFactory", "providerRegistration")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.Tuple`2<System.Guid,System.String>> providerRegistration
void Mono::Net::Security::MonoTlsProviderFactory::_set_providerRegistration(System::Collections::Generic::Dictionary_2<::Il2CppString*, System::Tuple_2<System::Guid, ::Il2CppString*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MonoTlsProviderFactory").WithContext("_set_providerRegistration");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MonoTlsProviderFactory", "providerRegistration", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.Guid,Mono.Security.Interface.MonoTlsProvider> providerCache
System::Collections::Generic::Dictionary_2<System::Guid, Mono::Security::Interface::MonoTlsProvider*>* Mono::Net::Security::MonoTlsProviderFactory::_get_providerCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MonoTlsProviderFactory").WithContext("_get_providerCache");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<System::Guid, Mono::Security::Interface::MonoTlsProvider*>*>("Mono.Net.Security", "MonoTlsProviderFactory", "providerCache")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.Guid,Mono.Security.Interface.MonoTlsProvider> providerCache
void Mono::Net::Security::MonoTlsProviderFactory::_set_providerCache(System::Collections::Generic::Dictionary_2<System::Guid, Mono::Security::Interface::MonoTlsProvider*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MonoTlsProviderFactory").WithContext("_set_providerCache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MonoTlsProviderFactory", "providerCache", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Guid UnityTlsId
System::Guid Mono::Net::Security::MonoTlsProviderFactory::_get_UnityTlsId() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MonoTlsProviderFactory").WithContext("_get_UnityTlsId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Guid>("Mono.Net.Security", "MonoTlsProviderFactory", "UnityTlsId"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Guid UnityTlsId
void Mono::Net::Security::MonoTlsProviderFactory::_set_UnityTlsId(System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MonoTlsProviderFactory").WithContext("_set_UnityTlsId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MonoTlsProviderFactory", "UnityTlsId", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Guid AppleTlsId
System::Guid Mono::Net::Security::MonoTlsProviderFactory::_get_AppleTlsId() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MonoTlsProviderFactory").WithContext("_get_AppleTlsId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Guid>("Mono.Net.Security", "MonoTlsProviderFactory", "AppleTlsId"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Guid AppleTlsId
void Mono::Net::Security::MonoTlsProviderFactory::_set_AppleTlsId(System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MonoTlsProviderFactory").WithContext("_set_AppleTlsId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MonoTlsProviderFactory", "AppleTlsId", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Guid BtlsId
System::Guid Mono::Net::Security::MonoTlsProviderFactory::_get_BtlsId() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MonoTlsProviderFactory").WithContext("_get_BtlsId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Guid>("Mono.Net.Security", "MonoTlsProviderFactory", "BtlsId"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Guid BtlsId
void Mono::Net::Security::MonoTlsProviderFactory::_set_BtlsId(System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MonoTlsProviderFactory").WithContext("_set_BtlsId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MonoTlsProviderFactory", "BtlsId", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Guid LegacyId
System::Guid Mono::Net::Security::MonoTlsProviderFactory::_get_LegacyId() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MonoTlsProviderFactory").WithContext("_get_LegacyId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Guid>("Mono.Net.Security", "MonoTlsProviderFactory", "LegacyId"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Guid LegacyId
void Mono::Net::Security::MonoTlsProviderFactory::_set_LegacyId(System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MonoTlsProviderFactory").WithContext("_set_LegacyId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "MonoTlsProviderFactory", "LegacyId", value));
}
// Autogenerated method: Mono.Net.Security.MonoTlsProviderFactory.GetProviderInternal
Mono::Security::Interface::MonoTlsProvider* Mono::Net::Security::MonoTlsProviderFactory::GetProviderInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MonoTlsProviderFactory").WithContext("GetProviderInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net.Security", "MonoTlsProviderFactory", "GetProviderInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::MonoTlsProvider*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MonoTlsProviderFactory.InitializeInternal
void Mono::Net::Security::MonoTlsProviderFactory::InitializeInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MonoTlsProviderFactory").WithContext("InitializeInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net.Security", "MonoTlsProviderFactory", "InitializeInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MonoTlsProviderFactory.LookupProvider
Mono::Security::Interface::MonoTlsProvider* Mono::Net::Security::MonoTlsProviderFactory::LookupProvider(::Il2CppString* name, bool throwOnError) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MonoTlsProviderFactory").WithContext("LookupProvider");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net.Security", "MonoTlsProviderFactory", "LookupProvider", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, throwOnError)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::MonoTlsProvider*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, throwOnError);
}
// Autogenerated method: Mono.Net.Security.MonoTlsProviderFactory.InitializeProviderRegistration
void Mono::Net::Security::MonoTlsProviderFactory::InitializeProviderRegistration() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MonoTlsProviderFactory").WithContext("InitializeProviderRegistration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net.Security", "MonoTlsProviderFactory", "InitializeProviderRegistration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MonoTlsProviderFactory.CreateDefaultProviderImpl
Mono::Security::Interface::MonoTlsProvider* Mono::Net::Security::MonoTlsProviderFactory::CreateDefaultProviderImpl() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MonoTlsProviderFactory").WithContext("CreateDefaultProviderImpl");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net.Security", "MonoTlsProviderFactory", "CreateDefaultProviderImpl", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::MonoTlsProvider*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MonoTlsProviderFactory.GetProvider
Mono::Security::Interface::MonoTlsProvider* Mono::Net::Security::MonoTlsProviderFactory::GetProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MonoTlsProviderFactory").WithContext("GetProvider");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net.Security", "MonoTlsProviderFactory", "GetProvider", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::MonoTlsProvider*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MonoTlsProviderFactory..cctor
void Mono::Net::Security::MonoTlsProviderFactory::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MonoTlsProviderFactory").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net.Security", "MonoTlsProviderFactory", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.MonoTlsStream
#include "Mono/Net/Security/MonoTlsStream.hpp"
// Including type: Mono.Security.Interface.MonoTlsProvider
#include "Mono/Security/Interface/MonoTlsProvider.hpp"
// Including type: System.Net.Sockets.NetworkStream
#include "System/Net/Sockets/NetworkStream.hpp"
// Including type: System.Net.HttpWebRequest
#include "System/Net/HttpWebRequest.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
// Including type: Mono.Security.Interface.IMonoSslStream
#include "Mono/Security/Interface/IMonoSslStream.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.MonoTlsStream.get_Request
System::Net::HttpWebRequest* Mono::Net::Security::MonoTlsStream::get_Request() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MonoTlsStream").WithContext("get_Request");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Request", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Net::HttpWebRequest*, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MonoTlsStream.get_ExceptionStatus
System::Net::WebExceptionStatus Mono::Net::Security::MonoTlsStream::get_ExceptionStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MonoTlsStream").WithContext("get_ExceptionStatus");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_ExceptionStatus", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Net::WebExceptionStatus, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MonoTlsStream.get_CertificateValidationFailed
bool Mono::Net::Security::MonoTlsStream::get_CertificateValidationFailed() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MonoTlsStream").WithContext("get_CertificateValidationFailed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_CertificateValidationFailed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Mono.Net.Security.MonoTlsStream.set_CertificateValidationFailed
void Mono::Net::Security::MonoTlsStream::set_CertificateValidationFailed(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MonoTlsStream").WithContext("set_CertificateValidationFailed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_CertificateValidationFailed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Mono.Net.Security.MonoTlsStream.CreateStream
System::IO::Stream* Mono::Net::Security::MonoTlsStream::CreateStream(::Array<uint8_t>* buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("MonoTlsStream").WithContext("CreateStream");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateStream", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(buffer)));
  return ::il2cpp_utils::RunMethodThrow<System::IO::Stream*, false>(this, ___internal__method, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.NoReflectionHelper
#include "Mono/Net/Security/NoReflectionHelper.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.NoReflectionHelper.GetInternalValidator
::Il2CppObject* Mono::Net::Security::NoReflectionHelper::GetInternalValidator(::Il2CppObject* provider, ::Il2CppObject* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("NoReflectionHelper").WithContext("GetInternalValidator");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net.Security", "NoReflectionHelper", "GetInternalValidator", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(provider, settings)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, provider, settings);
}
// Autogenerated method: Mono.Net.Security.NoReflectionHelper.GetProvider
::Il2CppObject* Mono::Net::Security::NoReflectionHelper::GetProvider() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("NoReflectionHelper").WithContext("GetProvider");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net.Security", "NoReflectionHelper", "GetProvider", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.SystemCertificateValidator
#include "Mono/Net/Security/SystemCertificateValidator.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
// Including type: Mono.Security.Interface.MonoTlsSettings
#include "Mono/Security/Interface/MonoTlsSettings.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Boolean is_macosx
bool Mono::Net::Security::SystemCertificateValidator::_get_is_macosx() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("SystemCertificateValidator").WithContext("_get_is_macosx");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Mono.Net.Security", "SystemCertificateValidator", "is_macosx"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean is_macosx
void Mono::Net::Security::SystemCertificateValidator::_set_is_macosx(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("SystemCertificateValidator").WithContext("_set_is_macosx");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "SystemCertificateValidator", "is_macosx", value));
}
// Autogenerated static field getter
// Get static field: static private System.Security.Cryptography.X509Certificates.X509KeyUsageFlags s_flags
System::Security::Cryptography::X509Certificates::X509KeyUsageFlags Mono::Net::Security::SystemCertificateValidator::_get_s_flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("SystemCertificateValidator").WithContext("_get_s_flags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Security::Cryptography::X509Certificates::X509KeyUsageFlags>("Mono.Net.Security", "SystemCertificateValidator", "s_flags"));
}
// Autogenerated static field setter
// Set static field: static private System.Security.Cryptography.X509Certificates.X509KeyUsageFlags s_flags
void Mono::Net::Security::SystemCertificateValidator::_set_s_flags(System::Security::Cryptography::X509Certificates::X509KeyUsageFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("SystemCertificateValidator").WithContext("_set_s_flags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Net.Security", "SystemCertificateValidator", "s_flags", value));
}
// Autogenerated method: Mono.Net.Security.SystemCertificateValidator..cctor
void Mono::Net::Security::SystemCertificateValidator::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("SystemCertificateValidator").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net.Security", "SystemCertificateValidator", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Net.Security.SystemCertificateValidator.CreateX509Chain
System::Security::Cryptography::X509Certificates::X509Chain* Mono::Net::Security::SystemCertificateValidator::CreateX509Chain(System::Security::Cryptography::X509Certificates::X509CertificateCollection* certs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("SystemCertificateValidator").WithContext("CreateX509Chain");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net.Security", "SystemCertificateValidator", "CreateX509Chain", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(certs)));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::X509Certificates::X509Chain*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, certs);
}
// Autogenerated method: Mono.Net.Security.SystemCertificateValidator.NeedsChain
bool Mono::Net::Security::SystemCertificateValidator::NeedsChain(Mono::Security::Interface::MonoTlsSettings* settings) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security").WithContext("SystemCertificateValidator").WithContext("NeedsChain");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net.Security", "SystemCertificateValidator", "NeedsChain", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(settings)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, settings);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Net.Security.Private.CallbackHelpers
#include "Mono/Net/Security/Private/CallbackHelpers.hpp"
// Including type: Mono.Net.Security.Private.CallbackHelpers/<>c__DisplayClass0_0
#include "Mono/Net/Security/Private/CallbackHelpers_--c__DisplayClass0_0.hpp"
// Including type: Mono.Net.Security.Private.CallbackHelpers/<>c__DisplayClass5_0
#include "Mono/Net/Security/Private/CallbackHelpers_--c__DisplayClass5_0.hpp"
// Including type: Mono.Net.Security.Private.CallbackHelpers/<>c__DisplayClass8_0
#include "Mono/Net/Security/Private/CallbackHelpers_--c__DisplayClass8_0.hpp"
// Including type: Mono.Security.Interface.MonoRemoteCertificateValidationCallback
#include "Mono/Security/Interface/MonoRemoteCertificateValidationCallback.hpp"
// Including type: System.Net.Security.RemoteCertificateValidationCallback
#include "System/Net/Security/RemoteCertificateValidationCallback.hpp"
// Including type: System.Net.Security.LocalCertSelectionCallback
#include "System/Net/Security/LocalCertSelectionCallback.hpp"
// Including type: Mono.Security.Interface.MonoLocalCertificateSelectionCallback
#include "Mono/Security/Interface/MonoLocalCertificateSelectionCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.Private.CallbackHelpers.PublicToMono
Mono::Security::Interface::MonoRemoteCertificateValidationCallback* Mono::Net::Security::Private::CallbackHelpers::PublicToMono(System::Net::Security::RemoteCertificateValidationCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security::Private").WithContext("CallbackHelpers").WithContext("PublicToMono");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net.Security.Private", "CallbackHelpers", "PublicToMono", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callback)));
  return ::il2cpp_utils::RunMethodThrow<Mono::Security::Interface::MonoRemoteCertificateValidationCallback*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Mono.Net.Security.Private.CallbackHelpers.MonoToPublic
System::Net::Security::RemoteCertificateValidationCallback* Mono::Net::Security::Private::CallbackHelpers::MonoToPublic(Mono::Security::Interface::MonoRemoteCertificateValidationCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security::Private").WithContext("CallbackHelpers").WithContext("MonoToPublic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net.Security.Private", "CallbackHelpers", "MonoToPublic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callback)));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Security::RemoteCertificateValidationCallback*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Mono.Net.Security.Private.CallbackHelpers.MonoToInternal
System::Net::Security::LocalCertSelectionCallback* Mono::Net::Security::Private::CallbackHelpers::MonoToInternal(Mono::Security::Interface::MonoLocalCertificateSelectionCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security::Private").WithContext("CallbackHelpers").WithContext("MonoToInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Net.Security.Private", "CallbackHelpers", "MonoToInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(callback)));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Security::LocalCertSelectionCallback*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.Private.CallbackHelpers/<>c__DisplayClass0_0
#include "Mono/Net/Security/Private/CallbackHelpers_--c__DisplayClass0_0.hpp"
// Including type: System.Net.Security.RemoteCertificateValidationCallback
#include "System/Net/Security/RemoteCertificateValidationCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
// Including type: Mono.Security.Interface.MonoSslPolicyErrors
#include "Mono/Security/Interface/MonoSslPolicyErrors.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.Private.CallbackHelpers/<>c__DisplayClass0_0.<PublicToMono>b__0
bool Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass0_0::$PublicToMono$b__0(::Il2CppString* h, System::Security::Cryptography::X509Certificates::X509Certificate* c, System::Security::Cryptography::X509Certificates::X509Chain* ch, Mono::Security::Interface::MonoSslPolicyErrors e) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security::Private").WithContext("$$c__DisplayClass0_0").WithContext("<PublicToMono>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PublicToMono>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(h, c, ch, e))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, h, c, ch, e);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.Private.CallbackHelpers/<>c__DisplayClass5_0
#include "Mono/Net/Security/Private/CallbackHelpers_--c__DisplayClass5_0.hpp"
// Including type: Mono.Security.Interface.MonoRemoteCertificateValidationCallback
#include "Mono/Security/Interface/MonoRemoteCertificateValidationCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Chain
#include "System/Security/Cryptography/X509Certificates/X509Chain.hpp"
// Including type: System.Net.Security.SslPolicyErrors
#include "System/Net/Security/SslPolicyErrors.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.Private.CallbackHelpers/<>c__DisplayClass5_0.<MonoToPublic>b__0
bool Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass5_0::$MonoToPublic$b__0(::Il2CppObject* t, System::Security::Cryptography::X509Certificates::X509Certificate* c, System::Security::Cryptography::X509Certificates::X509Chain* ch, System::Net::Security::SslPolicyErrors e) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security::Private").WithContext("$$c__DisplayClass5_0").WithContext("<MonoToPublic>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<MonoToPublic>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t, c, ch, e))));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, t, c, ch, e);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Net.Security.Private.CallbackHelpers/<>c__DisplayClass8_0
#include "Mono/Net/Security/Private/CallbackHelpers_--c__DisplayClass8_0.hpp"
// Including type: Mono.Security.Interface.MonoLocalCertificateSelectionCallback
#include "Mono/Security/Interface/MonoLocalCertificateSelectionCallback.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate
#include "System/Security/Cryptography/X509Certificates/X509Certificate.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
#include "System/Security/Cryptography/X509Certificates/X509CertificateCollection.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Net.Security.Private.CallbackHelpers/<>c__DisplayClass8_0.<MonoToInternal>b__0
System::Security::Cryptography::X509Certificates::X509Certificate* Mono::Net::Security::Private::CallbackHelpers::$$c__DisplayClass8_0::$MonoToInternal$b__0(::Il2CppString* t, System::Security::Cryptography::X509Certificates::X509CertificateCollection* lc, System::Security::Cryptography::X509Certificates::X509Certificate* rc, ::Array<::Il2CppString*>* ai) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Net::Security::Private").WithContext("$$c__DisplayClass8_0").WithContext("<MonoToInternal>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<MonoToInternal>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t, lc, rc, ai))));
  return ::il2cpp_utils::RunMethodThrow<System::Security::Cryptography::X509Certificates::X509Certificate*, false>(this, ___internal__method, t, lc, rc, ai);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Http.NtlmSession
#include "Mono/Http/NtlmSession.hpp"
// Including type: Mono.Security.Protocol.Ntlm.MessageBase
#include "Mono/Security/Protocol/Ntlm/MessageBase.hpp"
// Including type: System.Net.Authorization
#include "System/Net/Authorization.hpp"
// Including type: System.Net.WebRequest
#include "System/Net/WebRequest.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Mono.Http.NtlmSession.Authenticate
System::Net::Authorization* Mono::Http::NtlmSession::Authenticate(::Il2CppString* challenge, System::Net::WebRequest* webRequest, System::Net::ICredentials* credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Http").WithContext("NtlmSession").WithContext("Authenticate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Authenticate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(challenge, webRequest, credentials)));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Authorization*, false>(this, ___internal__method, challenge, webRequest, credentials);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: Mono.Http.NtlmClient
#include "Mono/Http/NtlmClient.hpp"
// Including type: Mono.Http.NtlmClient/<>c
#include "Mono/Http/NtlmClient_--c.hpp"
// Including type: System.Runtime.CompilerServices.ConditionalWeakTable`2
#include "System/Runtime/CompilerServices/ConditionalWeakTable_2.hpp"
// Including type: System.Net.HttpWebRequest
#include "System/Net/HttpWebRequest.hpp"
// Including type: Mono.Http.NtlmSession
#include "Mono/Http/NtlmSession.hpp"
// Including type: System.Net.Authorization
#include "System/Net/Authorization.hpp"
// Including type: System.Net.WebRequest
#include "System/Net/WebRequest.hpp"
// Including type: System.Net.ICredentials
#include "System/Net/ICredentials.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Net.HttpWebRequest,Mono.Http.NtlmSession> cache
System::Runtime::CompilerServices::ConditionalWeakTable_2<System::Net::HttpWebRequest*, Mono::Http::NtlmSession*>* Mono::Http::NtlmClient::_get_cache() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Http").WithContext("NtlmClient").WithContext("_get_cache");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Runtime::CompilerServices::ConditionalWeakTable_2<System::Net::HttpWebRequest*, Mono::Http::NtlmSession*>*>("Mono.Http", "NtlmClient", "cache")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Runtime.CompilerServices.ConditionalWeakTable`2<System.Net.HttpWebRequest,Mono.Http.NtlmSession> cache
void Mono::Http::NtlmClient::_set_cache(System::Runtime::CompilerServices::ConditionalWeakTable_2<System::Net::HttpWebRequest*, Mono::Http::NtlmSession*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Http").WithContext("NtlmClient").WithContext("_set_cache");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Mono.Http", "NtlmClient", "cache", value));
}
// Autogenerated method: Mono.Http.NtlmClient..cctor
void Mono::Http::NtlmClient::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Http").WithContext("NtlmClient").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Mono.Http", "NtlmClient", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Http.NtlmClient.Authenticate
System::Net::Authorization* Mono::Http::NtlmClient::Authenticate(::Il2CppString* challenge, System::Net::WebRequest* webRequest, System::Net::ICredentials* credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Http").WithContext("NtlmClient").WithContext("Authenticate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Authenticate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(challenge, webRequest, credentials)));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Authorization*, false>(this, ___internal__method, challenge, webRequest, credentials);
}
// Autogenerated method: Mono.Http.NtlmClient.PreAuthenticate
System::Net::Authorization* Mono::Http::NtlmClient::PreAuthenticate(System::Net::WebRequest* webRequest, System::Net::ICredentials* credentials) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Http").WithContext("NtlmClient").WithContext("PreAuthenticate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PreAuthenticate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(webRequest, credentials)));
  return ::il2cpp_utils::RunMethodThrow<System::Net::Authorization*, false>(this, ___internal__method, webRequest, credentials);
}
// Autogenerated method: Mono.Http.NtlmClient.get_AuthenticationType
::Il2CppString* Mono::Http::NtlmClient::get_AuthenticationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Http").WithContext("NtlmClient").WithContext("get_AuthenticationType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_AuthenticationType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Mono.Http.NtlmClient/<>c
#include "Mono/Http/NtlmClient_--c.hpp"
// Including type: System.Net.HttpWebRequest
#include "System/Net/HttpWebRequest.hpp"
// Including type: Mono.Http.NtlmSession
#include "Mono/Http/NtlmSession.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Mono.Http.NtlmClient/<>c <>9
Mono::Http::NtlmClient::$$c* Mono::Http::NtlmClient::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Http").WithContext("$$c").WithContext("_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<Mono::Http::NtlmClient::$$c*>("Mono.Http", "NtlmClient/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Mono.Http.NtlmClient/<>c <>9
void Mono::Http::NtlmClient::$$c::_set_$$9(Mono::Http::NtlmClient::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Http").WithContext("$$c").WithContext("_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Mono.Http", "NtlmClient/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Runtime.CompilerServices.ConditionalWeakTable`2/CreateValueCallback<System.Net.HttpWebRequest,Mono.Http.NtlmSession> <>9__1_0
typename System::Runtime::CompilerServices::ConditionalWeakTable_2<System::Net::HttpWebRequest*, Mono::Http::NtlmSession*>::CreateValueCallback* Mono::Http::NtlmClient::$$c::_get_$$9__1_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Http").WithContext("$$c").WithContext("_get_$$9__1_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<typename System::Runtime::CompilerServices::ConditionalWeakTable_2<System::Net::HttpWebRequest*, Mono::Http::NtlmSession*>::CreateValueCallback*>("Mono.Http", "NtlmClient/<>c", "<>9__1_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Runtime.CompilerServices.ConditionalWeakTable`2/CreateValueCallback<System.Net.HttpWebRequest,Mono.Http.NtlmSession> <>9__1_0
void Mono::Http::NtlmClient::$$c::_set_$$9__1_0(typename System::Runtime::CompilerServices::ConditionalWeakTable_2<System::Net::HttpWebRequest*, Mono::Http::NtlmSession*>::CreateValueCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Http").WithContext("$$c").WithContext("_set_$$9__1_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Mono.Http", "NtlmClient/<>c", "<>9__1_0", value)));
}
// Autogenerated method: Mono.Http.NtlmClient/<>c..cctor
void Mono::Http::NtlmClient::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Http").WithContext("$$c").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Mono.Http", "NtlmClient/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Mono.Http.NtlmClient/<>c.<Authenticate>b__1_0
Mono::Http::NtlmSession* Mono::Http::NtlmClient::$$c::$Authenticate$b__1_0(System::Net::HttpWebRequest* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Mono::Http").WithContext("$$c").WithContext("<Authenticate>b__1_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Authenticate>b__1_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(x))));
  return ::il2cpp_utils::RunMethodThrow<Mono::Http::NtlmSession*, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.NativeMethods
#include "Microsoft/Win32/NativeMethods.hpp"
// Including type: System.Runtime.InteropServices.HandleRef
#include "System/Runtime/InteropServices/HandleRef.hpp"
// Including type: System.Runtime.InteropServices.SafeHandle
#include "System/Runtime/InteropServices/SafeHandle.hpp"
// Including type: Microsoft.Win32.SafeHandles.SafeWaitHandle
#include "Microsoft/Win32/SafeHandles/SafeWaitHandle.hpp"
// Including type: Microsoft.Win32.SafeHandles.SafeProcessHandle
#include "Microsoft/Win32/SafeHandles/SafeProcessHandle.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Microsoft.Win32.NativeMethods.DuplicateHandle
bool Microsoft::Win32::NativeMethods::DuplicateHandle(System::Runtime::InteropServices::HandleRef hSourceProcessHandle, System::Runtime::InteropServices::SafeHandle* hSourceHandle, System::Runtime::InteropServices::HandleRef hTargetProcess, Microsoft::Win32::SafeHandles::SafeWaitHandle*& targetHandle, int dwDesiredAccess, bool bInheritHandle, int dwOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("NativeMethods").WithContext("DuplicateHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "DuplicateHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hSourceProcessHandle, hSourceHandle, hTargetProcess, targetHandle, dwDesiredAccess, bInheritHandle, dwOptions)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hSourceProcessHandle, hSourceHandle, hTargetProcess, targetHandle, dwDesiredAccess, bInheritHandle, dwOptions);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.DuplicateHandle
bool Microsoft::Win32::NativeMethods::DuplicateHandle(System::Runtime::InteropServices::HandleRef hSourceProcessHandle, System::Runtime::InteropServices::HandleRef hSourceHandle, System::Runtime::InteropServices::HandleRef hTargetProcess, Microsoft::Win32::SafeHandles::SafeProcessHandle*& targetHandle, int dwDesiredAccess, bool bInheritHandle, int dwOptions) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("NativeMethods").WithContext("DuplicateHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "DuplicateHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hSourceProcessHandle, hSourceHandle, hTargetProcess, targetHandle, dwDesiredAccess, bInheritHandle, dwOptions)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hSourceProcessHandle, hSourceHandle, hTargetProcess, targetHandle, dwDesiredAccess, bInheritHandle, dwOptions);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.GetCurrentProcess
System::IntPtr Microsoft::Win32::NativeMethods::GetCurrentProcess() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("NativeMethods").WithContext("GetCurrentProcess");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "GetCurrentProcess", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::IntPtr, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.GetExitCodeProcess
bool Microsoft::Win32::NativeMethods::GetExitCodeProcess(System::IntPtr processHandle, int& exitCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("NativeMethods").WithContext("GetExitCodeProcess");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "GetExitCodeProcess", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(processHandle, exitCode)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, processHandle, exitCode);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.GetExitCodeProcess
bool Microsoft::Win32::NativeMethods::GetExitCodeProcess(Microsoft::Win32::SafeHandles::SafeProcessHandle* processHandle, int& exitCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("NativeMethods").WithContext("GetExitCodeProcess");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "GetExitCodeProcess", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(processHandle, exitCode)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, processHandle, exitCode);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.TerminateProcess
bool Microsoft::Win32::NativeMethods::TerminateProcess(System::IntPtr processHandle, int exitCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("NativeMethods").WithContext("TerminateProcess");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "TerminateProcess", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(processHandle, exitCode)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, processHandle, exitCode);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.TerminateProcess
bool Microsoft::Win32::NativeMethods::TerminateProcess(Microsoft::Win32::SafeHandles::SafeProcessHandle* processHandle, int exitCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("NativeMethods").WithContext("TerminateProcess");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "TerminateProcess", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(processHandle, exitCode)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, processHandle, exitCode);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.GetProcessTimes
bool Microsoft::Win32::NativeMethods::GetProcessTimes(System::IntPtr handle, int64_t& creation, int64_t& exit, int64_t& kernel, int64_t& user) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("NativeMethods").WithContext("GetProcessTimes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "GetProcessTimes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle, creation, exit, kernel, user)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, creation, exit, kernel, user);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.GetProcessTimes
bool Microsoft::Win32::NativeMethods::GetProcessTimes(Microsoft::Win32::SafeHandles::SafeProcessHandle* handle, int64_t& creation, int64_t& exit, int64_t& kernel, int64_t& user) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("NativeMethods").WithContext("GetProcessTimes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "GetProcessTimes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle, creation, exit, kernel, user)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle, creation, exit, kernel, user);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.GetCurrentProcessId
int Microsoft::Win32::NativeMethods::GetCurrentProcessId() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("NativeMethods").WithContext("GetCurrentProcessId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "GetCurrentProcessId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Microsoft.Win32.NativeMethods.CloseProcess
bool Microsoft::Win32::NativeMethods::CloseProcess(System::IntPtr handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32").WithContext("NativeMethods").WithContext("CloseProcess");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32", "NativeMethods", "CloseProcess", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(handle)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, handle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Microsoft.Win32.SafeHandles.SafeProcessHandle
#include "Microsoft/Win32/SafeHandles/SafeProcessHandle.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static Microsoft.Win32.SafeHandles.SafeProcessHandle InvalidHandle
Microsoft::Win32::SafeHandles::SafeProcessHandle* Microsoft::Win32::SafeHandles::SafeProcessHandle::_get_InvalidHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32::SafeHandles").WithContext("SafeProcessHandle").WithContext("_get_InvalidHandle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Microsoft::Win32::SafeHandles::SafeProcessHandle*>("Microsoft.Win32.SafeHandles", "SafeProcessHandle", "InvalidHandle"));
}
// Autogenerated static field setter
// Set static field: static Microsoft.Win32.SafeHandles.SafeProcessHandle InvalidHandle
void Microsoft::Win32::SafeHandles::SafeProcessHandle::_set_InvalidHandle(Microsoft::Win32::SafeHandles::SafeProcessHandle* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32::SafeHandles").WithContext("SafeProcessHandle").WithContext("_set_InvalidHandle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Microsoft.Win32.SafeHandles", "SafeProcessHandle", "InvalidHandle", value));
}
// Autogenerated method: Microsoft.Win32.SafeHandles.SafeProcessHandle..cctor
void Microsoft::Win32::SafeHandles::SafeProcessHandle::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32::SafeHandles").WithContext("SafeProcessHandle").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Microsoft.Win32.SafeHandles", "SafeProcessHandle", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: Microsoft.Win32.SafeHandles.SafeProcessHandle.ReleaseHandle
bool Microsoft::Win32::SafeHandles::SafeProcessHandle::ReleaseHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("Microsoft::Win32::SafeHandles").WithContext("SafeProcessHandle").WithContext("ReleaseHandle");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReleaseHandle", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.UriBuilder
#include "System/UriBuilder.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.UriBuilder.Init
void System::UriBuilder::Init(System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriBuilder").WithContext("Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uri)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, uri);
}
// Autogenerated method: System.UriBuilder.set_Host
void System::UriBuilder::set_Host(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriBuilder").WithContext("set_Host");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Host", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.UriBuilder.set_Path
void System::UriBuilder::set_Path(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriBuilder").WithContext("set_Path");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Path", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.UriBuilder.set_Port
void System::UriBuilder::set_Port(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriBuilder").WithContext("set_Port");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Port", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.UriBuilder.set_Query
void System::UriBuilder::set_Query(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriBuilder").WithContext("set_Query");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Query", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.UriBuilder.set_Scheme
void System::UriBuilder::set_Scheme(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriBuilder").WithContext("set_Scheme");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_Scheme", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: System.UriBuilder.get_Uri
System::Uri* System::UriBuilder::get_Uri() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriBuilder").WithContext("get_Uri");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Uri", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Uri*, false>(this, ___internal__method);
}
// Autogenerated method: System.UriBuilder.SetFieldsFromUri
void System::UriBuilder::SetFieldsFromUri(System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriBuilder").WithContext("SetFieldsFromUri");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetFieldsFromUri", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uri)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, uri);
}
// Autogenerated method: System.UriBuilder.Equals
bool System::UriBuilder::Equals(::Il2CppObject* rparam) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriBuilder").WithContext("Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rparam)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, rparam);
}
// Autogenerated method: System.UriBuilder.GetHashCode
int System::UriBuilder::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriBuilder").WithContext("GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.UriBuilder.ToString
::Il2CppString* System::UriBuilder::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriBuilder").WithContext("ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.IriHelper
#include "System/IriHelper.hpp"
// Including type: System.UriComponents
#include "System/UriComponents.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.IriHelper.CheckIriUnicodeRange
bool System::IriHelper::CheckIriUnicodeRange(::Il2CppChar unicode, bool isQuery) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("IriHelper").WithContext("CheckIriUnicodeRange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "IriHelper", "CheckIriUnicodeRange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(unicode, isQuery)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, unicode, isQuery);
}
// Autogenerated method: System.IriHelper.CheckIriUnicodeRange
bool System::IriHelper::CheckIriUnicodeRange(::Il2CppChar highSurr, ::Il2CppChar lowSurr, bool& surrogatePair, bool isQuery) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("IriHelper").WithContext("CheckIriUnicodeRange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "IriHelper", "CheckIriUnicodeRange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(highSurr, lowSurr, surrogatePair, isQuery)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, highSurr, lowSurr, surrogatePair, isQuery);
}
// Autogenerated method: System.IriHelper.CheckIsReserved
bool System::IriHelper::CheckIsReserved(::Il2CppChar ch, System::UriComponents component) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("IriHelper").WithContext("CheckIsReserved");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "IriHelper", "CheckIsReserved", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch, component)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch, component);
}
// Autogenerated method: System.IriHelper.EscapeUnescapeIri
::Il2CppString* System::IriHelper::EscapeUnescapeIri(::Il2CppChar* pInput, int start, int end, System::UriComponents component) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("IriHelper").WithContext("EscapeUnescapeIri");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "IriHelper", "EscapeUnescapeIri", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pInput, start, end, component)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pInput, start, end, component);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.Uri/UriInfo
#include "System/Uri_UriInfo.hpp"
// Including type: System.Uri/Offset
#include "System/Uri_Offset.hpp"
// Including type: System.Uri/MoreInfo
#include "System/Uri_MoreInfo.hpp"
// Including type: System.Uri/Check
#include "System/Uri_Check.hpp"
// Including type: System.UriParser
#include "System/UriParser.hpp"
// Including type: System.ParsingError
#include "System/ParsingError.hpp"
// Including type: System.UriFormatException
#include "System/UriFormatException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
// Including type: System.UriHostNameType
#include "System/UriHostNameType.hpp"
// Including type: System.UriComponents
#include "System/UriComponents.hpp"
// Including type: System.UriFormat
#include "System/UriFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeFile
::Il2CppString* System::Uri::_get_UriSchemeFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_get_UriSchemeFile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System", "Uri", "UriSchemeFile"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeFile
void System::Uri::_set_UriSchemeFile(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_set_UriSchemeFile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeFile", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeFtp
::Il2CppString* System::Uri::_get_UriSchemeFtp() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_get_UriSchemeFtp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System", "Uri", "UriSchemeFtp"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeFtp
void System::Uri::_set_UriSchemeFtp(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_set_UriSchemeFtp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeFtp", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeGopher
::Il2CppString* System::Uri::_get_UriSchemeGopher() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_get_UriSchemeGopher");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System", "Uri", "UriSchemeGopher"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeGopher
void System::Uri::_set_UriSchemeGopher(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_set_UriSchemeGopher");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeGopher", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeHttp
::Il2CppString* System::Uri::_get_UriSchemeHttp() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_get_UriSchemeHttp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System", "Uri", "UriSchemeHttp"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeHttp
void System::Uri::_set_UriSchemeHttp(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_set_UriSchemeHttp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeHttp", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeHttps
::Il2CppString* System::Uri::_get_UriSchemeHttps() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_get_UriSchemeHttps");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System", "Uri", "UriSchemeHttps"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeHttps
void System::Uri::_set_UriSchemeHttps(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_set_UriSchemeHttps");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeHttps", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String UriSchemeWs
::Il2CppString* System::Uri::_get_UriSchemeWs() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_get_UriSchemeWs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System", "Uri", "UriSchemeWs"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String UriSchemeWs
void System::Uri::_set_UriSchemeWs(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_set_UriSchemeWs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeWs", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.String UriSchemeWss
::Il2CppString* System::Uri::_get_UriSchemeWss() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_get_UriSchemeWss");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System", "Uri", "UriSchemeWss"));
}
// Autogenerated static field setter
// Set static field: static readonly System.String UriSchemeWss
void System::Uri::_set_UriSchemeWss(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_set_UriSchemeWss");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeWss", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeMailto
::Il2CppString* System::Uri::_get_UriSchemeMailto() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_get_UriSchemeMailto");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System", "Uri", "UriSchemeMailto"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeMailto
void System::Uri::_set_UriSchemeMailto(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_set_UriSchemeMailto");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeMailto", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeNews
::Il2CppString* System::Uri::_get_UriSchemeNews() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_get_UriSchemeNews");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System", "Uri", "UriSchemeNews"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeNews
void System::Uri::_set_UriSchemeNews(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_set_UriSchemeNews");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeNews", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeNntp
::Il2CppString* System::Uri::_get_UriSchemeNntp() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_get_UriSchemeNntp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System", "Uri", "UriSchemeNntp"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeNntp
void System::Uri::_set_UriSchemeNntp(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_set_UriSchemeNntp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeNntp", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeNetTcp
::Il2CppString* System::Uri::_get_UriSchemeNetTcp() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_get_UriSchemeNetTcp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System", "Uri", "UriSchemeNetTcp"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeNetTcp
void System::Uri::_set_UriSchemeNetTcp(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_set_UriSchemeNetTcp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeNetTcp", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String UriSchemeNetPipe
::Il2CppString* System::Uri::_get_UriSchemeNetPipe() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_get_UriSchemeNetPipe");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System", "Uri", "UriSchemeNetPipe"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String UriSchemeNetPipe
void System::Uri::_set_UriSchemeNetPipe(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_set_UriSchemeNetPipe");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "UriSchemeNetPipe", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.String SchemeDelimiter
::Il2CppString* System::Uri::_get_SchemeDelimiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_get_SchemeDelimiter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppString*>("System", "Uri", "SchemeDelimiter"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.String SchemeDelimiter
void System::Uri::_set_SchemeDelimiter(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_set_SchemeDelimiter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "SchemeDelimiter", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean s_ConfigInitialized
bool System::Uri::_get_s_ConfigInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_get_s_ConfigInitialized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "Uri", "s_ConfigInitialized"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean s_ConfigInitialized
void System::Uri::_set_s_ConfigInitialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_set_s_ConfigInitialized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "s_ConfigInitialized", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean s_ConfigInitializing
bool System::Uri::_get_s_ConfigInitializing() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_get_s_ConfigInitializing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "Uri", "s_ConfigInitializing"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean s_ConfigInitializing
void System::Uri::_set_s_ConfigInitializing(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_set_s_ConfigInitializing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "s_ConfigInitializing", value));
}
// Autogenerated static field getter
// Get static field: static private System.UriIdnScope s_IdnScope
System::UriIdnScope System::Uri::_get_s_IdnScope() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_get_s_IdnScope");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriIdnScope>("System", "Uri", "s_IdnScope"));
}
// Autogenerated static field setter
// Set static field: static private System.UriIdnScope s_IdnScope
void System::Uri::_set_s_IdnScope(System::UriIdnScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_set_s_IdnScope");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "s_IdnScope", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean s_IriParsing
bool System::Uri::_get_s_IriParsing() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_get_s_IriParsing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "Uri", "s_IriParsing"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean s_IriParsing
void System::Uri::_set_s_IriParsing(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_set_s_IriParsing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "s_IriParsing", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean useDotNetRelativeOrAbsolute
bool System::Uri::_get_useDotNetRelativeOrAbsolute() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_get_useDotNetRelativeOrAbsolute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "Uri", "useDotNetRelativeOrAbsolute"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean useDotNetRelativeOrAbsolute
void System::Uri::_set_useDotNetRelativeOrAbsolute(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_set_useDotNetRelativeOrAbsolute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "useDotNetRelativeOrAbsolute", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Boolean IsWindowsFileSystem
bool System::Uri::_get_IsWindowsFileSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_get_IsWindowsFileSystem");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("System", "Uri", "IsWindowsFileSystem"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Boolean IsWindowsFileSystem
void System::Uri::_set_IsWindowsFileSystem(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_set_IsWindowsFileSystem");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "IsWindowsFileSystem", value));
}
// Autogenerated static field getter
// Get static field: static private System.Object s_initLock
::Il2CppObject* System::Uri::_get_s_initLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_get_s_initLock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("System", "Uri", "s_initLock"));
}
// Autogenerated static field setter
// Set static field: static private System.Object s_initLock
void System::Uri::_set_s_initLock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_set_s_initLock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "s_initLock", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Char[] HexLowerChars
::Array<::Il2CppChar>* System::Uri::_get_HexLowerChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_get_HexLowerChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System", "Uri", "HexLowerChars"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Char[] HexLowerChars
void System::Uri::_set_HexLowerChars(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_set_HexLowerChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "HexLowerChars", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] _WSchars
::Array<::Il2CppChar>* System::Uri::_get__WSchars() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_get__WSchars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System", "Uri", "_WSchars"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] _WSchars
void System::Uri::_set__WSchars(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("_set__WSchars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri", "_WSchars", value));
}
// Autogenerated method: System.Uri.get_IsImplicitFile
bool System::Uri::get_IsImplicitFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("get_IsImplicitFile");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsImplicitFile", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsUncOrDosPath
bool System::Uri::get_IsUncOrDosPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("get_IsUncOrDosPath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsUncOrDosPath", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsDosPath
bool System::Uri::get_IsDosPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("get_IsDosPath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsDosPath", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsUncPath
bool System::Uri::get_IsUncPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("get_IsUncPath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsUncPath", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_HostType
System::Uri::Flags System::Uri::get_HostType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("get_HostType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_HostType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Uri::Flags, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_Syntax
System::UriParser* System::Uri::get_Syntax() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("get_Syntax");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Syntax", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::UriParser*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsNotAbsoluteUri
bool System::Uri::get_IsNotAbsoluteUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("get_IsNotAbsoluteUri");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsNotAbsoluteUri", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.IriParsingStatic
bool System::Uri::IriParsingStatic(System::UriParser* syntax) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("IriParsingStatic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "IriParsingStatic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(syntax)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, syntax);
}
// Autogenerated method: System.Uri.get_AllowIdn
bool System::Uri::get_AllowIdn() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("get_AllowIdn");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_AllowIdn", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.AllowIdnStatic
bool System::Uri::AllowIdnStatic(System::UriParser* syntax, System::Uri::Flags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("AllowIdnStatic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AllowIdnStatic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(syntax, flags)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, syntax, flags);
}
// Autogenerated method: System.Uri.IsIntranet
bool System::Uri::IsIntranet(::Il2CppString* schemeHost) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("IsIntranet");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsIntranet", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(schemeHost)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, schemeHost);
}
// Autogenerated method: System.Uri.get_UserDrivenParsing
bool System::Uri::get_UserDrivenParsing() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("get_UserDrivenParsing");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_UserDrivenParsing", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.SetUserDrivenParsing
void System::Uri::SetUserDrivenParsing() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("SetUserDrivenParsing");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetUserDrivenParsing", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_SecuredPathIndex
uint16_t System::Uri::get_SecuredPathIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("get_SecuredPathIndex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_SecuredPathIndex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<uint16_t, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.NotAny
bool System::Uri::NotAny(System::Uri::Flags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("NotAny");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "NotAny", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(flags)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, flags);
}
// Autogenerated method: System.Uri.InFact
bool System::Uri::InFact(System::Uri::Flags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("InFact");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InFact", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(flags)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, flags);
}
// Autogenerated method: System.Uri.StaticNotAny
bool System::Uri::StaticNotAny(System::Uri::Flags allFlags, System::Uri::Flags checkFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("StaticNotAny");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "StaticNotAny", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(allFlags, checkFlags)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, allFlags, checkFlags);
}
// Autogenerated method: System.Uri.StaticInFact
bool System::Uri::StaticInFact(System::Uri::Flags allFlags, System::Uri::Flags checkFlags) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("StaticInFact");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "StaticInFact", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(allFlags, checkFlags)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, allFlags, checkFlags);
}
// Autogenerated method: System.Uri.EnsureUriInfo
System::Uri::UriInfo* System::Uri::EnsureUriInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("EnsureUriInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EnsureUriInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Uri::UriInfo*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.EnsureParseRemaining
void System::Uri::EnsureParseRemaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("EnsureParseRemaining");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EnsureParseRemaining", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.EnsureHostString
void System::Uri::EnsureHostString(bool allowDnsOptimization) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("EnsureHostString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EnsureHostString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(allowDnsOptimization)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, allowDnsOptimization);
}
// Autogenerated method: System.Uri.CreateUri
void System::Uri::CreateUri(System::Uri* baseUri, ::Il2CppString* relativeUri, bool dontEscape) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("CreateUri");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateUri", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(baseUri, relativeUri, dontEscape)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, baseUri, relativeUri, dontEscape);
}
// Autogenerated method: System.Uri.GetCombinedString
System::ParsingError System::Uri::GetCombinedString(System::Uri* baseUri, ::Il2CppString* relativeStr, bool dontEscape, ::Il2CppString*& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("GetCombinedString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "GetCombinedString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(baseUri, relativeStr, dontEscape, result)));
  return ::il2cpp_utils::RunMethodThrow<System::ParsingError, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, baseUri, relativeStr, dontEscape, result);
}
// Autogenerated method: System.Uri.GetException
System::UriFormatException* System::Uri::GetException(System::ParsingError err) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("GetException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "GetException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(err)));
  return ::il2cpp_utils::RunMethodThrow<System::UriFormatException*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, err);
}
// Autogenerated method: System.Uri.GetObjectData
void System::Uri::GetObjectData(System::Runtime::Serialization::SerializationInfo* serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("GetObjectData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetObjectData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(serializationInfo, streamingContext)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Uri.get_AbsolutePath
::Il2CppString* System::Uri::get_AbsolutePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("get_AbsolutePath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_AbsolutePath", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_PrivateAbsolutePath
::Il2CppString* System::Uri::get_PrivateAbsolutePath() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("get_PrivateAbsolutePath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_PrivateAbsolutePath", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_AbsoluteUri
::Il2CppString* System::Uri::get_AbsoluteUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("get_AbsoluteUri");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_AbsoluteUri", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_LocalPath
::Il2CppString* System::Uri::get_LocalPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("get_LocalPath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_LocalPath", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_Authority
::Il2CppString* System::Uri::get_Authority() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("get_Authority");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Authority", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_HostNameType
System::UriHostNameType System::Uri::get_HostNameType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("get_HostNameType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_HostNameType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::UriHostNameType, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsDefaultPort
bool System::Uri::get_IsDefaultPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("get_IsDefaultPort");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsDefaultPort", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsFile
bool System::Uri::get_IsFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("get_IsFile");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsFile", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsLoopback
bool System::Uri::get_IsLoopback() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("get_IsLoopback");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsLoopback", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_PathAndQuery
::Il2CppString* System::Uri::get_PathAndQuery() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("get_PathAndQuery");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_PathAndQuery", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsUnc
bool System::Uri::get_IsUnc() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("get_IsUnc");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsUnc", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_Host
::Il2CppString* System::Uri::get_Host() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("get_Host");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Host", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.StaticIsFile
bool System::Uri::StaticIsFile(System::UriParser* syntax) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("StaticIsFile");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "StaticIsFile", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(syntax)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, syntax);
}
// Autogenerated method: System.Uri.get_InitializeLock
::Il2CppObject* System::Uri::get_InitializeLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("get_InitializeLock");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "get_InitializeLock", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Uri.InitializeUriConfig
void System::Uri::InitializeUriConfig() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("InitializeUriConfig");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "InitializeUriConfig", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Uri.GetLocalPath
::Il2CppString* System::Uri::GetLocalPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("GetLocalPath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetLocalPath", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_Port
int System::Uri::get_Port() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("get_Port");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Port", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_Query
::Il2CppString* System::Uri::get_Query() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("get_Query");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Query", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_Fragment
::Il2CppString* System::Uri::get_Fragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("get_Fragment");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Fragment", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_Scheme
::Il2CppString* System::Uri::get_Scheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("get_Scheme");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Scheme", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_OriginalStringSwitched
bool System::Uri::get_OriginalStringSwitched() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("get_OriginalStringSwitched");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_OriginalStringSwitched", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_OriginalString
::Il2CppString* System::Uri::get_OriginalString() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("get_OriginalString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_OriginalString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_DnsSafeHost
::Il2CppString* System::Uri::get_DnsSafeHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("get_DnsSafeHost");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DnsSafeHost", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_IsAbsoluteUri
bool System::Uri::get_IsAbsoluteUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("get_IsAbsoluteUri");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsAbsoluteUri", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_UserEscaped
bool System::Uri::get_UserEscaped() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("get_UserEscaped");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_UserEscaped", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.get_UserInfo
::Il2CppString* System::Uri::get_UserInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("get_UserInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_UserInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.IsGenDelim
bool System::Uri::IsGenDelim(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("IsGenDelim");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "IsGenDelim", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Uri.CheckSchemeName
bool System::Uri::CheckSchemeName(::Il2CppString* schemeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("CheckSchemeName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "CheckSchemeName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(schemeName)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, schemeName);
}
// Autogenerated method: System.Uri.IsHexDigit
bool System::Uri::IsHexDigit(::Il2CppChar character) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("IsHexDigit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "IsHexDigit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(character)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, character);
}
// Autogenerated method: System.Uri.FromHex
int System::Uri::FromHex(::Il2CppChar digit) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("FromHex");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "FromHex", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(digit)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, digit);
}
// Autogenerated method: System.Uri.CheckForColonInFirstPathSegment
bool System::Uri::CheckForColonInFirstPathSegment(::Il2CppString* uriString) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("CheckForColonInFirstPathSegment");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "CheckForColonInFirstPathSegment", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uriString)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, uriString);
}
// Autogenerated method: System.Uri.InternalEscapeString
::Il2CppString* System::Uri::InternalEscapeString(::Il2CppString* rawString) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("InternalEscapeString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "InternalEscapeString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(rawString)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, rawString);
}
// Autogenerated method: System.Uri.ParseScheme
System::ParsingError System::Uri::ParseScheme(::Il2CppString* uriString, System::Uri::Flags& flags, System::UriParser*& syntax) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("ParseScheme");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "ParseScheme", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uriString, flags, syntax)));
  return ::il2cpp_utils::RunMethodThrow<System::ParsingError, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, uriString, flags, syntax);
}
// Autogenerated method: System.Uri.ParseMinimal
System::UriFormatException* System::Uri::ParseMinimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("ParseMinimal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ParseMinimal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::UriFormatException*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.PrivateParseMinimal
System::ParsingError System::Uri::PrivateParseMinimal() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("PrivateParseMinimal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PrivateParseMinimal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::ParsingError, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.PrivateParseMinimalIri
void System::Uri::PrivateParseMinimalIri(::Il2CppString* newHost, uint16_t idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("PrivateParseMinimalIri");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PrivateParseMinimalIri", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(newHost, idx)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, newHost, idx);
}
// Autogenerated method: System.Uri.CreateUriInfo
void System::Uri::CreateUriInfo(System::Uri::Flags cF) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("CreateUriInfo");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateUriInfo", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(cF)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, cF);
}
// Autogenerated method: System.Uri.CreateHostString
void System::Uri::CreateHostString() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("CreateHostString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateHostString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.CreateHostStringHelper
::Il2CppString* System::Uri::CreateHostStringHelper(::Il2CppString* str, uint16_t idx, uint16_t end, System::Uri::Flags& flags, ::Il2CppString*& scopeId) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("CreateHostStringHelper");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "CreateHostStringHelper", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str, idx, end, flags, scopeId)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, idx, end, flags, scopeId);
}
// Autogenerated method: System.Uri.GetHostViaCustomSyntax
void System::Uri::GetHostViaCustomSyntax() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("GetHostViaCustomSyntax");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHostViaCustomSyntax", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.GetParts
::Il2CppString* System::Uri::GetParts(System::UriComponents uriParts, System::UriFormat formatAs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("GetParts");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetParts", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uriParts, formatAs)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, uriParts, formatAs);
}
// Autogenerated method: System.Uri.GetEscapedParts
::Il2CppString* System::Uri::GetEscapedParts(System::UriComponents uriParts) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("GetEscapedParts");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetEscapedParts", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uriParts)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, uriParts);
}
// Autogenerated method: System.Uri.GetUnescapedParts
::Il2CppString* System::Uri::GetUnescapedParts(System::UriComponents uriParts, System::UriFormat formatAs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("GetUnescapedParts");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetUnescapedParts", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uriParts, formatAs)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, uriParts, formatAs);
}
// Autogenerated method: System.Uri.ReCreateParts
::Il2CppString* System::Uri::ReCreateParts(System::UriComponents parts, uint16_t nonCanonical, System::UriFormat formatAs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("ReCreateParts");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReCreateParts", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(parts, nonCanonical, formatAs)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, parts, nonCanonical, formatAs);
}
// Autogenerated method: System.Uri.GetUriPartsFromUserString
::Il2CppString* System::Uri::GetUriPartsFromUserString(System::UriComponents uriParts) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("GetUriPartsFromUserString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetUriPartsFromUserString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uriParts)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, uriParts);
}
// Autogenerated method: System.Uri.ParseRemaining
void System::Uri::ParseRemaining() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("ParseRemaining");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ParseRemaining", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.ParseSchemeCheckImplicitFile
uint16_t System::Uri::ParseSchemeCheckImplicitFile(::Il2CppChar* uriString, uint16_t length, System::ParsingError& err, System::Uri::Flags& flags, System::UriParser*& syntax) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("ParseSchemeCheckImplicitFile");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "ParseSchemeCheckImplicitFile", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uriString, length, err, flags, syntax)));
  return ::il2cpp_utils::RunMethodThrow<uint16_t, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, uriString, length, err, flags, syntax);
}
// Autogenerated method: System.Uri.CheckKnownSchemes
bool System::Uri::CheckKnownSchemes(int64_t* lptr, uint16_t nChars, System::UriParser*& syntax) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("CheckKnownSchemes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "CheckKnownSchemes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lptr, nChars, syntax)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lptr, nChars, syntax);
}
// Autogenerated method: System.Uri.CheckSchemeSyntax
System::ParsingError System::Uri::CheckSchemeSyntax(::Il2CppChar* ptr, uint16_t length, System::UriParser*& syntax) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("CheckSchemeSyntax");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "CheckSchemeSyntax", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ptr, length, syntax)));
  return ::il2cpp_utils::RunMethodThrow<System::ParsingError, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ptr, length, syntax);
}
// Autogenerated method: System.Uri.CheckAuthorityHelper
uint16_t System::Uri::CheckAuthorityHelper(::Il2CppChar* pString, uint16_t idx, uint16_t length, System::ParsingError& err, System::Uri::Flags& flags, System::UriParser* syntax, ::Il2CppString*& newHost) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("CheckAuthorityHelper");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CheckAuthorityHelper", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pString, idx, length, err, flags, syntax, newHost)));
  return ::il2cpp_utils::RunMethodThrow<uint16_t, false>(this, ___internal__method, pString, idx, length, err, flags, syntax, newHost);
}
// Autogenerated method: System.Uri.CheckAuthorityHelperHandleDnsIri
void System::Uri::CheckAuthorityHelperHandleDnsIri(::Il2CppChar* pString, uint16_t start, int end, int startInput, bool iriParsing, bool hasUnicode, System::UriParser* syntax, ::Il2CppString* userInfoString, System::Uri::Flags& flags, bool& justNormalized, ::Il2CppString*& newHost, System::ParsingError& err) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("CheckAuthorityHelperHandleDnsIri");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CheckAuthorityHelperHandleDnsIri", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pString, start, end, startInput, iriParsing, hasUnicode, syntax, userInfoString, flags, justNormalized, newHost, err)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pString, start, end, startInput, iriParsing, hasUnicode, syntax, userInfoString, flags, justNormalized, newHost, err);
}
// Autogenerated method: System.Uri.CheckAuthorityHelperHandleAnyHostIri
void System::Uri::CheckAuthorityHelperHandleAnyHostIri(::Il2CppChar* pString, int startInput, int end, bool iriParsing, bool hasUnicode, System::UriParser* syntax, System::Uri::Flags& flags, ::Il2CppString*& newHost, System::ParsingError& err) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("CheckAuthorityHelperHandleAnyHostIri");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CheckAuthorityHelperHandleAnyHostIri", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pString, startInput, end, iriParsing, hasUnicode, syntax, flags, newHost, err)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, pString, startInput, end, iriParsing, hasUnicode, syntax, flags, newHost, err);
}
// Autogenerated method: System.Uri.FindEndOfComponent
void System::Uri::FindEndOfComponent(::Il2CppString* input, uint16_t& idx, uint16_t end, ::Il2CppChar delim) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("FindEndOfComponent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FindEndOfComponent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input, idx, end, delim)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, input, idx, end, delim);
}
// Autogenerated method: System.Uri.FindEndOfComponent
void System::Uri::FindEndOfComponent(::Il2CppChar* str, uint16_t& idx, uint16_t end, ::Il2CppChar delim) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("FindEndOfComponent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FindEndOfComponent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str, idx, end, delim)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, str, idx, end, delim);
}
// Autogenerated method: System.Uri.CheckCanonical
System::Uri::Check System::Uri::CheckCanonical(::Il2CppChar* str, uint16_t& idx, uint16_t end, ::Il2CppChar delim) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("CheckCanonical");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CheckCanonical", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str, idx, end, delim)));
  return ::il2cpp_utils::RunMethodThrow<System::Uri::Check, false>(this, ___internal__method, str, idx, end, delim);
}
// Autogenerated method: System.Uri.GetCanonicalPath
::Array<::Il2CppChar>* System::Uri::GetCanonicalPath(::Array<::Il2CppChar>* dest, int& pos, System::UriFormat formatAs) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("GetCanonicalPath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetCanonicalPath", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dest, pos, formatAs)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppChar>*, false>(this, ___internal__method, dest, pos, formatAs);
}
// Autogenerated method: System.Uri.UnescapeOnly
void System::Uri::UnescapeOnly(::Il2CppChar* pch, int start, int& end, ::Il2CppChar ch1, ::Il2CppChar ch2, ::Il2CppChar ch3) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("UnescapeOnly");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "UnescapeOnly", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pch, start, end, ch1, ch2, ch3)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pch, start, end, ch1, ch2, ch3);
}
// Autogenerated method: System.Uri.Compress
::Array<::Il2CppChar>* System::Uri::Compress(::Array<::Il2CppChar>* dest, uint16_t start, int& destLength, System::UriParser* syntax) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("Compress");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "Compress", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(dest, start, destLength, syntax)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppChar>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, dest, start, destLength, syntax);
}
// Autogenerated method: System.Uri.CalculateCaseInsensitiveHashCode
int System::Uri::CalculateCaseInsensitiveHashCode(::Il2CppString* text) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("CalculateCaseInsensitiveHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "CalculateCaseInsensitiveHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(text)));
  return ::il2cpp_utils::RunMethodThrow<int, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, text);
}
// Autogenerated method: System.Uri.CombineUri
::Il2CppString* System::Uri::CombineUri(System::Uri* basePart, ::Il2CppString* relativePart, System::UriFormat uriFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("CombineUri");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "CombineUri", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(basePart, relativePart, uriFormat)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, basePart, relativePart, uriFormat);
}
// Autogenerated method: System.Uri.get_HasAuthority
bool System::Uri::get_HasAuthority() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("get_HasAuthority");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_HasAuthority", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.IsLWS
bool System::Uri::IsLWS(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("IsLWS");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "IsLWS", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Uri.IsAsciiLetter
bool System::Uri::IsAsciiLetter(::Il2CppChar character) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("IsAsciiLetter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "IsAsciiLetter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(character)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, character);
}
// Autogenerated method: System.Uri.IsAsciiLetterOrDigit
bool System::Uri::IsAsciiLetterOrDigit(::Il2CppChar character) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("IsAsciiLetterOrDigit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "IsAsciiLetterOrDigit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(character)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, character);
}
// Autogenerated method: System.Uri.IsBidiControlCharacter
bool System::Uri::IsBidiControlCharacter(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("IsBidiControlCharacter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "IsBidiControlCharacter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.Uri.StripBidiControlCharacter
::Il2CppString* System::Uri::StripBidiControlCharacter(::Il2CppChar* strToClean, int start, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("StripBidiControlCharacter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "StripBidiControlCharacter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(strToClean, start, length)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, strToClean, start, length);
}
// Autogenerated method: System.Uri.CreateThis
void System::Uri::CreateThis(::Il2CppString* uri, bool dontEscape, System::UriKind uriKind) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("CreateThis");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateThis", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uri, dontEscape, uriKind)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, uri, dontEscape, uriKind);
}
// Autogenerated method: System.Uri.InitializeUri
void System::Uri::InitializeUri(System::ParsingError err, System::UriKind uriKind, System::UriFormatException*& e) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("InitializeUri");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitializeUri", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(err, uriKind, e)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, err, uriKind, e);
}
// Autogenerated method: System.Uri.CheckForConfigLoad
bool System::Uri::CheckForConfigLoad(::Il2CppString* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("CheckForConfigLoad");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CheckForConfigLoad", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(data)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Uri.CheckForUnicode
bool System::Uri::CheckForUnicode(::Il2CppString* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("CheckForUnicode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CheckForUnicode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(data)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Uri.CheckForEscapedUnreserved
bool System::Uri::CheckForEscapedUnreserved(::Il2CppString* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("CheckForEscapedUnreserved");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CheckForEscapedUnreserved", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(data)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, data);
}
// Autogenerated method: System.Uri.TryCreate
bool System::Uri::TryCreate(::Il2CppString* uriString, System::UriKind uriKind, System::Uri*& result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("TryCreate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "TryCreate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uriString, uriKind, result)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, uriString, uriKind, result);
}
// Autogenerated method: System.Uri.GetComponents
::Il2CppString* System::Uri::GetComponents(System::UriComponents components, System::UriFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("GetComponents");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetComponents", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(components, format)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, components, format);
}
// Autogenerated method: System.Uri.IsWellFormedOriginalString
bool System::Uri::IsWellFormedOriginalString() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("IsWellFormedOriginalString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsWellFormedOriginalString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.IsWellFormedUriString
bool System::Uri::IsWellFormedUriString(::Il2CppString* uriString, System::UriKind uriKind) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("IsWellFormedUriString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "IsWellFormedUriString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uriString, uriKind)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, uriString, uriKind);
}
// Autogenerated method: System.Uri.InternalIsWellFormedOriginalString
bool System::Uri::InternalIsWellFormedOriginalString() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("InternalIsWellFormedOriginalString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalIsWellFormedOriginalString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.UnescapeDataString
::Il2CppString* System::Uri::UnescapeDataString(::Il2CppString* stringToUnescape) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("UnescapeDataString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "UnescapeDataString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(stringToUnescape)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, stringToUnescape);
}
// Autogenerated method: System.Uri.EscapeUnescapeIri
::Il2CppString* System::Uri::EscapeUnescapeIri(::Il2CppString* input, int start, int end, System::UriComponents component) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("EscapeUnescapeIri");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EscapeUnescapeIri", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input, start, end, component)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, input, start, end, component);
}
// Autogenerated method: System.Uri.CreateHelper
System::Uri* System::Uri::CreateHelper(::Il2CppString* uriString, bool dontEscape, System::UriKind uriKind, System::UriFormatException*& e) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("CreateHelper");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "CreateHelper", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uriString, dontEscape, uriKind, e)));
  return ::il2cpp_utils::RunMethodThrow<System::Uri*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, uriString, dontEscape, uriKind, e);
}
// Autogenerated method: System.Uri.ResolveHelper
System::Uri* System::Uri::ResolveHelper(System::Uri* baseUri, System::Uri* relativeUri, ::Il2CppString*& newUriString, bool& userEscaped, System::UriFormatException*& e) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("ResolveHelper");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "ResolveHelper", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(baseUri, relativeUri, newUriString, userEscaped, e)));
  return ::il2cpp_utils::RunMethodThrow<System::Uri*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, baseUri, relativeUri, newUriString, userEscaped, e);
}
// Autogenerated method: System.Uri.GetRelativeSerializationString
::Il2CppString* System::Uri::GetRelativeSerializationString(System::UriFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("GetRelativeSerializationString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetRelativeSerializationString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(format)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, format);
}
// Autogenerated method: System.Uri.GetComponentsHelper
::Il2CppString* System::Uri::GetComponentsHelper(System::UriComponents uriComponents, System::UriFormat uriFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("GetComponentsHelper");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetComponentsHelper", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uriComponents, uriFormat)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, uriComponents, uriFormat);
}
// Autogenerated method: System.Uri.CreateThisFromUri
void System::Uri::CreateThisFromUri(System::Uri* otherUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("CreateThisFromUri");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CreateThisFromUri", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(otherUri)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, otherUri);
}
// Autogenerated method: System.Uri..cctor
void System::Uri::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.Uri.System.Runtime.Serialization.ISerializable.GetObjectData
void System::Uri::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("System.Runtime.Serialization.ISerializable.GetObjectData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(serializationInfo, streamingContext)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated method: System.Uri.GetHashCode
int System::Uri::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("GetHashCode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetHashCode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.ToString
::Il2CppString* System::Uri::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.Uri.Equals
bool System::Uri::Equals(::Il2CppObject* comparand) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("Equals");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Equals", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(comparand)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, comparand);
}
// Autogenerated method: System.Uri.op_Equality
bool System::operator ==(System::Uri* uri1, System::Uri& uri2) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("op_Equality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "op_Equality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uri1, &uri2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, uri1, &uri2);
}
// Autogenerated method: System.Uri.op_Inequality
bool System::operator !=(System::Uri* uri1, System::Uri& uri2) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Uri").WithContext("op_Inequality");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "Uri", "op_Inequality", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uri1, &uri2)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, uri1, &uri2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Uri/Flags
#include "System/Uri.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags Zero
System::Uri::Flags System::Uri::Flags::_get_Zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_Zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "Zero"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags Zero
void System::Uri::Flags::_set_Zero(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_Zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "Zero", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags SchemeNotCanonical
System::Uri::Flags System::Uri::Flags::_get_SchemeNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_SchemeNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "SchemeNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags SchemeNotCanonical
void System::Uri::Flags::_set_SchemeNotCanonical(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_SchemeNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "SchemeNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags UserNotCanonical
System::Uri::Flags System::Uri::Flags::_get_UserNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_UserNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "UserNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags UserNotCanonical
void System::Uri::Flags::_set_UserNotCanonical(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_UserNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UserNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags HostNotCanonical
System::Uri::Flags System::Uri::Flags::_get_HostNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_HostNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "HostNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags HostNotCanonical
void System::Uri::Flags::_set_HostNotCanonical(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_HostNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "HostNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags PortNotCanonical
System::Uri::Flags System::Uri::Flags::_get_PortNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_PortNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "PortNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags PortNotCanonical
void System::Uri::Flags::_set_PortNotCanonical(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_PortNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "PortNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags PathNotCanonical
System::Uri::Flags System::Uri::Flags::_get_PathNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_PathNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "PathNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags PathNotCanonical
void System::Uri::Flags::_set_PathNotCanonical(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_PathNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "PathNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags QueryNotCanonical
System::Uri::Flags System::Uri::Flags::_get_QueryNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_QueryNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "QueryNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags QueryNotCanonical
void System::Uri::Flags::_set_QueryNotCanonical(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_QueryNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "QueryNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags FragmentNotCanonical
System::Uri::Flags System::Uri::Flags::_get_FragmentNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_FragmentNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "FragmentNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags FragmentNotCanonical
void System::Uri::Flags::_set_FragmentNotCanonical(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_FragmentNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "FragmentNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags CannotDisplayCanonical
System::Uri::Flags System::Uri::Flags::_get_CannotDisplayCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_CannotDisplayCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "CannotDisplayCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags CannotDisplayCanonical
void System::Uri::Flags::_set_CannotDisplayCanonical(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_CannotDisplayCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "CannotDisplayCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags E_UserNotCanonical
System::Uri::Flags System::Uri::Flags::_get_E_UserNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_E_UserNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "E_UserNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags E_UserNotCanonical
void System::Uri::Flags::_set_E_UserNotCanonical(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_E_UserNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "E_UserNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags E_HostNotCanonical
System::Uri::Flags System::Uri::Flags::_get_E_HostNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_E_HostNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "E_HostNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags E_HostNotCanonical
void System::Uri::Flags::_set_E_HostNotCanonical(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_E_HostNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "E_HostNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags E_PortNotCanonical
System::Uri::Flags System::Uri::Flags::_get_E_PortNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_E_PortNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "E_PortNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags E_PortNotCanonical
void System::Uri::Flags::_set_E_PortNotCanonical(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_E_PortNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "E_PortNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags E_PathNotCanonical
System::Uri::Flags System::Uri::Flags::_get_E_PathNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_E_PathNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "E_PathNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags E_PathNotCanonical
void System::Uri::Flags::_set_E_PathNotCanonical(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_E_PathNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "E_PathNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags E_QueryNotCanonical
System::Uri::Flags System::Uri::Flags::_get_E_QueryNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_E_QueryNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "E_QueryNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags E_QueryNotCanonical
void System::Uri::Flags::_set_E_QueryNotCanonical(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_E_QueryNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "E_QueryNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags E_FragmentNotCanonical
System::Uri::Flags System::Uri::Flags::_get_E_FragmentNotCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_E_FragmentNotCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "E_FragmentNotCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags E_FragmentNotCanonical
void System::Uri::Flags::_set_E_FragmentNotCanonical(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_E_FragmentNotCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "E_FragmentNotCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags E_CannotDisplayCanonical
System::Uri::Flags System::Uri::Flags::_get_E_CannotDisplayCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_E_CannotDisplayCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "E_CannotDisplayCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags E_CannotDisplayCanonical
void System::Uri::Flags::_set_E_CannotDisplayCanonical(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_E_CannotDisplayCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "E_CannotDisplayCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags ShouldBeCompressed
System::Uri::Flags System::Uri::Flags::_get_ShouldBeCompressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_ShouldBeCompressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "ShouldBeCompressed"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags ShouldBeCompressed
void System::Uri::Flags::_set_ShouldBeCompressed(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_ShouldBeCompressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "ShouldBeCompressed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags FirstSlashAbsent
System::Uri::Flags System::Uri::Flags::_get_FirstSlashAbsent() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_FirstSlashAbsent");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "FirstSlashAbsent"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags FirstSlashAbsent
void System::Uri::Flags::_set_FirstSlashAbsent(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_FirstSlashAbsent");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "FirstSlashAbsent", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags BackslashInPath
System::Uri::Flags System::Uri::Flags::_get_BackslashInPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_BackslashInPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "BackslashInPath"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags BackslashInPath
void System::Uri::Flags::_set_BackslashInPath(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_BackslashInPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "BackslashInPath", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags IndexMask
System::Uri::Flags System::Uri::Flags::_get_IndexMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_IndexMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "IndexMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags IndexMask
void System::Uri::Flags::_set_IndexMask(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_IndexMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "IndexMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags HostTypeMask
System::Uri::Flags System::Uri::Flags::_get_HostTypeMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_HostTypeMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "HostTypeMask"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags HostTypeMask
void System::Uri::Flags::_set_HostTypeMask(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_HostTypeMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "HostTypeMask", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags HostNotParsed
System::Uri::Flags System::Uri::Flags::_get_HostNotParsed() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_HostNotParsed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "HostNotParsed"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags HostNotParsed
void System::Uri::Flags::_set_HostNotParsed(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_HostNotParsed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "HostNotParsed", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags IPv6HostType
System::Uri::Flags System::Uri::Flags::_get_IPv6HostType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_IPv6HostType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "IPv6HostType"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags IPv6HostType
void System::Uri::Flags::_set_IPv6HostType(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_IPv6HostType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "IPv6HostType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags IPv4HostType
System::Uri::Flags System::Uri::Flags::_get_IPv4HostType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_IPv4HostType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "IPv4HostType"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags IPv4HostType
void System::Uri::Flags::_set_IPv4HostType(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_IPv4HostType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "IPv4HostType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags DnsHostType
System::Uri::Flags System::Uri::Flags::_get_DnsHostType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_DnsHostType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "DnsHostType"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags DnsHostType
void System::Uri::Flags::_set_DnsHostType(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_DnsHostType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "DnsHostType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags UncHostType
System::Uri::Flags System::Uri::Flags::_get_UncHostType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_UncHostType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "UncHostType"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags UncHostType
void System::Uri::Flags::_set_UncHostType(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_UncHostType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UncHostType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags BasicHostType
System::Uri::Flags System::Uri::Flags::_get_BasicHostType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_BasicHostType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "BasicHostType"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags BasicHostType
void System::Uri::Flags::_set_BasicHostType(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_BasicHostType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "BasicHostType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags UnusedHostType
System::Uri::Flags System::Uri::Flags::_get_UnusedHostType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_UnusedHostType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "UnusedHostType"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags UnusedHostType
void System::Uri::Flags::_set_UnusedHostType(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_UnusedHostType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UnusedHostType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags UnknownHostType
System::Uri::Flags System::Uri::Flags::_get_UnknownHostType() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_UnknownHostType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "UnknownHostType"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags UnknownHostType
void System::Uri::Flags::_set_UnknownHostType(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_UnknownHostType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UnknownHostType", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags UserEscaped
System::Uri::Flags System::Uri::Flags::_get_UserEscaped() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_UserEscaped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "UserEscaped"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags UserEscaped
void System::Uri::Flags::_set_UserEscaped(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_UserEscaped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UserEscaped", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags AuthorityFound
System::Uri::Flags System::Uri::Flags::_get_AuthorityFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_AuthorityFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "AuthorityFound"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags AuthorityFound
void System::Uri::Flags::_set_AuthorityFound(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_AuthorityFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "AuthorityFound", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags HasUserInfo
System::Uri::Flags System::Uri::Flags::_get_HasUserInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_HasUserInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "HasUserInfo"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags HasUserInfo
void System::Uri::Flags::_set_HasUserInfo(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_HasUserInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "HasUserInfo", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags LoopbackHost
System::Uri::Flags System::Uri::Flags::_get_LoopbackHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_LoopbackHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "LoopbackHost"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags LoopbackHost
void System::Uri::Flags::_set_LoopbackHost(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_LoopbackHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "LoopbackHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags NotDefaultPort
System::Uri::Flags System::Uri::Flags::_get_NotDefaultPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_NotDefaultPort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "NotDefaultPort"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags NotDefaultPort
void System::Uri::Flags::_set_NotDefaultPort(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_NotDefaultPort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "NotDefaultPort", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags UserDrivenParsing
System::Uri::Flags System::Uri::Flags::_get_UserDrivenParsing() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_UserDrivenParsing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "UserDrivenParsing"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags UserDrivenParsing
void System::Uri::Flags::_set_UserDrivenParsing(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_UserDrivenParsing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UserDrivenParsing", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags CanonicalDnsHost
System::Uri::Flags System::Uri::Flags::_get_CanonicalDnsHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_CanonicalDnsHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "CanonicalDnsHost"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags CanonicalDnsHost
void System::Uri::Flags::_set_CanonicalDnsHost(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_CanonicalDnsHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "CanonicalDnsHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags ErrorOrParsingRecursion
System::Uri::Flags System::Uri::Flags::_get_ErrorOrParsingRecursion() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_ErrorOrParsingRecursion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "ErrorOrParsingRecursion"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags ErrorOrParsingRecursion
void System::Uri::Flags::_set_ErrorOrParsingRecursion(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_ErrorOrParsingRecursion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "ErrorOrParsingRecursion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags DosPath
System::Uri::Flags System::Uri::Flags::_get_DosPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_DosPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "DosPath"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags DosPath
void System::Uri::Flags::_set_DosPath(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_DosPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "DosPath", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags UncPath
System::Uri::Flags System::Uri::Flags::_get_UncPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_UncPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "UncPath"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags UncPath
void System::Uri::Flags::_set_UncPath(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_UncPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UncPath", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags ImplicitFile
System::Uri::Flags System::Uri::Flags::_get_ImplicitFile() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_ImplicitFile");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "ImplicitFile"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags ImplicitFile
void System::Uri::Flags::_set_ImplicitFile(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_ImplicitFile");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "ImplicitFile", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags MinimalUriInfoSet
System::Uri::Flags System::Uri::Flags::_get_MinimalUriInfoSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_MinimalUriInfoSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "MinimalUriInfoSet"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags MinimalUriInfoSet
void System::Uri::Flags::_set_MinimalUriInfoSet(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_MinimalUriInfoSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "MinimalUriInfoSet", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags AllUriInfoSet
System::Uri::Flags System::Uri::Flags::_get_AllUriInfoSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_AllUriInfoSet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "AllUriInfoSet"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags AllUriInfoSet
void System::Uri::Flags::_set_AllUriInfoSet(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_AllUriInfoSet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "AllUriInfoSet", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags IdnHost
System::Uri::Flags System::Uri::Flags::_get_IdnHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_IdnHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "IdnHost"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags IdnHost
void System::Uri::Flags::_set_IdnHost(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_IdnHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "IdnHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags HasUnicode
System::Uri::Flags System::Uri::Flags::_get_HasUnicode() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_HasUnicode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "HasUnicode"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags HasUnicode
void System::Uri::Flags::_set_HasUnicode(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_HasUnicode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "HasUnicode", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags HostUnicodeNormalized
System::Uri::Flags System::Uri::Flags::_get_HostUnicodeNormalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_HostUnicodeNormalized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "HostUnicodeNormalized"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags HostUnicodeNormalized
void System::Uri::Flags::_set_HostUnicodeNormalized(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_HostUnicodeNormalized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "HostUnicodeNormalized", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags RestUnicodeNormalized
System::Uri::Flags System::Uri::Flags::_get_RestUnicodeNormalized() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_RestUnicodeNormalized");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "RestUnicodeNormalized"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags RestUnicodeNormalized
void System::Uri::Flags::_set_RestUnicodeNormalized(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_RestUnicodeNormalized");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "RestUnicodeNormalized", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags UnicodeHost
System::Uri::Flags System::Uri::Flags::_get_UnicodeHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_UnicodeHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "UnicodeHost"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags UnicodeHost
void System::Uri::Flags::_set_UnicodeHost(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_UnicodeHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UnicodeHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags IntranetUri
System::Uri::Flags System::Uri::Flags::_get_IntranetUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_IntranetUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "IntranetUri"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags IntranetUri
void System::Uri::Flags::_set_IntranetUri(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_IntranetUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "IntranetUri", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags UseOrigUncdStrOffset
System::Uri::Flags System::Uri::Flags::_get_UseOrigUncdStrOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_UseOrigUncdStrOffset");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "UseOrigUncdStrOffset"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags UseOrigUncdStrOffset
void System::Uri::Flags::_set_UseOrigUncdStrOffset(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_UseOrigUncdStrOffset");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UseOrigUncdStrOffset", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags UserIriCanonical
System::Uri::Flags System::Uri::Flags::_get_UserIriCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_UserIriCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "UserIriCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags UserIriCanonical
void System::Uri::Flags::_set_UserIriCanonical(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_UserIriCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "UserIriCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags PathIriCanonical
System::Uri::Flags System::Uri::Flags::_get_PathIriCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_PathIriCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "PathIriCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags PathIriCanonical
void System::Uri::Flags::_set_PathIriCanonical(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_PathIriCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "PathIriCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags QueryIriCanonical
System::Uri::Flags System::Uri::Flags::_get_QueryIriCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_QueryIriCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "QueryIriCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags QueryIriCanonical
void System::Uri::Flags::_set_QueryIriCanonical(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_QueryIriCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "QueryIriCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags FragmentIriCanonical
System::Uri::Flags System::Uri::Flags::_get_FragmentIriCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_FragmentIriCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "FragmentIriCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags FragmentIriCanonical
void System::Uri::Flags::_set_FragmentIriCanonical(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_FragmentIriCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "FragmentIriCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags IriCanonical
System::Uri::Flags System::Uri::Flags::_get_IriCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_IriCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "IriCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags IriCanonical
void System::Uri::Flags::_set_IriCanonical(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_IriCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "IriCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Flags CompressedSlashes
System::Uri::Flags System::Uri::Flags::_get_CompressedSlashes() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_get_CompressedSlashes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Flags>("System", "Uri/Flags", "CompressedSlashes"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Flags CompressedSlashes
void System::Uri::Flags::_set_CompressedSlashes(System::Uri::Flags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Flags").WithContext("_set_CompressedSlashes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Flags", "CompressedSlashes", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Uri/UriInfo
#include "System/Uri_UriInfo.hpp"
// Including type: System.Uri/MoreInfo
#include "System/Uri_MoreInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.Uri/MoreInfo
#include "System/Uri_MoreInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.Uri/Check
#include "System/Uri_Check.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Uri/Check None
System::Uri::Check System::Uri::Check::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Check").WithContext("_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Check>("System", "Uri/Check", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Check None
void System::Uri::Check::_set_None(System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Check").WithContext("_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Check EscapedCanonical
System::Uri::Check System::Uri::Check::_get_EscapedCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Check").WithContext("_get_EscapedCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Check>("System", "Uri/Check", "EscapedCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Check EscapedCanonical
void System::Uri::Check::_set_EscapedCanonical(System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Check").WithContext("_set_EscapedCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "EscapedCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Check DisplayCanonical
System::Uri::Check System::Uri::Check::_get_DisplayCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Check").WithContext("_get_DisplayCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Check>("System", "Uri/Check", "DisplayCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Check DisplayCanonical
void System::Uri::Check::_set_DisplayCanonical(System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Check").WithContext("_set_DisplayCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "DisplayCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Check DotSlashAttn
System::Uri::Check System::Uri::Check::_get_DotSlashAttn() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Check").WithContext("_get_DotSlashAttn");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Check>("System", "Uri/Check", "DotSlashAttn"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Check DotSlashAttn
void System::Uri::Check::_set_DotSlashAttn(System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Check").WithContext("_set_DotSlashAttn");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "DotSlashAttn", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Check DotSlashEscaped
System::Uri::Check System::Uri::Check::_get_DotSlashEscaped() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Check").WithContext("_get_DotSlashEscaped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Check>("System", "Uri/Check", "DotSlashEscaped"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Check DotSlashEscaped
void System::Uri::Check::_set_DotSlashEscaped(System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Check").WithContext("_set_DotSlashEscaped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "DotSlashEscaped", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Check BackslashInPath
System::Uri::Check System::Uri::Check::_get_BackslashInPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Check").WithContext("_get_BackslashInPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Check>("System", "Uri/Check", "BackslashInPath"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Check BackslashInPath
void System::Uri::Check::_set_BackslashInPath(System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Check").WithContext("_set_BackslashInPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "BackslashInPath", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Check ReservedFound
System::Uri::Check System::Uri::Check::_get_ReservedFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Check").WithContext("_get_ReservedFound");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Check>("System", "Uri/Check", "ReservedFound"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Check ReservedFound
void System::Uri::Check::_set_ReservedFound(System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Check").WithContext("_set_ReservedFound");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "ReservedFound", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Check NotIriCanonical
System::Uri::Check System::Uri::Check::_get_NotIriCanonical() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Check").WithContext("_get_NotIriCanonical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Check>("System", "Uri/Check", "NotIriCanonical"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Check NotIriCanonical
void System::Uri::Check::_set_NotIriCanonical(System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Check").WithContext("_set_NotIriCanonical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "NotIriCanonical", value));
}
// Autogenerated static field getter
// Get static field: static public System.Uri/Check FoundNonAscii
System::Uri::Check System::Uri::Check::_get_FoundNonAscii() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Check").WithContext("_get_FoundNonAscii");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::Uri::Check>("System", "Uri/Check", "FoundNonAscii"));
}
// Autogenerated static field setter
// Set static field: static public System.Uri/Check FoundNonAscii
void System::Uri::Check::_set_FoundNonAscii(System::Uri::Check value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("Check").WithContext("_set_FoundNonAscii");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "Uri/Check", "FoundNonAscii", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.UriFormatException
#include "System/UriFormatException.hpp"
// Including type: System.Runtime.Serialization.SerializationInfo
#include "System/Runtime/Serialization/SerializationInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.UriFormatException.System.Runtime.Serialization.ISerializable.GetObjectData
void System::UriFormatException::System_Runtime_Serialization_ISerializable_GetObjectData(System::Runtime::Serialization::SerializationInfo* serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriFormatException").WithContext("System.Runtime.Serialization.ISerializable.GetObjectData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Runtime.Serialization.ISerializable.GetObjectData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(serializationInfo, streamingContext)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, serializationInfo, streamingContext);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UriKind
#include "System/UriKind.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UriKind RelativeOrAbsolute
System::UriKind System::UriKind::_get_RelativeOrAbsolute() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriKind").WithContext("_get_RelativeOrAbsolute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriKind>("System", "UriKind", "RelativeOrAbsolute"));
}
// Autogenerated static field setter
// Set static field: static public System.UriKind RelativeOrAbsolute
void System::UriKind::_set_RelativeOrAbsolute(System::UriKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriKind").WithContext("_set_RelativeOrAbsolute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriKind", "RelativeOrAbsolute", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriKind Absolute
System::UriKind System::UriKind::_get_Absolute() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriKind").WithContext("_get_Absolute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriKind>("System", "UriKind", "Absolute"));
}
// Autogenerated static field setter
// Set static field: static public System.UriKind Absolute
void System::UriKind::_set_Absolute(System::UriKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriKind").WithContext("_set_Absolute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriKind", "Absolute", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriKind Relative
System::UriKind System::UriKind::_get_Relative() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriKind").WithContext("_get_Relative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriKind>("System", "UriKind", "Relative"));
}
// Autogenerated static field setter
// Set static field: static public System.UriKind Relative
void System::UriKind::_set_Relative(System::UriKind value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriKind").WithContext("_set_Relative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriKind", "Relative", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UriComponents
#include "System/UriComponents.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UriComponents Scheme
System::UriComponents System::UriComponents::_get_Scheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriComponents").WithContext("_get_Scheme");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriComponents>("System", "UriComponents", "Scheme"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents Scheme
void System::UriComponents::_set_Scheme(System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriComponents").WithContext("_set_Scheme");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "Scheme", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents UserInfo
System::UriComponents System::UriComponents::_get_UserInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriComponents").WithContext("_get_UserInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriComponents>("System", "UriComponents", "UserInfo"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents UserInfo
void System::UriComponents::_set_UserInfo(System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriComponents").WithContext("_set_UserInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "UserInfo", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents Host
System::UriComponents System::UriComponents::_get_Host() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriComponents").WithContext("_get_Host");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriComponents>("System", "UriComponents", "Host"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents Host
void System::UriComponents::_set_Host(System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriComponents").WithContext("_set_Host");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "Host", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents Port
System::UriComponents System::UriComponents::_get_Port() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriComponents").WithContext("_get_Port");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriComponents>("System", "UriComponents", "Port"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents Port
void System::UriComponents::_set_Port(System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriComponents").WithContext("_set_Port");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "Port", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents Path
System::UriComponents System::UriComponents::_get_Path() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriComponents").WithContext("_get_Path");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriComponents>("System", "UriComponents", "Path"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents Path
void System::UriComponents::_set_Path(System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriComponents").WithContext("_set_Path");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "Path", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents Query
System::UriComponents System::UriComponents::_get_Query() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriComponents").WithContext("_get_Query");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriComponents>("System", "UriComponents", "Query"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents Query
void System::UriComponents::_set_Query(System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriComponents").WithContext("_set_Query");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "Query", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents Fragment
System::UriComponents System::UriComponents::_get_Fragment() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriComponents").WithContext("_get_Fragment");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriComponents>("System", "UriComponents", "Fragment"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents Fragment
void System::UriComponents::_set_Fragment(System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriComponents").WithContext("_set_Fragment");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "Fragment", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents StrongPort
System::UriComponents System::UriComponents::_get_StrongPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriComponents").WithContext("_get_StrongPort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriComponents>("System", "UriComponents", "StrongPort"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents StrongPort
void System::UriComponents::_set_StrongPort(System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriComponents").WithContext("_set_StrongPort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "StrongPort", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents NormalizedHost
System::UriComponents System::UriComponents::_get_NormalizedHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriComponents").WithContext("_get_NormalizedHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriComponents>("System", "UriComponents", "NormalizedHost"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents NormalizedHost
void System::UriComponents::_set_NormalizedHost(System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriComponents").WithContext("_set_NormalizedHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "NormalizedHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents KeepDelimiter
System::UriComponents System::UriComponents::_get_KeepDelimiter() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriComponents").WithContext("_get_KeepDelimiter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriComponents>("System", "UriComponents", "KeepDelimiter"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents KeepDelimiter
void System::UriComponents::_set_KeepDelimiter(System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriComponents").WithContext("_set_KeepDelimiter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "KeepDelimiter", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents SerializationInfoString
System::UriComponents System::UriComponents::_get_SerializationInfoString() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriComponents").WithContext("_get_SerializationInfoString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriComponents>("System", "UriComponents", "SerializationInfoString"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents SerializationInfoString
void System::UriComponents::_set_SerializationInfoString(System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriComponents").WithContext("_set_SerializationInfoString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "SerializationInfoString", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents AbsoluteUri
System::UriComponents System::UriComponents::_get_AbsoluteUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriComponents").WithContext("_get_AbsoluteUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriComponents>("System", "UriComponents", "AbsoluteUri"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents AbsoluteUri
void System::UriComponents::_set_AbsoluteUri(System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriComponents").WithContext("_set_AbsoluteUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "AbsoluteUri", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents HostAndPort
System::UriComponents System::UriComponents::_get_HostAndPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriComponents").WithContext("_get_HostAndPort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriComponents>("System", "UriComponents", "HostAndPort"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents HostAndPort
void System::UriComponents::_set_HostAndPort(System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriComponents").WithContext("_set_HostAndPort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "HostAndPort", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents StrongAuthority
System::UriComponents System::UriComponents::_get_StrongAuthority() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriComponents").WithContext("_get_StrongAuthority");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriComponents>("System", "UriComponents", "StrongAuthority"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents StrongAuthority
void System::UriComponents::_set_StrongAuthority(System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriComponents").WithContext("_set_StrongAuthority");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "StrongAuthority", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents SchemeAndServer
System::UriComponents System::UriComponents::_get_SchemeAndServer() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriComponents").WithContext("_get_SchemeAndServer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriComponents>("System", "UriComponents", "SchemeAndServer"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents SchemeAndServer
void System::UriComponents::_set_SchemeAndServer(System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriComponents").WithContext("_set_SchemeAndServer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "SchemeAndServer", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents HttpRequestUrl
System::UriComponents System::UriComponents::_get_HttpRequestUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriComponents").WithContext("_get_HttpRequestUrl");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriComponents>("System", "UriComponents", "HttpRequestUrl"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents HttpRequestUrl
void System::UriComponents::_set_HttpRequestUrl(System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriComponents").WithContext("_set_HttpRequestUrl");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "HttpRequestUrl", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriComponents PathAndQuery
System::UriComponents System::UriComponents::_get_PathAndQuery() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriComponents").WithContext("_get_PathAndQuery");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriComponents>("System", "UriComponents", "PathAndQuery"));
}
// Autogenerated static field setter
// Set static field: static public System.UriComponents PathAndQuery
void System::UriComponents::_set_PathAndQuery(System::UriComponents value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriComponents").WithContext("_set_PathAndQuery");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriComponents", "PathAndQuery", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UriFormat
#include "System/UriFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UriFormat UriEscaped
System::UriFormat System::UriFormat::_get_UriEscaped() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriFormat").WithContext("_get_UriEscaped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriFormat>("System", "UriFormat", "UriEscaped"));
}
// Autogenerated static field setter
// Set static field: static public System.UriFormat UriEscaped
void System::UriFormat::_set_UriEscaped(System::UriFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriFormat").WithContext("_set_UriEscaped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriFormat", "UriEscaped", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriFormat Unescaped
System::UriFormat System::UriFormat::_get_Unescaped() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriFormat").WithContext("_get_Unescaped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriFormat>("System", "UriFormat", "Unescaped"));
}
// Autogenerated static field setter
// Set static field: static public System.UriFormat Unescaped
void System::UriFormat::_set_Unescaped(System::UriFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriFormat").WithContext("_set_Unescaped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriFormat", "Unescaped", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriFormat SafeUnescaped
System::UriFormat System::UriFormat::_get_SafeUnescaped() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriFormat").WithContext("_get_SafeUnescaped");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriFormat>("System", "UriFormat", "SafeUnescaped"));
}
// Autogenerated static field setter
// Set static field: static public System.UriFormat SafeUnescaped
void System::UriFormat::_set_SafeUnescaped(System::UriFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriFormat").WithContext("_set_SafeUnescaped");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriFormat", "SafeUnescaped", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UriIdnScope
#include "System/UriIdnScope.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UriIdnScope None
System::UriIdnScope System::UriIdnScope::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriIdnScope").WithContext("_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriIdnScope>("System", "UriIdnScope", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.UriIdnScope None
void System::UriIdnScope::_set_None(System::UriIdnScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriIdnScope").WithContext("_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriIdnScope", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriIdnScope AllExceptIntranet
System::UriIdnScope System::UriIdnScope::_get_AllExceptIntranet() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriIdnScope").WithContext("_get_AllExceptIntranet");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriIdnScope>("System", "UriIdnScope", "AllExceptIntranet"));
}
// Autogenerated static field setter
// Set static field: static public System.UriIdnScope AllExceptIntranet
void System::UriIdnScope::_set_AllExceptIntranet(System::UriIdnScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriIdnScope").WithContext("_set_AllExceptIntranet");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriIdnScope", "AllExceptIntranet", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriIdnScope All
System::UriIdnScope System::UriIdnScope::_get_All() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriIdnScope").WithContext("_get_All");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriIdnScope>("System", "UriIdnScope", "All"));
}
// Autogenerated static field setter
// Set static field: static public System.UriIdnScope All
void System::UriIdnScope::_set_All(System::UriIdnScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriIdnScope").WithContext("_set_All");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriIdnScope", "All", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.ParsingError
#include "System/ParsingError.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.ParsingError None
System::ParsingError System::ParsingError::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("ParsingError").WithContext("_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParsingError>("System", "ParsingError", "None"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError None
void System::ParsingError::_set_None(System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("ParsingError").WithContext("_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "None", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError BadFormat
System::ParsingError System::ParsingError::_get_BadFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("ParsingError").WithContext("_get_BadFormat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParsingError>("System", "ParsingError", "BadFormat"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError BadFormat
void System::ParsingError::_set_BadFormat(System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("ParsingError").WithContext("_set_BadFormat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "BadFormat", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError BadScheme
System::ParsingError System::ParsingError::_get_BadScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("ParsingError").WithContext("_get_BadScheme");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParsingError>("System", "ParsingError", "BadScheme"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError BadScheme
void System::ParsingError::_set_BadScheme(System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("ParsingError").WithContext("_set_BadScheme");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "BadScheme", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError BadAuthority
System::ParsingError System::ParsingError::_get_BadAuthority() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("ParsingError").WithContext("_get_BadAuthority");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParsingError>("System", "ParsingError", "BadAuthority"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError BadAuthority
void System::ParsingError::_set_BadAuthority(System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("ParsingError").WithContext("_set_BadAuthority");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "BadAuthority", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError EmptyUriString
System::ParsingError System::ParsingError::_get_EmptyUriString() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("ParsingError").WithContext("_get_EmptyUriString");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParsingError>("System", "ParsingError", "EmptyUriString"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError EmptyUriString
void System::ParsingError::_set_EmptyUriString(System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("ParsingError").WithContext("_set_EmptyUriString");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "EmptyUriString", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError LastRelativeUriOkErrIndex
System::ParsingError System::ParsingError::_get_LastRelativeUriOkErrIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("ParsingError").WithContext("_get_LastRelativeUriOkErrIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParsingError>("System", "ParsingError", "LastRelativeUriOkErrIndex"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError LastRelativeUriOkErrIndex
void System::ParsingError::_set_LastRelativeUriOkErrIndex(System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("ParsingError").WithContext("_set_LastRelativeUriOkErrIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "LastRelativeUriOkErrIndex", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError SchemeLimit
System::ParsingError System::ParsingError::_get_SchemeLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("ParsingError").WithContext("_get_SchemeLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParsingError>("System", "ParsingError", "SchemeLimit"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError SchemeLimit
void System::ParsingError::_set_SchemeLimit(System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("ParsingError").WithContext("_set_SchemeLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "SchemeLimit", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError SizeLimit
System::ParsingError System::ParsingError::_get_SizeLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("ParsingError").WithContext("_get_SizeLimit");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParsingError>("System", "ParsingError", "SizeLimit"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError SizeLimit
void System::ParsingError::_set_SizeLimit(System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("ParsingError").WithContext("_set_SizeLimit");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "SizeLimit", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError MustRootedPath
System::ParsingError System::ParsingError::_get_MustRootedPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("ParsingError").WithContext("_get_MustRootedPath");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParsingError>("System", "ParsingError", "MustRootedPath"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError MustRootedPath
void System::ParsingError::_set_MustRootedPath(System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("ParsingError").WithContext("_set_MustRootedPath");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "MustRootedPath", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError BadHostName
System::ParsingError System::ParsingError::_get_BadHostName() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("ParsingError").WithContext("_get_BadHostName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParsingError>("System", "ParsingError", "BadHostName"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError BadHostName
void System::ParsingError::_set_BadHostName(System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("ParsingError").WithContext("_set_BadHostName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "BadHostName", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError NonEmptyHost
System::ParsingError System::ParsingError::_get_NonEmptyHost() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("ParsingError").WithContext("_get_NonEmptyHost");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParsingError>("System", "ParsingError", "NonEmptyHost"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError NonEmptyHost
void System::ParsingError::_set_NonEmptyHost(System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("ParsingError").WithContext("_set_NonEmptyHost");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "NonEmptyHost", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError BadPort
System::ParsingError System::ParsingError::_get_BadPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("ParsingError").WithContext("_get_BadPort");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParsingError>("System", "ParsingError", "BadPort"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError BadPort
void System::ParsingError::_set_BadPort(System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("ParsingError").WithContext("_set_BadPort");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "BadPort", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError BadAuthorityTerminator
System::ParsingError System::ParsingError::_get_BadAuthorityTerminator() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("ParsingError").WithContext("_get_BadAuthorityTerminator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParsingError>("System", "ParsingError", "BadAuthorityTerminator"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError BadAuthorityTerminator
void System::ParsingError::_set_BadAuthorityTerminator(System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("ParsingError").WithContext("_set_BadAuthorityTerminator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "BadAuthorityTerminator", value));
}
// Autogenerated static field getter
// Get static field: static public System.ParsingError CannotCreateRelative
System::ParsingError System::ParsingError::_get_CannotCreateRelative() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("ParsingError").WithContext("_get_CannotCreateRelative");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::ParsingError>("System", "ParsingError", "CannotCreateRelative"));
}
// Autogenerated static field setter
// Set static field: static public System.ParsingError CannotCreateRelative
void System::ParsingError::_set_CannotCreateRelative(System::ParsingError value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("ParsingError").WithContext("_set_CannotCreateRelative");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "ParsingError", "CannotCreateRelative", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UnescapeMode
#include "System/UnescapeMode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UnescapeMode CopyOnly
System::UnescapeMode System::UnescapeMode::_get_CopyOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UnescapeMode").WithContext("_get_CopyOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UnescapeMode>("System", "UnescapeMode", "CopyOnly"));
}
// Autogenerated static field setter
// Set static field: static public System.UnescapeMode CopyOnly
void System::UnescapeMode::_set_CopyOnly(System::UnescapeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UnescapeMode").WithContext("_set_CopyOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UnescapeMode", "CopyOnly", value));
}
// Autogenerated static field getter
// Get static field: static public System.UnescapeMode Escape
System::UnescapeMode System::UnescapeMode::_get_Escape() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UnescapeMode").WithContext("_get_Escape");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UnescapeMode>("System", "UnescapeMode", "Escape"));
}
// Autogenerated static field setter
// Set static field: static public System.UnescapeMode Escape
void System::UnescapeMode::_set_Escape(System::UnescapeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UnescapeMode").WithContext("_set_Escape");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UnescapeMode", "Escape", value));
}
// Autogenerated static field getter
// Get static field: static public System.UnescapeMode Unescape
System::UnescapeMode System::UnescapeMode::_get_Unescape() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UnescapeMode").WithContext("_get_Unescape");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UnescapeMode>("System", "UnescapeMode", "Unescape"));
}
// Autogenerated static field setter
// Set static field: static public System.UnescapeMode Unescape
void System::UnescapeMode::_set_Unescape(System::UnescapeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UnescapeMode").WithContext("_set_Unescape");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UnescapeMode", "Unescape", value));
}
// Autogenerated static field getter
// Get static field: static public System.UnescapeMode EscapeUnescape
System::UnescapeMode System::UnescapeMode::_get_EscapeUnescape() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UnescapeMode").WithContext("_get_EscapeUnescape");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UnescapeMode>("System", "UnescapeMode", "EscapeUnescape"));
}
// Autogenerated static field setter
// Set static field: static public System.UnescapeMode EscapeUnescape
void System::UnescapeMode::_set_EscapeUnescape(System::UnescapeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UnescapeMode").WithContext("_set_EscapeUnescape");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UnescapeMode", "EscapeUnescape", value));
}
// Autogenerated static field getter
// Get static field: static public System.UnescapeMode V1ToStringFlag
System::UnescapeMode System::UnescapeMode::_get_V1ToStringFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UnescapeMode").WithContext("_get_V1ToStringFlag");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UnescapeMode>("System", "UnescapeMode", "V1ToStringFlag"));
}
// Autogenerated static field setter
// Set static field: static public System.UnescapeMode V1ToStringFlag
void System::UnescapeMode::_set_V1ToStringFlag(System::UnescapeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UnescapeMode").WithContext("_set_V1ToStringFlag");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UnescapeMode", "V1ToStringFlag", value));
}
// Autogenerated static field getter
// Get static field: static public System.UnescapeMode UnescapeAll
System::UnescapeMode System::UnescapeMode::_get_UnescapeAll() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UnescapeMode").WithContext("_get_UnescapeAll");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UnescapeMode>("System", "UnescapeMode", "UnescapeAll"));
}
// Autogenerated static field setter
// Set static field: static public System.UnescapeMode UnescapeAll
void System::UnescapeMode::_set_UnescapeAll(System::UnescapeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UnescapeMode").WithContext("_set_UnescapeAll");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UnescapeMode", "UnescapeAll", value));
}
// Autogenerated static field getter
// Get static field: static public System.UnescapeMode UnescapeAllOrThrow
System::UnescapeMode System::UnescapeMode::_get_UnescapeAllOrThrow() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UnescapeMode").WithContext("_get_UnescapeAllOrThrow");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UnescapeMode>("System", "UnescapeMode", "UnescapeAllOrThrow"));
}
// Autogenerated static field setter
// Set static field: static public System.UnescapeMode UnescapeAllOrThrow
void System::UnescapeMode::_set_UnescapeAllOrThrow(System::UnescapeMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UnescapeMode").WithContext("_set_UnescapeAllOrThrow");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UnescapeMode", "UnescapeAllOrThrow", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.UriHelper
#include "System/UriHelper.hpp"
// Including type: System.UnescapeMode
#include "System/UnescapeMode.hpp"
// Including type: System.UriParser
#include "System/UriParser.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Char[] HexUpperChars
::Array<::Il2CppChar>* System::UriHelper::_get_HexUpperChars() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriHelper").WithContext("_get_HexUpperChars");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<::Il2CppChar>*>("System", "UriHelper", "HexUpperChars"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Char[] HexUpperChars
void System::UriHelper::_set_HexUpperChars(::Array<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriHelper").WithContext("_set_HexUpperChars");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriHelper", "HexUpperChars", value));
}
// Autogenerated method: System.UriHelper.EscapeString
::Array<::Il2CppChar>* System::UriHelper::EscapeString(::Il2CppString* input, int start, int end, ::Array<::Il2CppChar>* dest, int& destPos, bool isUriString, ::Il2CppChar force1, ::Il2CppChar force2, ::Il2CppChar rsvd) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriHelper").WithContext("EscapeString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UriHelper", "EscapeString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input, start, end, dest, destPos, isUriString, force1, force2, rsvd)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppChar>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, start, end, dest, destPos, isUriString, force1, force2, rsvd);
}
// Autogenerated method: System.UriHelper.EnsureDestinationSize
::Array<::Il2CppChar>* System::UriHelper::EnsureDestinationSize(::Il2CppChar* pStr, ::Array<::Il2CppChar>* dest, int currentInputPos, int16_t charsToAdd, int16_t minReallocateChars, int& destPos, int prevInputPos) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriHelper").WithContext("EnsureDestinationSize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UriHelper", "EnsureDestinationSize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pStr, dest, currentInputPos, charsToAdd, minReallocateChars, destPos, prevInputPos)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppChar>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pStr, dest, currentInputPos, charsToAdd, minReallocateChars, destPos, prevInputPos);
}
// Autogenerated method: System.UriHelper.UnescapeString
::Array<::Il2CppChar>* System::UriHelper::UnescapeString(::Il2CppString* input, int start, int end, ::Array<::Il2CppChar>* dest, int& destPosition, ::Il2CppChar rsvd1, ::Il2CppChar rsvd2, ::Il2CppChar rsvd3, System::UnescapeMode unescapeMode, System::UriParser* syntax, bool isQuery) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriHelper").WithContext("UnescapeString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UriHelper", "UnescapeString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input, start, end, dest, destPosition, rsvd1, rsvd2, rsvd3, unescapeMode, syntax, isQuery)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppChar>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, start, end, dest, destPosition, rsvd1, rsvd2, rsvd3, unescapeMode, syntax, isQuery);
}
// Autogenerated method: System.UriHelper.UnescapeString
::Array<::Il2CppChar>* System::UriHelper::UnescapeString(::Il2CppChar* pStr, int start, int end, ::Array<::Il2CppChar>* dest, int& destPosition, ::Il2CppChar rsvd1, ::Il2CppChar rsvd2, ::Il2CppChar rsvd3, System::UnescapeMode unescapeMode, System::UriParser* syntax, bool isQuery) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriHelper").WithContext("UnescapeString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UriHelper", "UnescapeString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pStr, start, end, dest, destPosition, rsvd1, rsvd2, rsvd3, unescapeMode, syntax, isQuery)));
  return ::il2cpp_utils::RunMethodThrow<::Array<::Il2CppChar>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pStr, start, end, dest, destPosition, rsvd1, rsvd2, rsvd3, unescapeMode, syntax, isQuery);
}
// Autogenerated method: System.UriHelper.MatchUTF8Sequence
void System::UriHelper::MatchUTF8Sequence(::Il2CppChar* pDest, ::Array<::Il2CppChar>* dest, int& destOffset, ::Array<::Il2CppChar>* unescapedChars, int charCount, ::Array<uint8_t>* bytes, int byteCount, bool isQuery, bool iriParsing) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriHelper").WithContext("MatchUTF8Sequence");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UriHelper", "MatchUTF8Sequence", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(pDest, dest, destOffset, unescapedChars, charCount, bytes, byteCount, isQuery, iriParsing)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, pDest, dest, destOffset, unescapedChars, charCount, bytes, byteCount, isQuery, iriParsing);
}
// Autogenerated method: System.UriHelper.EscapeAsciiChar
void System::UriHelper::EscapeAsciiChar(::Il2CppChar ch, ::Array<::Il2CppChar>* to, int& pos) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriHelper").WithContext("EscapeAsciiChar");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UriHelper", "EscapeAsciiChar", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch, to, pos)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch, to, pos);
}
// Autogenerated method: System.UriHelper.EscapedAscii
::Il2CppChar System::UriHelper::EscapedAscii(::Il2CppChar digit, ::Il2CppChar next) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriHelper").WithContext("EscapedAscii");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UriHelper", "EscapedAscii", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(digit, next)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppChar, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, digit, next);
}
// Autogenerated method: System.UriHelper.IsNotSafeForUnescape
bool System::UriHelper::IsNotSafeForUnescape(::Il2CppChar ch) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriHelper").WithContext("IsNotSafeForUnescape");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UriHelper", "IsNotSafeForUnescape", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(ch)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, ch);
}
// Autogenerated method: System.UriHelper.IsReservedUnreservedOrHash
bool System::UriHelper::IsReservedUnreservedOrHash(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriHelper").WithContext("IsReservedUnreservedOrHash");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UriHelper", "IsReservedUnreservedOrHash", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.UriHelper.IsUnreserved
bool System::UriHelper::IsUnreserved(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriHelper").WithContext("IsUnreserved");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UriHelper", "IsUnreserved", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.UriHelper.Is3986Unreserved
bool System::UriHelper::Is3986Unreserved(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriHelper").WithContext("Is3986Unreserved");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UriHelper", "Is3986Unreserved", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(c)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, c);
}
// Autogenerated method: System.UriHelper..cctor
void System::UriHelper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriHelper").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UriHelper", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UriHostNameType
#include "System/UriHostNameType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UriHostNameType Unknown
System::UriHostNameType System::UriHostNameType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriHostNameType").WithContext("_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriHostNameType>("System", "UriHostNameType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public System.UriHostNameType Unknown
void System::UriHostNameType::_set_Unknown(System::UriHostNameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriHostNameType").WithContext("_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriHostNameType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriHostNameType Basic
System::UriHostNameType System::UriHostNameType::_get_Basic() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriHostNameType").WithContext("_get_Basic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriHostNameType>("System", "UriHostNameType", "Basic"));
}
// Autogenerated static field setter
// Set static field: static public System.UriHostNameType Basic
void System::UriHostNameType::_set_Basic(System::UriHostNameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriHostNameType").WithContext("_set_Basic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriHostNameType", "Basic", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriHostNameType Dns
System::UriHostNameType System::UriHostNameType::_get_Dns() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriHostNameType").WithContext("_get_Dns");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriHostNameType>("System", "UriHostNameType", "Dns"));
}
// Autogenerated static field setter
// Set static field: static public System.UriHostNameType Dns
void System::UriHostNameType::_set_Dns(System::UriHostNameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriHostNameType").WithContext("_set_Dns");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriHostNameType", "Dns", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriHostNameType IPv4
System::UriHostNameType System::UriHostNameType::_get_IPv4() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriHostNameType").WithContext("_get_IPv4");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriHostNameType>("System", "UriHostNameType", "IPv4"));
}
// Autogenerated static field setter
// Set static field: static public System.UriHostNameType IPv4
void System::UriHostNameType::_set_IPv4(System::UriHostNameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriHostNameType").WithContext("_set_IPv4");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriHostNameType", "IPv4", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriHostNameType IPv6
System::UriHostNameType System::UriHostNameType::_get_IPv6() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriHostNameType").WithContext("_get_IPv6");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriHostNameType>("System", "UriHostNameType", "IPv6"));
}
// Autogenerated static field setter
// Set static field: static public System.UriHostNameType IPv6
void System::UriHostNameType::_set_IPv6(System::UriHostNameType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriHostNameType").WithContext("_set_IPv6");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriHostNameType", "IPv6", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.UriParser
#include "System/UriParser.hpp"
// Including type: System.Uri
#include "System/Uri.hpp"
// Including type: System.UriParser/BuiltInUriParser
#include "System/UriParser_BuiltInUriParser.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.UriFormatException
#include "System/UriFormatException.hpp"
// Including type: System.UriComponents
#include "System/UriComponents.hpp"
// Including type: System.UriFormat
#include "System/UriFormat.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.UriParser> m_Table
System::Collections::Generic::Dictionary_2<::Il2CppString*, System::UriParser*>* System::UriParser::_get_m_Table() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_get_m_Table");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<::Il2CppString*, System::UriParser*>*>("System", "UriParser", "m_Table")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<System.String,System.UriParser> m_Table
void System::UriParser::_set_m_Table(System::Collections::Generic::Dictionary_2<::Il2CppString*, System::UriParser*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_set_m_Table");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "m_Table", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Dictionary`2<System.String,System.UriParser> m_TempTable
System::Collections::Generic::Dictionary_2<::Il2CppString*, System::UriParser*>* System::UriParser::_get_m_TempTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_get_m_TempTable");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<System::Collections::Generic::Dictionary_2<::Il2CppString*, System::UriParser*>*>("System", "UriParser", "m_TempTable")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Dictionary`2<System.String,System.UriParser> m_TempTable
void System::UriParser::_set_m_TempTable(System::Collections::Generic::Dictionary_2<::Il2CppString*, System::UriParser*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_set_m_TempTable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "m_TempTable", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser HttpUri
System::UriParser* System::UriParser::_get_HttpUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_get_HttpUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriParser*>("System", "UriParser", "HttpUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser HttpUri
void System::UriParser::_set_HttpUri(System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_set_HttpUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "HttpUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser HttpsUri
System::UriParser* System::UriParser::_get_HttpsUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_get_HttpsUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriParser*>("System", "UriParser", "HttpsUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser HttpsUri
void System::UriParser::_set_HttpsUri(System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_set_HttpsUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "HttpsUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser WsUri
System::UriParser* System::UriParser::_get_WsUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_get_WsUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriParser*>("System", "UriParser", "WsUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser WsUri
void System::UriParser::_set_WsUri(System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_set_WsUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "WsUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser WssUri
System::UriParser* System::UriParser::_get_WssUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_get_WssUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriParser*>("System", "UriParser", "WssUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser WssUri
void System::UriParser::_set_WssUri(System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_set_WssUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "WssUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser FtpUri
System::UriParser* System::UriParser::_get_FtpUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_get_FtpUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriParser*>("System", "UriParser", "FtpUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser FtpUri
void System::UriParser::_set_FtpUri(System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_set_FtpUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "FtpUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser FileUri
System::UriParser* System::UriParser::_get_FileUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_get_FileUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriParser*>("System", "UriParser", "FileUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser FileUri
void System::UriParser::_set_FileUri(System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_set_FileUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "FileUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser GopherUri
System::UriParser* System::UriParser::_get_GopherUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_get_GopherUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriParser*>("System", "UriParser", "GopherUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser GopherUri
void System::UriParser::_set_GopherUri(System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_set_GopherUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "GopherUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser NntpUri
System::UriParser* System::UriParser::_get_NntpUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_get_NntpUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriParser*>("System", "UriParser", "NntpUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser NntpUri
void System::UriParser::_set_NntpUri(System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_set_NntpUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "NntpUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser NewsUri
System::UriParser* System::UriParser::_get_NewsUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_get_NewsUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriParser*>("System", "UriParser", "NewsUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser NewsUri
void System::UriParser::_set_NewsUri(System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_set_NewsUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "NewsUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser MailToUri
System::UriParser* System::UriParser::_get_MailToUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_get_MailToUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriParser*>("System", "UriParser", "MailToUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser MailToUri
void System::UriParser::_set_MailToUri(System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_set_MailToUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "MailToUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser UuidUri
System::UriParser* System::UriParser::_get_UuidUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_get_UuidUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriParser*>("System", "UriParser", "UuidUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser UuidUri
void System::UriParser::_set_UuidUri(System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_set_UuidUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "UuidUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser TelnetUri
System::UriParser* System::UriParser::_get_TelnetUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_get_TelnetUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriParser*>("System", "UriParser", "TelnetUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser TelnetUri
void System::UriParser::_set_TelnetUri(System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_set_TelnetUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "TelnetUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser LdapUri
System::UriParser* System::UriParser::_get_LdapUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_get_LdapUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriParser*>("System", "UriParser", "LdapUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser LdapUri
void System::UriParser::_set_LdapUri(System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_set_LdapUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "LdapUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser NetTcpUri
System::UriParser* System::UriParser::_get_NetTcpUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_get_NetTcpUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriParser*>("System", "UriParser", "NetTcpUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser NetTcpUri
void System::UriParser::_set_NetTcpUri(System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_set_NetTcpUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "NetTcpUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser NetPipeUri
System::UriParser* System::UriParser::_get_NetPipeUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_get_NetPipeUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriParser*>("System", "UriParser", "NetPipeUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser NetPipeUri
void System::UriParser::_set_NetPipeUri(System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_set_NetPipeUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "NetPipeUri", value));
}
// Autogenerated static field getter
// Get static field: static System.UriParser VsMacrosUri
System::UriParser* System::UriParser::_get_VsMacrosUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_get_VsMacrosUri");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriParser*>("System", "UriParser", "VsMacrosUri"));
}
// Autogenerated static field setter
// Set static field: static System.UriParser VsMacrosUri
void System::UriParser::_set_VsMacrosUri(System::UriParser* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_set_VsMacrosUri");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "VsMacrosUri", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UriParser/UriQuirksVersion s_QuirksVersion
System::UriParser::UriQuirksVersion System::UriParser::_get_s_QuirksVersion() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_get_s_QuirksVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriParser::UriQuirksVersion>("System", "UriParser", "s_QuirksVersion"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UriParser/UriQuirksVersion s_QuirksVersion
void System::UriParser::_set_s_QuirksVersion(System::UriParser::UriQuirksVersion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_set_s_QuirksVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "s_QuirksVersion", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UriSyntaxFlags HttpSyntaxFlags
System::UriSyntaxFlags System::UriParser::_get_HttpSyntaxFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_get_HttpSyntaxFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriSyntaxFlags>("System", "UriParser", "HttpSyntaxFlags"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UriSyntaxFlags HttpSyntaxFlags
void System::UriParser::_set_HttpSyntaxFlags(System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_set_HttpSyntaxFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "HttpSyntaxFlags", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.UriSyntaxFlags FileSyntaxFlags
System::UriSyntaxFlags System::UriParser::_get_FileSyntaxFlags() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_get_FileSyntaxFlags");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriSyntaxFlags>("System", "UriParser", "FileSyntaxFlags"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UriSyntaxFlags FileSyntaxFlags
void System::UriParser::_set_FileSyntaxFlags(System::UriSyntaxFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("_set_FileSyntaxFlags");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser", "FileSyntaxFlags", value));
}
// Autogenerated method: System.UriParser.get_SchemeName
::Il2CppString* System::UriParser::get_SchemeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("get_SchemeName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_SchemeName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: System.UriParser.get_DefaultPort
int System::UriParser::get_DefaultPort() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("get_DefaultPort");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_DefaultPort", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: System.UriParser.OnNewUri
System::UriParser* System::UriParser::OnNewUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("OnNewUri");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnNewUri", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::UriParser*, false>(this, ___internal__method);
}
// Autogenerated method: System.UriParser.InitializeAndValidate
void System::UriParser::InitializeAndValidate(System::Uri* uri, System::UriFormatException*& parsingError) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("InitializeAndValidate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InitializeAndValidate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uri, parsingError)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, uri, parsingError);
}
// Autogenerated method: System.UriParser.Resolve
::Il2CppString* System::UriParser::Resolve(System::Uri* baseUri, System::Uri* relativeUri, System::UriFormatException*& parsingError) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("Resolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Resolve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(baseUri, relativeUri, parsingError)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, baseUri, relativeUri, parsingError);
}
// Autogenerated method: System.UriParser.GetComponents
::Il2CppString* System::UriParser::GetComponents(System::Uri* uri, System::UriComponents components, System::UriFormat format) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("GetComponents");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetComponents", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uri, components, format)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, uri, components, format);
}
// Autogenerated method: System.UriParser.IsWellFormedOriginalString
bool System::UriParser::IsWellFormedOriginalString(System::Uri* uri) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("IsWellFormedOriginalString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsWellFormedOriginalString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(uri)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, uri);
}
// Autogenerated method: System.UriParser.get_ShouldUseLegacyV2Quirks
bool System::UriParser::get_ShouldUseLegacyV2Quirks() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("get_ShouldUseLegacyV2Quirks");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UriParser", "get_ShouldUseLegacyV2Quirks", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.UriParser..cctor
void System::UriParser::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext(".cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UriParser", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: System.UriParser.get_Flags
System::UriSyntaxFlags System::UriParser::get_Flags() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("get_Flags");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_Flags", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::UriSyntaxFlags, false>(this, ___internal__method);
}
// Autogenerated method: System.UriParser.NotAny
bool System::UriParser::NotAny(System::UriSyntaxFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("NotAny");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "NotAny", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(flags)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, flags);
}
// Autogenerated method: System.UriParser.InFact
bool System::UriParser::InFact(System::UriSyntaxFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("InFact");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InFact", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(flags)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, flags);
}
// Autogenerated method: System.UriParser.IsAllSet
bool System::UriParser::IsAllSet(System::UriSyntaxFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("IsAllSet");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsAllSet", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(flags)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, flags);
}
// Autogenerated method: System.UriParser.IsFullMatch
bool System::UriParser::IsFullMatch(System::UriSyntaxFlags flags, System::UriSyntaxFlags expected) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("IsFullMatch");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsFullMatch", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(flags, expected)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, flags, expected);
}
// Autogenerated method: System.UriParser.FindOrFetchAsUnknownV1Syntax
System::UriParser* System::UriParser::FindOrFetchAsUnknownV1Syntax(::Il2CppString* lwrCaseScheme) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("FindOrFetchAsUnknownV1Syntax");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UriParser", "FindOrFetchAsUnknownV1Syntax", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lwrCaseScheme)));
  return ::il2cpp_utils::RunMethodThrow<System::UriParser*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lwrCaseScheme);
}
// Autogenerated method: System.UriParser.GetSyntax
System::UriParser* System::UriParser::GetSyntax(::Il2CppString* lwrCaseScheme) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("GetSyntax");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "UriParser", "GetSyntax", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(lwrCaseScheme)));
  return ::il2cpp_utils::RunMethodThrow<System::UriParser*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, lwrCaseScheme);
}
// Autogenerated method: System.UriParser.get_IsSimple
bool System::UriParser::get_IsSimple() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("get_IsSimple");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_IsSimple", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: System.UriParser.InternalOnNewUri
System::UriParser* System::UriParser::InternalOnNewUri() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("InternalOnNewUri");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalOnNewUri", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::UriParser*, false>(this, ___internal__method);
}
// Autogenerated method: System.UriParser.InternalValidate
void System::UriParser::InternalValidate(System::Uri* thisUri, System::UriFormatException*& parsingError) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("InternalValidate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalValidate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(thisUri, parsingError)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, thisUri, parsingError);
}
// Autogenerated method: System.UriParser.InternalResolve
::Il2CppString* System::UriParser::InternalResolve(System::Uri* thisBaseUri, System::Uri* uriLink, System::UriFormatException*& parsingError) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("InternalResolve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalResolve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(thisBaseUri, uriLink, parsingError)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, thisBaseUri, uriLink, parsingError);
}
// Autogenerated method: System.UriParser.InternalGetComponents
::Il2CppString* System::UriParser::InternalGetComponents(System::Uri* thisUri, System::UriComponents uriComponents, System::UriFormat uriFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("InternalGetComponents");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalGetComponents", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(thisUri, uriComponents, uriFormat)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, thisUri, uriComponents, uriFormat);
}
// Autogenerated method: System.UriParser.InternalIsWellFormedOriginalString
bool System::UriParser::InternalIsWellFormedOriginalString(System::Uri* thisUri) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriParser").WithContext("InternalIsWellFormedOriginalString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InternalIsWellFormedOriginalString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(thisUri)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, thisUri);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: System.UriParser/UriQuirksVersion
#include "System/UriParser.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.UriParser/UriQuirksVersion V2
System::UriParser::UriQuirksVersion System::UriParser::UriQuirksVersion::_get_V2() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriQuirksVersion").WithContext("_get_V2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriParser::UriQuirksVersion>("System", "UriParser/UriQuirksVersion", "V2"));
}
// Autogenerated static field setter
// Set static field: static public System.UriParser/UriQuirksVersion V2
void System::UriParser::UriQuirksVersion::_set_V2(System::UriParser::UriQuirksVersion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriQuirksVersion").WithContext("_set_V2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser/UriQuirksVersion", "V2", value));
}
// Autogenerated static field getter
// Get static field: static public System.UriParser/UriQuirksVersion V3
System::UriParser::UriQuirksVersion System::UriParser::UriQuirksVersion::_get_V3() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriQuirksVersion").WithContext("_get_V3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<System::UriParser::UriQuirksVersion>("System", "UriParser/UriQuirksVersion", "V3"));
}
// Autogenerated static field setter
// Set static field: static public System.UriParser/UriQuirksVersion V3
void System::UriParser::UriQuirksVersion::_set_V3(System::UriParser::UriQuirksVersion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("UriQuirksVersion").WithContext("_set_V3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("System", "UriParser/UriQuirksVersion", "V3", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.UriParser/BuiltInUriParser
#include "System/UriParser_BuiltInUriParser.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: System.DomainNameHelper
#include "System/DomainNameHelper.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: System.DomainNameHelper.ParseCanonicalName
::Il2CppString* System::DomainNameHelper::ParseCanonicalName(::Il2CppString* str, int start, int end, bool& loopback) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DomainNameHelper").WithContext("ParseCanonicalName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DomainNameHelper", "ParseCanonicalName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(str, start, end, loopback)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, str, start, end, loopback);
}
// Autogenerated method: System.DomainNameHelper.IsValid
bool System::DomainNameHelper::IsValid(::Il2CppChar* name, uint16_t pos, int& returnedEnd, bool& notCanonical, bool notImplicitFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DomainNameHelper").WithContext("IsValid");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DomainNameHelper", "IsValid", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, pos, returnedEnd, notCanonical, notImplicitFile)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, pos, returnedEnd, notCanonical, notImplicitFile);
}
// Autogenerated method: System.DomainNameHelper.IsValidByIri
bool System::DomainNameHelper::IsValidByIri(::Il2CppChar* name, uint16_t pos, int& returnedEnd, bool& notCanonical, bool notImplicitFile) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DomainNameHelper").WithContext("IsValidByIri");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DomainNameHelper", "IsValidByIri", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(name, pos, returnedEnd, notCanonical, notImplicitFile)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, name, pos, returnedEnd, notCanonical, notImplicitFile);
}
// Autogenerated method: System.DomainNameHelper.IdnEquivalent
::Il2CppString* System::DomainNameHelper::IdnEquivalent(::Il2CppChar* hostname, int start, int end, bool& allAscii, bool& atLeastOneValidIdn) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DomainNameHelper").WithContext("IdnEquivalent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DomainNameHelper", "IdnEquivalent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hostname, start, end, allAscii, atLeastOneValidIdn)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hostname, start, end, allAscii, atLeastOneValidIdn);
}
// Autogenerated method: System.DomainNameHelper.IdnEquivalent
::Il2CppString* System::DomainNameHelper::IdnEquivalent(::Il2CppChar* hostname, int start, int end, bool& allAscii, ::Il2CppString*& bidiStrippedHost) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DomainNameHelper").WithContext("IdnEquivalent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DomainNameHelper", "IdnEquivalent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hostname, start, end, allAscii, bidiStrippedHost)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hostname, start, end, allAscii, bidiStrippedHost);
}
// Autogenerated method: System.DomainNameHelper.IsIdnAce
bool System::DomainNameHelper::IsIdnAce(::Il2CppString* input, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DomainNameHelper").WithContext("IsIdnAce");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DomainNameHelper", "IsIdnAce", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input, index)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, index);
}
// Autogenerated method: System.DomainNameHelper.IsIdnAce
bool System::DomainNameHelper::IsIdnAce(::Il2CppChar* input, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DomainNameHelper").WithContext("IsIdnAce");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DomainNameHelper", "IsIdnAce", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(input, index)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, input, index);
}
// Autogenerated method: System.DomainNameHelper.UnicodeEquivalent
::Il2CppString* System::DomainNameHelper::UnicodeEquivalent(::Il2CppString* idnHost, ::Il2CppChar* hostname, int start, int end) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DomainNameHelper").WithContext("UnicodeEquivalent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DomainNameHelper", "UnicodeEquivalent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(idnHost, hostname, start, end)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, idnHost, hostname, start, end);
}
// Autogenerated method: System.DomainNameHelper.UnicodeEquivalent
::Il2CppString* System::DomainNameHelper::UnicodeEquivalent(::Il2CppChar* hostname, int start, int end, bool& allAscii, bool& atLeastOneValidIdn) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DomainNameHelper").WithContext("UnicodeEquivalent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DomainNameHelper", "UnicodeEquivalent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(hostname, start, end, allAscii, atLeastOneValidIdn)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, hostname, start, end, allAscii, atLeastOneValidIdn);
}
// Autogenerated method: System.DomainNameHelper.IsASCIILetterOrDigit
bool System::DomainNameHelper::IsASCIILetterOrDigit(::Il2CppChar character, bool& notCanonical) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DomainNameHelper").WithContext("IsASCIILetterOrDigit");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DomainNameHelper", "IsASCIILetterOrDigit", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(character, notCanonical)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, character, notCanonical);
}
// Autogenerated method: System.DomainNameHelper.IsValidDomainLabelCharacter
bool System::DomainNameHelper::IsValidDomainLabelCharacter(::Il2CppChar character, bool& notCanonical) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("System").WithContext("DomainNameHelper").WithContext("IsValidDomainLabelCharacter");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("System", "DomainNameHelper", "IsValidDomainLabelCharacter", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(character, notCanonical)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, character, notCanonical);
}
