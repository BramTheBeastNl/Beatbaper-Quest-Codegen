// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.IMasterServer
#include "MasterServer/IMasterServer.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: AuthenticationToken
#include "GlobalNamespace/AuthenticationToken.hpp"
// Including type: MasterServer.BroadcastServerStatusResponse
#include "MasterServer/BroadcastServerStatusResponse.hpp"
// Including type: DiscoveryPolicy
#include "GlobalNamespace/DiscoveryPolicy.hpp"
// Including type: InvitePolicy
#include "GlobalNamespace/InvitePolicy.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: MasterServer.BroadcastServerHeartbeatResponse
#include "MasterServer/BroadcastServerHeartbeatResponse.hpp"
// Including type: MasterServer.ConnectToServerResponse
#include "MasterServer/ConnectToServerResponse.hpp"
// Including type: MasterServer.GetPublicServersResponse
#include "MasterServer/GetPublicServersResponse.hpp"
// Including type: GameplayServerFilter
#include "GlobalNamespace/GameplayServerFilter.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: GameplayServerFiniteStateMachine/GameStateType
#include "GlobalNamespace/GameplayServerFiniteStateMachine_GameStateType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.IMasterServer.TryAuthenticateUser
System::Threading::Tasks::Task_1<bool>* MasterServer::IMasterServer::TryAuthenticateUser(uint protocolVersion, System::Net::IPEndPoint* endPoint, GlobalNamespace::AuthenticationToken authenticationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("IMasterServer").WithContext("TryAuthenticateUser");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::Threading::Tasks::Task_1<bool>*>(), "TryAuthenticateUser", {}, ::il2cpp_utils::ExtractTypes(protocolVersion, endPoint, authenticationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<bool>*, false>(this, ___internal__method, protocolVersion, endPoint, authenticationToken);
}
// Autogenerated method: MasterServer.IMasterServer.TryAuthenticateDedicatedServer
bool MasterServer::IMasterServer::TryAuthenticateDedicatedServer(uint protocolVersion, System::Net::IPEndPoint* endPoint, ::Il2CppString* id, ::Array<uint8_t>* nonce, ::Array<uint8_t>* hash, int64_t timestamp) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("IMasterServer").WithContext("TryAuthenticateDedicatedServer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "TryAuthenticateDedicatedServer", {}, ::il2cpp_utils::ExtractTypes(protocolVersion, endPoint, id, nonce, hash, timestamp)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, protocolVersion, endPoint, id, nonce, hash, timestamp);
}
// Autogenerated method: MasterServer.IMasterServer.TryBroadcastServer
System::Threading::Tasks::Task_1<MasterServer::BroadcastServerStatusResponse*>* MasterServer::IMasterServer::TryBroadcastServer(uint protocolVersion, System::Net::IPEndPoint* endPoint, ::Il2CppString* userId, ::Il2CppString* userName, ::Il2CppString* serverName, ::Il2CppString* secret, ::Il2CppString* password, ::Array<uint8_t>* random, ::Array<uint8_t>* publicKey, int currentPlayerCount, int maxPlayerCount, GlobalNamespace::DiscoveryPolicy discoveryPolicy, GlobalNamespace::InvitePolicy invitePolicy, GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("IMasterServer").WithContext("TryBroadcastServer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::Threading::Tasks::Task_1<MasterServer::BroadcastServerStatusResponse*>*>(), "TryBroadcastServer", {}, ::il2cpp_utils::ExtractTypes(protocolVersion, endPoint, userId, userName, serverName, secret, password, random, publicKey, currentPlayerCount, maxPlayerCount, discoveryPolicy, invitePolicy, configuration)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<MasterServer::BroadcastServerStatusResponse*>*, false>(this, ___internal__method, protocolVersion, endPoint, userId, userName, serverName, secret, password, random, publicKey, currentPlayerCount, maxPlayerCount, discoveryPolicy, invitePolicy, configuration);
}
// Autogenerated method: MasterServer.IMasterServer.TryHeartbeatUserServer
System::Threading::Tasks::Task_1<MasterServer::BroadcastServerHeartbeatResponse*>* MasterServer::IMasterServer::TryHeartbeatUserServer(uint protocolVersion, System::Net::IPEndPoint* endPoint, ::Il2CppString* userId, ::Il2CppString* userName, ::Il2CppString* secret, int currentPlayerCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("IMasterServer").WithContext("TryHeartbeatUserServer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::Threading::Tasks::Task_1<MasterServer::BroadcastServerHeartbeatResponse*>*>(), "TryHeartbeatUserServer", {}, ::il2cpp_utils::ExtractTypes(protocolVersion, endPoint, userId, userName, secret, currentPlayerCount)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<MasterServer::BroadcastServerHeartbeatResponse*>*, false>(this, ___internal__method, protocolVersion, endPoint, userId, userName, secret, currentPlayerCount);
}
// Autogenerated method: MasterServer.IMasterServer.TryRemoveServer
void MasterServer::IMasterServer::TryRemoveServer(uint protocolVersion, System::Net::IPEndPoint* endPoint, ::Il2CppString* userId, ::Il2CppString* userName, ::Il2CppString* secret) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("IMasterServer").WithContext("TryRemoveServer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "TryRemoveServer", {}, ::il2cpp_utils::ExtractTypes(protocolVersion, endPoint, userId, userName, secret)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, protocolVersion, endPoint, userId, userName, secret);
}
// Autogenerated method: MasterServer.IMasterServer.TryGetServer
System::Threading::Tasks::Task_1<MasterServer::ConnectToServerResponse*>* MasterServer::IMasterServer::TryGetServer(uint protocolVersion, System::Net::IPEndPoint* endPoint, ::Il2CppString* userId, ::Il2CppString* userName, ::Il2CppString* secret, ::Il2CppString* code, ::Il2CppString* password, ::Array<uint8_t>* random, ::Array<uint8_t>* publicKey, bool useRelay) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("IMasterServer").WithContext("TryGetServer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::Threading::Tasks::Task_1<MasterServer::ConnectToServerResponse*>*>(), "TryGetServer", {}, ::il2cpp_utils::ExtractTypes(protocolVersion, endPoint, userId, userName, secret, code, password, random, publicKey, useRelay)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<MasterServer::ConnectToServerResponse*>*, false>(this, ___internal__method, protocolVersion, endPoint, userId, userName, secret, code, password, random, publicKey, useRelay);
}
// Autogenerated method: MasterServer.IMasterServer.TryGetMatchmakingServer
System::Threading::Tasks::Task_1<MasterServer::ConnectToServerResponse*>* MasterServer::IMasterServer::TryGetMatchmakingServer(uint protocolVersion, System::Net::IPEndPoint* endPoint, ::Il2CppString* userId, ::Il2CppString* userName, GlobalNamespace::GameplayServerConfiguration configuration, ::Array<uint8_t>* random, ::Array<uint8_t>* publicKey, ::Il2CppString* secret) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("IMasterServer").WithContext("TryGetMatchmakingServer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::Threading::Tasks::Task_1<MasterServer::ConnectToServerResponse*>*>(), "TryGetMatchmakingServer", {}, ::il2cpp_utils::ExtractTypes(protocolVersion, endPoint, userId, userName, configuration, random, publicKey, secret)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<MasterServer::ConnectToServerResponse*>*, false>(this, ___internal__method, protocolVersion, endPoint, userId, userName, configuration, random, publicKey, secret);
}
// Autogenerated method: MasterServer.IMasterServer.TryGetPublicServers
System::Threading::Tasks::Task_1<MasterServer::GetPublicServersResponse*>* MasterServer::IMasterServer::TryGetPublicServers(uint protocolVersion, System::Net::IPEndPoint* endPoint, ::Il2CppString* userId, ::Il2CppString* userName, int offset, int count, GlobalNamespace::GameplayServerFilter filter) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("IMasterServer").WithContext("TryGetPublicServers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::Threading::Tasks::Task_1<MasterServer::GetPublicServersResponse*>*>(), "TryGetPublicServers", {}, ::il2cpp_utils::ExtractTypes(protocolVersion, endPoint, userId, userName, offset, count, filter)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<MasterServer::GetPublicServersResponse*>*, false>(this, ___internal__method, protocolVersion, endPoint, userId, userName, offset, count, filter);
}
// Autogenerated method: MasterServer.IMasterServer.HeartbeatDedicatedServer
void MasterServer::IMasterServer::HeartbeatDedicatedServer(uint protocolVersion, ::Il2CppString* dedicatedServerId, int64_t dedicatedServerCreationTime, System::Net::IPEndPoint* endPoint, int cpuUtilization, int occupiedServerSlotCount, int unoccupiedServerSlotCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("IMasterServer").WithContext("HeartbeatDedicatedServer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "HeartbeatDedicatedServer", {}, ::il2cpp_utils::ExtractTypes(protocolVersion, dedicatedServerId, dedicatedServerCreationTime, endPoint, cpuUtilization, occupiedServerSlotCount, unoccupiedServerSlotCount)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, protocolVersion, dedicatedServerId, dedicatedServerCreationTime, endPoint, cpuUtilization, occupiedServerSlotCount, unoccupiedServerSlotCount);
}
// Autogenerated method: MasterServer.IMasterServer.UpdateRelayServerStatus
void MasterServer::IMasterServer::UpdateRelayServerStatus(uint protocolVersion, ::Il2CppString* dedicatedServerId, int64_t dedicatedServerCreationTime, System::Net::IPEndPoint* endPoint, ::Il2CppString* id, int currentPlayerCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("IMasterServer").WithContext("UpdateRelayServerStatus");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "UpdateRelayServerStatus", {}, ::il2cpp_utils::ExtractTypes(protocolVersion, dedicatedServerId, dedicatedServerCreationTime, endPoint, id, currentPlayerCount)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, protocolVersion, dedicatedServerId, dedicatedServerCreationTime, endPoint, id, currentPlayerCount);
}
// Autogenerated method: MasterServer.IMasterServer.UpdateMatchmakingServerStatus
void MasterServer::IMasterServer::UpdateMatchmakingServerStatus(uint protocolVersion, ::Il2CppString* dedicatedServerId, int64_t dedicatedServerCreationTime, System::Net::IPEndPoint* endPoint, ::Il2CppString* id, GlobalNamespace::GameplayServerFiniteStateMachine::GameStateType gameState, int currentPlayerCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("IMasterServer").WithContext("UpdateMatchmakingServerStatus");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "UpdateMatchmakingServerStatus", {}, ::il2cpp_utils::ExtractTypes(protocolVersion, dedicatedServerId, dedicatedServerCreationTime, endPoint, id, gameState, currentPlayerCount)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, protocolVersion, dedicatedServerId, dedicatedServerCreationTime, endPoint, id, gameState, currentPlayerCount);
}
// Autogenerated method: MasterServer.IMasterServer.SetDedicatedServerNoLongerOccupied
void MasterServer::IMasterServer::SetDedicatedServerNoLongerOccupied(uint protocolVersion, ::Il2CppString* dedicatedServerId, int64_t dedicatedServerCreationTime, System::Net::IPEndPoint* endPoint, ::Il2CppString* id) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("IMasterServer").WithContext("SetDedicatedServerNoLongerOccupied");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "SetDedicatedServerNoLongerOccupied", {}, ::il2cpp_utils::ExtractTypes(protocolVersion, dedicatedServerId, dedicatedServerCreationTime, endPoint, id)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, protocolVersion, dedicatedServerId, dedicatedServerCreationTime, endPoint, id);
}
// Autogenerated method: MasterServer.IMasterServer.RemoveDedicatedServer
void MasterServer::IMasterServer::RemoveDedicatedServer(uint protocolVersion, ::Il2CppString* dedicatedServerId, int64_t dedicatedServerCreationTime, System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("IMasterServer").WithContext("RemoveDedicatedServer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "RemoveDedicatedServer", {}, ::il2cpp_utils::ExtractTypes(protocolVersion, dedicatedServerId, dedicatedServerCreationTime, endPoint)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, protocolVersion, dedicatedServerId, dedicatedServerCreationTime, endPoint);
}
// Autogenerated method: MasterServer.IMasterServer.ShouldHandleMessageFromEndPoint
bool MasterServer::IMasterServer::ShouldHandleMessageFromEndPoint(System::Net::IPEndPoint* remoteEndPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("IMasterServer").WithContext("ShouldHandleMessageFromEndPoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "ShouldHandleMessageFromEndPoint", {}, ::il2cpp_utils::ExtractTypes(remoteEndPoint)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, remoteEndPoint);
}
// Autogenerated method: MasterServer.IMasterServer.ReportExceptionForEndPoint
void MasterServer::IMasterServer::ReportExceptionForEndPoint(System::Net::IPEndPoint* remoteEndPoint, System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("IMasterServer").WithContext("ReportExceptionForEndPoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "ReportExceptionForEndPoint", {}, ::il2cpp_utils::ExtractTypes(remoteEndPoint, exception)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, remoteEndPoint, exception);
}
