// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.IAnalyticsManager
#include "MasterServer/IAnalyticsManager.hpp"
// Including type: MasterServer.AnalyticsMetricUnit
#include "MasterServer/AnalyticsMetricUnit.hpp"
// Including type: MasterServer.IMasterServerReliableRequest
#include "MasterServer/IMasterServerReliableRequest.hpp"
// Including type: MasterServer.IMasterServerReliableResponse
#include "MasterServer/IMasterServerReliableResponse.hpp"
// Including type: MasterServer.IMasterServerUnreliableMessage
#include "MasterServer/IMasterServerUnreliableMessage.hpp"
// Including type: MasterServer.IMasterServerResponse
#include "MasterServer/IMasterServerResponse.hpp"
// Including type: DedicatedServerType
#include "GlobalNamespace/DedicatedServerType.hpp"
// Including type: ConnectionFailedReason
#include "GlobalNamespace/ConnectionFailedReason.hpp"
// Including type: DisconnectedReason
#include "GlobalNamespace/DisconnectedReason.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.IAnalyticsManager.PollUpdate
void MasterServer::IAnalyticsManager::PollUpdate() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "PollUpdate"));
}
// Autogenerated method: MasterServer.IAnalyticsManager.UpdateState
void MasterServer::IAnalyticsManager::UpdateState(::Il2CppString* metricName, int64_t state, MasterServer::AnalyticsMetricUnit unit, bool alarmMetric) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "UpdateState", metricName, state, unit, alarmMetric));
}
// Autogenerated method: MasterServer.IAnalyticsManager.UpdateAverage
void MasterServer::IAnalyticsManager::UpdateAverage(::Il2CppString* metricName, double value, MasterServer::AnalyticsMetricUnit unit, bool alarmMetric) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "UpdateAverage", metricName, value, unit, alarmMetric));
}
// Autogenerated method: MasterServer.IAnalyticsManager.IncrementCounter
void MasterServer::IAnalyticsManager::IncrementCounter(::Il2CppString* metricName, int64_t incrementAmount, MasterServer::AnalyticsMetricUnit unit) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "IncrementCounter", metricName, incrementAmount, unit));
}
// Autogenerated method: MasterServer.IAnalyticsManager.ReceivedReliableRequestEvent
void MasterServer::IAnalyticsManager::ReceivedReliableRequestEvent(MasterServer::IMasterServerReliableRequest* request) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ReceivedReliableRequestEvent", request));
}
// Autogenerated method: MasterServer.IAnalyticsManager.SentReliableRequestEvent
void MasterServer::IAnalyticsManager::SentReliableRequestEvent(MasterServer::IMasterServerReliableRequest* request) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SentReliableRequestEvent", request));
}
// Autogenerated method: MasterServer.IAnalyticsManager.ReceivedReliableResponseEvent
void MasterServer::IAnalyticsManager::ReceivedReliableResponseEvent(MasterServer::IMasterServerReliableResponse* request) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ReceivedReliableResponseEvent", request));
}
// Autogenerated method: MasterServer.IAnalyticsManager.SentReliableResponseEvent
void MasterServer::IAnalyticsManager::SentReliableResponseEvent(MasterServer::IMasterServerReliableResponse* response) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SentReliableResponseEvent", response));
}
// Autogenerated method: MasterServer.IAnalyticsManager.ReceivedUnreliableMessageEvent
void MasterServer::IAnalyticsManager::ReceivedUnreliableMessageEvent(MasterServer::IMasterServerUnreliableMessage* message) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ReceivedUnreliableMessageEvent", message));
}
// Autogenerated method: MasterServer.IAnalyticsManager.SentUnreliableMessageEvent
void MasterServer::IAnalyticsManager::SentUnreliableMessageEvent(MasterServer::IMasterServerUnreliableMessage* message) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SentUnreliableMessageEvent", message));
}
// Autogenerated method: MasterServer.IAnalyticsManager.SentUnreliableResponseEvent
void MasterServer::IAnalyticsManager::SentUnreliableResponseEvent(MasterServer::IMasterServerResponse* response) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SentUnreliableResponseEvent", response));
}
// Autogenerated method: MasterServer.IAnalyticsManager.ReceivedUnreliableResponseEvent
void MasterServer::IAnalyticsManager::ReceivedUnreliableResponseEvent(MasterServer::IMasterServerResponse* response) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ReceivedUnreliableResponseEvent", response));
}
// Autogenerated method: MasterServer.IAnalyticsManager.DedicatedServerServerConnectedEvent
void MasterServer::IAnalyticsManager::DedicatedServerServerConnectedEvent(GlobalNamespace::DedicatedServerType serverType) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "DedicatedServerServerConnectedEvent", serverType));
}
// Autogenerated method: MasterServer.IAnalyticsManager.DedicatedServerServerConnectionFailedEvent
void MasterServer::IAnalyticsManager::DedicatedServerServerConnectionFailedEvent(GlobalNamespace::DedicatedServerType serverType, GlobalNamespace::ConnectionFailedReason reason) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "DedicatedServerServerConnectionFailedEvent", serverType, reason));
}
// Autogenerated method: MasterServer.IAnalyticsManager.DedicatedServerServerDisconnectedEvent
void MasterServer::IAnalyticsManager::DedicatedServerServerDisconnectedEvent(GlobalNamespace::DedicatedServerType serverType, GlobalNamespace::DisconnectedReason reason) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "DedicatedServerServerDisconnectedEvent", serverType, reason));
}
// Autogenerated method: MasterServer.IAnalyticsManager.DedicatedServerPlayerConnectedEvent
void MasterServer::IAnalyticsManager::DedicatedServerPlayerConnectedEvent(GlobalNamespace::DedicatedServerType serverType) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "DedicatedServerPlayerConnectedEvent", serverType));
}
// Autogenerated method: MasterServer.IAnalyticsManager.DedicatedServerPlayerDisconnectedEvent
void MasterServer::IAnalyticsManager::DedicatedServerPlayerDisconnectedEvent(GlobalNamespace::DedicatedServerType serverType, GlobalNamespace::DisconnectedReason reason) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "DedicatedServerPlayerDisconnectedEvent", serverType, reason));
}
