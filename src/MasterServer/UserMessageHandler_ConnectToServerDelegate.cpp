// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.UserMessageHandler/ConnectToServerDelegate
#include "MasterServer/UserMessageHandler_ConnectToServerDelegate.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: DiscoveryPolicy
#include "GlobalNamespace/DiscoveryPolicy.hpp"
// Including type: InvitePolicy
#include "GlobalNamespace/InvitePolicy.hpp"
// Including type: GameplayServerConfiguration
#include "GlobalNamespace/GameplayServerConfiguration.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.UserMessageHandler/ConnectToServerDelegate.Invoke
void MasterServer::UserMessageHandler::ConnectToServerDelegate::Invoke(::Il2CppString* userId, ::Il2CppString* userName, System::Net::IPEndPoint* remoteEndPoint, ::Il2CppString* secret, GlobalNamespace::DiscoveryPolicy discoveryPolicy, GlobalNamespace::InvitePolicy invitePolicy, int maxPlayerCount, GlobalNamespace::GameplayServerConfiguration configuration, ::Array<uint8_t>* preMasterSecret, ::Array<uint8_t>* myRandom, ::Array<uint8_t>* remoteRandom, bool isConnectionOwner, bool isDedicatedServer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("ConnectToServerDelegate").WithContext("Invoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Invoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId, userName, remoteEndPoint, secret, discoveryPolicy, invitePolicy, maxPlayerCount, configuration, preMasterSecret, myRandom, remoteRandom, isConnectionOwner, isDedicatedServer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, userId, userName, remoteEndPoint, secret, discoveryPolicy, invitePolicy, maxPlayerCount, configuration, preMasterSecret, myRandom, remoteRandom, isConnectionOwner, isDedicatedServer);
}
// Autogenerated method: MasterServer.UserMessageHandler/ConnectToServerDelegate.BeginInvoke
System::IAsyncResult* MasterServer::UserMessageHandler::ConnectToServerDelegate::BeginInvoke(::Il2CppString* userId, ::Il2CppString* userName, System::Net::IPEndPoint* remoteEndPoint, ::Il2CppString* secret, GlobalNamespace::DiscoveryPolicy discoveryPolicy, GlobalNamespace::InvitePolicy invitePolicy, int maxPlayerCount, GlobalNamespace::GameplayServerConfiguration configuration, ::Array<uint8_t>* preMasterSecret, ::Array<uint8_t>* myRandom, ::Array<uint8_t>* remoteRandom, bool isConnectionOwner, bool isDedicatedServer, System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("ConnectToServerDelegate").WithContext("BeginInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(userId, userName, remoteEndPoint, secret, discoveryPolicy, invitePolicy, maxPlayerCount, configuration, preMasterSecret, myRandom, remoteRandom, isConnectionOwner, isDedicatedServer, callback, object)));
  return ::il2cpp_utils::RunMethodThrow<System::IAsyncResult*, false>(this, ___internal__method, userId, userName, remoteEndPoint, secret, discoveryPolicy, invitePolicy, maxPlayerCount, configuration, preMasterSecret, myRandom, remoteRandom, isConnectionOwner, isDedicatedServer, callback, object);
}
// Autogenerated method: MasterServer.UserMessageHandler/ConnectToServerDelegate.EndInvoke
void MasterServer::UserMessageHandler::ConnectToServerDelegate::EndInvoke(System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("ConnectToServerDelegate").WithContext("EndInvoke");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "EndInvoke", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(result)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, result);
}
