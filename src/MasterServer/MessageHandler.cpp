// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.MessageHandler
#include "MasterServer/MessageHandler.hpp"
// Including type: MasterServer.MessageHandler/IMessageSender
#include "MasterServer/MessageHandler_IMessageSender.hpp"
// Including type: MasterServer.MessageHandler/ConnectionState
#include "MasterServer/MessageHandler_ConnectionState.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: MasterServer.MessageHandler/RequestWaiter
#include "MasterServer/MessageHandler_RequestWaiter.hpp"
// Including type: MasterServer.MessageHandler/SentRequestWaiter
#include "MasterServer/MessageHandler_SentRequestWaiter.hpp"
// Including type: MasterServer.MessageHandler/RequestResponseWaiter
#include "MasterServer/MessageHandler_RequestResponseWaiter.hpp"
// Including type: MasterServer.MessageHandler/MultipartMessageWaiter
#include "MasterServer/MessageHandler_MultipartMessageWaiter.hpp"
// Including type: PacketEncryptionLayer
#include "GlobalNamespace/PacketEncryptionLayer.hpp"
// Including type: MasterServer.IAnalyticsManager
#include "MasterServer/IAnalyticsManager.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: MasterServer.MessageHandler/<>c__DisplayClass74_0`1
#include "MasterServer/MessageHandler_--c__DisplayClass74_0_1.hpp"
// Including type: MasterServer.MessageHandler/<>c__DisplayClass75_0`1
#include "MasterServer/MessageHandler_--c__DisplayClass75_0_1.hpp"
// Including type: MasterServer.MessageHandler/<GetAndSendResponse>d__80`2
#include "MasterServer/MessageHandler_-GetAndSendResponse-d__80_2.hpp"
// Including type: MasterServer.MessageHandler/<GetAndSendResponseAsync>d__81`2
#include "MasterServer/MessageHandler_-GetAndSendResponseAsync-d__81_2.hpp"
// Including type: MasterServer.MessageHandler/<GetAndSendUnreilableResponse>d__82`2
#include "MasterServer/MessageHandler_-GetAndSendUnreilableResponse-d__82_2.hpp"
// Including type: MasterServer.MessageHandler/<SendMessageWithRetry>d__95
#include "MasterServer/MessageHandler_-SendMessageWithRetry-d__95.hpp"
// Including type: MasterServer.MessageHandler/<>c__DisplayClass97_0
#include "MasterServer/MessageHandler_--c__DisplayClass97_0.hpp"
// Including type: MasterServer.MessageHandler/<SendMultipartMessageWithRetryAsync>d__97
#include "MasterServer/MessageHandler_-SendMultipartMessageWithRetryAsync-d__97.hpp"
// Including type: MasterServer.MessageHandler/<SendMessageWithRetryAsyncInternal>d__98
#include "MasterServer/MessageHandler_-SendMessageWithRetryAsyncInternal-d__98.hpp"
// Including type: MasterServer.MessageHandler/<SendMessageWithRetryAwaitResponseAsync>d__99`1
#include "MasterServer/MessageHandler_-SendMessageWithRetryAwaitResponseAsync-d__99_1.hpp"
// Including type: MasterServer.MessageHandler/<>c__DisplayClass100_0`1
#include "MasterServer/MessageHandler_--c__DisplayClass100_0_1.hpp"
// Including type: MasterServer.MessageHandler/<AwaitResponseAsync>d__101`1
#include "MasterServer/MessageHandler_-AwaitResponseAsync-d__101_1.hpp"
// Including type: NetworkPacketSerializer`2
#include "GlobalNamespace/NetworkPacketSerializer_2.hpp"
// Including type: ExpiringDictionary`2
#include "GlobalNamespace/ExpiringDictionary_2.hpp"
// Including type: SmallBufferPool
#include "GlobalNamespace/SmallBufferPool.hpp"
// Including type: System.Threading.CancellationTokenSource
#include "System/Threading/CancellationTokenSource.hpp"
// Including type: MasterServer.IHandshakeMessage
#include "MasterServer/IHandshakeMessage.hpp"
// Including type: MasterServer.ClientHelloRequest
#include "MasterServer/ClientHelloRequest.hpp"
// Including type: MasterServer.HelloVerifyRequest
#include "MasterServer/HelloVerifyRequest.hpp"
// Including type: MasterServer.ClientHelloWithCookieRequest
#include "MasterServer/ClientHelloWithCookieRequest.hpp"
// Including type: MasterServer.IUserMessage
#include "MasterServer/IUserMessage.hpp"
// Including type: MasterServer.BroadcastServerStatusRequest
#include "MasterServer/BroadcastServerStatusRequest.hpp"
// Including type: MasterServer.BroadcastServerHeartbeatRequest
#include "MasterServer/BroadcastServerHeartbeatRequest.hpp"
// Including type: MasterServer.BroadcastServerHeartbeatResponse
#include "MasterServer/BroadcastServerHeartbeatResponse.hpp"
// Including type: MasterServer.BroadcastServerRemoveRequest
#include "MasterServer/BroadcastServerRemoveRequest.hpp"
// Including type: MasterServer.ConnectToServerRequest
#include "MasterServer/ConnectToServerRequest.hpp"
// Including type: MasterServer.ConnectToMatchmakingRequest
#include "MasterServer/ConnectToMatchmakingRequest.hpp"
// Including type: MasterServer.PrepareForConnectionRequest
#include "MasterServer/PrepareForConnectionRequest.hpp"
// Including type: MasterServer.GetPublicServersRequest
#include "MasterServer/GetPublicServersRequest.hpp"
// Including type: MasterServer.SessionKeepaliveMessage
#include "MasterServer/SessionKeepaliveMessage.hpp"
// Including type: MasterServer.IDedicatedServerMessage
#include "MasterServer/IDedicatedServerMessage.hpp"
// Including type: MasterServer.GetAvailableRelayServerRequest
#include "MasterServer/GetAvailableRelayServerRequest.hpp"
// Including type: MasterServer.GetAvailableMatchmakingServerRequest
#include "MasterServer/GetAvailableMatchmakingServerRequest.hpp"
// Including type: MasterServer.DedicatedServerNoLongerOccupiedRequest
#include "MasterServer/DedicatedServerNoLongerOccupiedRequest.hpp"
// Including type: MasterServer.DedicatedServerHeartbeatRequest
#include "MasterServer/DedicatedServerHeartbeatRequest.hpp"
// Including type: MasterServer.DedicatedServerHeartbeatResponse
#include "MasterServer/DedicatedServerHeartbeatResponse.hpp"
// Including type: MasterServer.RelayServerStatusUpdateRequest
#include "MasterServer/RelayServerStatusUpdateRequest.hpp"
// Including type: MasterServer.MatchmakingServerStatusUpdateRequest
#include "MasterServer/MatchmakingServerStatusUpdateRequest.hpp"
// Including type: MasterServer.DedicatedServerShutDownRequest
#include "MasterServer/DedicatedServerShutDownRequest.hpp"
// Including type: MasterServer.DedicatedServerPrepareForConnectionRequest
#include "MasterServer/DedicatedServerPrepareForConnectionRequest.hpp"
// Including type: MasterServer.IMasterServerMessage
#include "MasterServer/IMasterServerMessage.hpp"
// Including type: MasterServer.IMasterServerAcknowledgeMessage
#include "MasterServer/IMasterServerAcknowledgeMessage.hpp"
// Including type: MasterServer.IMasterServerReliableResponse
#include "MasterServer/IMasterServerReliableResponse.hpp"
// Including type: MasterServer.IMasterServerMultipartMessage
#include "MasterServer/IMasterServerMultipartMessage.hpp"
// Including type: MasterServer.IMasterServerReliableRequest
#include "MasterServer/IMasterServerReliableRequest.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: MasterServer.IMasterServerUnreliableMessage
#include "MasterServer/IMasterServerUnreliableMessage.hpp"
// Including type: MasterServer.IMasterServerResponse
#include "MasterServer/IMasterServerResponse.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: LiteNetLib.Utils.INetSerializable
#include "LiteNetLib/Utils/INetSerializable.hpp"
// Including type: System.Func`5
#include "System/Func_5.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: INetworkPacketSerializer`1
#include "GlobalNamespace/INetworkPacketSerializer_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.UInt32 kHandshakeMessageType
uint MasterServer::MessageHandler::_get_kHandshakeMessageType() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("_get_kHandshakeMessageType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("MasterServer", "MessageHandler", "kHandshakeMessageType"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 kHandshakeMessageType
void MasterServer::MessageHandler::_set_kHandshakeMessageType(uint value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("_set_kHandshakeMessageType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kHandshakeMessageType", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 kUserMessageType
uint MasterServer::MessageHandler::_get_kUserMessageType() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("_get_kUserMessageType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("MasterServer", "MessageHandler", "kUserMessageType"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 kUserMessageType
void MasterServer::MessageHandler::_set_kUserMessageType(uint value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("_set_kUserMessageType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kUserMessageType", value));
}
// Autogenerated static field getter
// Get static field: static private System.UInt32 kDedicatedServerMessageType
uint MasterServer::MessageHandler::_get_kDedicatedServerMessageType() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("_get_kDedicatedServerMessageType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("MasterServer", "MessageHandler", "kDedicatedServerMessageType"));
}
// Autogenerated static field setter
// Set static field: static private System.UInt32 kDedicatedServerMessageType
void MasterServer::MessageHandler::_set_kDedicatedServerMessageType(uint value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("_set_kDedicatedServerMessageType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kDedicatedServerMessageType", value));
}
// Autogenerated static field getter
// Get static field: static public System.UInt32 kProtocolVersion
uint MasterServer::MessageHandler::_get_kProtocolVersion() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("_get_kProtocolVersion");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint>("MasterServer", "MessageHandler", "kProtocolVersion"));
}
// Autogenerated static field setter
// Set static field: static public System.UInt32 kProtocolVersion
void MasterServer::MessageHandler::_set_kProtocolVersion(uint value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("_set_kProtocolVersion");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kProtocolVersion", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kMaxPublicKeyLength
int MasterServer::MessageHandler::_get_kMaxPublicKeyLength() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("_get_kMaxPublicKeyLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler", "kMaxPublicKeyLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMaxPublicKeyLength
void MasterServer::MessageHandler::_set_kMaxPublicKeyLength(int value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("_set_kMaxPublicKeyLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kMaxPublicKeyLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kMinSignatureLength
int MasterServer::MessageHandler::_get_kMinSignatureLength() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("_get_kMinSignatureLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler", "kMinSignatureLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMinSignatureLength
void MasterServer::MessageHandler::_set_kMinSignatureLength(int value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("_set_kMinSignatureLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kMinSignatureLength", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 kMaxSignatureLength
int MasterServer::MessageHandler::_get_kMaxSignatureLength() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("_get_kMaxSignatureLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler", "kMaxSignatureLength"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 kMaxSignatureLength
void MasterServer::MessageHandler::_set_kMaxSignatureLength(int value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("_set_kMaxSignatureLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kMaxSignatureLength", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kMaxPacketSize
int MasterServer::MessageHandler::_get_kMaxPacketSize() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("_get_kMaxPacketSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler", "kMaxPacketSize"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kMaxPacketSize
void MasterServer::MessageHandler::_set_kMaxPacketSize(int value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("_set_kMaxPacketSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kMaxPacketSize", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kRetryCount
int MasterServer::MessageHandler::_get_kRetryCount() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("_get_kRetryCount");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler", "kRetryCount"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kRetryCount
void MasterServer::MessageHandler::_set_kRetryCount(int value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("_set_kRetryCount");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kRetryCount", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kRetryDelay0Ms
int MasterServer::MessageHandler::_get_kRetryDelay0Ms() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("_get_kRetryDelay0Ms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler", "kRetryDelay0Ms"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kRetryDelay0Ms
void MasterServer::MessageHandler::_set_kRetryDelay0Ms(int value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("_set_kRetryDelay0Ms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kRetryDelay0Ms", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kRetryDelay1Ms
int MasterServer::MessageHandler::_get_kRetryDelay1Ms() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("_get_kRetryDelay1Ms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler", "kRetryDelay1Ms"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kRetryDelay1Ms
void MasterServer::MessageHandler::_set_kRetryDelay1Ms(int value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("_set_kRetryDelay1Ms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kRetryDelay1Ms", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kRetryDelay2Ms
int MasterServer::MessageHandler::_get_kRetryDelay2Ms() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("_get_kRetryDelay2Ms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler", "kRetryDelay2Ms"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kRetryDelay2Ms
void MasterServer::MessageHandler::_set_kRetryDelay2Ms(int value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("_set_kRetryDelay2Ms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kRetryDelay2Ms", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kRetryDelay3Ms
int MasterServer::MessageHandler::_get_kRetryDelay3Ms() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("_get_kRetryDelay3Ms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler", "kRetryDelay3Ms"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kRetryDelay3Ms
void MasterServer::MessageHandler::_set_kRetryDelay3Ms(int value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("_set_kRetryDelay3Ms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kRetryDelay3Ms", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 kRetryDelay4Ms
int MasterServer::MessageHandler::_get_kRetryDelay4Ms() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("_get_kRetryDelay4Ms");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("MasterServer", "MessageHandler", "kRetryDelay4Ms"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 kRetryDelay4Ms
void MasterServer::MessageHandler::_set_kRetryDelay4Ms(int value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("_set_kRetryDelay4Ms");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kRetryDelay4Ms", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 kConnectionStateTimeout
int64_t MasterServer::MessageHandler::_get_kConnectionStateTimeout() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("_get_kConnectionStateTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("MasterServer", "MessageHandler", "kConnectionStateTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kConnectionStateTimeout
void MasterServer::MessageHandler::_set_kConnectionStateTimeout(int64_t value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("_set_kConnectionStateTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kConnectionStateTimeout", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 kSentRequestTimeout
int64_t MasterServer::MessageHandler::_get_kSentRequestTimeout() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("_get_kSentRequestTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("MasterServer", "MessageHandler", "kSentRequestTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kSentRequestTimeout
void MasterServer::MessageHandler::_set_kSentRequestTimeout(int64_t value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("_set_kSentRequestTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kSentRequestTimeout", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 kSentRequestWithResponseTimeout
int64_t MasterServer::MessageHandler::_get_kSentRequestWithResponseTimeout() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("_get_kSentRequestWithResponseTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("MasterServer", "MessageHandler", "kSentRequestWithResponseTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kSentRequestWithResponseTimeout
void MasterServer::MessageHandler::_set_kSentRequestWithResponseTimeout(int64_t value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("_set_kSentRequestWithResponseTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kSentRequestWithResponseTimeout", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int64 kMultipartMessageTimeout
int64_t MasterServer::MessageHandler::_get_kMultipartMessageTimeout() {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("_get_kMultipartMessageTimeout");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int64_t>("MasterServer", "MessageHandler", "kMultipartMessageTimeout"));
}
// Autogenerated static field setter
// Set static field: static private System.Int64 kMultipartMessageTimeout
void MasterServer::MessageHandler::_set_kMultipartMessageTimeout(int64_t value) {
  static auto ___internal__logger = Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("_set_kMultipartMessageTimeout");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "MessageHandler", "kMultipartMessageTimeout", value));
}
// Autogenerated method: MasterServer.MessageHandler.RegisterHandshakeMessageHandlers
void MasterServer::MessageHandler::RegisterHandshakeMessageHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("RegisterHandshakeMessageHandlers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RegisterHandshakeMessageHandlers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler.ShouldHandleHandshakeMessage
bool MasterServer::MessageHandler::ShouldHandleHandshakeMessage(MasterServer::IHandshakeMessage* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("ShouldHandleHandshakeMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ShouldHandleHandshakeMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet, origin)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleClientHelloRequest
void MasterServer::MessageHandler::HandleClientHelloRequest(MasterServer::ClientHelloRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("HandleClientHelloRequest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleClientHelloRequest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet, origin)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleHelloVerifyRequest
void MasterServer::MessageHandler::HandleHelloVerifyRequest(MasterServer::HelloVerifyRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("HandleHelloVerifyRequest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleHelloVerifyRequest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet, origin)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleClientHelloWithCookieRequest
void MasterServer::MessageHandler::HandleClientHelloWithCookieRequest(MasterServer::ClientHelloWithCookieRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("HandleClientHelloWithCookieRequest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleClientHelloWithCookieRequest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet, origin)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.RegisterUserMessageHandlers
void MasterServer::MessageHandler::RegisterUserMessageHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("RegisterUserMessageHandlers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RegisterUserMessageHandlers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler.ShouldHandleUserMessage
bool MasterServer::MessageHandler::ShouldHandleUserMessage(MasterServer::IUserMessage* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("ShouldHandleUserMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ShouldHandleUserMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet, origin)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleBroadcastServerStatusRequest
void MasterServer::MessageHandler::HandleBroadcastServerStatusRequest(MasterServer::BroadcastServerStatusRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("HandleBroadcastServerStatusRequest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleBroadcastServerStatusRequest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet, origin)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleBroadcastServerHeartbeatRequest
void MasterServer::MessageHandler::HandleBroadcastServerHeartbeatRequest(MasterServer::BroadcastServerHeartbeatRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("HandleBroadcastServerHeartbeatRequest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleBroadcastServerHeartbeatRequest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet, origin)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleBroadcastServerHeartbeatResponse
void MasterServer::MessageHandler::HandleBroadcastServerHeartbeatResponse(MasterServer::BroadcastServerHeartbeatResponse* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("HandleBroadcastServerHeartbeatResponse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleBroadcastServerHeartbeatResponse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet, origin)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleBroadcastServerRemoveRequest
void MasterServer::MessageHandler::HandleBroadcastServerRemoveRequest(MasterServer::BroadcastServerRemoveRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("HandleBroadcastServerRemoveRequest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleBroadcastServerRemoveRequest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet, origin)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleConnectToServerRequest
void MasterServer::MessageHandler::HandleConnectToServerRequest(MasterServer::ConnectToServerRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("HandleConnectToServerRequest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleConnectToServerRequest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet, origin)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleConnectToMatchmakingRequest
void MasterServer::MessageHandler::HandleConnectToMatchmakingRequest(MasterServer::ConnectToMatchmakingRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("HandleConnectToMatchmakingRequest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleConnectToMatchmakingRequest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet, origin)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandlePrepareForConnectionRequest
void MasterServer::MessageHandler::HandlePrepareForConnectionRequest(MasterServer::PrepareForConnectionRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("HandlePrepareForConnectionRequest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandlePrepareForConnectionRequest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet, origin)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleGetPublicServersRequest
void MasterServer::MessageHandler::HandleGetPublicServersRequest(MasterServer::GetPublicServersRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("HandleGetPublicServersRequest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleGetPublicServersRequest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet, origin)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleSessionKeepaliveMessage
void MasterServer::MessageHandler::HandleSessionKeepaliveMessage(MasterServer::SessionKeepaliveMessage* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("HandleSessionKeepaliveMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleSessionKeepaliveMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet, origin)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.RegisterDedicatedServerHandlers
void MasterServer::MessageHandler::RegisterDedicatedServerHandlers() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("RegisterDedicatedServerHandlers");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RegisterDedicatedServerHandlers", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler.ShouldHandleDedicatedServerMessage
bool MasterServer::MessageHandler::ShouldHandleDedicatedServerMessage(MasterServer::IDedicatedServerMessage* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("ShouldHandleDedicatedServerMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ShouldHandleDedicatedServerMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet, origin)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleGetAvailableRelayServerRequest
void MasterServer::MessageHandler::HandleGetAvailableRelayServerRequest(MasterServer::GetAvailableRelayServerRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("HandleGetAvailableRelayServerRequest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleGetAvailableRelayServerRequest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet, origin)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleGetAvailableMatchmakingServerRequest
void MasterServer::MessageHandler::HandleGetAvailableMatchmakingServerRequest(MasterServer::GetAvailableMatchmakingServerRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("HandleGetAvailableMatchmakingServerRequest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleGetAvailableMatchmakingServerRequest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet, origin)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleDedicatedServerUnavailableRequest
void MasterServer::MessageHandler::HandleDedicatedServerUnavailableRequest(MasterServer::DedicatedServerNoLongerOccupiedRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("HandleDedicatedServerUnavailableRequest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleDedicatedServerUnavailableRequest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet, origin)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleDedicatedServerHeartbeatRequest
void MasterServer::MessageHandler::HandleDedicatedServerHeartbeatRequest(MasterServer::DedicatedServerHeartbeatRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("HandleDedicatedServerHeartbeatRequest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleDedicatedServerHeartbeatRequest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet, origin)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleDedicatedServerHeartbeatResponse
void MasterServer::MessageHandler::HandleDedicatedServerHeartbeatResponse(MasterServer::DedicatedServerHeartbeatResponse* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("HandleDedicatedServerHeartbeatResponse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleDedicatedServerHeartbeatResponse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet, origin)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleRelayServerStatusUpdateRequest
void MasterServer::MessageHandler::HandleRelayServerStatusUpdateRequest(MasterServer::RelayServerStatusUpdateRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("HandleRelayServerStatusUpdateRequest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleRelayServerStatusUpdateRequest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet, origin)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleMatchmakingServerStatusUpdateRequest
void MasterServer::MessageHandler::HandleMatchmakingServerStatusUpdateRequest(MasterServer::MatchmakingServerStatusUpdateRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("HandleMatchmakingServerStatusUpdateRequest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMatchmakingServerStatusUpdateRequest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet, origin)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleDedicatedServerShutDownRequest
void MasterServer::MessageHandler::HandleDedicatedServerShutDownRequest(MasterServer::DedicatedServerShutDownRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("HandleDedicatedServerShutDownRequest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleDedicatedServerShutDownRequest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet, origin)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.HandleDedicatedServerPrepareForConnectionRequest
void MasterServer::MessageHandler::HandleDedicatedServerPrepareForConnectionRequest(MasterServer::DedicatedServerPrepareForConnectionRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("HandleDedicatedServerPrepareForConnectionRequest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleDedicatedServerPrepareForConnectionRequest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet, origin)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.IsUnhandledMessage
bool MasterServer::MessageHandler::IsUnhandledMessage(MasterServer::IMasterServerReliableRequest* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("IsUnhandledMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsUnhandledMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet, origin)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.CompleteSend
void MasterServer::MessageHandler::CompleteSend(MasterServer::IMasterServerResponse* packet, System::Net::IPEndPoint* remoteEndPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("CompleteSend");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CompleteSend", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet, remoteEndPoint)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, packet, remoteEndPoint);
}
// Autogenerated method: MasterServer.MessageHandler.CompleteRequest
bool MasterServer::MessageHandler::CompleteRequest(MasterServer::IMasterServerReliableResponse* packet, System::Net::IPEndPoint* remoteEndPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("CompleteRequest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "CompleteRequest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet, remoteEndPoint)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, packet, remoteEndPoint);
}
// Autogenerated method: MasterServer.MessageHandler.ShouldHandleMessage
bool MasterServer::MessageHandler::ShouldHandleMessage(MasterServer::IMasterServerMessage* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("ShouldHandleMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ShouldHandleMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(packet, origin)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, packet, origin);
}
// Autogenerated method: MasterServer.MessageHandler.SendUnreliableMessage
void MasterServer::MessageHandler::SendUnreliableMessage(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerUnreliableMessage* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("SendUnreliableMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendUnreliableMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(protocolVersion, remoteEndPoint, message)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, protocolVersion, remoteEndPoint, message);
}
// Autogenerated method: MasterServer.MessageHandler.SendUnreliableResponse
void MasterServer::MessageHandler::SendUnreliableResponse(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerReliableRequest* request, MasterServer::IMasterServerResponse* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("SendUnreliableResponse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendUnreliableResponse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(protocolVersion, remoteEndPoint, request, response)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, protocolVersion, remoteEndPoint, request, response);
}
// Autogenerated method: MasterServer.MessageHandler.SendUnreliableResponse
void MasterServer::MessageHandler::SendUnreliableResponse(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, uint responseId, MasterServer::IMasterServerResponse* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("SendUnreliableResponse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendUnreliableResponse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(protocolVersion, remoteEndPoint, responseId, response)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, protocolVersion, remoteEndPoint, responseId, response);
}
// Autogenerated method: MasterServer.MessageHandler.SendReliableRequest
void MasterServer::MessageHandler::SendReliableRequest(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerReliableRequest* request, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("SendReliableRequest");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendReliableRequest", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(protocolVersion, remoteEndPoint, request, cancellationToken)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, protocolVersion, remoteEndPoint, request, cancellationToken);
}
// Autogenerated method: MasterServer.MessageHandler.SendReliableRequestAsync
System::Threading::Tasks::Task* MasterServer::MessageHandler::SendReliableRequestAsync(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerReliableRequest* request, System::Func_5<uint, System::Net::IPEndPoint*, MasterServer::IMasterServerReliableRequest*, System::Threading::CancellationToken, System::Threading::Tasks::Task*>* onSendFailed, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("SendReliableRequestAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendReliableRequestAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(protocolVersion, remoteEndPoint, request, onSendFailed, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, protocolVersion, remoteEndPoint, request, onSendFailed, cancellationToken);
}
// Autogenerated method: MasterServer.MessageHandler.SendReliableResponse
void MasterServer::MessageHandler::SendReliableResponse(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerReliableRequest* request, MasterServer::IMasterServerReliableResponse* response, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("SendReliableResponse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendReliableResponse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(protocolVersion, remoteEndPoint, request, response, cancellationToken)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, protocolVersion, remoteEndPoint, request, response, cancellationToken);
}
// Autogenerated method: MasterServer.MessageHandler.SendReliableResponse
void MasterServer::MessageHandler::SendReliableResponse(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, uint responseId, MasterServer::IMasterServerReliableResponse* response, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("SendReliableResponse");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendReliableResponse", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(protocolVersion, remoteEndPoint, responseId, response, cancellationToken)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, protocolVersion, remoteEndPoint, responseId, response, cancellationToken);
}
// Autogenerated method: MasterServer.MessageHandler.SendReliableResponseAsync
System::Threading::Tasks::Task* MasterServer::MessageHandler::SendReliableResponseAsync(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerReliableRequest* request, MasterServer::IMasterServerReliableResponse* response, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("SendReliableResponseAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendReliableResponseAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(protocolVersion, remoteEndPoint, request, response, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, protocolVersion, remoteEndPoint, request, response, cancellationToken);
}
// Autogenerated method: MasterServer.MessageHandler.SendMessage
void MasterServer::MessageHandler::SendMessage(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerMessage* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("SendMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(protocolVersion, remoteEndPoint, message)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, protocolVersion, remoteEndPoint, message);
}
// Autogenerated method: MasterServer.MessageHandler.SendMessageWithRetry
void MasterServer::MessageHandler::SendMessageWithRetry(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerReliableRequest* message, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("SendMessageWithRetry");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendMessageWithRetry", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(protocolVersion, remoteEndPoint, message, cancellationToken)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, protocolVersion, remoteEndPoint, message, cancellationToken);
}
// Autogenerated method: MasterServer.MessageHandler.SendMessageWithRetryAsync
System::Threading::Tasks::Task* MasterServer::MessageHandler::SendMessageWithRetryAsync(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerReliableRequest* message, System::Func_5<uint, System::Net::IPEndPoint*, MasterServer::IMasterServerReliableRequest*, System::Threading::CancellationToken, System::Threading::Tasks::Task*>* onSendFailed, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("SendMessageWithRetryAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendMessageWithRetryAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(protocolVersion, remoteEndPoint, message, onSendFailed, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, protocolVersion, remoteEndPoint, message, onSendFailed, cancellationToken);
}
// Autogenerated method: MasterServer.MessageHandler.SendMultipartMessageWithRetryAsync
System::Threading::Tasks::Task* MasterServer::MessageHandler::SendMultipartMessageWithRetryAsync(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerReliableRequest* message, LiteNetLib::Utils::NetDataWriter* data, System::Func_5<uint, System::Net::IPEndPoint*, MasterServer::IMasterServerReliableRequest*, System::Threading::CancellationToken, System::Threading::Tasks::Task*>* onSendFailed, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("SendMultipartMessageWithRetryAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendMultipartMessageWithRetryAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(protocolVersion, remoteEndPoint, message, data, onSendFailed, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, protocolVersion, remoteEndPoint, message, data, onSendFailed, cancellationToken);
}
// Autogenerated method: MasterServer.MessageHandler.SendMessageWithRetryAsyncInternal
System::Threading::Tasks::Task* MasterServer::MessageHandler::SendMessageWithRetryAsyncInternal(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerReliableRequest* message, System::Func_5<uint, System::Net::IPEndPoint*, MasterServer::IMasterServerReliableRequest*, System::Threading::CancellationToken, System::Threading::Tasks::Task*>* onSendFailed, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("SendMessageWithRetryAsyncInternal");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendMessageWithRetryAsyncInternal", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(protocolVersion, remoteEndPoint, message, onSendFailed, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, protocolVersion, remoteEndPoint, message, onSendFailed, cancellationToken);
}
// Autogenerated method: MasterServer.MessageHandler.WaitForRetry
System::Threading::Tasks::Task* MasterServer::MessageHandler::WaitForRetry(int retryAttempt, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("WaitForRetry");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "WaitForRetry", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(retryAttempt, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task*, false>(this, ___internal__method, retryAttempt, cancellationToken);
}
// Autogenerated method: MasterServer.MessageHandler.Write
LiteNetLib::Utils::NetDataWriter* MasterServer::MessageHandler::Write(uint protocolVersion, LiteNetLib::Utils::INetSerializable* message) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("Write");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(protocolVersion, message)));
  return ::il2cpp_utils::RunMethodThrow<LiteNetLib::Utils::NetDataWriter*, false>(this, ___internal__method, protocolVersion, message);
}
// Autogenerated method: MasterServer.MessageHandler.PollUpdate
void MasterServer::MessageHandler::PollUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("PollUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PollUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler.ReceiveMessage
void MasterServer::MessageHandler::ReceiveMessage(System::Net::IPEndPoint* remoteEndPoint, LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("ReceiveMessage");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReceiveMessage", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(remoteEndPoint, reader)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, remoteEndPoint, reader);
}
// Autogenerated method: MasterServer.MessageHandler.ShouldHandleMessageFromEndPoint
bool MasterServer::MessageHandler::ShouldHandleMessageFromEndPoint(System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("ShouldHandleMessageFromEndPoint");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ShouldHandleMessageFromEndPoint", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(endPoint)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, endPoint);
}
// Autogenerated method: MasterServer.MessageHandler.ReceivedMessageException
void MasterServer::MessageHandler::ReceivedMessageException(System::Net::IPEndPoint* endPoint, System::Exception* exception) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("ReceivedMessageException");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ReceivedMessageException", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(endPoint, exception)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, endPoint, exception);
}
// Autogenerated method: MasterServer.MessageHandler.BeginSession
void MasterServer::MessageHandler::BeginSession(System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("BeginSession");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginSession", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(endPoint)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, endPoint);
}
// Autogenerated method: MasterServer.MessageHandler.BeginSession
void MasterServer::MessageHandler::BeginSession(System::Net::IPEndPoint* endPoint, uint requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("BeginSession");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BeginSession", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(endPoint, requestId)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, endPoint, requestId);
}
// Autogenerated method: MasterServer.MessageHandler.GetNextRequestId
uint MasterServer::MessageHandler::GetNextRequestId(System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("GetNextRequestId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetNextRequestId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(endPoint)));
  return ::il2cpp_utils::RunMethodThrow<uint, false>(this, ___internal__method, endPoint);
}
// Autogenerated method: MasterServer.MessageHandler.GetConnectionState
MasterServer::MessageHandler::ConnectionState* MasterServer::MessageHandler::GetConnectionState(System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("GetConnectionState");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetConnectionState", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(endPoint)));
  return ::il2cpp_utils::RunMethodThrow<MasterServer::MessageHandler::ConnectionState*, false>(this, ___internal__method, endPoint);
}
// Autogenerated method: MasterServer.MessageHandler.IsValidSessionStartRequestId
bool MasterServer::MessageHandler::IsValidSessionStartRequestId(System::Net::IPEndPoint* endPoint, uint requestId) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("IsValidSessionStartRequestId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsValidSessionStartRequestId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(endPoint, requestId)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, endPoint, requestId);
}
// Autogenerated method: MasterServer.MessageHandler.IsConnectionStateEncrypted
bool MasterServer::MessageHandler::IsConnectionStateEncrypted(System::Net::IPEndPoint* endPoint) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("IsConnectionStateEncrypted");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "IsConnectionStateEncrypted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(endPoint)));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method, endPoint);
}
// Autogenerated method: MasterServer.MessageHandler.GetSerializer
GlobalNamespace::INetworkPacketSerializer_1<MasterServer::MessageHandler::MessageOrigin>* MasterServer::MessageHandler::GetSerializer(uint protocolVersion, uint messageType) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("GetSerializer");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetSerializer", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(protocolVersion, messageType)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::INetworkPacketSerializer_1<MasterServer::MessageHandler::MessageOrigin>*, false>(this, ___internal__method, protocolVersion, messageType);
}
// Autogenerated method: MasterServer.MessageHandler.CreateHandshakeHeader
::Array<uint8_t>* MasterServer::MessageHandler::CreateHandshakeHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("CreateHandshakeHeader");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("MasterServer", "MessageHandler", "CreateHandshakeHeader", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<uint8_t>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler.Dispose
void MasterServer::MessageHandler::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("MessageHandler").WithContext("Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
void MasterServer::MessageHandler::System_IDisposable_Dispose() {
  MasterServer::MessageHandler::Dispose();
}
