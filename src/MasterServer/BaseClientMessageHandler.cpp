// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.BaseClientMessageHandler
#include "MasterServer/BaseClientMessageHandler.hpp"
// Including type: MasterServer.BaseClientMessageHandler/<SendAuthenticatedRequest>d__17
#include "MasterServer/BaseClientMessageHandler_-SendAuthenticatedRequest-d__17.hpp"
// Including type: MasterServer.BaseClientMessageHandler/<SendAuthenticatedRequestAsync>d__18`1
#include "MasterServer/BaseClientMessageHandler_-SendAuthenticatedRequestAsync-d__18_1.hpp"
// Including type: MasterServer.BaseClientMessageHandler/<SendAuthenticatedRequestAsync>d__19
#include "MasterServer/BaseClientMessageHandler_-SendAuthenticatedRequestAsync-d__19.hpp"
// Including type: MasterServer.BaseClientMessageHandler/<OnSendFailed>d__20
#include "MasterServer/BaseClientMessageHandler_-OnSendFailed-d__20.hpp"
// Including type: MasterServer.BaseClientMessageHandler/<OnSendFailedAwaitResponse>d__21`1
#include "MasterServer/BaseClientMessageHandler_-OnSendFailedAwaitResponse-d__21_1.hpp"
// Including type: MasterServer.BaseClientMessageHandler/<ReauthenticateWithMasterServer>d__22
#include "MasterServer/BaseClientMessageHandler_-ReauthenticateWithMasterServer-d__22.hpp"
// Including type: MasterServer.BaseClientMessageHandler/<AuthenticateWithMasterServer>d__25
#include "MasterServer/BaseClientMessageHandler_-AuthenticateWithMasterServer-d__25.hpp"
// Including type: MasterServer.BaseClientMessageHandler/<>c__DisplayClass26_0
#include "MasterServer/BaseClientMessageHandler_--c__DisplayClass26_0.hpp"
// Including type: MasterServer.BaseClientMessageHandler/<AuthenticateWithMasterServerAsyncInternal>d__26
#include "MasterServer/BaseClientMessageHandler_-AuthenticateWithMasterServerAsyncInternal-d__26.hpp"
// Including type: MasterServer.BaseClientMessageHandler/<>c__DisplayClass29_0
#include "MasterServer/BaseClientMessageHandler_--c__DisplayClass29_0.hpp"
// Including type: MasterServerEndPoint
#include "GlobalNamespace/MasterServerEndPoint.hpp"
// Including type: System.Threading.Tasks.Task
#include "System/Threading/Tasks/Task.hpp"
// Including type: System.Security.Authentication.AuthenticationException
#include "System/Security/Authentication/AuthenticationException.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: PacketEncryptionLayer
#include "GlobalNamespace/PacketEncryptionLayer.hpp"
// Including type: MasterServer.IAnalyticsManager
#include "MasterServer/IAnalyticsManager.hpp"
// Including type: MasterServer.IMasterServerReliableRequest
#include "MasterServer/IMasterServerReliableRequest.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: MasterServer.IMasterServerReliableResponse
#include "MasterServer/IMasterServerReliableResponse.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: MasterServer.IMasterServerAuthenticateRequest
#include "MasterServer/IMasterServerAuthenticateRequest.hpp"
// Including type: System.Security.Cryptography.X509Certificates.X509Certificate2
#include "System/Security/Cryptography/X509Certificates/X509Certificate2.hpp"
// Including type: MasterServer.IHandshakeMessage
#include "MasterServer/IHandshakeMessage.hpp"
// Including type: MasterServer.MessageHandler/IMessageSender
#include "MasterServer/MessageHandler_IMessageSender.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private LiteNetLib.Utils.NetDataWriter _authenticationDataWriter
LiteNetLib::Utils::NetDataWriter* MasterServer::BaseClientMessageHandler::_get__authenticationDataWriter() {
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LiteNetLib::Utils::NetDataWriter*>("MasterServer", "BaseClientMessageHandler", "_authenticationDataWriter"));
}
// Autogenerated static field setter
// Set static field: static private LiteNetLib.Utils.NetDataWriter _authenticationDataWriter
void MasterServer::BaseClientMessageHandler::_set__authenticationDataWriter(LiteNetLib::Utils::NetDataWriter* value) {
  THROW_UNLESS(il2cpp_utils::SetFieldValue("MasterServer", "BaseClientMessageHandler", "_authenticationDataWriter", value));
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.get_endPoint
GlobalNamespace::MasterServerEndPoint* MasterServer::BaseClientMessageHandler::get_endPoint() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::MasterServerEndPoint*>(this, "get_endPoint"));
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.get_isAuthenticated
bool MasterServer::BaseClientMessageHandler::get_isAuthenticated() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isAuthenticated"));
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.get_isAuthenticating
bool MasterServer::BaseClientMessageHandler::get_isAuthenticating() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_isAuthenticating"));
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.get_hasAuthenticationFailed
bool MasterServer::BaseClientMessageHandler::get_hasAuthenticationFailed() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "get_hasAuthenticationFailed"));
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.NoDomainReloadInit
void MasterServer::BaseClientMessageHandler::NoDomainReloadInit() {
  THROW_UNLESS(il2cpp_utils::RunMethod("MasterServer", "BaseClientMessageHandler", "NoDomainReloadInit"));
}
// Autogenerated method: MasterServer.BaseClientMessageHandler..ctor
MasterServer::BaseClientMessageHandler* MasterServer::BaseClientMessageHandler::New_ctor(MasterServer::MessageHandler::IMessageSender* sender, GlobalNamespace::PacketEncryptionLayer* encryptionLayer, GlobalNamespace::MasterServerEndPoint* endPoint, MasterServer::IAnalyticsManager* analytics) {
  return THROW_UNLESS(il2cpp_utils::New<BaseClientMessageHandler*>(sender, encryptionLayer, endPoint, analytics));
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.SendAuthenticatedRequest
void MasterServer::BaseClientMessageHandler::SendAuthenticatedRequest(MasterServer::IMasterServerReliableRequest* message, System::Threading::CancellationToken cancellationToken) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "SendAuthenticatedRequest", message, cancellationToken));
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.SendAuthenticatedRequestAsync
System::Threading::Tasks::Task* MasterServer::BaseClientMessageHandler::SendAuthenticatedRequestAsync(MasterServer::IMasterServerReliableRequest* message, System::Threading::CancellationToken cancellationToken) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Threading::Tasks::Task*>(this, "SendAuthenticatedRequestAsync", message, cancellationToken));
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.OnSendFailed
System::Threading::Tasks::Task* MasterServer::BaseClientMessageHandler::OnSendFailed(uint protocolVersion, System::Net::IPEndPoint* remoteEndPoint, MasterServer::IMasterServerReliableRequest* message, System::Threading::CancellationToken cancellationToken) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Threading::Tasks::Task*>(this, "OnSendFailed", protocolVersion, remoteEndPoint, message, cancellationToken));
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.ReauthenticateWithMasterServer
System::Threading::Tasks::Task* MasterServer::BaseClientMessageHandler::ReauthenticateWithMasterServer() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Threading::Tasks::Task*>(this, "ReauthenticateWithMasterServer"));
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.UnauthenticateWithMasterServer
void MasterServer::BaseClientMessageHandler::UnauthenticateWithMasterServer() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "UnauthenticateWithMasterServer"));
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.AuthenticateWithMasterServerAsync
System::Threading::Tasks::Task* MasterServer::BaseClientMessageHandler::AuthenticateWithMasterServerAsync() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Threading::Tasks::Task*>(this, "AuthenticateWithMasterServerAsync"));
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.AuthenticateWithMasterServer
void MasterServer::BaseClientMessageHandler::AuthenticateWithMasterServer() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "AuthenticateWithMasterServer"));
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.AuthenticateWithMasterServerAsyncInternal
System::Threading::Tasks::Task* MasterServer::BaseClientMessageHandler::AuthenticateWithMasterServerAsyncInternal() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Threading::Tasks::Task*>(this, "AuthenticateWithMasterServerAsyncInternal"));
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.GetAuthenticationRequest
System::Threading::Tasks::Task_1<MasterServer::IMasterServerAuthenticateRequest*>* MasterServer::BaseClientMessageHandler::GetAuthenticationRequest() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Threading::Tasks::Task_1<MasterServer::IMasterServerAuthenticateRequest*>*>(this, "GetAuthenticationRequest"));
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.VerifySignature
System::Threading::Tasks::Task_1<bool>* MasterServer::BaseClientMessageHandler::VerifySignature(::Array<uint8_t>* clientRandom, ::Array<uint8_t>* serverRandom, ::Array<uint8_t>* serverKey, ::Array<uint8_t>* signature, ::Array<::Array<uint8_t>*>* certData) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<System::Threading::Tasks::Task_1<bool>*>(this, "VerifySignature", clientRandom, serverRandom, serverKey, signature, certData));
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.ValidateCertificateChain
void MasterServer::BaseClientMessageHandler::ValidateCertificateChain(System::Security::Cryptography::X509Certificates::X509Certificate2* certificate, ::Array<::Array<uint8_t>*>* certificateChain) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "ValidateCertificateChain", certificate, certificateChain));
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.HandshakeLog
void MasterServer::BaseClientMessageHandler::HandshakeLog(::Il2CppString* message) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "HandshakeLog", message));
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.Dispose
void MasterServer::BaseClientMessageHandler::Dispose() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Dispose"));
}
void MasterServer::BaseClientMessageHandler::System_IDisposable_Dispose() {
  MasterServer::BaseClientMessageHandler::Dispose();
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.ShouldHandleHandshakeMessage
bool MasterServer::BaseClientMessageHandler::ShouldHandleHandshakeMessage(MasterServer::IHandshakeMessage* packet, MasterServer::MessageHandler::MessageOrigin origin) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "ShouldHandleHandshakeMessage", packet, origin));
}
// Autogenerated method: MasterServer.BaseClientMessageHandler.ShouldHandleMessageFromEndPoint
bool MasterServer::BaseClientMessageHandler::ShouldHandleMessageFromEndPoint(System::Net::IPEndPoint* endPoint) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<bool>(this, "ShouldHandleMessageFromEndPoint", endPoint));
}
