// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.ConnectToServerResponse
#include "MasterServer/ConnectToServerResponse.hpp"
// Including type: System.Net.IPEndPoint
#include "System/Net/IPEndPoint.hpp"
// Including type: ByteArrayNetSerializable
#include "GlobalNamespace/ByteArrayNetSerializable.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.ConnectToServerResponse.get_pool
GlobalNamespace::PacketPool_1<MasterServer::ConnectToServerResponse*>* MasterServer::ConnectToServerResponse::get_pool() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<GlobalNamespace::PacketPool_1<MasterServer::ConnectToServerResponse*>*>("MasterServer", "ConnectToServerResponse", "get_pool"));
}
// Autogenerated method: MasterServer.ConnectToServerResponse.InitForFailure
MasterServer::ConnectToServerResponse* MasterServer::ConnectToServerResponse::InitForFailure(MasterServer::ConnectToServerResponse::Result result) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<MasterServer::ConnectToServerResponse*>(this, "InitForFailure", result));
}
// Autogenerated method: MasterServer.ConnectToServerResponse.InitForSuccess
MasterServer::ConnectToServerResponse* MasterServer::ConnectToServerResponse::InitForSuccess(::Il2CppString* userId, ::Il2CppString* userName, ::Il2CppString* secret, GlobalNamespace::DiscoveryPolicy discoveryPolicy, GlobalNamespace::InvitePolicy invitePolicy, int maxPlayerCount, GlobalNamespace::GameplayServerConfiguration configuration, bool isConnectionOwner, bool isDedicatedServer, System::Net::IPEndPoint* remoteEndPoint, ::Array<uint8_t>* random, ::Array<uint8_t>* publicKey) {
  return THROW_UNLESS(il2cpp_utils::RunMethod<MasterServer::ConnectToServerResponse*>(this, "InitForSuccess", userId, userName, secret, discoveryPolicy, invitePolicy, maxPlayerCount, configuration, isConnectionOwner, isDedicatedServer, remoteEndPoint, random, publicKey));
}
// Autogenerated method: MasterServer.ConnectToServerResponse.get_resultCode
uint8_t MasterServer::ConnectToServerResponse::get_resultCode() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<uint8_t>(this, "get_resultCode"));
}
// Autogenerated method: MasterServer.ConnectToServerResponse.get_resultCodeString
::Il2CppString* MasterServer::ConnectToServerResponse::get_resultCodeString() {
  return THROW_UNLESS(il2cpp_utils::RunMethod<::Il2CppString*>(this, "get_resultCodeString"));
}
// Autogenerated method: MasterServer.ConnectToServerResponse.Serialize
void MasterServer::ConnectToServerResponse::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Serialize", writer));
}
void MasterServer::ConnectToServerResponse::LiteNetLib_Utils_INetSerializable_Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  MasterServer::ConnectToServerResponse::Serialize(writer);
}
// Autogenerated method: MasterServer.ConnectToServerResponse.Deserialize
void MasterServer::ConnectToServerResponse::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Deserialize", reader));
}
void MasterServer::ConnectToServerResponse::LiteNetLib_Utils_INetSerializable_Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  MasterServer::ConnectToServerResponse::Deserialize(reader);
}
// Autogenerated method: MasterServer.ConnectToServerResponse.Release
void MasterServer::ConnectToServerResponse::Release() {
  THROW_UNLESS(il2cpp_utils::RunMethod(this, "Release"));
}
// Autogenerated method: MasterServer.ConnectToServerResponse..ctor
MasterServer::ConnectToServerResponse* MasterServer::ConnectToServerResponse::New_ctor() {
  return THROW_UNLESS(il2cpp_utils::New<ConnectToServerResponse*>());
}
