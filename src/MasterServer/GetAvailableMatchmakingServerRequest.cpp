// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MasterServer.GetAvailableMatchmakingServerRequest
#include "MasterServer/GetAvailableMatchmakingServerRequest.hpp"
// Including type: PacketPool`1
#include "GlobalNamespace/PacketPool_1.hpp"
// Including type: LiteNetLib.Utils.NetDataWriter
#include "LiteNetLib/Utils/NetDataWriter.hpp"
// Including type: LiteNetLib.Utils.NetDataReader
#include "LiteNetLib/Utils/NetDataReader.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.GetAvailableMatchmakingServerRequest.get_pool
GlobalNamespace::PacketPool_1<MasterServer::GetAvailableMatchmakingServerRequest*>* MasterServer::GetAvailableMatchmakingServerRequest::get_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("GetAvailableMatchmakingServerRequest").WithContext("get_pool");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("MasterServer", "GetAvailableMatchmakingServerRequest", "get_pool", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::PacketPool_1<MasterServer::GetAvailableMatchmakingServerRequest*>*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: MasterServer.GetAvailableMatchmakingServerRequest.Init
MasterServer::GetAvailableMatchmakingServerRequest* MasterServer::GetAvailableMatchmakingServerRequest::Init(::Il2CppString* secret, GlobalNamespace::GameplayServerConfiguration configuration) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("GetAvailableMatchmakingServerRequest").WithContext("Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(secret, configuration)));
  return ::il2cpp_utils::RunMethodThrow<MasterServer::GetAvailableMatchmakingServerRequest*, false>(this, ___internal__method, secret, configuration);
}
// Autogenerated method: MasterServer.GetAvailableMatchmakingServerRequest.Release
void MasterServer::GetAvailableMatchmakingServerRequest::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("GetAvailableMatchmakingServerRequest").WithContext("Release");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Release", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.GetAvailableMatchmakingServerRequest.Serialize
void MasterServer::GetAvailableMatchmakingServerRequest::Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("GetAvailableMatchmakingServerRequest").WithContext("Serialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Serialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(writer)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, writer);
}
void MasterServer::GetAvailableMatchmakingServerRequest::LiteNetLib_Utils_INetSerializable_Serialize(LiteNetLib::Utils::NetDataWriter* writer) {
  MasterServer::GetAvailableMatchmakingServerRequest::Serialize(writer);
}
// Autogenerated method: MasterServer.GetAvailableMatchmakingServerRequest.Deserialize
void MasterServer::GetAvailableMatchmakingServerRequest::Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("GetAvailableMatchmakingServerRequest").WithContext("Deserialize");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Deserialize", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(reader)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, reader);
}
void MasterServer::GetAvailableMatchmakingServerRequest::LiteNetLib_Utils_INetSerializable_Deserialize(LiteNetLib::Utils::NetDataReader* reader) {
  MasterServer::GetAvailableMatchmakingServerRequest::Deserialize(reader);
}
