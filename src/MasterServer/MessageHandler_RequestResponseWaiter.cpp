// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MasterServer.MessageHandler/RequestResponseWaiter
#include "MasterServer/MessageHandler_RequestResponseWaiter.hpp"
// Including type: System.Threading.Tasks.TaskCompletionSource`1
#include "System/Threading/Tasks/TaskCompletionSource_1.hpp"
// Including type: MasterServer.IMasterServerMessage
#include "MasterServer/IMasterServerMessage.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: System.Exception
#include "System/Exception.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MasterServer.MessageHandler/RequestResponseWaiter..ctor
MasterServer::MessageHandler::RequestResponseWaiter* MasterServer::MessageHandler::RequestResponseWaiter::New_ctor(System::Threading::CancellationToken disposedCancellationToken, System::Threading::CancellationToken requestCancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("RequestResponseWaiter").WithContext(".ctor");
  return THROW_UNLESS(::il2cpp_utils::New<MessageHandler::RequestResponseWaiter*>(disposedCancellationToken, requestCancellationToken));
}
// Autogenerated method: MasterServer.MessageHandler/RequestResponseWaiter.Complete
void MasterServer::MessageHandler::RequestResponseWaiter::Complete(MasterServer::IMasterServerMessage* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("RequestResponseWaiter").WithContext("Complete");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Complete", {}, ::il2cpp_utils::ExtractTypes(response)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, response);
}
// Autogenerated method: MasterServer.MessageHandler/RequestResponseWaiter.Fail
void MasterServer::MessageHandler::RequestResponseWaiter::Fail(System::Exception* ex) {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("RequestResponseWaiter").WithContext("Fail");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Fail", {}, ::il2cpp_utils::ExtractTypes(ex)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, ex);
}
// Autogenerated method: MasterServer.MessageHandler/RequestResponseWaiter.Cancel
void MasterServer::MessageHandler::RequestResponseWaiter::Cancel() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("RequestResponseWaiter").WithContext("Cancel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Cancel", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/RequestResponseWaiter.get_task
System::Threading::Tasks::Task_1<MasterServer::IMasterServerMessage*>* MasterServer::MessageHandler::RequestResponseWaiter::get_task() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("RequestResponseWaiter").WithContext("get_task");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<System::Threading::Tasks::Task_1<MasterServer::IMasterServerMessage*>*>(), "get_task", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<MasterServer::IMasterServerMessage*>*, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/RequestResponseWaiter.get_isWaiting
bool MasterServer::MessageHandler::RequestResponseWaiter::get_isWaiting() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("RequestResponseWaiter").WithContext("get_isWaiting");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<bool>(), "get_isWaiting", {}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: MasterServer.MessageHandler/RequestResponseWaiter.Dispose
void MasterServer::MessageHandler::RequestResponseWaiter::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("codegen").WithContext("MasterServer").WithContext("RequestResponseWaiter").WithContext("Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, il2cpp_utils::NoArgClass<void>(), "Dispose", {}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
void MasterServer::MessageHandler::RequestResponseWaiter::System_IDisposable_Dispose() {
  MasterServer::MessageHandler::RequestResponseWaiter::Dispose();
}
