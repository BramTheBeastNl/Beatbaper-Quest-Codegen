// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRControllersRecorder
#include "GlobalNamespace/VRControllersRecorder.hpp"
// Including type: VRControllersRecorder/TypeSerializationBinder
#include "GlobalNamespace/VRControllersRecorder_TypeSerializationBinder.hpp"
// Including type: VRControllersRecorder/SavedData
#include "GlobalNamespace/VRControllersRecorder_SavedData.hpp"
// Including type: VRController
#include "GlobalNamespace/VRController.hpp"
// Including type: VRControllersRecorder/Keyframe
#include "GlobalNamespace/VRControllersRecorder_Keyframe.hpp"
// Including type: UnityEngine.TextAsset
#include "UnityEngine/TextAsset.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Camera
#include "UnityEngine/Camera.hpp"
// Including type: AudioTimeSyncController
#include "GlobalNamespace/AudioTimeSyncController.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.AnimationClip
#include "UnityEngine/AnimationClip.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VRControllersRecorder.set_mode
void GlobalNamespace::VRControllersRecorder::set_mode(GlobalNamespace::VRControllersRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::set_mode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_mode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRControllersRecorder.get_mode
GlobalNamespace::VRControllersRecorder::Mode GlobalNamespace::VRControllersRecorder::get_mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::get_mode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_mode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::VRControllersRecorder::Mode, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.set_recordingTextAsset
void GlobalNamespace::VRControllersRecorder::set_recordingTextAsset(UnityEngine::TextAsset* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::set_recordingTextAsset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_recordingTextAsset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRControllersRecorder.get_recordingTextAsset
UnityEngine::TextAsset* GlobalNamespace::VRControllersRecorder::get_recordingTextAsset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::get_recordingTextAsset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_recordingTextAsset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::TextAsset*, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.set_recordingFileName
void GlobalNamespace::VRControllersRecorder::set_recordingFileName(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::set_recordingFileName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_recordingFileName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRControllersRecorder.get_recordingFileName
::Il2CppString* GlobalNamespace::VRControllersRecorder::get_recordingFileName() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::get_recordingFileName");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_recordingFileName", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.set_changeToNonVRCamera
void GlobalNamespace::VRControllersRecorder::set_changeToNonVRCamera(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::set_changeToNonVRCamera");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_changeToNonVRCamera", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: VRControllersRecorder.get_changeToNonVRCamera
bool GlobalNamespace::VRControllersRecorder::get_changeToNonVRCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::get_changeToNonVRCamera");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_changeToNonVRCamera", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.Start
void GlobalNamespace::VRControllersRecorder::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.OnDestroy
void GlobalNamespace::VRControllersRecorder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.SetDefaultSettings
void GlobalNamespace::VRControllersRecorder::SetDefaultSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SetDefaultSettings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetDefaultSettings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.SetInGamePlaybackDefaultSettings
void GlobalNamespace::VRControllersRecorder::SetInGamePlaybackDefaultSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SetInGamePlaybackDefaultSettings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetInGamePlaybackDefaultSettings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.PlaybackTick
void GlobalNamespace::VRControllersRecorder::PlaybackTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::PlaybackTick");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "PlaybackTick", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.SetPositionAndRotation
void GlobalNamespace::VRControllersRecorder::SetPositionAndRotation(UnityEngine::Transform* transf, UnityEngine::Vector3 targetPos, UnityEngine::Quaternion targetRot, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::SetPositionAndRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SetPositionAndRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(transf, targetPos, targetRot, t)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, transf, targetPos, targetRot, t);
}
// Autogenerated method: VRControllersRecorder.RecordTick
void GlobalNamespace::VRControllersRecorder::RecordTick() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::RecordTick");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RecordTick", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.Update
void GlobalNamespace::VRControllersRecorder::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.LateUpdate
void GlobalNamespace::VRControllersRecorder::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.Save
void GlobalNamespace::VRControllersRecorder::Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Save");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.Load
void GlobalNamespace::VRControllersRecorder::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Load");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRControllersRecorder.CreateAnimationClipFromRecording
UnityEngine::AnimationClip* GlobalNamespace::VRControllersRecorder::CreateAnimationClipFromRecording(::Il2CppString* recordingfilePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::CreateAnimationClipFromRecording");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "VRControllersRecorder", "CreateAnimationClipFromRecording", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(recordingfilePath)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimationClip*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, recordingfilePath);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRControllersRecorder/TypeSerializationBinder
#include "GlobalNamespace/VRControllersRecorder_TypeSerializationBinder.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VRControllersRecorder/TypeSerializationBinder.BindToType
System::Type* GlobalNamespace::VRControllersRecorder::TypeSerializationBinder::BindToType(::Il2CppString* assemblyName, ::Il2CppString* typeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::TypeSerializationBinder::BindToType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "BindToType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(assemblyName, typeName)));
  return ::il2cpp_utils::RunMethodThrow<System::Type*, false>(this, ___internal__method, assemblyName, typeName);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRControllersRecorder/SavedData
#include "GlobalNamespace/VRControllersRecorder_SavedData.hpp"
// Including type: VRControllersRecorder/SavedData/KeyframeSerializable
#include "GlobalNamespace/VRControllersRecorder_SavedData_KeyframeSerializable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorder/SavedData/KeyframeSerializable
#include "GlobalNamespace/VRControllersRecorder_SavedData_KeyframeSerializable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorder/Mode
#include "GlobalNamespace/VRControllersRecorder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VRControllersRecorder/Mode Record
GlobalNamespace::VRControllersRecorder::Mode GlobalNamespace::VRControllersRecorder::Mode::_get_Record() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Mode::_get_Record");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::VRControllersRecorder::Mode>("", "VRControllersRecorder/Mode", "Record"));
}
// Autogenerated static field setter
// Set static field: static public VRControllersRecorder/Mode Record
void GlobalNamespace::VRControllersRecorder::Mode::_set_Record(GlobalNamespace::VRControllersRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Mode::_set_Record");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRControllersRecorder/Mode", "Record", value));
}
// Autogenerated static field getter
// Get static field: static public VRControllersRecorder/Mode Playback
GlobalNamespace::VRControllersRecorder::Mode GlobalNamespace::VRControllersRecorder::Mode::_get_Playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Mode::_get_Playback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::VRControllersRecorder::Mode>("", "VRControllersRecorder/Mode", "Playback"));
}
// Autogenerated static field setter
// Set static field: static public VRControllersRecorder/Mode Playback
void GlobalNamespace::VRControllersRecorder::Mode::_set_Playback(GlobalNamespace::VRControllersRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Mode::_set_Playback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRControllersRecorder/Mode", "Playback", value));
}
// Autogenerated static field getter
// Get static field: static public VRControllersRecorder/Mode Off
GlobalNamespace::VRControllersRecorder::Mode GlobalNamespace::VRControllersRecorder::Mode::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Mode::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::VRControllersRecorder::Mode>("", "VRControllersRecorder/Mode", "Off"));
}
// Autogenerated static field setter
// Set static field: static public VRControllersRecorder/Mode Off
void GlobalNamespace::VRControllersRecorder::Mode::_set_Off(GlobalNamespace::VRControllersRecorder::Mode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorder::Mode::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRControllersRecorder/Mode", "Off", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorder/Keyframe
#include "GlobalNamespace/VRControllersRecorder_Keyframe.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRControllersRecorderData
#include "GlobalNamespace/VRControllersRecorderData.hpp"
// Including type: VRControllersRecorderData/Keyframe
#include "GlobalNamespace/VRControllersRecorderData_Keyframe.hpp"
// Including type: VRControllersRecorderData/NodeInfo
#include "GlobalNamespace/VRControllersRecorderData_NodeInfo.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.XRNode
#include "UnityEngine/XR/XRNode.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VRControllersRecorderData.AddKeyFrame
void GlobalNamespace::VRControllersRecorderData::AddKeyFrame(::Array<GlobalNamespace::VRControllersRecorderData::PositionAndRotation>* positionsAndRotations, float time) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::AddKeyFrame");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddKeyFrame", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(positionsAndRotations, time)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, positionsAndRotations, time);
}
// Autogenerated method: VRControllersRecorderData.GetPositionAndRotation
GlobalNamespace::VRControllersRecorderData::PositionAndRotation GlobalNamespace::VRControllersRecorderData::GetPositionAndRotation(int frameIdx, UnityEngine::XR::XRNode nodeType, int nodeIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::GetPositionAndRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetPositionAndRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(frameIdx, nodeType, nodeIdx)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::VRControllersRecorderData::PositionAndRotation, false>(this, ___internal__method, frameIdx, nodeType, nodeIdx);
}
// Autogenerated method: VRControllersRecorderData.GetLerpedPositionAndRotation
GlobalNamespace::VRControllersRecorderData::PositionAndRotation GlobalNamespace::VRControllersRecorderData::GetLerpedPositionAndRotation(int frameIdx, float t, UnityEngine::XR::XRNode nodeType, int nodeIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::GetLerpedPositionAndRotation");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetLerpedPositionAndRotation", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(frameIdx, t, nodeType, nodeIdx)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::VRControllersRecorderData::PositionAndRotation, false>(this, ___internal__method, frameIdx, t, nodeType, nodeIdx);
}
// Autogenerated method: VRControllersRecorderData.GetFrameTime
float GlobalNamespace::VRControllersRecorderData::GetFrameTime(int frameIdx) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::GetFrameTime");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetFrameTime", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(frameIdx)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, frameIdx);
}
// Autogenerated method: VRControllersRecorderData.get_numberOfKeyframes
int GlobalNamespace::VRControllersRecorderData::get_numberOfKeyframes() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::get_numberOfKeyframes");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_numberOfKeyframes", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorderData/PositionAndRotation
#include "GlobalNamespace/VRControllersRecorderData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VRControllersRecorderData/PositionAndRotation.Lerp
GlobalNamespace::VRControllersRecorderData::PositionAndRotation GlobalNamespace::VRControllersRecorderData::PositionAndRotation::Lerp(GlobalNamespace::VRControllersRecorderData::PositionAndRotation a, GlobalNamespace::VRControllersRecorderData::PositionAndRotation b, float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderData::PositionAndRotation::Lerp");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "VRControllersRecorderData/PositionAndRotation", "Lerp", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(a, b, t)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::VRControllersRecorderData::PositionAndRotation, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRControllersRecorderData/Keyframe
#include "GlobalNamespace/VRControllersRecorderData_Keyframe.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorderData/NodeInfo
#include "GlobalNamespace/VRControllersRecorderData_NodeInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRControllersRecorderSaveAndLoad
#include "GlobalNamespace/VRControllersRecorderSaveAndLoad.hpp"
// Including type: VRControllersRecorderSaveData
#include "GlobalNamespace/VRControllersRecorderSaveData.hpp"
// Including type: UnityEngine.TextAsset
#include "UnityEngine/TextAsset.hpp"
// Including type: VRControllersRecorderData
#include "GlobalNamespace/VRControllersRecorderData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VRControllersRecorderSaveAndLoad.LoadSaveDataFromFile
GlobalNamespace::VRControllersRecorderSaveData* GlobalNamespace::VRControllersRecorderSaveAndLoad::LoadSaveDataFromFile(::Il2CppString* filePath) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveAndLoad::LoadSaveDataFromFile");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "VRControllersRecorderSaveAndLoad", "LoadSaveDataFromFile", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(filePath)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::VRControllersRecorderSaveData*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, filePath);
}
// Autogenerated method: VRControllersRecorderSaveAndLoad.LoadSaveDataFromTextAsset
GlobalNamespace::VRControllersRecorderSaveData* GlobalNamespace::VRControllersRecorderSaveAndLoad::LoadSaveDataFromTextAsset(UnityEngine::TextAsset* textAsset) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveAndLoad::LoadSaveDataFromTextAsset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "VRControllersRecorderSaveAndLoad", "LoadSaveDataFromTextAsset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(textAsset)));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::VRControllersRecorderSaveData*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, textAsset);
}
// Autogenerated method: VRControllersRecorderSaveAndLoad.LoadFromFile
void GlobalNamespace::VRControllersRecorderSaveAndLoad::LoadFromFile(::Il2CppString* filePath, GlobalNamespace::VRControllersRecorderData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveAndLoad::LoadFromFile");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "VRControllersRecorderSaveAndLoad", "LoadFromFile", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(filePath, data)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, filePath, data);
}
// Autogenerated method: VRControllersRecorderSaveAndLoad.SaveToFile
void GlobalNamespace::VRControllersRecorderSaveAndLoad::SaveToFile(::Il2CppString* filePath, GlobalNamespace::VRControllersRecorderData* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRControllersRecorderSaveAndLoad::SaveToFile");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("", "VRControllersRecorderSaveAndLoad", "SaveToFile", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(filePath, data)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, filePath, data);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRControllersRecorderSaveData
#include "GlobalNamespace/VRControllersRecorderSaveData.hpp"
// Including type: VRControllersRecorderSaveData/PositionAndRotation
#include "GlobalNamespace/VRControllersRecorderSaveData_PositionAndRotation.hpp"
// Including type: VRControllersRecorderSaveData/Keyframe
#include "GlobalNamespace/VRControllersRecorderSaveData_Keyframe.hpp"
// Including type: VRControllersRecorderSaveData/NodeInfo
#include "GlobalNamespace/VRControllersRecorderSaveData_NodeInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorderSaveData/PositionAndRotation
#include "GlobalNamespace/VRControllersRecorderSaveData_PositionAndRotation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRControllersRecorderSaveData/Keyframe
#include "GlobalNamespace/VRControllersRecorderSaveData_Keyframe.hpp"
// Including type: VRControllersRecorderSaveData/PositionAndRotation
#include "GlobalNamespace/VRControllersRecorderSaveData_PositionAndRotation.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRControllersRecorderSaveData/NodeInfo
#include "GlobalNamespace/VRControllersRecorderSaveData_NodeInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRTrackersRecorder
#include "GlobalNamespace/VRTrackersRecorder.hpp"
// Including type: VRTrackersRecorder/SavedData
#include "GlobalNamespace/VRTrackersRecorder_SavedData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: VRTrackersRecorder/Keyframe
#include "GlobalNamespace/VRTrackersRecorder_Keyframe.hpp"
// Including type: FloatSO
#include "GlobalNamespace/FloatSO.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: SteamVR_Events/Action
#include "GlobalNamespace/SteamVR_Events_Action.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VRTrackersRecorder.Awake
void GlobalNamespace::VRTrackersRecorder::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTrackersRecorder.OnDestroy
void GlobalNamespace::VRTrackersRecorder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTrackersRecorder.OnEnable
void GlobalNamespace::VRTrackersRecorder::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTrackersRecorder.OnDisable
void GlobalNamespace::VRTrackersRecorder::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::OnDisable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTrackersRecorder.OnNewPoses
void GlobalNamespace::VRTrackersRecorder::OnNewPoses(::Array<Valve::VR::TrackedDevicePose_t>* poses) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::OnNewPoses");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnNewPoses", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(poses)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, poses);
}
// Autogenerated method: VRTrackersRecorder.Update
void GlobalNamespace::VRTrackersRecorder::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTrackersRecorder.Save
void GlobalNamespace::VRTrackersRecorder::Save() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::Save");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Save", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRTrackersRecorder.Load
void GlobalNamespace::VRTrackersRecorder::Load() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::Load");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Load", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRTrackersRecorder/SavedData
#include "GlobalNamespace/VRTrackersRecorder_SavedData.hpp"
// Including type: VRTrackersRecorder/SavedData/KeyframeSerializable
#include "GlobalNamespace/VRTrackersRecorder_SavedData_KeyframeSerializable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRTrackersRecorder/SavedData/KeyframeSerializable
#include "GlobalNamespace/VRTrackersRecorder_SavedData_KeyframeSerializable.hpp"
// Including type: VRTrackersRecorder/SavedData/KeyframeSerializable/TransformSerializable
#include "GlobalNamespace/VRTrackersRecorder_SavedData_KeyframeSerializable_TransformSerializable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRTrackersRecorder/SavedData/KeyframeSerializable/TransformSerializable
#include "GlobalNamespace/VRTrackersRecorder_SavedData_KeyframeSerializable_TransformSerializable.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRTrackersRecorder/RecordMode
#include "GlobalNamespace/VRTrackersRecorder.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public VRTrackersRecorder/RecordMode Record
GlobalNamespace::VRTrackersRecorder::RecordMode GlobalNamespace::VRTrackersRecorder::RecordMode::_get_Record() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::RecordMode::_get_Record");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::VRTrackersRecorder::RecordMode>("", "VRTrackersRecorder/RecordMode", "Record"));
}
// Autogenerated static field setter
// Set static field: static public VRTrackersRecorder/RecordMode Record
void GlobalNamespace::VRTrackersRecorder::RecordMode::_set_Record(GlobalNamespace::VRTrackersRecorder::RecordMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::RecordMode::_set_Record");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRTrackersRecorder/RecordMode", "Record", value));
}
// Autogenerated static field getter
// Get static field: static public VRTrackersRecorder/RecordMode Playback
GlobalNamespace::VRTrackersRecorder::RecordMode GlobalNamespace::VRTrackersRecorder::RecordMode::_get_Playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::RecordMode::_get_Playback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::VRTrackersRecorder::RecordMode>("", "VRTrackersRecorder/RecordMode", "Playback"));
}
// Autogenerated static field setter
// Set static field: static public VRTrackersRecorder/RecordMode Playback
void GlobalNamespace::VRTrackersRecorder::RecordMode::_set_Playback(GlobalNamespace::VRTrackersRecorder::RecordMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::RecordMode::_set_Playback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRTrackersRecorder/RecordMode", "Playback", value));
}
// Autogenerated static field getter
// Get static field: static public VRTrackersRecorder/RecordMode Off
GlobalNamespace::VRTrackersRecorder::RecordMode GlobalNamespace::VRTrackersRecorder::RecordMode::_get_Off() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::RecordMode::_get_Off");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::VRTrackersRecorder::RecordMode>("", "VRTrackersRecorder/RecordMode", "Off"));
}
// Autogenerated static field setter
// Set static field: static public VRTrackersRecorder/RecordMode Off
void GlobalNamespace::VRTrackersRecorder::RecordMode::_set_Off(GlobalNamespace::VRTrackersRecorder::RecordMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRTrackersRecorder::RecordMode::_set_Off");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "VRTrackersRecorder/RecordMode", "Off", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRTrackersRecorder/Keyframe
#include "GlobalNamespace/VRTrackersRecorder_Keyframe.hpp"
// Including type: VRTrackersRecorder/Keyframe/KeyframeTransform
#include "GlobalNamespace/VRTrackersRecorder_Keyframe_KeyframeTransform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRTrackersRecorder/Keyframe/KeyframeTransform
#include "GlobalNamespace/VRTrackersRecorder_Keyframe_KeyframeTransform.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRCenterAdjust
#include "GlobalNamespace/VRCenterAdjust.hpp"
// Including type: Vector3SO
#include "GlobalNamespace/Vector3SO.hpp"
// Including type: FloatSO
#include "GlobalNamespace/FloatSO.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: VRCenterAdjust.Awake
void GlobalNamespace::VRCenterAdjust::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRCenterAdjust::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.Start
void GlobalNamespace::VRCenterAdjust::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRCenterAdjust::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.OnEnable
void GlobalNamespace::VRCenterAdjust::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRCenterAdjust::OnEnable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.OnDisable
void GlobalNamespace::VRCenterAdjust::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRCenterAdjust::OnDisable");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.HandleRoomCenterDidChange
void GlobalNamespace::VRCenterAdjust::HandleRoomCenterDidChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRCenterAdjust::HandleRoomCenterDidChange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleRoomCenterDidChange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.HandleRoomRotationDidChange
void GlobalNamespace::VRCenterAdjust::HandleRoomRotationDidChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRCenterAdjust::HandleRoomRotationDidChange");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleRoomRotationDidChange", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.Update
void GlobalNamespace::VRCenterAdjust::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRCenterAdjust::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRCenterAdjust.ResetRoom
void GlobalNamespace::VRCenterAdjust::ResetRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::VRCenterAdjust::ResetRoom");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ResetRoom", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentSceneSetup
#include "GlobalNamespace/EnvironmentSceneSetup.hpp"
// Including type: EnvironmentSceneSetupData
#include "GlobalNamespace/EnvironmentSceneSetupData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EnvironmentSceneSetup.InstallBindings
void GlobalNamespace::EnvironmentSceneSetup::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EnvironmentSceneSetup::InstallBindings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EventsTestSceneSetup
#include "GlobalNamespace/EventsTestSceneSetup.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EventsTestSceneSetup.InstallBindings
void GlobalNamespace::EventsTestSceneSetup::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::EventsTestSceneSetup::InstallBindings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameCoreSceneSetup
#include "GlobalNamespace/GameCoreSceneSetup.hpp"
// Including type: ScreenCaptureAfterDelay
#include "GlobalNamespace/ScreenCaptureAfterDelay.hpp"
// Including type: MainSettingsModelSO
#include "GlobalNamespace/MainSettingsModelSO.hpp"
// Including type: GameCoreSceneSetupData
#include "GlobalNamespace/GameCoreSceneSetupData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single kPauseButtonPressDurationMultiplier
float GlobalNamespace::GameCoreSceneSetup::_get_kPauseButtonPressDurationMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameCoreSceneSetup::_get_kPauseButtonPressDurationMultiplier");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("", "GameCoreSceneSetup", "kPauseButtonPressDurationMultiplier"));
}
// Autogenerated static field setter
// Set static field: static private System.Single kPauseButtonPressDurationMultiplier
void GlobalNamespace::GameCoreSceneSetup::_set_kPauseButtonPressDurationMultiplier(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameCoreSceneSetup::_set_kPauseButtonPressDurationMultiplier");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GameCoreSceneSetup", "kPauseButtonPressDurationMultiplier", value));
}
// Autogenerated method: GameCoreSceneSetup.InstallBindings
void GlobalNamespace::GameCoreSceneSetup::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameCoreSceneSetup::InstallBindings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HealthWarningSceneSetup
#include "GlobalNamespace/HealthWarningSceneSetup.hpp"
// Including type: HealthWarningSceneSetupData
#include "GlobalNamespace/HealthWarningSceneSetupData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HealthWarningSceneSetup.InstallBindings
void GlobalNamespace::HealthWarningSceneSetup::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneSetup::InstallBindings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HealthWarningSceneStart
#include "GlobalNamespace/HealthWarningSceneStart.hpp"
// Including type: HealthWarningSceneStart/<Start>d__3
#include "GlobalNamespace/HealthWarningSceneStart_-Start-d__3.hpp"
// Including type: HealthWarningFlowCoordinator
#include "GlobalNamespace/HealthWarningFlowCoordinator.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: HMUI.HierarchyManager
#include "HMUI/HierarchyManager.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HealthWarningSceneStart.Start
System::Collections::IEnumerator* GlobalNamespace::HealthWarningSceneStart::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: HealthWarningSceneStart/<Start>d__3
#include "GlobalNamespace/HealthWarningSceneStart_-Start-d__3.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HealthWarningSceneStart/<Start>d__3.System.IDisposable.Dispose
void GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System.IDisposable.Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HealthWarningSceneStart/<Start>d__3.MoveNext
bool GlobalNamespace::HealthWarningSceneStart::$Start$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::$Start$d__3::MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
bool GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System_Collections_IEnumerator_MoveNext() {
  return GlobalNamespace::HealthWarningSceneStart::$Start$d__3::MoveNext();
}
// Autogenerated method: HealthWarningSceneStart/<Start>d__3.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System_Collections_Generic_IEnumerator_1_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: HealthWarningSceneStart/<Start>d__3.System.Collections.IEnumerator.Reset
void GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System.Collections.IEnumerator.Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HealthWarningSceneStart/<Start>d__3.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneStart::$Start$d__3::System.Collections.IEnumerator.get_Current");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuSceneSetup
#include "GlobalNamespace/MenuSceneSetup.hpp"
// Including type: MenuSceneSetup/<Start>d__3
#include "GlobalNamespace/MenuSceneSetup_-Start-d__3.hpp"
// Including type: HMUI.FlowCoordinator
#include "HMUI/FlowCoordinator.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: HMUI.HierarchyManager
#include "HMUI/HierarchyManager.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MenuSceneSetup.Start
System::Collections::IEnumerator* GlobalNamespace::MenuSceneSetup::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuSceneSetup::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MenuSceneSetup/<Start>d__3
#include "GlobalNamespace/MenuSceneSetup_-Start-d__3.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MenuSceneSetup/<Start>d__3.System.IDisposable.Dispose
void GlobalNamespace::MenuSceneSetup::$Start$d__3::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuSceneSetup::$Start$d__3::System.IDisposable.Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuSceneSetup/<Start>d__3.MoveNext
bool GlobalNamespace::MenuSceneSetup::$Start$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuSceneSetup::$Start$d__3::MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
bool GlobalNamespace::MenuSceneSetup::$Start$d__3::System_Collections_IEnumerator_MoveNext() {
  return GlobalNamespace::MenuSceneSetup::$Start$d__3::MoveNext();
}
// Autogenerated method: MenuSceneSetup/<Start>d__3.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::MenuSceneSetup::$Start$d__3::System_Collections_Generic_IEnumerator_1_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuSceneSetup::$Start$d__3::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: MenuSceneSetup/<Start>d__3.System.Collections.IEnumerator.Reset
void GlobalNamespace::MenuSceneSetup::$Start$d__3::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuSceneSetup::$Start$d__3::System.Collections.IEnumerator.Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuSceneSetup/<Start>d__3.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::MenuSceneSetup::$Start$d__3::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuSceneSetup::$Start$d__3::System.Collections.IEnumerator.get_Current");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HealthWarningNoTransitionInstaller
#include "GlobalNamespace/HealthWarningNoTransitionInstaller.hpp"
// Including type: HealthWarningSceneSetupData
#include "GlobalNamespace/HealthWarningSceneSetupData.hpp"
// Including type: HealthWarningScenesTransitionSetupDataSO
#include "GlobalNamespace/HealthWarningScenesTransitionSetupDataSO.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HealthWarningNoTransitionInstaller.InstallBindings
void GlobalNamespace::HealthWarningNoTransitionInstaller::InstallBindings(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningNoTransitionInstaller::InstallBindings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(container)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionLevelNoTransitionInstaller
#include "GlobalNamespace/MissionLevelNoTransitionInstaller.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: ColorSchemeSO
#include "GlobalNamespace/ColorSchemeSO.hpp"
// Including type: MissionObjective
#include "GlobalNamespace/MissionObjective.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: MissionLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MissionLevelScenesTransitionSetupDataSO.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionLevelNoTransitionInstaller.InstallBindings
void GlobalNamespace::MissionLevelNoTransitionInstaller::InstallBindings(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelNoTransitionInstaller::InstallBindings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(container)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLevelNoTransitionInstaller
#include "GlobalNamespace/MultiplayerLevelNoTransitionInstaller.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: ColorSchemeSO
#include "GlobalNamespace/ColorSchemeSO.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: PracticeSettings
#include "GlobalNamespace/PracticeSettings.hpp"
// Including type: MultiplayerLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MultiplayerLevelScenesTransitionSetupDataSO.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerLevelNoTransitionInstaller.InstallBindings
void GlobalNamespace::MultiplayerLevelNoTransitionInstaller::InstallBindings(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelNoTransitionInstaller::InstallBindings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(container)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PatternFightNoTransitionInstaller
#include "GlobalNamespace/PatternFightNoTransitionInstaller.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: PatternFightScenesTransitionSetupDataSO
#include "GlobalNamespace/PatternFightScenesTransitionSetupDataSO.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PatternFightNoTransitionInstaller.InstallBindings
void GlobalNamespace::PatternFightNoTransitionInstaller::InstallBindings(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightNoTransitionInstaller::InstallBindings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(container)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandardLevelNoTransitionInstaller
#include "GlobalNamespace/StandardLevelNoTransitionInstaller.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: ColorSchemeSO
#include "GlobalNamespace/ColorSchemeSO.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: PracticeSettings
#include "GlobalNamespace/PracticeSettings.hpp"
// Including type: StandardLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/StandardLevelScenesTransitionSetupDataSO.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: StandardLevelNoTransitionInstaller.InstallBindings
void GlobalNamespace::StandardLevelNoTransitionInstaller::InstallBindings(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelNoTransitionInstaller::InstallBindings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(container)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialNoTransitionInstaller
#include "GlobalNamespace/TutorialNoTransitionInstaller.hpp"
// Including type: TutorialScenesTransitionSetupDataSO
#include "GlobalNamespace/TutorialScenesTransitionSetupDataSO.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TutorialNoTransitionInstaller.InstallBindings
void GlobalNamespace::TutorialNoTransitionInstaller::InstallBindings(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialNoTransitionInstaller::InstallBindings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(container)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PatternFightSceneSetup
#include "GlobalNamespace/PatternFightSceneSetup.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: BeatmapObjectSpawnControllerPlayerHeightSetter
#include "GlobalNamespace/BeatmapObjectSpawnControllerPlayerHeightSetter.hpp"
// Including type: PlayerHeightDetector
#include "GlobalNamespace/PlayerHeightDetector.hpp"
// Including type: AudioManagerSO
#include "GlobalNamespace/AudioManagerSO.hpp"
// Including type: PatternFightSceneSetupData
#include "GlobalNamespace/PatternFightSceneSetupData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PatternFightSceneSetup.InstallBindings
void GlobalNamespace::PatternFightSceneSetup::InstallBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightSceneSetup::InstallBindings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstallBindings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: BeatmapEditorSceneSetupData
#include "GlobalNamespace/BeatmapEditorSceneSetupData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapEditorSceneSetupData.get_levelDirPath
::Il2CppString* GlobalNamespace::BeatmapEditorSceneSetupData::get_levelDirPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapEditorSceneSetupData::get_levelDirPath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_levelDirPath", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapEditorSceneSetupData.get_levelAssetPath
::Il2CppString* GlobalNamespace::BeatmapEditorSceneSetupData::get_levelAssetPath() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapEditorSceneSetupData::get_levelAssetPath");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_levelAssetPath", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EnvironmentSceneSetupData
#include "GlobalNamespace/EnvironmentSceneSetupData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameCoreSceneSetupData
#include "GlobalNamespace/GameCoreSceneSetupData.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GameCoreSceneSetupData.get_colorScheme
GlobalNamespace::ColorScheme* GlobalNamespace::GameCoreSceneSetupData::get_colorScheme() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameCoreSceneSetupData::get_colorScheme");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_colorScheme", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ColorScheme*, false>(this, ___internal__method);
}
// Autogenerated method: GameCoreSceneSetupData.set_colorScheme
void GlobalNamespace::GameCoreSceneSetupData::set_colorScheme(GlobalNamespace::ColorScheme* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::GameCoreSceneSetupData::set_colorScheme");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_colorScheme", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GameplayCoreSceneSetupData
#include "GlobalNamespace/GameplayCoreSceneSetupData.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: PracticeSettings
#include "GlobalNamespace/PracticeSettings.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HealthWarningSceneSetupData
#include "GlobalNamespace/HealthWarningSceneSetupData.hpp"
// Including type: ScenesTransitionSetupDataSO
#include "GlobalNamespace/ScenesTransitionSetupDataSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HealthWarningSceneSetupData.get_nextScenesTransitionSetupData
GlobalNamespace::ScenesTransitionSetupDataSO* GlobalNamespace::HealthWarningSceneSetupData::get_nextScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningSceneSetupData::get_nextScenesTransitionSetupData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_nextScenesTransitionSetupData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ScenesTransitionSetupDataSO*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionGameplaySceneSetupData
#include "GlobalNamespace/MissionGameplaySceneSetupData.hpp"
// Including type: MissionObjective
#include "GlobalNamespace/MissionObjective.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MultiplayerLevelSceneSetupData
#include "GlobalNamespace/MultiplayerLevelSceneSetupData.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: NetEaseSceneSetupData
#include "GlobalNamespace/NetEaseSceneSetupData.hpp"
// Including type: ScenesTransitionSetupDataSO
#include "GlobalNamespace/ScenesTransitionSetupDataSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: NetEaseSceneSetupData.get_nextScenesTransitionSetupData
GlobalNamespace::ScenesTransitionSetupDataSO* GlobalNamespace::NetEaseSceneSetupData::get_nextScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::NetEaseSceneSetupData::get_nextScenesTransitionSetupData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_nextScenesTransitionSetupData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ScenesTransitionSetupDataSO*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PatternFightSceneSetupData
#include "GlobalNamespace/PatternFightSceneSetupData.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ShaderWarmupSceneSetupData
#include "GlobalNamespace/ShaderWarmupSceneSetupData.hpp"
// Including type: ScenesTransitionSetupDataSO
#include "GlobalNamespace/ScenesTransitionSetupDataSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ShaderWarmupSceneSetupData.get_nextScenesTransitionSetupData
GlobalNamespace::ScenesTransitionSetupDataSO* GlobalNamespace::ShaderWarmupSceneSetupData::get_nextScenesTransitionSetupData() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShaderWarmupSceneSetupData::get_nextScenesTransitionSetupData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_nextScenesTransitionSetupData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::ScenesTransitionSetupDataSO*, false>(this, ___internal__method);
}
// Autogenerated method: ShaderWarmupSceneSetupData.set_nextScenesTransitionSetupData
void GlobalNamespace::ShaderWarmupSceneSetupData::set_nextScenesTransitionSetupData(GlobalNamespace::ScenesTransitionSetupDataSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShaderWarmupSceneSetupData::set_nextScenesTransitionSetupData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_nextScenesTransitionSetupData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandardGameplaySceneSetupData
#include "GlobalNamespace/StandardGameplaySceneSetupData.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AppInitScenesTransitionSetupDataContainerSO
#include "GlobalNamespace/AppInitScenesTransitionSetupDataContainerSO.hpp"
// Including type: AppInitScenesTransitionSetupDataSO
#include "GlobalNamespace/AppInitScenesTransitionSetupDataSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AppInitScenesTransitionSetupDataSO
#include "GlobalNamespace/AppInitScenesTransitionSetupDataSO.hpp"
// Including type: AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType
#include "GlobalNamespace/AppInitScenesTransitionSetupDataSO_AppInitOverrideStartType.hpp"
// Including type: AppInitScenesTransitionSetupDataSO/AppInitSceneSetupData
#include "GlobalNamespace/AppInitScenesTransitionSetupDataSO_AppInitSceneSetupData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AppInitScenesTransitionSetupDataSO.Init
void GlobalNamespace::AppInitScenesTransitionSetupDataSO::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AppInitScenesTransitionSetupDataSO::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: AppInitScenesTransitionSetupDataSO.__Init
void GlobalNamespace::AppInitScenesTransitionSetupDataSO::__Init(GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType appInitOverrideStartType) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AppInitScenesTransitionSetupDataSO::__Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "__Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(appInitOverrideStartType)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, appInitOverrideStartType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType
#include "GlobalNamespace/AppInitScenesTransitionSetupDataSO_AppInitOverrideStartType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType DoNotOverride
GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_get_DoNotOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_get_DoNotOverride");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType>("", "AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType", "DoNotOverride"));
}
// Autogenerated static field setter
// Set static field: static public AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType DoNotOverride
void GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_set_DoNotOverride(GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_set_DoNotOverride");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType", "DoNotOverride", value));
}
// Autogenerated static field getter
// Get static field: static public AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType AppStart
GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_get_AppStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_get_AppStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType>("", "AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType", "AppStart"));
}
// Autogenerated static field setter
// Set static field: static public AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType AppStart
void GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_set_AppStart(GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_set_AppStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType", "AppStart", value));
}
// Autogenerated static field getter
// Get static field: static public AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType AppRestart
GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_get_AppRestart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_get_AppRestart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType>("", "AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType", "AppRestart"));
}
// Autogenerated static field setter
// Set static field: static public AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType AppRestart
void GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_set_AppRestart(GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_set_AppRestart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType", "AppRestart", value));
}
// Autogenerated static field getter
// Get static field: static public AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType MultiSceneEditor
GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_get_MultiSceneEditor() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_get_MultiSceneEditor");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType>("", "AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType", "MultiSceneEditor"));
}
// Autogenerated static field setter
// Set static field: static public AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType MultiSceneEditor
void GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_set_MultiSceneEditor(GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType::_set_MultiSceneEditor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "AppInitScenesTransitionSetupDataSO/AppInitOverrideStartType", "MultiSceneEditor", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AppInitScenesTransitionSetupDataSO/AppInitSceneSetupData
#include "GlobalNamespace/AppInitScenesTransitionSetupDataSO_AppInitSceneSetupData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: AppInitScenesTransitionSetupDataSO/AppInitSceneSetupData.get_appInitOverrideStartType
GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::get_appInitOverrideStartType() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::get_appInitOverrideStartType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_appInitOverrideStartType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType, false>(this, ___internal__method);
}
// Autogenerated method: AppInitScenesTransitionSetupDataSO/AppInitSceneSetupData.set_appInitOverrideStartType
void GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::set_appInitOverrideStartType(GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitOverrideStartType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::AppInitScenesTransitionSetupDataSO::AppInitSceneSetupData::set_appInitOverrideStartType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_appInitOverrideStartType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BeatmapEditorScenesTransitionSetupDataSO
#include "GlobalNamespace/BeatmapEditorScenesTransitionSetupDataSO.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: BeatmapEditorScenesTransitionSetupDataSO.add_didFinishEvent
void GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO::add_didFinishEvent(System::Action_1<GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapEditorScenesTransitionSetupDataSO.remove_didFinishEvent
void GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO::remove_didFinishEvent(System::Action_1<GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: BeatmapEditorScenesTransitionSetupDataSO.Init
void GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BeatmapEditorScenesTransitionSetupDataSO.Finish
void GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO::Finish() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO::Finish");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CreditsScenesTransitionSetupDataSO
#include "GlobalNamespace/CreditsScenesTransitionSetupDataSO.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CreditsScenesTransitionSetupDataSO.add_didFinishEvent
void GlobalNamespace::CreditsScenesTransitionSetupDataSO::add_didFinishEvent(System::Action_1<GlobalNamespace::CreditsScenesTransitionSetupDataSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsScenesTransitionSetupDataSO::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CreditsScenesTransitionSetupDataSO.remove_didFinishEvent
void GlobalNamespace::CreditsScenesTransitionSetupDataSO::remove_didFinishEvent(System::Action_1<GlobalNamespace::CreditsScenesTransitionSetupDataSO*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsScenesTransitionSetupDataSO::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CreditsScenesTransitionSetupDataSO.Finish
void GlobalNamespace::CreditsScenesTransitionSetupDataSO::Finish() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::CreditsScenesTransitionSetupDataSO::Finish");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HealthWarningScenesTransitionSetupDataSO
#include "GlobalNamespace/HealthWarningScenesTransitionSetupDataSO.hpp"
// Including type: HealthWarningSceneSetupData
#include "GlobalNamespace/HealthWarningSceneSetupData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HealthWarningScenesTransitionSetupDataSO.Init
void GlobalNamespace::HealthWarningScenesTransitionSetupDataSO::Init(GlobalNamespace::HealthWarningSceneSetupData* healthWarningSceneSetupData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::HealthWarningScenesTransitionSetupDataSO::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(healthWarningSceneSetupData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, healthWarningSceneSetupData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuScenesTransitionSetupDataSO
#include "GlobalNamespace/MenuScenesTransitionSetupDataSO.hpp"
// Including type: SceneInfo
#include "GlobalNamespace/SceneInfo.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MenuScenesTransitionSetupDataSO.Init
void GlobalNamespace::MenuScenesTransitionSetupDataSO::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuScenesTransitionSetupDataSO::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MenuTransitionsHelper
#include "GlobalNamespace/MenuTransitionsHelper.hpp"
// Including type: MenuTransitionsHelper/<>c__DisplayClass22_0
#include "GlobalNamespace/MenuTransitionsHelper_--c__DisplayClass22_0.hpp"
// Including type: MenuTransitionsHelper/<>c__DisplayClass23_0
#include "GlobalNamespace/MenuTransitionsHelper_--c__DisplayClass23_0.hpp"
// Including type: MenuTransitionsHelper/<>c__DisplayClass24_0
#include "GlobalNamespace/MenuTransitionsHelper_--c__DisplayClass24_0.hpp"
// Including type: MenuTransitionsHelper/<>c__DisplayClass25_0
#include "GlobalNamespace/MenuTransitionsHelper_--c__DisplayClass25_0.hpp"
// Including type: MenuTransitionsHelper/<>c__DisplayClass26_0
#include "GlobalNamespace/MenuTransitionsHelper_--c__DisplayClass26_0.hpp"
// Including type: AppInitScenesTransitionSetupDataContainerSO
#include "GlobalNamespace/AppInitScenesTransitionSetupDataContainerSO.hpp"
// Including type: StandardLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/StandardLevelScenesTransitionSetupDataSO.hpp"
// Including type: MultiplayerLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MultiplayerLevelScenesTransitionSetupDataSO.hpp"
// Including type: MissionLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MissionLevelScenesTransitionSetupDataSO.hpp"
// Including type: TutorialScenesTransitionSetupDataSO/TutorialEndStateType
#include "GlobalNamespace/TutorialScenesTransitionSetupDataSO.hpp"
// Including type: CreditsScenesTransitionSetupDataSO
#include "GlobalNamespace/CreditsScenesTransitionSetupDataSO.hpp"
// Including type: BeatmapEditorScenesTransitionSetupDataSO
#include "GlobalNamespace/BeatmapEditorScenesTransitionSetupDataSO.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: MissionCompletionResults
#include "GlobalNamespace/MissionCompletionResults.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: OverrideEnvironmentSettings
#include "GlobalNamespace/OverrideEnvironmentSettings.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: PracticeSettings
#include "GlobalNamespace/PracticeSettings.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: MissionObjective
#include "GlobalNamespace/MissionObjective.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: BeatmapDifficulty
#include "GlobalNamespace/BeatmapDifficulty.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MenuTransitionsHelper.StartStandardLevel
void GlobalNamespace::MenuTransitionsHelper::StartStandardLevel(::Il2CppString* gameMode, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, GlobalNamespace::OverrideEnvironmentSettings* overrideEnvironmentSettings, GlobalNamespace::ColorScheme* overrideColorScheme, GlobalNamespace::GameplayModifiers* gameplayModifiers, GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings, GlobalNamespace::PracticeSettings* practiceSettings, ::Il2CppString* backButtonText, bool useTestNoteCutSoundEffects, System::Action* beforeSceneSwitchCallback, System::Action_2<GlobalNamespace::StandardLevelScenesTransitionSetupDataSO*, GlobalNamespace::LevelCompletionResults*>* levelFinishedCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::StartStandardLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartStandardLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(gameMode, difficultyBeatmap, overrideEnvironmentSettings, overrideColorScheme, gameplayModifiers, playerSpecificSettings, practiceSettings, backButtonText, useTestNoteCutSoundEffects, beforeSceneSwitchCallback, levelFinishedCallback)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, gameMode, difficultyBeatmap, overrideEnvironmentSettings, overrideColorScheme, gameplayModifiers, playerSpecificSettings, practiceSettings, backButtonText, useTestNoteCutSoundEffects, beforeSceneSwitchCallback, levelFinishedCallback);
}
// Autogenerated method: MenuTransitionsHelper.StartStandardLevel
void GlobalNamespace::MenuTransitionsHelper::StartStandardLevel(::Il2CppString* gameMode, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, GlobalNamespace::OverrideEnvironmentSettings* overrideEnvironmentSettings, GlobalNamespace::ColorScheme* overrideColorScheme, GlobalNamespace::GameplayModifiers* gameplayModifiers, GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings, GlobalNamespace::PracticeSettings* practiceSettings, ::Il2CppString* backButtonText, bool useTestNoteCutSoundEffects, System::Action* beforeSceneSwitchCallback, System::Action_1<Zenject::DiContainer*>* afterSceneSwitchCallback, System::Action_2<GlobalNamespace::StandardLevelScenesTransitionSetupDataSO*, GlobalNamespace::LevelCompletionResults*>* levelFinishedCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::StartStandardLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartStandardLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(gameMode, difficultyBeatmap, overrideEnvironmentSettings, overrideColorScheme, gameplayModifiers, playerSpecificSettings, practiceSettings, backButtonText, useTestNoteCutSoundEffects, beforeSceneSwitchCallback, afterSceneSwitchCallback, levelFinishedCallback)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, gameMode, difficultyBeatmap, overrideEnvironmentSettings, overrideColorScheme, gameplayModifiers, playerSpecificSettings, practiceSettings, backButtonText, useTestNoteCutSoundEffects, beforeSceneSwitchCallback, afterSceneSwitchCallback, levelFinishedCallback);
}
// Autogenerated method: MenuTransitionsHelper.StartMissionLevel
void GlobalNamespace::MenuTransitionsHelper::StartMissionLevel(::Il2CppString* missionId, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, GlobalNamespace::ColorScheme* overrideColorScheme, GlobalNamespace::GameplayModifiers* gameplayModifiers, ::Array<GlobalNamespace::MissionObjective*>* missionObjectives, GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings, System::Action* beforeSceneSwitchCallback, System::Action_2<GlobalNamespace::MissionLevelScenesTransitionSetupDataSO*, GlobalNamespace::MissionCompletionResults*>* levelFinishedCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::StartMissionLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartMissionLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(missionId, difficultyBeatmap, overrideColorScheme, gameplayModifiers, missionObjectives, playerSpecificSettings, beforeSceneSwitchCallback, levelFinishedCallback)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, missionId, difficultyBeatmap, overrideColorScheme, gameplayModifiers, missionObjectives, playerSpecificSettings, beforeSceneSwitchCallback, levelFinishedCallback);
}
// Autogenerated method: MenuTransitionsHelper.StartMultiplayerLevel
void GlobalNamespace::MenuTransitionsHelper::StartMultiplayerLevel(::Il2CppString* gameMode, GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, GlobalNamespace::BeatmapDifficulty beatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, GlobalNamespace::ColorScheme* overrideColorScheme, GlobalNamespace::GameplayModifiers* gameplayModifiers, GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings, GlobalNamespace::PracticeSettings* practiceSettings, ::Il2CppString* backButtonText, bool useTestNoteCutSoundEffects, System::Action* beforeSceneSwitchCallback, System::Action_3<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::LevelCompletionResults*, System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::LevelCompletionResults*>*>* levelFinishedCallback, System::Action_1<GlobalNamespace::DisconnectedReason>* didDisconnectCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::StartMultiplayerLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartMultiplayerLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(gameMode, previewBeatmapLevel, beatmapDifficulty, beatmapCharacteristic, difficultyBeatmap, overrideColorScheme, gameplayModifiers, playerSpecificSettings, practiceSettings, backButtonText, useTestNoteCutSoundEffects, beforeSceneSwitchCallback, levelFinishedCallback, didDisconnectCallback)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, gameMode, previewBeatmapLevel, beatmapDifficulty, beatmapCharacteristic, difficultyBeatmap, overrideColorScheme, gameplayModifiers, playerSpecificSettings, practiceSettings, backButtonText, useTestNoteCutSoundEffects, beforeSceneSwitchCallback, levelFinishedCallback, didDisconnectCallback);
}
// Autogenerated method: MenuTransitionsHelper.StartMultiplayerLevel
void GlobalNamespace::MenuTransitionsHelper::StartMultiplayerLevel(::Il2CppString* gameMode, GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, GlobalNamespace::BeatmapDifficulty beatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, GlobalNamespace::ColorScheme* overrideColorScheme, GlobalNamespace::GameplayModifiers* gameplayModifiers, GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings, GlobalNamespace::PracticeSettings* practiceSettings, ::Il2CppString* backButtonText, bool useTestNoteCutSoundEffects, System::Action* beforeSceneSwitchCallback, System::Action_1<Zenject::DiContainer*>* afterSceneSwitchCallback, System::Action_3<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::LevelCompletionResults*, System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::LevelCompletionResults*>*>* levelFinishedCallback, System::Action_1<GlobalNamespace::DisconnectedReason>* didDisconnectCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::StartMultiplayerLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartMultiplayerLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(gameMode, previewBeatmapLevel, beatmapDifficulty, beatmapCharacteristic, difficultyBeatmap, overrideColorScheme, gameplayModifiers, playerSpecificSettings, practiceSettings, backButtonText, useTestNoteCutSoundEffects, beforeSceneSwitchCallback, afterSceneSwitchCallback, levelFinishedCallback, didDisconnectCallback)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, gameMode, previewBeatmapLevel, beatmapDifficulty, beatmapCharacteristic, difficultyBeatmap, overrideColorScheme, gameplayModifiers, playerSpecificSettings, practiceSettings, backButtonText, useTestNoteCutSoundEffects, beforeSceneSwitchCallback, afterSceneSwitchCallback, levelFinishedCallback, didDisconnectCallback);
}
// Autogenerated method: MenuTransitionsHelper.StartTutorial
void GlobalNamespace::MenuTransitionsHelper::StartTutorial(System::Action* beforeSceneSwitchCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::StartTutorial");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartTutorial", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beforeSceneSwitchCallback)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beforeSceneSwitchCallback);
}
// Autogenerated method: MenuTransitionsHelper.ShowCredits
void GlobalNamespace::MenuTransitionsHelper::ShowCredits() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::ShowCredits");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ShowCredits", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuTransitionsHelper.StartBeatmapEditor
void GlobalNamespace::MenuTransitionsHelper::StartBeatmapEditor(System::Action* beatmapEditorFinishedCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::StartBeatmapEditor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartBeatmapEditor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapEditorFinishedCallback)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapEditorFinishedCallback);
}
// Autogenerated method: MenuTransitionsHelper.RestartGame
void GlobalNamespace::MenuTransitionsHelper::RestartGame() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::RestartGame");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RestartGame", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: MenuTransitionsHelper.HandleMainGameSceneDidFinish
void GlobalNamespace::MenuTransitionsHelper::HandleMainGameSceneDidFinish(GlobalNamespace::StandardLevelScenesTransitionSetupDataSO* standardLevelScenesTransitionSetupData, GlobalNamespace::LevelCompletionResults* levelCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::HandleMainGameSceneDidFinish");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMainGameSceneDidFinish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(standardLevelScenesTransitionSetupData, levelCompletionResults)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, standardLevelScenesTransitionSetupData, levelCompletionResults);
}
// Autogenerated method: MenuTransitionsHelper.HandleMultiplayerLevelDidFinish
void GlobalNamespace::MenuTransitionsHelper::HandleMultiplayerLevelDidFinish(GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO* multiplayerLevelScenesTransitionSetupData, GlobalNamespace::LevelCompletionResults* levelCompletionResults, System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::LevelCompletionResults*>* otherPlayersCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::HandleMultiplayerLevelDidFinish");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMultiplayerLevelDidFinish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(multiplayerLevelScenesTransitionSetupData, levelCompletionResults, otherPlayersCompletionResults)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, multiplayerLevelScenesTransitionSetupData, levelCompletionResults, otherPlayersCompletionResults);
}
// Autogenerated method: MenuTransitionsHelper.HandleMultiplayerLevelDidDisconnect
void GlobalNamespace::MenuTransitionsHelper::HandleMultiplayerLevelDidDisconnect(GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO* multiplayerLevelScenesTransitionSetupData, GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::HandleMultiplayerLevelDidDisconnect");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMultiplayerLevelDidDisconnect", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(multiplayerLevelScenesTransitionSetupData, disconnectedReason)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, multiplayerLevelScenesTransitionSetupData, disconnectedReason);
}
// Autogenerated method: MenuTransitionsHelper.HandleMissionLevelSceneDidFinish
void GlobalNamespace::MenuTransitionsHelper::HandleMissionLevelSceneDidFinish(GlobalNamespace::MissionLevelScenesTransitionSetupDataSO* missionLevelScenesTransitionSetupData, GlobalNamespace::MissionCompletionResults* missionCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::HandleMissionLevelSceneDidFinish");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleMissionLevelSceneDidFinish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(missionLevelScenesTransitionSetupData, missionCompletionResults)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, missionLevelScenesTransitionSetupData, missionCompletionResults);
}
// Autogenerated method: MenuTransitionsHelper.HandleTutorialSceneDidFinish
void GlobalNamespace::MenuTransitionsHelper::HandleTutorialSceneDidFinish(GlobalNamespace::TutorialScenesTransitionSetupDataSO* tutorialSceneTransitionSetupData, GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType endState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::HandleTutorialSceneDidFinish");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleTutorialSceneDidFinish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tutorialSceneTransitionSetupData, endState)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tutorialSceneTransitionSetupData, endState);
}
// Autogenerated method: MenuTransitionsHelper.HandleCreditsSceneDidFinish
void GlobalNamespace::MenuTransitionsHelper::HandleCreditsSceneDidFinish(GlobalNamespace::CreditsScenesTransitionSetupDataSO* creditsSceneTransitionSetupData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::HandleCreditsSceneDidFinish");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleCreditsSceneDidFinish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(creditsSceneTransitionSetupData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, creditsSceneTransitionSetupData);
}
// Autogenerated method: MenuTransitionsHelper.HandleBeatmapEditorSceneDidFinish
void GlobalNamespace::MenuTransitionsHelper::HandleBeatmapEditorSceneDidFinish(GlobalNamespace::BeatmapEditorScenesTransitionSetupDataSO* beatmapEditorScenesTransitionSetupData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::HandleBeatmapEditorSceneDidFinish");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleBeatmapEditorSceneDidFinish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(beatmapEditorScenesTransitionSetupData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, beatmapEditorScenesTransitionSetupData);
}
// Autogenerated method: MenuTransitionsHelper.<HandleBeatmapEditorSceneDidFinish>b__28_0
void GlobalNamespace::MenuTransitionsHelper::$HandleBeatmapEditorSceneDidFinish$b__28_0(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::<HandleBeatmapEditorSceneDidFinish>b__28_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleBeatmapEditorSceneDidFinish>b__28_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(container))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuTransitionsHelper/<>c__DisplayClass22_0
#include "GlobalNamespace/MenuTransitionsHelper_--c__DisplayClass22_0.hpp"
// Including type: StandardLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/StandardLevelScenesTransitionSetupDataSO.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MenuTransitionsHelper/<>c__DisplayClass22_0.<HandleMainGameSceneDidFinish>b__0
void GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass22_0::$HandleMainGameSceneDidFinish$b__0(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass22_0::<HandleMainGameSceneDidFinish>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleMainGameSceneDidFinish>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(container))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MenuTransitionsHelper/<>c__DisplayClass23_0
#include "GlobalNamespace/MenuTransitionsHelper_--c__DisplayClass23_0.hpp"
// Including type: MultiplayerLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MultiplayerLevelScenesTransitionSetupDataSO.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MenuTransitionsHelper/<>c__DisplayClass23_0.<HandleMultiplayerLevelDidFinish>b__0
void GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass23_0::$HandleMultiplayerLevelDidFinish$b__0(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass23_0::<HandleMultiplayerLevelDidFinish>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleMultiplayerLevelDidFinish>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(container))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuTransitionsHelper/<>c__DisplayClass24_0
#include "GlobalNamespace/MenuTransitionsHelper_--c__DisplayClass24_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MenuTransitionsHelper/<>c__DisplayClass24_0.<HandleMultiplayerLevelDidDisconnect>b__0
void GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass24_0::$HandleMultiplayerLevelDidDisconnect$b__0(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass24_0::<HandleMultiplayerLevelDidDisconnect>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleMultiplayerLevelDidDisconnect>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(container))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuTransitionsHelper/<>c__DisplayClass25_0
#include "GlobalNamespace/MenuTransitionsHelper_--c__DisplayClass25_0.hpp"
// Including type: MissionLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MissionLevelScenesTransitionSetupDataSO.hpp"
// Including type: MissionCompletionResults
#include "GlobalNamespace/MissionCompletionResults.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MenuTransitionsHelper/<>c__DisplayClass25_0.<HandleMissionLevelSceneDidFinish>b__0
void GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass25_0::$HandleMissionLevelSceneDidFinish$b__0(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass25_0::<HandleMissionLevelSceneDidFinish>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleMissionLevelSceneDidFinish>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(container))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: MenuTransitionsHelper/<>c__DisplayClass26_0
#include "GlobalNamespace/MenuTransitionsHelper_--c__DisplayClass26_0.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MenuTransitionsHelper/<>c__DisplayClass26_0.<HandleTutorialSceneDidFinish>b__0
void GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass26_0::$HandleTutorialSceneDidFinish$b__0(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MenuTransitionsHelper::$$c__DisplayClass26_0::<HandleTutorialSceneDidFinish>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<HandleTutorialSceneDidFinish>b__0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(container))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MissionLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MissionLevelScenesTransitionSetupDataSO.hpp"
// Including type: SceneInfo
#include "GlobalNamespace/SceneInfo.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: MissionCompletionResults
#include "GlobalNamespace/MissionCompletionResults.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: MissionObjective
#include "GlobalNamespace/MissionObjective.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MissionLevelScenesTransitionSetupDataSO.add_didFinishEvent
void GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::add_didFinishEvent(System::Action_2<GlobalNamespace::MissionLevelScenesTransitionSetupDataSO*, GlobalNamespace::MissionCompletionResults*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionLevelScenesTransitionSetupDataSO.remove_didFinishEvent
void GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::remove_didFinishEvent(System::Action_2<GlobalNamespace::MissionLevelScenesTransitionSetupDataSO*, GlobalNamespace::MissionCompletionResults*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionLevelScenesTransitionSetupDataSO.get_missionId
::Il2CppString* GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::get_missionId() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::get_missionId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_missionId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: MissionLevelScenesTransitionSetupDataSO.set_missionId
void GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::set_missionId(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::set_missionId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_missionId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionLevelScenesTransitionSetupDataSO.get_difficultyBeatmap
GlobalNamespace::IDifficultyBeatmap* GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::get_difficultyBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::get_difficultyBeatmap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_difficultyBeatmap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IDifficultyBeatmap*, false>(this, ___internal__method);
}
// Autogenerated method: MissionLevelScenesTransitionSetupDataSO.set_difficultyBeatmap
void GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::set_difficultyBeatmap(GlobalNamespace::IDifficultyBeatmap* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::set_difficultyBeatmap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_difficultyBeatmap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MissionLevelScenesTransitionSetupDataSO.Init
void GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::Init(::Il2CppString* missionId, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, ::Array<GlobalNamespace::MissionObjective*>* missionObjectives, GlobalNamespace::ColorScheme* overrideColorScheme, GlobalNamespace::GameplayModifiers* gameplayModifiers, GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings, ::Il2CppString* backButtonText) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(missionId, difficultyBeatmap, missionObjectives, overrideColorScheme, gameplayModifiers, playerSpecificSettings, backButtonText)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, missionId, difficultyBeatmap, missionObjectives, overrideColorScheme, gameplayModifiers, playerSpecificSettings, backButtonText);
}
// Autogenerated method: MissionLevelScenesTransitionSetupDataSO.Finish
void GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::Finish(GlobalNamespace::MissionCompletionResults* levelCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MissionLevelScenesTransitionSetupDataSO::Finish");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(levelCompletionResults)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelCompletionResults);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: MultiplayerLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/MultiplayerLevelScenesTransitionSetupDataSO.hpp"
// Including type: SceneInfo
#include "GlobalNamespace/SceneInfo.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: System.Action`3
#include "System/Action_3.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: IPreviewBeatmapLevel
#include "GlobalNamespace/IPreviewBeatmapLevel.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: PracticeSettings
#include "GlobalNamespace/PracticeSettings.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.add_didFinishEvent
void GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::add_didFinishEvent(System::Action_3<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::LevelCompletionResults*, System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::LevelCompletionResults*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.remove_didFinishEvent
void GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::remove_didFinishEvent(System::Action_3<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::LevelCompletionResults*, System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::LevelCompletionResults*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.add_didDisconnectEvent
void GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::add_didDisconnectEvent(System::Action_2<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::add_didDisconnectEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_didDisconnectEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.remove_didDisconnectEvent
void GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::remove_didDisconnectEvent(System::Action_2<GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO*, GlobalNamespace::DisconnectedReason>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::remove_didDisconnectEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_didDisconnectEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.get_gameMode
::Il2CppString* GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::get_gameMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::get_gameMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_gameMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.set_gameMode
void GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::set_gameMode(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::set_gameMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_gameMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.get_previewBeatmapLevel
GlobalNamespace::IPreviewBeatmapLevel* GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::get_previewBeatmapLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::get_previewBeatmapLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_previewBeatmapLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IPreviewBeatmapLevel*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.set_previewBeatmapLevel
void GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::set_previewBeatmapLevel(GlobalNamespace::IPreviewBeatmapLevel* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::set_previewBeatmapLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_previewBeatmapLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.get_beatmapDifficulty
GlobalNamespace::BeatmapDifficulty GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::get_beatmapDifficulty() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::get_beatmapDifficulty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapDifficulty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapDifficulty, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.set_beatmapDifficulty
void GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::set_beatmapDifficulty(GlobalNamespace::BeatmapDifficulty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::set_beatmapDifficulty");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_beatmapDifficulty", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.get_difficultyBeatmap
GlobalNamespace::IDifficultyBeatmap* GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::get_difficultyBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::get_difficultyBeatmap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_difficultyBeatmap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IDifficultyBeatmap*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.set_difficultyBeatmap
void GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::set_difficultyBeatmap(GlobalNamespace::IDifficultyBeatmap* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::set_difficultyBeatmap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_difficultyBeatmap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.get_beatmapCharacteristic
GlobalNamespace::BeatmapCharacteristicSO* GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::get_beatmapCharacteristic() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::get_beatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_beatmapCharacteristic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::BeatmapCharacteristicSO*, false>(this, ___internal__method);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.set_beatmapCharacteristic
void GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::set_beatmapCharacteristic(GlobalNamespace::BeatmapCharacteristicSO* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::set_beatmapCharacteristic");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_beatmapCharacteristic", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.Init
void GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::Init(::Il2CppString* gameMode, GlobalNamespace::IPreviewBeatmapLevel* previewBeatmapLevel, GlobalNamespace::BeatmapDifficulty beatmapDifficulty, GlobalNamespace::BeatmapCharacteristicSO* beatmapCharacteristic, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, GlobalNamespace::ColorScheme* overrideColorScheme, GlobalNamespace::GameplayModifiers* gameplayModifiers, GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings, GlobalNamespace::PracticeSettings* practiceSettings, bool useTestNoteCutSoundEffects) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(gameMode, previewBeatmapLevel, beatmapDifficulty, beatmapCharacteristic, difficultyBeatmap, overrideColorScheme, gameplayModifiers, playerSpecificSettings, practiceSettings, useTestNoteCutSoundEffects)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, gameMode, previewBeatmapLevel, beatmapDifficulty, beatmapCharacteristic, difficultyBeatmap, overrideColorScheme, gameplayModifiers, playerSpecificSettings, practiceSettings, useTestNoteCutSoundEffects);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.Finish
void GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::Finish(GlobalNamespace::LevelCompletionResults* levelCompletionResults, System::Collections::Generic::Dictionary_2<::Il2CppString*, GlobalNamespace::LevelCompletionResults*>* otherPlayersLevelCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::Finish");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(levelCompletionResults, otherPlayersLevelCompletionResults)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelCompletionResults, otherPlayersLevelCompletionResults);
}
// Autogenerated method: MultiplayerLevelScenesTransitionSetupDataSO.FinishWithDisconnect
void GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::FinishWithDisconnect(GlobalNamespace::DisconnectedReason disconnectedReason) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::MultiplayerLevelScenesTransitionSetupDataSO::FinishWithDisconnect");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "FinishWithDisconnect", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(disconnectedReason)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, disconnectedReason);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PatternFightScenesTransitionSetupDataSO
#include "GlobalNamespace/PatternFightScenesTransitionSetupDataSO.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: SceneInfo
#include "GlobalNamespace/SceneInfo.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: PatternFightScenesTransitionSetupDataSO.add_didFinishEvent
void GlobalNamespace::PatternFightScenesTransitionSetupDataSO::add_didFinishEvent(System::Action_2<GlobalNamespace::PatternFightScenesTransitionSetupDataSO*, GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightScenesTransitionSetupDataSO::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PatternFightScenesTransitionSetupDataSO.remove_didFinishEvent
void GlobalNamespace::PatternFightScenesTransitionSetupDataSO::remove_didFinishEvent(System::Action_2<GlobalNamespace::PatternFightScenesTransitionSetupDataSO*, GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightScenesTransitionSetupDataSO::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: PatternFightScenesTransitionSetupDataSO.Init
void GlobalNamespace::PatternFightScenesTransitionSetupDataSO::Init(GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightScenesTransitionSetupDataSO::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(playerSpecificSettings)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, playerSpecificSettings);
}
// Autogenerated method: PatternFightScenesTransitionSetupDataSO.Finish
void GlobalNamespace::PatternFightScenesTransitionSetupDataSO::Finish(GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType endState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightScenesTransitionSetupDataSO::Finish");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(endState)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, endState);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PatternFightScenesTransitionSetupDataSO/PatternFightEndStateType
#include "GlobalNamespace/PatternFightScenesTransitionSetupDataSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public PatternFightScenesTransitionSetupDataSO/PatternFightEndStateType Completed
GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType::_get_Completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType::_get_Completed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType>("", "PatternFightScenesTransitionSetupDataSO/PatternFightEndStateType", "Completed"));
}
// Autogenerated static field setter
// Set static field: static public PatternFightScenesTransitionSetupDataSO/PatternFightEndStateType Completed
void GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType::_set_Completed(GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType::_set_Completed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PatternFightScenesTransitionSetupDataSO/PatternFightEndStateType", "Completed", value));
}
// Autogenerated static field getter
// Get static field: static public PatternFightScenesTransitionSetupDataSO/PatternFightEndStateType ReturnToMenu
GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType::_get_ReturnToMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType::_get_ReturnToMenu");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType>("", "PatternFightScenesTransitionSetupDataSO/PatternFightEndStateType", "ReturnToMenu"));
}
// Autogenerated static field setter
// Set static field: static public PatternFightScenesTransitionSetupDataSO/PatternFightEndStateType ReturnToMenu
void GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType::_set_ReturnToMenu(GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::PatternFightScenesTransitionSetupDataSO::PatternFightEndStateType::_set_ReturnToMenu");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "PatternFightScenesTransitionSetupDataSO/PatternFightEndStateType", "ReturnToMenu", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ShaderWarmupScenesTransitionSetupDataSO
#include "GlobalNamespace/ShaderWarmupScenesTransitionSetupDataSO.hpp"
// Including type: ShaderWarmupSceneSetupData
#include "GlobalNamespace/ShaderWarmupSceneSetupData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ShaderWarmupScenesTransitionSetupDataSO.Init
void GlobalNamespace::ShaderWarmupScenesTransitionSetupDataSO::Init(GlobalNamespace::ShaderWarmupSceneSetupData* shaderWarmupSceneSetupData) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShaderWarmupScenesTransitionSetupDataSO::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(shaderWarmupSceneSetupData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, shaderWarmupSceneSetupData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: StandardLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/StandardLevelScenesTransitionSetupDataSO.hpp"
// Including type: SceneInfo
#include "GlobalNamespace/SceneInfo.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: OverrideEnvironmentSettings
#include "GlobalNamespace/OverrideEnvironmentSettings.hpp"
// Including type: ColorScheme
#include "GlobalNamespace/ColorScheme.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: PlayerSpecificSettings
#include "GlobalNamespace/PlayerSpecificSettings.hpp"
// Including type: PracticeSettings
#include "GlobalNamespace/PracticeSettings.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: StandardLevelScenesTransitionSetupDataSO.add_didFinishEvent
void GlobalNamespace::StandardLevelScenesTransitionSetupDataSO::add_didFinishEvent(System::Action_2<GlobalNamespace::StandardLevelScenesTransitionSetupDataSO*, GlobalNamespace::LevelCompletionResults*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelScenesTransitionSetupDataSO::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelScenesTransitionSetupDataSO.remove_didFinishEvent
void GlobalNamespace::StandardLevelScenesTransitionSetupDataSO::remove_didFinishEvent(System::Action_2<GlobalNamespace::StandardLevelScenesTransitionSetupDataSO*, GlobalNamespace::LevelCompletionResults*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelScenesTransitionSetupDataSO::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelScenesTransitionSetupDataSO.get_gameMode
::Il2CppString* GlobalNamespace::StandardLevelScenesTransitionSetupDataSO::get_gameMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelScenesTransitionSetupDataSO::get_gameMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_gameMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelScenesTransitionSetupDataSO.set_gameMode
void GlobalNamespace::StandardLevelScenesTransitionSetupDataSO::set_gameMode(::Il2CppString* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelScenesTransitionSetupDataSO::set_gameMode");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_gameMode", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelScenesTransitionSetupDataSO.get_difficultyBeatmap
GlobalNamespace::IDifficultyBeatmap* GlobalNamespace::StandardLevelScenesTransitionSetupDataSO::get_difficultyBeatmap() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelScenesTransitionSetupDataSO::get_difficultyBeatmap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_difficultyBeatmap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::IDifficultyBeatmap*, false>(this, ___internal__method);
}
// Autogenerated method: StandardLevelScenesTransitionSetupDataSO.set_difficultyBeatmap
void GlobalNamespace::StandardLevelScenesTransitionSetupDataSO::set_difficultyBeatmap(GlobalNamespace::IDifficultyBeatmap* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelScenesTransitionSetupDataSO::set_difficultyBeatmap");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_difficultyBeatmap", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: StandardLevelScenesTransitionSetupDataSO.Init
void GlobalNamespace::StandardLevelScenesTransitionSetupDataSO::Init(::Il2CppString* gameMode, GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap, GlobalNamespace::OverrideEnvironmentSettings* overrideEnvironmentSettings, GlobalNamespace::ColorScheme* overrideColorScheme, GlobalNamespace::GameplayModifiers* gameplayModifiers, GlobalNamespace::PlayerSpecificSettings* playerSpecificSettings, GlobalNamespace::PracticeSettings* practiceSettings, ::Il2CppString* backButtonText, bool useTestNoteCutSoundEffects) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelScenesTransitionSetupDataSO::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(gameMode, difficultyBeatmap, overrideEnvironmentSettings, overrideColorScheme, gameplayModifiers, playerSpecificSettings, practiceSettings, backButtonText, useTestNoteCutSoundEffects)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, gameMode, difficultyBeatmap, overrideEnvironmentSettings, overrideColorScheme, gameplayModifiers, playerSpecificSettings, practiceSettings, backButtonText, useTestNoteCutSoundEffects);
}
// Autogenerated method: StandardLevelScenesTransitionSetupDataSO.Finish
void GlobalNamespace::StandardLevelScenesTransitionSetupDataSO::Finish(GlobalNamespace::LevelCompletionResults* levelCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::StandardLevelScenesTransitionSetupDataSO::Finish");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(levelCompletionResults)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, levelCompletionResults);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialScenesTransitionSetupDataSO
#include "GlobalNamespace/TutorialScenesTransitionSetupDataSO.hpp"
// Including type: EnvironmentInfoSO
#include "GlobalNamespace/EnvironmentInfoSO.hpp"
// Including type: SceneInfo
#include "GlobalNamespace/SceneInfo.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: TutorialScenesTransitionSetupDataSO.add_didFinishEvent
void GlobalNamespace::TutorialScenesTransitionSetupDataSO::add_didFinishEvent(System::Action_2<GlobalNamespace::TutorialScenesTransitionSetupDataSO*, GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialScenesTransitionSetupDataSO::add_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "add_didFinishEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TutorialScenesTransitionSetupDataSO.remove_didFinishEvent
void GlobalNamespace::TutorialScenesTransitionSetupDataSO::remove_didFinishEvent(System::Action_2<GlobalNamespace::TutorialScenesTransitionSetupDataSO*, GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialScenesTransitionSetupDataSO::remove_didFinishEvent");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "remove_didFinishEvent", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TutorialScenesTransitionSetupDataSO.Init
void GlobalNamespace::TutorialScenesTransitionSetupDataSO::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialScenesTransitionSetupDataSO::Init");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TutorialScenesTransitionSetupDataSO.Finish
void GlobalNamespace::TutorialScenesTransitionSetupDataSO::Finish(GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType endState) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialScenesTransitionSetupDataSO::Finish");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Finish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(endState)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, endState);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TutorialScenesTransitionSetupDataSO/TutorialEndStateType
#include "GlobalNamespace/TutorialScenesTransitionSetupDataSO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public TutorialScenesTransitionSetupDataSO/TutorialEndStateType Completed
GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType::_get_Completed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType::_get_Completed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType>("", "TutorialScenesTransitionSetupDataSO/TutorialEndStateType", "Completed"));
}
// Autogenerated static field setter
// Set static field: static public TutorialScenesTransitionSetupDataSO/TutorialEndStateType Completed
void GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType::_set_Completed(GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType::_set_Completed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TutorialScenesTransitionSetupDataSO/TutorialEndStateType", "Completed", value));
}
// Autogenerated static field getter
// Get static field: static public TutorialScenesTransitionSetupDataSO/TutorialEndStateType ReturnToMenu
GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType::_get_ReturnToMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType::_get_ReturnToMenu");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType>("", "TutorialScenesTransitionSetupDataSO/TutorialEndStateType", "ReturnToMenu"));
}
// Autogenerated static field setter
// Set static field: static public TutorialScenesTransitionSetupDataSO/TutorialEndStateType ReturnToMenu
void GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType::_set_ReturnToMenu(GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType::_set_ReturnToMenu");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TutorialScenesTransitionSetupDataSO/TutorialEndStateType", "ReturnToMenu", value));
}
// Autogenerated static field getter
// Get static field: static public TutorialScenesTransitionSetupDataSO/TutorialEndStateType Restart
GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType::_get_Restart() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType::_get_Restart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType>("", "TutorialScenesTransitionSetupDataSO/TutorialEndStateType", "Restart"));
}
// Autogenerated static field setter
// Set static field: static public TutorialScenesTransitionSetupDataSO/TutorialEndStateType Restart
void GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType::_set_Restart(GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::TutorialScenesTransitionSetupDataSO::TutorialEndStateType::_set_Restart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "TutorialScenesTransitionSetupDataSO/TutorialEndStateType", "Restart", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ShaderWarmupSceneSetup
#include "GlobalNamespace/ShaderWarmupSceneSetup.hpp"
// Including type: ShaderWarmupSceneSetup/<Start>d__2
#include "GlobalNamespace/ShaderWarmupSceneSetup_-Start-d__2.hpp"
// Including type: ShaderWarmupSceneSetupData
#include "GlobalNamespace/ShaderWarmupSceneSetupData.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ShaderWarmupSceneSetup.Start
System::Collections::IEnumerator* GlobalNamespace::ShaderWarmupSceneSetup::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShaderWarmupSceneSetup::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: ShaderWarmupSceneSetup/<Start>d__2
#include "GlobalNamespace/ShaderWarmupSceneSetup_-Start-d__2.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: ShaderWarmupSceneSetup/<Start>d__2.System.IDisposable.Dispose
void GlobalNamespace::ShaderWarmupSceneSetup::$Start$d__2::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShaderWarmupSceneSetup::$Start$d__2::System.IDisposable.Dispose");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.IDisposable.Dispose", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ShaderWarmupSceneSetup/<Start>d__2.MoveNext
bool GlobalNamespace::ShaderWarmupSceneSetup::$Start$d__2::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShaderWarmupSceneSetup::$Start$d__2::MoveNext");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "MoveNext", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
bool GlobalNamespace::ShaderWarmupSceneSetup::$Start$d__2::System_Collections_IEnumerator_MoveNext() {
  return GlobalNamespace::ShaderWarmupSceneSetup::$Start$d__2::MoveNext();
}
// Autogenerated method: ShaderWarmupSceneSetup/<Start>d__2.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::ShaderWarmupSceneSetup::$Start$d__2::System_Collections_Generic_IEnumerator_1_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShaderWarmupSceneSetup::$Start$d__2::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "System.Collections.Generic.IEnumerator<System.Object>.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes())));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: ShaderWarmupSceneSetup/<Start>d__2.System.Collections.IEnumerator.Reset
void GlobalNamespace::ShaderWarmupSceneSetup::$Start$d__2::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShaderWarmupSceneSetup::$Start$d__2::System.Collections.IEnumerator.Reset");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.Reset", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ShaderWarmupSceneSetup/<Start>d__2.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::ShaderWarmupSceneSetup::$Start$d__2::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::ShaderWarmupSceneSetup::$Start$d__2::System.Collections.IEnumerator.get_Current");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "System.Collections.IEnumerator.get_Current", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: SimpleLevelStarter
#include "GlobalNamespace/SimpleLevelStarter.hpp"
// Including type: BeatmapLevelSO
#include "GlobalNamespace/BeatmapLevelSO.hpp"
// Including type: BeatmapCharacteristicSO
#include "GlobalNamespace/BeatmapCharacteristicSO.hpp"
// Including type: UnityEngine.TextAsset
#include "UnityEngine/TextAsset.hpp"
// Including type: UnityEngine.UI.Button
#include "UnityEngine/UI/Button.hpp"
// Including type: MenuTransitionsHelper
#include "GlobalNamespace/MenuTransitionsHelper.hpp"
// Including type: GameScenesManager
#include "GlobalNamespace/GameScenesManager.hpp"
// Including type: PlayerDataModel
#include "GlobalNamespace/PlayerDataModel.hpp"
// Including type: HMUI.ButtonBinder
#include "HMUI/ButtonBinder.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
// Including type: ScenesTransitionSetupDataSO
#include "GlobalNamespace/ScenesTransitionSetupDataSO.hpp"
// Including type: Zenject.DiContainer
#include "Zenject/DiContainer.hpp"
// Including type: StandardLevelScenesTransitionSetupDataSO
#include "GlobalNamespace/StandardLevelScenesTransitionSetupDataSO.hpp"
// Including type: LevelCompletionResults
#include "GlobalNamespace/LevelCompletionResults.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: SimpleLevelStarter.Awake
void GlobalNamespace::SimpleLevelStarter::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleLevelStarter::Awake");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleLevelStarter.OnDestroy
void GlobalNamespace::SimpleLevelStarter::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleLevelStarter::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleLevelStarter.StartLevel
void GlobalNamespace::SimpleLevelStarter::StartLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleLevelStarter::StartLevel");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "StartLevel", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleLevelStarter.InstallEarlyBindings
void GlobalNamespace::SimpleLevelStarter::InstallEarlyBindings(GlobalNamespace::ScenesTransitionSetupDataSO* scenesTransitionSetupData, Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleLevelStarter::InstallEarlyBindings");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "InstallEarlyBindings", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(scenesTransitionSetupData, container)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, scenesTransitionSetupData, container);
}
// Autogenerated method: SimpleLevelStarter.ButtonPressed
void GlobalNamespace::SimpleLevelStarter::ButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleLevelStarter::ButtonPressed");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ButtonPressed", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SimpleLevelStarter.HandleLevelDidFinish
void GlobalNamespace::SimpleLevelStarter::HandleLevelDidFinish(GlobalNamespace::StandardLevelScenesTransitionSetupDataSO* standardLevelSceneSetupData, GlobalNamespace::LevelCompletionResults* levelCompletionResults) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleLevelStarter::HandleLevelDidFinish");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "HandleLevelDidFinish", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(standardLevelSceneSetupData, levelCompletionResults)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, standardLevelSceneSetupData, levelCompletionResults);
}
// Autogenerated method: SimpleLevelStarter.<StartLevel>g__AfterSceneSwitchCallback|14_0
void GlobalNamespace::SimpleLevelStarter::$StartLevel$g__AfterSceneSwitchCallback_14_0(Zenject::DiContainer* container) {
  static auto ___internal__logger = ::Logger::get().WithContext("GlobalNamespace::SimpleLevelStarter::<StartLevel>g__AfterSceneSwitchCallback|14_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<StartLevel>g__AfterSceneSwitchCallback|14_0", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(container))));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, container);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tweening.FloatTween
#include "Tweening/FloatTween.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Tweening.FloatTween.GetValue
float Tweening::FloatTween::GetValue(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::FloatTween::GetValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tweening.Vector2Tween
#include "Tweening/Vector2Tween.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Tweening.Vector2Tween.GetValue
UnityEngine::Vector2 Tweening::Vector2Tween::GetValue(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Vector2Tween::GetValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector2, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tweening.Vector3Tween
#include "Tweening/Vector3Tween.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Tweening.Vector3Tween.GetValue
UnityEngine::Vector3 Tweening::Vector3Tween::GetValue(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Vector3Tween::GetValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Vector3, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tweening.ColorTween
#include "Tweening/ColorTween.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Tweening.ColorTween.GetValue
UnityEngine::Color Tweening::ColorTween::GetValue(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::ColorTween::GetValue");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetValue", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::Color, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tweening.InterpolationType
#include "Tweening/InterpolationType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Tweening.InterpolationType Easing
Tweening::InterpolationType Tweening::InterpolationType::_get_Easing() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::InterpolationType::_get_Easing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::InterpolationType>("Tweening", "InterpolationType", "Easing"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.InterpolationType Easing
void Tweening::InterpolationType::_set_Easing(Tweening::InterpolationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::InterpolationType::_set_Easing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "InterpolationType", "Easing", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.InterpolationType AnimationCurve
Tweening::InterpolationType Tweening::InterpolationType::_get_AnimationCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::InterpolationType::_get_AnimationCurve");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::InterpolationType>("Tweening", "InterpolationType", "AnimationCurve"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.InterpolationType AnimationCurve
void Tweening::InterpolationType::_set_AnimationCurve(Tweening::InterpolationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::InterpolationType::_set_AnimationCurve");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "InterpolationType", "AnimationCurve", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tweening.EaseType
#include "Tweening/EaseType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType None
Tweening::EaseType Tweening::EaseType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "None"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType None
void Tweening::EaseType::_set_None(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType Linear
Tweening::EaseType Tweening::EaseType::_get_Linear() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_Linear");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "Linear"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType Linear
void Tweening::EaseType::_set_Linear(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_Linear");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "Linear", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType InSine
Tweening::EaseType Tweening::EaseType::_get_InSine() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_InSine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "InSine"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType InSine
void Tweening::EaseType::_set_InSine(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_InSine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "InSine", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType OutSine
Tweening::EaseType Tweening::EaseType::_get_OutSine() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_OutSine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "OutSine"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType OutSine
void Tweening::EaseType::_set_OutSine(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_OutSine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "OutSine", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType InOutSine
Tweening::EaseType Tweening::EaseType::_get_InOutSine() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_InOutSine");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "InOutSine"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType InOutSine
void Tweening::EaseType::_set_InOutSine(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_InOutSine");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "InOutSine", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType InQuad
Tweening::EaseType Tweening::EaseType::_get_InQuad() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_InQuad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "InQuad"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType InQuad
void Tweening::EaseType::_set_InQuad(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_InQuad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "InQuad", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType OutQuad
Tweening::EaseType Tweening::EaseType::_get_OutQuad() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_OutQuad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "OutQuad"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType OutQuad
void Tweening::EaseType::_set_OutQuad(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_OutQuad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "OutQuad", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType InOutQuad
Tweening::EaseType Tweening::EaseType::_get_InOutQuad() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_InOutQuad");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "InOutQuad"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType InOutQuad
void Tweening::EaseType::_set_InOutQuad(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_InOutQuad");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "InOutQuad", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType InCubic
Tweening::EaseType Tweening::EaseType::_get_InCubic() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_InCubic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "InCubic"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType InCubic
void Tweening::EaseType::_set_InCubic(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_InCubic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "InCubic", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType OutCubic
Tweening::EaseType Tweening::EaseType::_get_OutCubic() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_OutCubic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "OutCubic"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType OutCubic
void Tweening::EaseType::_set_OutCubic(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_OutCubic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "OutCubic", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType InOutCubic
Tweening::EaseType Tweening::EaseType::_get_InOutCubic() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_InOutCubic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "InOutCubic"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType InOutCubic
void Tweening::EaseType::_set_InOutCubic(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_InOutCubic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "InOutCubic", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType InQuart
Tweening::EaseType Tweening::EaseType::_get_InQuart() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_InQuart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "InQuart"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType InQuart
void Tweening::EaseType::_set_InQuart(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_InQuart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "InQuart", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType OutQuart
Tweening::EaseType Tweening::EaseType::_get_OutQuart() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_OutQuart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "OutQuart"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType OutQuart
void Tweening::EaseType::_set_OutQuart(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_OutQuart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "OutQuart", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType InOutQuart
Tweening::EaseType Tweening::EaseType::_get_InOutQuart() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_InOutQuart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "InOutQuart"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType InOutQuart
void Tweening::EaseType::_set_InOutQuart(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_InOutQuart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "InOutQuart", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType InQuint
Tweening::EaseType Tweening::EaseType::_get_InQuint() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_InQuint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "InQuint"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType InQuint
void Tweening::EaseType::_set_InQuint(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_InQuint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "InQuint", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType OutQuint
Tweening::EaseType Tweening::EaseType::_get_OutQuint() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_OutQuint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "OutQuint"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType OutQuint
void Tweening::EaseType::_set_OutQuint(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_OutQuint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "OutQuint", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType InOutQuint
Tweening::EaseType Tweening::EaseType::_get_InOutQuint() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_InOutQuint");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "InOutQuint"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType InOutQuint
void Tweening::EaseType::_set_InOutQuint(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_InOutQuint");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "InOutQuint", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType InExpo
Tweening::EaseType Tweening::EaseType::_get_InExpo() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_InExpo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "InExpo"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType InExpo
void Tweening::EaseType::_set_InExpo(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_InExpo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "InExpo", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType OutExpo
Tweening::EaseType Tweening::EaseType::_get_OutExpo() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_OutExpo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "OutExpo"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType OutExpo
void Tweening::EaseType::_set_OutExpo(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_OutExpo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "OutExpo", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType InOutExpo
Tweening::EaseType Tweening::EaseType::_get_InOutExpo() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_InOutExpo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "InOutExpo"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType InOutExpo
void Tweening::EaseType::_set_InOutExpo(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_InOutExpo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "InOutExpo", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType InCirc
Tweening::EaseType Tweening::EaseType::_get_InCirc() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_InCirc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "InCirc"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType InCirc
void Tweening::EaseType::_set_InCirc(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_InCirc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "InCirc", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType OutCirc
Tweening::EaseType Tweening::EaseType::_get_OutCirc() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_OutCirc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "OutCirc"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType OutCirc
void Tweening::EaseType::_set_OutCirc(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_OutCirc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "OutCirc", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType InOutCirc
Tweening::EaseType Tweening::EaseType::_get_InOutCirc() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_InOutCirc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "InOutCirc"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType InOutCirc
void Tweening::EaseType::_set_InOutCirc(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_InOutCirc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "InOutCirc", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType InBack
Tweening::EaseType Tweening::EaseType::_get_InBack() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_InBack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "InBack"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType InBack
void Tweening::EaseType::_set_InBack(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_InBack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "InBack", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType OutBack
Tweening::EaseType Tweening::EaseType::_get_OutBack() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_OutBack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "OutBack"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType OutBack
void Tweening::EaseType::_set_OutBack(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_OutBack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "OutBack", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType InOutBack
Tweening::EaseType Tweening::EaseType::_get_InOutBack() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_InOutBack");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "InOutBack"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType InOutBack
void Tweening::EaseType::_set_InOutBack(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_InOutBack");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "InOutBack", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType InElastic
Tweening::EaseType Tweening::EaseType::_get_InElastic() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_InElastic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "InElastic"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType InElastic
void Tweening::EaseType::_set_InElastic(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_InElastic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "InElastic", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType OutElastic
Tweening::EaseType Tweening::EaseType::_get_OutElastic() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_OutElastic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "OutElastic"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType OutElastic
void Tweening::EaseType::_set_OutElastic(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_OutElastic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "OutElastic", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType InOutElastic
Tweening::EaseType Tweening::EaseType::_get_InOutElastic() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_InOutElastic");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "InOutElastic"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType InOutElastic
void Tweening::EaseType::_set_InOutElastic(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_InOutElastic");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "InOutElastic", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType InBounce
Tweening::EaseType Tweening::EaseType::_get_InBounce() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_InBounce");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "InBounce"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType InBounce
void Tweening::EaseType::_set_InBounce(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_InBounce");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "InBounce", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType OutBounce
Tweening::EaseType Tweening::EaseType::_get_OutBounce() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_OutBounce");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "OutBounce"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType OutBounce
void Tweening::EaseType::_set_OutBounce(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_OutBounce");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "OutBounce", value));
}
// Autogenerated static field getter
// Get static field: static public Tweening.EaseType InOutBounce
Tweening::EaseType Tweening::EaseType::_get_InOutBounce() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_get_InOutBounce");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<Tweening::EaseType>("Tweening", "EaseType", "InOutBounce"));
}
// Autogenerated static field setter
// Set static field: static public Tweening.EaseType InOutBounce
void Tweening::EaseType::_set_InOutBounce(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::EaseType::_set_InOutBounce");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Tweening", "EaseType", "InOutBounce", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tweening.Interpolation
#include "Tweening/Interpolation.hpp"
// Including type: Tweening.EaseType
#include "Tweening/EaseType.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Tweening.Interpolation.Interpolate
float Tweening::Interpolation::Interpolate(float t, Tweening::EaseType easeType) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Interpolation::Interpolate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("Tweening", "Interpolation", "Interpolate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t, easeType)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, t, easeType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tweening.Tween
#include "Tweening/Tween.hpp"
// Including type: System.Action
#include "System/Action.hpp"
// Including type: UnityEngine.AnimationCurve
#include "UnityEngine/AnimationCurve.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Tweening.Tween.get_progress
float Tweening::Tween::get_progress() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::get_progress");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_progress", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Tweening.Tween.get_time
float Tweening::Tween::get_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::get_time");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_time", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Tweening.Tween.set_time
void Tweening::Tween::set_time(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::set_time");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_time", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tweening.Tween.get_duration
float Tweening::Tween::get_duration() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::get_duration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_duration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Tweening.Tween.set_duration
void Tweening::Tween::set_duration(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::set_duration");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_duration", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tweening.Tween.get_loop
bool Tweening::Tween::get_loop() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::get_loop");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_loop", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Tweening.Tween.set_loop
void Tweening::Tween::set_loop(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::set_loop");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_loop", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tweening.Tween.get_delay
float Tweening::Tween::get_delay() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::get_delay");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_delay", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Tweening.Tween.set_delay
void Tweening::Tween::set_delay(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::set_delay");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_delay", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tweening.Tween.get_isStarted
bool Tweening::Tween::get_isStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::get_isStarted");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isStarted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Tweening.Tween.set_isStarted
void Tweening::Tween::set_isStarted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::set_isStarted");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_isStarted", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tweening.Tween.get_isActive
bool Tweening::Tween::get_isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::get_isActive");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isActive", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Tweening.Tween.get_isComplete
bool Tweening::Tween::get_isComplete() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::get_isComplete");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isComplete", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Tweening.Tween.get_isKilled
bool Tweening::Tween::get_isKilled() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::get_isKilled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_isKilled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Tweening.Tween.set_isKilled
void Tweening::Tween::set_isKilled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::set_isKilled");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_isKilled", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tweening.Tween.get_interpolationType
Tweening::InterpolationType Tweening::Tween::get_interpolationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::get_interpolationType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_interpolationType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Tweening::InterpolationType, false>(this, ___internal__method);
}
// Autogenerated method: Tweening.Tween.set_interpolationType
void Tweening::Tween::set_interpolationType(Tweening::InterpolationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::set_interpolationType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_interpolationType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tweening.Tween.get_easeType
Tweening::EaseType Tweening::Tween::get_easeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::get_easeType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_easeType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<Tweening::EaseType, false>(this, ___internal__method);
}
// Autogenerated method: Tweening.Tween.set_easeType
void Tweening::Tween::set_easeType(Tweening::EaseType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::set_easeType");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_easeType", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tweening.Tween.get_animationCurve
UnityEngine::AnimationCurve* Tweening::Tween::get_animationCurve() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::get_animationCurve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_animationCurve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<UnityEngine::AnimationCurve*, false>(this, ___internal__method);
}
// Autogenerated method: Tweening.Tween.set_animationCurve
void Tweening::Tween::set_animationCurve(UnityEngine::AnimationCurve* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::set_animationCurve");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "set_animationCurve", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(value)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Tweening.Tween.Kill
void Tweening::Tween::Kill() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::Kill");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Kill", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tweening.Tween.Restart
void Tweening::Tween::Restart() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::Restart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Restart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tweening.Tween.Update
void Tweening::Tween::Update(float deltaTime) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(deltaTime)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, deltaTime);
}
// Autogenerated method: Tweening.Tween.Sample
void Tweening::Tween::Sample(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::Sample");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Sample", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, t);
}
// Autogenerated method: Tweening.Tween.Interpolate
float Tweening::Tween::Interpolate(float t) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::Tween::Interpolate");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Interpolate", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(t)));
  return ::il2cpp_utils::RunMethodThrow<float, false>(this, ___internal__method, t);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Tweening.TweeningManager
#include "Tweening/TweeningManager.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Tweening.Tween
#include "Tweening/Tween.hpp"
// Including type: System.Collections.Generic.HashSet`1
#include "System/Collections/Generic/HashSet_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Tweening.TweeningManager.Start
void Tweening::TweeningManager::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::TweeningManager::Start");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tweening.TweeningManager.Update
void Tweening::TweeningManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::TweeningManager::Update");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Tweening.TweeningManager.AddTween
Tweening::Tween* Tweening::TweeningManager::AddTween(Tweening::Tween* tween, UnityEngine::Object* owner) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::TweeningManager::AddTween");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddTween", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tween, owner)));
  return ::il2cpp_utils::RunMethodThrow<Tweening::Tween*, false>(this, ___internal__method, tween, owner);
}
// Autogenerated method: Tweening.TweeningManager.RestartTween
Tweening::Tween* Tweening::TweeningManager::RestartTween(Tweening::Tween* tween, UnityEngine::Object* owner) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::TweeningManager::RestartTween");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "RestartTween", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tween, owner)));
  return ::il2cpp_utils::RunMethodThrow<Tweening::Tween*, false>(this, ___internal__method, tween, owner);
}
// Autogenerated method: Tweening.TweeningManager.KillAllTweens
void Tweening::TweeningManager::KillAllTweens(UnityEngine::Object* owner) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::TweeningManager::KillAllTweens");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "KillAllTweens", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(owner)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, owner);
}
// Autogenerated method: Tweening.TweeningManager.AddTweenToOwnerDictionary
void Tweening::TweeningManager::AddTweenToOwnerDictionary(Tweening::Tween* tween, UnityEngine::Object* owner) {
  static auto ___internal__logger = ::Logger::get().WithContext("Tweening::TweeningManager::AddTweenToOwnerDictionary");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "AddTweenToOwnerDictionary", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(tween, owner)));
  ::il2cpp_utils::RunMethodThrow<void, false>(this, ___internal__method, tween, owner);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Menu.ViewControllers.EditAvatarHistorySnapshot
#include "Menu/ViewControllers/EditAvatarHistorySnapshot.hpp"
// Including type: AvatarData
#include "GlobalNamespace/AvatarData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Menu.ViewControllers.EditAvatarHistorySnapshot.get_avatarEditPart
GlobalNamespace::EditAvatarViewController::AvatarEditPart Menu::ViewControllers::EditAvatarHistorySnapshot::get_avatarEditPart() {
  static auto ___internal__logger = ::Logger::get().WithContext("Menu::ViewControllers::EditAvatarHistorySnapshot::get_avatarEditPart");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_avatarEditPart", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::EditAvatarViewController::AvatarEditPart, false>(this, ___internal__method);
}
// Autogenerated method: Menu.ViewControllers.EditAvatarHistorySnapshot.get_avatarData
GlobalNamespace::AvatarData* Menu::ViewControllers::EditAvatarHistorySnapshot::get_avatarData() {
  static auto ___internal__logger = ::Logger::get().WithContext("Menu::ViewControllers::EditAvatarHistorySnapshot::get_avatarData");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_avatarData", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<GlobalNamespace::AvatarData*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: DataModels.PlayerAvatar.AvatarRandomizer
#include "DataModels/PlayerAvatar/AvatarRandomizer.hpp"
// Including type: DataModels.PlayerAvatar.RandomizeAvatarColorMap
#include "DataModels/PlayerAvatar/RandomizeAvatarColorMap.hpp"
// Including type: AvatarData
#include "GlobalNamespace/AvatarData.hpp"
// Including type: AvatarPartsModel
#include "GlobalNamespace/AvatarPartsModel.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [DoesNotRequireDomainReloadInitAttribute] Offset: 0xDD34C0
// Autogenerated static field getter
// Get static field: static private readonly DataModels.PlayerAvatar.RandomizeAvatarColorMap[] _randomizeColorsParamsCollection
::Array<DataModels::PlayerAvatar::RandomizeAvatarColorMap*>* DataModels::PlayerAvatar::AvatarRandomizer::_get__randomizeColorsParamsCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("DataModels::PlayerAvatar::AvatarRandomizer::_get__randomizeColorsParamsCollection");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Array<DataModels::PlayerAvatar::RandomizeAvatarColorMap*>*>("DataModels.PlayerAvatar", "AvatarRandomizer", "_randomizeColorsParamsCollection"));
}
// Autogenerated static field setter
// Set static field: static private readonly DataModels.PlayerAvatar.RandomizeAvatarColorMap[] _randomizeColorsParamsCollection
void DataModels::PlayerAvatar::AvatarRandomizer::_set__randomizeColorsParamsCollection(::Array<DataModels::PlayerAvatar::RandomizeAvatarColorMap*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("DataModels::PlayerAvatar::AvatarRandomizer::_set__randomizeColorsParamsCollection");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("DataModels.PlayerAvatar", "AvatarRandomizer", "_randomizeColorsParamsCollection", value));
}
// Autogenerated method: DataModels.PlayerAvatar.AvatarRandomizer..cctor
void DataModels::PlayerAvatar::AvatarRandomizer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("DataModels::PlayerAvatar::AvatarRandomizer::.cctor");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("DataModels.PlayerAvatar", "AvatarRandomizer", ".cctor", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: DataModels.PlayerAvatar.AvatarRandomizer.RandomizeAll
void DataModels::PlayerAvatar::AvatarRandomizer::RandomizeAll(GlobalNamespace::AvatarData* avatarData, GlobalNamespace::AvatarPartsModel* avatarPartsModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("DataModels::PlayerAvatar::AvatarRandomizer::RandomizeAll");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("DataModels.PlayerAvatar", "AvatarRandomizer", "RandomizeAll", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(avatarData, avatarPartsModel)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, avatarData, avatarPartsModel);
}
// Autogenerated method: DataModels.PlayerAvatar.AvatarRandomizer.RandomizeModels
void DataModels::PlayerAvatar::AvatarRandomizer::RandomizeModels(GlobalNamespace::AvatarData* avatarData, GlobalNamespace::AvatarPartsModel* avatarPartsModel) {
  static auto ___internal__logger = ::Logger::get().WithContext("DataModels::PlayerAvatar::AvatarRandomizer::RandomizeModels");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("DataModels.PlayerAvatar", "AvatarRandomizer", "RandomizeModels", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(avatarData, avatarPartsModel)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, avatarData, avatarPartsModel);
}
// Autogenerated method: DataModels.PlayerAvatar.AvatarRandomizer.RandomizeColors
void DataModels::PlayerAvatar::AvatarRandomizer::RandomizeColors(GlobalNamespace::AvatarData* avatarData) {
  static auto ___internal__logger = ::Logger::get().WithContext("DataModels::PlayerAvatar::AvatarRandomizer::RandomizeColors");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("DataModels.PlayerAvatar", "AvatarRandomizer", "RandomizeColors", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(avatarData)));
  ::il2cpp_utils::RunMethodThrow<void, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, avatarData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: DataModels.PlayerAvatar.RandomizeAvatarColorMap
#include "DataModels/PlayerAvatar/RandomizeAvatarColorMap.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: DataModels.PlayerAvatar.RandomizeAvatarColorMap.get_totalIndices
int DataModels::PlayerAvatar::RandomizeAvatarColorMap::get_totalIndices() {
  static auto ___internal__logger = ::Logger::get().WithContext("DataModels::PlayerAvatar::RandomizeAvatarColorMap::get_totalIndices");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_totalIndices", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<int, false>(this, ___internal__method);
}
// Autogenerated method: DataModels.PlayerAvatar.RandomizeAvatarColorMap.get_colorIndices
::Array<int>* DataModels::PlayerAvatar::RandomizeAvatarColorMap::get_colorIndices() {
  static auto ___internal__logger = ::Logger::get().WithContext("DataModels::PlayerAvatar::RandomizeAvatarColorMap::get_colorIndices");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "get_colorIndices", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Array<int>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LeaderboardsDTO.LoginRequestDTO
#include "LeaderboardsDTO/LoginRequestDTO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LeaderboardsDTO.LeaderboardQueryDTO
#include "LeaderboardsDTO/LeaderboardQueryDTO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LeaderboardsDTO.LeaderboardQueryDTO/ScoresScope
#include "LeaderboardsDTO/LeaderboardQueryDTO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LeaderboardsDTO.LeaderboardQueryDTO/ScoresScope Global
LeaderboardsDTO::LeaderboardQueryDTO::ScoresScope LeaderboardsDTO::LeaderboardQueryDTO::ScoresScope::_get_Global() {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::LeaderboardQueryDTO::ScoresScope::_get_Global");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LeaderboardsDTO::LeaderboardQueryDTO::ScoresScope>("LeaderboardsDTO", "LeaderboardQueryDTO/ScoresScope", "Global"));
}
// Autogenerated static field setter
// Set static field: static public LeaderboardsDTO.LeaderboardQueryDTO/ScoresScope Global
void LeaderboardsDTO::LeaderboardQueryDTO::ScoresScope::_set_Global(LeaderboardsDTO::LeaderboardQueryDTO::ScoresScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::LeaderboardQueryDTO::ScoresScope::_set_Global");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LeaderboardsDTO", "LeaderboardQueryDTO/ScoresScope", "Global", value));
}
// Autogenerated static field getter
// Get static field: static public LeaderboardsDTO.LeaderboardQueryDTO/ScoresScope Friends
LeaderboardsDTO::LeaderboardQueryDTO::ScoresScope LeaderboardsDTO::LeaderboardQueryDTO::ScoresScope::_get_Friends() {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::LeaderboardQueryDTO::ScoresScope::_get_Friends");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LeaderboardsDTO::LeaderboardQueryDTO::ScoresScope>("LeaderboardsDTO", "LeaderboardQueryDTO/ScoresScope", "Friends"));
}
// Autogenerated static field setter
// Set static field: static public LeaderboardsDTO.LeaderboardQueryDTO/ScoresScope Friends
void LeaderboardsDTO::LeaderboardQueryDTO::ScoresScope::_set_Friends(LeaderboardsDTO::LeaderboardQueryDTO::ScoresScope value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::LeaderboardQueryDTO::ScoresScope::_set_Friends");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LeaderboardsDTO", "LeaderboardQueryDTO/ScoresScope", "Friends", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LeaderboardsDTO.TokenDTO
#include "LeaderboardsDTO/TokenDTO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LeaderboardsDTO.LevelScoreResultDTO
#include "LeaderboardsDTO/LevelScoreResultDTO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: LeaderboardsDTO.LeaderboardEntryDTO
#include "LeaderboardsDTO/LeaderboardEntryDTO.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LeaderboardsDTO.GameplayModifiersDto
#include "LeaderboardsDTO/GameplayModifiersDto.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LeaderboardsDTO.GameplayModifiersDto None
LeaderboardsDTO::GameplayModifiersDto LeaderboardsDTO::GameplayModifiersDto::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LeaderboardsDTO::GameplayModifiersDto>("LeaderboardsDTO", "GameplayModifiersDto", "None"));
}
// Autogenerated static field setter
// Set static field: static public LeaderboardsDTO.GameplayModifiersDto None
void LeaderboardsDTO::GameplayModifiersDto::_set_None(LeaderboardsDTO::GameplayModifiersDto value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LeaderboardsDTO", "GameplayModifiersDto", "None", value));
}
// Autogenerated static field getter
// Get static field: static public LeaderboardsDTO.GameplayModifiersDto NoFail
LeaderboardsDTO::GameplayModifiersDto LeaderboardsDTO::GameplayModifiersDto::_get_NoFail() {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_get_NoFail");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LeaderboardsDTO::GameplayModifiersDto>("LeaderboardsDTO", "GameplayModifiersDto", "NoFail"));
}
// Autogenerated static field setter
// Set static field: static public LeaderboardsDTO.GameplayModifiersDto NoFail
void LeaderboardsDTO::GameplayModifiersDto::_set_NoFail(LeaderboardsDTO::GameplayModifiersDto value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_set_NoFail");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LeaderboardsDTO", "GameplayModifiersDto", "NoFail", value));
}
// Autogenerated static field getter
// Get static field: static public LeaderboardsDTO.GameplayModifiersDto InstaFail
LeaderboardsDTO::GameplayModifiersDto LeaderboardsDTO::GameplayModifiersDto::_get_InstaFail() {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_get_InstaFail");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LeaderboardsDTO::GameplayModifiersDto>("LeaderboardsDTO", "GameplayModifiersDto", "InstaFail"));
}
// Autogenerated static field setter
// Set static field: static public LeaderboardsDTO.GameplayModifiersDto InstaFail
void LeaderboardsDTO::GameplayModifiersDto::_set_InstaFail(LeaderboardsDTO::GameplayModifiersDto value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_set_InstaFail");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LeaderboardsDTO", "GameplayModifiersDto", "InstaFail", value));
}
// Autogenerated static field getter
// Get static field: static public LeaderboardsDTO.GameplayModifiersDto FailOnSaberClash
LeaderboardsDTO::GameplayModifiersDto LeaderboardsDTO::GameplayModifiersDto::_get_FailOnSaberClash() {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_get_FailOnSaberClash");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LeaderboardsDTO::GameplayModifiersDto>("LeaderboardsDTO", "GameplayModifiersDto", "FailOnSaberClash"));
}
// Autogenerated static field setter
// Set static field: static public LeaderboardsDTO.GameplayModifiersDto FailOnSaberClash
void LeaderboardsDTO::GameplayModifiersDto::_set_FailOnSaberClash(LeaderboardsDTO::GameplayModifiersDto value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_set_FailOnSaberClash");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LeaderboardsDTO", "GameplayModifiersDto", "FailOnSaberClash", value));
}
// Autogenerated static field getter
// Get static field: static public LeaderboardsDTO.GameplayModifiersDto FastNotes
LeaderboardsDTO::GameplayModifiersDto LeaderboardsDTO::GameplayModifiersDto::_get_FastNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_get_FastNotes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LeaderboardsDTO::GameplayModifiersDto>("LeaderboardsDTO", "GameplayModifiersDto", "FastNotes"));
}
// Autogenerated static field setter
// Set static field: static public LeaderboardsDTO.GameplayModifiersDto FastNotes
void LeaderboardsDTO::GameplayModifiersDto::_set_FastNotes(LeaderboardsDTO::GameplayModifiersDto value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_set_FastNotes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LeaderboardsDTO", "GameplayModifiersDto", "FastNotes", value));
}
// Autogenerated static field getter
// Get static field: static public LeaderboardsDTO.GameplayModifiersDto DisappearingArrows
LeaderboardsDTO::GameplayModifiersDto LeaderboardsDTO::GameplayModifiersDto::_get_DisappearingArrows() {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_get_DisappearingArrows");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LeaderboardsDTO::GameplayModifiersDto>("LeaderboardsDTO", "GameplayModifiersDto", "DisappearingArrows"));
}
// Autogenerated static field setter
// Set static field: static public LeaderboardsDTO.GameplayModifiersDto DisappearingArrows
void LeaderboardsDTO::GameplayModifiersDto::_set_DisappearingArrows(LeaderboardsDTO::GameplayModifiersDto value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_set_DisappearingArrows");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LeaderboardsDTO", "GameplayModifiersDto", "DisappearingArrows", value));
}
// Autogenerated static field getter
// Get static field: static public LeaderboardsDTO.GameplayModifiersDto NoBombs
LeaderboardsDTO::GameplayModifiersDto LeaderboardsDTO::GameplayModifiersDto::_get_NoBombs() {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_get_NoBombs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LeaderboardsDTO::GameplayModifiersDto>("LeaderboardsDTO", "GameplayModifiersDto", "NoBombs"));
}
// Autogenerated static field setter
// Set static field: static public LeaderboardsDTO.GameplayModifiersDto NoBombs
void LeaderboardsDTO::GameplayModifiersDto::_set_NoBombs(LeaderboardsDTO::GameplayModifiersDto value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_set_NoBombs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LeaderboardsDTO", "GameplayModifiersDto", "NoBombs", value));
}
// Autogenerated static field getter
// Get static field: static public LeaderboardsDTO.GameplayModifiersDto SongSpeedFaster
LeaderboardsDTO::GameplayModifiersDto LeaderboardsDTO::GameplayModifiersDto::_get_SongSpeedFaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_get_SongSpeedFaster");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LeaderboardsDTO::GameplayModifiersDto>("LeaderboardsDTO", "GameplayModifiersDto", "SongSpeedFaster"));
}
// Autogenerated static field setter
// Set static field: static public LeaderboardsDTO.GameplayModifiersDto SongSpeedFaster
void LeaderboardsDTO::GameplayModifiersDto::_set_SongSpeedFaster(LeaderboardsDTO::GameplayModifiersDto value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_set_SongSpeedFaster");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LeaderboardsDTO", "GameplayModifiersDto", "SongSpeedFaster", value));
}
// Autogenerated static field getter
// Get static field: static public LeaderboardsDTO.GameplayModifiersDto SongSpeedSlower
LeaderboardsDTO::GameplayModifiersDto LeaderboardsDTO::GameplayModifiersDto::_get_SongSpeedSlower() {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_get_SongSpeedSlower");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LeaderboardsDTO::GameplayModifiersDto>("LeaderboardsDTO", "GameplayModifiersDto", "SongSpeedSlower"));
}
// Autogenerated static field setter
// Set static field: static public LeaderboardsDTO.GameplayModifiersDto SongSpeedSlower
void LeaderboardsDTO::GameplayModifiersDto::_set_SongSpeedSlower(LeaderboardsDTO::GameplayModifiersDto value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_set_SongSpeedSlower");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LeaderboardsDTO", "GameplayModifiersDto", "SongSpeedSlower", value));
}
// Autogenerated static field getter
// Get static field: static public LeaderboardsDTO.GameplayModifiersDto EnabledObstacleTypeFullHeightOnly
LeaderboardsDTO::GameplayModifiersDto LeaderboardsDTO::GameplayModifiersDto::_get_EnabledObstacleTypeFullHeightOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_get_EnabledObstacleTypeFullHeightOnly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LeaderboardsDTO::GameplayModifiersDto>("LeaderboardsDTO", "GameplayModifiersDto", "EnabledObstacleTypeFullHeightOnly"));
}
// Autogenerated static field setter
// Set static field: static public LeaderboardsDTO.GameplayModifiersDto EnabledObstacleTypeFullHeightOnly
void LeaderboardsDTO::GameplayModifiersDto::_set_EnabledObstacleTypeFullHeightOnly(LeaderboardsDTO::GameplayModifiersDto value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_set_EnabledObstacleTypeFullHeightOnly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LeaderboardsDTO", "GameplayModifiersDto", "EnabledObstacleTypeFullHeightOnly", value));
}
// Autogenerated static field getter
// Get static field: static public LeaderboardsDTO.GameplayModifiersDto EnabledObstacleTypeNoObstacles
LeaderboardsDTO::GameplayModifiersDto LeaderboardsDTO::GameplayModifiersDto::_get_EnabledObstacleTypeNoObstacles() {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_get_EnabledObstacleTypeNoObstacles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LeaderboardsDTO::GameplayModifiersDto>("LeaderboardsDTO", "GameplayModifiersDto", "EnabledObstacleTypeNoObstacles"));
}
// Autogenerated static field setter
// Set static field: static public LeaderboardsDTO.GameplayModifiersDto EnabledObstacleTypeNoObstacles
void LeaderboardsDTO::GameplayModifiersDto::_set_EnabledObstacleTypeNoObstacles(LeaderboardsDTO::GameplayModifiersDto value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_set_EnabledObstacleTypeNoObstacles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LeaderboardsDTO", "GameplayModifiersDto", "EnabledObstacleTypeNoObstacles", value));
}
// Autogenerated static field getter
// Get static field: static public LeaderboardsDTO.GameplayModifiersDto EnergyTypeBattery
LeaderboardsDTO::GameplayModifiersDto LeaderboardsDTO::GameplayModifiersDto::_get_EnergyTypeBattery() {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_get_EnergyTypeBattery");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LeaderboardsDTO::GameplayModifiersDto>("LeaderboardsDTO", "GameplayModifiersDto", "EnergyTypeBattery"));
}
// Autogenerated static field setter
// Set static field: static public LeaderboardsDTO.GameplayModifiersDto EnergyTypeBattery
void LeaderboardsDTO::GameplayModifiersDto::_set_EnergyTypeBattery(LeaderboardsDTO::GameplayModifiersDto value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_set_EnergyTypeBattery");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LeaderboardsDTO", "GameplayModifiersDto", "EnergyTypeBattery", value));
}
// Autogenerated static field getter
// Get static field: static public LeaderboardsDTO.GameplayModifiersDto StrictAngles
LeaderboardsDTO::GameplayModifiersDto LeaderboardsDTO::GameplayModifiersDto::_get_StrictAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_get_StrictAngles");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LeaderboardsDTO::GameplayModifiersDto>("LeaderboardsDTO", "GameplayModifiersDto", "StrictAngles"));
}
// Autogenerated static field setter
// Set static field: static public LeaderboardsDTO.GameplayModifiersDto StrictAngles
void LeaderboardsDTO::GameplayModifiersDto::_set_StrictAngles(LeaderboardsDTO::GameplayModifiersDto value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_set_StrictAngles");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LeaderboardsDTO", "GameplayModifiersDto", "StrictAngles", value));
}
// Autogenerated static field getter
// Get static field: static public LeaderboardsDTO.GameplayModifiersDto NoArrows
LeaderboardsDTO::GameplayModifiersDto LeaderboardsDTO::GameplayModifiersDto::_get_NoArrows() {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_get_NoArrows");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LeaderboardsDTO::GameplayModifiersDto>("LeaderboardsDTO", "GameplayModifiersDto", "NoArrows"));
}
// Autogenerated static field setter
// Set static field: static public LeaderboardsDTO.GameplayModifiersDto NoArrows
void LeaderboardsDTO::GameplayModifiersDto::_set_NoArrows(LeaderboardsDTO::GameplayModifiersDto value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_set_NoArrows");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LeaderboardsDTO", "GameplayModifiersDto", "NoArrows", value));
}
// Autogenerated static field getter
// Get static field: static public LeaderboardsDTO.GameplayModifiersDto GhostNotes
LeaderboardsDTO::GameplayModifiersDto LeaderboardsDTO::GameplayModifiersDto::_get_GhostNotes() {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_get_GhostNotes");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<LeaderboardsDTO::GameplayModifiersDto>("LeaderboardsDTO", "GameplayModifiersDto", "GhostNotes"));
}
// Autogenerated static field setter
// Set static field: static public LeaderboardsDTO.GameplayModifiersDto GhostNotes
void LeaderboardsDTO::GameplayModifiersDto::_set_GhostNotes(LeaderboardsDTO::GameplayModifiersDto value) {
  static auto ___internal__logger = ::Logger::get().WithContext("LeaderboardsDTO::GameplayModifiersDto::_set_GhostNotes");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LeaderboardsDTO", "GameplayModifiersDto", "GhostNotes", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OnlineServices.LeaderboardEntriesResult
#include "OnlineServices/LeaderboardEntriesResult.hpp"
// Including type: OnlineServices.LeaderboardEntryData
#include "OnlineServices/LeaderboardEntryData.hpp"
// Including type: OnlineServices.GetLeaderboardEntriesResult
#include "OnlineServices/GetLeaderboardEntriesResult.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServices.LeaderboardEntriesResult.ErrorResult
OnlineServices::LeaderboardEntriesResult* OnlineServices::LeaderboardEntriesResult::ErrorResult(::Il2CppString* localizedErrorMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::LeaderboardEntriesResult::ErrorResult");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("OnlineServices", "LeaderboardEntriesResult", "ErrorResult", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(localizedErrorMessage)));
  return ::il2cpp_utils::RunMethodThrow<OnlineServices::LeaderboardEntriesResult*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, localizedErrorMessage);
}
// Autogenerated method: OnlineServices.LeaderboardEntriesResult.get_notInicializedError
OnlineServices::LeaderboardEntriesResult* OnlineServices::LeaderboardEntriesResult::get_notInicializedError() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::LeaderboardEntriesResult::get_notInicializedError");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("OnlineServices", "LeaderboardEntriesResult", "get_notInicializedError", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<OnlineServices::LeaderboardEntriesResult*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OnlineServices.LeaderboardEntriesResult.get_somethingWentWrongError
OnlineServices::LeaderboardEntriesResult* OnlineServices::LeaderboardEntriesResult::get_somethingWentWrongError() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::LeaderboardEntriesResult::get_somethingWentWrongError");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("OnlineServices", "LeaderboardEntriesResult", "get_somethingWentWrongError", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<OnlineServices::LeaderboardEntriesResult*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OnlineServices.LeaderboardEntriesResult.get_onlineServicesUnavailableError
OnlineServices::LeaderboardEntriesResult* OnlineServices::LeaderboardEntriesResult::get_onlineServicesUnavailableError() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::LeaderboardEntriesResult::get_onlineServicesUnavailableError");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("OnlineServices", "LeaderboardEntriesResult", "get_onlineServicesUnavailableError", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<OnlineServices::LeaderboardEntriesResult*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
// Autogenerated method: OnlineServices.LeaderboardEntriesResult.FromGetLeaderboardEntriesResult
OnlineServices::LeaderboardEntriesResult* OnlineServices::LeaderboardEntriesResult::FromGetLeaderboardEntriesResult(OnlineServices::GetLeaderboardEntriesResult getLeaderboardEntriesResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::LeaderboardEntriesResult::FromGetLeaderboardEntriesResult");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("OnlineServices", "LeaderboardEntriesResult", "FromGetLeaderboardEntriesResult", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(getLeaderboardEntriesResult)));
  return ::il2cpp_utils::RunMethodThrow<OnlineServices::LeaderboardEntriesResult*, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method, getLeaderboardEntriesResult);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OnlineServices.ILeaderboardsModel
#include "OnlineServices/ILeaderboardsModel.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: System.Threading.Tasks.Task`1
#include "System/Threading/Tasks/Task_1.hpp"
// Including type: OnlineServices.GetLeaderboardFilterData
#include "OnlineServices/GetLeaderboardFilterData.hpp"
// Including type: System.Threading.CancellationToken
#include "System/Threading/CancellationToken.hpp"
// Including type: OnlineServices.LevelScoreResultsData
#include "OnlineServices/LevelScoreResultsData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServices.ILeaderboardsModel.GetLeaderboardId
::Il2CppString* OnlineServices::ILeaderboardsModel::GetLeaderboardId(GlobalNamespace::IDifficultyBeatmap* difficultyBeatmap) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::ILeaderboardsModel::GetLeaderboardId");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetLeaderboardId", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(difficultyBeatmap)));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method, difficultyBeatmap);
}
// Autogenerated method: OnlineServices.ILeaderboardsModel.GetLeaderboardEntriesAsync
System::Threading::Tasks::Task_1<OnlineServices::GetLeaderboardEntriesResult>* OnlineServices::ILeaderboardsModel::GetLeaderboardEntriesAsync(OnlineServices::GetLeaderboardFilterData leaderboardFilterData, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::ILeaderboardsModel::GetLeaderboardEntriesAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "GetLeaderboardEntriesAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(leaderboardFilterData, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<OnlineServices::GetLeaderboardEntriesResult>*, false>(this, ___internal__method, leaderboardFilterData, cancellationToken);
}
// Autogenerated method: OnlineServices.ILeaderboardsModel.SendLevelScoreResultAsync
System::Threading::Tasks::Task_1<OnlineServices::SendLeaderboardEntryResult>* OnlineServices::ILeaderboardsModel::SendLevelScoreResultAsync(OnlineServices::LevelScoreResultsData levelScoreResultsData, System::Threading::CancellationToken cancellationToken) {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::ILeaderboardsModel::SendLevelScoreResultAsync");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "SendLevelScoreResultAsync", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes(levelScoreResultsData, cancellationToken)));
  return ::il2cpp_utils::RunMethodThrow<System::Threading::Tasks::Task_1<OnlineServices::SendLeaderboardEntryResult>*, false>(this, ___internal__method, levelScoreResultsData, cancellationToken);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OnlineServices.LevelScoreResultsData
#include "OnlineServices/LevelScoreResultsData.hpp"
// Including type: IDifficultyBeatmap
#include "GlobalNamespace/IDifficultyBeatmap.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServices.LevelScoreResultsData.ToString
::Il2CppString* OnlineServices::LevelScoreResultsData::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::LevelScoreResultsData::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(*this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(*this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OnlineServices.LeaderboardEntryData
#include "OnlineServices/LeaderboardEntryData.hpp"
// Including type: GameplayModifiers
#include "GlobalNamespace/GameplayModifiers.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServices.LeaderboardEntryData.ToString
::Il2CppString* OnlineServices::LeaderboardEntryData::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::LeaderboardEntryData::ToString");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod(this, "ToString", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<::Il2CppString*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "extern/beatsaber-hook/shared/utils/typedefs.h"
// Including type: OnlineServices.GetLeaderboardEntriesResult
#include "OnlineServices/GetLeaderboardEntriesResult.hpp"
// Including type: OnlineServices.LeaderboardEntryData
#include "OnlineServices/LeaderboardEntryData.hpp"
#include "extern/beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "extern/beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OnlineServices.GetLeaderboardEntriesResult.get_resultWithError
OnlineServices::GetLeaderboardEntriesResult OnlineServices::GetLeaderboardEntriesResult::get_resultWithError() {
  static auto ___internal__logger = ::Logger::get().WithContext("OnlineServices::GetLeaderboardEntriesResult::get_resultWithError");
  static auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::FindMethod("OnlineServices", "GetLeaderboardEntriesResult", "get_resultWithError", std::vector<Il2CppClass*>{}, ::il2cpp_utils::ExtractTypes()));
  return ::il2cpp_utils::RunMethodThrow<OnlineServices::GetLeaderboardEntriesResult, false>(static_cast<Il2CppClass*>(nullptr), ___internal__method);
}
